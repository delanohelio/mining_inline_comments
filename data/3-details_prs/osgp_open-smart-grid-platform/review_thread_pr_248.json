{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDQzMjU2", "number": 248, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDo0MDozMVrODsAqHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzo1M1rODsobeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDc0NzE4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDo0MDozMVrOF8rs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDo0MDozMVrOF8rs6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDg5MA==", "bodyText": "most code in this class is the old executor, I rewrote some, and some code I kept intact.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r399174890", "createdAt": "2020-03-27T10:40:31Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -6,7 +6,7 @@\n  *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDc1MzEzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxNzozOVrOF9grtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxNzozOVrOF9grtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MjkzNQ==", "bodyText": "Er is wel een Unit Test voor deze Class, maar die covered niet wat er in deze Class gebeurd.\nHet gedrag in de super wordt hier wel getest.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400042935", "createdAt": "2020-03-30T09:17:39Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.AbstractCommandExecutor;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.entities.DlmsDevice;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsConnectionManager;\n+import org.opensmartgridplatform.adapter.protocol.dlms.exceptions.ProtocolAdapterException;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileResponseDto;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDc1ODcyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileNoSelectiveAccessHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxODo1OFrOF9gvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo0MTowOVrOF9hlvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzgxNg==", "bodyText": "Geen Unit Test", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400043816", "createdAt": "2020-03-30T09:18:58Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileNoSelectiveAccessHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.openmuc.jdlms.datatypes.DataObject;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.ScalerUnitInfo;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.CaptureObjectDefinitionDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryValueDto;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0NTkyMg==", "bodyText": "ik zal de executor test ombutsen naar een handler test.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400045922", "createdAt": "2020-03-30T09:22:17Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileNoSelectiveAccessHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.openmuc.jdlms.datatypes.DataObject;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.ScalerUnitInfo;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.CaptureObjectDefinitionDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryValueDto;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzgxNg=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1Nzc4OQ==", "bodyText": "ombudsman :-)", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400057789", "createdAt": "2020-03-30T09:41:09Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileNoSelectiveAccessHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.openmuc.jdlms.datatypes.DataObject;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.ScalerUnitInfo;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.CaptureObjectDefinitionDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryValueDto;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzgxNg=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDc4NTYwOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyNTo1NVrOF9hAaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyNTo1NVrOF9hAaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0ODIzMg==", "bodyText": "Dit kan beter in een eigen Unit Test class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400048232", "createdAt": "2020-03-30T09:25:55Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r\n         when(dlmsHelper.convertDataObjectToDateTime(any(DataObject.class))).thenCallRealMethod();\r\n         when(dlmsHelper.fromDateTimeValue(any())).thenCallRealMethod();\r\n+        when(dlmsHelper.getClockDefinition()).thenCallRealMethod();\r\n \r\n-        GetPowerQualityProfileCommandExecutor executor = new GetPowerQualityProfileCommandExecutor(dlmsHelper);\r\n+        GetPowerQualityProfileSelectiveAccessHandler handler = new GetPowerQualityProfileSelectiveAccessHandler(\r\n+                dlmsHelper);\r\n \r\n         // EXECUTE\r\n \r\n-        GetPowerQualityProfileResponseDto responseDto = executor.execute(conn, dlmsDevice, requestDto);\r\n+        GetPowerQualityProfileResponseDto responseDto = handler.handle(conn, dlmsDevice, requestDto);\r\n \r\n         // ASSERT\r\n \r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().size()).isEqualTo(2);\r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().get(0).getCaptureObjects().size()).isEqualTo(3);\r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().get(0).getProfileEntries().size()).isEqualTo(4);\r\n \r\n+        for (ProfileEntryDto profileEntryDto : responseDto.getPowerQualityProfileResponseDatas().get(0)\r\n+                                                          .getProfileEntries()) {\r\n+            assertThat(profileEntryDto.getProfileEntryValues().size()).isEqualTo(3);\r\n+        }\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testExecuteNoSelectiveAccess() throws ProtocolAdapterException {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDc5NjkzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyODozNFrOF9hHJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo0OTowM1rOF9l95w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw==", "bodyText": "Ik vind het moeilijk te beoordelen of deze test volledig is. Wat ik wel kan beoordelen is dat ik uit deze test niet kan opmaken wat de implementatie zou moeten doen. Dit kun je verbeteren door duidelijk test methode namen en laten zien wat je als inhoud verwacht. Tenzij de size van de verschillende collecties dat is waar het om gaat, maar wellicht is de inhoud van de collecties ook belangrijk?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400049957", "createdAt": "2020-03-30T09:28:34Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1NDY0Ng==", "bodyText": "er zit heel veel logica in de dlmshelper, hier is een aparte test voor. deze test transformeert data van de meter (die ik inschiet via de mock) naar een DTO. de ene handler filtert vooraf, en de andere achteraf.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400054646", "createdAt": "2020-03-30T09:35:53Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA3NDA3NQ==", "bodyText": "De unit testen komen niet 1 op 1 overeen met de classes. Dan willen we wel, lijkt me?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400074075", "createdAt": "2020-03-30T10:07:30Z", "author": {"login": "evanbarn"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA4MDI3MA==", "bodyText": "nee het idee was, omdat de executor alleen maar een if-then-else statement is, om deze testen samen te voegen tot 1 test, beetje lui maar wel effectief :-)\nik ben deze nu aan het herschikken naar 2 handler tests.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400080270", "createdAt": "2020-03-30T10:18:04Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyNjAyNQ==", "bodyText": "I don't know how everything should work together, but when I run the test with coverage GetPowerQualityProfileCommandExecutor.execute() isn't covered; this is weird because it is the only method in the class under test.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400126025", "createdAt": "2020-03-30T11:42:42Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyODE0NQ==", "bodyText": "Oh, sorry, duplicate apparently :-)", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400128145", "createdAt": "2020-03-30T11:46:31Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyOTUxMQ==", "bodyText": "@jandik I reshuffled the tests", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400129511", "createdAt": "2020-03-30T11:49:03Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDgwNDE2OnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/ObisCodeValuesDto.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTozMDowOVrOF9hLeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo0MDo1MVrOF9qPfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MTA2Ng==", "bodyText": "Dit is een mooi target voor Lombok!", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400051066", "createdAt": "2020-03-30T09:30:09Z", "author": {"login": "jboon"}, "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/ObisCodeValuesDto.java", "diffHunk": "@@ -30,6 +31,28 @@ public ObisCodeValuesDto(final byte a, final byte b, final byte c, final byte d,\n         this.f = f;\n     }\n \n+    public ObisCodeValuesDto(String obisCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MTIyMg==", "bodyText": "Scheelt je ook een Sonar check", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400051222", "createdAt": "2020-03-30T09:30:23Z", "author": {"login": "jboon"}, "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/ObisCodeValuesDto.java", "diffHunk": "@@ -30,6 +31,28 @@ public ObisCodeValuesDto(final byte a, final byte b, final byte c, final byte d,\n         this.f = f;\n     }\n \n+    public ObisCodeValuesDto(String obisCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MTA2Ng=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE5OTU1MQ==", "bodyText": "ja goed punt. ik ga echter lombok nu niet introduceren in osgp. dan is er 1 class die lombok gebrukt en wie weet wanneer er een andere class aangeraakt gaat worden.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400199551", "createdAt": "2020-03-30T13:40:51Z", "author": {"login": "coendamen"}, "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/ObisCodeValuesDto.java", "diffHunk": "@@ -30,6 +31,28 @@ public ObisCodeValuesDto(final byte a, final byte b, final byte c, final byte d,\n         this.f = f;\n     }\n \n+    public ObisCodeValuesDto(String obisCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MTA2Ng=="}, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTEwNzg5OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozNVrOF9kGXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxNDo0MVrOF9k3dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkxMQ==", "bodyText": "This method uses deprecated classes/methods.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400098911", "createdAt": "2020-03-30T10:51:35Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -267,12 +307,9 @@ private boolean isSelectedValue(final List<CaptureObjectDefinitionDto> selectedV\n             return true;\n         }\n \n-        for (final CaptureObjectDefinitionDto captureObjectDefinition : selectedValues) {\n-            if (this.isDefinitionOfSameObject(cosemObjectDefinitionDto, captureObjectDefinition)) {\n-                return true;\n-            }\n-        }\n-        return false;\n+        return selectedValues.stream().anyMatch(\n+                selectedValue -> this.isDefinitionOfSameObject(cosemObjectDefinitionDto, selectedValue));\n+\n     }\n \n     private boolean isClockDefinition(final CosemObjectDefinitionDto cosemObjectDefinitionDto) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 334}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMTQ3Nw==", "bodyText": "yes, the entire openmuc lib usage is deprecated, out of scope of this PR. needs investigation on how to proceed", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400111477", "createdAt": "2020-03-30T11:14:41Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -267,12 +307,9 @@ private boolean isSelectedValue(final List<CaptureObjectDefinitionDto> selectedV\n             return true;\n         }\n \n-        for (final CaptureObjectDefinitionDto captureObjectDefinition : selectedValues) {\n-            if (this.isDefinitionOfSameObject(cosemObjectDefinitionDto, captureObjectDefinition)) {\n-                return true;\n-            }\n-        }\n-        return false;\n+        return selectedValues.stream().anyMatch(\n+                selectedValue -> this.isDefinitionOfSameObject(cosemObjectDefinitionDto, selectedValue));\n+\n     }\n \n     private boolean isClockDefinition(final CosemObjectDefinitionDto cosemObjectDefinitionDto) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkxMQ=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 334}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTEyMTYyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1NToxM1rOF9kOlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1NToxM1rOF9kOlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMTAxMg==", "bodyText": "I would expect this method to be redundant, if equals() was defined properly on these DTO's and/or one can be mapped to the other.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400101012", "createdAt": "2020-03-30T10:55:13Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -293,16 +330,11 @@ private boolean isDefinitionOfSameObject(final CosemObjectDefinitionDto cosemObj\n         final byte[] obisBytesCosemObjectDefinition = cosemObjectDefinitionDto.getLogicalName().toByteArray();\n         final byte attributeIndexCosemObjectDefinition = (byte) cosemObjectDefinitionDto.getAttributeIndex();\n         final int dataIndexCosemObjectDefinition = cosemObjectDefinitionDto.getDataIndex();\n-\n         final int classIdCaptureObjectDefinition = captureObjectDefinition.getClassId();\n         final byte[] obisBytesCaptureObjectDefinition = captureObjectDefinition.getLogicalName().toByteArray();\n         final byte attributeIndexCaptureObjectDefinition = captureObjectDefinition.getAttributeIndex();\n-        final int dataIndexCaptureObjectDefinition;\n-        if (captureObjectDefinition.getDataIndex() == null) {\n-            dataIndexCaptureObjectDefinition = 0;\n-        } else {\n-            dataIndexCaptureObjectDefinition = captureObjectDefinition.getDataIndex();\n-        }\n+        final int dataIndexCaptureObjectDefinition =\n+                captureObjectDefinition.getDataIndex() == null ? 0 : captureObjectDefinition.getDataIndex();\n \n         return classIdCaptureObjectDefinition == classIdCosemObjectDefinition && Arrays", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 352}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTEzNDg4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1ODozMFrOF9kWXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzowODo1MVrOF9o2xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzAwNQ==", "bodyText": "Consider using classic for-loop with variable positionInDataObjectsList inlined; this ensures increment of the variable and improves readability", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400103005", "createdAt": "2020-03-30T10:58:30Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 498}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3NjgzNw==", "bodyText": "you are right, that would be an improvement.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400176837", "createdAt": "2020-03-30T13:08:51Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzAwNQ=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 498}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTE0MDU3OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowMDoxNFrOF9kaAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxNjowMFrOF9k57g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzkzNw==", "bodyText": "Potential NullPointerException. The comment suggests this will never happen, but I don't know if it never can happen.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400103937", "createdAt": "2020-03-30T11:00:14Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 538}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMjExMA==", "bodyText": "I tried with data en without getting data from the meter. so I think we are good. I do understand your point", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400112110", "createdAt": "2020-03-30T11:16:00Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzkzNw=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 538}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTE4MjQ4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxMzoyM1rOF9k0qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozMDo1MFrOF9lXwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMDc2MA==", "bodyText": "These look like enums; consider defining them as such.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400110760", "createdAt": "2020-03-30T11:13:23Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+\n+            for (DataObject dataObject : dataObjects) {\n+                scalerUnitInfos.add(createScalerUnitInfo(conn, device, dataObject));\n             }\n         }\n \n-        return result;\n+        return scalerUnitInfos;\n+    }\n+\n+    private ScalerUnitInfo createScalerUnitInfo(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final DataObject dataObject) throws ProtocolAdapterException {\n+\n+        final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n+                .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n+        final int classId = cosemObjectDefinitionDto.getClassId();\n+        final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n+\n+        if (this.hasScalerUnit(classId)) {\n+            final AttributeAddress addr = new AttributeAddress(classId, logicalName, SCALER_UNITS_MAP.get(classId));\n+            final List<GetResult> scalerUnitResult = this.dlmsHelper\n+                    .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n+            final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n+            return new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject);\n+        } else {\n+            return new ScalerUnitInfo(logicalName, classId, null);\n+        }\n+    }\n+\n+    private static List<String> getLogicalNamesPublicDefinableLoadProfile() {\n+\n+        return Arrays.asList(OBIS_CODE_CLOCK, NR_VOLTAGE_SAGS_L1, NR_VOLTAGE_SAGS_L2, NR_VOLTAGE_SAGS_L3,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 571}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExOTc0NA==", "bodyText": "you are right, how lazy of me :-)", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400119744", "createdAt": "2020-03-30T11:30:50Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+\n+            for (DataObject dataObject : dataObjects) {\n+                scalerUnitInfos.add(createScalerUnitInfo(conn, device, dataObject));\n             }\n         }\n \n-        return result;\n+        return scalerUnitInfos;\n+    }\n+\n+    private ScalerUnitInfo createScalerUnitInfo(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final DataObject dataObject) throws ProtocolAdapterException {\n+\n+        final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n+                .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n+        final int classId = cosemObjectDefinitionDto.getClassId();\n+        final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n+\n+        if (this.hasScalerUnit(classId)) {\n+            final AttributeAddress addr = new AttributeAddress(classId, logicalName, SCALER_UNITS_MAP.get(classId));\n+            final List<GetResult> scalerUnitResult = this.dlmsHelper\n+                    .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n+            final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n+            return new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject);\n+        } else {\n+            return new ScalerUnitInfo(logicalName, classId, null);\n+        }\n+    }\n+\n+    private static List<String> getLogicalNamesPublicDefinableLoadProfile() {\n+\n+        return Arrays.asList(OBIS_CODE_CLOCK, NR_VOLTAGE_SAGS_L1, NR_VOLTAGE_SAGS_L2, NR_VOLTAGE_SAGS_L3,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMDc2MA=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 571}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTI2MzI5OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/ScalerUnitInfo.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzo1M1rOF9lmOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo0Njo0MlrOF9l49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMzQ0OA==", "bodyText": "It seems to me this is a wrong modification: scalar sounds perfectly fine. Rename the class to ScalarUnitInfo?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400123448", "createdAt": "2020-03-30T11:37:53Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/ScalerUnitInfo.java", "diffHunk": "@@ -16,11 +16,11 @@\n     private final int classId;\n     private final DataObject scalerUnit;\n \n-    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalarUnit) {\n+    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalerUnit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyNzIxNA==", "bodyText": "yes, I had exactly the same idea, so I changed everything to SCALAR, only to find out that in the openmuc lib, the word SCALER is used... so I changed it all back again....", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400127214", "createdAt": "2020-03-30T11:44:50Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/ScalerUnitInfo.java", "diffHunk": "@@ -16,11 +16,11 @@\n     private final int classId;\n     private final DataObject scalerUnit;\n \n-    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalarUnit) {\n+    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalerUnit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMzQ0OA=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyODI0NQ==", "bodyText": "RegisterAttribute.SCALER_UNIT.attributeId());", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400128245", "createdAt": "2020-03-30T11:46:42Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/ScalerUnitInfo.java", "diffHunk": "@@ -16,11 +16,11 @@\n     private final int classId;\n     private final DataObject scalerUnit;\n \n-    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalarUnit) {\n+    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalerUnit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMzQ0OA=="}, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3680, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}