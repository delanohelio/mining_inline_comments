{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTczMjE5", "number": 342, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMToxODozN1rOEC6qHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMToxODozN1rOEC6qHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDkzNjYzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/infra/messaging/OsgpRequestMessageSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMToxODozN1rOGfqhcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDo0MDoyN1rOGfxVSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg1NTczMA==", "bodyText": "we could do without the anonymous inner class:\nthis.jmsTemplate.send(session -> {\nfinal ObjectMessage objectMessage = session.createObjectMessage(requestMessage);\nobjectMessage.setJMSType(messageType);\nobjectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,\nrequestMessage.getOrganisationIdentification());\nobjectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION, requestMessage.getDeviceIdentification());\nreturn objectMessage;\n\n});", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/342#discussion_r435855730", "createdAt": "2020-06-05T11:18:37Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/infra/messaging/OsgpRequestMessageSender.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.iec60870.infra.messaging;\n+\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.ObjectMessage;\n+import javax.jms.Session;\n+\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.jms.core.JmsTemplate;\n+import org.springframework.jms.core.MessageCreator;\n+import org.springframework.stereotype.Component;\n+\n+@Component(value = \"protocolIec60870OutboundOsgpCoreRequestsMessageSender\")\n+public class OsgpRequestMessageSender {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(OsgpRequestMessageSender.class);\n+\n+    @Autowired\n+    @Qualifier(\"protocolIec60870OutboundOsgpCoreRequestsJmsTemplate\")\n+    private JmsTemplate jmsTemplate;\n+\n+    public void send(final RequestMessage requestMessage, final String messageType) {\n+        LOGGER.info(\"Sending request message to OSGP.\");\n+\n+        this.jmsTemplate.send(new MessageCreator() {\n+\n+            @Override\n+            public Message createMessage(final Session session) throws JMSException {\n+                final ObjectMessage objectMessage = session.createObjectMessage(requestMessage);\n+                objectMessage.setJMSType(messageType);\n+                objectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,\n+                        requestMessage.getOrganisationIdentification());\n+                objectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION,\n+                        requestMessage.getDeviceIdentification());\n+\n+                return objectMessage;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0574cab644c09eeb708c3a387c0030bf984904b5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2NzMwNA==", "bodyText": "I replaced the anonymous class by a lambda expression.\nIt may be better if we figure out if one form or the other is a preferred way of handling things.\nWithout a declared preference this might just lead to changing \"in the other direction\" in some other pull request.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/342#discussion_r435967304", "createdAt": "2020-06-05T14:40:27Z", "author": {"login": "bvdzwet"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/infra/messaging/OsgpRequestMessageSender.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.iec60870.infra.messaging;\n+\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.ObjectMessage;\n+import javax.jms.Session;\n+\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.jms.core.JmsTemplate;\n+import org.springframework.jms.core.MessageCreator;\n+import org.springframework.stereotype.Component;\n+\n+@Component(value = \"protocolIec60870OutboundOsgpCoreRequestsMessageSender\")\n+public class OsgpRequestMessageSender {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(OsgpRequestMessageSender.class);\n+\n+    @Autowired\n+    @Qualifier(\"protocolIec60870OutboundOsgpCoreRequestsJmsTemplate\")\n+    private JmsTemplate jmsTemplate;\n+\n+    public void send(final RequestMessage requestMessage, final String messageType) {\n+        LOGGER.info(\"Sending request message to OSGP.\");\n+\n+        this.jmsTemplate.send(new MessageCreator() {\n+\n+            @Override\n+            public Message createMessage(final Session session) throws JMSException {\n+                final ObjectMessage objectMessage = session.createObjectMessage(requestMessage);\n+                objectMessage.setJMSType(messageType);\n+                objectMessage.setStringProperty(Constants.ORGANISATION_IDENTIFICATION,\n+                        requestMessage.getOrganisationIdentification());\n+                objectMessage.setStringProperty(Constants.DEVICE_IDENTIFICATION,\n+                        requestMessage.getDeviceIdentification());\n+\n+                return objectMessage;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg1NTczMA=="}, "originalCommit": {"oid": "0574cab644c09eeb708c3a387c0030bf984904b5"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3605, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}