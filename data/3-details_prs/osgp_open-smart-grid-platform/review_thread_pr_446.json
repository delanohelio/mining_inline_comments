{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MzMxODEw", "number": 446, "reviewThreads": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyOTozMFrOEvng3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNzo0NToyOFrOFRSgWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY1OTE4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyOTozMFrOHkseig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyOTozMFrOHkseig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzOTQ5OA==", "bodyText": "'This is the correct way of doing it' is not an explanation for suppressing a warning.\nif (LOGGER.isInfoEnabled()) {\nLOGGER.info(\"Initializing Cron Trigger bean with cron expression {}.\", this.cronExpression());\n}\nShould be the way to go if this.cronExpression() is a expensive method. So if you want to suppress the warning, you should say something about the complexity of the method called.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508239498", "createdAt": "2020-10-20T06:29:30Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "diffHunk": "@@ -61,17 +60,20 @@\n     @Resource\n     private Environment environment;\n \n-    @Autowired\n-    private CommunicationMonitoringTask communicationMonitoringTask;\n-\n+    // suppress warning concerning the string in the LOGGER.info. This is actually a correct way of doing it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY2ODE2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozMjoyNFrOHksjvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozMjoyNFrOHksjvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MDgzMA==", "bodyText": "so make communicationMonitoringEnabled a boolean method instead of suppressing the warning.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508240830", "createdAt": "2020-10-20T06:32:24Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "diffHunk": "@@ -61,17 +60,20 @@\n     @Resource\n     private Environment environment;\n \n-    @Autowired\n-    private CommunicationMonitoringTask communicationMonitoringTask;\n-\n+    // suppress warning concerning the string in the LOGGER.info. This is actually a correct way of doing it.\n+    @SuppressWarnings(\"squid:S2629\")\n     @Bean\n     public CronTrigger communicationMonitoringTaskCronTrigger() {\n+\n         LOGGER.info(\"Initializing Cron Trigger bean with cron expression {}.\", this.cronExpression());\n         return new CronTrigger(this.cronExpression());\n     }\n \n+    // suppress warning about using method for boolean in if. The method can only return a boolean, and not a null\n+    // value that would result in an issue.\n+    @SuppressWarnings(\"squid:S5411\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY3NDkyOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNDo0NVrOHksn7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNDo0NVrOHksn7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MTkwMg==", "bodyText": "Why did you move the autowired communicationMonitoringTask into a non-autowired parameter.\nThis will probably break functionality.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508241902", "createdAt": "2020-10-20T06:34:45Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/CommunicationMonitoringConfig.java", "diffHunk": "@@ -61,17 +60,20 @@\n     @Resource\n     private Environment environment;\n \n-    @Autowired\n-    private CommunicationMonitoringTask communicationMonitoringTask;\n-\n+    // suppress warning concerning the string in the LOGGER.info. This is actually a correct way of doing it.\n+    @SuppressWarnings(\"squid:S2629\")\n     @Bean\n     public CronTrigger communicationMonitoringTaskCronTrigger() {\n+\n         LOGGER.info(\"Initializing Cron Trigger bean with cron expression {}.\", this.cronExpression());\n         return new CronTrigger(this.cronExpression());\n     }\n \n+    // suppress warning about using method for boolean in if. The method can only return a boolean, and not a null\n+    // value that would result in an issue.\n+    @SuppressWarnings(\"squid:S5411\")\n     @Bean(destroyMethod = \"shutdown\")\n-    public TaskScheduler communicationMonitoringTaskScheduler() {\n+    public TaskScheduler communicationMonitoringTaskScheduler(CommunicationMonitoringTask communicationMonitoringTask) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY3OTgwOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-microgrids/src/main/java/org/opensmartgridplatform/adapter/domain/microgrids/application/config/CommunicationMonitoringConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNjoyMFrOHksqqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjozNjoyMFrOHksqqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MjYwMA==", "bodyText": "See comments on the da CommunicationMonitoringConfig", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508242600", "createdAt": "2020-10-20T06:36:20Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-microgrids/src/main/java/org/opensmartgridplatform/adapter/domain/microgrids/application/config/CommunicationMonitoringConfig.java", "diffHunk": "@@ -64,17 +64,17 @@\n     @Resource\n     private Environment environment;\n \n-    @Autowired\n-    private Runnable communicationMonitoringTask;\n-\n+    // suppress warning about string building in LOGGER. The way it is done here is actually correct.\n+    @SuppressWarnings(\"squid:S2629\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzcxNzc1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo0OTowMlrOHktBmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo0OTowMlrOHktBmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0ODQ3Mg==", "bodyText": "This sort of comment (I changed ....) should not be in code, I would put it in a commit message.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508248472", "createdAt": "2020-10-20T06:49:02Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "diffHunk": "@@ -120,12 +120,16 @@ public CreateOrganisationResponse createOrganisation(\n         try {\n             this.deviceManagementService.addOrganisation(organisationIdentification, organisation);\n         } catch (final ConstraintViolationException e) {\n+            // I changed this on several places, but I will comment here on the first place what I changed and why.\n+            // This catch thew a new error, that was supposed to be catched by the last catch. I presume this is done\n+            // in order to convert the error to a more useful one and therefor I kept both the error and the logging,\n+            // but made it call the method with the error rather than throwing it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzcyODk5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo1MjozMlrOHktIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjo1MjozMlrOHktIPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1MDE3Mg==", "bodyText": "This changes the exception thrown from a FunctionalException into a TechnicalException with less information on what is the error.\nTo prevent such a situation, first write a test, then refactor. If the test fails, you know you broke something.\nRevert the changes.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508250172", "createdAt": "2020-10-20T06:52:32Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "diffHunk": "@@ -120,12 +120,16 @@ public CreateOrganisationResponse createOrganisation(\n         try {\n             this.deviceManagementService.addOrganisation(organisationIdentification, organisation);\n         } catch (final ConstraintViolationException e) {\n+            // I changed this on several places, but I will comment here on the first place what I changed and why.\n+            // This catch thew a new error, that was supposed to be catched by the last catch. I presume this is done\n+            // in order to convert the error to a more useful one and therefor I kept both the error and the logging,\n+            // but made it call the method with the error rather than throwing it.\n             LOGGER.error(EXCEPTION_OCCURRED, e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_ADMIN,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_ADMIN,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkzMjc2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0ODozOVrOHkvDFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0ODozOVrOHkvDFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MTYyMg==", "bodyText": "Changes are fine. To prove no functionality has changed, write a unit test", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508281622", "createdAt": "2020-10-20T07:48:39Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementService.java", "diffHunk": "@@ -240,10 +240,10 @@ public Organisation findOrganisation(@Identification final String organisationId\n         if (description == null && descriptionStartsWith == null) {\n             return specification;\n         }\n-        if (description == null && descriptionStartsWith != null) {\n+        if (description == null) {\n             return specification.and(descriptionStartsWithSpecification);\n         }\n-        if (description != null && descriptionStartsWith == null) {\n+        if (descriptionStartsWith == null) {\n             return specification.and(descriptionSpecification);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkzNTUxOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/ConfigurationManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OToxOFrOHkvEtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OToxOFrOHkvEtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MjAzOA==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508282038", "createdAt": "2020-10-20T07:49:18Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/ConfigurationManagementEndpoint.java", "diffHunk": "@@ -105,8 +105,8 @@ public SetConfigurationAsyncResponse setConfiguration(\n             response.setAsyncResponse(asyncResponse);\n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(\"Exception: {}, StackTrace: {}\", e.getMessage(), e.getStackTrace(), e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkzNjY3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceInstallationEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OTozMlrOHkvFYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OTozMlrOHkvFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MjIxMQ==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508282211", "createdAt": "2020-10-20T07:49:32Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceInstallationEndpoint.java", "diffHunk": "@@ -153,12 +153,12 @@ public AddDeviceResponse addDevice(@OrganisationIdentification final String orga\n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(EXCEPTION_WHILE_ADDING_DEVICE, e.getMessage(), request.getDevice().getDeviceIdentification(),\n                     organisationIdentification, e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkzNzcwOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OTo0N1rOHkvF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0OTo0N1rOHkvF-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MjM2Mg==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508282362", "createdAt": "2020-10-20T07:49:47Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceManagementEndpoint.java", "diffHunk": "@@ -135,8 +135,8 @@ public FindOrganisationResponse findOrganisation(\n                     org.opensmartgridplatform.adapter.ws.schema.core.devicemanagement.Organisation.class));\n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(EXCEPTION, e.getMessage(), e.getStackTrace(), e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_CORE,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzk3NDkyOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1ODozN1rOHkvcwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1ODozN1rOHkvcwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4ODE5Mw==", "bodyText": "Don't suppress the warning, change the line to\nLOGGER.error(\"FindEventsRequest Exception {}\", e.getMessage(), e);", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508288193", "createdAt": "2020-10-20T07:58:37Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -123,6 +123,9 @@ public FindEventsAsyncResponse findEventsRequest(\n         return response;\n     }\n \n+    // suppress warnings about the string in the final LOGGER. THere are 3 arguments provided that SonarLint expects\n+    // to be part of the string, but they are actually arguments for the error method.\n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAwOTkxOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzoxNlrOHkvyIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzoxNlrOHkvyIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5MzY2Ng==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508293666", "createdAt": "2020-10-20T08:07:16Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -152,8 +155,8 @@ public FindEventsResponse getFindEventsResponse(@OrganisationIdentification fina\n \n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(\"FindEventsRequest Exception\", e.getMessage(), e.getStackTrace(), e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_SMART_METERING,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_SMART_METERING,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxMTE1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzozOVrOHkvy9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzozOVrOHkvy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5Mzg3OA==", "bodyText": "Explanation is missing.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508293878", "createdAt": "2020-10-20T08:07:39Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -221,6 +224,7 @@ public EnableDebuggingAsyncResponse enableDebuggingRequest(\n         return response;\n     }\n \n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxMjA5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzo1NFrOHkvzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowNzo1NFrOHkvzlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDAzNg==", "bodyText": "Explanation is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294036", "createdAt": "2020-10-20T08:07:54Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -285,6 +289,7 @@ public DisableDebuggingAsyncResponse disableDebuggingRequest(\n         return response;\n     }\n \n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxMzc3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODoyMlrOHkv0sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODoyMlrOHkv0sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDMyMw==", "bodyText": "Explanation is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294323", "createdAt": "2020-10-20T08:08:22Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -369,6 +374,7 @@ public FindMessageLogsAsyncResponse findMessageLogsRequest(\n      * @return FindMessageLogsResponse\n      * @throws OsgpException\n      */\n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxNTA4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODozN1rOHkv1cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODozN1rOHkv1cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDUxNA==", "bodyText": "Explanation is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294514", "createdAt": "2020-10-20T08:08:37Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -436,6 +442,7 @@ public SetDeviceCommunicationSettingsAsyncResponse setDeviceCommunicationSetting\n         return response;\n     }\n \n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxNTczOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODo0OVrOHkv10Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowODo0OVrOHkv10Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDYwOQ==", "bodyText": "Explanation is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294609", "createdAt": "2020-10-20T08:08:49Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -501,6 +508,7 @@ public SetDeviceLifecycleStatusByChannelAsyncResponse setDeviceLifecycleStatusBy\n         return asyncResponse;\n     }\n \n+    @SuppressWarnings(\"squid:S3457\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxNjY5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-tariffswitching/src/main/java/org/opensmartgridplatform/adapter/ws/tariffswitching/endpoints/TariffSwitchingAdHocManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOTowOVrOHkv2iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOTowOVrOHkv2iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDc5NQ==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294795", "createdAt": "2020-10-20T08:09:09Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-tariffswitching/src/main/java/org/opensmartgridplatform/adapter/ws/tariffswitching/endpoints/TariffSwitchingAdHocManagementEndpoint.java", "diffHunk": "@@ -81,8 +81,8 @@ public GetDevicesResponse getDevices(@OrganisationIdentification final String or\n             response.setDevicePage(devicePage);\n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(\"Exception: {}, StackTrace: {}\", e.getMessage(), e.getStackTrace(), e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, COMPONENT_WS_TARIFF_SWITCHING,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, COMPONENT_WS_TARIFF_SWITCHING,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxNzQ5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-tariffswitching/src/main/java/org/opensmartgridplatform/adapter/ws/tariffswitching/endpoints/TariffSwitchingScheduleManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOToyNFrOHkv3GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOToyNFrOHkv3GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NDkzNw==", "bodyText": "see DeviceManagementEndpoint", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508294937", "createdAt": "2020-10-20T08:09:24Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-tariffswitching/src/main/java/org/opensmartgridplatform/adapter/ws/tariffswitching/endpoints/TariffSwitchingScheduleManagementEndpoint.java", "diffHunk": "@@ -99,8 +99,9 @@ public SetScheduleAsyncResponse setSchedule(@OrganisationIdentification final St\n             response.setAsyncResponse(asyncResponse);\n         } catch (final ConstraintViolationException e) {\n             LOGGER.error(\"Exception: {}, StackTrace: {}\", e.getMessage(), e.getStackTrace(), e);\n-            throw new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR, ComponentType.WS_TARIFF_SWITCHING,\n-                    new ValidationException(e.getConstraintViolations()));\n+            this.handleException(new FunctionalException(FunctionalExceptionType.VALIDATION_ERROR,\n+                ComponentType.WS_TARIFF_SWITCHING,\n+                    new ValidationException(e.getConstraintViolations())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAxODY3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/entities/Ssld.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOTo0MFrOHkv3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODowOTo0MFrOHkv3xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NTEwOA==", "bodyText": "Explanation is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508295108", "createdAt": "2020-10-20T08:09:40Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/entities/Ssld.java", "diffHunk": "@@ -97,6 +97,7 @@ public Ssld(final String deviceIdentification, final String alias, final Address\n         super(deviceIdentification, alias, containerAddress, gpsCoordinates, cdmaSettings);\n     }\n \n+    @SuppressWarnings(\"squid:S2159\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAyMjA2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/exceptions/ValidationException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMDoyMFrOHkv5wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMDoyMFrOHkv5wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NTYxOA==", "bodyText": "I don't consider this a good explanation.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508295618", "createdAt": "2020-10-20T08:10:20Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/exceptions/ValidationException.java", "diffHunk": "@@ -16,6 +16,9 @@\n import org.springframework.ws.soap.server.endpoint.annotation.FaultCode;\n import org.springframework.ws.soap.server.endpoint.annotation.SoapFault;\n \n+// suppress warning about the Set<? extends ConstraintViolation<?>>. This is because it is apparently required to be\n+// written this way.\n+@SuppressWarnings(\"squid:S1452\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAyODg1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/AbstractPushSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMTo1M1rOHkv-Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMTo1M1rOHkv-Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NjcxOA==", "bodyText": "I don't think we should suppress this warning, and return an empty list.\nWrite unit tests for all the code calling this method to make sure everything keeps on working ok.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508296718", "createdAt": "2020-10-20T08:11:53Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/AbstractPushSetup.java", "diffHunk": "@@ -152,6 +152,10 @@ public boolean hasPushObjectList() {\n         return this.pushObjectList != null;\n     }\n \n+    // suppress warning about returning null. With this method a null return is currently used to show that the list\n+    // that is used isn't actually initialized. This means that there isn't really an absence of objects to put in\n+    // the list, but rather that the object to put into it couldn't be made.\n+    @SuppressWarnings(\"squid:S1168\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAyOTc2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/AbstractPushSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMjowOFrOHkv-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMjowOFrOHkv-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5Njg2OA==", "bodyText": "I don't think we should suppress this warning, and return an empty list.\nWrite unit tests for all the code calling this method to make sure everything keeps on working ok.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508296868", "createdAt": "2020-10-20T08:12:08Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/AbstractPushSetup.java", "diffHunk": "@@ -171,6 +175,10 @@ public boolean hasCommunicationWindow() {\n         return this.communicationWindow != null;\n     }\n \n+    // suppress warning about returning null. With this method a null return is currently used to show that the list\n+    // that is used isn't actually initialized. This means that there isn't really an absence of objects to put in\n+    // the list, but rather that the object to put into it couldn't be made.\n+    @SuppressWarnings(\"squid:S1168\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDAzMTMzOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMjozNFrOHkv_qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODoxMjozNFrOHkv_qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI5NzEyOA==", "bodyText": "I don't think we should suppress this warning, and return an empty set.\nWrite unit tests for all the code calling this method to make sure everything keeps on working ok.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508297128", "createdAt": "2020-10-20T08:12:34Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatus.java", "diffHunk": "@@ -51,6 +51,9 @@ public boolean hasStatusBits() {\n         return this.statusBits != null;\n     }\n \n+    // this is a getter, meaning it should return what the actual value is. Since it is possible that the actual\n+    // value is set to null, it should also return this in that case.\n+    @SuppressWarnings(\"squid:S1168\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDE5NDExOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo0OTo0NlrOHkxkYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo0OTo0NlrOHkxkYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyMjkxMg==", "bodyText": "I don't think we should suppress this warning, and return an empty set.\nWrite unit tests for all the code calling this method to make sure everything keeps on working ok.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508322912", "createdAt": "2020-10-20T08:49:46Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "diffHunk": "@@ -45,6 +48,10 @@ public String toString() {\n         return forClockStatus(clockStatus & 0xFF);\n     }\n \n+    // here returning null is independed of the actual ClockStatusBit that is later used to make the list. This meand\n+    // that returning an empty list would falsly suggest that there is an empty list, where in fact there is no valid\n+    // list to return\n+    @SuppressWarnings(\"squid:S1168\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDIwMzA1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/SpecificAttributeValueRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MTo0N1rOHkxp0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MTo0N1rOHkxp0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNDMwNg==", "bodyText": "Don't suppress this warning", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508324306", "createdAt": "2020-10-20T08:51:47Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/SpecificAttributeValueRequest.java", "diffHunk": "@@ -33,6 +33,10 @@ public int hashCode() {\n         return result;\n     }\n \n+    // Suppress warning that super.equals(obj) always returns false. This is not true since the given object might\n+    // be the parent class from this class. I'm not sure if the current behaviour is intended but that should be\n+    // tested in unit tests.\n+    @SuppressWarnings(\"squid:S2159\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDIwOTA0OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850GetConfigurationCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MzoxN1rOHkxtoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODo1MzoxN1rOHkxtoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMyNTI4MA==", "bodyText": "Don't suppress this warning", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r508325280", "createdAt": "2020-10-20T08:53:17Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850GetConfigurationCommand.java", "diffHunk": "@@ -41,6 +41,9 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+// small piece of code for making softwareConfiguration and lightTypeValue also exists in GetStatusCommand. The code\n+// is too small to be put in a seperate class. Doing so also wouldn't help with making the code easier to maintain.\n+@SuppressWarnings(\"DuplicatedCode\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f641c2708d6e7246ba563ab38e1bee00635e0cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTYwMDQxOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0Mjo0NlrOITntcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0Mjo0NlrOITntcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0NDQ2Ng==", "bodyText": "licence header is missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557444466", "createdAt": "2021-01-14T14:42:46Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTYxMzA5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NToxM1rOITn03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NToxM1rOITn03A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0NjM2NA==", "bodyText": "use asserJ instead of junit assertions", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557446364", "createdAt": "2021-01-14T14:45:13Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTYxNjgzOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NTo1OVrOITn3IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NTo1OVrOITn3IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0Njk0NQ==", "bodyText": "this can be one line, see https://www.baeldung.com/java-init-list-one-line", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557446945", "createdAt": "2021-01-14T14:45:59Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import ma.glasnost.orika.MappingContext;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.ConfigurationMapper;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemDateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObisCode;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObjectDefinition;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.PushSetupAlarm;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.WindowElement;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.PushSetupAlarmDto;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PushSetupAlarmDtoConverterTest {\n+    @Mock\n+    private ConfigurationMapper configurationMapper;\n+    @Mock\n+    private PushSetupAlarmDto pushSetupAlarmDto;\n+    @Mock\n+    private MappingContext mappingContext;\n+    @Mock\n+    private PushSetupAlarm pushSetupAlarm;\n+    private PushSetupAlarmDtoConverter pushSetupAlarmDtoConverter;\n+\n+    @Test\n+    void convertTest() {\n+        this.pushSetupAlarmDtoConverter = new PushSetupAlarmDtoConverter(this.configurationMapper);\n+\n+        final List<WindowElement> testList = new ArrayList<>();\n+        testList.add(new WindowElement(new CosemDateTime(), new CosemDateTime()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTYxOTgyOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NjozNFrOITn5Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0NjozNFrOITn5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0NzQzNQ==", "bodyText": "see previous comment", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557447435", "createdAt": "2021-01-14T14:46:34Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import ma.glasnost.orika.MappingContext;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.ConfigurationMapper;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemDateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObisCode;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObjectDefinition;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.PushSetupAlarm;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.WindowElement;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.PushSetupAlarmDto;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PushSetupAlarmDtoConverterTest {\n+    @Mock\n+    private ConfigurationMapper configurationMapper;\n+    @Mock\n+    private PushSetupAlarmDto pushSetupAlarmDto;\n+    @Mock\n+    private MappingContext mappingContext;\n+    @Mock\n+    private PushSetupAlarm pushSetupAlarm;\n+    private PushSetupAlarmDtoConverter pushSetupAlarmDtoConverter;\n+\n+    @Test\n+    void convertTest() {\n+        this.pushSetupAlarmDtoConverter = new PushSetupAlarmDtoConverter(this.configurationMapper);\n+\n+        final List<WindowElement> testList = new ArrayList<>();\n+        testList.add(new WindowElement(new CosemDateTime(), new CosemDateTime()));\n+        when(this.pushSetupAlarm.getCommunicationWindow()).thenReturn(testList);\n+\n+        final List<CosemObjectDefinition> pushObjectList = new ArrayList<>();\n+        final CosemObisCode code = new CosemObisCode(1, 2, 3, 4, 5, 6);\n+        pushObjectList.add(new CosemObjectDefinition(1, code, 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTYzMDQ5OnYy", "diffSide": "LEFT", "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0ODo0MlrOITn_hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0ODo0MlrOITn_hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0OTA5NA==", "bodyText": "remove the unused constants EXCEPTION_OCCURRED and STACK_TRACE", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557449094", "createdAt": "2021-01-14T14:48:42Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/endpoints/DeviceManagementEndpoint.java", "diffHunk": "@@ -120,11 +120,9 @@ public CreateOrganisationResponse createOrganisation(\n         try {\n             this.deviceManagementService.addOrganisation(organisationIdentification, organisation);\n         } catch (final ConstraintViolationException e) {\n-            LOGGER.error(EXCEPTION_OCCURRED, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY3ODg3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo1ODo1M1rOIToeMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo1ODo1M1rOIToeMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1Njk0Nw==", "bodyText": "Why did you add this condition?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557456947", "createdAt": "2021-01-14T14:58:53Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/endpoints/DeviceManagementEndpoint.java", "diffHunk": "@@ -304,7 +301,7 @@ public FindDevicesResponse findDevices(@OrganisationIdentification final String\n                 response.getPage().setCurrentPage(result.getNumber());\n             }\n \n-            if (request.isUsePages() != null && !request.isUsePages()) {\n+            if (result != null && request.isUsePages() != null && !request.isUsePages()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY4MDc0OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo1OToxNVrOITofYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo1OToxNVrOITofYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1NzI0OA==", "bodyText": "licence header missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557457248", "createdAt": "2021-01-14T14:59:15Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.opensmartgridplatform.adapter.ws.core.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY4NTM2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMDoxMFrOIToiMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMDoxMFrOIToiMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1Nzk2OA==", "bodyText": "use a static import so we don't need to put Assertions. here", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557457968", "createdAt": "2021-01-14T15:00:10Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.opensmartgridplatform.adapter.ws.core.application.services;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.when;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Predicate;\n+import javax.persistence.criteria.Root;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.ws.core.application.criteria.SearchEventsCriteria;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.repositories.EventRepository;\n+import org.opensmartgridplatform.domain.core.specifications.EventSpecifications;\n+import org.opensmartgridplatform.shared.application.config.PagingSettings;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+@ExtendWith(MockitoExtension.class)\n+class DeviceManagementServiceTest {\n+    @Mock\n+    private SearchEventsCriteria criteria;\n+    @Mock\n+    private Specification<Event> descriptionSpecification;\n+    @InjectMocks\n+    private DeviceManagementService deviceManagementService;\n+    @Mock\n+    private DomainHelperService domainHelperService;\n+    @Mock\n+    private EventRepository eventRepository;\n+    @Mock\n+    private EventSpecifications eventSpecifications;\n+    @Mock\n+    private Page<String> page;\n+    @Mock\n+    private PagingSettings pagingSettings;\n+    @Mock\n+    private Specification<Event> specification;\n+\n+    @Test\n+    void findEventsTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.criteria.getDescriptionStartsWith()).thenReturn(\"descriptionStartValue\");\n+        when(this.criteria.getDescription()).thenReturn(\"description\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(this.specification);\n+        when(this.eventSpecifications.withDescription(any())).thenReturn(this.descriptionSpecification);\n+        when(this.pagingSettings.getPageNumber()).thenReturn(1);\n+        when(this.pagingSettings.getPageSize()).thenReturn(1);\n+        when(this.eventRepository.findAll((Specification<Event>) any(), any(Pageable.class))).thenReturn(null);\n+        when(this.specification.and(any())).thenReturn(this.specification);\n+        when(this.descriptionSpecification.or(any())).thenReturn(this.descriptionSpecification);\n+\n+        final Page<Event> resultPage = this.deviceManagementService.findEvents(this.criteria);\n+\n+        Assertions.assertThat(resultPage).isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY4ODY4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMDo1MlrOITokOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMDo1MlrOITokOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1ODQ4OQ==", "bodyText": "refactor the return part into a method", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557458489", "createdAt": "2021-01-14T15:00:52Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.opensmartgridplatform.adapter.ws.core.application.services;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.when;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Predicate;\n+import javax.persistence.criteria.Root;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.ws.core.application.criteria.SearchEventsCriteria;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.repositories.EventRepository;\n+import org.opensmartgridplatform.domain.core.specifications.EventSpecifications;\n+import org.opensmartgridplatform.shared.application.config.PagingSettings;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+@ExtendWith(MockitoExtension.class)\n+class DeviceManagementServiceTest {\n+    @Mock\n+    private SearchEventsCriteria criteria;\n+    @Mock\n+    private Specification<Event> descriptionSpecification;\n+    @InjectMocks\n+    private DeviceManagementService deviceManagementService;\n+    @Mock\n+    private DomainHelperService domainHelperService;\n+    @Mock\n+    private EventRepository eventRepository;\n+    @Mock\n+    private EventSpecifications eventSpecifications;\n+    @Mock\n+    private Page<String> page;\n+    @Mock\n+    private PagingSettings pagingSettings;\n+    @Mock\n+    private Specification<Event> specification;\n+\n+    @Test\n+    void findEventsTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.criteria.getDescriptionStartsWith()).thenReturn(\"descriptionStartValue\");\n+        when(this.criteria.getDescription()).thenReturn(\"description\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(this.specification);\n+        when(this.eventSpecifications.withDescription(any())).thenReturn(this.descriptionSpecification);\n+        when(this.pagingSettings.getPageNumber()).thenReturn(1);\n+        when(this.pagingSettings.getPageSize()).thenReturn(1);\n+        when(this.eventRepository.findAll((Specification<Event>) any(), any(Pageable.class))).thenReturn(null);\n+        when(this.specification.and(any())).thenReturn(this.specification);\n+        when(this.descriptionSpecification.or(any())).thenReturn(this.descriptionSpecification);\n+\n+        final Page<Event> resultPage = this.deviceManagementService.findEvents(this.criteria);\n+\n+        Assertions.assertThat(resultPage).isNull();\n+    }\n+\n+    @Test\n+    void findEventsWithNoDescriptionStartsWithTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(new Specification<Event>() {\n+            private static final long serialVersionUID = 2946693984484298490L;\n+\n+            @Override\n+            public Predicate toPredicate(final Root<Event> root, final CriteriaQuery<?> criteriaQuery,\n+                    final CriteriaBuilder criteriaBuilder) {\n+                return null;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY5NjkzOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMjoyMlrOITopzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMjoyMlrOITopzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ1OTkxNg==", "bodyText": "there are only tests checking for the resultPage to be null\nI would expect tests checking a non-null result as well", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557459916", "createdAt": "2021-01-14T15:02:22Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.opensmartgridplatform.adapter.ws.core.application.services;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.when;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Predicate;\n+import javax.persistence.criteria.Root;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.ws.core.application.criteria.SearchEventsCriteria;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.repositories.EventRepository;\n+import org.opensmartgridplatform.domain.core.specifications.EventSpecifications;\n+import org.opensmartgridplatform.shared.application.config.PagingSettings;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+@ExtendWith(MockitoExtension.class)\n+class DeviceManagementServiceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTY5OTIwOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMjo0NVrOITorGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMjo0NVrOITorGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2MDI1MA==", "bodyText": "see earlier comment", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557460250", "createdAt": "2021-01-14T15:02:45Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.opensmartgridplatform.adapter.ws.core.application.services;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.when;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Predicate;\n+import javax.persistence.criteria.Root;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.ws.core.application.criteria.SearchEventsCriteria;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.Event;\n+import org.opensmartgridplatform.domain.core.entities.Organisation;\n+import org.opensmartgridplatform.domain.core.repositories.EventRepository;\n+import org.opensmartgridplatform.domain.core.specifications.EventSpecifications;\n+import org.opensmartgridplatform.shared.application.config.PagingSettings;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+@ExtendWith(MockitoExtension.class)\n+class DeviceManagementServiceTest {\n+    @Mock\n+    private SearchEventsCriteria criteria;\n+    @Mock\n+    private Specification<Event> descriptionSpecification;\n+    @InjectMocks\n+    private DeviceManagementService deviceManagementService;\n+    @Mock\n+    private DomainHelperService domainHelperService;\n+    @Mock\n+    private EventRepository eventRepository;\n+    @Mock\n+    private EventSpecifications eventSpecifications;\n+    @Mock\n+    private Page<String> page;\n+    @Mock\n+    private PagingSettings pagingSettings;\n+    @Mock\n+    private Specification<Event> specification;\n+\n+    @Test\n+    void findEventsTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.criteria.getDescriptionStartsWith()).thenReturn(\"descriptionStartValue\");\n+        when(this.criteria.getDescription()).thenReturn(\"description\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(this.specification);\n+        when(this.eventSpecifications.withDescription(any())).thenReturn(this.descriptionSpecification);\n+        when(this.pagingSettings.getPageNumber()).thenReturn(1);\n+        when(this.pagingSettings.getPageSize()).thenReturn(1);\n+        when(this.eventRepository.findAll((Specification<Event>) any(), any(Pageable.class))).thenReturn(null);\n+        when(this.specification.and(any())).thenReturn(this.specification);\n+        when(this.descriptionSpecification.or(any())).thenReturn(this.descriptionSpecification);\n+\n+        final Page<Event> resultPage = this.deviceManagementService.findEvents(this.criteria);\n+\n+        Assertions.assertThat(resultPage).isNull();\n+    }\n+\n+    @Test\n+    void findEventsWithNoDescriptionStartsWithTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(new Specification<Event>() {\n+            private static final long serialVersionUID = 2946693984484298490L;\n+\n+            @Override\n+            public Predicate toPredicate(final Root<Event> root, final CriteriaQuery<?> criteriaQuery,\n+                    final CriteriaBuilder criteriaBuilder) {\n+                return null;\n+            }\n+        });\n+        when(this.pagingSettings.getPageNumber()).thenReturn(1);\n+        when(this.pagingSettings.getPageSize()).thenReturn(1);\n+        when(this.eventRepository.findAll((Specification<Event>) any(), any(Pageable.class))).thenReturn(null);\n+\n+        final Page<Event> resultPage = this.deviceManagementService.findEvents(this.criteria);\n+\n+        Assertions.assertThat(resultPage).isNull();\n+    }\n+\n+    @Test\n+    void findEventsWithNoDescriptionTest() throws FunctionalException {\n+        when(this.criteria.getOrganisationIdentification()).thenReturn(\"orgIdentification\");\n+        when(this.criteria.getDeviceIdentification()).thenReturn(\"deviceIdentification\");\n+        when(this.criteria.getDescriptionStartsWith()).thenReturn(\"descriptionStartValue\");\n+        when(this.domainHelperService.findOrganisation(any())).thenReturn(new Organisation());\n+        doNothing().when(this.pagingSettings).updatePagingSettings(any());\n+        when(this.domainHelperService.findDevice(any())).thenReturn(new Device());\n+        doNothing().when(this.domainHelperService).isAllowed(any(), any(), any());\n+        when(this.eventSpecifications.isFromDevice(any())).thenReturn(new Specification<Event>() {\n+            private static final long serialVersionUID = 2946693984484298490L;\n+\n+            @Override\n+            public Predicate toPredicate(final Root<Event> root, final CriteriaQuery<?> criteriaQuery,\n+                    final CriteriaBuilder criteriaBuilder) {\n+                return null;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcwMzU4OnYy", "diffSide": "LEFT", "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMzo1NFrOITouEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowMzo1NFrOITouEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2MTAxMA==", "bodyText": "the empty line was fine here, roll back the change", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557461010", "createdAt": "2021-01-14T15:03:54Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/endpoints/SmartMeteringManagementEndpoint.java", "diffHunk": "@@ -68,7 +68,6 @@\n import org.springframework.ws.server.endpoint.annotation.PayloadRoot;\n import org.springframework.ws.server.endpoint.annotation.RequestPayload;\n import org.springframework.ws.server.endpoint.annotation.ResponsePayload;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcwOTg1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/exceptions/ValidationException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNToxNFrOITox3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNToxNFrOITox3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2MTk4MQ==", "bodyText": "why was the order of methods changed?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557461981", "createdAt": "2021-01-14T15:05:14Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/exceptions/ValidationException.java", "diffHunk": "@@ -19,11 +19,28 @@\n @SoapFault(faultCode = FaultCode.SERVER)\n public class ValidationException extends PlatformException {\n \n+    private static final String DEFAULT_MESSAGE = \"Validation Exception\";\n     /**\n      * Serial Version UID.\n      */\n     private static final long serialVersionUID = 9063383618380310347L;\n-    private static final String DEFAULT_MESSAGE = \"Validation Exception\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcxNDI3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNjowMlrOITo0hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNjowMlrOITo0hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2MjY2MA==", "bodyText": "this line introduced another sonar issue", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557462660", "createdAt": "2021-01-14T15:06:02Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatus.java", "diffHunk": "@@ -53,7 +54,7 @@ public boolean hasStatusBits() {\n \n     public Set<ClockStatusBit> getStatusBits() {\n         if (this.statusBits == null) {\n-            return null;\n+            return new HashSet<ClockStatusBit>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcyMDIxOnYy", "diffSide": "LEFT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNzowNVrOITo4Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNzowNVrOITo4Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2MzU1NQ==", "bodyText": "why was the order of elements changed?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557463555", "createdAt": "2021-01-14T15:07:05Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "diffHunk": "@@ -10,41 +10,30 @@\n import java.util.EnumSet;\n import java.util.Set;\n \n+// suppress warning for duplicate string at reserved (line 21,22,23). The way it\n+// is currently done is according to the blue book 12th edition at paragraph 4.1.6.1\n+@SuppressWarnings(\"squid:S1192\")\n public enum ClockStatusBit {\n \n-    INVALID_VALUE(\"invalid value\"),\n-    DOUBTFUL_VALUE(\"doubtful value\"),\n+    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\"),\n     DIFFERENT_CLOCK_BASE(\"different clock base\"),\n+    DOUBTFUL_VALUE(\"doubtful value\"),\n     INVALID_CLOCK_STATUS(\"invalid clock status\"),\n+    INVALID_VALUE(\"invalid value\"),\n     RESERVED_1(\"reserved\"),\n     RESERVED_2(\"reserved\"),\n-    RESERVED_3(\"reserved\"),\n-    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcyMzU3OnYy", "diffSide": "LEFT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNzo0NFrOITo6Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowNzo0NFrOITo6Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2NDA5OQ==", "bodyText": "why was the order of methods changed?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557464099", "createdAt": "2021-01-14T15:07:44Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "diffHunk": "@@ -10,41 +10,30 @@\n import java.util.EnumSet;\n import java.util.Set;\n \n+// suppress warning for duplicate string at reserved (line 21,22,23). The way it\n+// is currently done is according to the blue book 12th edition at paragraph 4.1.6.1\n+@SuppressWarnings(\"squid:S1192\")\n public enum ClockStatusBit {\n \n-    INVALID_VALUE(\"invalid value\"),\n-    DOUBTFUL_VALUE(\"doubtful value\"),\n+    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\"),\n     DIFFERENT_CLOCK_BASE(\"different clock base\"),\n+    DOUBTFUL_VALUE(\"doubtful value\"),\n     INVALID_CLOCK_STATUS(\"invalid clock status\"),\n+    INVALID_VALUE(\"invalid value\"),\n     RESERVED_1(\"reserved\"),\n     RESERVED_2(\"reserved\"),\n-    RESERVED_3(\"reserved\"),\n-    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\");\n-\n-    private final String description;\n-\n-    ClockStatusBit(final String description) {\n-        this.description = description;\n-    }\n-\n-    public String getDescription() {\n-        return this.description;\n-    }\n-\n-    public boolean isSet(final int clockStatus) {\n-        final int mask = 1 << this.ordinal();\n-        return mask == (mask & clockStatus);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return this.description;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTcyNjMwOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowODoxMVrOITo7vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTowODoxMVrOITo7vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ2NDUwOA==", "bodyText": "very good!", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557464508", "createdAt": "2021-01-14T15:08:11Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/valueobjects/smartmetering/ClockStatusBit.java", "diffHunk": "@@ -10,41 +10,30 @@\n import java.util.EnumSet;\n import java.util.Set;\n \n+// suppress warning for duplicate string at reserved (line 21,22,23). The way it\n+// is currently done is according to the blue book 12th edition at paragraph 4.1.6.1\n+@SuppressWarnings(\"squid:S1192\")\n public enum ClockStatusBit {\n \n-    INVALID_VALUE(\"invalid value\"),\n-    DOUBTFUL_VALUE(\"doubtful value\"),\n+    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\"),\n     DIFFERENT_CLOCK_BASE(\"different clock base\"),\n+    DOUBTFUL_VALUE(\"doubtful value\"),\n     INVALID_CLOCK_STATUS(\"invalid clock status\"),\n+    INVALID_VALUE(\"invalid value\"),\n     RESERVED_1(\"reserved\"),\n     RESERVED_2(\"reserved\"),\n-    RESERVED_3(\"reserved\"),\n-    DAYLIGHT_SAVING_ACTIVE(\"daylight saving active\");\n-\n-    private final String description;\n-\n-    ClockStatusBit(final String description) {\n-        this.description = description;\n-    }\n-\n-    public String getDescription() {\n-        return this.description;\n-    }\n-\n-    public boolean isSet(final int clockStatus) {\n-        final int mask = 1 << this.ordinal();\n-        return mask == (mask & clockStatus);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return this.description;\n-    }\n+    RESERVED_3(\"reserved\");\n \n     public static Set<ClockStatusBit> forClockStatus(final byte clockStatus) {\n         return forClockStatus(clockStatus & 0xFF);\n     }\n \n+    // SonarQube complains about the null return. SonarQube wants to see a\n+    // return of an empty set. The problem is that the behavior of the code\n+    // differs depending on whether the return value is null or an empty set.\n+    // Trying to correct this would result in other behavior changes, making a\n+    // simple fix not possible. It is still an issue though, meaning it\n+    // shouldn't be suppressed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTg1Mzc4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTozNTo0MVrOITqM-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTozNTo0MVrOITqM-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ4NTMwNg==", "bodyText": "Mock is not used in class. Maybe remove?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557485306", "createdAt": "2021-01-14T15:35:41Z", "author": {"login": "MithraicMagic"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import ma.glasnost.orika.MappingContext;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.ConfigurationMapper;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemDateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObisCode;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObjectDefinition;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.PushSetupAlarm;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.WindowElement;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.PushSetupAlarmDto;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PushSetupAlarmDtoConverterTest {\n+    @Mock\n+    private ConfigurationMapper configurationMapper;\n+    @Mock\n+    private PushSetupAlarmDto pushSetupAlarmDto;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTg1NjU4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTozNjoxMlrOITqOsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTozNjoxMlrOITqOsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ4NTc0Nw==", "bodyText": "This is used in both functions, set globally in class?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r557485747", "createdAt": "2021-01-14T15:36:12Z", "author": {"login": "MithraicMagic"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.customconverters;\n+\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import ma.glasnost.orika.MappingContext;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.adapter.domain.smartmetering.application.mapping.ConfigurationMapper;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemDateTime;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObisCode;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.CosemObjectDefinition;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.PushSetupAlarm;\n+import org.opensmartgridplatform.domain.core.valueobjects.smartmetering.WindowElement;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.PushSetupAlarmDto;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PushSetupAlarmDtoConverterTest {\n+    @Mock\n+    private ConfigurationMapper configurationMapper;\n+    @Mock\n+    private PushSetupAlarmDto pushSetupAlarmDto;\n+    @Mock\n+    private MappingContext mappingContext;\n+    @Mock\n+    private PushSetupAlarm pushSetupAlarm;\n+    private PushSetupAlarmDtoConverter pushSetupAlarmDtoConverter;\n+\n+    @Test\n+    void convertTest() {\n+        this.pushSetupAlarmDtoConverter = new PushSetupAlarmDtoConverter(this.configurationMapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fbac293f9a5c4d6eea912400bd9d631a01e3d7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzNjczMTIxOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNzo0NDo0M1rOIXpA0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNzo0NDo0M1rOIXpA0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY2MDExMw==", "bodyText": "2021", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r561660113", "createdAt": "2021-01-21T07:44:43Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-smartmetering/src/test/java/org/opensmartgridplatform/adapter/domain/smartmetering/application/mapping/customconverters/PushSetupAlarmDtoConverterTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright 2020 Alliander N.V.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a81e6926b9c48ff8bf223b96b2d096a376d9e7c"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzNjczMzA3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNzo0NToyOFrOIXpB_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwNzo0NToyOFrOIXpB_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY2MDQxNA==", "bodyText": "2021", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/446#discussion_r561660414", "createdAt": "2021-01-21T07:45:28Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-core/src/test/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementServiceTest.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/**\n+ * Copyright 2020 Alliander N.V.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a81e6926b9c48ff8bf223b96b2d096a376d9e7c"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3533, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}