{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzUyNjI4", "number": 260, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNzowMlrODt-V_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo0MjowMVrODv-XZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTMzOTQ4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNzowMlrOF_tYvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNzowMlrOF_tYvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0ODIyMA==", "bodyText": "Complete the task associated to this TODO comment.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r402348220", "createdAt": "2020-04-02T14:17:02Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(informationObjects)\n+                .build();\n+    }\n+\n+    private InformationElement[][] createInformationElement(final float value, final long timestamp) {\n+        return new InformationElement[][] { { new IeShortFloat(value), new IeQuality(false, false, false, false, false),\n+                new IeTime56(timestamp) } };\n+    }\n+\n+    public ASdu createSingleCommandAsdu() {\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.C_SC_NA_1)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(new InformationObject[] { new InformationObject(0,\n+                        new InformationElement[][] { { this.defaultIeQualifierOfInterrogation() } }) })\n+                .build();\n+    }\n+\n+    public ASdu createShortFloatingPointMeasurementAsdu() {\n+        final ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\n+        final long timestamp = now.toInstant().toEpochMilli();\n+        final float hour = now.getHour();\n+        final float minute = now.getMinute();\n+\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            final float value = (index == 0 ? hour : minute);\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(value, timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(informationObjects)\n+                .build();\n+\n+    }\n+\n+    // TODO: remove these setters when the cucumber mock server can read these", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde487387d08b477ea8bdac00f24260a859dd0"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTkwMDM4OnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoxMDowM1rOGCCvmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjoxNjoxMVrOGCLabw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTI4OQ==", "bodyText": "build => built", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404795289", "createdAt": "2020-04-07T13:10:03Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "diffHunk": "@@ -53,7 +53,16 @@ public void iRequestTheHealthStatus(final String organizationIdentification, fin\n     }\n \n     private Iec60870ASduHandler getInterrogationCommandASduHandler() {\n-        final Iec60870ASduFactory iec60870AsduFactory = new Iec60870ASduFactory();\n+        final DefaultControlledStationAsduFactory iec60870AsduFactory = new DefaultControlledStationAsduFactory();\n+\n+        /*\n+         * These values should be read from a property file based on the active\n+         * profile. Since that functionality hasn't been build yet, we set them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzNzMyNw==", "bodyText": "Done.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404937327", "createdAt": "2020-04-07T16:16:11Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "diffHunk": "@@ -53,7 +53,16 @@ public void iRequestTheHealthStatus(final String organizationIdentification, fin\n     }\n \n     private Iec60870ASduHandler getInterrogationCommandASduHandler() {\n-        final Iec60870ASduFactory iec60870AsduFactory = new Iec60870ASduFactory();\n+        final DefaultControlledStationAsduFactory iec60870AsduFactory = new DefaultControlledStationAsduFactory();\n+\n+        /*\n+         * These values should be read from a property file based on the active\n+         * profile. Since that functionality hasn't been build yet, we set them", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTI4OQ=="}, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjAxNDAyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNTozNVrOGCD20g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjoxNjo0MlrOGCLbqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxMzUyMg==", "bodyText": "In the old situation, the casing of the openmuc library (\"ASdu\") was used. Changing to \"Asdu\" is fine, but only if we adapt all our class names.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404813522", "createdAt": "2020-04-07T13:35:35Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4MjU4NQ==", "bodyText": "I would prefer to use \"Asdu\" in our code.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404882585", "createdAt": "2020-04-07T15:04:55Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxMzUyMg=="}, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzNzY0MQ==", "bodyText": "Done: replaced ASdu by Asdu in our own code.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404937641", "createdAt": "2020-04-07T16:16:42Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxMzUyMg=="}, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjI3OTAyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDozMjoxOVrOGCGeUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjoxNzoxNlrOGCLdQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1NjQwMg==", "bodyText": "Shouldn't this be CauseOfTransmission.INTERROGATED_BY_STATION?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404856402", "createdAt": "2020-04-07T14:32:19Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5MDYzOA==", "bodyText": "For an interrogation response this should indeed be CauseOfTransmission.INTERROGATED_BY_STATION.\nThe AsduType should also be changed accordingly, as the interrogation responses are without timestamp, so it should actually be ASduType.M_ME_NC_1 (measured value, short floating point value). Furthermore the timestamp parameter will no longer be needed after changing the AsduType (and the information elements within the ASdu).", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404890638", "createdAt": "2020-04-07T15:15:18Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1NjQwMg=="}, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzODA1MQ==", "bodyText": "Done. Because the timestamp is not needed, I could also remove some code.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404938051", "createdAt": "2020-04-07T16:17:16Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1NjQwMg=="}, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjA5MjkzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/ClientAsduHandlerRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTozOTowNVrOGCrOrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTozOTowNVrOGCrOrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1ODYwNg==", "bodyText": "ASdu handler -> Asdu or ASDU handler", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405458606", "createdAt": "2020-04-08T11:39:05Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/ClientAsduHandlerRegistryImpl.java", "diffHunk": "@@ -32,12 +32,12 @@\n     private final Map<ASduType, ClientAsduHandler> handlers = new EnumMap<>(ASduType.class);\n \n     @Override\n-    public ClientAsduHandler getHandler(final ASdu asdu) throws Iec60870ASduHandlerNotFoundException {\n+    public ClientAsduHandler getHandler(final ASdu asdu) throws Iec60870AsduHandlerNotFoundException {\n         final ASduType asduType = asdu.getTypeIdentification();\n         final ClientAsduHandler handler = this.handlers.get(asduType);\n         if (handler == null) {\n-            LOGGER.error(\"No ASdu handler found for ASdu type {}\", asduType);\n-            throw new Iec60870ASduHandlerNotFoundException(asduType);\n+            LOGGER.error(\"No ASdu handler found for Asdu type {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjEwMDUxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTo0MToyOVrOGCrTaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTo0MToyOVrOGCrTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1OTgxNw==", "bodyText": "ASdu handler -> Asdu or ASDU handler", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405459817", "createdAt": "2020-04-08T11:41:29Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "diffHunk": "@@ -23,21 +23,21 @@\n  *\n  */\n @Component\n-public class Iec60870ASduHandlerRegistry {\n+public class Iec60870AsduHandlerRegistry {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(Iec60870ASduHandlerRegistry.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(Iec60870AsduHandlerRegistry.class);\n \n-    private final Map<ASduType, Iec60870ASduHandler> handlers = new EnumMap<>(ASduType.class);\n+    private final Map<ASduType, Iec60870AsduHandler> handlers = new EnumMap<>(ASduType.class);\n \n-    public Iec60870ASduHandler getHandler(final ASduType asduType) throws Iec60870ASduHandlerNotFoundException {\n+    public Iec60870AsduHandler getHandler(final ASduType asduType) throws Iec60870AsduHandlerNotFoundException {\n         if (!this.handlers.containsKey(asduType)) {\n             LOGGER.error(\"No ASdu handler found for type Id {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjMxNDYzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo0MjowMVrOGCtXiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo0MjowMVrOGCtXiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5MzY0Mw==", "bodyText": "type Id -> ASDU type", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405493643", "createdAt": "2020-04-08T12:42:01Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "diffHunk": "@@ -31,7 +31,7 @@\n \n     public Iec60870AsduHandler getHandler(final ASduType asduType) throws Iec60870AsduHandlerNotFoundException {\n         if (!this.handlers.containsKey(asduType)) {\n-            LOGGER.error(\"No ASdu handler found for type Id {}\", asduType);\n+            LOGGER.error(\"No ASDU handler found for type Id {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be2e2a1e2b6562397448daa174768d1f690fa8e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3682, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}