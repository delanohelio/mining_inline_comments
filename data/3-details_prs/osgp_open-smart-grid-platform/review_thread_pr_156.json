{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTU3ODIy", "number": 156, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1NzozMlrODeggiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowODowMlrODegxLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzE2NDg5OnYy", "diffSide": "RIGHT", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1NzozMlrOFnrigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1NzozMlrOFnrigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1MjEzMQ==", "bodyText": "This import resolves deprecation. The class org.apache.http.conn.ssl.SSLContexts is deprecated.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377152131", "createdAt": "2020-02-10T15:57:32Z", "author": {"login": "kevinsmeets"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -15,14 +15,17 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n+import javax.net.ssl.HostnameVerifier;\n import javax.net.ssl.SSLContext;\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.conn.ssl.DefaultHostnameVerifier;\n+import org.apache.http.conn.ssl.NoopHostnameVerifier;\n import org.apache.http.conn.ssl.SSLConnectionSocketFactory;\n-import org.apache.http.conn.ssl.SSLContexts;\n import org.apache.http.conn.ssl.TrustSelfSignedStrategy;\n import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.ssl.SSLContexts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzE3MDQ5OnYy", "diffSide": "RIGHT", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1ODo0OFrOFnrl2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1ODo0OFrOFnrl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1Mjk4Nw==", "bodyText": "The NoopHostnameVerifier class is equivalent to SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377152987", "createdAt": "2020-02-10T15:58:48Z", "author": {"login": "kevinsmeets"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -285,12 +297,25 @@ private SSLConnectionSocketFactory getSSLConnectionSocketFactory(final String ke\n             throw new KeyStoreException(\"Key store is empty\");\n         }\n \n-        // Setup SSL context, load trust and keystore and build the message\n+        // Setup SSL context, load trust and key store and build the message\n         // sender\n         final SSLContext sslContext = SSLContexts.custom()\n                 .loadKeyMaterial(keyStore, this.keyStorePassword.toCharArray())\n                 .loadTrustMaterial(this.trustStoreFactory.getObject(), new TrustSelfSignedStrategy()).build();\n \n-        return new SSLConnectionSocketFactory(sslContext, SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n+        final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+        return new SSLConnectionSocketFactory(sslContext, hostnameVerifier);\n+    }\n+\n+    private HostnameVerifier getHostnameVerifier() throws GeneralSecurityException {\n+        switch (this.webServiceTemplateHostnameVerificationStrategy) {\n+        case ALLOW_ALL_HOSTNAMES:\n+            return new NoopHostnameVerifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzE3MzY0OnYy", "diffSide": "RIGHT", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1OTozNlrOFnrnyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo1OTozNlrOFnrnyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1MzQ4MQ==", "bodyText": "The DefaultHostnameVerifier class is a more strict implementation of hostname verification. This improves the security of SOAP clients.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377153481", "createdAt": "2020-02-10T15:59:36Z", "author": {"login": "kevinsmeets"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -285,12 +297,25 @@ private SSLConnectionSocketFactory getSSLConnectionSocketFactory(final String ke\n             throw new KeyStoreException(\"Key store is empty\");\n         }\n \n-        // Setup SSL context, load trust and keystore and build the message\n+        // Setup SSL context, load trust and key store and build the message\n         // sender\n         final SSLContext sslContext = SSLContexts.custom()\n                 .loadKeyMaterial(keyStore, this.keyStorePassword.toCharArray())\n                 .loadTrustMaterial(this.trustStoreFactory.getObject(), new TrustSelfSignedStrategy()).build();\n \n-        return new SSLConnectionSocketFactory(sslContext, SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n+        final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+        return new SSLConnectionSocketFactory(sslContext, hostnameVerifier);\n+    }\n+\n+    private HostnameVerifier getHostnameVerifier() throws GeneralSecurityException {\n+        switch (this.webServiceTemplateHostnameVerificationStrategy) {\n+        case ALLOW_ALL_HOSTNAMES:\n+            return new NoopHostnameVerifier();\n+        case BROWSER_COMPATIBLE_HOSTNAMES:\n+            return new DefaultHostnameVerifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzE3Nzg0OnYy", "diffSide": "RIGHT", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowMDozN1rOFnrqUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowMDozN1rOFnrqUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1NDEyOQ==", "bodyText": "All exceptions classes KeyManagementException | UnrecoverableKeyException | NoSuchAlgorithmException | KeyStoreException inherit from GeneralSecurityException.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377154129", "createdAt": "2020-02-10T16:00:37Z", "author": {"login": "kevinsmeets"}, "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -143,19 +150,33 @@ private HttpComponentsMessageSender createHttpMessageSender() {\n         final HttpClientBuilder builder = HttpClients.custom();\n         builder.addInterceptorFirst(new ContentLengthHeaderRemoveInterceptor());\n         try {\n-            final SSLContext sslContext = new SSLContextBuilder()\n+            final SSLContext sslContext = SSLContexts.custom()\n                     .loadKeyMaterial(this.keyStoreHelper.getKeyStore(), this.keyStoreHelper.getKeyStorePwAsChar())\n-                    .loadTrustMaterial(this.keyStoreHelper.getTrustStore()).build();\n-            final SSLConnectionSocketFactory sslConnectionFactory = new SSLConnectionSocketFactory(sslContext);\n+                    .loadTrustMaterial(this.keyStoreHelper.getTrustStore(), new TrustSelfSignedStrategy()).build();\n+\n+            final HostnameVerifier hostnameVerifier = this.getHostnameVerifier();\n+\n+            final SSLConnectionSocketFactory sslConnectionFactory = new SSLConnectionSocketFactory(sslContext,\n+                    hostnameVerifier);\n             builder.setSSLSocketFactory(sslConnectionFactory);\n             sender.setHttpClient(builder.build());\n-        } catch (KeyManagementException | UnrecoverableKeyException | NoSuchAlgorithmException | KeyStoreException e) {\n+        } catch (final GeneralSecurityException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzE4MjM2OnYy", "diffSide": "RIGHT", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowMTo0M1rOFnrtFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowMTo0M1rOFnrtFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1NDgzOA==", "bodyText": "Make sure that components not yet implementing the BROWSER_COMPATIBLE_HOSTNAMES hostname verification are constructed with ALLOW_ALL_HOSTNAMES.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377154838", "createdAt": "2020-02-10T16:01:43Z", "author": {"login": "kevinsmeets"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/ws/DefaultWebServiceTemplateFactory.java", "diffHunk": "@@ -87,6 +91,7 @@ public WebServiceTemplate getTemplate(final String organisationIdentification, f\n         private int maxConnectionsTotal = 20;\n         private int connectionTimeout = 120000;\n         private CircuitBreaker circuitBreaker;\n+        private WebServiceTemplateHostnameVerificationStrategy webServiceTemplateHostnameVerificationStrategy = WebServiceTemplateHostnameVerificationStrategy.ALLOW_ALL_HOSTNAMES;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d295bb1a6269758e859b74cf211d0694da681b3d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzIwMjYyOnYy", "diffSide": "RIGHT", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowNjo0OVrOFnr52A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowNjo0OVrOFnr52A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1ODEwNA==", "bodyText": "The web-demo-all has no dependency on shared. Therefore using a couple of string constants instead of the WebServiceTemplateHostnameVerificationStrategy enumeration.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377158104", "createdAt": "2020-02-10T16:06:49Z", "author": {"login": "kevinsmeets"}, "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -35,6 +36,9 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(SoapRequestHelper.class);\n \n+    private static final String ALLOW_ALL_HOSTNAMES = \"ALLOW_ALL_HOSTNAMES\";\n+    private static final String BROWSER_COMPATIBLE_HOSTNAMES = \"BROWSER_COMPATIBLE_HOSTNAMES\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fae0ac607e6348b19fc2393127d6f4e10f2f836"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzIwNzQ4OnYy", "diffSide": "RIGHT", "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowODowMlrOFnr81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjowODowMlrOFnr81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE1ODg2OQ==", "bodyText": "Instead of the SSLContextBuilder use the same implementation as the DefaultWebServiceTemplateFactory.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/156#discussion_r377158869", "createdAt": "2020-02-10T16:08:02Z", "author": {"login": "kevinsmeets"}, "path": "public-lighting-demo-app/web-demo-app/src/main/java/org/opensmartgridplatform/webdemoapp/infra/platform/SoapRequestHelper.java", "diffHunk": "@@ -143,19 +150,33 @@ private HttpComponentsMessageSender createHttpMessageSender() {\n         final HttpClientBuilder builder = HttpClients.custom();\n         builder.addInterceptorFirst(new ContentLengthHeaderRemoveInterceptor());\n         try {\n-            final SSLContext sslContext = new SSLContextBuilder()\n+            final SSLContext sslContext = SSLContexts.custom()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fae0ac607e6348b19fc2393127d6f4e10f2f836"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3722, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}