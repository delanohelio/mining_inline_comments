{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzMwNjgw", "number": 320, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoyMzo0NFrOD9VV6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzo1MDoxMFrOD-GSKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjM5NDAyOnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/resources/features/osgp-adapter-ws-distributionautomation/ReceiveMeasurementReports.feature", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoyMzo0NFrOGWw9DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoxNjowN1rOGXS4Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMzkxNw==", "bodyText": "Does it return an empty report or don't we care about the report contents?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426523917", "createdAt": "2020-05-18T10:23:44Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/resources/features/osgp-adapter-ws-distributionautomation/ReceiveMeasurementReports.feature", "diffHunk": "@@ -12,12 +12,38 @@ Feature: DistributionAutomation Receive measurement reports\n       | CommonAddress        |                75 |\n     When Organization test-org connects to device TEST1024000000001\n     Then I get a measurement report for device TEST1024000000001\n+      |  |  |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyNTYyOQ==", "bodyText": "If it is blank, the contents are not checked, so we don't care", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426625629", "createdAt": "2020-05-18T13:28:29Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/resources/features/osgp-adapter-ws-distributionautomation/ReceiveMeasurementReports.feature", "diffHunk": "@@ -12,12 +12,38 @@ Feature: DistributionAutomation Receive measurement reports\n       | CommonAddress        |                75 |\n     When Organization test-org connects to device TEST1024000000001\n     Then I get a measurement report for device TEST1024000000001\n+      |  |  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMzkxNw=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3OTcxNA==", "bodyText": "Changed the description of the steps to indicate if values need to be checked or not.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427079714", "createdAt": "2020-05-19T07:16:07Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/resources/features/osgp-adapter-ws-distributionautomation/ReceiveMeasurementReports.feature", "diffHunk": "@@ -12,12 +12,38 @@ Feature: DistributionAutomation Receive measurement reports\n       | CommonAddress        |                75 |\n     When Organization test-org connects to device TEST1024000000001\n     Then I get a measurement report for device TEST1024000000001\n+      |  |  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMzkxNw=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjQwOTI3OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoyODoxOVrOGWxGnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyODo0NlrOGW3LGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNjM2Nw==", "bodyText": "The name of an exception should end with \"Exception\", rename the class to InformationObjectTypeNotSupportedException", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426526367", "createdAt": "2020-05-18T10:28:19Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.iec60870.exceptions;\n+\n+public class InformationObjectTypeNotSupported extends RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyNTgxOQ==", "bodyText": "ok", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426625819", "createdAt": "2020-05-18T13:28:46Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.iec60870.exceptions;\n+\n+public class InformationObjectTypeNotSupported extends RuntimeException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNjM2Nw=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjQyOTg2OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDozNDo1N1rOGWxT_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoxNjo0MVrOGXS5Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyOTc4OQ==", "bodyText": "Is this a better choice than using plain \"1\" as a value? We currently don't manage the serial version.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426529789", "createdAt": "2020-05-18T10:34:57Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.iec60870.exceptions;\n+\n+public class InformationObjectTypeNotSupported extends RuntimeException {\n+\n+    private static final long serialVersionUID = -8763916774984177378L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyNjg4OA==", "bodyText": "An even better choice is to upgrade sonar so it no longer complains about missing serialVersionUID.\nSince it complained i generated one in Eclipse.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426626888", "createdAt": "2020-05-18T13:30:14Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.iec60870.exceptions;\n+\n+public class InformationObjectTypeNotSupported extends RuntimeException {\n+\n+    private static final long serialVersionUID = -8763916774984177378L;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyOTc4OQ=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3OTk5NA==", "bodyText": "removed serialVersionUID", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427079994", "createdAt": "2020-05-19T07:16:41Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/exceptions/InformationObjectTypeNotSupported.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.iec60870.exceptions;\n+\n+public class InformationObjectTypeNotSupported extends RuntimeException {\n+\n+    private static final long serialVersionUID = -8763916774984177378L;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyOTc4OQ=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjQ1MTIwOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/asduhandlers/SinglePointInformationWithTimeTagAsduHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDo0MTo0NFrOGWxhjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozMDoyOFrOGW3P3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUzMzI2Mg==", "bodyText": "It seems a concrete class instead of an abstract class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426533262", "createdAt": "2020-05-18T10:41:44Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/asduhandlers/SinglePointInformationWithTimeTagAsduHandler.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.iec60870.domain.services.asduhandlers;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.opensmartgridplatform.adapter.protocol.iec60870.domain.services.AbstractClientAsduHandler;\n+import org.opensmartgridplatform.adapter.protocol.iec60870.domain.valueobjects.ResponseMetadata;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Abstract class providing an implementation for handling single point", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyNzAzOQ==", "bodyText": "changed it", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426627039", "createdAt": "2020-05-18T13:30:28Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/asduhandlers/SinglePointInformationWithTimeTagAsduHandler.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.iec60870.domain.services.asduhandlers;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.opensmartgridplatform.adapter.protocol.iec60870.domain.services.AbstractClientAsduHandler;\n+import org.opensmartgridplatform.adapter.protocol.iec60870.domain.valueobjects.ResponseMetadata;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Abstract class providing an implementation for handling single point", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUzMzI2Mg=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjUwMzcyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/Iec60870AsduFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDo1NzoyNlrOGWyCNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyMToyN1rOGW24KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0MTYyMg==", "bodyText": "Using streams makes this more compact and perhaps easier to read:\nreturn map.entrySet()\n.stream()\n.map(entry -> new InformationObject(entry.getKey(), entry.getValue()))\n.toArray(InformationObject[]::new);", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426541622", "createdAt": "2020-05-18T10:57:26Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/Iec60870AsduFactory.java", "diffHunk": "@@ -40,4 +47,15 @@ default ASdu createActivationTerminationResponseAsdu() {\n                 .build();\n     }\n \n+    default InformationObject[] processImageToArray(final Map<Integer, InformationElement[][]> map) {\n+        final Integer[] keys = map.keySet().toArray(new Integer[map.size()]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMDk2OQ==", "bodyText": "very good!", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426620969", "createdAt": "2020-05-18T13:21:27Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/Iec60870AsduFactory.java", "diffHunk": "@@ -40,4 +47,15 @@ default ASdu createActivationTerminationResponseAsdu() {\n                 .build();\n     }\n \n+    default InformationObject[] processImageToArray(final Map<Integer, InformationElement[][]> map) {\n+        final Integer[] keys = map.keySet().toArray(new Integer[map.size()]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0MTYyMg=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjUzODcxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMTowOToxM1rOGWyY5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzoyNDoxM1rOGW2_Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0NzQyOA==", "bodyText": "Are the new int[0] and new float[0] statements used by the real code or only by test code? These arrays of length 1 look strange in combination with the initialize() method, which uses a loop. Can we remove the loop or can it get a longer array as input as well?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426547428", "createdAt": "2020-05-18T11:09:13Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -29,31 +36,37 @@\n public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n \n     @Value(\"${general_interrogation_object_addresses}\")\n-    private int[] ioa;\n+    private final int[] ioa = new int[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMjc5OQ==", "bodyText": "If 'general_interrogation_object_addresses' is present in the property file, the array is filled with the values in that file. Normally that is the case so we need the loop. For cucumber tests that is not the case.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426622799", "createdAt": "2020-05-18T13:24:13Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -29,31 +36,37 @@\n public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n \n     @Value(\"${general_interrogation_object_addresses}\")\n-    private int[] ioa;\n+    private final int[] ioa = new int[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU0NzQyOA=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Njc2OTUxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/test/java/org/opensmartgridplatform/simulator/protocol/iec60870/server/Iec60870UpdateInformationObjectTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjoyMTozM1rOGW0pLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODowNzoxM1rOGXUoPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4NDM2NA==", "bodyText": "Shouldn't we check the content of the full process image instead of just this single IO (to verify the update didn't affect other IOs)?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426584364", "createdAt": "2020-05-18T12:21:33Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/test/java/org/opensmartgridplatform/simulator/protocol/iec60870/server/Iec60870UpdateInformationObjectTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.argThat;\n+import static org.mockito.Mockito.verify;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.Connection;\n+import org.openmuc.j60870.ie.IeSinglePointWithQuality;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.opensmartgridplatform.iec60870.Iec60870Server;\n+import org.opensmartgridplatform.iec60870.Iec60870ServerEventListener;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+\n+@SpringBootTest\n+@ExtendWith(MockitoExtension.class)\n+@ActiveProfiles(\"light_measurement_device\")\n+class Iec60870UpdateInformationObjectTest {\n+\n+    @Autowired\n+    private Iec60870Server iec60870Server;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    private static boolean ON = true;\n+    private static final IeSinglePointWithQuality EXPECTED = new IeSinglePointWithQuality(ON, false, false, false,\n+            false);\n+\n+    /**\n+     * informationObjectAddress 42 is in\n+     * application-light_measurement_device.properties with value false, we will\n+     * test updating that address\n+     */\n+    @Test\n+    void testUpdateExistingInformationObject() {\n+\n+        final int informationObjectAddress = 42;\n+\n+        this.iec60870Server.updateInformationObject(informationObjectAddress, \"IeSinglePointWithQuality\", ON);\n+\n+        final InformationElement[][] actual = this.iec60870Server.getProcessImage().get(informationObjectAddress);\n+        assertThat(actual[0][0]).usingRecursiveComparison().isEqualTo(EXPECTED);\n+    }\n+\n+    /**\n+     * informationObjectAddress 2 is not in\n+     * application-light_measurement_device.properties, we will test updating\n+     * that address\n+     */\n+    @Test\n+    void testAddInformationObject() {\n+\n+        final int informationObjectAddress = 2;\n+\n+        this.iec60870Server.updateInformationObject(informationObjectAddress, \"IeSinglePointWithQuality\", ON);\n+\n+        final InformationElement[][] actual = this.iec60870Server.getProcessImage().get(informationObjectAddress);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwODQxMg==", "bodyText": "done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427108412", "createdAt": "2020-05-19T08:07:13Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/test/java/org/opensmartgridplatform/simulator/protocol/iec60870/server/Iec60870UpdateInformationObjectTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.server;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.argThat;\n+import static org.mockito.Mockito.verify;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.Connection;\n+import org.openmuc.j60870.ie.IeSinglePointWithQuality;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.opensmartgridplatform.iec60870.Iec60870Server;\n+import org.opensmartgridplatform.iec60870.Iec60870ServerEventListener;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.ActiveProfiles;\n+\n+@SpringBootTest\n+@ExtendWith(MockitoExtension.class)\n+@ActiveProfiles(\"light_measurement_device\")\n+class Iec60870UpdateInformationObjectTest {\n+\n+    @Autowired\n+    private Iec60870Server iec60870Server;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    private static boolean ON = true;\n+    private static final IeSinglePointWithQuality EXPECTED = new IeSinglePointWithQuality(ON, false, false, false,\n+            false);\n+\n+    /**\n+     * informationObjectAddress 42 is in\n+     * application-light_measurement_device.properties with value false, we will\n+     * test updating that address\n+     */\n+    @Test\n+    void testUpdateExistingInformationObject() {\n+\n+        final int informationObjectAddress = 42;\n+\n+        this.iec60870Server.updateInformationObject(informationObjectAddress, \"IeSinglePointWithQuality\", ON);\n+\n+        final InformationElement[][] actual = this.iec60870Server.getProcessImage().get(informationObjectAddress);\n+        assertThat(actual[0][0]).usingRecursiveComparison().isEqualTo(EXPECTED);\n+    }\n+\n+    /**\n+     * informationObjectAddress 2 is not in\n+     * application-light_measurement_device.properties, we will test updating\n+     * that address\n+     */\n+    @Test\n+    void testAddInformationObject() {\n+\n+        final int informationObjectAddress = 2;\n+\n+        this.iec60870Server.updateInformationObject(informationObjectAddress, \"IeSinglePointWithQuality\", ON);\n+\n+        final InformationElement[][] actual = this.iec60870Server.getProcessImage().get(informationObjectAddress);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4NDM2NA=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjgzNjEzOnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjozOTo1M1rOGW1RnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzozOTo0OFrOGW3oAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5NDcxNw==", "bodyText": "Shouldn't we derive this from the informationObjectType?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426594717", "createdAt": "2020-05-18T12:39:53Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")\n+    public void iUpdateTheInformationObject(final Map<String, String> parameters) {\n+        final Integer informationObjectAddress = Integer.valueOf(parameters.get(INFORMATION_OBJECT_ADDRESS));\n+        final String informationObjectType = parameters.get(INFORMATION_OBJECT_TYPE);\n+        this.mockServer.getRtuSimulator()\n+                .updateInformationObject(informationObjectAddress, informationObjectType,\n+                        this.informationElementvalue(parameters.get(INFORMATION_ELEMENT_VALUE)));\n+    }\n+\n+    private Object informationElementvalue(final String value) {\n+        final String profile = (String) ScenarioContext.current().get(PROFILE);\n+        if (\"light_measurement_device\".equals(profile)) {\n+            return Boolean.valueOf(value);\n+        }\n+        return Float.valueOf(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMzIxOQ==", "bodyText": "there is no informationObjectType in this step", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426633219", "createdAt": "2020-05-18T13:39:48Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")\n+    public void iUpdateTheInformationObject(final Map<String, String> parameters) {\n+        final Integer informationObjectAddress = Integer.valueOf(parameters.get(INFORMATION_OBJECT_ADDRESS));\n+        final String informationObjectType = parameters.get(INFORMATION_OBJECT_TYPE);\n+        this.mockServer.getRtuSimulator()\n+                .updateInformationObject(informationObjectAddress, informationObjectType,\n+                        this.informationElementvalue(parameters.get(INFORMATION_ELEMENT_VALUE)));\n+    }\n+\n+    private Object informationElementvalue(final String value) {\n+        final String profile = (String) ScenarioContext.current().get(PROFILE);\n+        if (\"light_measurement_device\".equals(profile)) {\n+            return Boolean.valueOf(value);\n+        }\n+        return Float.valueOf(value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5NDcxNw=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Njg0MTExOnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo0MTowMlrOGW1UfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MDozNFrOGW3qHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5NTQ1Mw==", "bodyText": "Change to \"^I update the information object$\".", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426595453", "createdAt": "2020-05-18T12:41:02Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzMzc1Ng==", "bodyText": "ok", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426633756", "createdAt": "2020-05-18T13:40:34Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU5NTQ1Mw=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Njg5MjgxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo1Mzo1NFrOGW1z-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODowNzoyNlrOGXUotg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwMzUxNQ==", "bodyText": "Should we also send the event, when the new value is the same as the old value?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426603515", "createdAt": "2020-05-18T12:53:54Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "diffHunk": "@@ -53,4 +60,38 @@ public Iec60870ServerEventListener getIec60870ServerEventListener() {\n     public boolean isListening() {\n         return this.listening;\n     }\n+\n+    public Map<Integer, InformationElement[][]> getProcessImage() {\n+        return this.processImage;\n+    }\n+\n+    public void setProcessImage(final Map<Integer, InformationElement[][]> processImage) {\n+        this.processImage = processImage;\n+    }\n+\n+    /**\n+     * If the informationObjectAddress is already in the process image, the\n+     * value is updated. Otherwise a new item is added to the process image.\n+     * \n+     * An event ASDU is sent to the controlling station.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTA1Mw==", "bodyText": "good question", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426635053", "createdAt": "2020-05-18T13:42:26Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "diffHunk": "@@ -53,4 +60,38 @@ public Iec60870ServerEventListener getIec60870ServerEventListener() {\n     public boolean isListening() {\n         return this.listening;\n     }\n+\n+    public Map<Integer, InformationElement[][]> getProcessImage() {\n+        return this.processImage;\n+    }\n+\n+    public void setProcessImage(final Map<Integer, InformationElement[][]> processImage) {\n+        this.processImage = processImage;\n+    }\n+\n+    /**\n+     * If the informationObjectAddress is already in the process image, the\n+     * value is updated. Otherwise a new item is added to the process image.\n+     * \n+     * An event ASDU is sent to the controlling station.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwMzUxNQ=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwODUzNA==", "bodyText": "done so", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427108534", "createdAt": "2020-05-19T08:07:26Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "diffHunk": "@@ -53,4 +60,38 @@ public Iec60870ServerEventListener getIec60870ServerEventListener() {\n     public boolean isListening() {\n         return this.listening;\n     }\n+\n+    public Map<Integer, InformationElement[][]> getProcessImage() {\n+        return this.processImage;\n+    }\n+\n+    public void setProcessImage(final Map<Integer, InformationElement[][]> processImage) {\n+        this.processImage = processImage;\n+    }\n+\n+    /**\n+     * If the informationObjectAddress is already in the process image, the\n+     * value is updated. Otherwise a new item is added to the process image.\n+     * \n+     * An event ASDU is sent to the controlling station.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwMzUxNQ=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjkwNzU3OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870ServerEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo1Nzo0NlrOGW19eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo0MzoyMFrOGW3xuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNTk0NA==", "bodyText": "No further actions required, like closing the connection?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426605944", "createdAt": "2020-05-18T12:57:46Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870ServerEventListener.java", "diffHunk": "@@ -84,6 +85,24 @@ private void sendEndOfInitializationOnFirstConnection(final Connection connectio\n         }\n     }\n \n+    public void sendInformationUpdateEvent(final int informationObjectAddress,\n+            final InformationElement[][] informationElements) {\n+\n+        final ASdu event = new ASdu(ASduType.M_SP_TB_1, false, CauseOfTransmission.SPONTANEOUS, false, false, 0, 0,\n+                new InformationObject(informationObjectAddress, informationElements));\n+\n+        this.iec60870ConnectionRegistry.getAllConnections().forEach(connection -> this.sendEvent(connection, event));\n+    }\n+\n+    private void sendEvent(final Connection connection, final ASdu event) {\n+        try {\n+            LOGGER.info(\"Sending event {}\", event);\n+            connection.send(event);\n+        } catch (final IOException e) {\n+            LOGGER.error(\"Sending event {} failed\", event, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYzNTcwNA==", "bodyText": "I would prefer the connection to stay open", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426635704", "createdAt": "2020-05-18T13:43:20Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870ServerEventListener.java", "diffHunk": "@@ -84,6 +85,24 @@ private void sendEndOfInitializationOnFirstConnection(final Connection connectio\n         }\n     }\n \n+    public void sendInformationUpdateEvent(final int informationObjectAddress,\n+            final InformationElement[][] informationElements) {\n+\n+        final ASdu event = new ASdu(ASduType.M_SP_TB_1, false, CauseOfTransmission.SPONTANEOUS, false, false, 0, 0,\n+                new InformationObject(informationObjectAddress, informationElements));\n+\n+        this.iec60870ConnectionRegistry.getAllConnections().forEach(connection -> this.sendEvent(connection, event));\n+    }\n+\n+    private void sendEvent(final Connection connection, final ASdu event) {\n+        try {\n+            LOGGER.info(\"Sending event {}\", event);\n+            connection.send(event);\n+        } catch (final IOException e) {\n+            LOGGER.error(\"Sending event {} failed\", event, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNTk0NA=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjkxODU2OnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzowMDozMVrOGW2EVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNTo0NVrOGW5nDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzcwMg==", "bodyText": "We use the informationObjectType as a String in many places. Shouldn't we change this to an enum?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426607702", "createdAt": "2020-05-18T13:00:31Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")\n+    public void iUpdateTheInformationObject(final Map<String, String> parameters) {\n+        final Integer informationObjectAddress = Integer.valueOf(parameters.get(INFORMATION_OBJECT_ADDRESS));\n+        final String informationObjectType = parameters.get(INFORMATION_OBJECT_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NTc0MA==", "bodyText": "ok", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r426665740", "createdAt": "2020-05-18T14:25:45Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ProcessImageSteps.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.cucumber.platform.distributionautomation.glue.steps;\n+\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_ELEMENT_VALUE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_ADDRESS;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.INFORMATION_OBJECT_TYPE;\n+import static org.opensmartgridplatform.cucumber.platform.distributionautomation.PlatformDistributionAutomationKeys.PROFILE;\n+\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.distributionautomation.mocks.iec60870.Iec60870MockServer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.When;\n+\n+public class ProcessImageSteps {\n+\n+    @Autowired\n+    private Iec60870MockServer mockServer;\n+\n+    @When(\"I update the information object\")\n+    public void iUpdateTheInformationObject(final Map<String, String> parameters) {\n+        final Integer informationObjectAddress = Integer.valueOf(parameters.get(INFORMATION_OBJECT_ADDRESS));\n+        final String informationObjectType = parameters.get(INFORMATION_OBJECT_TYPE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzcwMg=="}, "originalCommit": {"oid": "3fd994924fece9cca547bc5937de64de26d09228"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTc1NzEyOnYy", "diffSide": "RIGHT", "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMjo1MlrOGXlVbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMjo1MlrOGXlVbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MjEyNA==", "bodyText": "On line 138 or right after, convert the String to an Iec60870InformationObjectType item. It makes the comparisons cleaner and when a typo is made in the expectedValue, the test will end right away with a RuntimeException.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427382124", "createdAt": "2020-05-19T15:12:52Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "diffHunk": "@@ -130,11 +143,11 @@ private void checkInformationElementValue(final Map<String, String> reportValues\n                 .getMeasurementElements()\n                 .getMeasurementElementList()\n                 .get(0);\n-        if (\"IeShortFloat\".equals(expectedType)) {\n+        if (Iec60870InformationObjectType.SHORT_FLOAT.getDescription().equals(expectedType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913454becef80e82b18d838c6e6a82dbec51cda9"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDQxMjU3OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzo1MDoxMFrOGX_WyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzo1MDoxMFrOGX_WyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwODQ1Ng==", "bodyText": "Either:\na) remove the initial \"false\" assignment or\nb) initially assign \"true\" and remove the else branch.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/320#discussion_r427808456", "createdAt": "2020-05-20T07:50:10Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870Server.java", "diffHunk": "@@ -73,25 +73,52 @@ public void setProcessImage(final Map<Integer, InformationElement[][]> processIm\n      * If the informationObjectAddress is already in the process image, the\n      * value is updated. Otherwise a new item is added to the process image.\n      * \n-     * An event ASDU is sent to the controlling station.\n+     * An event ASDU is sent to the controlling station if the value has\n+     * changed.\n      * \n      * @param informationObjectAddress\n      *            the address of the item in the process image\n      * @param informationObjectType\n-     *            the type of information object; if not supported, a\n-     *            InformationObjectTypeNotSupported is thrown\n+     *            the type of information object\n      * @param value\n      *            the information element value\n      */\n-    public void updateInformationObject(final int informationObjectAddress, final String informationObjectType,\n-            final Object value) {\n+    public void updateInformationObject(final int informationObjectAddress,\n+            final Iec60870InformationObjectType informationObjectType, final Object value) {\n \n         final InformationElement[][] informationElements = this.informationElementFactory\n                 .createInformationElements(informationObjectType, value);\n \n+        boolean valueChanged = false;\n+        if (this.processImage.containsKey(informationObjectAddress)) {\n+            valueChanged = this.hasChanged(informationElements, this.processImage.get(informationObjectAddress));\n+        } else {\n+            valueChanged = true;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "913454becef80e82b18d838c6e6a82dbec51cda9"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}