{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjA3NDAy", "number": 436, "title": "Code quality/increase coverage of device installation service", "bodyText": "", "createdAt": "2020-09-29T07:04:34Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436", "merged": true, "mergeCommit": {"oid": "fc80ffb8cbad7dc8f5f2d4ce29cea7b40b315820"}, "closed": true, "closedAt": "2020-11-26T07:48:47Z", "author": {"login": "MithraicMagic"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLTL_rAH2gAyNDk0NjA3NDAyOmY1ZmJlODEwM2RmNTRhYTQ2YmFiMmE4OTQ1ODEwZmFjYTZiNTA2NWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgOGi_AFqTUzOTA2MDY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5fbe8103df54aa46bab2a8945810faca6b5065c", "author": {"user": {"login": "MithraicMagic", "name": "Nick Walraven"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f5fbe8103df54aa46bab2a8945810faca6b5065c", "committedDate": "2020-09-22T07:51:42Z", "message": "Added new tests for the DeviceInstallationServiceTest class\n\nCoverage has been increased to 95.6%"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4623479e15b76b5e91f6f1412d553982489cba5f", "author": {"user": {"login": "MithraicMagic", "name": "Nick Walraven"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4623479e15b76b5e91f6f1412d553982489cba5f", "committedDate": "2020-09-24T12:39:17Z", "message": "- Using AssertJ and mockito\n- Removed verify usage and replaced all with argument captors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df", "author": {"user": {"login": "MithraicMagic", "name": "Nick Walraven"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df", "committedDate": "2020-09-24T14:11:54Z", "message": "- Removed whitespace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjc5Njk0", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#pullrequestreview-502679694", "createdAt": "2020-10-06T08:02:40Z", "commit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzE0OTE1", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#pullrequestreview-506314915", "createdAt": "2020-10-12T06:09:02Z", "commit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNjowOTowMlrOHfwMQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNjozNjo1OFrOHfwy2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA1NzQ3Mg==", "bodyText": "licence header missing", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503057472", "createdAt": "2020-10-12T06:09:02Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MDYwMg==", "bodyText": "Remove this line; the default strictness is better.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503060602", "createdAt": "2020-10-12T06:18:59Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MTY4NA==", "bodyText": "rename the field to argumentResponseMessage", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503061684", "createdAt": "2020-10-12T06:21:55Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MTgzNg==", "bodyText": "rename the field to argumentRequestMessage", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503061836", "createdAt": "2020-10-12T06:22:19Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MzA1MQ==", "bodyText": "give this field a descriptive name like argumentMessageType", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503063051", "createdAt": "2020-10-12T06:25:39Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MzIxMg==", "bodyText": "give this field a descriptive name like argumentIpAddress", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503063212", "createdAt": "2020-10-12T06:26:05Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2MzI5OQ==", "bodyText": "give this field a descriptive name like argumentPriority", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503063299", "createdAt": "2020-10-12T06:26:20Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<Integer> argumentInt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2NDI0Mg==", "bodyText": "Since we are going to check the values in the assert part of the tests, it is clearer to create constants for testIp, testUid, testOrganisation, testDevice and testMessageType. Furthmore, create a constant for testMessagePriority with value 1", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503064242", "createdAt": "2020-10-12T06:29:04Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<Integer> argumentInt;\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsNotLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\t\t\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2NjEwNA==", "bodyText": "Since\nnew RequestMessage(\n\"testUid\",\n\"testOrganisation\",\n\"testDevice\", null);\nis used in other tests, refactor it to a constant. If other tests use other parameters, refactor it to a method.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503066104", "createdAt": "2020-10-12T06:33:56Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<Integer> argumentInt;\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsNotLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\t\t\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);\n+\n+\t\tverify(this.osgpCoreRequestMessageSender).send(this.argumentReqM.capture(), this.argumentStringOne.capture(),\n+\t\t\t\tthis.argumentInt.capture(), this.argumentStringTwo.capture());\n+\n+\t\tassertThat(this.argumentReqM.getValue()).usingRecursiveComparison().isEqualTo(new RequestMessage(\n+\t\t\t\t\"testUid\",\n+\t\t\t\t\"testOrganisation\",\n+\t\t\t\t\"testDevice\", null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2NjUyNA==", "bodyText": "Since\nnew CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\")\nis used in other tests, refactor it to a constant", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503066524", "createdAt": "2020-10-12T06:34:56Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<Integer> argumentInt;\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsNotLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\t\t\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);\n+\n+\t\tverify(this.osgpCoreRequestMessageSender).send(this.argumentReqM.capture(), this.argumentStringOne.capture(),\n+\t\t\t\tthis.argumentInt.capture(), this.argumentStringTwo.capture());\n+\n+\t\tassertThat(this.argumentReqM.getValue()).usingRecursiveComparison().isEqualTo(new RequestMessage(\n+\t\t\t\t\"testUid\",\n+\t\t\t\t\"testOrganisation\",\n+\t\t\t\t\"testDevice\", null));\n+\t\tassertThat(this.argumentStringOne.getValue()).isEqualTo(\"testMessageType\");\n+\t\tassertThat(this.argumentInt.getValue()).isEqualTo(1);\n+\t\tassertThat(this.argumentStringTwo.getValue()).isEqualTo(\"testIp\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getDeviceType()).thenReturn(\"LMD\");\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);\n+\n+\t\tverify(this.osgpCoreRequestMessageSender).send(this.argumentReqM.capture(), this.argumentStringOne.capture(),\n+\t\t\t\tthis.argumentInt.capture(), this.argumentStringTwo.capture());\n+\n+\t\tassertThat(this.argumentReqM.getValue()).usingRecursiveComparison().isEqualTo(new RequestMessage(\n+\t\t\t\t\"testUid\",\n+\t\t\t\t\"testOrganisation\",\n+\t\t\t\t\"testDevice\", null));\n+\t\tassertThat(this.argumentStringOne.getValue()).isEqualTo(\"GET_LIGHT_SENSOR_STATUS\");\n+\t\tassertThat(this.argumentInt.getValue()).isEqualTo(1);\n+\t\tassertThat(this.argumentStringTwo.getValue()).isEqualTo(\"testIp\");\n+\t}\n+\n+\t@Test\n+\tpublic void testHandleGetStatusResponseNotOk() {\n+\t\tthis.deviceInstallationService.handleGetStatusResponse(null, new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"),\n+\t\t\t\t\"testMessageType\", 1, ResponseMessageResultType.NOT_OK, null);\n+\n+\t\tverify(this.webServiceResponseMessageSender).send(this.argumentResM.capture());\n+\t\tassertThat(this.argumentResM.getValue()).usingRecursiveComparison().isEqualTo(ResponseMessage.newResponseMessageBuilder()\n+\t\t\t\t.withIds(new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA2NzM1Mw==", "bodyText": "Refactor the building of a response message to a method and use that method in other tests as well", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r503067353", "createdAt": "2020-10-12T06:36:58Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.mockito.junit.jupiter.MockitoSettings;\n+import org.mockito.quality.Strictness;\n+import org.opensmartgridplatform.adapter.domain.core.application.mapping.DomainCoreMapper;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.core.OsgpCoreRequestMessageSender;\n+import org.opensmartgridplatform.adapter.domain.core.infra.jms.ws.WebServiceResponseMessageSender;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.LightMeasurementDevice;\n+import org.opensmartgridplatform.domain.core.entities.Ssld;\n+import org.opensmartgridplatform.domain.core.exceptions.ValidationException;\n+import org.opensmartgridplatform.domain.core.repositories.SsldRepository;\n+import org.opensmartgridplatform.domain.core.services.DeviceDomainService;\n+import org.opensmartgridplatform.domain.core.services.OrganisationDomainService;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatus;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceStatusMapped;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightType;\n+import org.opensmartgridplatform.domain.core.valueobjects.LightValue;\n+import org.opensmartgridplatform.domain.core.valueobjects.LinkType;\n+import org.opensmartgridplatform.domain.core.valueobjects.TariffValue;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.NoDeviceResponseException;\n+import org.opensmartgridplatform.shared.exceptionhandling.TechnicalException;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+\n+@ExtendWith(MockitoExtension.class)\n+@MockitoSettings(strictness = Strictness.LENIENT)\n+public class DeviceInstallationServiceTest {\n+\t\n+\t@Mock\n+\tprivate OrganisationDomainService organisationDomainService;\n+\t\n+\t@Mock\n+\tprivate DeviceDomainService deviceDomainService;\n+\t\n+\t@Mock\n+\tprivate OsgpCoreRequestMessageSender osgpCoreRequestMessageSender;\n+\t\n+\t@Mock\n+\tprivate WebServiceResponseMessageSender webServiceResponseMessageSender;\n+\t\n+\t@Mock\n+\tprivate DomainCoreMapper domainCoreMapper;\n+\t\n+\t@Mock\n+\tprivate SsldRepository ssldRepository;\n+\t\n+\t@InjectMocks\n+\tprivate DeviceInstallationService deviceInstallationService;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<ResponseMessage> argumentResM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<RequestMessage> argumentReqM;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringOne;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<String> argumentStringTwo;\n+\n+\t@Captor\n+\tprivate ArgumentCaptor<Integer> argumentInt;\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsNotLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\t\t\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);\n+\n+\t\tverify(this.osgpCoreRequestMessageSender).send(this.argumentReqM.capture(), this.argumentStringOne.capture(),\n+\t\t\t\tthis.argumentInt.capture(), this.argumentStringTwo.capture());\n+\n+\t\tassertThat(this.argumentReqM.getValue()).usingRecursiveComparison().isEqualTo(new RequestMessage(\n+\t\t\t\t\"testUid\",\n+\t\t\t\t\"testOrganisation\",\n+\t\t\t\t\"testDevice\", null));\n+\t\tassertThat(this.argumentStringOne.getValue()).isEqualTo(\"testMessageType\");\n+\t\tassertThat(this.argumentInt.getValue()).isEqualTo(1);\n+\t\tassertThat(this.argumentStringTwo.getValue()).isEqualTo(\"testIp\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testGetStatusTestDeviceTypeIsLmdType() throws FunctionalException {\n+\t\tfinal Device device = Mockito.mock(Device.class);\n+\t\twhen(device.getDeviceType()).thenReturn(\"LMD\");\n+\t\twhen(device.getIpAddress()).thenReturn(\"testIp\");\n+\t\twhen(this.deviceDomainService.searchActiveDevice(\"testDevice\", ComponentType.DOMAIN_CORE)).thenReturn(device);\n+\n+\t\tthis.deviceInstallationService.getStatus(\"testOrganisation\", \"testDevice\", \"testUid\", \"testMessageType\", 1);\n+\n+\t\tverify(this.osgpCoreRequestMessageSender).send(this.argumentReqM.capture(), this.argumentStringOne.capture(),\n+\t\t\t\tthis.argumentInt.capture(), this.argumentStringTwo.capture());\n+\n+\t\tassertThat(this.argumentReqM.getValue()).usingRecursiveComparison().isEqualTo(new RequestMessage(\n+\t\t\t\t\"testUid\",\n+\t\t\t\t\"testOrganisation\",\n+\t\t\t\t\"testDevice\", null));\n+\t\tassertThat(this.argumentStringOne.getValue()).isEqualTo(\"GET_LIGHT_SENSOR_STATUS\");\n+\t\tassertThat(this.argumentInt.getValue()).isEqualTo(1);\n+\t\tassertThat(this.argumentStringTwo.getValue()).isEqualTo(\"testIp\");\n+\t}\n+\n+\t@Test\n+\tpublic void testHandleGetStatusResponseNotOk() {\n+\t\tthis.deviceInstallationService.handleGetStatusResponse(null, new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"),\n+\t\t\t\t\"testMessageType\", 1, ResponseMessageResultType.NOT_OK, null);\n+\n+\t\tverify(this.webServiceResponseMessageSender).send(this.argumentResM.capture());\n+\t\tassertThat(this.argumentResM.getValue()).usingRecursiveComparison().isEqualTo(ResponseMessage.newResponseMessageBuilder()\n+\t\t\t\t.withIds(new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"))\n+\t\t\t\t.withResult(ResponseMessageResultType.NOT_OK).withOsgpException(null)\n+\t\t\t\t.withDataObject(null).withMessagePriority(1).build());\n+\t}\n+\n+\t@Test\n+\tpublic void testHandleGetStatusResponseOkLmdStatusNotNull() throws FunctionalException, ValidationException {\n+\t\tfinal TariffValue editedTariffValue = new TariffValue();\n+\t\teditedTariffValue.setHigh(true);\n+\t\teditedTariffValue.setIndex(10);\n+\t\tfinal DeviceStatusMapped deviceStatus = new DeviceStatusMapped(null,\n+\t\t\t\tArrays.asList(new LightValue(0, true, 50), new LightValue(1, true, 75), new LightValue(2, false, 0)),\n+\t\t\t\tLinkType.ETHERNET, LinkType.GPRS, LightType.ONE_TO_TEN_VOLT,0\n+\t\t);\n+\t\twhen(this.domainCoreMapper.map(null, DeviceStatus.class)).thenReturn(deviceStatus);\n+\n+\t\tfinal Device mockedDevice = Mockito.mock(Device.class);\n+\t\twhen(mockedDevice.getDeviceType()).thenReturn(LightMeasurementDevice.LMD_TYPE);\n+\t\twhen(this.deviceDomainService.searchDevice(\"testDevice\")).thenReturn(mockedDevice);\n+\n+\t\tthis.deviceInstallationService.handleGetStatusResponse(null, new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"),\n+\t\t\t\t\"testMessageType\", 1, ResponseMessageResultType.OK, null);\n+\n+\t\tverify(this.webServiceResponseMessageSender).send(this.argumentResM.capture());\n+\t\tassertThat(this.argumentResM.getValue()).usingRecursiveComparison().isEqualTo(ResponseMessage.newResponseMessageBuilder()\n+\t\t\t\t.withIds(new CorrelationIds(\"testOrganisation\", \"testDevice\", \"testUid\"))\n+\t\t\t\t.withResult(ResponseMessageResultType.OK).withOsgpException(null)\n+\t\t\t\t.withDataObject(deviceStatus)\n+\t\t\t\t.withMessagePriority(1)\n+\t\t\t\t.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 162}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9bffc257e7eee211941601a4502361e4f820b61", "author": {"user": {"login": "MithraicMagic", "name": "Nick Walraven"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a9bffc257e7eee211941601a4502361e4f820b61", "committedDate": "2020-10-13T08:23:20Z", "message": "- Added License Header\n- Renamed some fields\n- Added response message creation method\n- Refactored some repeatedly used objects into constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDExMjM3", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#pullrequestreview-515411237", "createdAt": "2020-10-23T07:31:45Z", "commit": {"oid": "a9bffc257e7eee211941601a4502361e4f820b61"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzozMTo0NVrOHnCBGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzozNjozN1rOHnCKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4OTU2Mg==", "bodyText": "move the licence header to the top", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r510689562", "createdAt": "2020-10-23T07:31:45Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,276 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA1NzQ3Mg=="}, "originalCommit": {"oid": "fc2909ae9cd9bbd4c3f1a2a48bbf71c2e95771df"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5MTk1Nw==", "bodyText": "Formatting not ok, check your IDE settings", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#discussion_r510691957", "createdAt": "2020-10-23T07:36:37Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-domain-core/src/test/java/org/opensmartgridplatform/adapter/domain/core/application/services/DeviceInstallationServiceTest.java", "diffHunk": "@@ -0,0 +1,275 @@\n+package org.opensmartgridplatform.adapter.domain.core.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9bffc257e7eee211941601a4502361e4f820b61"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c6cd9c701d1e32c983962a113978661590d7637", "author": {"user": {"login": "MithraicMagic", "name": "Nick Walraven"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5c6cd9c701d1e32c983962a113978661590d7637", "committedDate": "2020-11-17T14:31:28Z", "message": "- Formatting using the eclipse Config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDYwNjc2", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/436#pullrequestreview-539060676", "createdAt": "2020-11-26T07:48:38Z", "commit": {"oid": "5c6cd9c701d1e32c983962a113978661590d7637"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3641, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}