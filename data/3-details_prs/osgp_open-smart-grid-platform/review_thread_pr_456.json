{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDQ1OTc2", "number": 456, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzoyMDoxMVrOEs5hjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDoxNjozNlrOEtNOCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NTE1Mjc2OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzoyMDoxMVrOHgYpVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzoyMDoxMVrOHgYpVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMDI3OA==", "bodyText": "Override the \"equals\" method in this class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r503720278", "createdAt": "2020-10-13T07:20:11Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "diffHunk": "@@ -42,15 +42,15 @@\n  * ls peak shaving measurement: ean_code + the values of\n  * LsPeakShavingMeasurementType seperated by semicolons.\n  */\n-public class GridMeasurementPublishedEventConverter extends CustomConverter<String, GridMeasurementPublishedEvent> {\n+public class ScadaMeasurementPublishedEventConverter extends CustomConverter<String, ScadaMeasurementPublishedEvent> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODMwNDA4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTo1NDozMFrOHg2_jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjowODoyOFrOHhyFNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzQ4NA==", "bodyText": "I think the \"Arrays.toString\" is needed for readable output.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504217484", "createdAt": "2020-10-13T19:54:30Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "diffHunk": "@@ -64,8 +64,7 @@ public GridMeasurementPublishedEvent convert(final String source,\n             final Payload payload = payloads[0];\n \n             final String[] measurementValues = (payload.gisnr + \", \" + String.join(\", \", payload.data)).split(\", \");\n-            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length,\n-                    Arrays.toString(measurementValues));\n+            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length, measurementValues);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4NTU4OQ==", "bodyText": "reverted the change", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505185589", "createdAt": "2020-10-15T06:08:28Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/application/mapping/ScadaMeasurementPublishedEventConverter.java", "diffHunk": "@@ -64,8 +64,7 @@ public GridMeasurementPublishedEvent convert(final String source,\n             final Payload payload = payloads[0];\n \n             final String[] measurementValues = (payload.gisnr + \", \" + String.join(\", \", payload.data)).split(\", \");\n-            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length,\n-                    Arrays.toString(measurementValues));\n+            LOGGER.debug(\"Values length: {} and values: {}\", measurementValues.length, measurementValues);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzQ4NA=="}, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODMyNDQ5OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-kafka-logging/src/main/resources/osgp-adapter-kafka-logging.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDowMDowN1rOHg3MCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjowMjo1NFrOHhx94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyMDY4MQ==", "bodyText": "Why was this changed from false to true?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504220681", "createdAt": "2020-10-13T20:00:07Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-kafka-logging/src/main/resources/osgp-adapter-kafka-logging.properties", "diffHunk": "@@ -20,16 +20,16 @@ peakshaving.kafka.consumer.auto.offset.reset=latest\n # KAFKA CONFIG GRID MEASUREMENT PUBLISHED EVENT LOGGING CONSUMER\n # ==================================================================\n \n-grid.measurement.published.event.kafka.logging.enabled=false\n+scada.measurement.published.event.kafka.logging.enabled=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MzcxNQ==", "bodyText": "to enable logging, changed it back to false to disable logging at the build server", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505183715", "createdAt": "2020-10-15T06:02:54Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-kafka-logging/src/main/resources/osgp-adapter-kafka-logging.properties", "diffHunk": "@@ -20,16 +20,16 @@ peakshaving.kafka.consumer.auto.offset.reset=latest\n # KAFKA CONFIG GRID MEASUREMENT PUBLISHED EVENT LOGGING CONSUMER\n # ==================================================================\n \n-grid.measurement.published.event.kafka.logging.enabled=false\n+scada.measurement.published.event.kafka.logging.enabled=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyMDY4MQ=="}, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODM1MTIxOnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-kafka-distributionautomation/src/main/resources/ScadaMeasurementPublishedEventMessage.avsc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDowNzo1OFrOHg3cOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjowMzoyNVrOHhx-eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyNDgyNQ==", "bodyText": "Does this mean the ScadaMeasurementPublishedEvent record is only temporary and will be replaced by GridMeasurementPublishedEvent at a certain point in time?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504224825", "createdAt": "2020-10-13T20:07:58Z", "author": {"login": "rlemmers"}, "path": "osgp/shared/osgp-kafka-distributionautomation/src/main/resources/ScadaMeasurementPublishedEventMessage.avsc", "diffHunk": "@@ -0,0 +1,195 @@\n+{\n+  \"type\" : \"record\",\n+  \"name\" : \"Message\",\n+  \"namespace\" : \"com.alliander.data.scadameasurementpublishedevent\",\n+  \"doc\" : \"default message format for Alliander Messaging*\",\n+  \"fields\" : [ {\n+    \"name\" : \"messageId\",\n+    \"type\" : {\n+      \"type\" : \"fixed\",\n+      \"name\" : \"MessageId\",\n+      \"namespace\" : \"com.alliander.messaging\",\n+      \"size\" : 16\n+    },\n+    \"doc\" : \"contains a version 4 UUID generated by the process constructing the message\"\n+  }, {\n+    \"name\" : \"createdDateTime\",\n+    \"type\" : \"long\",\n+    \"doc\" : \"the timestamp at which the message is created in the message creating process as the number of milliseconds from the unix epoch, 1 January 1970 00:00:00.000 UTC\"\n+  }, {\n+    \"name\" : \"producerId\",\n+    \"type\" : \"string\",\n+    \"doc\" : \"identifier of the message producing process*\"\n+  }, {\n+    \"name\" : \"signature\",\n+    \"type\" : [ \"null\", \"bytes\" ],\n+    \"doc\" : \"2048bits RSA encrypted SHA-256 hash over the avro binary representation of the complete message assuming the signature field is set to null\"\n+  }, {\n+    \"name\" : \"payload\",\n+    \"type\" : {\n+      \"type\" : \"record\",\n+      \"name\" : \"ScadaMeasurementPublishedEvent\",\n+      \"doc\" : \"measurement data as published by the SCADA system. This class (and its topic in Kafka) will be replaced by GridMeasurementPublishedEvent\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4Mzg2NQ==", "bodyText": "It may be so.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505183865", "createdAt": "2020-10-15T06:03:25Z", "author": {"login": "robindenadel"}, "path": "osgp/shared/osgp-kafka-distributionautomation/src/main/resources/ScadaMeasurementPublishedEventMessage.avsc", "diffHunk": "@@ -0,0 +1,195 @@\n+{\n+  \"type\" : \"record\",\n+  \"name\" : \"Message\",\n+  \"namespace\" : \"com.alliander.data.scadameasurementpublishedevent\",\n+  \"doc\" : \"default message format for Alliander Messaging*\",\n+  \"fields\" : [ {\n+    \"name\" : \"messageId\",\n+    \"type\" : {\n+      \"type\" : \"fixed\",\n+      \"name\" : \"MessageId\",\n+      \"namespace\" : \"com.alliander.messaging\",\n+      \"size\" : 16\n+    },\n+    \"doc\" : \"contains a version 4 UUID generated by the process constructing the message\"\n+  }, {\n+    \"name\" : \"createdDateTime\",\n+    \"type\" : \"long\",\n+    \"doc\" : \"the timestamp at which the message is created in the message creating process as the number of milliseconds from the unix epoch, 1 January 1970 00:00:00.000 UTC\"\n+  }, {\n+    \"name\" : \"producerId\",\n+    \"type\" : \"string\",\n+    \"doc\" : \"identifier of the message producing process*\"\n+  }, {\n+    \"name\" : \"signature\",\n+    \"type\" : [ \"null\", \"bytes\" ],\n+    \"doc\" : \"2048bits RSA encrypted SHA-256 hash over the avro binary representation of the complete message assuming the signature field is set to null\"\n+  }, {\n+    \"name\" : \"payload\",\n+    \"type\" : {\n+      \"type\" : \"record\",\n+      \"name\" : \"ScadaMeasurementPublishedEvent\",\n+      \"doc\" : \"measurement data as published by the SCADA system. This class (and its topic in Kafka) will be replaced by GridMeasurementPublishedEvent\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyNDgyNQ=="}, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODM3OTYxOnYy", "diffSide": "LEFT", "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/infra/kafka/out/PeakShavingProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDoxNjozNlrOHg3tYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjowNzoxM1rOHhyDfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyOTIxNw==", "bodyText": "Do we need a similar catch in the ScadaMeasurementPublishedEventProducer?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r504229217", "createdAt": "2020-10-13T20:16:36Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/infra/kafka/out/PeakShavingProducer.java", "diffHunk": "@@ -1,39 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.adapter.kafka.da.infra.kafka.out;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n-import org.springframework.kafka.core.KafkaTemplate;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class PeakShavingProducer {\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(PeakShavingProducer.class);\n-\n-    private final KafkaTemplate<String, String> kafkaTemplate;\n-\n-    @Autowired\n-    public PeakShavingProducer(\n-            @Qualifier(\"peakShavingKafkaTemplate\") final KafkaTemplate<String, String> kafkaTemplate) {\n-        this.kafkaTemplate = kafkaTemplate;\n-    }\n-\n-    public void send(final String message) {\n-\n-        try {\n-            this.kafkaTemplate.sendDefault(message);\n-        } catch (final RuntimeException e) {\n-            LOGGER.error(\"Sending message {} failed\", message, e);\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4NTE0OA==", "bodyText": "No, by default the template is configured with a LoggingProducerListener wich logs errors.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/456#discussion_r505185148", "createdAt": "2020-10-15T06:07:13Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-kafka-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/kafka/da/infra/kafka/out/PeakShavingProducer.java", "diffHunk": "@@ -1,39 +0,0 @@\n-/**\n- * Copyright 2020 Smart Society Services B.V.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- */\n-package org.opensmartgridplatform.adapter.kafka.da.infra.kafka.out;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Qualifier;\n-import org.springframework.kafka.core.KafkaTemplate;\n-import org.springframework.stereotype.Service;\n-\n-@Service\n-public class PeakShavingProducer {\n-\n-    private static final Logger LOGGER = LoggerFactory.getLogger(PeakShavingProducer.class);\n-\n-    private final KafkaTemplate<String, String> kafkaTemplate;\n-\n-    @Autowired\n-    public PeakShavingProducer(\n-            @Qualifier(\"peakShavingKafkaTemplate\") final KafkaTemplate<String, String> kafkaTemplate) {\n-        this.kafkaTemplate = kafkaTemplate;\n-    }\n-\n-    public void send(final String message) {\n-\n-        try {\n-            this.kafkaTemplate.sendDefault(message);\n-        } catch (final RuntimeException e) {\n-            LOGGER.error(\"Sending message {} failed\", message, e);\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyOTIxNw=="}, "originalCommit": {"oid": "395df1d887ce32cf5a770347cd446b8c3d6c3465"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3545, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}