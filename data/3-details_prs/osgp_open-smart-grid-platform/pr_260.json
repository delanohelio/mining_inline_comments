{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzUyNjI4", "number": 260, "title": "FLEX-5298: Adds general interrogation functionality for lmds", "bodyText": "Furthermore, profiles are used to distinguish\nbetween a default controlled station and a light measurement device.", "createdAt": "2020-03-31T13:54:12Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260", "merged": true, "mergeCommit": {"oid": "fa5e1bd04eef66717853c81d90fb57fa39d2cda1"}, "closed": true, "closedAt": "2020-04-08T13:40:36Z", "author": {"login": "robindenadel"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTC43dAH2gAyMzk2MzUyNjI4OjY0NDFmYTgwMzQ5MDg1ZmY4NjIxMGYzNTRiNTExZDA1Y2EyYzcxYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVndNxAFqTM4OTk0Njc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6441fa80349085ff86210f354b511d05ca2c71a9", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6441fa80349085ff86210f354b511d05ca2c71a9", "committedDate": "2020-03-31T13:12:34Z", "message": "FLEX-5298: Adds general interrogation functionality for light\nmeasurement devices. Furthermore, profiles are used to distinguish\nbetween a default controlled station and a light measurement device."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77b912e99e5552a7abe584b1cf499de777599fd2", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/77b912e99e5552a7abe584b1cf499de777599fd2", "committedDate": "2020-03-31T13:50:13Z", "message": "FLEX-5298: Adds licence headers, reverts changes on property files of\nthe IEC61850 simulator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2806b7da814415ad610d6bdee9b4ad095d2ea67e", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2806b7da814415ad610d6bdee9b4ad095d2ea67e", "committedDate": "2020-03-31T13:52:42Z", "message": "FLEX-5298: Removes unused property."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87b54c66d85cff625f2312829c93ffa5ac94b5a", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b87b54c66d85cff625f2312829c93ffa5ac94b5a", "committedDate": "2020-03-31T14:11:55Z", "message": "FLEX-5298: Fixes compile error; sets profile to\ndefault_controlled_station."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c6f0a71e83a5ea27a0c75ed7ab2da1d13d23902", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5c6f0a71e83a5ea27a0c75ed7ab2da1d13d23902", "committedDate": "2020-04-02T08:07:48Z", "message": "FLEX-5298: Attempts to solve cucumber test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43dde487387d08b477ea8bdac00f24260a859dd0", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/43dde487387d08b477ea8bdac00f24260a859dd0", "committedDate": "2020-04-02T14:01:08Z", "message": "FLEX-5298: Moves tests of default methods to separate test class. Moves\nprofile related test classes to another package."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDcwODkw", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-386470890", "createdAt": "2020-04-02T14:17:02Z", "commit": {"oid": "43dde487387d08b477ea8bdac00f24260a859dd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNzowMlrOF_tYvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxNzowMlrOF_tYvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0ODIyMA==", "bodyText": "Complete the task associated to this TODO comment.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r402348220", "createdAt": "2020-04-02T14:17:02Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(informationObjects)\n+                .build();\n+    }\n+\n+    private InformationElement[][] createInformationElement(final float value, final long timestamp) {\n+        return new InformationElement[][] { { new IeShortFloat(value), new IeQuality(false, false, false, false, false),\n+                new IeTime56(timestamp) } };\n+    }\n+\n+    public ASdu createSingleCommandAsdu() {\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.C_SC_NA_1)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(new InformationObject[] { new InformationObject(0,\n+                        new InformationElement[][] { { this.defaultIeQualifierOfInterrogation() } }) })\n+                .build();\n+    }\n+\n+    public ASdu createShortFloatingPointMeasurementAsdu() {\n+        final ZonedDateTime now = ZonedDateTime.now(ZoneOffset.UTC);\n+        final long timestamp = now.toInstant().toEpochMilli();\n+        final float hour = now.getHour();\n+        final float minute = now.getMinute();\n+\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            final float value = (index == 0 ? hour : minute);\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(value, timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)\n+                .withInformationObjects(informationObjects)\n+                .build();\n+\n+    }\n+\n+    // TODO: remove these setters when the cucumber mock server can read these", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde487387d08b477ea8bdac00f24260a859dd0"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba2a15be17d0095827d15a99721f145d87087f09", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ba2a15be17d0095827d15a99721f145d87087f09", "committedDate": "2020-04-02T14:48:50Z", "message": "FLEX-5298: Adds a test to check the order of messages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca2550bda53a2030fff753753cb2b029903f3349", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ca2550bda53a2030fff753753cb2b029903f3349", "committedDate": "2020-04-02T15:00:57Z", "message": "FLEX-5298: Adds more arguments to test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a15dea5a60ff5f371a2baf74839c12c49d490313", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a15dea5a60ff5f371a2baf74839c12c49d490313", "committedDate": "2020-04-02T15:02:57Z", "message": "FLEX-5298: Changes the cause of transmission."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "676f3323db29634388fb019db209cd522c5de142", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/676f3323db29634388fb019db209cd522c5de142", "committedDate": "2020-04-03T06:25:48Z", "message": "FLEX-5298: Removes unnecessary file."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDk4MjE0", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-389098214", "createdAt": "2020-04-07T13:10:03Z", "commit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoxMDowM1rOGCCvmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDozMjoxOVrOGCGeUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTI4OQ==", "bodyText": "build => built", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404795289", "createdAt": "2020-04-07T13:10:03Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-distributionautomation/src/test/java/org/opensmartgridplatform/cucumber/platform/distributionautomation/glue/steps/ReceiveMeasurementReportSteps.java", "diffHunk": "@@ -53,7 +53,16 @@ public void iRequestTheHealthStatus(final String organizationIdentification, fin\n     }\n \n     private Iec60870ASduHandler getInterrogationCommandASduHandler() {\n-        final Iec60870ASduFactory iec60870AsduFactory = new Iec60870ASduFactory();\n+        final DefaultControlledStationAsduFactory iec60870AsduFactory = new DefaultControlledStationAsduFactory();\n+\n+        /*\n+         * These values should be read from a property file based on the active\n+         * profile. Since that functionality hasn't been build yet, we set them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxMzUyMg==", "bodyText": "In the old situation, the casing of the openmuc library (\"ASdu\") was used. Changing to \"Asdu\" is fine, but only if we adapt all our class names.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404813522", "createdAt": "2020-04-07T13:35:35Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1NjQwMg==", "bodyText": "Shouldn't this be CauseOfTransmission.INTERROGATED_BY_STATION?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r404856402", "createdAt": "2020-04-07T14:32:19Z", "author": {"login": "rlemmers"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-simulator-iec60870/src/main/java/org/opensmartgridplatform/simulator/protocol/iec60870/domain/profile/DefaultControlledStationAsduFactory.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/**\n+ * Copyright 2019 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.simulator.protocol.iec60870.domain.profile;\n+\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+\n+import org.openmuc.j60870.ASdu;\n+import org.openmuc.j60870.ASduType;\n+import org.openmuc.j60870.CauseOfTransmission;\n+import org.openmuc.j60870.ie.IeQuality;\n+import org.openmuc.j60870.ie.IeShortFloat;\n+import org.openmuc.j60870.ie.IeTime56;\n+import org.openmuc.j60870.ie.InformationElement;\n+import org.openmuc.j60870.ie.InformationObject;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870ASduBuilder;\n+import org.opensmartgridplatform.simulator.protocol.iec60870.domain.Iec60870AsduFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+\n+@Configuration\n+@Profile(\"default_controlled_station\")\n+public class DefaultControlledStationAsduFactory implements Iec60870AsduFactory {\n+\n+    @Value(\"${general_interrogation_object_addresses}\")\n+    private int[] ioa;\n+\n+    @Value(\"${general_interrogation_element_values}\")\n+    private float[] iev;\n+\n+    @Override\n+    public ASdu createInterrogationCommandResponseAsdu(final long timestamp) {\n+        final InformationObject[] informationObjects = new InformationObject[this.ioa.length];\n+        for (int index = 0; index < this.ioa.length; index++) {\n+            informationObjects[index] = new InformationObject(this.ioa[index],\n+                    this.createInformationElement(this.iev[index], timestamp));\n+        }\n+\n+        return new Iec60870ASduBuilder().withTypeId(ASduType.M_ME_TF_1)\n+                .withSequenceOfElements(false)\n+                .withCauseOfTransmission(CauseOfTransmission.SPONTANEOUS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676f3323db29634388fb019db209cd522c5de142"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e17b8b9990a9caa46df29d8431ec0f84fa12fd26", "committedDate": "2020-04-07T15:41:21Z", "message": "FLEX-5298 ~ Make casing consistent: Asdu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a35af8c7579f30bdfd9b836e14e38ab3c2b9e12e", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a35af8c7579f30bdfd9b836e14e38ab3c2b9e12e", "committedDate": "2020-04-07T15:42:57Z", "message": "FLEX-5298 ~ Fixes typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c396a3a9fd72a7a33425cb073f3606b806d43e57", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c396a3a9fd72a7a33425cb073f3606b806d43e57", "committedDate": "2020-04-07T16:15:17Z", "message": "FLEX-5298 ~ Corrects GI response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc6facc6dfca1475ecb9a9e4f41c86e2c8278562", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/cc6facc6dfca1475ecb9a9e4f41c86e2c8278562", "committedDate": "2020-04-07T16:39:41Z", "message": "FLEX-5298 ~ Replaces TypeId by AsduType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4556d1c61764e58adde38728b5488aa908f2bad9", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4556d1c61764e58adde38728b5488aa908f2bad9", "committedDate": "2020-04-08T09:13:39Z", "message": "FLEX-5298 ~ Handles updated GI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f035db37e6dac0a482cd5e937dc5398ed6f6c94", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2f035db37e6dac0a482cd5e937dc5398ed6f6c94", "committedDate": "2020-04-08T10:03:16Z", "message": "Merge remote-tracking branch 'origin' into feature/FLEX-5298_general_interrogation_simulator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODkyNTYz", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-389892563", "createdAt": "2020-04-08T11:39:04Z", "commit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTozOTowNVrOGCrOrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTo0MToyOVrOGCrTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1ODYwNg==", "bodyText": "ASdu handler -> Asdu or ASDU handler", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405458606", "createdAt": "2020-04-08T11:39:05Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-protocol-adapter-iec60870/src/main/java/org/opensmartgridplatform/adapter/protocol/iec60870/domain/services/ClientAsduHandlerRegistryImpl.java", "diffHunk": "@@ -32,12 +32,12 @@\n     private final Map<ASduType, ClientAsduHandler> handlers = new EnumMap<>(ASduType.class);\n \n     @Override\n-    public ClientAsduHandler getHandler(final ASdu asdu) throws Iec60870ASduHandlerNotFoundException {\n+    public ClientAsduHandler getHandler(final ASdu asdu) throws Iec60870AsduHandlerNotFoundException {\n         final ASduType asduType = asdu.getTypeIdentification();\n         final ClientAsduHandler handler = this.handlers.get(asduType);\n         if (handler == null) {\n-            LOGGER.error(\"No ASdu handler found for ASdu type {}\", asduType);\n-            throw new Iec60870ASduHandlerNotFoundException(asduType);\n+            LOGGER.error(\"No ASdu handler found for Asdu type {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ1OTgxNw==", "bodyText": "ASdu handler -> Asdu or ASDU handler", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405459817", "createdAt": "2020-04-08T11:41:29Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "diffHunk": "@@ -23,21 +23,21 @@\n  *\n  */\n @Component\n-public class Iec60870ASduHandlerRegistry {\n+public class Iec60870AsduHandlerRegistry {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(Iec60870ASduHandlerRegistry.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(Iec60870AsduHandlerRegistry.class);\n \n-    private final Map<ASduType, Iec60870ASduHandler> handlers = new EnumMap<>(ASduType.class);\n+    private final Map<ASduType, Iec60870AsduHandler> handlers = new EnumMap<>(ASduType.class);\n \n-    public Iec60870ASduHandler getHandler(final ASduType asduType) throws Iec60870ASduHandlerNotFoundException {\n+    public Iec60870AsduHandler getHandler(final ASduType asduType) throws Iec60870AsduHandlerNotFoundException {\n         if (!this.handlers.containsKey(asduType)) {\n             LOGGER.error(\"No ASdu handler found for type Id {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e17b8b9990a9caa46df29d8431ec0f84fa12fd26"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be2e2a1e2b6562397448daa174768d1f690fa8e", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5be2e2a1e2b6562397448daa174768d1f690fa8e", "committedDate": "2020-04-08T12:28:10Z", "message": "FLEX-5298 ~ Adjusts capitals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTM1Mzc5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-389935379", "createdAt": "2020-04-08T12:42:00Z", "commit": {"oid": "5be2e2a1e2b6562397448daa174768d1f690fa8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo0MjowMVrOGCtXiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo0MjowMVrOGCtXiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5MzY0Mw==", "bodyText": "type Id -> ASDU type", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#discussion_r405493643", "createdAt": "2020-04-08T12:42:01Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java", "diffHunk": "@@ -31,7 +31,7 @@\n \n     public Iec60870AsduHandler getHandler(final ASduType asduType) throws Iec60870AsduHandlerNotFoundException {\n         if (!this.handlers.containsKey(asduType)) {\n-            LOGGER.error(\"No ASdu handler found for type Id {}\", asduType);\n+            LOGGER.error(\"No ASDU handler found for type Id {}\", asduType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be2e2a1e2b6562397448daa174768d1f690fa8e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b21229149909d8c8feb5785ab7613714f5ba07", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c2b21229149909d8c8feb5785ab7613714f5ba07", "committedDate": "2020-04-08T12:53:05Z", "message": "FLEX-5298 ~ Minor spelling correction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTQ0NTc5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-389944579", "createdAt": "2020-04-08T12:53:50Z", "commit": {"oid": "c2b21229149909d8c8feb5785ab7613714f5ba07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTQ2Nzc0", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/260#pullrequestreview-389946774", "createdAt": "2020-04-08T12:56:41Z", "commit": {"oid": "c2b21229149909d8c8feb5785ab7613714f5ba07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3844, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}