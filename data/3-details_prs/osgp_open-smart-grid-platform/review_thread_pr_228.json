{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjE1MzUy", "number": 228, "reviewThreads": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjozNDozNVrODnDljw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzozMToxOFrODpge8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjc5ODIzOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/src/main/java/org/opensmartgridplatform/simulator/protocol/mqtt/Default.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMjozNDozNVrOF01ANA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo0NzozNVrOF1hztA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzODY3Ng==", "bodyText": "Make this IP \"127.0.0.1\" address configurable.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390938676", "createdAt": "2020-03-11T12:34:35Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/src/main/java/org/opensmartgridplatform/simulator/protocol/mqtt/Default.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.opensmartgridplatform.simulator.protocol.mqtt;\n+\n+public class Default {\n+    public static final String BROKER_HOST = \"127.0.0.1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3Mjc1Ng==", "bodyText": "Leaving as is since this is not deployed to production.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391672756", "createdAt": "2020-03-12T14:47:35Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/src/main/java/org/opensmartgridplatform/simulator/protocol/mqtt/Default.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.opensmartgridplatform.simulator.protocol.mqtt;\n+\n+public class Default {\n+    public static final String BROKER_HOST = \"127.0.0.1\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzODY3Ng=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjg4OTk3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/messaging/InboundOsgpCoreRequestsMessagingConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMjoxMFrOF0146A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo0ODoyN1rOF1h17w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1MzE5Mg==", "bodyText": "Typo in bean name and constructor argument: domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390953192", "createdAt": "2020-03-11T13:02:10Z", "author": {"login": "kevinsmeets"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/messaging/InboundOsgpCoreRequestsMessagingConfig.java", "diffHunk": "@@ -50,4 +52,9 @@ public DefaultMessageListenerContainer messageListenerContainer(\n         return this.jmsConfigurationFactory.initMessageListenerContainer(messageListener);\n     }\n \n+    @Bean(name = \"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\")\n+    public MessageProcessorMap messageProcessorMap() {\n+        return new BaseMessageProcessorMap(\"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3MzMyNw==", "bodyText": "Fixed", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391673327", "createdAt": "2020-03-12T14:48:27Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/config/messaging/InboundOsgpCoreRequestsMessagingConfig.java", "diffHunk": "@@ -50,4 +52,9 @@ public DefaultMessageListenerContainer messageListenerContainer(\n         return this.jmsConfigurationFactory.initMessageListenerContainer(messageListener);\n     }\n \n+    @Bean(name = \"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\")\n+    public MessageProcessorMap messageProcessorMap() {\n+        return new BaseMessageProcessorMap(\"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1MzE5Mg=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjg5NDE1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreRequestMessageListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowMzoyN1rOF017bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo0ODozNVrOF1h2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1MzgzNg==", "bodyText": "Typo: domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390953836", "createdAt": "2020-03-11T13:03:27Z", "author": {"login": "kevinsmeets"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreRequestMessageListener.java", "diffHunk": "@@ -31,26 +31,21 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(OsgpCoreRequestMessageListener.class);\n \n     @Autowired\n-    @Qualifier(value = \"domainDistributionAutomationInboundOsgpCoreRequestsMessageProcessor\")\n-    private OsgpCoreRequestMessageProcessor messageProcessor;\n+    @Qualifier(\"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3MzQwNQ==", "bodyText": "Fixed", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391673405", "createdAt": "2020-03-12T14:48:35Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreRequestMessageListener.java", "diffHunk": "@@ -31,26 +31,21 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(OsgpCoreRequestMessageListener.class);\n \n     @Autowired\n-    @Qualifier(value = \"domainDistributionAutomationInboundOsgpCoreRequestsMessageProcessor\")\n-    private OsgpCoreRequestMessageProcessor messageProcessor;\n+    @Qualifier(\"domainDistributionAutomationInboundOsgpCoreRequestsaMessageProcessorMap\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1MzgzNg=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjkxNDkzOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzowOTo0MVrOF02IFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1MDowMlrOF1h6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NzA3Nw==", "bodyText": "Please change this component name.  Remove or change oslp.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390957077", "createdAt": "2020-03-11T13:09:41Z", "author": {"login": "kevinsmeets"}, "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.infra.jms.protocol.inbound.messageprocessors;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.core.infra.jms.protocol.inbound.AbstractProtocolRequestMessageProcessor;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.DeviceAuthorization;\n+import org.opensmartgridplatform.domain.core.entities.DomainInfo;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DomainInfoRepository;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunctionGroup;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.MessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"oslpGetDataMessageProcessor\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NDQwMg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391674402", "createdAt": "2020-03-12T14:50:02Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.infra.jms.protocol.inbound.messageprocessors;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.core.infra.jms.protocol.inbound.AbstractProtocolRequestMessageProcessor;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.DeviceAuthorization;\n+import org.opensmartgridplatform.domain.core.entities.DomainInfo;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DomainInfoRepository;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunctionGroup;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.MessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"oslpGetDataMessageProcessor\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NzA3Nw=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjkzMzQzOnYy", "diffSide": "RIGHT", "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/jms/ProtocolResponseMessageValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNDoyOFrOF02TeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1MDo0NlrOF1h8DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1OTk5Mg==", "bodyText": "Add a header to this new class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390959992", "createdAt": "2020-03-11T13:14:28Z", "author": {"login": "kevinsmeets"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/jms/ProtocolResponseMessageValidator.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.opensmartgridplatform.shared.infra.jms;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NDg5Mg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391674892", "createdAt": "2020-03-12T14:50:46Z", "author": {"login": "akoster"}, "path": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/infra/jms/ProtocolResponseMessageValidator.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.opensmartgridplatform.shared.infra.jms;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1OTk5Mg=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjkzODM3OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DeviceResponseMessageSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNTo1M1rOF02WkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1MDo1OFrOF1h8pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MDc4NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390960785", "createdAt": "2020-03-11T13:15:53Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DeviceResponseMessageSender.java", "diffHunk": "@@ -43,42 +43,13 @@ public void send(final ResponseMessage responseMessage) {\n \n         final ProtocolResponseMessage msg = (ProtocolResponseMessage) responseMessage;\n \n-        if (!this.checkMessage(msg)) {\n+        if (!ProtocolResponseMessageValidator.isValid(msg, LOGGER)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3NTA0NA==", "bodyText": "Tnx", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391675044", "createdAt": "2020-03-12T14:50:58Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/infra/messaging/DeviceResponseMessageSender.java", "diffHunk": "@@ -43,42 +43,13 @@ public void send(final ResponseMessage responseMessage) {\n \n         final ProtocolResponseMessage msg = (ProtocolResponseMessage) responseMessage;\n \n-        if (!this.checkMessage(msg)) {\n+        if (!ProtocolResponseMessageValidator.isValid(msg, LOGGER)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MDc4NQ=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk0NDYxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/GetConfigurationObjectServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNzoxOFrOF02aXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozNDowOVrOF4meew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTc1OQ==", "bodyText": "What is going on with these code formatting changes? Please restore the original formatting.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390961759", "createdAt": "2020-03-11T13:17:18Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/GetConfigurationObjectServiceTest.java", "diffHunk": "@@ -62,36 +62,33 @@ public void setUp() {\n     @Test\n     public void getConfigurationObjectIOException() throws Exception {\n \n-        // SETUP\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenThrow(new IOException());\n+            // SETUP\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenThrow(new IOException());\n \n-        assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> {// CALL\n             this.instance.getConfigurationObject(this.conn);\n         });\n     }\n \n     @Test\n     public void getConfigurationObjectGetResultNull() throws Exception {\n \n-        // SETUP\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(null);\n+            // SETUP\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(null);\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL\n             this.instance.getConfigurationObject(this.conn);\n         });\n     }\n \n     @Test\n     public void getConfigurationObjectGetResultUnsuccessful() throws Exception {\n \n-        // SETUP\n-        when(this.getResult.getResultCode()).thenReturn(AccessResultCode.READ_WRITE_DENIED);\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(this.getResult);\n+            // SETUP\n+            when(this.getResult.getResultCode()).thenReturn(AccessResultCode.READ_WRITE_DENIED);\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(this.getResult);\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NDk3MQ==", "bodyText": "No idea where this diff came from. I didn't touch this class as part of this story. Fixed anyway.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394894971", "createdAt": "2020-03-19T09:34:09Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/GetConfigurationObjectServiceTest.java", "diffHunk": "@@ -62,36 +62,33 @@ public void setUp() {\n     @Test\n     public void getConfigurationObjectIOException() throws Exception {\n \n-        // SETUP\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenThrow(new IOException());\n+            // SETUP\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenThrow(new IOException());\n \n-        assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> {// CALL\n             this.instance.getConfigurationObject(this.conn);\n         });\n     }\n \n     @Test\n     public void getConfigurationObjectGetResultNull() throws Exception {\n \n-        // SETUP\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(null);\n+            // SETUP\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(null);\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL\n             this.instance.getConfigurationObject(this.conn);\n         });\n     }\n \n     @Test\n     public void getConfigurationObjectGetResultUnsuccessful() throws Exception {\n \n-        // SETUP\n-        when(this.getResult.getResultCode()).thenReturn(AccessResultCode.READ_WRITE_DENIED);\n-        when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(this.getResult);\n+            // SETUP\n+            when(this.getResult.getResultCode()).thenReturn(AccessResultCode.READ_WRITE_DENIED);\n+            when(this.dlmsConnection.get(any(AttributeAddress.class))).thenReturn(this.getResult);\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTc1OQ=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk0NTA0OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/ProtocolServiceLookupTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNzoyN1rOF02aqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozODo1MlrOF4mpXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTgzMg==", "bodyText": "Code formatting.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390961832", "createdAt": "2020-03-11T13:17:27Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/ProtocolServiceLookupTest.java", "diffHunk": "@@ -40,11 +40,10 @@ public void lookupGetService() throws ProtocolAdapterException {\n     @Test\n     public void lookupGetServiceNotFound() throws ProtocolAdapterException {\n \n-        // SETUP\n-        final Protocol protocol = Protocol.OTHER_PROTOCOL;\n+            // SETUP\n+            final Protocol protocol = Protocol.OTHER_PROTOCOL;\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5Nzc1Nw==", "bodyText": "Fixed", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394897757", "createdAt": "2020-03-19T09:38:52Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/configuration/service/ProtocolServiceLookupTest.java", "diffHunk": "@@ -40,11 +40,10 @@ public void lookupGetService() throws ProtocolAdapterException {\n     @Test\n     public void lookupGetServiceNotFound() throws ProtocolAdapterException {\n \n-        // SETUP\n-        final Protocol protocol = Protocol.OTHER_PROTOCOL;\n+            // SETUP\n+            final Protocol protocol = Protocol.OTHER_PROTOCOL;\n \n-        assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {\n-            // CALL\n+            assertThatExceptionOfType(ProtocolAdapterException.class).isThrownBy(() -> {// CALL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTgzMg=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk0NTc0OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/factories/DlmsConnectionFactoryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNzozN1rOF02bEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozNTozOVrOF4mh1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTkzNg==", "bodyText": "Code formatting.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390961936", "createdAt": "2020-03-11T13:17:37Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/factories/DlmsConnectionFactoryTest.java", "diffHunk": "@@ -67,21 +67,19 @@ public void returnsConnectionManagerForHls5Device() throws Exception {\n     @Test\n     public void getConnection_throwsForHls4Device() throws Exception {\n \n-        final DlmsDevice device = new DlmsDeviceBuilder().withHls4Active(true).build();\n-        final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n+            final DlmsDevice device = new DlmsDeviceBuilder().withHls4Active(true).build();\n+            final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n \n-        assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {\n-            this.factory.getConnection(device, listener);\n+            assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {this.factory.getConnection(device, listener);\n         });\n     }\n \n     @Test\n     public void getConnection_throwsForHls3Device() throws Exception {\n-        final DlmsDevice device = new DlmsDeviceBuilder().withHls3Active(true).build();\n-        final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n+            final DlmsDevice device = new DlmsDeviceBuilder().withHls3Active(true).build();\n+            final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n \n-        assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {\n-            this.factory.getConnection(device, listener);\n+            assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {this.factory.getConnection(device, listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NTgyOA==", "bodyText": "Fixed", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394895828", "createdAt": "2020-03-19T09:35:39Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/factories/DlmsConnectionFactoryTest.java", "diffHunk": "@@ -67,21 +67,19 @@ public void returnsConnectionManagerForHls5Device() throws Exception {\n     @Test\n     public void getConnection_throwsForHls4Device() throws Exception {\n \n-        final DlmsDevice device = new DlmsDeviceBuilder().withHls4Active(true).build();\n-        final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n+            final DlmsDevice device = new DlmsDeviceBuilder().withHls4Active(true).build();\n+            final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n \n-        assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {\n-            this.factory.getConnection(device, listener);\n+            assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {this.factory.getConnection(device, listener);\n         });\n     }\n \n     @Test\n     public void getConnection_throwsForHls3Device() throws Exception {\n-        final DlmsDevice device = new DlmsDeviceBuilder().withHls3Active(true).build();\n-        final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n+            final DlmsDevice device = new DlmsDeviceBuilder().withHls3Active(true).build();\n+            final DlmsMessageListener listener = new InvocationCountingDlmsMessageListener();\n \n-        assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {\n-            this.factory.getConnection(device, listener);\n+            assertThatExceptionOfType(FunctionalException.class).isThrownBy(() -> {this.factory.getConnection(device, listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTkzNg=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk1NDI1OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/.gitignore", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxOTo1MFrOF02gaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTozNzowN1rOF4mk_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MzMwNA==", "bodyText": "There's a .gitignore file for the repo: https://github.com/OSGP/open-smart-grid-platform/blob/development/.gitignore\nPlease remove this .gitignore file, or update the .gitgnore file for the repo.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390963304", "createdAt": "2020-03-11T13:19:50Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/.gitignore", "diffHunk": "@@ -0,0 +1,46 @@\n+#################\n+## Eclipse\n+#################\n+\n+*.pydevproject\n+.project\n+.metadata\n+.gradle\n+bin/\n+tmp/\n+target/\n+*.tmp\n+*.bak\n+*.swp\n+*~.nib\n+local.properties\n+.classpath\n+.settings/\n+.loadpath\n+\n+####################\n+# IntelliJ\n+####################\n+*.iml\n+.idea/\n+\n+# External tool builders\n+.externalToolBuilders/\n+\n+# Locally stored \"Eclipse launch configurations\"\n+*.launch\n+\n+# CDT-specific\n+.cproject\n+\n+# PDT-specific\n+.buildpath\n+\n+#Spring MVC webapp\n+.springBeans\n+\n+# Eclipse Checkstyle plugin\n+.checkstyle\n+\n+# KDE folder parameters file\n+**/.directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NjYzOQ==", "bodyText": "I used the same approach as other protocol adapters which also have a .gitignore file. Leaving as-is.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394896639", "createdAt": "2020-03-19T09:37:07Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/.gitignore", "diffHunk": "@@ -0,0 +1,46 @@\n+#################\n+## Eclipse\n+#################\n+\n+*.pydevproject\n+.project\n+.metadata\n+.gradle\n+bin/\n+tmp/\n+target/\n+*.tmp\n+*.bak\n+*.swp\n+*~.nib\n+local.properties\n+.classpath\n+.settings/\n+.loadpath\n+\n+####################\n+# IntelliJ\n+####################\n+*.iml\n+.idea/\n+\n+# External tool builders\n+.externalToolBuilders/\n+\n+# Locally stored \"Eclipse launch configurations\"\n+*.launch\n+\n+# CDT-specific\n+.cproject\n+\n+# PDT-specific\n+.buildpath\n+\n+#Spring MVC webapp\n+.springBeans\n+\n+# Eclipse Checkstyle plugin\n+.checkstyle\n+\n+# KDE folder parameters file\n+**/.directory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MzMwNA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjk3MzUwOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/config/MqttConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoyNDo0NVrOF02sug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo0MDoxMlrOF4msVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2NjQ1OA==", "bodyText": "This annotation can be removed, it is already part of the MqttPersistenceConfig.java class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390966458", "createdAt": "2020-03-11T13:24:45Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/config/MqttConfig.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.config;\n+\n+import org.opensmartgridplatform.shared.application.config.AbstractConfig;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.transaction.annotation.EnableTransactionManagement;\n+\n+@Configuration\n+@EnableTransactionManagement()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5ODUxNg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394898516", "createdAt": "2020-03-19T09:40:12Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/config/MqttConfig.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.config;\n+\n+import org.opensmartgridplatform.shared.application.config.AbstractConfig;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.transaction.annotation.EnableTransactionManagement;\n+\n+@Configuration\n+@EnableTransactionManagement()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2NjQ1OA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzAyNTc1OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientEventHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozNzo0M1rOF03NAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo0MToyMFrOF4mu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NDcyMA==", "bodyText": "Add a header to this new file.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390974720", "createdAt": "2020-03-11T13:37:43Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientEventHandler.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5OTE3Mg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394899172", "createdAt": "2020-03-19T09:41:20Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientEventHandler.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NDcyMA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzAyNjU4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientAdapterFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzozNzo1M1rOF03NeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo0MTozNFrOF4mvew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NDg0MQ==", "bodyText": "Add a header to this new file.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390974841", "createdAt": "2020-03-11T13:37:53Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientAdapterFactory.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5OTMyMw==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394899323", "createdAt": "2020-03-19T09:41:34Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/MqttClientAdapterFactory.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NDg0MQ=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzAzNTkwOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/db/migration/V20200127155743442__Initial_version_PostgreSQL.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0MDoxMlrOF03TUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo0Mzo0OVrOF4m0lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NjMzOA==", "bodyText": "Make sure this is the 4th colum, just like all other entities.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390976338", "createdAt": "2020-03-11T13:40:12Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/db/migration/V20200127155743442__Initial_version_PostgreSQL.sql", "diffHunk": "@@ -0,0 +1,32 @@\n+CREATE TABLE mqtt_device (\n+    id bigint NOT NULL,\n+    creation_time timestamp without time zone NOT NULL,\n+    modification_time timestamp without time zone NOT NULL,\n+    device_identification character varying(40) NOT NULL,\n+    host character varying(255),\n+    port integer,\n+    topics character varying(255),\n+    qos character varying(255),\n+    version bigint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwMDYzMA==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394900630", "createdAt": "2020-03-19T09:43:49Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/db/migration/V20200127155743442__Initial_version_PostgreSQL.sql", "diffHunk": "@@ -0,0 +1,32 @@\n+CREATE TABLE mqtt_device (\n+    id bigint NOT NULL,\n+    creation_time timestamp without time zone NOT NULL,\n+    modification_time timestamp without time zone NOT NULL,\n+    device_identification character varying(40) NOT NULL,\n+    host character varying(255),\n+    port integer,\n+    topics character varying(255),\n+    qos character varying(255),\n+    version bigint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NjMzOA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA0MzM0OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/logback.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0MTo1M1rOF03Xyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOTo0NTo1MlrOF4m5PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NzQ4Mw==", "bodyText": "These 2 loggers for org.springframework.ws.server.MessageTracing and org.springframework.ws.client.MessageTracing have been used during development, I assume. Either remove then or adjust the logging level to WARN.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390977483", "createdAt": "2020-03-11T13:41:53Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/logback.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<configuration>\n+\n+  <!--\n+    <appender name=\"DB\" class=\"ch.qos.logback.classic.db.DBAppender\">\n+      <connectionSource class=\"ch.qos.logback.core.db.DriverManagerConnectionSource\">\n+        <driverClass>org.postgresql.Driver</driverClass>\n+        <url>jdbc:postgresql://localhost/osgp_logging</url>\n+        <user>osp_admin</user>\n+        <password>1234</password>\n+      </connectionSource>\n+    </appender>\n+  -->\n+\n+  <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <encoder>\n+      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}] [${HOSTNAME}] [%thread] %level %logger{36}@%method:%line - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n+    <file>/var/log/osp/logs/osgp-adapter-protocol-mqtt.log</file>\n+    <rollingPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n+      <fileNamePattern>/var/log/osp/logs/osgp-adapter-protocol-mqtt.log.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n+      <maxFileSize>100MB</maxFileSize>\n+      <maxHistory>10</maxHistory>\n+      <totalSizeCap>20GB</totalSizeCap>\n+    </rollingPolicy>\n+    <encoder>\n+      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}] [${HOSTNAME}] [%thread] %level %logger{36}@%method:%line - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <logger name=\"org.springframework.ws.server.MessageTracing\" level=\"TRACE\" additivity=\"false\">\n+    <appender-ref ref=\"CONSOLE\"/>\n+  </logger>\n+\n+  <logger name=\"org.springframework.ws.client.MessageTracing\" level=\"TRACE\" additivity=\"false\">\n+    <appender-ref ref=\"CONSOLE\"/>\n+  </logger>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkwMTgyMA==", "bodyText": "Taken literally from osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/resources/logback.xml\nWill remove these loggers here, but not from the DLMS protocol adapter.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394901820", "createdAt": "2020-03-19T09:45:52Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/logback.xml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<configuration>\n+\n+  <!--\n+    <appender name=\"DB\" class=\"ch.qos.logback.classic.db.DBAppender\">\n+      <connectionSource class=\"ch.qos.logback.core.db.DriverManagerConnectionSource\">\n+        <driverClass>org.postgresql.Driver</driverClass>\n+        <url>jdbc:postgresql://localhost/osgp_logging</url>\n+        <user>osp_admin</user>\n+        <password>1234</password>\n+      </connectionSource>\n+    </appender>\n+  -->\n+\n+  <appender name=\"CONSOLE\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <encoder>\n+      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}] [${HOSTNAME}] [%thread] %level %logger{36}@%method:%line - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n+    <file>/var/log/osp/logs/osgp-adapter-protocol-mqtt.log</file>\n+    <rollingPolicy class=\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\">\n+      <fileNamePattern>/var/log/osp/logs/osgp-adapter-protocol-mqtt.log.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\n+      <maxFileSize>100MB</maxFileSize>\n+      <maxHistory>10</maxHistory>\n+      <totalSizeCap>20GB</totalSizeCap>\n+    </rollingPolicy>\n+    <encoder>\n+      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}] [${HOSTNAME}] [%thread] %level %logger{36}@%method:%line - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <logger name=\"org.springframework.ws.server.MessageTracing\" level=\"TRACE\" additivity=\"false\">\n+    <appender-ref ref=\"CONSOLE\"/>\n+  </logger>\n+\n+  <logger name=\"org.springframework.ws.client.MessageTracing\" level=\"TRACE\" additivity=\"false\">\n+    <appender-ref ref=\"CONSOLE\"/>\n+  </logger>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3NzQ4Mw=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA1Mjg2OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/osgp-adapter-protocol-mqtt.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0NDowNFrOF03djA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1NToxMlrOF1iIMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3ODk1Ng==", "bodyText": "Please clean up this property file. I assume these keys are not in use by the MQTT implementation.\nSame for the properties below.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390978956", "createdAt": "2020-03-11T13:44:04Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/osgp-adapter-protocol-mqtt.properties", "diffHunk": "@@ -0,0 +1,129 @@\n+#Database Configuration\n+db.username.mqtt=osp_admin\n+db.password.mqtt=1234\n+\n+#PostgreSQL\n+db.driver=org.postgresql.Driver\n+db.protocol=jdbc:postgresql://\n+\n+db.host.mqtt=localhost\n+db.port.mqtt=5432\n+db.name.mqtt=osgp_adapter_protocol_mqtt\n+\n+db.min_pool_size=1\n+db.max_pool_size=5\n+db.auto_commit=false\n+db.idle_timeout=120000\n+\n+#Hibernate Configuration\n+hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\n+hibernate.format_sql=true\n+hibernate.physical_naming_strategy=org.opensmartgridplatform.shared.application.config.HibernateNamingStrategy\n+hibernate.show_sql=false\n+\n+#Flyway configuration\n+flyway.initial.version=20200127155743442\n+flyway.initial.description=Initial version PostgreSQL\n+flyway.init.on.migrate=true\n+\n+#EntityManager\n+#Declares the base package of the entity classes\n+entitymanager.packages.to.scan=org.opensmartgridplatform.adapter.protocol.mqtt.domain.entities\n+\n+#Paging\n+paging.maximum.pagesize=30\n+paging.default.pagesize=15\n+\n+# MQTT\n+mqtt.broker.defaultPort=8883\n+mqtt.broker.defaultTopics=+/measurement,+/congestion\n+mqtt.broker.defaultQos=AT_LEAST_ONCE\n+\n+# =========================================================\n+# MESSAGING CONFIG\n+# =========================================================\n+#----------------------------------------------------------\n+# jms.default\n+#----------------------------------------------------------\n+#jms.default.broker.url=failover:(ssl://localhost:61617)\n+jms.default.broker.url=failover:(tcp://localhost:61616)\n+jms.default.connection.queue.prefetch=1\n+\n+#----------------------------------------------------------\n+# jms.mqtt.requests\n+#----------------------------------------------------------\n+jms.mqtt.requests.queue=protocol-mqtt.1_0.osgp-core.1_0.requests\n+jms.mqtt.requests.initial.redelivery.delay=300000\n+jms.mqtt.requests.maximum.redelivery.delay=900000\n+jms.mqtt.requests.redelivery.delay=300000\n+\n+#----------------------------------------------------------\n+# jms.mqtt.responses\n+#----------------------------------------------------------\n+jms.mqtt.responses.queue=osgp-core.1_0.protocol-mqtt.1_0.responses\n+jms.mqtt.responses.initial.redelivery.delay=300000\n+jms.mqtt.responses.maximum.redelivery.delay=900000\n+jms.mqtt.responses.redelivery.delay=300000\n+\n+#----------------------------------------------------------\n+# jms.mqtt.log.item.requests\n+#----------------------------------------------------------\n+jms.mqtt.log.item.requests.queue=osgp.logging.protocol\n+\n+#----------------------------------------------------------\n+# jms.osgp.requests\n+#----------------------------------------------------------\n+jms.osgp.requests.queue=osgp-core.1_0.protocol-mqtt.1_0.requests\n+\n+#----------------------------------------------------------\n+# jms.osgp.responses\n+#----------------------------------------------------------\n+jms.osgp.responses.queue=protocol-mqtt.1_0.osgp-core.1_0.responses\n+\n+# =========================================================\n+# Recover key settings\n+# =========================================================\n+executor.scheduled.poolsize=5\n+key.recovery.delay=240000\n+\n+# =========================================================\n+# Core retry settings\n+#\n+# Please note retries are scheduled as tasks and executed\n+# by a ThreadPoolTaskScheduler. The effective minimum retry \n+# delay is therefore the interval of the scheduler.\n+# =========================================================\n+schedule.retry.mqtt.delay=30000\n+schedule.retry.mqtt.retries=2\n+\n+schedule.retry.mqtt.backoff.multiplier=2\n+schedule.retry.mqtt.backoff.exponential=true\n+\n+# device keys security\n+encryption.key.path=/etc/osp/smartmetering/keys/platform/secret.aes\n+\n+encryption.rsa.private.key.path=/etc/osp/smartmetering/keys/platform/mqtt_device_keys_private\n+encryption.rsa.public.key.path=/etc/osp/smartmetering/keys/platform/mqtt_device_keys_public", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3ODAwMg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391678002", "createdAt": "2020-03-12T14:55:12Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/resources/osgp-adapter-protocol-mqtt.properties", "diffHunk": "@@ -0,0 +1,129 @@\n+#Database Configuration\n+db.username.mqtt=osp_admin\n+db.password.mqtt=1234\n+\n+#PostgreSQL\n+db.driver=org.postgresql.Driver\n+db.protocol=jdbc:postgresql://\n+\n+db.host.mqtt=localhost\n+db.port.mqtt=5432\n+db.name.mqtt=osgp_adapter_protocol_mqtt\n+\n+db.min_pool_size=1\n+db.max_pool_size=5\n+db.auto_commit=false\n+db.idle_timeout=120000\n+\n+#Hibernate Configuration\n+hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\n+hibernate.format_sql=true\n+hibernate.physical_naming_strategy=org.opensmartgridplatform.shared.application.config.HibernateNamingStrategy\n+hibernate.show_sql=false\n+\n+#Flyway configuration\n+flyway.initial.version=20200127155743442\n+flyway.initial.description=Initial version PostgreSQL\n+flyway.init.on.migrate=true\n+\n+#EntityManager\n+#Declares the base package of the entity classes\n+entitymanager.packages.to.scan=org.opensmartgridplatform.adapter.protocol.mqtt.domain.entities\n+\n+#Paging\n+paging.maximum.pagesize=30\n+paging.default.pagesize=15\n+\n+# MQTT\n+mqtt.broker.defaultPort=8883\n+mqtt.broker.defaultTopics=+/measurement,+/congestion\n+mqtt.broker.defaultQos=AT_LEAST_ONCE\n+\n+# =========================================================\n+# MESSAGING CONFIG\n+# =========================================================\n+#----------------------------------------------------------\n+# jms.default\n+#----------------------------------------------------------\n+#jms.default.broker.url=failover:(ssl://localhost:61617)\n+jms.default.broker.url=failover:(tcp://localhost:61616)\n+jms.default.connection.queue.prefetch=1\n+\n+#----------------------------------------------------------\n+# jms.mqtt.requests\n+#----------------------------------------------------------\n+jms.mqtt.requests.queue=protocol-mqtt.1_0.osgp-core.1_0.requests\n+jms.mqtt.requests.initial.redelivery.delay=300000\n+jms.mqtt.requests.maximum.redelivery.delay=900000\n+jms.mqtt.requests.redelivery.delay=300000\n+\n+#----------------------------------------------------------\n+# jms.mqtt.responses\n+#----------------------------------------------------------\n+jms.mqtt.responses.queue=osgp-core.1_0.protocol-mqtt.1_0.responses\n+jms.mqtt.responses.initial.redelivery.delay=300000\n+jms.mqtt.responses.maximum.redelivery.delay=900000\n+jms.mqtt.responses.redelivery.delay=300000\n+\n+#----------------------------------------------------------\n+# jms.mqtt.log.item.requests\n+#----------------------------------------------------------\n+jms.mqtt.log.item.requests.queue=osgp.logging.protocol\n+\n+#----------------------------------------------------------\n+# jms.osgp.requests\n+#----------------------------------------------------------\n+jms.osgp.requests.queue=osgp-core.1_0.protocol-mqtt.1_0.requests\n+\n+#----------------------------------------------------------\n+# jms.osgp.responses\n+#----------------------------------------------------------\n+jms.osgp.responses.queue=protocol-mqtt.1_0.osgp-core.1_0.responses\n+\n+# =========================================================\n+# Recover key settings\n+# =========================================================\n+executor.scheduled.poolsize=5\n+key.recovery.delay=240000\n+\n+# =========================================================\n+# Core retry settings\n+#\n+# Please note retries are scheduled as tasks and executed\n+# by a ThreadPoolTaskScheduler. The effective minimum retry \n+# delay is therefore the interval of the scheduler.\n+# =========================================================\n+schedule.retry.mqtt.delay=30000\n+schedule.retry.mqtt.retries=2\n+\n+schedule.retry.mqtt.backoff.multiplier=2\n+schedule.retry.mqtt.backoff.exponential=true\n+\n+# device keys security\n+encryption.key.path=/etc/osp/smartmetering/keys/platform/secret.aes\n+\n+encryption.rsa.private.key.path=/etc/osp/smartmetering/keys/platform/mqtt_device_keys_private\n+encryption.rsa.public.key.path=/etc/osp/smartmetering/keys/platform/mqtt_device_keys_public", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk3ODk1Ng=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA2MDkyOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/SubscriptionServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0NTo1NlrOF03iXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1NTo1M1rOF1iKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MDE5MA==", "bodyText": "Add a header to this new file.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390980190", "createdAt": "2020-03-11T13:45:56Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/SubscriptionServiceTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3ODUxNQ==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391678515", "createdAt": "2020-03-12T14:55:53Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/java/org/opensmartgridplatform/adapter/protocol/mqtt/application/services/SubscriptionServiceTest.java", "diffHunk": "@@ -0,0 +1,205 @@\n+package org.opensmartgridplatform.adapter.protocol.mqtt.application.services;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MDE5MA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA2NzU4OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/.gitignore", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0NzozMFrOF03mhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1Njo1MFrOF1iNCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MTI1NA==", "bodyText": "Please remove this .gitignore file.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390981254", "createdAt": "2020-03-11T13:47:30Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3OTI0Mg==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391679242", "createdAt": "2020-03-12T14:56:50Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MTI1NA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA2ODkxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/resources/test.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo0Nzo0NlrOF03nQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo1NjoxOVrOF1iLiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MTQ0MQ==", "bodyText": "What are these properties used for?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390981441", "createdAt": "2020-03-11T13:47:46Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/resources/test.properties", "diffHunk": "@@ -0,0 +1,186 @@\n+osp/osgpAdapterProtocolmqtt/config=target/test-classes/test.properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY3ODg1Nw==", "bodyText": "Not used, now removed.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391678857", "createdAt": "2020-03-12T14:56:19Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/test/resources/test.properties", "diffHunk": "@@ -0,0 +1,186 @@\n+osp/osgpAdapterProtocolmqtt/config=target/test-classes/test.properties", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4MTQ0MQ=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzA5MDgwOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzo1Mjo1NFrOF031Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozOTozNlrOF25_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NTAxOA==", "bodyText": "If there is time, it would be great if this project could be built as war instead of jar. There are other simulator projects which are Spring Boot applications built as war, see osgp-protocol-simulator-iec61850 as an example.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r390985018", "createdAt": "2020-03-11T13:52:54Z", "author": {"login": "kevinsmeets"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright 2020 Smart Society Services B.V.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.opensmartgridplatform</groupId>\n+  <artifactId>osgp-protocol-simulator-mqtt</artifactId>\n+  <name>osgp-protocol-simulator-mqtt</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY4NDkyMg==", "bodyText": "The idea is to run the simulator with Docker (see the README) since that's what we're migrating to. This was also requested by the client (Egon Kastelijn).\nIt's possible to also generate a .war file from the build, but is that really the desired course?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r391684922", "createdAt": "2020-03-12T15:04:42Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright 2020 Smart Society Services B.V.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.opensmartgridplatform</groupId>\n+  <artifactId>osgp-protocol-simulator-mqtt</artifactId>\n+  <name>osgp-protocol-simulator-mqtt</name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NTAxOA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4OTQ3Mw==", "bodyText": "Discussed with @rtusveld and will change the build so it generates a .war file", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392189473", "createdAt": "2020-03-13T12:08:59Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright 2020 Smart Society Services B.V.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.opensmartgridplatform</groupId>\n+  <artifactId>osgp-protocol-simulator-mqtt</artifactId>\n+  <name>osgp-protocol-simulator-mqtt</name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NTAxOA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNzU5OA==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393117598", "createdAt": "2020-03-16T15:39:36Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/pom.xml", "diffHunk": "@@ -0,0 +1,125 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright 2020 Smart Society Services B.V.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.opensmartgridplatform</groupId>\n+  <artifactId>osgp-protocol-simulator-mqtt</artifactId>\n+  <name>osgp-protocol-simulator-mqtt</name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk4NTAxOA=="}, "originalCommit": {"oid": "bc35b5e521f2d9418c744adf409ed2d26bb893e5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDkwNzA3OnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/Notification.wsdl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMDowNlrOF2DVag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1MDozM1rOF3W65A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjA1OA==", "bodyText": "443 is already the default port for https. So it should not be needed to add it?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392222058", "createdAt": "2020-03-13T13:20:06Z", "author": {"login": "smvdheijden"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/Notification.wsdl", "diffHunk": "@@ -74,7 +74,7 @@\n   <wsdl:service name=\"DistributionAutomationNotificationPortService\">\n     <wsdl:port binding=\"tns:DistributionAutomationNotificationPortSoap11\"\n       name=\"DistributionAutomationNotificationPortSoap11\">\n-      <soap:address location=\"http://localhost/notification/\"/>\n+      <soap:address location=\"https://localhost:443/notification/\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5MTUyNA==", "bodyText": "Reverted to previous URL. Accidentally changed when generating a SoapUI project", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393591524", "createdAt": "2020-03-17T10:50:33Z", "author": {"login": "akoster"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/Notification.wsdl", "diffHunk": "@@ -74,7 +74,7 @@\n   <wsdl:service name=\"DistributionAutomationNotificationPortService\">\n     <wsdl:port binding=\"tns:DistributionAutomationNotificationPortSoap11\"\n       name=\"DistributionAutomationNotificationPortSoap11\">\n-      <soap:address location=\"http://localhost/notification/\"/>\n+      <soap:address location=\"https://localhost:443/notification/\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjA1OA=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDkwNzIzOnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationMonitoring.wsdl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMDoxMFrOF2DVhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1MDozOFrOF3W7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjA4Ng==", "bodyText": "443 is already the default port for https. So it should not be needed to add it?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392222086", "createdAt": "2020-03-13T13:20:10Z", "author": {"login": "smvdheijden"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationMonitoring.wsdl", "diffHunk": "@@ -190,7 +190,7 @@\n     <wsdl:service name=\"DistributionAutomationMonitoringPortService\">\n         <wsdl:port binding=\"tns:DistributionAutomationMonitoringPortSoap11\" name=\"DistributionAutomationMonitoringPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/monitoring/\"/>\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/monitoring/\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5MTU2MQ==", "bodyText": "Reverted to previous URL. Accidentally changed when generating a SoapUI project", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393591561", "createdAt": "2020-03-17T10:50:38Z", "author": {"login": "akoster"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationMonitoring.wsdl", "diffHunk": "@@ -190,7 +190,7 @@\n     <wsdl:service name=\"DistributionAutomationMonitoringPortService\">\n         <wsdl:port binding=\"tns:DistributionAutomationMonitoringPortSoap11\" name=\"DistributionAutomationMonitoringPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/monitoring/\"/>\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/monitoring/\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjA4Ng=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDkwNzc4OnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationDeviceManagement.wsdl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMDoyM1rOF2DV6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1MToyNlrOF3W8rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjE4NQ==", "bodyText": "443 is already the default port for https. So it should not be needed to add it?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392222185", "createdAt": "2020-03-13T13:20:23Z", "author": {"login": "smvdheijden"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationDeviceManagement.wsdl", "diffHunk": "@@ -112,7 +112,7 @@\n         <wsdl:port binding=\"tns:DistributionAutomationDeviceManagementPortSoap11\"\n             name=\"DistributionAutomationDeviceManagementPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/devicemanagement/\"\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/devicemanagement/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5MTk4MQ==", "bodyText": "Reverted to previous URL. Accidentally changed when generating a SoapUI project", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393591981", "createdAt": "2020-03-17T10:51:26Z", "author": {"login": "akoster"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationDeviceManagement.wsdl", "diffHunk": "@@ -112,7 +112,7 @@\n         <wsdl:port binding=\"tns:DistributionAutomationDeviceManagementPortSoap11\"\n             name=\"DistributionAutomationDeviceManagementPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/devicemanagement/\"\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/devicemanagement/\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjE4NQ=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDkwODI3OnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationAdHocManagement.wsdl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMDozMFrOF2DWKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1MTozMVrOF3W84g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjI1MQ==", "bodyText": "443 is already the default port for https. So it should not be needed to add it?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392222251", "createdAt": "2020-03-13T13:20:30Z", "author": {"login": "smvdheijden"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationAdHocManagement.wsdl", "diffHunk": "@@ -114,7 +114,7 @@\n         <wsdl:port binding=\"tns:DistributionAutomationAdHocManagementPortSoap11\"\n             name=\"DistributionAutomationAdHocManagementPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/adhocmanagement/\"\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/adhocmanagement/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5MjAzNA==", "bodyText": "Reverted to previous URL. Accidentally changed when generating a SoapUI project", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393592034", "createdAt": "2020-03-17T10:51:31Z", "author": {"login": "akoster"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/resources/DistributionAutomationAdHocManagement.wsdl", "diffHunk": "@@ -114,7 +114,7 @@\n         <wsdl:port binding=\"tns:DistributionAutomationAdHocManagementPortSoap11\"\n             name=\"DistributionAutomationAdHocManagementPortSoap11\">\n             <soap:address\n-                location=\"http://localhost:8080/osgp-adapter-ws-distributionautomation/distributionautomation/adhocmanagement/\"\n+                location=\"https://localhost:443/osgp-adapter-ws-distributionautomation/distributionautomation/adhocmanagement/\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMjI1MQ=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTAyNzQxOnYy", "diffSide": "RIGHT", "path": "osgp/shared/osgp-ws-distributionautomation/src/main/java/org/opensmartgridplatform/ws/da/config/DistributionAutomationWebServiceConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1NDozNlrOF2EhbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDo1Nzo0M1rOF3XJqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MTUxNg==", "bodyText": "Why are these validations on request and response set to false?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392241516", "createdAt": "2020-03-13T13:54:36Z", "author": {"login": "smvdheijden"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/java/org/opensmartgridplatform/ws/da/config/DistributionAutomationWebServiceConfig.java", "diffHunk": "@@ -32,6 +32,8 @@ public PayloadValidatingInterceptor payloadValidatingInterceptor() {\n         final Resource[] resources = new Resource[] { new ClassPathResource(COMMON_XSD_PATH),\n                 new ClassPathResource(DISTRIBUTION_AUTOMATION_XSD_PATH) };\n         payloadValidatingInterceptor.setSchemas(resources);\n+        payloadValidatingInterceptor.setValidateRequest(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU5NTMwNw==", "bodyText": "Request validation now set to true. This means we validate all requests against the schema, which sounds a bit expensive to me in the context of this 'distributed-monolith' application OSGP. But other components also do it so aligned now.\nResponse validation is set to false everywhere, which makes sense to me. Otherwise we would be validating JAXB responses we generated ourselves.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393595307", "createdAt": "2020-03-17T10:57:43Z", "author": {"login": "akoster"}, "path": "osgp/shared/osgp-ws-distributionautomation/src/main/java/org/opensmartgridplatform/ws/da/config/DistributionAutomationWebServiceConfig.java", "diffHunk": "@@ -32,6 +32,8 @@ public PayloadValidatingInterceptor payloadValidatingInterceptor() {\n         final Resource[] resources = new Resource[] { new ClassPathResource(COMMON_XSD_PATH),\n                 new ClassPathResource(DISTRIBUTION_AUTOMATION_XSD_PATH) };\n         payloadValidatingInterceptor.setSchemas(resources);\n+        payloadValidatingInterceptor.setValidateRequest(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MTUxNg=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTEzODMxOnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/webapp/META-INF/context.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDoyNDozN1rOF2FneA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTowNzozM1rOF3Xdjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI1OTQ0OA==", "bodyText": "Are the jasper interface properties needed in this context?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392259448", "createdAt": "2020-03-13T14:24:37Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/webapp/META-INF/context.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version='1.0' encoding='utf-8'?>\n+<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor \n+  license agreements. See the NOTICE file distributed with this work for additional \n+  information regarding copyright ownership. The ASF licenses this file to \n+  You under the Apache License, Version 2.0 (the \"License\"); you may not use \n+  this file except in compliance with the License. You may obtain a copy of \n+  the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n+  by applicable law or agreed to in writing, software distributed under the \n+  License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n+  OF ANY KIND, either express or implied. See the License for the specific \n+  language governing permissions and limitations under the License. -->\n+<!-- The contents of this file will be loaded for each web application -->\n+<Context useHttpOnly=\"true\">\n+\n+  <!-- Default set of monitored resources -->\n+  <WatchedResource>WEB-INF/web.xml</WatchedResource>\n+\n+  <!-- App config files -->\n+  <Environment name=\"osgp/Global/config\" value=\"/etc/osp/global.properties\"\n+    type=\"java.lang.String\" override=\"true\" />\n+\n+  <Environment name=\"osgp/AdapterProtocolMqtt/config\"\n+    value=\"/etc/osp/osgp-adapter-protocol-mqtt.properties\" type=\"java.lang.String\"\n+    override=\"true\" />\n+  <Environment name=\"osgp/AdapterProtocolMqtt/log-config\"\n+    value=\"/etc/osp/osgp-adapter-protocol-mqtt-logback.xml\" type=\"java.lang.String\"\n+    override=\"true\" />\n+\n+  <Environment name=\"osgp/JasperInterface/config\" value=\"/etc/osp/jasper-interface.properties\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMDM5OQ==", "bodyText": "No they are not. Removed.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393600399", "createdAt": "2020-03-17T11:07:33Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-adapter-mqtt/src/main/webapp/META-INF/context.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<?xml version='1.0' encoding='utf-8'?>\n+<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor \n+  license agreements. See the NOTICE file distributed with this work for additional \n+  information regarding copyright ownership. The ASF licenses this file to \n+  You under the Apache License, Version 2.0 (the \"License\"); you may not use \n+  this file except in compliance with the License. You may obtain a copy of \n+  the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n+  by applicable law or agreed to in writing, software distributed under the \n+  License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n+  OF ANY KIND, either express or implied. See the License for the specific \n+  language governing permissions and limitations under the License. -->\n+<!-- The contents of this file will be loaded for each web application -->\n+<Context useHttpOnly=\"true\">\n+\n+  <!-- Default set of monitored resources -->\n+  <WatchedResource>WEB-INF/web.xml</WatchedResource>\n+\n+  <!-- App config files -->\n+  <Environment name=\"osgp/Global/config\" value=\"/etc/osp/global.properties\"\n+    type=\"java.lang.String\" override=\"true\" />\n+\n+  <Environment name=\"osgp/AdapterProtocolMqtt/config\"\n+    value=\"/etc/osp/osgp-adapter-protocol-mqtt.properties\" type=\"java.lang.String\"\n+    override=\"true\" />\n+  <Environment name=\"osgp/AdapterProtocolMqtt/log-config\"\n+    value=\"/etc/osp/osgp-adapter-protocol-mqtt-logback.xml\" type=\"java.lang.String\"\n+    override=\"true\" />\n+\n+  <Environment name=\"osgp/JasperInterface/config\" value=\"/etc/osp/jasper-interface.properties\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI1OTQ0OA=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTM4MDE1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToyODowNVrOF2ICSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoyMjoxOFrOF4oNZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5OTA4Mw==", "bodyText": "Why is this class needed? Couldn't you use the default handling in the ProtocolResponseMessageListener without introducing a new class?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392299083", "createdAt": "2020-03-13T15:28:05Z", "author": {"login": "smvdheijden"}, "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.infra.jms.protocol.inbound.messageprocessors;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.core.infra.jms.protocol.inbound.AbstractProtocolRequestMessageProcessor;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.DeviceAuthorization;\n+import org.opensmartgridplatform.domain.core.entities.DomainInfo;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DomainInfoRepository;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunctionGroup;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.MessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"GetDataMessageProcessor\")\n+public class GetDataMessageProcessor extends AbstractProtocolRequestMessageProcessor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyMzM2NQ==", "bodyText": "It's not needed. Removed it.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394923365", "createdAt": "2020-03-19T10:22:18Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/inbound/messageprocessors/GetDataMessageProcessor.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.infra.jms.protocol.inbound.messageprocessors;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.core.domain.model.domain.DomainRequestService;\n+import org.opensmartgridplatform.core.infra.jms.protocol.inbound.AbstractProtocolRequestMessageProcessor;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.entities.DeviceAuthorization;\n+import org.opensmartgridplatform.domain.core.entities.DomainInfo;\n+import org.opensmartgridplatform.domain.core.exceptions.UnknownEntityException;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceAuthorizationRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+import org.opensmartgridplatform.domain.core.repositories.DomainInfoRepository;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunction;\n+import org.opensmartgridplatform.domain.core.valueobjects.DeviceFunctionGroup;\n+import org.opensmartgridplatform.shared.exceptionhandling.ComponentType;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalException;\n+import org.opensmartgridplatform.shared.exceptionhandling.FunctionalExceptionType;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.MessageMetadata;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"GetDataMessageProcessor\")\n+public class GetDataMessageProcessor extends AbstractProtocolRequestMessageProcessor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5OTA4Mw=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTQyNzg1OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataRequestMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTo0MTowNlrOF2IgrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDo0Mjo0NVrOF4INkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNjg2MQ==", "bodyText": "This name confuses me, is this class processing requests to get data, sent from osgp core to the domain adapter?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r392306861", "createdAt": "2020-03-13T15:41:06Z", "author": {"login": "smvdheijden"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.core.messageprocessors;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.AdHocManagementService;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationGetDataRequestMessageProcessor\")\n+public class GetDataRequestMessageProcessor extends BaseNotificationMessageProcessor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwNTgxMA==", "bodyText": "The idea was that the domain adapter triggers a GET_DATA request via core to the PA. Then data arrives at the PA and is sent as new requests back via core to the domain adapter. Actually these are asynchronous GET_DATA events, but such a concept does not really exist in OSGP. So I had to choose between response data (incorrectly implying synchronicity) or request data (incorrectly implying that a response is expected). I chose the latter.\nHowever, you indicated via Slack that this is confusing and, lacking the concept of events, it is better to use response messages for this. So I will take a look to see if I can still manage this change in the remaining time.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r393605810", "createdAt": "2020-03-17T11:18:16Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.core.messageprocessors;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.AdHocManagementService;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationGetDataRequestMessageProcessor\")\n+public class GetDataRequestMessageProcessor extends BaseNotificationMessageProcessor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNjg2MQ=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM5OTEyMg==", "bodyText": "Done. Switched from request flow to response flow.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394399122", "createdAt": "2020-03-18T14:42:45Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataRequestMessageProcessor.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.core.messageprocessors;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.AdHocManagementService;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.CorrelationIds;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.opensmartgridplatform.shared.infra.jms.RequestMessage;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationGetDataRequestMessageProcessor\")\n+public class GetDataRequestMessageProcessor extends BaseNotificationMessageProcessor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNjg2MQ=="}, "originalCommit": {"oid": "a6319b9211c272447681035dee5b03e1e955ae87"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDcwMTU4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/AdHocManagementService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDo1Mjo0OVrOF4IrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNjo1NVrOF4mN6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQwNjgwNQ==", "bodyText": "Complete the task associated to this TODO comment.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394406805", "createdAt": "2020-03-18T14:52:49Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/AdHocManagementService.java", "diffHunk": "@@ -99,4 +99,10 @@ public void handleGetDeviceModelResponse(final GetDeviceModelResponseDto getDevi\n                 .build();\n         this.webServiceResponseMessageSender.send(responseMessage, messageType);\n     }\n+\n+    public void handleGetDataRequest(final String payload, final String deviceIdentification) {\n+        LOGGER.info(\"Handle GET_DATA request for device: {} payload: {}\", deviceIdentification, payload);\n+        // TODO: further implement handling of GET_DATA messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b139bbc5b438944736f0fcf3a835ee56a8569ae"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ1MDIwOA==", "bodyText": "Intended as a pointer for later developement", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394450208", "createdAt": "2020-03-18T15:48:55Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/AdHocManagementService.java", "diffHunk": "@@ -99,4 +99,10 @@ public void handleGetDeviceModelResponse(final GetDeviceModelResponseDto getDevi\n                 .build();\n         this.webServiceResponseMessageSender.send(responseMessage, messageType);\n     }\n+\n+    public void handleGetDataRequest(final String payload, final String deviceIdentification) {\n+        LOGGER.info(\"Handle GET_DATA request for device: {} payload: {}\", deviceIdentification, payload);\n+        // TODO: further implement handling of GET_DATA messages", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQwNjgwNQ=="}, "originalCommit": {"oid": "2b139bbc5b438944736f0fcf3a835ee56a8569ae"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDczMA==", "bodyText": "Intended as a pointer for further development using the MQTT protocol adapter", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r394890730", "createdAt": "2020-03-19T09:26:55Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/application/services/AdHocManagementService.java", "diffHunk": "@@ -99,4 +99,10 @@ public void handleGetDeviceModelResponse(final GetDeviceModelResponseDto getDevi\n                 .build();\n         this.webServiceResponseMessageSender.send(responseMessage, messageType);\n     }\n+\n+    public void handleGetDataRequest(final String payload, final String deviceIdentification) {\n+        LOGGER.info(\"Handle GET_DATA request for device: {} payload: {}\", deviceIdentification, payload);\n+        // TODO: further implement handling of GET_DATA messages", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQwNjgwNQ=="}, "originalCommit": {"oid": "2b139bbc5b438944736f0fcf3a835ee56a8569ae"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODQzNjEyOnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreResponseMessageListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzoxMzoyNlrOF4twtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoxMjozNFrOF4wQEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAxNDMyNg==", "bodyText": "Why is // XXX added here?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395014326", "createdAt": "2020-03-19T13:13:26Z", "author": {"login": "smvdheijden"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreResponseMessageListener.java", "diffHunk": "@@ -32,7 +32,7 @@\n \n     @Autowired\n     @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\")\n-    private MessageProcessorMap messageProcessorMap;\n+    private MessageProcessorMap messageProcessorMap; // XXX", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1NTEyMg==", "bodyText": "That's a booboo from me. Good catch.\nRemoved.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395055122", "createdAt": "2020-03-19T14:12:34Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/OsgpCoreResponseMessageListener.java", "diffHunk": "@@ -32,7 +32,7 @@\n \n     @Autowired\n     @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\")\n-    private MessageProcessorMap messageProcessorMap;\n+    private MessageProcessorMap messageProcessorMap; // XXX", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAxNDMyNg=="}, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODQ0NTE3OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataResponseMessageProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzoxNTo1NlrOF4t2xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoxNzowNVrOF4wc2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAxNTg3OQ==", "bodyText": "Consider renaming handleGetDataRequest to handleGetDataResponse.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395015879", "createdAt": "2020-03-19T13:15:56Z", "author": {"login": "smvdheijden"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataResponseMessageProcessor.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.core.messageprocessors;\n+\n+import java.util.Optional;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.AdHocManagementService;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationGetDataResponseMessageProcessor\")\n+public class GetDataResponseMessageProcessor extends BaseNotificationMessageProcessor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GetDataResponseMessageProcessor.class);\n+\n+    @Autowired\n+    @Qualifier(\"domainDistributionAutomationAdHocManagementService\")\n+    private AdHocManagementService adHocManagementService;\n+\n+    @Autowired\n+    protected GetDataResponseMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n+            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n+        super(responseMessageSender, messageProcessorMap, MessageType.GET_DATA);\n+    }\n+\n+    @Override\n+    public void processMessage(final ObjectMessage message) throws JMSException {\n+        LOGGER.debug(\"Processing DA GET_DATA response message\");\n+        this.getResponseValues(message).ifPresent(this::processResponseValues);\n+    }\n+\n+    private Optional<ResponseValues> getResponseValues(final ObjectMessage message) {\n+        final ResponseValues responseValues = new ResponseValues();\n+        try {\n+            responseValues.correlationUid = message.getJMSCorrelationID();\n+            responseValues.messageType = message.getJMSType();\n+            responseValues.organisationIdentification = message.getStringProperty(\n+                    Constants.ORGANISATION_IDENTIFICATION);\n+            responseValues.deviceIdentification = message.getStringProperty(Constants.DEVICE_IDENTIFICATION);\n+            responseValues.responseMessage = (ResponseMessage) message.getObject();\n+            responseValues.responseMessageResultType = responseValues.responseMessage.getResult();\n+            responseValues.osgpException = responseValues.responseMessage.getOsgpException();\n+            responseValues.payload = (String) responseValues.responseMessage.getDataObject();\n+        } catch (final JMSException e) {\n+            this.logJmsException(responseValues, e);\n+            return Optional.empty();\n+        }\n+        return Optional.of(responseValues);\n+    }\n+\n+    private void processResponseValues(final ResponseValues responseValues) {\n+        try {\n+            LOGGER.info(\"Calling application service function to handle response: {}\", responseValues.messageType);\n+            this.adHocManagementService.handleGetDataRequest(responseValues.payload,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1ODM5Mw==", "bodyText": "Done", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395058393", "createdAt": "2020-03-19T14:17:05Z", "author": {"login": "akoster"}, "path": "osgp/platform/osgp-adapter-domain-distributionautomation/src/main/java/org/opensmartgridplatform/adapter/domain/da/infra/jms/core/messageprocessors/GetDataResponseMessageProcessor.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.domain.da.infra.jms.core.messageprocessors;\n+\n+import java.util.Optional;\n+\n+import javax.jms.JMSException;\n+import javax.jms.ObjectMessage;\n+\n+import org.opensmartgridplatform.adapter.domain.da.application.services.AdHocManagementService;\n+import org.opensmartgridplatform.shared.exceptionhandling.OsgpException;\n+import org.opensmartgridplatform.shared.infra.jms.BaseNotificationMessageProcessor;\n+import org.opensmartgridplatform.shared.infra.jms.Constants;\n+import org.opensmartgridplatform.shared.infra.jms.MessageProcessorMap;\n+import org.opensmartgridplatform.shared.infra.jms.MessageType;\n+import org.opensmartgridplatform.shared.infra.jms.NotificationResponseMessageSender;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessage;\n+import org.opensmartgridplatform.shared.infra.jms.ResponseMessageResultType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.stereotype.Component;\n+\n+@Component(\"domainDistributionAutomationGetDataResponseMessageProcessor\")\n+public class GetDataResponseMessageProcessor extends BaseNotificationMessageProcessor {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GetDataResponseMessageProcessor.class);\n+\n+    @Autowired\n+    @Qualifier(\"domainDistributionAutomationAdHocManagementService\")\n+    private AdHocManagementService adHocManagementService;\n+\n+    @Autowired\n+    protected GetDataResponseMessageProcessor(final NotificationResponseMessageSender responseMessageSender,\n+            @Qualifier(\"domainDistributionAutomationInboundOsgpCoreResponsesMessageProcessorMap\") final MessageProcessorMap messageProcessorMap) {\n+        super(responseMessageSender, messageProcessorMap, MessageType.GET_DATA);\n+    }\n+\n+    @Override\n+    public void processMessage(final ObjectMessage message) throws JMSException {\n+        LOGGER.debug(\"Processing DA GET_DATA response message\");\n+        this.getResponseValues(message).ifPresent(this::processResponseValues);\n+    }\n+\n+    private Optional<ResponseValues> getResponseValues(final ObjectMessage message) {\n+        final ResponseValues responseValues = new ResponseValues();\n+        try {\n+            responseValues.correlationUid = message.getJMSCorrelationID();\n+            responseValues.messageType = message.getJMSType();\n+            responseValues.organisationIdentification = message.getStringProperty(\n+                    Constants.ORGANISATION_IDENTIFICATION);\n+            responseValues.deviceIdentification = message.getStringProperty(Constants.DEVICE_IDENTIFICATION);\n+            responseValues.responseMessage = (ResponseMessage) message.getObject();\n+            responseValues.responseMessageResultType = responseValues.responseMessage.getResult();\n+            responseValues.osgpException = responseValues.responseMessage.getOsgpException();\n+            responseValues.payload = (String) responseValues.responseMessage.getDataObject();\n+        } catch (final JMSException e) {\n+            this.logJmsException(responseValues, e);\n+            return Optional.empty();\n+        }\n+        return Optional.of(responseValues);\n+    }\n+\n+    private void processResponseValues(final ResponseValues responseValues) {\n+        try {\n+            LOGGER.info(\"Calling application service function to handle response: {}\", responseValues.messageType);\n+            this.adHocManagementService.handleGetDataRequest(responseValues.payload,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAxNTg3OQ=="}, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0ODUwNDE2OnYy", "diffSide": "RIGHT", "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzozMToxOFrOF4uc5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoxMzozM1rOF4wTFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAyNTYzOQ==", "bodyText": "The use of \"both\" suggests there should be 2 things?\nDid you mean both a .war file and a docker image? Or could \"both\" be dropped here?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395025639", "createdAt": "2020-03-19T13:31:18Z", "author": {"login": "smvdheijden"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/README.md", "diffHunk": "@@ -4,6 +4,10 @@ Maven build:\n ```\n mvn clean install\n ```\n+The build generates both .war file which can be deployed in Tomcat.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1NTg5Mw==", "bodyText": "Dropped 'both'", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/228#discussion_r395055893", "createdAt": "2020-03-19T14:13:33Z", "author": {"login": "akoster"}, "path": "osgp/protocol-adapter-mqtt/osgp-protocol-simulator-mqtt/README.md", "diffHunk": "@@ -4,6 +4,10 @@ Maven build:\n ```\n mvn clean install\n ```\n+The build generates both .war file which can be deployed in Tomcat.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAyNTYzOQ=="}, "originalCommit": {"oid": "1dc720e5e298b9aea3bacc5c293ea36974b8ad7d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3674, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}