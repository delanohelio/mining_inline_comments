{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzI3Nzky", "number": 368, "title": "Feature/flex 5402 sorting filtering messages page", "bodyText": "", "createdAt": "2020-07-08T15:41:59Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368", "merged": true, "mergeCommit": {"oid": "c5712fb2525d44de739996fd758cf5b940269bb8"}, "closed": true, "closedAt": "2020-07-28T14:42:00Z", "author": {"login": "JelleHoffman"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwlD49gH2gAyNDQ2MzI3NzkyOmEyZTdmMGNhMTYxYzY4NGMxMTE0MDMzMGZiZGNiZDliNmNhOWQzNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5QUKQAFqTQ1NjMzMjEyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a2e7f0ca161c684c11140330fbdcbd9b6ca9d367", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a2e7f0ca161c684c11140330fbdcbd9b6ca9d367", "committedDate": "2020-07-01T07:25:11Z", "message": "Extending FindMessageLogsRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406ff577e9e9c109b5aa2e1cf0acf5c4e2230388", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/406ff577e9e9c109b5aa2e1cf0acf5c4e2230388", "committedDate": "2020-07-02T14:04:51Z", "message": "Null pointer removal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b3aa15d7cb779b47678fad503a89bc053cb42f3", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6b3aa15d7cb779b47678fad503a89bc053cb42f3", "committedDate": "2020-07-03T10:05:59Z", "message": "Adding slices for DeviceLogItems and method to filter the items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2306c7b438164bc2874e5780accb0f444c073850", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2306c7b438164bc2874e5780accb0f444c073850", "committedDate": "2020-07-03T10:06:15Z", "message": "Merge remote-tracking branch 'origin/development' into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e506b494e213f982eeee8d0da98d2bd16b56a37a", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e506b494e213f982eeee8d0da98d2bd16b56a37a", "committedDate": "2020-07-03T15:42:33Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8add4c43b69daab9dd9c831aca52e1f106976ade", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8add4c43b69daab9dd9c831aca52e1f106976ade", "committedDate": "2020-07-06T11:09:37Z", "message": "Adding filters on deviceLogItems including test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c60c87de7b0603921cbe0a5ca31203d46e4481a", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/5c60c87de7b0603921cbe0a5ca31203d46e4481a", "committedDate": "2020-07-06T13:48:18Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "785202e6a87a06a9579e7f7d9d125dbc16516e9c", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/785202e6a87a06a9579e7f7d9d125dbc16516e9c", "committedDate": "2020-07-06T14:11:48Z", "message": "Properly working tests for the filter options for the messages page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d49b5c1c78568232e20d33cf5007b959da9de9c", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0d49b5c1c78568232e20d33cf5007b959da9de9c", "committedDate": "2020-07-07T16:09:49Z", "message": "Working Specification filtering for DeviceLogItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a2901de47ddd30c8dd0af7a5f5b4f2680e76b0", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/31a2901de47ddd30c8dd0af7a5f5b4f2680e76b0", "committedDate": "2020-07-07T20:03:23Z", "message": "Merge branch 'development' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ee8b4b61b617c1e8a59dc1c1f7dc7df0de1a385", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2ee8b4b61b617c1e8a59dc1c1f7dc7df0de1a385", "committedDate": "2020-07-08T08:46:07Z", "message": "XSD update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af8e23ba6ce00644dcb48c1581ffa9ae097bb25c", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/af8e23ba6ce00644dcb48c1581ffa9ae097bb25c", "committedDate": "2020-07-08T08:47:07Z", "message": "Merge branch 'feature/FLEX-5402-sorting-filtering-messages-page' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "943ed264cca8741c3b4492046c5ed4560fe4fb15", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/943ed264cca8741c3b4492046c5ed4560fe4fb15", "committedDate": "2020-07-08T08:47:43Z", "message": "FLEX-5402 ~ Replaces creation by modification time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d34f4d43d9c48e636ecde6f784cfec3de8da212c", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d34f4d43d9c48e636ecde6f784cfec3de8da212c", "committedDate": "2020-07-08T08:56:24Z", "message": "FLEX-5402 ~ Replaces NONE by ALL in specification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bee138fed47d63dd5caf645664eedc090ee55ee", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0bee138fed47d63dd5caf645664eedc090ee55ee", "committedDate": "2020-07-08T09:09:53Z", "message": "WildcardUtil move and using the util for device log filtering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f6f6333ce9f03a8b10efce064effb26a1be8b5", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/59f6f6333ce9f03a8b10efce064effb26a1be8b5", "committedDate": "2020-07-08T09:10:05Z", "message": "Merge remote-tracking branch 'origin/feature/FLEX-5402-sorting-filtering-messages-page' into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4891fe4e702d441f1950d947c49477f37ebb391a", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/4891fe4e702d441f1950d947c49477f37ebb391a", "committedDate": "2020-07-08T09:19:30Z", "message": "FLEX-5402 ~ Fixes incorrect test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddc609903aadb3433ce26b9d8b1e77243e2e739b", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ddc609903aadb3433ce26b9d8b1e77243e2e739b", "committedDate": "2020-07-08T09:19:49Z", "message": "FLEX-5402 ~ Removes redundant code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c2b59de24e4feb383d8511d2889d59b046e58e", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b6c2b59de24e4feb383d8511d2889d59b046e58e", "committedDate": "2020-07-08T09:20:06Z", "message": "Merge branch 'feature/FLEX-5402-sorting-filtering-messages-page' of github.com:OSGP/open-smart-grid-platform into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a49bcb747ba3808634e49fc6d2f3810995872bea", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a49bcb747ba3808634e49fc6d2f3810995872bea", "committedDate": "2020-07-08T10:21:02Z", "message": "String wildcard contain check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c16401c2d78aa1def1534348efab6342b979c24", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1c16401c2d78aa1def1534348efab6342b979c24", "committedDate": "2020-07-08T14:09:37Z", "message": "Working wildcard plus testing properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74e6d999ead1fea11af5182c2c689a9a61ee98d1", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/74e6d999ead1fea11af5182c2c689a9a61ee98d1", "committedDate": "2020-07-08T14:47:45Z", "message": "Adding sorting to the DeviceLogItemFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63ff97bce0c3d9924e3ca574e37c8f8d82d0a31d", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/63ff97bce0c3d9924e3ca574e37c8f8d82d0a31d", "committedDate": "2020-07-08T15:38:13Z", "message": "Working sort test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c96816f79e764a68167b3046330688ec0a4a7185", "author": {"user": {"login": "JelleHoffman", "name": "Jelle Hoffman"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/c96816f79e764a68167b3046330688ec0a4a7185", "committedDate": "2020-07-08T15:39:15Z", "message": "Merge remote-tracking branch 'origin/development' into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb", "committedDate": "2020-07-08T21:05:58Z", "message": "FLEX-5402 ~ Updates DeviceLogItemSteps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab475e8e753c6c235930f57bbde09735245a13bb", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ab475e8e753c6c235930f57bbde09735245a13bb", "committedDate": "2020-07-09T12:29:32Z", "message": "FLEX-5402 ~ Resolves Sonar issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbefefd8fce0df47d4b27ce081e5b832aabaa939", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/dbefefd8fce0df47d4b27ce081e5b832aabaa939", "committedDate": "2020-07-09T15:37:08Z", "message": "FLEX-5402 ~ Improves scenario readability and step\n\nReadability: use StartTime/EndTime instead of SetPointStartTime/SetPointEndTime.\nStep: corrected the algorithm for the ordering of device identifications in response messages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "722533abf9190705ae6696ed718304138f38aed4", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/722533abf9190705ae6696ed718304138f38aed4", "committedDate": "2020-07-09T17:18:01Z", "message": "FLEX-5402 ~ Marked tests for nightly build only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56c1a2c5e4d87f81cd6a77f63ab2c85043a4aaf0", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/56c1a2c5e4d87f81cd6a77f63ab2c85043a4aaf0", "committedDate": "2020-07-10T14:41:00Z", "message": "FLEX-5402 ~ Processes review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0272b3ce0ca768de9340c4d03fa81f1ae700e2", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6c0272b3ce0ca768de9340c4d03fa81f1ae700e2", "committedDate": "2020-07-19T15:51:30Z", "message": "FLEX-5402 ~ Fixes date/time converter\n\nFixes the conversion between XMLGregorianCalendar and ZonedDateTime for timezones other than UTC."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTcyMjU0", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#pullrequestreview-445572254", "createdAt": "2020-07-09T12:35:38Z", "commit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjozNTozOFrOGvPINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzoyMzoxN1rOGvQ7Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4NDExNw==", "bodyText": "Don't use printStackTrace. When something should be logged, use a LOGGER object, created using \"LoggerFactory.getLogger(PutYourClassNameHere.class)\". PrintStackTrace does not log to our normal output files.\nWhen the exception occurs, the test should fail. In this case, it's therefore best to just throw the exception. Suppressing it can cause strange effects.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452184117", "createdAt": "2020-07-09T12:35:38Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }\n+\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORTED_BY)) {\n+            request.setSortBy(requestParameters.get(PlatformCommonKeys.KEY_SORTED_BY));\n+        }\n+\n+        try {\n+            ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+        } catch (final WebServiceSecurityException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4Njg0Mg==", "bodyText": "This can be done easier using method ReadSettingsHelper.getEnum(..).", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452186842", "createdAt": "2020-07-09T12:40:11Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5MzIzMw==", "bodyText": "This doesn't guarantee the order of the ID's in messageLogs.\nFor instance: [3, 4, 5, 3, 4, 5] would result in [3, 4, 5]. The end result is ordered, but the initial list isn't.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452193233", "createdAt": "2020-07-09T12:51:09Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/**\n+ *  Copyright 2020 Smart Society Services B.V.\n+ */\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException, GeneralSecurityException, IOException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+        ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+    }\n+\n+    @When(\"^receiving a filter message log request$\")\n+    public void getMessageLogFilter(final Map<String, String> requestParameters) throws IllegalArgumentException {\n+        final FindMessageLogsRequest request = new FindMessageLogsRequest();\n+\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+            request.setDeviceIdentification(getString(requestParameters, PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION,\n+                    PlatformCommonDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+            request.setOrganisationIdentification(\n+                    getString(requestParameters, PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION,\n+                            PlatformCommonDefaults.DEFAULT_ORGANIZATION_IDENTIFICATION));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_START_TIME)) {\n+            request.setStartTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_START_TIME, PlatformCommonDefaults.DEFAULT_BEGIN_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SETPOINT_END_TIME)) {\n+            request.setEndTime(XmlGregorianCalendarInputParser.parse(getString(requestParameters,\n+                    PlatformCommonKeys.KEY_SETPOINT_END_TIME, PlatformCommonDefaults.DEFAULT_END_DATE)));\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORT_DIR)) {\n+\n+            if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"ASC\")) {\n+                request.setSortDirection(SortDirectionEnum.ASC);\n+            } else if ((requestParameters.get(PlatformCommonKeys.KEY_SORT_DIR)).equals(\"DESC\")) {\n+                request.setSortDirection(SortDirectionEnum.DESC);\n+            } else {\n+                throw new IllegalArgumentException(\"Sort direction not properly set\");\n+            }\n+\n+        }\n+        if (requestParameters.containsKey(PlatformCommonKeys.KEY_SORTED_BY)) {\n+            request.setSortBy(requestParameters.get(PlatformCommonKeys.KEY_SORTED_BY));\n+        }\n+\n+        try {\n+            ScenarioContext.current().put(PlatformCommonKeys.RESPONSE, this.client.findMessageLogs(request));\n+        } catch (final WebServiceSecurityException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages\")\n+    public void theGetMessageLogsFilterSuccesful(final int amount, final Map<String, String> requestParameters)\n+            throws Throwable {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        for (final MessageLog log : messageLogs) {\n+            if (requestParameters.containsKey(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION)) {\n+                assertThat(log.getDeviceIdentification())\n+                        .isEqualTo(requestParameters.get(PlatformCommonKeys.KEY_DEVICE_IDENTIFICATION));\n+            }\n+            if (requestParameters.containsKey(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION)) {\n+                assertThat(log.getOrganisationIdentification())\n+                        .isEqualTo(requestParameters.get(PlatformCommonKeys.KEY_ORGANIZATION_IDENTIFICATION));\n+            }\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages for devices\")\n+    public void theGetMessageLogsDeviceWildcardFeatureSuccesful(final int amount, final List<String> ids) {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        for (final MessageLog log : messageLogs) {\n+            assertThat(ids).contains(log.getDeviceIdentification());\n+        }\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages with date filter or no filter\")\n+    public void theGetMessageLogsDateFilterSuccessFul(final int amount) throws Throwable {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+    }\n+\n+    @Then(\"the messages response contains {int} correct messages with order\")\n+    public void theGetMessageLogsInOrder(final int amount, final List<String> ids) {\n+        final List<MessageLog> messageLogs = this.getMessageLogs();\n+        assertThat(messageLogs.size()).isEqualTo(amount);\n+        final List<String> actualIds = new ArrayList<>();\n+        for (final MessageLog log : messageLogs) {\n+            if (!actualIds.contains(log.getDeviceIdentification())) {\n+                actualIds.add(log.getDeviceIdentification());\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIxMzUyMg==", "bodyText": "\"SetPointStartTime\" and \"SetPointEndTime\" come from another context. We should use \"StartTime\" and \"EndTime\" as field names.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r452213522", "createdAt": "2020-07-09T13:23:17Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/resources/features/common/osgp-adapter-ws-admin/DeviceManagement/FilterDeviceLogItem.feature", "diffHunk": "@@ -0,0 +1,141 @@\n+@Common @Platform @AdminDeviceManagement\n+Feature: Filter DeviceLogItem\n+  As a ...\n+  I want to be filter the DeviceLogItem \n+  In order to ...\n+\n+  Background: \n+    Given I have 6 device log items\n+      | DeviceIdentification | DEV-1   |\n+      | Organization         | Liander |\n+    And I have 5 device log items\n+      | DeviceIdentification | DEV-2   |\n+      | Organization         | Liander |\n+    And I have 4 device log items\n+      | DeviceIdentification | DEV-11 |\n+      | Organization         | TEST   |\n+\n+  Scenario: No filters set so getting all the messages\n+    When receiving a message log request without a filter\n+    Then the messages response contains 15 correct messages with date filter or no filter\n+\n+  Scenario: Filter DeviceLogItem only on device identification\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1 |\n+    Then the messages response contains 6 correct messages\n+      | DeviceIdentification | DEV-1 |\n+\n+  Scenario: wildcard filter Device Identification\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1* |\n+    Then the messages response contains 10 correct messages for devices\n+      | DEV-1  |\n+      | DEV-11 |\n+\n+  Scenario: wildcard filter Organisation Identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Li?nder |\n+    Then the messages response contains 11 correct messages for devices\n+      | DEV-1 |\n+      | DEV-2 |\n+\n+  Scenario: Filter DeviceLogItem only on organisation identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Liander |\n+    Then the messages response contains 11 correct messages\n+      | OrganizationIdentification | Liander |\n+\n+  Scenario: Filter DeviceLogItem on organisation identification and device identification\n+    When receiving a filter message log request\n+      | DeviceIdentification       | DEV-2   |\n+      | OrganizationIdentification | Liander |\n+    Then the messages response contains 5 correct messages\n+      | DeviceIdentification       | DEV-2   |\n+      | OrganizationIdentification | Liander |\n+\n+  Scenario: Sort DeviceLogItem\n+    When receiving a filter message log request\n+      | SortDir  | DESC                 |\n+      | SortedBy | deviceIdentification |\n+    Then the messages response contains 15 correct messages with order\n+      | DEV-2  |\n+      | DEV-11 |\n+      | DEV-1  |\n+\n+  Scenario Outline: Filter DeviceLogItem only on device identification within two dates\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1       |\n+      | SetPointStartTime    | <StartTime> |\n+      | SetPointEndTime      | <EndTime>   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8c1256b3601adea7f2bc2a72c84fe66e0e56bb"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5a0a947107f7a9394aac50104377364440340b", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/7a5a0a947107f7a9394aac50104377364440340b", "committedDate": "2020-07-22T14:18:59Z", "message": "FLEX-5402 ~ Adds key DecodedMessage for Cucumber"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce90bd7d06bdbd59d1567be8c050be0e2eb4bfe4", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ce90bd7d06bdbd59d1567be8c050be0e2eb4bfe4", "committedDate": "2020-07-23T07:13:55Z", "message": "FLEX-5402 ~ Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6601fb31e6e1b85d0150931b5c25138d276eecb", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a6601fb31e6e1b85d0150931b5c25138d276eecb", "committedDate": "2020-07-23T09:51:38Z", "message": "Merge branch 'development' into feature/FLEX-5402-sorting-filtering-messages-page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83f6b8d1d6ed1dabd9e989e43bbb45c3a7b93f54", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/83f6b8d1d6ed1dabd9e989e43bbb45c3a7b93f54", "committedDate": "2020-07-23T15:17:44Z", "message": "FLEX-5402 ~ Corrects NullPointerException problem\n\nPrevious changes caused a NullPointerException, when the description or descriptionStartsWith field was empty while searching events."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/0c480c007fb5165cd1ede2bebd06ec10a15aa3fd", "committedDate": "2020-07-23T20:14:34Z", "message": "FLEX-5402 ~ Removes uppercase for searching events"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODYxMDcx", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#pullrequestreview-454861071", "createdAt": "2020-07-24T12:53:09Z", "commit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjo1MzoxMFrOG2uNQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzozNjo1NlrOG2vn1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzMzM0Nw==", "bodyText": "Why is a 'date filter' mentioned here? Seems that it has nothing to do with the scenario. Furthermore, for checking the number of messages it doesn't matter if filters were set, so 'no filter' can be removed as well", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460033347", "createdAt": "2020-07-24T12:53:10Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/resources/features/common/osgp-adapter-ws-admin/DeviceManagement/FilterDeviceLogItem.feature", "diffHunk": "@@ -0,0 +1,96 @@\n+@Common @Platform @AdminDeviceManagement\n+Feature: Filter device messages\n+  As an operator\n+  I want to be filter and sort the device messages \n+  In order to analyse problems and check messages\n+\n+  Background: \n+    Given I have 6 device log items\n+      | DeviceIdentification | DEV-1                |\n+      | Organization         | Liander              |\n+    And I have 5 device log items\n+      | DeviceIdentification | DEV-2                |\n+      | Organization         | Liander              |\n+    And I have 4 device log items\n+      | DeviceIdentification | DEV-11               |\n+      | Organization         | TEST                 |\n+\n+  Scenario: No filters set so getting all the messages\n+    When receiving a message log request without a filter\n+    Then the messages response contains 15 messages with date filter or no filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzNTY0Mg==", "bodyText": "Normally we use the convention to name the method like the step. That would be receivingAMessageLogRequestWithoutAFilter here. Not clear why another convention was used. Goes for all methods in this class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460035642", "createdAt": "2020-07-24T12:57:42Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/admin/devicemanagement/FilterMessageLogsSteps.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+*/\n+package org.opensmartgridplatform.cucumber.platform.common.glue.steps.ws.admin.devicemanagement;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getEnum;\n+import static org.opensmartgridplatform.cucumber.core.ReadSettingsHelper.getString;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsRequest;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.FindMessageLogsResponse;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLog;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.MessageLogFilter;\n+import org.opensmartgridplatform.adapter.ws.schema.admin.devicemanagement.SortDirectionEnum;\n+import org.opensmartgridplatform.cucumber.core.ScenarioContext;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonDefaults;\n+import org.opensmartgridplatform.cucumber.platform.common.PlatformCommonKeys;\n+import org.opensmartgridplatform.cucumber.platform.common.support.ws.admin.AdminDeviceManagementClient;\n+import org.opensmartgridplatform.cucumber.platform.inputparsers.XmlGregorianCalendarInputParser;\n+import org.opensmartgridplatform.shared.exceptionhandling.WebServiceSecurityException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+\n+public class FilterMessageLogsSteps {\n+\n+    @Autowired\n+    private AdminDeviceManagementClient client;\n+\n+    @When(\"receiving a message log request without a filter\")\n+    public void getMessageLogNoFilter() throws WebServiceSecurityException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAzODUxMA==", "bodyText": "Strange to use this annotation in a pull request. The test isn't run until after merging. I would suggest removing it. Maybe we can add it again later.\nGoes for all the usage of @NightlyBuildOnly", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460038510", "createdAt": "2020-07-24T13:03:32Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/resources/features/common/osgp-adapter-ws-admin/DeviceManagement/FilterDeviceLogItem.feature", "diffHunk": "@@ -0,0 +1,96 @@\n+@Common @Platform @AdminDeviceManagement\n+Feature: Filter device messages\n+  As an operator\n+  I want to be filter and sort the device messages \n+  In order to analyse problems and check messages\n+\n+  Background: \n+    Given I have 6 device log items\n+      | DeviceIdentification | DEV-1                |\n+      | Organization         | Liander              |\n+    And I have 5 device log items\n+      | DeviceIdentification | DEV-2                |\n+      | Organization         | Liander              |\n+    And I have 4 device log items\n+      | DeviceIdentification | DEV-11               |\n+      | Organization         | TEST                 |\n+\n+  Scenario: No filters set so getting all the messages\n+    When receiving a message log request without a filter\n+    Then the messages response contains 15 messages with date filter or no filter\n+\n+  Scenario: Use wildcard filter for Device Identification\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1* |\n+    Then the messages response contains 10 messages for devices\n+      | DEV-1  |\n+      | DEV-11 |\n+\n+  @NightlyBuildOnly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MDI2OA==", "bodyText": "extend the step with 'for' to distinguish this step from the step where I requested to remove the filters", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460040268", "createdAt": "2020-07-24T13:07:03Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/resources/features/common/osgp-adapter-ws-admin/DeviceManagement/FilterDeviceLogItem.feature", "diffHunk": "@@ -0,0 +1,96 @@\n+@Common @Platform @AdminDeviceManagement\n+Feature: Filter device messages\n+  As an operator\n+  I want to be filter and sort the device messages \n+  In order to analyse problems and check messages\n+\n+  Background: \n+    Given I have 6 device log items\n+      | DeviceIdentification | DEV-1                |\n+      | Organization         | Liander              |\n+    And I have 5 device log items\n+      | DeviceIdentification | DEV-2                |\n+      | Organization         | Liander              |\n+    And I have 4 device log items\n+      | DeviceIdentification | DEV-11               |\n+      | Organization         | TEST                 |\n+\n+  Scenario: No filters set so getting all the messages\n+    When receiving a message log request without a filter\n+    Then the messages response contains 15 messages with date filter or no filter\n+\n+  Scenario: Use wildcard filter for Device Identification\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1* |\n+    Then the messages response contains 10 messages for devices\n+      | DEV-1  |\n+      | DEV-11 |\n+\n+  @NightlyBuildOnly\n+  Scenario: Use wildcard filter for Organisation Identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Li?nder |\n+    Then the messages response contains 11 messages for devices\n+      | DEV-1 |\n+      | DEV-2 |\n+\n+  @NightlyBuildOnly\n+  Scenario: Filter messages only on Organisation Identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Liander |\n+    Then the messages response contains 11 messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjkwNw==", "bodyText": "This will fail after 2025-01-01, I would suggest to use a different date like in the scenario above.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460042907", "createdAt": "2020-07-24T13:12:17Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/resources/features/common/osgp-adapter-ws-admin/DeviceManagement/FilterDeviceLogItem.feature", "diffHunk": "@@ -0,0 +1,96 @@\n+@Common @Platform @AdminDeviceManagement\n+Feature: Filter device messages\n+  As an operator\n+  I want to be filter and sort the device messages \n+  In order to analyse problems and check messages\n+\n+  Background: \n+    Given I have 6 device log items\n+      | DeviceIdentification | DEV-1                |\n+      | Organization         | Liander              |\n+    And I have 5 device log items\n+      | DeviceIdentification | DEV-2                |\n+      | Organization         | Liander              |\n+    And I have 4 device log items\n+      | DeviceIdentification | DEV-11               |\n+      | Organization         | TEST                 |\n+\n+  Scenario: No filters set so getting all the messages\n+    When receiving a message log request without a filter\n+    Then the messages response contains 15 messages with date filter or no filter\n+\n+  Scenario: Use wildcard filter for Device Identification\n+    When receiving a filter message log request\n+      | DeviceIdentification | DEV-1* |\n+    Then the messages response contains 10 messages for devices\n+      | DEV-1  |\n+      | DEV-11 |\n+\n+  @NightlyBuildOnly\n+  Scenario: Use wildcard filter for Organisation Identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Li?nder |\n+    Then the messages response contains 11 messages for devices\n+      | DEV-1 |\n+      | DEV-2 |\n+\n+  @NightlyBuildOnly\n+  Scenario: Filter messages only on Organisation Identification\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Liander |\n+    Then the messages response contains 11 messages\n+      | OrganizationIdentification | Liander |\n+\n+  Scenario: Filter messages on Organisation Identification and Device Identification\n+    When receiving a filter message log request\n+      | DeviceIdentification       | DEV-2   |\n+      | OrganizationIdentification | Liander |\n+    Then the messages response contains 5 messages\n+      | DeviceIdentification       | DEV-2   |\n+      | OrganizationIdentification | Liander |\n+\n+  Scenario: Sort messages by Device Identification\n+    When receiving a filter message log request\n+      | SortDir  | DESC                 |\n+      | SortedBy | deviceIdentification |\n+    Then the messages response contains 15 messages ordered descending by device identification\n+\n+  Scenario Outline: Filter messages on Organisation Identification and Device Identification and within two dates\n+    When receiving a filter message log request\n+      | OrganizationIdentification | Liander     |\n+      | DeviceIdentification       | DEV-2       |\n+      | StartTime                  | <StartTime> |\n+      | EndTime                    | <EndTime>   |\n+    Then the messages response contains <Amount> messages\n+      | OrganizationIdentification | Liander |\n+      | DeviceIdentification       | DEV-2   |\n+\n+    Examples: \n+      | StartTime            | EndTime              | Amount |\n+      | 2020-01-01T00:00:00Z | 2020-05-01T00:00:00Z |      0 |\n+      | 2020-01-01T00:00:00Z | 2040-01-01T00:00:00Z |      5 |\n+\n+  @NightlyBuildOnly\n+  Scenario Outline: Filter messages within two dates\n+    When receiving a filter message log request\n+      | StartTime | <StartTime> |\n+      | EndTime   | <EndTime>   |\n+    Then the messages response contains <Amount> messages with date filter or no filter\n+\n+    Examples: \n+      | StartTime            | EndTime              | Amount |\n+      | 2020-01-01T00:00:00Z | 2020-05-01T00:00:00Z |      0 |\n+      | 2020-01-01T00:00:00Z | 2025-01-01T00:00:00Z |     15 |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0NTY3OA==", "bodyText": "Why do we need a native query?\nI don't think a native query should be in a steps class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460045678", "createdAt": "2020-07-24T13:17:25Z", "author": {"login": "robindenadel"}, "path": "integration-tests/cucumber-tests-platform/src/test/java/org/opensmartgridplatform/cucumber/platform/glue/steps/database/logging/DeviceLogItemSteps.java", "diffHunk": "@@ -44,11 +55,39 @@ public void iHaveADeviceLogItem(final Map<String, String> settings) {\n         final boolean valid = true;\n \n         final DeviceLogItem deviceLogItem = new DeviceLogItem.Builder().withDeviceIdentification(deviceIdentification)\n-                .withDeviceUid(deviceUid).withDecodedMessage(decodedMessage).withEncodedMessage(encodedMessage)\n-                .withIncoming(incoming).withOrganisationIdentification(organisationIdentification)\n-                .withPayloadMessageSerializedSize(payloadMessageSerializedSize).withValid(valid).build();\n+                .withDeviceUid(deviceUid)\n+                .withDecodedMessage(decodedMessage)\n+                .withEncodedMessage(encodedMessage)\n+                .withIncoming(incoming)\n+                .withOrganisationIdentification(organisationIdentification)\n+                .withPayloadMessageSerializedSize(payloadMessageSerializedSize)\n+                .withValid(valid)\n+                .build();\n+\n+        final DeviceLogItem savedDeviceLogItem = this.deviceLogItemRepository.save(deviceLogItem);\n+\n+        final String modificationTimeString = getString(settings, PlatformKeys.KEY_MODIFICATION_TIME);\n+        if (modificationTimeString != null) {\n+            final ZonedDateTime modificationTime = ZonedDateTime.parse(modificationTimeString);\n+            this.updateModificationTime(savedDeviceLogItem.getId(), modificationTime);\n+        }\n+    }\n+\n+    private void updateModificationTime(final Long deviceLogItemId, final ZonedDateTime modificationTime) {\n+        if (modificationTime != null) {\n+            final EntityManager em = this.txMgrLogging.getEntityManagerFactory().createEntityManager();\n+            final EntityTransaction transaction = em.getTransaction();\n \n-        this.deviceLogItemRepository.save(deviceLogItem);\n+            transaction.begin();\n+            final String sql = \"UPDATE device_log_item SET modification_time = :modification_time WHERE id = :id\";\n+            final Query updateQuery = em.createNativeQuery(sql);\n+            updateQuery.setParameter(\"id\", deviceLogItemId);\n+            updateQuery.setParameter(\"modification_time\", modificationTime);\n+            updateQuery.executeUpdate();\n+            transaction.commit();\n+\n+            em.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NTY0Mg==", "bodyText": "consider a package org.opensmartgridplatform.adapter.ws.admin.application.specifications", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460055642", "createdAt": "2020-07-24T13:35:27Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/application/services/DeviceLogItemSpecifications.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.admin.application.services;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA1NjUzNQ==", "bodyText": "org.opensmartgridplatform.domain.core.specifications contains interfaces for specifications. Any reason why this class does not implement such an interface?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#discussion_r460056535", "createdAt": "2020-07-24T13:36:56Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-adapter-ws-admin/src/main/java/org/opensmartgridplatform/adapter/ws/admin/application/services/DeviceLogItemSpecifications.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.ws.admin.application.services;\n+\n+import static org.opensmartgridplatform.shared.utils.SearchUtil.replaceWildcards;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Date;\n+\n+import javax.persistence.criteria.CriteriaBuilder;\n+import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.Root;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.opensmartgridplatform.logging.domain.entities.DeviceLogItem;\n+import org.springframework.data.jpa.domain.Specification;\n+\n+public final class DeviceLogItemSpecifications {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c480c007fb5165cd1ede2bebd06ec10a15aa3fd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "547d6305255204d45418eca896dd382a39266f62", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/547d6305255204d45418eca896dd382a39266f62", "committedDate": "2020-07-25T08:40:34Z", "message": "FLEX-5402 ~ Removes NightlyBuildOnly tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7b4ee9e27a9ca4f1e7b8431ecf2bfffaa60bd7", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/db7b4ee9e27a9ca4f1e7b8431ecf2bfffaa60bd7", "committedDate": "2020-07-25T08:52:12Z", "message": "FLEX-5402 ~ Improves step name\n\nRenames \"the messages response contains {int} messages with date filter or no date filter\" to \"the messages response contains {int} messages\"."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d945246d8b19fadc90579a4391a91efd3ffaf1", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/58d945246d8b19fadc90579a4391a91efd3ffaf1", "committedDate": "2020-07-25T08:57:03Z", "message": "FLEX-5402 ~ Make test valid until 2040"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d1748b96412692737d62b1a8e90013ad1d5032", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/34d1748b96412692737d62b1a8e90013ad1d5032", "committedDate": "2020-07-25T09:01:49Z", "message": "FLEX-5402 ~ Renames step methods\n\nRenames step methods in FilterMessageLogSteps to conform to convention."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb4ed808fb0d644e9b4fe95cf4317fa9a3096123", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/bb4ed808fb0d644e9b4fe95cf4317fa9a3096123", "committedDate": "2020-07-25T09:20:27Z", "message": "FLEX-5402 ~ Use interface DeviceLogItemSpecifications\n\nUses interface for DeviceLogItemSpecifications instead of directly calling static methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306760ffbbcd931e1fac55b742c95d132786c54c", "author": {"user": {"login": "rlemmers", "name": "Ruud Lemmers"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/306760ffbbcd931e1fac55b742c95d132786c54c", "committedDate": "2020-07-27T15:41:03Z", "message": "FLEX-5402 ~ Moves update to repository"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzI2MzQ5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#pullrequestreview-456326349", "createdAt": "2020-07-28T06:06:38Z", "commit": {"oid": "306760ffbbcd931e1fac55b742c95d132786c54c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MzMyMTIz", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/368#pullrequestreview-456332123", "createdAt": "2020-07-28T06:20:16Z", "commit": {"oid": "306760ffbbcd931e1fac55b742c95d132786c54c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3787, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}