{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODY2ODk0", "number": 374, "title": "OC-615 ~ Reduces cyclomatic complexity of several methods.", "bodyText": "Need pull request to see if Sonar Qube is responding as expected", "createdAt": "2020-07-14T13:03:07Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374", "merged": true, "mergeCommit": {"oid": "0d336142fcd0294fb39428b89d3ddf22d7698100"}, "closed": true, "closedAt": "2020-07-27T16:00:01Z", "author": {"login": "vsombroek"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc01mbOgH2gAyNDQ4ODY2ODk0OjI0YTM2ZGUxZGUwZjliNDAyYmMyMWJlYzgzNjc4NWUxM2RlMWMyMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5C0a9AH2gAyNDQ4ODY2ODk0Ojc2NjcxM2Q5YmY1MWE0YzYyMjM4ZjQxZTA1NTBiYjdmMThiMmJkNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "24a36de1de0f9b402bc21bec836785e13de1c214", "author": {"user": {"login": "vsombroek", "name": "Vincent Sombroek"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/24a36de1de0f9b402bc21bec836785e13de1c214", "committedDate": "2020-07-14T12:57:05Z", "message": "OC-615/Simplified-LongTermIntervalAndLongTermIntervalTypeValidator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b33ec6c6a379c972814c33578b613d646340e034", "author": {"user": {"login": "vsombroek", "name": "Vincent Sombroek"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b33ec6c6a379c972814c33578b613d646340e034", "committedDate": "2020-07-14T15:13:53Z", "message": "OC-615/Simplified-LongTermIntervalAndLongTermIntervalTypeValidator-fixed-unreachable-statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f12c4a65494ed638fa10af6e966d994112c86d", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a2f12c4a65494ed638fa10af6e966d994112c86d", "committedDate": "2020-07-16T14:25:16Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nLongTermIntervalAndLongTermIntervalTypeValidator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab9a4f48269aabf12b0be666263710a433d6288", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/6ab9a4f48269aabf12b0be666263710a433d6288", "committedDate": "2020-07-17T13:33:19Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nOslpUtils#isOslpResponse(OslpEnvelope)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "628b32ee205b2e16b47c1473958ade5b09933485", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/628b32ee205b2e16b47c1473958ade5b09933485", "committedDate": "2020-07-17T14:42:16Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nConfigurationToOslpSetConfigurationRequestConverter#convert(ConfigurationDto,\nOslp.SetConfigurationRequest, MappingContext)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec609bfdb7a5961251d96cb402ee77cd5749196", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1ec609bfdb7a5961251d96cb402ee77cd5749196", "committedDate": "2020-07-17T15:36:23Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nOslpGetConfigurationResponseToConfigurationConverter#convert(Oslp.GetConfigurationResponse,\nConfigurationDto, MappingContext)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec4b75c4c475fb7eb236c3d6b7147501ba00c2a", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/9ec4b75c4c475fb7eb236c3d6b7147501ba00c2a", "committedDate": "2020-07-21T20:50:14Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nDaylightSavingTimeTransition#isValid(String)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9405d5367d5fd43cc626e2d9f9629042864beab8", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/9405d5367d5fd43cc626e2d9f9629042864beab8", "committedDate": "2020-07-22T13:29:42Z", "message": "OC-615 ~ Resolves SonarQube issue 'Replace this if-then-else statement\nby a single return statement'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8bf5e1efeec97d4c19e0f9e6cd64fa689cd787a", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b8bf5e1efeec97d4c19e0f9e6cd64fa689cd787a", "committedDate": "2020-07-22T22:02:02Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nIec61850SetConfigurationCommand#setConfigurationOnDevice(Iec61850Client,\nDeviceConnection, ConfigurationDto)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03dbd7f527810e2d57a78f12de3bc65d181ead3", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f03dbd7f527810e2d57a78f12de3bc65d181ead3", "committedDate": "2020-07-22T23:59:47Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nIEC61850SetScheduleCommand#writeScheduleEntryForRelay(DeviceMessageLog,\n List<ScheduleEntry>, LogicalNode, NodeContainer schedule, int)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad340ecd3e4e69f3e24a224057ad1e06b1248c52", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ad340ecd3e4e69f3e24a224057ad1e06b1248c52", "committedDate": "2020-07-23T00:43:59Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nIec61850SetScheduleCommand#createScheduleEntries(List<ScheduleEntryDto>\n, Ssld, RelayTypeDto, SsldDataService)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11d2c34f6548c68374af1cd269e880f844f3f918", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/11d2c34f6548c68374af1cd269e880f844f3f918", "committedDate": "2020-07-23T01:06:12Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nOslpDeviceService#convertToOslpSchedules(List<ScheduleEntryDto>)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d39f33d25a9a9bb9fac19666048e8c219c8504a", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3d39f33d25a9a9bb9fac19666048e8c219c8504a", "committedDate": "2020-07-23T08:29:35Z", "message": "OC-615 ~ Refactors OslpChannelHandler#handleRequest(OslpEnvelope, int)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2157d1322f9f8066a85c22299c9e1c758c4ca1dd", "committedDate": "2020-07-23T14:50:20Z", "message": "OC-615 ~ Reduces number of arguments to resolve SonarQube issue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MjMxNjI3", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#pullrequestreview-454231627", "createdAt": "2020-07-23T15:07:35Z", "commit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowNzozNVrOG2O9vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowNzozNVrOG2O9vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUyMTQ2OA==", "bodyText": "Reduce this anonymous class number of lines from 164 to at most 20, or make it a named class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459521468", "createdAt": "2020-07-23T15:07:35Z", "author": {"login": "jenkins-ip-10-4-24-184"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850SetScheduleCommand.java", "diffHunk": "@@ -77,7 +82,7 @@ public void setScheduleOnDevice(final Iec61850Client iec61850Client, final Devic\n         try {\n             // Creating a list of all Schedule entries, grouped by relay index.\n             final Map<Integer, List<ScheduleEntry>> relaySchedulesEntries = this.createScheduleEntries(scheduleList,\n-                    ssld, relayType, ssldDataService);\n+                    ssld, relayType);\n \n             final Function<Void> function = new Function<Void>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjYwNDYw", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#pullrequestreview-454660460", "createdAt": "2020-07-24T06:36:04Z", "commit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjozNjowNFrOG2kjBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMDo0NTowMlrOG2q9Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3NTA3Ng==", "bodyText": "I think this should be a private method.\nFurthermore, the parameter could be an int, nothing is done with the Configuration object in this method besides using the getLongTermHistoryInterval.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459875076", "createdAt": "2020-07-24T06:36:04Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-domain-core/src/main/java/org/opensmartgridplatform/domain/core/validation/LongTermIntervalAndLongTermIntervalTypeValidator.java", "diffHunk": "@@ -27,33 +27,34 @@ public boolean isValid(final Configuration value, final ConstraintValidatorConte\n             return true;\n         }\n         // If LongTermHistoryInterval or LongTermHistoryIntervalType is not\n-        // present,\n-        // the other must be not present as well.\n+        // present, the other must be not present as well.\n         if (value.getLongTermHistoryInterval() == null && value.getLongTermHistoryIntervalType() == null) {\n             return true;\n         }\n-        // If LongTermHistoryInterval or LongTermHistoryIntervalType is present,\n-        // the other must be as well.\n-        if (value.getLongTermHistoryInterval() != null && value.getLongTermHistoryIntervalType() != null) {\n-            // And, the value of long term history interval must be among the\n-            // permitted values, defined by the ranges:\n-            // - from 1 to 30 for long term history interval type DAYS.\n-            // - from 1 to 12 for long term history interval type MONTHS.\n-            switch (value.getLongTermHistoryIntervalType()) {\n-            case DAYS:\n-                if (value.getLongTermHistoryInterval() >= 1 && value.getLongTermHistoryInterval() <= 30) {\n-                    return true;\n-                }\n-                break;\n-            case MONTHS:\n-                if (value.getLongTermHistoryInterval() >= 1 && value.getLongTermHistoryInterval() <= 12) {\n-                    return true;\n-                }\n-                break;\n-            default:\n-                throw new ValidationException(\"unknown LongTermHistoryIntervalType\");\n+        // And, the value of long term history interval must be among the\n+        // permitted values, defined by the ranges:\n+        // - from 1 to 30 for long term history interval type DAYS.\n+        // - from 1 to 12 for long term history interval type MONTHS.\n+        return this.checkRanges(value);\n+    }\n+\n+    protected boolean checkRanges(final Configuration value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MDA3Mw==", "bodyText": "by not checking for the value of validRange here, the following test fails, while it should pass:\n@test\npublic void testDayOfWeekOfMonthTransitionValidationExceedsMaxMonth() {\nassertThat(DaylightSavingTimeTransition.DstTransitionFormat.DAY_OF_WEEK_OF_MONTH.isValid(\"M13.5.0\")).isFalse();\n}", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459890073", "createdAt": "2020-07-24T07:21:05Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/domain/valueobjects/DaylightSavingTimeTransition.java", "diffHunk": "@@ -207,16 +207,24 @@ public boolean isValid(final String transition) {\n                 } catch (final NumberFormatException nfe) {\n                     return false;\n                 }\n-                if (m < 1 || m > 12 || w < 1 || w > 5 || d < 0 || d > 6) {\n-                    return false;\n-                }\n+                final boolean validRange = this.checkRange(m, w, d);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwMDc0OA==", "bodyText": "I think the readability would be improved if the order of private methods is the same as the calling order setRelayConfiguration, setOsgpIpAddressAndPort, setAstronomicalOffsets, setClockConfiguration and setDhcpConfiguration", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459900748", "createdAt": "2020-07-24T07:47:23Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850SetConfigurationCommand.java", "diffHunk": "@@ -51,114 +53,85 @@ public void setConfigurationOnDevice(final Iec61850Client iec61850Client, final\n             @Override\n             public Void apply(final DeviceMessageLog deviceMessageLog) throws ProtocolAdapterException {\n \n-                if (configuration.getRelayConfiguration() != null\n-                        && configuration.getRelayConfiguration().getRelayMap() != null) {\n+                this.setRelayConfiguration(iec61850Client, deviceConnection, configuration, deviceMessageLog);\n \n-                    final List<RelayMapDto> relayMaps = configuration.getRelayConfiguration().getRelayMap();\n-                    for (final RelayMapDto relayMap : relayMaps) {\n-                        final Integer internalIndex = relayMap.getAddress();\n-                        final RelayTypeDto relayType = relayMap.getRelayType();\n+                this.setOsgpIpAddressAndPort(iec61850Client, deviceConnection, configuration, deviceMessageLog);\n \n-                        final LogicalNode logicalNode = LogicalNode.getSwitchComponentByIndex(internalIndex);\n-                        final NodeContainer switchType = deviceConnection.getFcModelNode(LogicalDevice.LIGHTING,\n-                                logicalNode, DataAttribute.SWITCH_TYPE, Fc.CO);\n-                        iec61850Client.readNodeDataValues(deviceConnection.getConnection().getClientAssociation(),\n-                                switchType.getFcmodelNode());\n+                this.setAstronomicalOffsets(iec61850Client, deviceConnection, configuration, deviceMessageLog);\n \n-                        final NodeContainer operation = switchType.getChild(SubDataAttribute.OPERATION);\n-                        iec61850Client.readNodeDataValues(deviceConnection.getConnection().getClientAssociation(),\n-                                operation.getFcmodelNode());\n-                        final BdaInt8 ctlVal = operation.getByte(SubDataAttribute.CONTROL_VALUE);\n+                this.setClockConfiguration(iec61850Client, deviceConnection, configuration, deviceMessageLog);\n \n-                        final byte switchTypeValue = (byte) (RelayTypeDto.LIGHT.equals(relayType) ? SWITCH_TYPE_LIGHT\n-                                : SWITCH_TYPE_TARIFF);\n-                        LOGGER.info(\"Updating Switch for internal index {} to {} ({})\", internalIndex, switchTypeValue,\n-                                relayType);\n+                this.setDhcpConfiguration(iec61850Client, deviceConnection, configuration, deviceMessageLog);\n \n-                        ctlVal.setValue(switchTypeValue);\n-                        operation.write();\n+                Iec61850SetConfigurationCommand.this.loggingService.logMessage(deviceMessageLog,\n+                        deviceConnection.getDeviceIdentification(), deviceConnection.getOrganisationIdentification(),\n+                        false);\n \n-                        deviceMessageLog.addVariable(logicalNode, DataAttribute.SWITCH_TYPE, Fc.CO,\n-                                SubDataAttribute.OPERATION, SubDataAttribute.CONTROL_VALUE,\n-                                Byte.toString(switchTypeValue));\n-                    }\n-                }\n+                return null;\n+            }\n \n-                // Checking to see if all register values are null, so that we\n+            private void setDhcpConfiguration(final Iec61850Client iec61850Client,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwNTM1Mg==", "bodyText": "nice way to get rid of the ssldDataService parameter in lots of methods!", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459905352", "createdAt": "2020-07-24T07:58:12Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850SetScheduleCommand.java", "diffHunk": "@@ -61,13 +62,17 @@\n \n     private final DeviceMessageLoggingService loggingService;\n \n-    public Iec61850SetScheduleCommand(final DeviceMessageLoggingService loggingService) {\n+    private final SsldDataService ssldDataService;\n+\n+    public Iec61850SetScheduleCommand(final DeviceMessageLoggingService loggingService,\n+            final SsldDataService ssldDataService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwNjY4NQ==", "bodyText": "It would improve readability if the order of private methods would be the same as the calling order.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459906685", "createdAt": "2020-07-24T08:00:58Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-iec61850/osgp-protocol-adapter-iec61850/src/main/java/org/opensmartgridplatform/adapter/protocol/iec61850/infra/networking/services/commands/Iec61850SetScheduleCommand.java", "diffHunk": "@@ -161,20 +166,61 @@ private void writeScheduleEntryForRelay(final DeviceMessageLog deviceMessageLog,\n                     final String scheduleEntryName = SubDataAttribute.SCHEDULE_ENTRY.getDescription() + (i + 1);\n                     final NodeContainer scheduleNode = schedule.getChild(scheduleEntryName);\n \n-                    final BdaBoolean enabled = scheduleNode.getBoolean(SubDataAttribute.SCHEDULE_ENABLE);\n-                    if (enabled.getValue() != scheduleEntry.isEnabled()) {\n-                        scheduleNode.writeBoolean(SubDataAttribute.SCHEDULE_ENABLE, scheduleEntry.isEnabled());\n+                    this.setEnabled(deviceMessageLog, logicalNode, scheduleEntry, scheduleEntryName, scheduleNode);\n+\n+                    this.setDay(deviceMessageLog, logicalNode, scheduleEntry, scheduleEntryName, scheduleNode);\n+\n+                    this.setSwitchTimes(deviceMessageLog, logicalNode, scheduleEntry, scheduleEntryName, scheduleNode);\n+\n+                    this.setMinimumTimeOn(deviceMessageLog, logicalNode, scheduleEntry, scheduleEntryName,\n+                            scheduleNode);\n+\n+                    this.setTriggerWindow(deviceMessageLog, logicalNode, scheduleEntry, scheduleEntryName,\n+                            scheduleNode);\n+                }\n+\n+                private void setTriggerWindow(final DeviceMessageLog deviceMessageLog, final LogicalNode logicalNode,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzA4OA==", "bodyText": "It would improve readability if the order of private methods would be the same as the calling order.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459913088", "createdAt": "2020-07-24T08:15:26Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/mapping/OslpGetConfigurationResponseToConfigurationConverter.java", "diffHunk": "@@ -114,7 +88,82 @@ public ConfigurationDto convert(final Oslp.GetConfigurationResponse source,\n         configuration.setWinterTimeDetails(winterTimeDetails);\n \n         return configuration;\n-        // @formatter:on\n+    }\n+\n+    private LongTermIntervalTypeDto getLongTermHistoryIntervalType(final Oslp.GetConfigurationResponse source) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkxMzM3Nw==", "bodyText": "It would improve readability if the order of private methods would be the same as the calling order.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459913377", "createdAt": "2020-07-24T08:15:54Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-oslp/osgp-adapter-protocol-oslp-elster/src/main/java/org/opensmartgridplatform/adapter/protocol/oslp/elster/application/mapping/ConfigurationToOslpSetConfigurationRequestConverter.java", "diffHunk": "@@ -37,55 +37,111 @@ public SetConfigurationRequest convert(final ConfigurationDto source,\n \n         final Oslp.SetConfigurationRequest.Builder setConfigurationRequest = Oslp.SetConfigurationRequest.newBuilder();\n \n-        if (source.getLightType() != null) {\n-            setConfigurationRequest.setLightType(this.mapperFacade.map(source.getLightType(), Oslp.LightType.class));\n-        }\n-        if (source.getDaliConfiguration() != null) {\n-            setConfigurationRequest.setDaliConfiguration(\n-                    this.mapperFacade.map(source.getDaliConfiguration(), Oslp.DaliConfiguration.class));\n-        }\n-        if (source.getRelayConfiguration() != null) {\n-            setConfigurationRequest.setRelayConfiguration(\n-                    this.mapperFacade.map(source.getRelayConfiguration(), Oslp.RelayConfiguration.class));\n-        }\n-        if (source.getShortTermHistoryIntervalMinutes() != null) {\n-            setConfigurationRequest.setShortTermHistoryIntervalMinutes(\n-                    this.mapperFacade.map(source.getShortTermHistoryIntervalMinutes(), Integer.class));\n-        }\n-        if (source.getLongTermHistoryInterval() != null) {\n-            setConfigurationRequest.setLongTermHistoryInterval(\n-                    this.mapperFacade.map(source.getLongTermHistoryInterval(), Integer.class));\n+        this.setLightType(source, setConfigurationRequest);\n+        this.setDaliConfiguration(source, setConfigurationRequest);\n+        this.setRelayConfiguration(source, setConfigurationRequest);\n+        this.setShortTermHistoryIntervalMinutes(source, setConfigurationRequest);\n+        this.setLongTermHistoryInterval(source, setConfigurationRequest);\n+        this.setLongTermHistoryIntervalType(source, setConfigurationRequest);\n+        this.setPreferredLinkType(source, setConfigurationRequest);\n+        this.setMeterType(source, setConfigurationRequest);\n+        this.setAstroGateSunRiseOffset(source, setConfigurationRequest);\n+        this.setAstroGateSunSetOffset(source, setConfigurationRequest);\n+        this.setIsAutomaticSummerTimingEnabled(source, setConfigurationRequest);\n+        this.setCommunicationNumberOfRetries(source, setConfigurationRequest);\n+        this.setCommunicationPauseTimeBetweenConnectionTrials(source, setConfigurationRequest);\n+        this.setCommunicationTimeout(source, setConfigurationRequest);\n+        this.setFixedIpConfiguration(source, setConfigurationRequest);\n+        this.setIsDhcpEnabled(source, setConfigurationRequest);\n+        this.setOsgpPortNumber(source, setConfigurationRequest);\n+        this.setOsgpIpAddress(source, setConfigurationRequest);\n+        this.setRelayRefreshing(source, setConfigurationRequest);\n+        this.setSummerTimeDetails(source, setConfigurationRequest);\n+        this.setIsTestButtonEnabled(source, setConfigurationRequest);\n+        this.setTimeSyncFrequency(source, setConfigurationRequest);\n+        this.setWinterTimeDetails(source, setConfigurationRequest);\n+        this.setSwitchingDelays(source, setConfigurationRequest);\n+        this.setRelayLinking(source, setConfigurationRequest);\n+\n+        return setConfigurationRequest.build();\n+    }\n+\n+    private void setRelayLinking(final ConfigurationDto source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk3ODU2OA==", "bodyText": "as far as I can see the parameter response is always null here.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459978568", "createdAt": "2020-07-24T10:41:10Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/OslpChannelHandler.java", "diffHunk": "@@ -494,6 +495,21 @@ private void sleep(final Long sleepTime) {\n             }\n         }\n \n+        response = this.handleRequest(request, response, device);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk3ODcyMw==", "bodyText": "remove the parameter response", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459978723", "createdAt": "2020-07-24T10:41:32Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/OslpChannelHandler.java", "diffHunk": "@@ -494,6 +495,21 @@ private void sleep(final Long sleepTime) {\n             }\n         }\n \n+        response = this.handleRequest(request, response, device);\n+\n+        // Update device\n+        device.setSequenceNumber(expectedSequenceNumber);\n+        this.deviceManagementService.updateDevice(device);\n+\n+        // Write log entry for response\n+        LOGGER.debug(\"Responding: {}\", response);\n+\n+        return response;\n+    }\n+\n+    @SuppressWarnings(\"squid:MethodCyclomaticComplexity\")\n+    private Oslp.Message handleRequest(final Oslp.Message request, Oslp.Message response, final Device device)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4MDExNQ==", "bodyText": "according to https://github.com/SmartSocietyServices/Way-of-Working-Wiki/wiki/Suppression-of-SonarQube-warnings-like-FalsePositives a justification why the specific warning is being suppressed should be given", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#discussion_r459980115", "createdAt": "2020-07-24T10:45:02Z", "author": {"login": "robindenadel"}, "path": "osgp/protocol-adapter-oslp/web-device-simulator/src/main/java/org/opensmartgridplatform/webdevicesimulator/service/OslpChannelHandler.java", "diffHunk": "@@ -494,6 +495,21 @@ private void sleep(final Long sleepTime) {\n             }\n         }\n \n+        response = this.handleRequest(request, response, device);\n+\n+        // Update device\n+        device.setSequenceNumber(expectedSequenceNumber);\n+        this.deviceManagementService.updateDevice(device);\n+\n+        // Write log entry for response\n+        LOGGER.debug(\"Responding: {}\", response);\n+\n+        return response;\n+    }\n+\n+    @SuppressWarnings(\"squid:MethodCyclomaticComplexity\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2157d1322f9f8066a85c22299c9e1c758c4ca1dd"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f77718dd20fdaf88e9f3df8accf7ddd9b0b4f8", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/69f77718dd20fdaf88e9f3df8accf7ddd9b0b4f8", "committedDate": "2020-07-24T15:57:50Z", "message": "OC-615 ~ Processes review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c538e7ab6f7a24ef00660f843837a143ff65a6", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/99c538e7ab6f7a24ef00660f843837a143ff65a6", "committedDate": "2020-07-27T09:47:32Z", "message": "OC-615 ~ Reduces cyclomatic complexity of\nOslpDeviceService#handleOslpResponseGetStatus(DeviceRequest,\nOslpEnvelope, DeviceResponseHandler)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzEyOTY5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/374#pullrequestreview-455712969", "createdAt": "2020-07-27T11:55:58Z", "commit": {"oid": "99c538e7ab6f7a24ef00660f843837a143ff65a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa45fa43c1b762d84f5e27e4d09c580f42f6b953", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/aa45fa43c1b762d84f5e27e4d09c580f42f6b953", "committedDate": "2020-07-27T12:13:15Z", "message": "Disables 'Destroy an AWS System'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70528ecdb45799435d15352083d9ec07e4ed9b0c", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/70528ecdb45799435d15352083d9ec07e4ed9b0c", "committedDate": "2020-07-27T12:19:41Z", "message": "Disables 'cleanWs()'."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "766713d9bf51a4c62238f41e0550bb7f18b2bd76", "author": {"user": {"login": "kevinsmeets", "name": "Kevin Smeets"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/766713d9bf51a4c62238f41e0550bb7f18b2bd76", "committedDate": "2020-07-27T14:36:50Z", "message": "Enables all pipeline steps."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3796, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}