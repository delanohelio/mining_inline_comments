{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTU4MTQy", "number": 326, "title": "FLEX-5084: Filters events on description.", "bodyText": "", "createdAt": "2020-05-15T12:16:37Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326", "merged": true, "mergeCommit": {"oid": "1956b28cc2695a0ef39d4b18ed5bc1046b1a9355"}, "closed": true, "closedAt": "2020-05-25T12:59:39Z", "author": {"login": "robindenadel"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchg_kpgH2gAyNDE4NTU4MTQyOjNkZmI4Y2MyYzM1Mjg2Mzk2NjMwM2Q4MDFhNzQ0NTNlNmI5ZTY5ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckvqj_gFqTQxNzY5NDQwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3dfb8cc2c352863966303d801a74453e6b9e69e1", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3dfb8cc2c352863966303d801a74453e6b9e69e1", "committedDate": "2020-05-15T12:11:59Z", "message": "FLEX-5084: Filters events on description."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/a39e1a0c647413c97113514b290e986ec86d2bcc", "committedDate": "2020-05-18T08:57:33Z", "message": "FLEX-5084: Adds cucumber tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTc2NjEy", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#pullrequestreview-413576612", "createdAt": "2020-05-18T13:08:53Z", "commit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzowODo1M1rOGW2Xvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTo0MDowMVrOGW81zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYxMjY3MQ==", "bodyText": "Why is the index field no longer compared?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#discussion_r426612671", "createdAt": "2020-05-18T13:08:53Z", "author": {"login": "rlemmers"}, "path": "integration-tests/cucumber-tests-platform-common/src/test/java/org/opensmartgridplatform/cucumber/platform/common/glue/steps/ws/core/devicemanagement/RetrieveReceivedEventNotifications.java", "diffHunk": "@@ -113,24 +123,29 @@ public void aRetrieveEventNotificationRequestIsSent(final Map<String, String> se\n \n     @Then(\"^the retrieve event notification response contains$\")\n     public void theRetrieveEventNotificationResponseContains(final Map<String, String> expectedResponse) {\n+        final String deviceIdentification = getString(expectedResponse, PlatformKeys.KEY_DEVICE_IDENTIFICATION,\n+                PlatformDefaults.DEFAULT_DEVICE_IDENTIFICATION);\n         final FindEventsResponse response = (FindEventsResponse) ScenarioContext.current()\n-                .get(getString(expectedResponse, PlatformKeys.KEY_DEVICE_IDENTIFICATION,\n-                        PlatformDefaults.DEFAULT_DEVICE_IDENTIFICATION).concat(\"_\").concat(PlatformKeys.RESPONSE));\n+                .get(deviceIdentification.concat(\"_\").concat(PlatformKeys.RESPONSE));\n \n         final List<org.opensmartgridplatform.adapter.ws.schema.core.devicemanagement.Event> events = response\n                 .getEvents();\n \n-        assertThat(events.isEmpty()).isFalse();\n+        assertThat(events).isNotEmpty();\n+        final org.opensmartgridplatform.adapter.ws.schema.core.devicemanagement.Event expected = this\n+                .expectedEvent(expectedResponse, deviceIdentification);\n \n-        for (final org.opensmartgridplatform.adapter.ws.schema.core.devicemanagement.Event e : events) {\n-            assertThat(e.getTimestamp()).isNotNull();\n-            assertThat(e.getDeviceIdentification()).isEqualTo(getString(expectedResponse,\n-                    PlatformKeys.KEY_DEVICE_IDENTIFICATION, PlatformDefaults.DEFAULT_DEVICE_IDENTIFICATION));\n-            assertThat(e.getEventType().value()).isEqualTo(getString(expectedResponse, PlatformKeys.EVENT_TYPE));\n-            assertThat(e.getDescription()).isEqualTo(getString(expectedResponse, PlatformKeys.KEY_DESCRIPTION));\n-            assertThat(e.getIndex())\n-                    .isEqualTo(getInteger(expectedResponse, PlatformKeys.KEY_INDEX, PlatformDefaults.DEFAULT_INDEX));\n-        }\n+        assertThat(events).usingElementComparatorIgnoringFields(\"timestamp\", \"index\").contains(expected);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwNDc1Mg==", "bodyText": "We now supply both \"description\" en \"descriptionStartsWith\". The code uses an \"or\" operator for those fields. This isn't obvious to the users. To keep it simple and clear, we could offer just the \"descriptionStartsWith\". We can probably live without the exact match.\nAnother option would be to use wildcards, but that would be extending the scope of the story. It would extend the scope, because to be consistent you would have to support wildcards for the deviceIdentification (and possibly the organisationIdentification) as well.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#discussion_r426704752", "createdAt": "2020-05-18T15:20:02Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementService.java", "diffHunk": "@@ -186,7 +186,8 @@ public Organisation findOrganisation(@Identification final String organisationId\n     @Transactional(value = \"transactionManager\")\n     public Page<Event> findEvents(@Identification final String organisationIdentification,\n             final String deviceIdentification, final PageSpecifier pageSpecifier, final DateTime from,\n-            final DateTime until, final List<EventType> eventTypes) throws FunctionalException {\n+            final DateTime until, final List<EventType> eventTypes, final String description,\n+            final String descriptionStartsWith) throws FunctionalException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwODQxMw==", "bodyText": "It would be more consistent to create method \"this.eventSpecifications.hasDescription(...)\".", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#discussion_r426708413", "createdAt": "2020-05-18T15:25:10Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementService.java", "diffHunk": "@@ -221,6 +222,7 @@ public Organisation findOrganisation(@Identification final String organisationId\n             if (eventTypes != null && !eventTypes.isEmpty()) {\n                 specification = specification.and(this.eventSpecifications.hasEventTypes(eventTypes));\n             }\n+            specification = handleDescription(description, descriptionStartsWith, specification);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjgyMg==", "bodyText": "like this (also see the closed source JpaDeviceSpecifications class for similar code), in case the \"or\" remains:\nSpecification descriptionSpecification = this.eventSpecifications(...);\nSpecification descriptionStartsWithSpecification = this.eventSpecifications(...);\nreturn specification.and(descriptionSpecification.or(descriptionStartsWithSpecification));\nAnd in the eventSpecifications methods:\nif (description == null) {\nreturn (eventRoot, query, cb) -> cb.and();\n}\nreturn ((eventRoot, query, cb) -> cb.equal(eventRoot. get(DESCRIPTION), description));\nWhen using the \"cb.and()\" construction, you can also remove the \"throws ArgumentNullOrEmptyException\" clause.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#discussion_r426712822", "createdAt": "2020-05-18T15:31:29Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-ws-core/src/main/java/org/opensmartgridplatform/adapter/ws/core/application/services/DeviceManagementService.java", "diffHunk": "@@ -233,6 +235,25 @@ public Organisation findOrganisation(@Identification final String organisationId\n         return this.eventRepository.findAll(specification, request);\n     }\n \n+    private Specification<Event> handleDescription(final String description, final String descriptionStartsWith,\n+            Specification<Event> specification) throws ArgumentNullOrEmptyException {\n+        if (description == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxODY3MA==", "bodyText": "General remark: have we cleaned the description and descriptionStartsWith values?\nSpecific remark: we do a \"like\" here, make sure there are no wildcards (percentage or underscore) in the descriptionStartsWith parameter.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#discussion_r426718670", "createdAt": "2020-05-18T15:40:01Z", "author": {"login": "rlemmers"}, "path": "osgp/platform/osgp-adapter-ws-shared/src/main/java/org/opensmartgridplatform/adapter/ws/infra/specifications/JpaEventSpecifications.java", "diffHunk": "@@ -98,4 +99,23 @@ private Predicate createPredicateForHasEventTypes(final Root<Event> eventRoot, f\n \n         return eventType.in(eventTypes);\n     }\n+\n+    @Override\n+    public Specification<Event> withDescription(final String description) throws ArgumentNullOrEmptyException {\n+        if (description == null) {\n+            throw new ArgumentNullOrEmptyException(DESCRIPTION);\n+        }\n+\n+        return ((eventRoot, query, cb) -> cb.equal(eventRoot.<String> get(DESCRIPTION), description));\n+    }\n+\n+    @Override\n+    public Specification<Event> startsWithDescription(final String descriptionStartsWith)\n+            throws ArgumentNullOrEmptyException {\n+        if (descriptionStartsWith == null) {\n+            throw new ArgumentNullOrEmptyException(\"descriptionStartsWith\");\n+        }\n+\n+        return ((eventRoot, query, cb) -> cb.like(eventRoot.<String> get(DESCRIPTION), descriptionStartsWith + \"%\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a39e1a0c647413c97113514b290e986ec86d2bcc"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ca5b6924d74416c64781aaa0bd964679231be97", "author": {"user": {"login": "robindenadel", "name": "Robin den Adel"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/2ca5b6924d74416c64781aaa0bd964679231be97", "committedDate": "2020-05-22T08:21:28Z", "message": "FLEX-5084: Addresses review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Njk0NDA3", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/326#pullrequestreview-417694407", "createdAt": "2020-05-25T12:59:23Z", "commit": {"oid": "2ca5b6924d74416c64781aaa0bd964679231be97"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3743, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}