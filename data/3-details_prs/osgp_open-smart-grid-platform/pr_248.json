{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDQzMjU2", "number": 248, "title": "Slim 2326/add generic filtering of pq data", "bodyText": "", "createdAt": "2020-03-25T08:09:53Z", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248", "merged": true, "mergeCommit": {"oid": "c426eaac9e90a08ede7b72d4d4999a40be9a33b1"}, "closed": true, "closedAt": "2020-03-30T14:25:53Z", "author": {"login": "coendamen"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQexpZgH2gAyMzkzNDQzMjU2OmY2MWYzYmFlYTU1YWZiOGIxY2FjMDQ4ZjBiYTE1Nzk1MDYxOWJiNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSuyE9gH2gAyMzkzNDQzMjU2OjIwZWY0OGQ3MjMwNzc1OTY4YmI1NGVjMjE2ZjE5YTQ0NjJjYjBlZGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f61f3baea55afb8b1cac048f0ba157950619bb70", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/f61f3baea55afb8b1cac048f0ba157950619bb70", "committedDate": "2020-03-23T14:00:15Z", "message": "SLIM-2326 first raw impl of generic PQ data with selective access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edeacd1ae4626a9d1021f5e16e5d6692e8c5f3ca", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/edeacd1ae4626a9d1021f5e16e5d6692e8c5f3ca", "committedDate": "2020-03-24T11:44:03Z", "message": "SLIM-2196 obis code from String, added unit test for selected values filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e525130517955f5d67210ed24ab476ea35d239", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/e1e525130517955f5d67210ed24ab476ea35d239", "committedDate": "2020-03-25T08:09:04Z", "message": "SLIM-2326 selective access support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea315a244e9acd57874f95d2aace26d79de4f22", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/eea315a244e9acd57874f95d2aace26d79de4f22", "committedDate": "2020-03-25T09:54:11Z", "message": "SLIM-2326 fix for selective access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff466b72e1759c0d948db0ee68e1eed8ca01b863", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ff466b72e1759c0d948db0ee68e1eed8ca01b863", "committedDate": "2020-03-25T17:08:41Z", "message": "SLIM-2326 refactored into abstract classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9feb7dd665c41e31c125952902858d6d8d61e2b1", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/9feb7dd665c41e31c125952902858d6d8d61e2b1", "committedDate": "2020-03-26T08:58:42Z", "message": "SLIM-2326 renamed specific executor to handler. Made handlers more abstract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef0d3adbb9b807e8689959da0372e37bab9919fd", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/ef0d3adbb9b807e8689959da0372e37bab9919fd", "committedDate": "2020-03-26T11:59:01Z", "message": "SLIM-2326 code cleanup, Sonar warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/3a177cee6b11af5d2c3e48a25262fab5a61f01af", "committedDate": "2020-03-26T12:23:00Z", "message": "SLIM-2326 changed scalar back to scaler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzQ2NDcz", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-382746473", "createdAt": "2020-03-27T10:40:31Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDo0MDozMVrOF8rs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDo0MDozMVrOF8rs6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDg5MA==", "bodyText": "most code in this class is the old executor, I rewrote some, and some code I kept intact.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r399174890", "createdAt": "2020-03-27T10:40:31Z", "author": {"login": "coendamen"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -6,7 +6,7 @@\n  *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2d0e94094d419468fc141f787beb8652743d5b0", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/b2d0e94094d419468fc141f787beb8652743d5b0", "committedDate": "2020-03-30T08:38:04Z", "message": "SLIM-2326 added functional description to obiscodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/1503318282f244ac9a63445f6805a5a861a21eee", "committedDate": "2020-03-30T09:16:06Z", "message": "SLIM-2326 updated XSD to handle PQ request and response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjY5ODEw", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383669810", "createdAt": "2020-03-30T09:17:38Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxNzozOVrOF9grtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxNzozOVrOF9grtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MjkzNQ==", "bodyText": "Er is wel een Unit Test voor deze Class, maar die covered niet wat er in deze Class gebeurd.\nHet gedrag in de super wordt hier wel getest.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400042935", "createdAt": "2020-03-30T09:17:39Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.AbstractCommandExecutor;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.entities.DlmsDevice;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.factories.DlmsConnectionManager;\n+import org.opensmartgridplatform.adapter.protocol.dlms.exceptions.ProtocolAdapterException;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileRequestDataDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.GetPowerQualityProfileResponseDto;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjcwODM3", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383670837", "createdAt": "2020-03-30T09:18:58Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxODo1OFrOF9gvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToxODo1OFrOF9gvKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MzgxNg==", "bodyText": "Geen Unit Test", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400043816", "createdAt": "2020-03-30T09:18:58Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileNoSelectiveAccessHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * Copyright 2017 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.monitoring;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.openmuc.jdlms.datatypes.DataObject;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.DlmsHelper;\n+import org.opensmartgridplatform.adapter.protocol.dlms.domain.commands.utils.ScalerUnitInfo;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.CaptureObjectDefinitionDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryDto;\n+import org.opensmartgridplatform.dto.valueobjects.smartmetering.ProfileEntryValueDto;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjc2MjEy", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383676212", "createdAt": "2020-03-30T09:25:55Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyNTo1NVrOF9hAaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyNTo1NVrOF9hAaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0ODIzMg==", "bodyText": "Dit kan beter in een eigen Unit Test class.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400048232", "createdAt": "2020-03-30T09:25:55Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r\n         when(dlmsHelper.convertDataObjectToDateTime(any(DataObject.class))).thenCallRealMethod();\r\n         when(dlmsHelper.fromDateTimeValue(any())).thenCallRealMethod();\r\n+        when(dlmsHelper.getClockDefinition()).thenCallRealMethod();\r\n \r\n-        GetPowerQualityProfileCommandExecutor executor = new GetPowerQualityProfileCommandExecutor(dlmsHelper);\r\n+        GetPowerQualityProfileSelectiveAccessHandler handler = new GetPowerQualityProfileSelectiveAccessHandler(\r\n+                dlmsHelper);\r\n \r\n         // EXECUTE\r\n \r\n-        GetPowerQualityProfileResponseDto responseDto = executor.execute(conn, dlmsDevice, requestDto);\r\n+        GetPowerQualityProfileResponseDto responseDto = handler.handle(conn, dlmsDevice, requestDto);\r\n \r\n         // ASSERT\r\n \r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().size()).isEqualTo(2);\r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().get(0).getCaptureObjects().size()).isEqualTo(3);\r\n         assertThat(responseDto.getPowerQualityProfileResponseDatas().get(0).getProfileEntries().size()).isEqualTo(4);\r\n \r\n+        for (ProfileEntryDto profileEntryDto : responseDto.getPowerQualityProfileResponseDatas().get(0)\r\n+                                                          .getProfileEntries()) {\r\n+            assertThat(profileEntryDto.getProfileEntryValues().size()).isEqualTo(3);\r\n+        }\r\n+    }\r\n+\r\n+    @Test\r\n+    public void testExecuteNoSelectiveAccess() throws ProtocolAdapterException {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjc4Mzcz", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383678373", "createdAt": "2020-03-30T09:28:34Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyODozNFrOF9hHJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOToyODozNFrOF9hHJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0OTk1Nw==", "bodyText": "Ik vind het moeilijk te beoordelen of deze test volledig is. Wat ik wel kan beoordelen is dat ik uit deze test niet kan opmaken wat de implementatie zou moeten doen. Dit kun je verbeteren door duidelijk test methode namen en laten zien wat je als inhoud verwacht. Tenzij de size van de verschillende collecties dat is waar het om gaat, maar wellicht is de inhoud van de collecties ook belangrijk?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400049957", "createdAt": "2020-03-30T09:28:34Z", "author": {"login": "jboon"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/test/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/GetPowerQualityProfileCommandExecutorTest.java", "diffHunk": "@@ -66,19 +67,66 @@ public void testExecute() throws ProtocolAdapterException {\n         when(dlmsHelper.readLong(any(DataObject.class), any(String.class))).thenCallRealMethod();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjc5NjYx", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383679661", "createdAt": "2020-03-30T09:30:09Z", "commit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTozMDowOVrOF9hLeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTozMDowOVrOF9hLeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MTA2Ng==", "bodyText": "Dit is een mooi target voor Lombok!", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400051066", "createdAt": "2020-03-30T09:30:09Z", "author": {"login": "jboon"}, "path": "osgp/shared/osgp-dto/src/main/java/org/opensmartgridplatform/dto/valueobjects/smartmetering/ObisCodeValuesDto.java", "diffHunk": "@@ -30,6 +31,28 @@ public ObisCodeValuesDto(final byte a, final byte b, final byte c, final byte d,\n         this.f = f;\n     }\n \n+    public ObisCodeValuesDto(String obisCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a177cee6b11af5d2c3e48a25262fab5a61f01af"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjgyNjk1", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383682695", "createdAt": "2020-03-30T09:34:07Z", "commit": {"oid": "b2d0e94094d419468fc141f787beb8652743d5b0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d670600deb556faa911dc66e795eac0cb12b62", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/76d670600deb556faa911dc66e795eac0cb12b62", "committedDate": "2020-03-30T10:32:06Z", "message": "SLIM-2326 process review comments, refactored some tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzM4MjAw", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383738200", "createdAt": "2020-03-30T10:51:35Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozNVrOF9kGXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MTozNVrOF9kGXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODkxMQ==", "bodyText": "This method uses deprecated classes/methods.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400098911", "createdAt": "2020-03-30T10:51:35Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -267,12 +307,9 @@ private boolean isSelectedValue(final List<CaptureObjectDefinitionDto> selectedV\n             return true;\n         }\n \n-        for (final CaptureObjectDefinitionDto captureObjectDefinition : selectedValues) {\n-            if (this.isDefinitionOfSameObject(cosemObjectDefinitionDto, captureObjectDefinition)) {\n-                return true;\n-            }\n-        }\n-        return false;\n+        return selectedValues.stream().anyMatch(\n+                selectedValue -> this.isDefinitionOfSameObject(cosemObjectDefinitionDto, selectedValue));\n+\n     }\n \n     private boolean isClockDefinition(final CosemObjectDefinitionDto cosemObjectDefinitionDto) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 334}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzQwNjU5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383740659", "createdAt": "2020-03-30T10:55:13Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1NToxM1rOF9kOlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1NToxM1rOF9kOlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMTAxMg==", "bodyText": "I would expect this method to be redundant, if equals() was defined properly on these DTO's and/or one can be mapped to the other.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400101012", "createdAt": "2020-03-30T10:55:13Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -293,16 +330,11 @@ private boolean isDefinitionOfSameObject(final CosemObjectDefinitionDto cosemObj\n         final byte[] obisBytesCosemObjectDefinition = cosemObjectDefinitionDto.getLogicalName().toByteArray();\n         final byte attributeIndexCosemObjectDefinition = (byte) cosemObjectDefinitionDto.getAttributeIndex();\n         final int dataIndexCosemObjectDefinition = cosemObjectDefinitionDto.getDataIndex();\n-\n         final int classIdCaptureObjectDefinition = captureObjectDefinition.getClassId();\n         final byte[] obisBytesCaptureObjectDefinition = captureObjectDefinition.getLogicalName().toByteArray();\n         final byte attributeIndexCaptureObjectDefinition = captureObjectDefinition.getAttributeIndex();\n-        final int dataIndexCaptureObjectDefinition;\n-        if (captureObjectDefinition.getDataIndex() == null) {\n-            dataIndexCaptureObjectDefinition = 0;\n-        } else {\n-            dataIndexCaptureObjectDefinition = captureObjectDefinition.getDataIndex();\n-        }\n+        final int dataIndexCaptureObjectDefinition =\n+                captureObjectDefinition.getDataIndex() == null ? 0 : captureObjectDefinition.getDataIndex();\n \n         return classIdCaptureObjectDefinition == classIdCosemObjectDefinition && Arrays", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 352}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzQyODQ5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383742849", "createdAt": "2020-03-30T10:58:30Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1ODozMFrOF9kWXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1ODozMFrOF9kWXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzAwNQ==", "bodyText": "Consider using classic for-loop with variable positionInDataObjectsList inlined; this ensures increment of the variable and improves readability", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400103005", "createdAt": "2020-03-30T10:58:30Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 498}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzQ0MDQ1", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383744045", "createdAt": "2020-03-30T11:00:13Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowMDoxNFrOF9kaAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowMDoxNFrOF9kaAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwMzkzNw==", "bodyText": "Potential NullPointerException. The comment suggests this will never happen, but I don't know if it never can happen.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400103937", "createdAt": "2020-03-30T11:00:14Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 538}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzUyNTU3", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383752557", "createdAt": "2020-03-30T11:13:23Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxMzoyM1rOF9k0qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToxMzoyM1rOF9k0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMDc2MA==", "bodyText": "These look like enums; consider defining them as such.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400110760", "createdAt": "2020-03-30T11:13:23Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/monitoring/AbstractGetPowerQualityProfileHandler.java", "diffHunk": "@@ -463,39 +439,105 @@ private ProfileEntryValueDto makeNumericProfileEntryValueDto(final DataObject da\n             }\n         } catch (final ProtocolAdapterException e) {\n             LOGGER.error(\"Error creating ProfileEntryDto from {}\", dataObject, e);\n-            final String dbgInfo = this.dlmsHelper.getDebugInfo(dataObject);\n-            return new ProfileEntryValueDto(dbgInfo);\n+            final String debugInfo = this.dlmsHelper.getDebugInfo(dataObject);\n+            return new ProfileEntryValueDto(debugInfo);\n         }\n     }\n \n-    private List<ScalerUnitInfo> retrieveScalerUnits(final DlmsConnectionManager conn, final DlmsDevice device,\n-            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+    private Map<Integer, CaptureObjectDefinitionDto> createSelectableCaptureObjects(\n+            final List<GetResult> captureObjects, List<String> logicalNames) throws ProtocolAdapterException {\n \n-        final List<ScalerUnitInfo> result = new ArrayList<>();\n+        Map<Integer, CaptureObjectDefinitionDto> selectableCaptureObjects = new HashMap<>();\n \n+        // there is always only one GetResult\n         for (final GetResult captureObjectResult : captureObjects) {\n-            final DataObject dataObject = captureObjectResult.getResultData();\n-            final List<DataObject> dataObjectList1 = dataObject.getValue();\n-            for (final DataObject captureObjectDataObject : dataObjectList1) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+            int positionInDataObjectsList = 0;\n+\n+            for (DataObject dataObject : dataObjects) {\n \n                 final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n-                        .readObjectDefinition(captureObjectDataObject, CAPTURE_OBJECT);\n-                final int classId = cosemObjectDefinitionDto.getClassId();\n+                        .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n                 final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n-                if (this.hasScalerUnit(classId)) {\n-                    final AttributeAddress addr = new AttributeAddress(classId, logicalName,\n-                            SCALER_UNITS_MAP.get(classId));\n-                    final List<GetResult> scalerUnitResult = this.dlmsHelper\n-                            .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n-                    final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n-                    result.add(new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject));\n-                } else {\n-                    result.add(new ScalerUnitInfo(logicalName, classId, null));\n+\n+                if (logicalNames.contains(logicalName)) {\n+                    selectableCaptureObjects.put(positionInDataObjectsList,\n+                            new CaptureObjectDefinitionDto(cosemObjectDefinitionDto.getClassId(),\n+                                    new ObisCodeValuesDto(logicalName),\n+                                    (byte) cosemObjectDefinitionDto.getAttributeIndex(),\n+                                    cosemObjectDefinitionDto.getDataIndex()));\n                 }\n+                positionInDataObjectsList++;\n+            }\n+        }\n+\n+        return selectableCaptureObjects;\n+    }\n+\n+    private List<ScalerUnitInfo> createScalerUnitInfos(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final List<GetResult> captureObjects) throws ProtocolAdapterException {\n+\n+        List<ScalerUnitInfo> scalerUnitInfos = new ArrayList<>();\n+\n+        // there is always only one GetResult\n+        for (final GetResult captureObjectResult : captureObjects) {\n+\n+            final List<DataObject> dataObjects = captureObjectResult.getResultData().getValue();\n+\n+            for (DataObject dataObject : dataObjects) {\n+                scalerUnitInfos.add(createScalerUnitInfo(conn, device, dataObject));\n             }\n         }\n \n-        return result;\n+        return scalerUnitInfos;\n+    }\n+\n+    private ScalerUnitInfo createScalerUnitInfo(final DlmsConnectionManager conn, final DlmsDevice device,\n+            final DataObject dataObject) throws ProtocolAdapterException {\n+\n+        final CosemObjectDefinitionDto cosemObjectDefinitionDto = this.dlmsHelper\n+                .readObjectDefinition(dataObject, CAPTURE_OBJECT);\n+\n+        final int classId = cosemObjectDefinitionDto.getClassId();\n+        final String logicalName = cosemObjectDefinitionDto.getLogicalName().toString();\n+\n+        if (this.hasScalerUnit(classId)) {\n+            final AttributeAddress addr = new AttributeAddress(classId, logicalName, SCALER_UNITS_MAP.get(classId));\n+            final List<GetResult> scalerUnitResult = this.dlmsHelper\n+                    .getAndCheck(conn, device, \"retrieve scaler unit for capture object\", addr);\n+            final DataObject scalerUnitDataObject = scalerUnitResult.get(0).getResultData();\n+            return new ScalerUnitInfo(logicalName, classId, scalerUnitDataObject);\n+        } else {\n+            return new ScalerUnitInfo(logicalName, classId, null);\n+        }\n+    }\n+\n+    private static List<String> getLogicalNamesPublicDefinableLoadProfile() {\n+\n+        return Arrays.asList(OBIS_CODE_CLOCK, NR_VOLTAGE_SAGS_L1, NR_VOLTAGE_SAGS_L2, NR_VOLTAGE_SAGS_L3,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 571}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzY4MDY5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383768069", "createdAt": "2020-03-30T11:37:53Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzo1M1rOF9lmOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzo1M1rOF9lmOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMzQ0OA==", "bodyText": "It seems to me this is a wrong modification: scalar sounds perfectly fine. Rename the class to ScalarUnitInfo?", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#discussion_r400123448", "createdAt": "2020-03-30T11:37:53Z", "author": {"login": "jandik"}, "path": "osgp/protocol-adapter-dlms/osgp-protocol-adapter-dlms/src/main/java/org/opensmartgridplatform/adapter/protocol/dlms/domain/commands/utils/ScalerUnitInfo.java", "diffHunk": "@@ -16,11 +16,11 @@\n     private final int classId;\n     private final DataObject scalerUnit;\n \n-    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalarUnit) {\n+    public ScalerUnitInfo(final String logicalName, final int classId, final DataObject scalerUnit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzcxODM5", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/248#pullrequestreview-383771839", "createdAt": "2020-03-30T11:43:42Z", "commit": {"oid": "1503318282f244ac9a63445f6805a5a861a21eee"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95eca23ea43b21540e464f89ad87118cea9250f9", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/95eca23ea43b21540e464f89ad87118cea9250f9", "committedDate": "2020-03-30T11:47:47Z", "message": "SLIM-2326 process review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86648a1b2521996dae45c2300ade1bbbe9dd575", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/d86648a1b2521996dae45c2300ade1bbbe9dd575", "committedDate": "2020-03-30T11:49:53Z", "message": "Merge branch 'development' of https://github.com/OSGP/open-smart-grid-platform into SLIM-2326/add_generic_filtering_of_pq_data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20ef48d7230775968bb54ec216f19a4462cb0edd", "author": {"user": {"login": "coendamen", "name": "Coen Damen"}}, "url": "https://github.com/OSGP/open-smart-grid-platform/commit/20ef48d7230775968bb54ec216f19a4462cb0edd", "committedDate": "2020-03-30T13:47:03Z", "message": "SLIM-2326 process review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3842, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}