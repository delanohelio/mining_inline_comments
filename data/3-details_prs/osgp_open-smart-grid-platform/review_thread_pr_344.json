{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjM4MTQ3", "number": 344, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjozNTo1NVrOEDuseg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjo1MjozMFrOEDu9QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzQ2MjM0OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjozNTo1NVrOGg6qZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0MDo1OVrOGhKWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2ODc0Mg==", "bodyText": "A bit strange to put this in setUp, while it is overridden in a lot of tests", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/344#discussion_r437168742", "createdAt": "2020-06-09T06:35:55Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.net.InetAddress;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class DeviceNetworkAddressCleanupServiceTest {\n+\n+    private DeviceRepository deviceRepository;\n+    private DeviceNetworkAddressCleanupService deviceNetworkAddressCleanupService;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        this.deviceRepository = Mockito.mock(DeviceRepository.class);\n+        final boolean allowMultipleDevicesPerNetworkAddress = false;\n+        final List<String> ipRangesAllowingMultipleDevicesPerAddress = Collections.emptyList();\n+        this.deviceNetworkAddressCleanupService = new DeviceNetworkAddressCleanupService(this.deviceRepository,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b7c72f09832eeaabd641ed87d58f8d3a564dcc"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyNTY3Ng==", "bodyText": "I changed the way the setup is handled, so this default before-each that is hardly ever used is no longer applied.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/344#discussion_r437425676", "createdAt": "2020-06-09T13:40:59Z", "author": {"login": "bvdzwet"}, "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.net.InetAddress;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class DeviceNetworkAddressCleanupServiceTest {\n+\n+    private DeviceRepository deviceRepository;\n+    private DeviceNetworkAddressCleanupService deviceNetworkAddressCleanupService;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        this.deviceRepository = Mockito.mock(DeviceRepository.class);\n+        final boolean allowMultipleDevicesPerNetworkAddress = false;\n+        final List<String> ipRangesAllowingMultipleDevicesPerAddress = Collections.emptyList();\n+        this.deviceNetworkAddressCleanupService = new DeviceNetworkAddressCleanupService(this.deviceRepository,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2ODc0Mg=="}, "originalCommit": {"oid": "56b7c72f09832eeaabd641ed87d58f8d3a564dcc"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzUwNTI4OnYy", "diffSide": "RIGHT", "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjo1MjozMFrOGg7FKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzo0NDowMFrOGhKihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE3NTU5Mw==", "bodyText": "You could consider making constants of these variables, since they are used in almost every test", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/344#discussion_r437175593", "createdAt": "2020-06-09T06:52:30Z", "author": {"login": "robindenadel"}, "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.net.InetAddress;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class DeviceNetworkAddressCleanupServiceTest {\n+\n+    private DeviceRepository deviceRepository;\n+    private DeviceNetworkAddressCleanupService deviceNetworkAddressCleanupService;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        this.deviceRepository = Mockito.mock(DeviceRepository.class);\n+        final boolean allowMultipleDevicesPerNetworkAddress = false;\n+        final List<String> ipRangesAllowingMultipleDevicesPerAddress = Collections.emptyList();\n+        this.deviceNetworkAddressCleanupService = new DeviceNetworkAddressCleanupService(this.deviceRepository,\n+                allowMultipleDevicesPerNetworkAddress, ipRangesAllowingMultipleDevicesPerAddress);\n+        MockitoAnnotations.initMocks(this);\n+    }\n+\n+    @Test\n+    public void duplicateAddressesAreAllowedForLoopbackAddresses() throws Exception {\n+        assertThat(this.deviceNetworkAddressCleanupService.allowDuplicateEntries(InetAddress.getLoopbackAddress()))\n+                .isTrue();\n+    }\n+\n+    @Test\n+    public void noDevicesAreUpdatedWhenTheNetworkAddressIsNotUsed() throws Exception {\n+        final String host = \"192.168.0.13\";\n+        final InetAddress inetAddress = InetAddress.getByName(host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b7c72f09832eeaabd641ed87d58f8d3a564dcc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyODg3MA==", "bodyText": "I changed the way the host and InetAddress are configured in the tests, making some use of constants. In general I don't think we should be too eager to extract as much as possible from test code, as this can make the separate tests harder to understand looking at them in isolation, without tracing other parts of the code. I hope you are OK with the balance I tried to find here.", "url": "https://github.com/OSGP/open-smart-grid-platform/pull/344#discussion_r437428870", "createdAt": "2020-06-09T13:44:00Z", "author": {"login": "bvdzwet"}, "path": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/application/services/DeviceNetworkAddressCleanupServiceTest.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/**\n+ * Copyright 2020 Smart Society Services B.V.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.opensmartgridplatform.core.application.services;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.net.InetAddress;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.opensmartgridplatform.domain.core.entities.Device;\n+import org.opensmartgridplatform.domain.core.repositories.DeviceRepository;\n+\n+@ExtendWith(MockitoExtension.class)\n+public class DeviceNetworkAddressCleanupServiceTest {\n+\n+    private DeviceRepository deviceRepository;\n+    private DeviceNetworkAddressCleanupService deviceNetworkAddressCleanupService;\n+\n+    @BeforeEach\n+    public void setUp() {\n+        this.deviceRepository = Mockito.mock(DeviceRepository.class);\n+        final boolean allowMultipleDevicesPerNetworkAddress = false;\n+        final List<String> ipRangesAllowingMultipleDevicesPerAddress = Collections.emptyList();\n+        this.deviceNetworkAddressCleanupService = new DeviceNetworkAddressCleanupService(this.deviceRepository,\n+                allowMultipleDevicesPerNetworkAddress, ipRangesAllowingMultipleDevicesPerAddress);\n+        MockitoAnnotations.initMocks(this);\n+    }\n+\n+    @Test\n+    public void duplicateAddressesAreAllowedForLoopbackAddresses() throws Exception {\n+        assertThat(this.deviceNetworkAddressCleanupService.allowDuplicateEntries(InetAddress.getLoopbackAddress()))\n+                .isTrue();\n+    }\n+\n+    @Test\n+    public void noDevicesAreUpdatedWhenTheNetworkAddressIsNotUsed() throws Exception {\n+        final String host = \"192.168.0.13\";\n+        final InetAddress inetAddress = InetAddress.getByName(host);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE3NTU5Mw=="}, "originalCommit": {"oid": "56b7c72f09832eeaabd641ed87d58f8d3a564dcc"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3608, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}