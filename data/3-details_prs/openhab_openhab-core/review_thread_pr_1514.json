{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNDEwNjg3", "number": 1514, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Mjo1N1rOEDZAQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzozMjo0NVrOEDvtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTkwODUwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Mjo1N1rOGgYWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Mjo1N1rOGgYWPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwNjUyNg==", "bodyText": "The FolderObserver already uses constructor injection? Can we use it for the ReadyService too?", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436606526", "createdAt": "2020-06-08T10:42:57Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java", "diffHunk": "@@ -60,6 +62,12 @@\n \n     /* the model repository is provided as a service */\n     private final ModelRepository modelRepository;\n+    private static final String READYMARKER_TYPE = \"dsl\";\n+\n+    @Reference\n+    /* default */ ReadyService readyService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTkyMDE5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Njo1NlrOGgYdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Njo1NlrOGgYdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwODQ1MA==", "bodyText": "Combine nested ifs and consider new condition in method removeAllModelsOfType().", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436608450", "createdAt": "2020-06-08T10:46:56Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -203,8 +189,9 @@ public void reloadAllModelsOfType(final String modelType) {\n             // Make a copy to avoid ConcurrentModificationException\n             List<Resource> resourceListCopy = new ArrayList<>(resourceSet.getResources());\n             for (Resource resource : resourceListCopy) {\n-                if (resource != null && resource.getURI().lastSegment().contains(\".\") && resource.isLoaded()) {\n-                    if (modelType.equalsIgnoreCase(resource.getURI().fileExtension())) {\n+                if (resource.getURI().lastSegment().contains(\".\") && resource.isLoaded()) {\n+                    if (modelType.equalsIgnoreCase(resource.getURI().fileExtension())\n+                            && !resource.getURI().lastSegment().startsWith(\"tmp_\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTkzMDIyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MDoyOVrOGgYkAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MDoyOVrOGgYkAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMDA1MA==", "bodyText": "This is a nice improvement. With absence of these ugly nestings we can use a try-with-resources statement on the inputStream declaration and get rid of the finally introduced in #1423.", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436610050", "createdAt": "2020-06-08T10:50:29Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,20 +98,18 @@ public ModelRepositoryImpl(final @Reference SafeEMF safeEmf) {\n \n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n+        logger.info(\"Loading model '{}'\", name);\n         Resource resource = null;\n         InputStream inputStream = null;\n         try {\n-            if (originalInputStream != null) {\n-                byte[] bytes = originalInputStream.readAllBytes();\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n-                }\n-                inputStream = new ByteArrayInputStream(bytes);\n+            byte[] bytes = originalInputStream.readAllBytes();\n+            String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n+            if (validationResult != null) {\n+                logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name, validationResult);\n+                removeModel(name);\n+                return false;\n             }\n+            inputStream = new ByteArrayInputStream(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzYyOTA0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzozMjo0NVrOGg8S_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0MzoxM1rOGhZjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE5NTUxNg==", "bodyText": "ftr: This is probably not necessary as the FolderObserver handles the passed InputStream (originalInputStream), but I do not think that it will hurt:\n\n  \n    \n      openhab-core/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java\n    \n    \n        Lines 233 to 238\n      in\n      b7ab807\n    \n    \n    \n    \n\n        \n          \n           try (InputStream inputStream = Files.newInputStream(file.toPath())) { \n        \n\n        \n          \n               nameFileMap.put(file.getName(), file); \n        \n\n        \n          \n               modelRepository.addOrRefreshModel(file.getName(), inputStream); \n        \n\n        \n          \n           } catch (IOException e) { \n        \n\n        \n          \n               logger.warn(\"Error while opening file during update: {}\", file.getAbsolutePath()); \n        \n\n        \n          \n           }", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r437195516", "createdAt": "2020-06-09T07:32:45Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,20 +98,22 @@ public ModelRepositoryImpl(final @Reference SafeEMF safeEmf) {\n \n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n+        logger.info(\"Loading model '{}'\", name);\n         Resource resource = null;\n-        InputStream inputStream = null;\n-        try {\n-            if (originalInputStream != null) {\n-                byte[] bytes = originalInputStream.readAllBytes();\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n-                }\n-                inputStream = new ByteArrayInputStream(bytes);\n+        byte[] bytes = null;\n+        try (InputStream inputStream = originalInputStream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3NDc3Mg==", "bodyText": "True, I didn't see that. But imho it is better to explicitly make sure that the stream is closed within the method. One should not rely on the caller to do it.", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r437674772", "createdAt": "2020-06-09T19:43:13Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,20 +98,22 @@ public ModelRepositoryImpl(final @Reference SafeEMF safeEmf) {\n \n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n+        logger.info(\"Loading model '{}'\", name);\n         Resource resource = null;\n-        InputStream inputStream = null;\n-        try {\n-            if (originalInputStream != null) {\n-                byte[] bytes = originalInputStream.readAllBytes();\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n-                }\n-                inputStream = new ByteArrayInputStream(bytes);\n+        byte[] bytes = null;\n+        try (InputStream inputStream = originalInputStream) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE5NTUxNg=="}, "originalCommit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}