{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1Nzg1MjY0", "number": 1367, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMDozNjo0NlrODgNI1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzo1MToxNVrODgSyYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDk2Mjc3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMDozNjo0NlrOFqS0Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxOToyMzowMFrOFqU4Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw==", "bodyText": "Instead of blacklisting wouldn't it be safer to define a whitelist of allowed file extensions?\nOtherwise you should put string litterals first in comparisons or may introduce a Set of Strings and check if the set contains your blacklisted extension.", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379892803", "createdAt": "2020-02-16T10:36:46Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,9 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+        if (fileExtension.equals(\"txt\") || fileExtension.equals(\"old\") || fileExtension.equals(\"example\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b49b493ffd118b9057257492ad781b86facae5a1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxNDE0Nw==", "bodyText": "It would be very difficult to use a whitelist, since any compatible ScriptEngineFactory could be used and there's no way to tell what file extensions might be used.\nI'll remove this for now and add a separate PR with a better way to blacklist. I really shouldn't have included this here anyhow, but I've wanted to exclude these extensions for a while.", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379914147", "createdAt": "2020-02-16T16:08:04Z", "author": {"login": "5iver"}, "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,9 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+        if (fileExtension.equals(\"txt\") || fileExtension.equals(\"old\") || fileExtension.equals(\"example\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw=="}, "originalCommit": {"oid": "b49b493ffd118b9057257492ad781b86facae5a1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNjYxOQ==", "bodyText": "I have reverted this change and will submit another PR for it. Please squash the commits (I'm using the Github UI for this PR).", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r379926619", "createdAt": "2020-02-16T19:23:00Z", "author": {"login": "5iver"}, "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,9 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+        if (fileExtension.equals(\"txt\") || fileExtension.equals(\"old\") || fileExtension.equals(\"example\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5MjgwMw=="}, "originalCommit": {"oid": "b49b493ffd118b9057257492ad781b86facae5a1"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTg4ODM0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzo1MToxNVrOFqa6hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTo1MTo0NlrOFqhyhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAyNTQ3Nw==", "bodyText": "Can you remove the whitespace?", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r380025477", "createdAt": "2020-02-17T07:51:15Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,7 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+         if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7653185a230901f26c14339d64b1308310ebee7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODExNg==", "bodyText": "Oops.. sorry about that... done!", "url": "https://github.com/openhab/openhab-core/pull/1367#discussion_r380138116", "createdAt": "2020-02-17T11:51:46Z", "author": {"login": "5iver"}, "path": "bundles/org.openhab.core.automation.module.script.rulesupport/src/main/java/org/openhab/core/automation/module/script/rulesupport/internal/loader/ScriptFileWatcher.java", "diffHunk": "@@ -238,7 +229,7 @@ private String getScriptType(URL url) {\n         String fileExtension = fileName.substring(idx + 1);\n \n         // ignore known file extensions for \"temp\" files\n-        if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {\n+         if (fileExtension.equals(\"txt\") || fileExtension.endsWith(\"~\") || fileExtension.endsWith(\"swp\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAyNTQ3Nw=="}, "originalCommit": {"oid": "a7653185a230901f26c14339d64b1308310ebee7"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}