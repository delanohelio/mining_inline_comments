{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNjYyNDY2", "number": 1487, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMjoxNVrOD-O8ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxMjozN1rOD-PRPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTgzMTQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMjoxNVrOGYNT8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDozMzo0MlrOGYO23A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNzEwNQ==", "bodyText": "Don't you want to call them mock here?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private @Mock HttpContext httpContext;\n          \n          \n            \n                private @Mock HttpContext httpContextMock;", "url": "https://github.com/openhab/openhab-core/pull/1487#discussion_r428037105", "createdAt": "2020-05-20T14:02:15Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java", "diffHunk": "@@ -74,6 +76,9 @@ public void reset() {\n     private IconServlet servlet;\n     private ByteArrayServletOutputStream responseOutputStream = new ByteArrayServletOutputStream();\n \n+    private @Mock HttpContext httpContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1271f1925c63c69c9886c281b3866cb03911b3f8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA2MjQyOA==", "bodyText": "Good catch, I'll update them!", "url": "https://github.com/openhab/openhab-core/pull/1487#discussion_r428062428", "createdAt": "2020-05-20T14:33:42Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.ui.icon/src/test/java/org/openhab/core/ui/icon/internal/IconServletTest.java", "diffHunk": "@@ -74,6 +76,9 @@ public void reset() {\n     private IconServlet servlet;\n     private ByteArrayServletOutputStream responseOutputStream = new ByteArrayServletOutputStream();\n \n+    private @Mock HttpContext httpContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNzEwNQ=="}, "originalCommit": {"oid": "1271f1925c63c69c9886c281b3866cb03911b3f8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTg2MTY2OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowODowM1rOGYNmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowODowM1rOGYNmPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0MTc5MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/openhab/openhab-core/pull/1487#discussion_r428041791", "createdAt": "2020-05-20T14:08:03Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryServiceRegistryImpl.java", "diffHunk": "@@ -136,8 +135,6 @@ public void reduceNumberOfDiscoveryServices() {\n \n     private final Logger logger = LoggerFactory.getLogger(DiscoveryServiceRegistryImpl.class);\n \n-    private @NonNullByDefault({}) SafeCaller safeCaller;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1271f1925c63c69c9886c281b3866cb03911b3f8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTg4NDc2OnYy", "diffSide": "RIGHT", "path": "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/src/main/java/org/openhab/core/config/discovery/usbserial/linuxsysfs/internal/PollingUsbSerialScannerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxMjozN1rOGYN0rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxMjozN1rOGYN0rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0NTQ4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private @Mock UsbSerialScanner usbSerialScanner;\n          \n          \n            \n                private @Mock UsbSerialScanner usbSerialScannerMock;", "url": "https://github.com/openhab/openhab-core/pull/1487#discussion_r428045485", "createdAt": "2020-05-20T14:12:37Z", "author": {"login": "cweitkamp"}, "path": "itests/org.openhab.core.config.discovery.usbserial.linuxsysfs.tests/src/main/java/org/openhab/core/config/discovery/usbserial/linuxsysfs/internal/PollingUsbSerialScannerTest.java", "diffHunk": "@@ -37,22 +39,20 @@\n \n     private UsbSerialDeviceInformationGenerator usbDeviceInfoGenerator = new UsbSerialDeviceInformationGenerator();\n \n-    private UsbSerialScanner usbSerialScanner;\n     private PollingUsbSerialScanner pollingScanner;\n-    private UsbSerialDiscoveryListener discoveryListener;\n+    private @Mock UsbSerialDiscoveryListener discoveryListenerMock;\n+    private @Mock UsbSerialScanner usbSerialScanner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1271f1925c63c69c9886c281b3866cb03911b3f8"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3399, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}