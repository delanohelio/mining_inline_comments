{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MjQ2NzE5", "number": 1407, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjowNTo0MFrODu-rqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjoyMToxN1rODu-5CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTg4MDcyOnYy", "diffSide": "RIGHT", "path": "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjowNTo0MFrOGBI5pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzowMTo0NlrOGBKLDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0NzU5MA==", "bodyText": "Can you shortly explain this assertion?", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403847590", "createdAt": "2020-04-06T06:05:40Z", "author": {"login": "cweitkamp"}, "path": "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java", "diffHunk": "@@ -237,7 +237,11 @@ public boolean supportsThingType(@NonNull ThingTypeUID thingTypeUID) {\n         waitForAssert(() -> {\n             assertTrue(thingResultWrapper.get() != null);\n         });\n-        assertThat(thing, is(thingResultWrapper.get()));\n+\n+        assertThat(this, is(notNullValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2ODQyOQ==", "bodyText": "I'll fix that because it should have checked the thing instead of this so the compiler will know it is null safe but will still fail if null . \ud83d\udc4d", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403868429", "createdAt": "2020-04-06T07:01:46Z", "author": {"login": "wborn"}, "path": "itests/org.openhab.core.thing.tests/src/main/java/org/openhab/core/thing/internal/ThingRegistryOSGiTest.java", "diffHunk": "@@ -237,7 +237,11 @@ public boolean supportsThingType(@NonNull ThingTypeUID thingTypeUID) {\n         waitForAssert(() -> {\n             assertTrue(thingResultWrapper.get() != null);\n         });\n-        assertThat(thing, is(thingResultWrapper.get()));\n+\n+        assertThat(this, is(notNullValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0NzU5MA=="}, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTg4MzM1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjowNzowOFrOGBI7Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjo1NDozNlrOGBJ-sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0ODAyMg==", "bodyText": "Something beyond scope of this PR but passing a @Nullable UIComponent component here seems to be wrong. Could be captured by calling methods.", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403848022", "createdAt": "2020-04-06T06:07:08Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java", "diffHunk": "@@ -261,8 +273,8 @@ protected Widget buildWidget(UIComponent component) {\n         return widget;\n     }\n \n-    private void setWidgetPropertyFromComponentConfig(Widget widget, UIComponent component, String configParamName,\n-            int feature) {\n+    private void setWidgetPropertyFromComponentConfig(Widget widget, @Nullable UIComponent component,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2NTI2Nw==", "bodyText": "I was still unsure, after a short exploration of the call tree, if it would actually happen because of the null check in this method. So I opted for the conservative route of adding the annotation.", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403865267", "createdAt": "2020-04-06T06:54:36Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.ui/src/main/java/org/openhab/core/ui/internal/components/UIComponentSitemapProvider.java", "diffHunk": "@@ -261,8 +273,8 @@ protected Widget buildWidget(UIComponent component) {\n         return widget;\n     }\n \n-    private void setWidgetPropertyFromComponentConfig(Widget widget, UIComponent component, String configParamName,\n-            int feature) {\n+    private void setWidgetPropertyFromComponentConfig(Widget widget, @Nullable UIComponent component,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0ODAyMg=="}, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTkxNDk3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.config.discovery.mdns/src/main/java/org/openhab/core/config/discovery/mdns/internal/MDNSDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjoyMToxN1rOGBJNsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzo0NDoxNlrOGBLbWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1MjcyMQ==", "bodyText": "Can we use constructor injection for this reference?", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403852721", "createdAt": "2020-04-06T06:21:17Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.config.discovery.mdns/src/main/java/org/openhab/core/config/discovery/mdns/internal/MDNSDiscoveryService.java", "diffHunk": "@@ -59,7 +60,7 @@\n \n     private final Set<MDNSDiscoveryParticipant> participants = new CopyOnWriteArraySet<>();\n \n-    private MDNSClient mdnsClient;\n+    private @NonNullByDefault({}) MDNSClient mdnsClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4ODk4Nw==", "bodyText": "I've pushed some changes that I think will work to accomplish this.", "url": "https://github.com/openhab/openhab-core/pull/1407#discussion_r403888987", "createdAt": "2020-04-06T07:44:16Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.config.discovery.mdns/src/main/java/org/openhab/core/config/discovery/mdns/internal/MDNSDiscoveryService.java", "diffHunk": "@@ -59,7 +60,7 @@\n \n     private final Set<MDNSDiscoveryParticipant> participants = new CopyOnWriteArraySet<>();\n \n-    private MDNSClient mdnsClient;\n+    private @NonNullByDefault({}) MDNSClient mdnsClient;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1MjcyMQ=="}, "originalCommit": {"oid": "14efd748bd4144ac139cc7991e8e9fc000c3dd2c"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3183, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}