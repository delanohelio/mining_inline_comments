{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzU3NDE1", "number": 1428, "title": "Removed deprecated constructor for 'DiscoveryResultImpl'", "bodyText": "Removed deprecated constructor for DiscoveryResultImpl\nReplaced DiscoveryResultImpl by DiscoveryResultBuilder\n\nRelated to #1408\nSigned-off-by: Christoph Weitkamp github@christophweitkamp.de", "createdAt": "2020-04-17T21:53:37Z", "url": "https://github.com/openhab/openhab-core/pull/1428", "merged": true, "mergeCommit": {"oid": "a247a021e18492838957fece5e571153fa42f21d"}, "closed": true, "closedAt": "2020-04-20T06:47:21Z", "author": {"login": "cweitkamp"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYofnaAH2gAyNDA1MzU3NDE1OmIwODRlNzA4ZTg5OTE1Y2Q1NzU3YTlmYjY3YTZjNjhkOWY2NmQ3OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZZW-xgFqTM5NjE3OTExOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b084e708e89915cd5757a9fb67a6c68d9f66d792", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-core/commit/b084e708e89915cd5757a9fb67a6c68d9f66d792", "committedDate": "2020-04-17T21:51:00Z", "message": "Removed deprecated contructor DiscoveryResultImpl\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Nzk1MzQ3", "url": "https://github.com/openhab/openhab-core/pull/1428#pullrequestreview-395795347", "createdAt": "2020-04-17T21:55:13Z", "commit": {"oid": "b084e708e89915cd5757a9fb67a6c68d9f66d792"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTo1NToxNFrOGHePpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTo1NToxNFrOGHePpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4ODc0MA==", "bodyText": "This description is confusing. The ctor does not throw an IAE if ThingTypeUID is null but if TTL is missing.", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410488740", "createdAt": "2020-04-17T21:55:14Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "diffHunk": "@@ -48,44 +49,20 @@\n     /**\n      * Creates a new instance of this class with the specified parameters.\n      *\n-     * @param thingUID\n-     *            the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered again, the\n-     *            same {@code Thing} ID\n-     *            must be created. A typical {@code Thing} ID could be the\n+     * @param thingTypeUID the {@link ThingTypeUID}\n+     * @param thingUID the {@link ThingUID} to be set (must not be null). If a {@code Thing} disappears and is\n+     *            discovered again, the same {@code Thing} ID must be created. A typical {@code Thing} ID could be the\n      *            serial number. It's usually <i>not</i> a product name.\n-     * @param properties the properties to be set (could be null or empty)\n-     * @param representationProperty the representationProperty to be set (could be null or empty)\n-     * @param label the human readable label to set (could be null or empty)\n      * @param bridgeUID the unique bridge ID to be set\n-     * @param timeToLive time to live in seconds\n-     *\n-     * @throws IllegalArgumentException\n-     *             if the Thing type UID or the Thing UID is null\n-     * @deprecated use {@link #DiscoveryResultImpl(ThingUID, ThingTypeUID, ThingUID, Map, String, String, long)}\n-     *             instead.\n-     */\n-    @Deprecated\n-    public DiscoveryResultImpl(ThingUID thingUID, ThingUID bridgeUID, Map<String, Object> properties,\n-            String representationProperty, String label, long timeToLive) throws IllegalArgumentException {\n-        this(thingUID.getThingTypeUID(), thingUID, bridgeUID, properties, representationProperty, label, timeToLive);\n-    }\n-\n-    /**\n-     * Creates a new instance of this class with the specified parameters.\n-     *\n-     * @param thingTypeUID the {@link ThingTypeUID}\n-     * @param thingUID the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered\n-     *            again, the same {@code Thing} ID must be created. A typical {@code Thing} ID could be the serial\n-     *            number. It's usually <i>not</i> a product name.\n      * @param properties the properties to be set (could be null or empty)\n      * @param representationProperty the representationProperty to be set (could be null or empty)\n      * @param label the human readable label to set (could be null or empty)\n-     * @param bridgeUID the unique bridge ID to be set\n      * @param timeToLive time to live in seconds\n      *\n-     * @throws IllegalArgumentException\n-     *             if the Thing type UID or the Thing UID is null\n+     * @throws IllegalArgumentException if the Thing type UID or the Thing UID is null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b084e708e89915cd5757a9fb67a6c68d9f66d792"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70eee2ffb5bee7e0cf18abe2c67684669c700e64", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-core/commit/70eee2ffb5bee7e0cf18abe2c67684669c700e64", "committedDate": "2020-04-18T16:09:31Z", "message": "Added SuppressWarnings('deprecation')\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c0f325f01230eda12b8b3b77f3604cda48382eb", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-core/commit/0c0f325f01230eda12b8b3b77f3604cda48382eb", "committedDate": "2020-04-18T16:29:15Z", "message": "Removed set default values\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDE0MDE3", "url": "https://github.com/openhab/openhab-core/pull/1428#pullrequestreview-396014017", "createdAt": "2020-04-19T12:56:01Z", "commit": {"oid": "0c0f325f01230eda12b8b3b77f3604cda48382eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMjo1NjowMVrOGH3P-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMjo1NjowMVrOGH3P-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5ODQyNA==", "bodyText": "If you annotate the class with @NonNullByDefault  and methods with @Nullable (where applicable) you can also cleanup all the JavaDoc texts about parameters being (not) null. \ud83d\ude09", "url": "https://github.com/openhab/openhab-core/pull/1428#discussion_r410898424", "createdAt": "2020-04-19T12:56:01Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "diffHunk": "@@ -48,44 +49,20 @@\n     /**\n      * Creates a new instance of this class with the specified parameters.\n      *\n-     * @param thingUID\n-     *            the Thing UID to be set (must not be null). If a {@code Thing} disappears and is discovered again, the\n-     *            same {@code Thing} ID\n-     *            must be created. A typical {@code Thing} ID could be the\n+     * @param thingTypeUID the {@link ThingTypeUID}\n+     * @param thingUID the {@link ThingUID} to be set (must not be null). If a {@code Thing} disappears and is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0f325f01230eda12b8b3b77f3604cda48382eb"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c66aca045d319e10d23e201acf2b31155da216a", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-core/commit/2c66aca045d319e10d23e201acf2b31155da216a", "committedDate": "2020-04-19T18:50:56Z", "message": "Added nullness annotations\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddebd169e845bd78f4a6339209182379d0da025c", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-core/commit/ddebd169e845bd78f4a6339209182379d0da025c", "committedDate": "2020-04-20T05:48:37Z", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTc5MTE5", "url": "https://github.com/openhab/openhab-core/pull/1428#pullrequestreview-396179119", "createdAt": "2020-04-20T06:46:55Z", "commit": {"oid": "ddebd169e845bd78f4a6339209182379d0da025c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4605, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}