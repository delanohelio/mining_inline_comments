{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMTc1Mzc1", "number": 1705, "title": "Fix and cleanup logging in ExecUtil", "bodyText": "Signed-off-by: Connor Petty mistercpp2000+gitsignoff@gmail.com", "createdAt": "2020-10-08T20:39:58Z", "url": "https://github.com/openhab/openhab-core/pull/1705", "merged": true, "mergeCommit": {"oid": "a29490a545433544410585c710035f0c83e03894"}, "closed": true, "closedAt": "2020-10-11T20:19:43Z", "author": {"login": "cpmeister"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQnwVfgH2gAyNTAwMTc1Mzc1OjM3YmQ5YWJiZGM5OTJhMGFhNTBmNTQzNTY5Y2RkZjVlYWY3MDc5Yjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRlRAwgFqTUwNjIxMzIxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "author": {"user": null}, "url": "https://github.com/openhab/openhab-core/commit/37bd9abbdc992a0aa50f543569cddf5eaf7079b9", "committedDate": "2020-10-08T20:39:07Z", "message": "Fix and cleanup logging in ExecUtil\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTU0MjEx", "url": "https://github.com/openhab/openhab-core/pull/1705#pullrequestreview-506154211", "createdAt": "2020-10-11T08:01:03Z", "commit": {"oid": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwODowMTowM1rOHflbiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwODowMToxN1rOHflbsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTE2MQ==", "bodyText": "I would keep logging this as WARN level here as the severity isn't reduced, just because debug logging is enabled. All that is added is that the exception will be logged in that case.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),\n          \n          \n            \n                            logger.warn(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502881161", "createdAt": "2020-10-11T08:01:03Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -104,22 +105,33 @@ public static void executeCommandLine(String... commandLine) {\n             } else if (process.waitFor(timeout.toMillis(), TimeUnit.MILLISECONDS)) {\n                 exitCode = process.exitValue();\n             } else {\n-                logger.warn(\"Timeout occurred when executing commandLine '{}'\", commandLine);\n+                logger.warn(\"Timeout occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n                 break cleanup;\n             }\n             if (exitCode == 0) {\n                 return outputFuture.get();\n             } else {\n-                logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n-                        errorFuture.get());\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n+                            errorFuture.get());\n+                }\n                 return null;\n             }\n         } catch (ExecutionException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e.getCause());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg4MTIwMQ==", "bodyText": "dito\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.debug(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);\n          \n          \n            \n                            logger.warn(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);", "url": "https://github.com/openhab/openhab-core/pull/1705#discussion_r502881201", "createdAt": "2020-10-11T08:01:17Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.core.io.net/src/main/java/org/openhab/core/io/net/exec/ExecUtil.java", "diffHunk": "@@ -104,22 +105,33 @@ public static void executeCommandLine(String... commandLine) {\n             } else if (process.waitFor(timeout.toMillis(), TimeUnit.MILLISECONDS)) {\n                 exitCode = process.exitValue();\n             } else {\n-                logger.warn(\"Timeout occurred when executing commandLine '{}'\", commandLine);\n+                logger.warn(\"Timeout occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n                 break cleanup;\n             }\n             if (exitCode == 0) {\n                 return outputFuture.get();\n             } else {\n-                logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n-                        errorFuture.get());\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"exit code '{}', result '{}', errors '{}'\", exitCode, outputFuture.get(),\n+                            errorFuture.get());\n+                }\n                 return null;\n             }\n         } catch (ExecutionException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e.getCause());\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine),\n+                        e.getCause());\n+            } else {\n+                logger.warn(\"Error occurred when executing commandLine '{}'\", Arrays.toString(commandLine));\n+            }\n         } catch (InterruptedException e) {\n-            logger.debug(\"commandLine '{}' was interrupted\", commandLine, e);\n+            logger.debug(\"commandLine '{}' was interrupted\", Arrays.toString(commandLine), e);\n         } catch (IOException e) {\n-            logger.warn(\"Error occurred when executing commandLine '{}'\", commandLine, e);\n+            if (logger.isDebugEnabled()) {\n+                logger.debug(\"Failed to execute commandLine '{}'\", Arrays.toString(commandLine), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37bd9abbdc992a0aa50f543569cddf5eaf7079b9"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad284c8ad8bf7584160567707a37f0d0a07d503", "author": {"user": null}, "url": "https://github.com/openhab/openhab-core/commit/1ad284c8ad8bf7584160567707a37f0d0a07d503", "committedDate": "2020-10-11T18:09:15Z", "message": "Change suggestions\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MjEzMjEz", "url": "https://github.com/openhab/openhab-core/pull/1705#pullrequestreview-506213213", "createdAt": "2020-10-11T20:19:01Z", "commit": {"oid": "1ad284c8ad8bf7584160567707a37f0d0a07d503"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4760, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}