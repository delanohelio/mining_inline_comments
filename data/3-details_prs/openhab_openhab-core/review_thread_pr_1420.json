{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMjQ1NjI4", "number": 1420, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMTo1MlrODyAIRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMjozOVrODyAJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzU3NTA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/AbstractResourceBundleProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMTo1MlrOGFypQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjoxNjoyOFrOGGBXYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTgyNA==", "bodyText": "This looks like a bug. How can fileExtensionStartIndex equals to -1 when we add 1 in the line before?\nWe should either do this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fileExtensionStartIndex == -1) {\n          \n          \n            \n                    if (fileName.lastIndexOf(\".\") == -1) {\n          \n      \n    \n    \n  \n\nOr add one later in `fileName.substring(fileExtensionStartIndex + 1);\nMaybe do it similar to AbstractFileProvider#getParserType().", "url": "https://github.com/openhab/openhab-core/pull/1420#discussion_r408725824", "createdAt": "2020-04-15T10:01:52Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/AbstractResourceBundleProvider.java", "diffHunk": "@@ -306,15 +306,15 @@ protected void putNewPortfolio(Vendor vendor, List<String> portfolio) {\n      */\n     protected String getParserType(URL url) {\n         String fileName = url.getPath();\n-        int fileExtesionStartIndex = fileName.lastIndexOf(\".\") + 1;\n-        if (fileExtesionStartIndex == -1) {\n+        int fileExtensionStartIndex = fileName.lastIndexOf(\".\") + 1;\n+        if (fileExtensionStartIndex == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f76537b932470bfcafa73edcc9cb3c45cd3885"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2NzAwOQ==", "bodyText": "I think you're right so it's fixed now. \ud83d\udc4d", "url": "https://github.com/openhab/openhab-core/pull/1420#discussion_r408967009", "createdAt": "2020-04-15T16:16:28Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/AbstractResourceBundleProvider.java", "diffHunk": "@@ -306,15 +306,15 @@ protected void putNewPortfolio(Vendor vendor, List<String> portfolio) {\n      */\n     protected String getParserType(URL url) {\n         String fileName = url.getPath();\n-        int fileExtesionStartIndex = fileName.lastIndexOf(\".\") + 1;\n-        if (fileExtesionStartIndex == -1) {\n+        int fileExtensionStartIndex = fileName.lastIndexOf(\".\") + 1;\n+        if (fileExtensionStartIndex == -1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNTgyNA=="}, "originalCommit": {"oid": "12f76537b932470bfcafa73edcc9cb3c45cd3885"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzU3Nzg3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/file/AbstractFileProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowMjozOVrOGFyq_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjoxNzo1OVrOGGBbJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjI3MA==", "bodyText": "Store fileName.lastIndexOf(\".\") in a local variable earlier and reuse it here.", "url": "https://github.com/openhab/openhab-core/pull/1420#discussion_r408726270", "createdAt": "2020-04-15T10:02:39Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/file/AbstractFileProvider.java", "diffHunk": "@@ -317,7 +317,7 @@ private String getParserType(URL url) {\n             return Parser.FORMAT_JSON;\n         }\n         String fileExtension = fileName.substring(fileName.lastIndexOf(\".\") + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f76537b932470bfcafa73edcc9cb3c45cd3885"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2Nzk3Mw==", "bodyText": "Done! And I threw the Elvis operator in the mix. ?:-)", "url": "https://github.com/openhab/openhab-core/pull/1420#discussion_r408967973", "createdAt": "2020-04-15T16:17:59Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/provider/file/AbstractFileProvider.java", "diffHunk": "@@ -317,7 +317,7 @@ private String getParserType(URL url) {\n             return Parser.FORMAT_JSON;\n         }\n         String fileExtension = fileName.substring(fileName.lastIndexOf(\".\") + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNjI3MA=="}, "originalCommit": {"oid": "12f76537b932470bfcafa73edcc9cb3c45cd3885"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3203, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}