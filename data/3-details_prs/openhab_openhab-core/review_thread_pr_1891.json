{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMDE2MTY0", "number": 1891, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDowMDoyNFrOFFMGjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTo0MjowMVrOFIIMlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTg1NDg3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDowMDoyNFrOIFkzXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjowMzowNFrOIJ41iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcxNjc2NA==", "bodyText": "A minor reminder for later refactoring: This looks like a potential candidate to be used as singleton.", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r542716764", "createdAt": "2020-12-14T20:00:24Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "diffHunk": "@@ -150,7 +150,7 @@ public String getAuthorizationUrl(@Nullable String redirectURI, @Nullable String\n             throw new OAuthException(\"Missing client ID\");\n         }\n \n-        OAuthConnector connector = new OAuthConnector(httpClientFactory);\n+        OAuthConnector connector = new OAuthConnector(httpClientFactory, persistedParams.deserializerClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e9053b924ef35d546f26518e3ad7e74deb87bf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzOTMwNw==", "bodyText": "A minor reminder for later refactoring: This looks like a potential candidate to be used as singleton.\n\nSorry, I'm afraid I did not get your point here", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r547239307", "createdAt": "2020-12-22T12:03:04Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "diffHunk": "@@ -150,7 +150,7 @@ public String getAuthorizationUrl(@Nullable String redirectURI, @Nullable String\n             throw new OAuthException(\"Missing client ID\");\n         }\n \n-        OAuthConnector connector = new OAuthConnector(httpClientFactory);\n+        OAuthConnector connector = new OAuthConnector(httpClientFactory, persistedParams.deserializerClassName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcxNjc2NA=="}, "originalCommit": {"oid": "19e9053b924ef35d546f26518e3ad7e74deb87bf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxNzY4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxOTo1NVrOIJ0HXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTo0NDo0OVrOIJ4YCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTk0OQ==", "bodyText": "Yes, this looks nice. Do we have to create a new instance here or can we use this?", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r547161949", "createdAt": "2020-12-22T09:19:55Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "diffHunk": "@@ -395,4 +397,17 @@ public boolean removeAccessTokenRefreshListener(AccessTokenRefreshListener liste\n     private String createNewState() {\n         return UUID.randomUUID().toString();\n     }\n+\n+    @Override\n+    public <T extends JsonDeserializer<?>> OAuthClientService withDeserializer(Class<T> deserializerClass) {\n+        OAuthClientServiceImpl clientService = new OAuthClientServiceImpl(handle, persistedParams.tokenExpiresInSeconds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e76d3a86ee70a00b402044e81590c1c222880ca"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIyMDE2Ng==", "bodyText": "I did opt to create a new instance to avoid any side effect regarding other parameter changed, it was the most straitforward path", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r547220166", "createdAt": "2020-12-22T11:18:11Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "diffHunk": "@@ -395,4 +397,17 @@ public boolean removeAccessTokenRefreshListener(AccessTokenRefreshListener liste\n     private String createNewState() {\n         return UUID.randomUUID().toString();\n     }\n+\n+    @Override\n+    public <T extends JsonDeserializer<?>> OAuthClientService withDeserializer(Class<T> deserializerClass) {\n+        OAuthClientServiceImpl clientService = new OAuthClientServiceImpl(handle, persistedParams.tokenExpiresInSeconds,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTk0OQ=="}, "originalCommit": {"oid": "8e76d3a86ee70a00b402044e81590c1c222880ca"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzMTc1Mg==", "bodyText": "Understood. Sounds reasonable.", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r547231752", "createdAt": "2020-12-22T11:44:49Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/OAuthClientServiceImpl.java", "diffHunk": "@@ -395,4 +397,17 @@ public boolean removeAccessTokenRefreshListener(AccessTokenRefreshListener liste\n     private String createNewState() {\n         return UUID.randomUUID().toString();\n     }\n+\n+    @Override\n+    public <T extends JsonDeserializer<?>> OAuthClientService withDeserializer(Class<T> deserializerClass) {\n+        OAuthClientServiceImpl clientService = new OAuthClientServiceImpl(handle, persistedParams.tokenExpiresInSeconds,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTk0OQ=="}, "originalCommit": {"oid": "8e76d3a86ee70a00b402044e81590c1c222880ca"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDY3MjIxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/PersistedParams.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTo0MjowMVrOIJ4TWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMTo0MjowMVrOIJ4TWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzMDU1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String deserializerClassName;\n          \n          \n            \n                @Nullable String deserializerClassName;", "url": "https://github.com/openhab/openhab-core/pull/1891#discussion_r547230555", "createdAt": "2020-12-22T11:42:01Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.auth.oauth2client/src/main/java/org/openhab/core/auth/oauth2client/internal/PersistedParams.java", "diffHunk": "@@ -32,6 +32,7 @@\n     String state;\n     String redirectUri;\n     int tokenExpiresInSeconds = 60;\n+    String deserializerClassName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e76d3a86ee70a00b402044e81590c1c222880ca"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3305, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}