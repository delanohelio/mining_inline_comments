{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNDEwNjg3", "number": 1514, "title": "[dsl] Model loading improvements", "bodyText": "Some further changes extracted from my work in #1451:\n\nremoved superfluous null checks\nimproved logging\nfixed bug that cause \"_tmp\" resources to be loaded (which are only internally temporarily created during model validation)\nadded ready marker after finishing loading a model type\nlet GenericItemProvider only start once at least one ItemFactory is available (I often had the effect in the IDE that items were not available as the file was loaded before the CoreItemFactory was available).\n\nSigned-off-by: Kai Kreuzer kai@openhab.org", "createdAt": "2020-06-07T21:47:25Z", "url": "https://github.com/openhab/openhab-core/pull/1514", "merged": true, "mergeCommit": {"oid": "e37c28cfc93d883d97b7e513d41a72f4243cacd6"}, "closed": true, "closedAt": "2020-06-09T07:37:47Z", "author": {"login": "kaikreuzer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpC8AmAH2gAyNDMwNDEwNjg3Ojg3NjQ5NmYwOTQwOWE4MzFkM2U5NGViZDEzMTgxZWQyMTFhZjkyNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpf_H_gFqTQyNjg2MjA4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "876496f09409a831d3e94ebd13181ed211af9257", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/876496f09409a831d3e94ebd13181ed211af9257", "committedDate": "2020-06-07T21:42:20Z", "message": "Model loading improvements\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/ca095b5d940543c0681482d197ad00c47d698cad", "committedDate": "2020-06-07T22:06:25Z", "message": "fixed test\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTEwNDk3", "url": "https://github.com/openhab/openhab-core/pull/1514#pullrequestreview-426110497", "createdAt": "2020-06-08T10:42:57Z", "commit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo0Mjo1N1rOGgYWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MDoyOVrOGgYkAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwNjUyNg==", "bodyText": "The FolderObserver already uses constructor injection? Can we use it for the ReadyService too?", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436606526", "createdAt": "2020-06-08T10:42:57Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java", "diffHunk": "@@ -60,6 +62,12 @@\n \n     /* the model repository is provided as a service */\n     private final ModelRepository modelRepository;\n+    private static final String READYMARKER_TYPE = \"dsl\";\n+\n+    @Reference\n+    /* default */ ReadyService readyService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYwODQ1MA==", "bodyText": "Combine nested ifs and consider new condition in method removeAllModelsOfType().", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436608450", "createdAt": "2020-06-08T10:46:56Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -203,8 +189,9 @@ public void reloadAllModelsOfType(final String modelType) {\n             // Make a copy to avoid ConcurrentModificationException\n             List<Resource> resourceListCopy = new ArrayList<>(resourceSet.getResources());\n             for (Resource resource : resourceListCopy) {\n-                if (resource != null && resource.getURI().lastSegment().contains(\".\") && resource.isLoaded()) {\n-                    if (modelType.equalsIgnoreCase(resource.getURI().fileExtension())) {\n+                if (resource.getURI().lastSegment().contains(\".\") && resource.isLoaded()) {\n+                    if (modelType.equalsIgnoreCase(resource.getURI().fileExtension())\n+                            && !resource.getURI().lastSegment().startsWith(\"tmp_\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMDA1MA==", "bodyText": "This is a nice improvement. With absence of these ugly nestings we can use a try-with-resources statement on the inputStream declaration and get rid of the finally introduced in #1423.", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r436610050", "createdAt": "2020-06-08T10:50:29Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,20 +98,18 @@ public ModelRepositoryImpl(final @Reference SafeEMF safeEmf) {\n \n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n+        logger.info(\"Loading model '{}'\", name);\n         Resource resource = null;\n         InputStream inputStream = null;\n         try {\n-            if (originalInputStream != null) {\n-                byte[] bytes = originalInputStream.readAllBytes();\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n-                }\n-                inputStream = new ByteArrayInputStream(bytes);\n+            byte[] bytes = originalInputStream.readAllBytes();\n+            String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n+            if (validationResult != null) {\n+                logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name, validationResult);\n+                removeModel(name);\n+                return false;\n             }\n+            inputStream = new ByteArrayInputStream(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca095b5d940543c0681482d197ad00c47d698cad"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/d11447e204ab268956b419b4ed06f000861d0315", "committedDate": "2020-06-08T19:23:56Z", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODYxODk5", "url": "https://github.com/openhab/openhab-core/pull/1514#pullrequestreview-426861899", "createdAt": "2020-06-09T07:32:45Z", "commit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzozMjo0NVrOGg8S_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzozMjo0NVrOGg8S_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE5NTUxNg==", "bodyText": "ftr: This is probably not necessary as the FolderObserver handles the passed InputStream (originalInputStream), but I do not think that it will hurt:\n\n  \n    \n      openhab-core/bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/folder/FolderObserver.java\n    \n    \n        Lines 233 to 238\n      in\n      b7ab807\n    \n    \n    \n    \n\n        \n          \n           try (InputStream inputStream = Files.newInputStream(file.toPath())) { \n        \n\n        \n          \n               nameFileMap.put(file.getName(), file); \n        \n\n        \n          \n               modelRepository.addOrRefreshModel(file.getName(), inputStream); \n        \n\n        \n          \n           } catch (IOException e) { \n        \n\n        \n          \n               logger.warn(\"Error while opening file during update: {}\", file.getAbsolutePath()); \n        \n\n        \n          \n           }", "url": "https://github.com/openhab/openhab-core/pull/1514#discussion_r437195516", "createdAt": "2020-06-09T07:32:45Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -98,20 +98,22 @@ public ModelRepositoryImpl(final @Reference SafeEMF safeEmf) {\n \n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n+        logger.info(\"Loading model '{}'\", name);\n         Resource resource = null;\n-        InputStream inputStream = null;\n-        try {\n-            if (originalInputStream != null) {\n-                byte[] bytes = originalInputStream.readAllBytes();\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n-                }\n-                inputStream = new ByteArrayInputStream(bytes);\n+        byte[] bytes = null;\n+        try (InputStream inputStream = originalInputStream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODYyMDgy", "url": "https://github.com/openhab/openhab-core/pull/1514#pullrequestreview-426862082", "createdAt": "2020-06-09T07:32:59Z", "commit": {"oid": "d11447e204ab268956b419b4ed06f000861d0315"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4821, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}