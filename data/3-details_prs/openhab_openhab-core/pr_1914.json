{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NTUzMTUx", "number": 1914, "title": "Implemented start level service", "bodyText": "This finally implements eclipse-archived/smarthome#1896, fixes a couple of issues that currently exist due to the unpredictable startup sequence and it should also improve the startup performance, since activities do not have to be done multiple times in order to deal with lazy loaded stuff.\nThis service combines different ReadyMarkers into a new start level ready marker and thus lets other services depend on those, without having to know about the single markers.\nThis brings an important decoupling, since the set of markers for a certain start level might depend on the individual set up-\nThe start level service is therefore configurable (see here, so that users have a chance to adapt the conditions upon a certain start level is reached.\nStart levels are defined as values between 0 and 100. They carry the following semantics:\n\n00 - OSGi framework has been started.\n10 - OSGi application start level has been reached, i.e. bundles are activated.\n20 - Model entities (items, things, links, persist config) have been loaded, both from db as well as files.\n30 - Item states have been restored from persistence service, where applicable.\n40 - Rules are loaded and parsed, both from db as well as dsl and script files.\n50 - Rule engine has executed all \"system started\" rules and is active.\n70 - User interface is up and running.\n80 - All things have been initialized.\n100 - Startup is fully complete.\n\nNote: Levels 70 and 80 are not yet implemented in this PR, but should be added at a later stage.\nWhile still being in a level <50, no events will be logged out anymore, which reduces the logs wrt \"item added\" and \"link added\" events tremendously.\nI have also further improvements in mind like automatically registering what bundles are installed and for which markers needs to be waited, so that there is less necessity to adapt the configuration, if anybody does not use a \"standard\" setup of openHAB. Note that for anybody using the normal distro and not removing any essential parts of it, there should be no need to configure anything with the current implementation.\nFixes #1637\nFixes #1777\nFixes #1734\nFixes #1823\nFixes #1808\nMight also fix #1365\nMight also fix #1829\nSigned-off-by: Kai Kreuzer kai@openhab.org", "createdAt": "2020-12-11T23:47:34Z", "url": "https://github.com/openhab/openhab-core/pull/1914", "merged": true, "mergeCommit": {"oid": "076ac3fe15d53e66b416ccf5c9057b52a29ed9c4"}, "closed": true, "closedAt": "2020-12-12T13:34:39Z", "author": {"login": "kaikreuzer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlQjgnAH2gAyNTM3NTUzMTUxOmRmOTJhNzQ4ODQwZmMwZjExYmRiYWJmNzAwM2ZlZmVkZGNjMGU5YTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlcow5AFqTU1MDc1NTQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df92a748840fc0f11bdbabf7003fefeddcc0e9a1", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/df92a748840fc0f11bdbabf7003fefeddcc0e9a1", "committedDate": "2020-12-11T23:29:42Z", "message": "Implemented start level service\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83737e464929f74f9adedb64028c5377050d4ca4", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/83737e464929f74f9adedb64028c5377050d4ca4", "committedDate": "2020-12-12T00:18:01Z", "message": "fixed some further itests\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ed24e1796a9f45ebc697eecc543a6e8a78b954", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/69ed24e1796a9f45ebc697eecc543a6e8a78b954", "committedDate": "2020-12-12T00:58:05Z", "message": "moved integration test\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "377b6b32c485d86c87095f0bb464fa8af88eeb62", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/377b6b32c485d86c87095f0bb464fa8af88eeb62", "committedDate": "2020-12-12T10:33:36Z", "message": "move test back\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzE0OTAw", "url": "https://github.com/openhab/openhab-core/pull/1914#pullrequestreview-550714900", "createdAt": "2020-12-12T12:11:39Z", "commit": {"oid": "377b6b32c485d86c87095f0bb464fa8af88eeb62"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjoxMTozOVrOIEeeUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjoxNDozM1rOIEef6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDQ5Nw==", "bodyText": "This seems like a schedule parameter left over:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        }, TimeUnit.MILLISECONDS));\n          \n          \n            \n                        }));", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541564497", "createdAt": "2020-12-12T12:11:39Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.automation/src/main/java/org/openhab/core/automation/internal/RuleEngineImpl.java", "diffHunk": "@@ -900,13 +895,13 @@ private void setStatus(String ruleUID, RuleStatusInfo newStatusInfo) {\n     protected void scheduleRuleInitialization(final String rUID) {\n         Future<?> f = scheduleTasks.get(rUID);\n         if (f == null || f.isDone()) {\n-            scheduleTasks.put(rUID, getScheduledExecutor().schedule(() -> {\n+            scheduleTasks.put(rUID, getScheduledExecutor().submit(() -> {\n                 final WrappedRule managedRule = getManagedRule(rUID);\n                 if (managedRule == null) {\n                     return;\n                 }\n                 setRule(managedRule);\n-            }, scheduleReinitializationDelay, TimeUnit.MILLISECONDS));\n+            }, TimeUnit.MILLISECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377b6b32c485d86c87095f0bb464fa8af88eeb62"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2NDkwNA==", "bodyText": "Did you also look into using constructor injection for injecting the ReadyService into the registries?", "url": "https://github.com/openhab/openhab-core/pull/1914#discussion_r541564904", "createdAt": "2020-12-12T12:14:33Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/ItemRegistryImpl.java", "diffHunk": "@@ -280,6 +281,17 @@ protected void unsetEventPublisher(EventPublisher eventPublisher) {\n         }\n     }\n \n+    @Override\n+    @Reference\n+    protected void setReadyService(ReadyService readyService) {\n+        super.setReadyService(readyService);\n+    }\n+\n+    @Override\n+    protected void unsetReadyService(ReadyService readyService) {\n+        super.unsetReadyService(readyService);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "377b6b32c485d86c87095f0bb464fa8af88eeb62"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8dd5e5fa28cb572f6d3a1ca91470c4d706af32b", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/b8dd5e5fa28cb572f6d3a1ca91470c4d706af32b", "committedDate": "2020-12-12T12:46:52Z", "message": "addressed review comment\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8034f5302cc1a5b6d9b1cf2d726cb9b0b2512732", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/8034f5302cc1a5b6d9b1cf2d726cb9b0b2512732", "committedDate": "2020-12-12T12:56:01Z", "message": "fixed rule model tests\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzU1NDgz", "url": "https://github.com/openhab/openhab-core/pull/1914#pullrequestreview-550755483", "createdAt": "2020-12-12T13:34:18Z", "commit": {"oid": "8034f5302cc1a5b6d9b1cf2d726cb9b0b2512732"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4608, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}