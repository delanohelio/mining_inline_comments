{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTQwMzY1", "number": 1617, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MDozOVrOEf708A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MTo0NlrOEf72pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTIxNTIwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MDozOVrOHMhDvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo0Mzo1OFrOHNI2ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NjU5MQ==", "bodyText": "At the time we use String.strip() it might be better to check for isBlank() here.", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r482886591", "createdAt": "2020-09-03T10:50:39Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUzNjI0NQ==", "bodyText": "It would prevent warnings when there is only whitespace between commas: \"addon1, ,addon2\"", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r483536245", "createdAt": "2020-09-04T10:38:38Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NjU5MQ=="}, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUzODEzNQ==", "bodyText": "Though the whitespace would probably cause the new check (service.getFeature(id) != null) to return null \ud83d\ude09", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r483538135", "createdAt": "2020-09-04T10:42:57Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NjU5MQ=="}, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUzODU3MA==", "bodyText": "But it will still trigger the warning logic:\n                            logger.warn(\"The {} add-on '{}' does not exist - ignoring it.\", type, addon.strip());", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r483538570", "createdAt": "2020-09-04T10:43:58Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NjU5MQ=="}, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTIxOTU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MTo0NlrOHMhGMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDozNjoxMlrOHNIpeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NzIxNw==", "bodyText": "Should we use the combination of isBlank() / strip() in this loop too?", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r482887217", "createdAt": "2020-09-03T10:51:46Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {\n-                            String id = PREFIX + type + \"-\" + addon.trim();\n-                            targetAddons.add(id);\n-                            if (!isInstalled(features, id)) {\n-                                installAddons.add(id);\n+                            String id = PREFIX + type + \"-\" + addon.strip();\n+                            if (service.getFeature(id) != null) {\n+                                targetAddons.add(id);\n+                                if (!isInstalled(features, id)) {\n+                                    installAddons.add(id);\n+                                }\n+                            } else {\n+                                logger.warn(\"The {} add-on '{}' does not exist - ignoring it.\", type, addon.strip());\n                             }\n                         }\n                     }\n \n-                    // we collect all installed addons\n+                    // we collect all installed add-ons\n                     for (String addon : getAllAddonsOfType(service, type)) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUzNTIyNQ==", "bodyText": "I think it would be better to move any such checks to getAllAddonsOfType so it doesn't return unusable add-ons.", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r483535225", "createdAt": "2020-09-04T10:36:12Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {\n-                            String id = PREFIX + type + \"-\" + addon.trim();\n-                            targetAddons.add(id);\n-                            if (!isInstalled(features, id)) {\n-                                installAddons.add(id);\n+                            String id = PREFIX + type + \"-\" + addon.strip();\n+                            if (service.getFeature(id) != null) {\n+                                targetAddons.add(id);\n+                                if (!isInstalled(features, id)) {\n+                                    installAddons.add(id);\n+                                }\n+                            } else {\n+                                logger.warn(\"The {} add-on '{}' does not exist - ignoring it.\", type, addon.strip());\n                             }\n                         }\n                     }\n \n-                    // we collect all installed addons\n+                    // we collect all installed add-ons\n                     for (String addon : getAllAddonsOfType(service, type)) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NzIxNw=="}, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3349, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}