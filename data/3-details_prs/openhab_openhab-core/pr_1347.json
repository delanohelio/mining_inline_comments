{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzM3MDA0", "number": 1347, "title": "Units for reactive and apparent power", "bodyText": "Dear  openHAB developers,\nthis PR tries to fix some minor issues related to the units of reactive and apparent power.\nkvar existed already but I believe it was incorrectly defined. Also var (1000 var = 1 kvar) was missing from the list of units.\nUnit for apparent power (VA) and it's common derivates were missing entirely.\nThese units are used sometimes by smart electricity meters and solar inverters.\nI hope you will like these changes.", "createdAt": "2020-01-30T23:20:05Z", "url": "https://github.com/openhab/openhab-core/pull/1347", "merged": true, "mergeCommit": {"oid": "487db7e7eaca56ca81f29ec3212ef0f6c8652ef2"}, "closed": true, "closedAt": "2020-02-01T20:47:20Z", "author": {"login": "mrbig"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_iyV3gH2gAyMzY5MzM3MDA0OjM0MWU3OTllZDdmODU1OWY1NTM3ZTgxNjAyMDA5OTllZTBmZjI0Njg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAKA2uAFqTM1MTkwMzgwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "341e799ed7f8559f5537e8160200999ee0ff2468", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/341e799ed7f8559f5537e8160200999ee0ff2468", "committedDate": "2020-01-30T23:03:55Z", "message": "[core] units var/varh/kvar/kvarh fixed\n\n* var and varh were missing\n* var is basically an alternate form of WATT\n* kvarh was incorrectly marked as a division between kvar and hour\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzM2Njg0", "url": "https://github.com/openhab/openhab-core/pull/1347#pullrequestreview-351736684", "createdAt": "2020-01-31T19:46:54Z", "commit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0Njo1NVrOFkWFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0ODo0N1rOFkWISg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDgwMA==", "bodyText": "I am still wondering why we need to add units with a metric prefix. Doesn't KILO(VOLT_AMPERE) in a rule or binding implementation do the job at all?\nOkay, KILOVAR and KILOVAR_HOUR where available before, e should keep them.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654800", "createdAt": "2020-01-31T19:46:55Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654848", "createdAt": "2020-01-31T19:47:01Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n+    public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n+            Energy.class);\n+    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg==", "bodyText": "Can you align the unit test to the others? One assertion for getSymbol() and one assertion for toString() for each unit.\n        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR.toString(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"varh\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));\n\nAdditionally dose it make sense to add a test for the comparison to other units of the dimension power (e.g. (1 var = 1 W)?", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373655626", "createdAt": "2020-01-31T19:48:47Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/502798a4b7afd976ce61318e23b193afe961683d", "committedDate": "2020-01-30T23:11:50Z", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}, "afterCommit": {"oid": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/b54babe9294cb80ac8f914a8873bcb79773a05fb", "committedDate": "2020-01-31T20:58:20Z", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "committedDate": "2020-02-01T12:35:50Z", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b54babe9294cb80ac8f914a8873bcb79773a05fb", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/b54babe9294cb80ac8f914a8873bcb79773a05fb", "committedDate": "2020-01-31T20:58:20Z", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}, "afterCommit": {"oid": "4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "author": {"user": {"login": "mrbig", "name": "Nagy Attila G\u00e1bor"}}, "url": "https://github.com/openhab/openhab-core/commit/4ba0c29118e53e7b23bf75e8fa827020b0270dc8", "committedDate": "2020-02-01T12:35:50Z", "message": "[core] Volt-Ampere added to the units\n\nThis unit for apparent power in an electrical circuit. Useful for smart meters\nand solar inverters.\n\nSigned-off-by: Nagy Attila Gabor <mrbig@sneaker.hu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTAzODA2", "url": "https://github.com/openhab/openhab-core/pull/1347#pullrequestreview-351903806", "createdAt": "2020-02-01T20:46:04Z", "commit": {"oid": "4ba0c29118e53e7b23bf75e8fa827020b0270dc8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4537, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}