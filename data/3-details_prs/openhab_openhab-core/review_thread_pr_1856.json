{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDE2OTQy", "number": 1856, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMjo0MDoxMVrOE-Y9Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMjo0MDoxMVrOE-Y9Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzODU2MDQzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMjo0MDoxMVrOH7jKmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxNDoyNTowNFrOH7j8hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwNDE4Ng==", "bodyText": "@kaikreuzer does markers need to be thread safe as well?", "url": "https://github.com/openhab/openhab-core/pull/1856#discussion_r532204186", "createdAt": "2020-11-29T12:40:11Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java", "diffHunk": "@@ -88,9 +88,9 @@\n \n     private final Logger logger = LoggerFactory.getLogger(DSLRuleProvider.class);\n     private final Collection<ProviderChangeListener<Rule>> listeners = new ArrayList<>();\n-    private final Map<String, Rule> rules = new HashMap<>();\n-    private final Map<String, IEvaluationContext> contexts = new HashMap<>();\n-    private final Map<String, XExpression> xExpressions = new HashMap<>();\n+    private final Map<String, Rule> rules = new ConcurrentHashMap<>();\n+    private final Map<String, IEvaluationContext> contexts = new ConcurrentHashMap<>();\n+    private final Map<String, XExpression> xExpressions = new ConcurrentHashMap<>();\n     private int triggerId = 0;\n     private Set<String> markers = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "769f7c54d65004fa1a55eb58515f949f874031b3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxNjk2Nw==", "bodyText": "No, afaik this method is called single threaded.", "url": "https://github.com/openhab/openhab-core/pull/1856#discussion_r532216967", "createdAt": "2020-11-29T14:25:04Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.core.model.rule.runtime/src/org/openhab/core/model/rule/runtime/internal/DSLRuleProvider.java", "diffHunk": "@@ -88,9 +88,9 @@\n \n     private final Logger logger = LoggerFactory.getLogger(DSLRuleProvider.class);\n     private final Collection<ProviderChangeListener<Rule>> listeners = new ArrayList<>();\n-    private final Map<String, Rule> rules = new HashMap<>();\n-    private final Map<String, IEvaluationContext> contexts = new HashMap<>();\n-    private final Map<String, XExpression> xExpressions = new HashMap<>();\n+    private final Map<String, Rule> rules = new ConcurrentHashMap<>();\n+    private final Map<String, IEvaluationContext> contexts = new ConcurrentHashMap<>();\n+    private final Map<String, XExpression> xExpressions = new ConcurrentHashMap<>();\n     private int triggerId = 0;\n     private Set<String> markers = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwNDE4Ng=="}, "originalCommit": {"oid": "769f7c54d65004fa1a55eb58515f949f874031b3"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3292, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}