{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzM3MDA0", "number": 1347, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0Njo1NVrODcVwtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0ODo0N1rODcVyug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDQzMjUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0Njo1NVrOFkWFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDozMzoxNlrOFkXM8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDgwMA==", "bodyText": "I am still wondering why we need to add units with a metric prefix. Doesn't KILO(VOLT_AMPERE) in a rule or binding implementation do the job at all?\nOkay, KILOVAR and KILOVAR_HOUR where available before, e should keep them.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654800", "createdAt": "2020-01-31T19:46:55Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3MzIwMA==", "bodyText": "Here I did not want to break any already existing bundles, so I've kept them here.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373673200", "createdAt": "2020-01-31T20:33:16Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDgwMA=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDQzMjg0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0NzowMVrOFkWFQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMDo1ODo1MVrOFkXxRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373654848", "createdAt": "2020-01-31T19:47:01Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n+    public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n+            Energy.class);\n+    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3NzI5NA==", "bodyText": "I will remove the kilo, I'm absolutely fine with that.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373677294", "createdAt": "2020-01-31T20:44:18Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n+    public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n+            Energy.class);\n+    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MjUwMQ==", "bodyText": "removed.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373682501", "createdAt": "2020-01-31T20:58:51Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/unit/SmartHomeUnits.java", "diffHunk": "@@ -122,9 +122,16 @@\n     public static final Unit<Energy> WATT_HOUR = addUnit(new ProductUnit<>(Units.WATT.multiply(Units.HOUR)));\n     public static final Unit<Energy> KILOWATT_HOUR = addUnit(MetricPrefix.KILO(WATT_HOUR));\n     public static final Unit<Energy> MEGAWATT_HOUR = addUnit(MetricPrefix.MEGA(WATT_HOUR));\n-    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(new BaseUnit<Power>(\"var\")));\n-    public static final Unit<Energy> KILOVAR_HOUR = addUnit(new ProductUnit<>(KILOVAR.divide(Units.HOUR)),\n+    public static final Unit<Power> VAR = addUnit(new AlternateUnit<Power>(Units.WATT, \"var\"));\n+    public static final Unit<Power> KILOVAR = addUnit(MetricPrefix.KILO(VAR));\n+    public static final Unit<Energy> VAR_HOUR = addUnit(new ProductUnit<>(VAR.multiply(Units.HOUR)),\n             Energy.class);\n+    public static final Unit<Energy> KILOVAR_HOUR = addUnit(MetricPrefix.KILO(VAR_HOUR));\n+    public static final Unit<Power> VOLT_AMPERE = addUnit(new AlternateUnit<Power>(Units.WATT, \"VA\"));\n+    public static final Unit<Power> KILOVOLT_AMPERE = addUnit(MetricPrefix.KILO(VOLT_AMPERE));\n+    public static final Unit<Energy> VOLT_AMPERE_HOUR = addUnit(new ProductUnit<>(VOLT_AMPERE.multiply(Units.HOUR)),\n+            Energy.class);\n+    public static final Unit<Energy> KILOVOLT_AMPERE_HOUR = addUnit(MetricPrefix.KILO(VOLT_AMPERE_HOUR));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NDg0OA=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDQzNzcwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0ODo0N1rOFkWISg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxMjozNjo0M1rOFkdl1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg==", "bodyText": "Can you align the unit test to the others? One assertion for getSymbol() and one assertion for toString() for each unit.\n        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR.toString(), is(\"var\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"varh\"));\n        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));\n\nAdditionally dose it make sense to add a test for the comparison to other units of the dimension power (e.g. (1 var = 1 W)?", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373655626", "createdAt": "2020-01-31T19:48:47Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MTMwNg==", "bodyText": "There is a problem with this check:\nassertThat(SmartHomeUnits.VAR_HOUR.getSymbol(), is(\"varh\"));\nNamely, that ProductUnit does not calculate the symbol propert when there are multiple units. I'm not sure why is it so, but there's a fixme in the sourcecode: https://github.com/unitsofmeasurement/uom-se/blob/master/src/main/java/tec/uom/se/unit/ProductUnit.java#L111\n\nAdditionally dose it make sense to add a test for the comparison to other units of the dimension power (e.g. (1 var = 1 W)?\n\nI'm uncertain about that. Wikipedia says: \"The volt-ampere is dimensionally equivalent to the watt (in SI units, 1 VA = 1 N m A-1 s -1 A = 1 N m s -1 = 1 J s -1 = 1 W).\" But as I understand there's no such thing that we convert from var to watts because you will measure different things in W/VA/var. See: https://en.wikipedia.org/wiki/Volt-ampere\nHow should such a test look like in your opinion?", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373681306", "createdAt": "2020-01-31T20:55:49Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzAzNA==", "bodyText": "note: I've pushed a version where I've entered the getSymbol() checks, but commented them out, because they now break the tests.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373683034", "createdAt": "2020-01-31T21:00:23Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NzAyNw==", "bodyText": "ProductUnit does not calculate the symbol\n\nWe can open an issue in https://github.com/unitsofmeasurement/uom-se/issues and ask them to fix it \ud83d\ude09.\n\nHow should such a test look like in your opinion?\n\nI did my research on German Wikipedia. I have the feeling there is a mistake about the formular on it compared to your link. Thus it does not make sense to introduce further tests.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373767027", "createdAt": "2020-02-01T08:41:10Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2ODc4MA==", "bodyText": "ProductUnit does not calculate the symbol\n\nWe can open an issue in https://github.com/unitsofmeasurement/uom-se/issues and ask them to fix it .\n\nDid some research and it looks like the do not have the intention to fix this: unitsofmeasurement/uom-se#184\nThe preferred way is to use the toString() unless dealing with a specific BaseUnit.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373768780", "createdAt": "2020-02-01T09:25:37Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3MDQ5NA==", "bodyText": "As I understand now the symbol property means that a unit has a symbol directly attached to it. For derived units this should be null, and toString should implement the display of the derived symbol.\nThe test complying with this convertion should look like this:\nassertNull(SmartHomeUnits.VAR_HOUR.getSymbol());\n@cweitkamp  please let me know if you would like me to change the tests this way.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373770494", "createdAt": "2020-02-01T09:50:05Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3NDQyMg==", "bodyText": "Okay, I see. Thanks for the research. We should keep the toString() tests and omit the getSymbol() tests for those units.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373774422", "createdAt": "2020-02-01T11:15:10Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3Nzg3Ng==", "bodyText": "Thank you, updated the code.", "url": "https://github.com/openhab/openhab-core/pull/1347#discussion_r373777876", "createdAt": "2020-02-01T12:36:43Z", "author": {"login": "mrbig"}, "path": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/unit/SmartHomeUnitsTest.java", "diffHunk": "@@ -168,6 +168,40 @@ public void testKnotUnitSymbol() {\n         assertThat(SmartHomeUnits.KNOT.getSymbol(), is(\"kn\"));\n         assertThat(SmartHomeUnits.KNOT.toString(), is(\"kn\"));\n     }\n+    \n+    @Test\n+    public void testVarUnitSymbol() {\n+        assertThat(SmartHomeUnits.VAR.getSymbol(), is(\"var\"));\n+        assertThat(SmartHomeUnits.VAR_HOUR.toString(), is(\"varh\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1NTYyNg=="}, "originalCommit": {"oid": "502798a4b7afd976ce61318e23b193afe961683d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3144, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}