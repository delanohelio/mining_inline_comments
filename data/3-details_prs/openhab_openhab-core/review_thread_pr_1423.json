{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDE3NjMw", "number": 1423, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTo0NjozN1rOD078qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTo0NjozN1rOD078qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODM0NzMxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTo0NjozN1rOGKILyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzoyOTowMVrOGf3FvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3MzAzMg==", "bodyText": "I'm OK with the changes, but this change will probably not fix memory leaks since the close method of a ByteArrayInputStream doesn't do anything:\n    /**\n     * Closing a {@code ByteArrayInputStream} has no effect. The methods in\n     * this class can be called after the stream has been closed without\n     * generating an {@code IOException}.\n     */\n    public void close() throws IOException {\n    }\nIt's just an InputStream backed by a byte array that doesn't hold any other resources besides the array and a few variables. It doesn't hurt to always use try-with-resources to prevent issues, but it's only really required for a few Stream implementations.", "url": "https://github.com/openhab/openhab-core/pull/1423#discussion_r413273032", "createdAt": "2020-04-22T19:46:37Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -96,16 +100,18 @@ public EObject getModel(String name) {\n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n         Resource resource = null;\n+        InputStream inputStream = null;\n         try {\n-            InputStream inputStream = null;\n             if (originalInputStream != null) {\n                 byte[] bytes = IOUtils.toByteArray(originalInputStream);\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n+                try (InputStream validationStream = new ByteArrayInputStream(bytes)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bdb15a03202381c37502ceb8139f346ef851d8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2MTYyOA==", "bodyText": "I removed the try-with-resources statement and rebased the branch.", "url": "https://github.com/openhab/openhab-core/pull/1423#discussion_r436061628", "createdAt": "2020-06-05T17:29:01Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.model.core/src/main/java/org/openhab/core/model/core/internal/ModelRepositoryImpl.java", "diffHunk": "@@ -96,16 +100,18 @@ public EObject getModel(String name) {\n     @Override\n     public boolean addOrRefreshModel(String name, final InputStream originalInputStream) {\n         Resource resource = null;\n+        InputStream inputStream = null;\n         try {\n-            InputStream inputStream = null;\n             if (originalInputStream != null) {\n                 byte[] bytes = IOUtils.toByteArray(originalInputStream);\n-                String validationResult = validateModel(name, new ByteArrayInputStream(bytes));\n-                if (validationResult != null) {\n-                    logger.warn(\"Configuration model '{}' has errors, therefore ignoring it: {}\", name,\n-                            validationResult);\n-                    removeModel(name);\n-                    return false;\n+                try (InputStream validationStream = new ByteArrayInputStream(bytes)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3MzAzMg=="}, "originalCommit": {"oid": "a8bdb15a03202381c37502ceb8139f346ef851d8"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3209, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}