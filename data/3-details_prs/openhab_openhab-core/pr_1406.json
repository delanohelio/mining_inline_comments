{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MTU4ODc2", "number": 1406, "title": "Fix concurrency issue in state update", "bodyText": "Fixes #1373\nSigned-off-by: Jan N. Klug jan.n.klug@rub.de", "createdAt": "2020-04-05T16:34:24Z", "url": "https://github.com/openhab/openhab-core/pull/1406", "merged": true, "mergeCommit": {"oid": "70b9355d08511d2e5d6b4e1812dc6cea514606ce"}, "closed": true, "closedAt": "2020-04-08T17:54:14Z", "author": {"login": "J-N-K"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUsw2igH2gAyMzk5MTU4ODc2Ojg2NzQ0ZDBjYzBmNTQ5Yjc0ZGY4N2M5OGVlMjdlODI4MGE1OTVmZWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVrtUzgFqTM5MDIwMTI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "86744d0cc0f549b74df87c98ee27e8280a595fee", "author": {"user": {"login": "J-N-K", "name": null}}, "url": "https://github.com/openhab/openhab-core/commit/86744d0cc0f549b74df87c98ee27e8280a595fee", "committedDate": "2020-04-05T16:33:45Z", "message": "Fix concurrency issue in state update\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODU1OTIz", "url": "https://github.com/openhab/openhab-core/pull/1406#pullrequestreview-387855923", "createdAt": "2020-04-05T20:08:04Z", "commit": {"oid": "86744d0cc0f549b74df87c98ee27e8280a595fee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDowODowNVrOGBC-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQyMDowODowNVrOGBC-kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1MDU0NA==", "bodyText": "Minor point - I assume that this should say -:\nfailed comparing oldState '{}' to newState '{}' during state update of item\n\nor\nfailed comparing oldState '{}' to newState '{}' while updating state of item\n\nor something similar - basically the \"about\" doesn't seem right.\n(I told you it was minor - sorry for being pick :) ).", "url": "https://github.com/openhab/openhab-core/pull/1406#discussion_r403750544", "createdAt": "2020-04-05T20:08:05Z", "author": {"login": "cdjackson"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java", "diffHunk": "@@ -251,18 +251,23 @@ protected void notifyListeners(final State oldState, final State newState) {\n         Set<StateChangeListener> clonedListeners = null;\n         clonedListeners = new CopyOnWriteArraySet<>(listeners);\n         ExecutorService pool = ThreadPoolManager.getPool(ITEM_THREADPOOLNAME);\n-        for (final StateChangeListener listener : clonedListeners) {\n-            pool.execute(() -> {\n-                try {\n-                    listener.stateUpdated(GenericItem.this, newState);\n-                    if (newState != null && !newState.equals(oldState)) {\n-                        listener.stateChanged(GenericItem.this, oldState, newState);\n+        try {\n+            final boolean stateChanged = newState != null && !newState.equals(oldState);\n+            clonedListeners.forEach(listener ->\n+                pool.execute(() -> {\n+                    try {\n+                        listener.stateUpdated(GenericItem.this, newState);\n+                        if (stateChanged) {\n+                            listener.stateChanged(GenericItem.this, oldState, newState);\n+                        }\n+                    } catch (Exception e) {\n+                        logger.warn(\"failed notifying listener '{}' about state update of item {}: {}\", listener,\n+                                GenericItem.this.getName(), e.getMessage(), e);\n                     }\n-                } catch (Exception e) {\n-                    logger.warn(\"failed notifying listener '{}' about state update of item {}: {}\", listener,\n-                            GenericItem.this.getName(), e.getMessage(), e);\n-                }\n-            });\n+                }));\n+        } catch (Exception e) {\n+            logger.warn(\"failed comparing oldState '{}' to newState '{}' about state update of item {}: {}\", oldState,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86744d0cc0f549b74df87c98ee27e8280a595fee"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODUzMzk0", "url": "https://github.com/openhab/openhab-core/pull/1406#pullrequestreview-387853394", "createdAt": "2020-04-05T19:40:52Z", "commit": {"oid": "86744d0cc0f549b74df87c98ee27e8280a595fee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOTo0MDo1M1rOGBCy8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOTo0MDo1M1rOGBCy8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NzU2OA==", "bodyText": "Do we really have to catch a base Exception here. Or is a more specific one possible (e.g. IAE thrown by the compareTo() method).", "url": "https://github.com/openhab/openhab-core/pull/1406#discussion_r403747568", "createdAt": "2020-04-05T19:40:53Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core/src/main/java/org/openhab/core/items/GenericItem.java", "diffHunk": "@@ -251,18 +251,23 @@ protected void notifyListeners(final State oldState, final State newState) {\n         Set<StateChangeListener> clonedListeners = null;\n         clonedListeners = new CopyOnWriteArraySet<>(listeners);\n         ExecutorService pool = ThreadPoolManager.getPool(ITEM_THREADPOOLNAME);\n-        for (final StateChangeListener listener : clonedListeners) {\n-            pool.execute(() -> {\n-                try {\n-                    listener.stateUpdated(GenericItem.this, newState);\n-                    if (newState != null && !newState.equals(oldState)) {\n-                        listener.stateChanged(GenericItem.this, oldState, newState);\n+        try {\n+            final boolean stateChanged = newState != null && !newState.equals(oldState);\n+            clonedListeners.forEach(listener ->\n+                pool.execute(() -> {\n+                    try {\n+                        listener.stateUpdated(GenericItem.this, newState);\n+                        if (stateChanged) {\n+                            listener.stateChanged(GenericItem.this, oldState, newState);\n+                        }\n+                    } catch (Exception e) {\n+                        logger.warn(\"failed notifying listener '{}' about state update of item {}: {}\", listener,\n+                                GenericItem.this.getName(), e.getMessage(), e);\n                     }\n-                } catch (Exception e) {\n-                    logger.warn(\"failed notifying listener '{}' about state update of item {}: {}\", listener,\n-                            GenericItem.this.getName(), e.getMessage(), e);\n-                }\n-            });\n+                }));\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86744d0cc0f549b74df87c98ee27e8280a595fee"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31de23f71f7da7647d0aaa88b65d5632518772d8", "author": {"user": {"login": "J-N-K", "name": null}}, "url": "https://github.com/openhab/openhab-core/commit/31de23f71f7da7647d0aaa88b65d5632518772d8", "committedDate": "2020-04-06T16:27:46Z", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjAxMjkz", "url": "https://github.com/openhab/openhab-core/pull/1406#pullrequestreview-390201293", "createdAt": "2020-04-08T17:53:55Z", "commit": {"oid": "31de23f71f7da7647d0aaa88b65d5632518772d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4570, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}