{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjM0NjU5", "number": 1799, "title": "[automation] Create Nashorn script engines with the proper class loader", "bodyText": "This should fix the issue reported here:\nhttps://community.openhab.org/t/openhab-3-0-milestone-2-discussion/107564/8\nwhere the Nashorn script engine would be created with the\ncurrent thread's class loader, causing JS code like this:\nvar Log = Java.type(\"org.openhab.core.model.script.actions.Log\");\nLog.logError(\"Experiments\", \"This is an OH error log\");\nLog.logWarn(\"Experiments\", \"This is an OH warn log\");\nLog.logInfo(\"Experiments\", \"This is an OH info log\");\nLog.logDebug(\"Experiments\", \"This is an OH debug log\");\n\nto run fine when the rule was triggered but fail to find the Log\nclass when run from the REST API's /rest/rules/{ruleUID}/runnow,\nbecause in that case the generic createScriptEngine implementation\nwould return script engines using the JAX-RS class loader as the\n\"app\" class loader.\nNote:\nWe also have an opportunity to restrict which classes are exposed\nto the script with a ClassFilter to a specific set:\nhttps://docs.oracle.com/javase/8/docs/jdk/api/nashorn/jdk/nashorn/api/scripting/NashornScriptEngineFactory.html#getScriptEngine-java.lang.String:A-java.lang.ClassLoader-jdk.nashorn.api.scripting.ClassFilter-\nThis could prove useful to mitigate code execution vulnerabilities,\nas the script code is modifiable remotely.\nSigned-off-by: Yannick Schaus github@schaus.net", "createdAt": "2020-11-05T17:48:14Z", "url": "https://github.com/openhab/openhab-core/pull/1799", "merged": true, "mergeCommit": {"oid": "4e045204acfda6c53055bc25db52e831d337fc55"}, "closed": true, "closedAt": "2020-11-14T14:17:34Z", "author": {"login": "ghys"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZmDrSgH2gAyNTE2MjM0NjU5OjU4ZjJjYjVjYmQ1YjQzYWMzZGRhZWE2NDI4M2E5OTQwNmM2MjMzNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdccdcYgFqTUzMDU4MDc5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "58f2cb5cbd5b43ac3ddaea64283a99406c623350", "author": {"user": {"login": "ghys", "name": "Yannick Schaus"}}, "url": "https://github.com/openhab/openhab-core/commit/58f2cb5cbd5b43ac3ddaea64283a99406c623350", "committedDate": "2020-11-05T17:45:45Z", "message": "[automation] Create Nashorn script engines with the proper class loader\n\nThis should fix the issue reported here:\nhttps://community.openhab.org/t/openhab-3-0-milestone-2-discussion/107564/8\n\nwhere the Nashorn script engine would be created with the\ncurrent thread's class loader, causing JS code like this:\n```\nvar Log = Java.type(\"org.openhab.core.model.script.actions.Log\");\nLog.logError(\"Experiments\", \"This is an OH error log\");\nLog.logWarn(\"Experiments\", \"This is an OH warn log\");\nLog.logInfo(\"Experiments\", \"This is an OH info log\");\nLog.logDebug(\"Experiments\", \"This is an OH debug log\");\n```\nto run fine when the rule was triggered but fail to find the Log\nclass when run from the REST API's `/rest/rules/{ruleUID}/runnow`,\nbecause in that case the generic createScriptEngine implementation\nwould return script engines using the JAX-RS class loader as the\n\"app\" class loader.\n\nNote:\nWe also have an opportunity to restrict which classes are exposed\nto the script with a ClassFilter to a specific set:\nhttps://docs.oracle.com/javase/8/docs/jdk/api/nashorn/jdk/nashorn/api/scripting/NashornScriptEngineFactory.html#getScriptEngine-java.lang.String:A-java.lang.ClassLoader-jdk.nashorn.api.scripting.ClassFilter-\nThis could prove useful to mitigate code execution vulnerabilities,\nas the script code is modifiable remotely.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d074e0fc5dfd5fbaeacad52a99f12fbf370d2dda", "author": {"user": {"login": "ghys", "name": "Yannick Schaus"}}, "url": "https://github.com/openhab/openhab-core/commit/d074e0fc5dfd5fbaeacad52a99f12fbf370d2dda", "committedDate": "2020-11-05T18:42:42Z", "message": "Use reflection to instantiate the NashornScriptEngineFactory\n\nThis will fail gracefully when the Nashorn engine is not present.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f8bfdd041ce6767f7fd030fc176c8169f9a5433", "author": {"user": {"login": "ghys", "name": "Yannick Schaus"}}, "url": "https://github.com/openhab/openhab-core/commit/5f8bfdd041ce6767f7fd030fc176c8169f9a5433", "committedDate": "2020-11-05T19:17:50Z", "message": "Get the NashornScriptEngineFactory from the ScriptEngineManager\n\nStill use reflection to call the getScriptEngine variant with\nthe explicit ClassLoader.\n\nSigned-off-by: Yannick Schaus <github@schaus.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTkwOTY0", "url": "https://github.com/openhab/openhab-core/pull/1799#pullrequestreview-524990964", "createdAt": "2020-11-06T09:35:37Z", "commit": {"oid": "5f8bfdd041ce6767f7fd030fc176c8169f9a5433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTozNTozN1rOHumqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTozNTozN1rOHumqLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyOTkzNA==", "bodyText": "If the classloader that creates the component is also usable, you might be able to get rid of this reflection and reuse the same NashornScriptEngineFactory in createScriptEngine like I did with Groovy by just assigning the NashornScriptEngineFactory to a field.\nSee: GroovyScriptEngineFactory", "url": "https://github.com/openhab/openhab-core/pull/1799#discussion_r518629934", "createdAt": "2020-11-06T09:35:37Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/NashornScriptEngineFactory.java", "diffHunk": "@@ -72,4 +80,25 @@ public void scopeValues(ScriptEngine scriptEngine, Map<String, Object> scopeValu\n             logger.error(\"ScriptException while importing scope: {}\", ex.getMessage());\n         }\n     }\n+\n+    @Override\n+    public @Nullable ScriptEngine createScriptEngine(String scriptType) {\n+        try {\n+            for (javax.script.ScriptEngineFactory f : ENGINE_MANAGER.getEngineFactories()) {\n+                List<String> mimeTypes = f.getMimeTypes();\n+                List<String> extensions = f.getExtensions();\n+\n+                if (mimeTypes.contains(scriptType) || extensions.contains(scriptType)) {\n+                    Method method = f.getClass().getMethod(\"getScriptEngine\", ClassLoader.class);\n+                    return (ScriptEngine) method.invoke(f, NashornScriptEngineFactory.class.getClassLoader());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f8bfdd041ce6767f7fd030fc176c8169f9a5433"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7926c623788304ff54138fad389b0219a0d659fc", "author": {"user": {"login": "ghys", "name": "Yannick Schaus"}}, "url": "https://github.com/openhab/openhab-core/commit/7926c623788304ff54138fad389b0219a0d659fc", "committedDate": "2020-11-13T11:44:12Z", "message": "Replace reflection logic with a temporary change of the context class loader\n\nSigned-off-by: Yannick Schaus <github@schaus.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTgwNzk3", "url": "https://github.com/openhab/openhab-core/pull/1799#pullrequestreview-530580797", "createdAt": "2020-11-14T14:16:37Z", "commit": {"oid": "7926c623788304ff54138fad389b0219a0d659fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4659, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}