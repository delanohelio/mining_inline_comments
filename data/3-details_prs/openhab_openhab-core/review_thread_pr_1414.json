{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMzY5OTE5", "number": 1414, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMDowNFrODwXcag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTo1Njo0OVrODzDpZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQyMzQ2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/i18n/ChannelTypeI18nLocalizationService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMDowNFrOGDUyZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMDowNFrOGDUyZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzOTQ5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalArgumentException(\"Kind must not be null or aempty!\");\n          \n          \n            \n                            throw new IllegalArgumentException(\"Kind must not be null or empty!\");", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r406139494", "createdAt": "2020-04-09T11:30:04Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/i18n/ChannelTypeI18nLocalizationService.java", "diffHunk": "@@ -160,11 +160,7 @@ public ChannelType createLocalizedChannelType(Bundle bundle, ChannelType channel\n                 }\n                 return triggerBuilder.build();\n             default:\n-                return new ChannelType(channelTypeUID, channelType.isAdvanced(), channelType.getItemType(),\n-                        channelType.getKind(), label == null ? defaultLabel : label, description,\n-                        channelType.getCategory(), channelType.getTags(), channelType.getState(),\n-                        channelType.getEvent(), channelType.getConfigDescriptionURI(),\n-                        channelType.getAutoUpdatePolicy());\n+                throw new IllegalArgumentException(\"Kind must not be null or aempty!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQyNTAxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/type/StateChannelTypeBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMDozNVrOGDUzVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMDozNVrOGDUzVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzOTczNQ==", "bodyText": "Is this if really necessary?", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r406139735", "createdAt": "2020-04-09T11:30:35Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/internal/type/StateChannelTypeBuilderImpl.java", "diffHunk": "@@ -65,15 +64,15 @@ public StateChannelTypeBuilder withCommandDescription(@Nullable CommandDescripti\n         return this;\n     }\n \n+    @SuppressWarnings(\"deprecation\")\n     @Override\n     public ChannelType build() {\n         if (stateDescription != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQyNzQ1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMTozNFrOGDU0-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTozMTozNFrOGDU0-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE0MDE1NA==", "bodyText": "FTR: I am working on nullness annotations for this class.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r406140154", "createdAt": "2020-04-09T11:31:34Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.util.Set;\n \n import org.apache.commons.lang.StringUtils;\n+import org.eclipse.jdt.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzk4NDQ2OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxOTo1MzozNFrOGEYQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTowNTozOVrOGF0txQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ==", "bodyText": "Looks like there are still add-ons using these deprecated constructors. I made a local add-ons port build and it failed on the Homematic add-on:\nHomematicTypeGeneratorImpl.java:[306,14266] The constructor ChannelType(ChannelTypeUID, boolean, String, ChannelKind, String, String, String, null, StateDescription, EventDescription, URI) is undefined\nSo if we'd merge this PR it would break the add-ons port. Unless the deprecations are fixed on the 2.5.x branch.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407244805", "createdAt": "2020-04-12T19:53:34Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM4NTc5NQ==", "bodyText": "I am currently working on a PR for the Homematic binding that will replace all deprecated constructors, methods etc. Will try to push it today.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407385795", "createdAt": "2020-04-13T08:55:33Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5NjY3NQ==", "bodyText": "That will certainly help @MHerbst! \ud83d\udc4d", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407396675", "createdAt": "2020-04-13T09:24:48Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM5NzcyMw==", "bodyText": "@MHerbst Thank you. I will crawl the rest of the add-ons and replace the remaining.\n@wborn How can I manage a local add-ons port for testing?", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407397723", "createdAt": "2020-04-13T09:27:52Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQwMjAyNg==", "bodyText": "I use this port-addons.sh script based on the script used by Jenkins in the add-ons port build.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407402026", "createdAt": "2020-04-13T09:39:55Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQwNTk5OA==", "bodyText": "So you run the script on a 2.5.x based branch.\nIf you want to do the same build as Jenkins you checkout 2.5.x in that dir. E.g. to see if there are any openhab-core changes breaking the add-ons port build.\nSometimes you also want to checkout your own 2.5.x branch to see if you can keep 2.5.x compatible with breaking changes in OH 3.0. I do that for instance when adding nullness annotations. You might also want to do that after fixing deprecations before submitting the PR.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407405998", "createdAt": "2020-04-13T09:51:40Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2NjA3Nw==", "bodyText": "My PR to fix add-ons build: openhab/openhab-addons#7354", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r407466077", "createdAt": "2020-04-13T12:59:42Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1OTc0OQ==", "bodyText": "Thank you both for fixing the deprecations!\nThe add-ons port now again builds for me with this PR locally. \ud83d\udc4d", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r408759749", "createdAt": "2020-04-15T11:05:39Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ChannelType.java", "diffHunk": "@@ -41,59 +42,35 @@\n     private final ChannelKind kind;\n     private final Set<String> tags;\n     private final String category;\n-    private final StateDescription state;\n-    private final CommandDescription commandDescription;\n+    private final @Nullable StateDescription state;\n+    private final @Nullable CommandDescription commandDescription;\n     private final EventDescription event;\n     private final URI configDescriptionURI;\n     private final AutoUpdatePolicy autoUpdatePolicy;\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n     public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, String label, String description,\n-            String category, Set<String> tags, StateDescription state, URI configDescriptionURI) {\n-        this(uid, advanced, itemType, ChannelKind.STATE, label, description, category, tags, state, null,\n-                configDescriptionURI);\n+            String category, Set<String> tags, EventDescription event, URI configDescriptionURI)\n+            throws IllegalArgumentException {\n+        this(uid, advanced, itemType, ChannelKind.TRIGGER, label, description, category, tags, null, null, event,\n+                configDescriptionURI, null);\n     }\n \n     /**\n+     * Creates a new instance of this class with the specified parameters.\n+     *\n      * @deprecated Use the {@link ChannelTypeBuilder} instead.\n      */\n     @Deprecated\n-    public ChannelType(ChannelTypeUID uid, boolean advanced, String itemType, ChannelKind kind, String label,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI0NDgwNQ=="}, "originalCommit": {"oid": "c12cdab833dc9c68f4c427b16d424e087ca4b9b7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzc5Mjg0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/ThingUIDTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTowNjo0MlrOGF0vvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoxMzowMFrOGHIQKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2MDI1NA==", "bodyText": "Why was it commented?\nCan it be uncommented, fixed or removed instead?", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r408760254", "createdAt": "2020-04-15T11:06:42Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/ThingUIDTest.java", "diffHunk": "@@ -26,19 +26,19 @@ public void testThreeSegments() {\n         ThingTypeUID thingType = new ThingTypeUID(\"fake\", \"type\");\n         ThingUID t = new ThingUID(thingType, \"gaga\");\n \n-        assertEquals(\"type\", t.getThingTypeId());\n+        assertEquals(\"type\", t.getThingTypeUID().getId());\n         assertEquals(\"gaga\", t.getId());\n         assertEquals(\"fake:type:gaga\", t.getAsString());\n     }\n \n-    @Test\n-    public void testTwoSegments() {\n-        ThingUID t = new ThingUID(\"fake\", \"gaga\");\n-\n-        assertNull(t.getThingTypeId());\n-        assertEquals(\"gaga\", t.getId());\n-        assertEquals(\"fake::gaga\", t.getAsString());\n-    }\n+    // @Test\n+    // public void testTwoSegments() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEyODQyNg==", "bodyText": "I readed and changed it.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r410128426", "createdAt": "2020-04-17T10:13:00Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/ThingUIDTest.java", "diffHunk": "@@ -26,19 +26,19 @@ public void testThreeSegments() {\n         ThingTypeUID thingType = new ThingTypeUID(\"fake\", \"type\");\n         ThingUID t = new ThingUID(thingType, \"gaga\");\n \n-        assertEquals(\"type\", t.getThingTypeId());\n+        assertEquals(\"type\", t.getThingTypeUID().getId());\n         assertEquals(\"gaga\", t.getId());\n         assertEquals(\"fake:type:gaga\", t.getAsString());\n     }\n \n-    @Test\n-    public void testTwoSegments() {\n-        ThingUID t = new ThingUID(\"fake\", \"gaga\");\n-\n-        assertNull(t.getThingTypeId());\n-        assertEquals(\"gaga\", t.getId());\n-        assertEquals(\"fake::gaga\", t.getAsString());\n-    }\n+    // @Test\n+    // public void testTwoSegments() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2MDI1NA=="}, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODgwNjQ5OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToxNTo0NlrOGF-riQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDozNjozMFrOGHcUvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMzAxNw==", "bodyText": "It's probably deprecated because this method always creates a new ThingTypeUID, whereas Thing.getThingTypeUID() returns an existing object. In a binding ThingHandler you typically already have a Thing object reference, so it will save CPU cycles and garbage (+ collection) by calling Thing.getThingTypeUID() and reusing the existing objects where possible.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r408923017", "createdAt": "2020-04-15T15:15:46Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java", "diffHunk": "@@ -135,29 +135,11 @@ public ThingUID(String... segments) {\n         super(segments);\n     }\n \n-    /**\n-     * Returns the thing type id.\n-     *\n-     * @return thing type id\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.\n-     */\n-    @Deprecated\n-    public String getThingTypeId() {\n-        String thingType = getSegment(1);\n-        if (NO_THING_TYPE.equals(thingType)) {\n-            return null;\n-        } else {\n-            return thingType;\n-        }\n-    }\n-\n     /**\n      * Returns the thing type uid.\n      *\n      * @return thing type uid\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEzOTQzNA==", "bodyText": "true ... and it can return null which` breaks other stuff like discovery ... (see e.g. 2d88d58).", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r410139434", "createdAt": "2020-04-17T10:36:01Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java", "diffHunk": "@@ -135,29 +135,11 @@ public ThingUID(String... segments) {\n         super(segments);\n     }\n \n-    /**\n-     * Returns the thing type id.\n-     *\n-     * @return thing type id\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.\n-     */\n-    @Deprecated\n-    public String getThingTypeId() {\n-        String thingType = getSegment(1);\n-        if (NO_THING_TYPE.equals(thingType)) {\n-            return null;\n-        } else {\n-            return thingType;\n-        }\n-    }\n-\n     /**\n      * Returns the thing type uid.\n      *\n      * @return thing type uid\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMzAxNw=="}, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyNjkyNQ==", "bodyText": "I finally found a way to remove it.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r410426925", "createdAt": "2020-04-17T19:28:31Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java", "diffHunk": "@@ -135,29 +135,11 @@ public ThingUID(String... segments) {\n         super(segments);\n     }\n \n-    /**\n-     * Returns the thing type id.\n-     *\n-     * @return thing type id\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.\n-     */\n-    @Deprecated\n-    public String getThingTypeId() {\n-        String thingType = getSegment(1);\n-        if (NO_THING_TYPE.equals(thingType)) {\n-            return null;\n-        } else {\n-            return thingType;\n-        }\n-    }\n-\n     /**\n      * Returns the thing type uid.\n      *\n      * @return thing type uid\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMzAxNw=="}, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NzI3Ng==", "bodyText": "Some more things to solve for the add-ons build: openhab/openhab-addons#7402 and openhab/openhab-addons#7403.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r410457276", "createdAt": "2020-04-17T20:36:30Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/ThingUID.java", "diffHunk": "@@ -135,29 +135,11 @@ public ThingUID(String... segments) {\n         super(segments);\n     }\n \n-    /**\n-     * Returns the thing type id.\n-     *\n-     * @return thing type id\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.\n-     */\n-    @Deprecated\n-    public String getThingTypeId() {\n-        String thingType = getSegment(1);\n-        if (NO_THING_TYPE.equals(thingType)) {\n-            return null;\n-        } else {\n-            return thingType;\n-        }\n-    }\n-\n     /**\n      * Returns the thing type uid.\n      *\n      * @return thing type uid\n-     * @deprecated use {@link Thing#getThingTypeUID()} instead.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMzAxNw=="}, "originalCommit": {"oid": "9538da6d235e2c9204a2c390acf12b5d4aab4259"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODYzNzE3OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTo1Njo0OVrOGHeR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMTo1Njo0OVrOGHeR0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ4OTI5Ng==", "bodyText": "Moved into separate PR (#1424) but kind of required for this PR.", "url": "https://github.com/openhab/openhab-core/pull/1414#discussion_r410489296", "createdAt": "2020-04-17T21:56:49Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.config.discovery/src/main/java/org/openhab/core/config/discovery/internal/DiscoveryResultImpl.java", "diffHunk": "@@ -45,31 +48,6 @@\n     DiscoveryResultImpl() {\n     }\n \n-    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a84dd66214076a85378942fa7f03b482ecf61f5b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3199, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}