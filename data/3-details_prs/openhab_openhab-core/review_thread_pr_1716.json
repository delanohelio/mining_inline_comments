{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTQ2Njc5", "number": 1716, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMzoxM1rOEtOfXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMzoxM1rOEtOfXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODU4NzgxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/provider/ScriptModuleTypeProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxMzoxM1rOHg5sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTozMDoyOFrOHg6NBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MTc2Mw==", "bodyText": "Not too nice to call \"createScriptEngine\" here, but it seems to be the only way to get hold of the mimeTypes to remove...", "url": "https://github.com/openhab/openhab-core/pull/1716#discussion_r504261763", "createdAt": "2020-10-13T21:13:13Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/provider/ScriptModuleTypeProvider.java", "diffHunk": "@@ -145,26 +145,34 @@ public void removeProviderChangeListener(ProviderChangeListener<ModuleType> list\n     public void setScriptEngineFactory(ScriptEngineFactory engineFactory) {\n         ScriptEngine scriptEngine = engineFactory.createScriptEngine(engineFactory.getScriptTypes().get(0));\n         if (scriptEngine != null) {\n-            List<String> mimeTypes = new ArrayList<>();\n-\n             javax.script.ScriptEngineFactory factory = scriptEngine.getFactory();\n-            String languageName = String.format(\"%s (%s)\",\n-                    factory.getLanguageName().substring(0, 1).toUpperCase() + factory.getLanguageName().substring(1),\n-                    factory.getLanguageVersion());\n-            mimeTypes.addAll(factory.getMimeTypes());\n-            String preferredMimeType = mimeTypes.get(0);\n-            mimeTypes.removeIf(mimeType -> !mimeType.contains(\"application\") || mimeType.contains(\"x-\"));\n-            if (!mimeTypes.isEmpty()) {\n-                preferredMimeType = mimeTypes.get(0);\n-            }\n-            parameterOptions.put(preferredMimeType, languageName);\n+            parameterOptions.put(getPreferredMimeType(factory), getLanguageName(factory));\n             logger.trace(\"ParameterOptions: {}\", parameterOptions);\n         } else {\n             logger.trace(\"setScriptEngineFactory: engine was null\");\n         }\n     }\n \n-    public void unsetScriptEngineFactory(ScriptEngineFactory scriptEngineFactory) {\n-        parameterOptions.clear();\n+    public void unsetScriptEngineFactory(ScriptEngineFactory engineFactory) {\n+        ScriptEngine scriptEngine = engineFactory.createScriptEngine(engineFactory.getScriptTypes().get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1dc9ac528001cde9e5cc3e60e446aba7f038066"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3MDA4NQ==", "bodyText": "Another way might have been to introduce another mapping to keep track of it but this also worked when I tested it.", "url": "https://github.com/openhab/openhab-core/pull/1716#discussion_r504270085", "createdAt": "2020-10-13T21:30:28Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.automation.module.script/src/main/java/org/openhab/core/automation/module/script/internal/provider/ScriptModuleTypeProvider.java", "diffHunk": "@@ -145,26 +145,34 @@ public void removeProviderChangeListener(ProviderChangeListener<ModuleType> list\n     public void setScriptEngineFactory(ScriptEngineFactory engineFactory) {\n         ScriptEngine scriptEngine = engineFactory.createScriptEngine(engineFactory.getScriptTypes().get(0));\n         if (scriptEngine != null) {\n-            List<String> mimeTypes = new ArrayList<>();\n-\n             javax.script.ScriptEngineFactory factory = scriptEngine.getFactory();\n-            String languageName = String.format(\"%s (%s)\",\n-                    factory.getLanguageName().substring(0, 1).toUpperCase() + factory.getLanguageName().substring(1),\n-                    factory.getLanguageVersion());\n-            mimeTypes.addAll(factory.getMimeTypes());\n-            String preferredMimeType = mimeTypes.get(0);\n-            mimeTypes.removeIf(mimeType -> !mimeType.contains(\"application\") || mimeType.contains(\"x-\"));\n-            if (!mimeTypes.isEmpty()) {\n-                preferredMimeType = mimeTypes.get(0);\n-            }\n-            parameterOptions.put(preferredMimeType, languageName);\n+            parameterOptions.put(getPreferredMimeType(factory), getLanguageName(factory));\n             logger.trace(\"ParameterOptions: {}\", parameterOptions);\n         } else {\n             logger.trace(\"setScriptEngineFactory: engine was null\");\n         }\n     }\n \n-    public void unsetScriptEngineFactory(ScriptEngineFactory scriptEngineFactory) {\n-        parameterOptions.clear();\n+    public void unsetScriptEngineFactory(ScriptEngineFactory engineFactory) {\n+        ScriptEngine scriptEngine = engineFactory.createScriptEngine(engineFactory.getScriptTypes().get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2MTc2Mw=="}, "originalCommit": {"oid": "b1dc9ac528001cde9e5cc3e60e446aba7f038066"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3234, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}