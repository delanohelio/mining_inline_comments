{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTQxMTEw", "number": 2029, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNzo1NzowMVrOFMnUoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNzo1NzowMVrOFMnUoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NzcxNDg5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNzo1NzowMVrOIQbt7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQyMDowMDozMVrOIQfV5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEwMjI1NA==", "bodyText": "When the class is annotated with @ExtendWith(MockitoExtension.class), the mockCloseable and afterEach method can be removed.", "url": "https://github.com/openhab/openhab-core/pull/2029#discussion_r554102254", "createdAt": "2021-01-08T17:57:01Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java", "diffHunk": "@@ -42,53 +52,72 @@\n  */\n public class PersistenceExtensionsTest {\n \n-    public static final String TEST_NUMBER = \"Test Number\";\n-    public static final String TEST_SWITCH = \"Test Switch\";\n-\n-    @NonNullByDefault\n-    private final PersistenceServiceRegistry registry = new PersistenceServiceRegistry() {\n-\n-        private final PersistenceService testPersistenceService = new TestPersistenceService();\n-\n-        @Override\n-        public @Nullable String getDefaultId() {\n-            // not available\n-            return null;\n-        }\n-\n-        @Override\n-        public @Nullable PersistenceService getDefault() {\n-            // not available\n-            return null;\n-        }\n+    public static final String TEST_NUMBER = \"testNumber\";\n+    public static final String TEST_QUANTITY_NUMBER = \"testQuantityNumber\";\n+    public static final String TEST_SWITCH = \"testSwitch\";\n \n-        @Override\n-        public Set<PersistenceService> getAll() {\n-            return Set.of(testPersistenceService);\n-        }\n+    private @Mock UnitProvider unitProvider;\n+    private @Mock ItemRegistry mockedItemRegistry;\n \n-        @Override\n-        public @Nullable PersistenceService get(@Nullable String serviceId) {\n-            return TestPersistenceService.ID.equals(serviceId) ? testPersistenceService : null;\n-        }\n-    };\n+    private AutoCloseable mocksCloseable;\n \n-    private CoreItemFactory itemFactory;\n-    private GenericItem numberItem, switchItem;\n+    private GenericItem numberItem, quantityItem, switchItem;\n \n     @BeforeEach\n     public void setUp() {\n-        new PersistenceExtensions(registry);\n-        itemFactory = new CoreItemFactory();\n+        mocksCloseable = openMocks(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521dcdaa796dae131a5bd121cd84bae847669c76"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEzMDY5MQ==", "bodyText": "Deon.\nOnce upon a time when I submitted my changes it was not possible at all ... \ud83e\udd23", "url": "https://github.com/openhab/openhab-core/pull/2029#discussion_r554130691", "createdAt": "2021-01-08T18:54:12Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java", "diffHunk": "@@ -42,53 +52,72 @@\n  */\n public class PersistenceExtensionsTest {\n \n-    public static final String TEST_NUMBER = \"Test Number\";\n-    public static final String TEST_SWITCH = \"Test Switch\";\n-\n-    @NonNullByDefault\n-    private final PersistenceServiceRegistry registry = new PersistenceServiceRegistry() {\n-\n-        private final PersistenceService testPersistenceService = new TestPersistenceService();\n-\n-        @Override\n-        public @Nullable String getDefaultId() {\n-            // not available\n-            return null;\n-        }\n-\n-        @Override\n-        public @Nullable PersistenceService getDefault() {\n-            // not available\n-            return null;\n-        }\n+    public static final String TEST_NUMBER = \"testNumber\";\n+    public static final String TEST_QUANTITY_NUMBER = \"testQuantityNumber\";\n+    public static final String TEST_SWITCH = \"testSwitch\";\n \n-        @Override\n-        public Set<PersistenceService> getAll() {\n-            return Set.of(testPersistenceService);\n-        }\n+    private @Mock UnitProvider unitProvider;\n+    private @Mock ItemRegistry mockedItemRegistry;\n \n-        @Override\n-        public @Nullable PersistenceService get(@Nullable String serviceId) {\n-            return TestPersistenceService.ID.equals(serviceId) ? testPersistenceService : null;\n-        }\n-    };\n+    private AutoCloseable mocksCloseable;\n \n-    private CoreItemFactory itemFactory;\n-    private GenericItem numberItem, switchItem;\n+    private GenericItem numberItem, quantityItem, switchItem;\n \n     @BeforeEach\n     public void setUp() {\n-        new PersistenceExtensions(registry);\n-        itemFactory = new CoreItemFactory();\n+        mocksCloseable = openMocks(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEwMjI1NA=="}, "originalCommit": {"oid": "521dcdaa796dae131a5bd121cd84bae847669c76"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEzMzc5MQ==", "bodyText": "There was still an issue with using it in integration tests which is fixed by #2075 . For some complicated setups of tests extending another class it may still make sense to use it.", "url": "https://github.com/openhab/openhab-core/pull/2029#discussion_r554133791", "createdAt": "2021-01-08T19:00:34Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java", "diffHunk": "@@ -42,53 +52,72 @@\n  */\n public class PersistenceExtensionsTest {\n \n-    public static final String TEST_NUMBER = \"Test Number\";\n-    public static final String TEST_SWITCH = \"Test Switch\";\n-\n-    @NonNullByDefault\n-    private final PersistenceServiceRegistry registry = new PersistenceServiceRegistry() {\n-\n-        private final PersistenceService testPersistenceService = new TestPersistenceService();\n-\n-        @Override\n-        public @Nullable String getDefaultId() {\n-            // not available\n-            return null;\n-        }\n-\n-        @Override\n-        public @Nullable PersistenceService getDefault() {\n-            // not available\n-            return null;\n-        }\n+    public static final String TEST_NUMBER = \"testNumber\";\n+    public static final String TEST_QUANTITY_NUMBER = \"testQuantityNumber\";\n+    public static final String TEST_SWITCH = \"testSwitch\";\n \n-        @Override\n-        public Set<PersistenceService> getAll() {\n-            return Set.of(testPersistenceService);\n-        }\n+    private @Mock UnitProvider unitProvider;\n+    private @Mock ItemRegistry mockedItemRegistry;\n \n-        @Override\n-        public @Nullable PersistenceService get(@Nullable String serviceId) {\n-            return TestPersistenceService.ID.equals(serviceId) ? testPersistenceService : null;\n-        }\n-    };\n+    private AutoCloseable mocksCloseable;\n \n-    private CoreItemFactory itemFactory;\n-    private GenericItem numberItem, switchItem;\n+    private GenericItem numberItem, quantityItem, switchItem;\n \n     @BeforeEach\n     public void setUp() {\n-        new PersistenceExtensions(registry);\n-        itemFactory = new CoreItemFactory();\n+        mocksCloseable = openMocks(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEwMjI1NA=="}, "originalCommit": {"oid": "521dcdaa796dae131a5bd121cd84bae847669c76"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDE2MTYzOA==", "bodyText": "Yes, I am aware of that. Was just kidding.", "url": "https://github.com/openhab/openhab-core/pull/2029#discussion_r554161638", "createdAt": "2021-01-08T20:00:31Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.persistence/src/test/java/org/openhab/core/persistence/extensions/PersistenceExtensionsTest.java", "diffHunk": "@@ -42,53 +52,72 @@\n  */\n public class PersistenceExtensionsTest {\n \n-    public static final String TEST_NUMBER = \"Test Number\";\n-    public static final String TEST_SWITCH = \"Test Switch\";\n-\n-    @NonNullByDefault\n-    private final PersistenceServiceRegistry registry = new PersistenceServiceRegistry() {\n-\n-        private final PersistenceService testPersistenceService = new TestPersistenceService();\n-\n-        @Override\n-        public @Nullable String getDefaultId() {\n-            // not available\n-            return null;\n-        }\n-\n-        @Override\n-        public @Nullable PersistenceService getDefault() {\n-            // not available\n-            return null;\n-        }\n+    public static final String TEST_NUMBER = \"testNumber\";\n+    public static final String TEST_QUANTITY_NUMBER = \"testQuantityNumber\";\n+    public static final String TEST_SWITCH = \"testSwitch\";\n \n-        @Override\n-        public Set<PersistenceService> getAll() {\n-            return Set.of(testPersistenceService);\n-        }\n+    private @Mock UnitProvider unitProvider;\n+    private @Mock ItemRegistry mockedItemRegistry;\n \n-        @Override\n-        public @Nullable PersistenceService get(@Nullable String serviceId) {\n-            return TestPersistenceService.ID.equals(serviceId) ? testPersistenceService : null;\n-        }\n-    };\n+    private AutoCloseable mocksCloseable;\n \n-    private CoreItemFactory itemFactory;\n-    private GenericItem numberItem, switchItem;\n+    private GenericItem numberItem, quantityItem, switchItem;\n \n     @BeforeEach\n     public void setUp() {\n-        new PersistenceExtensions(registry);\n-        itemFactory = new CoreItemFactory();\n+        mocksCloseable = openMocks(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDEwMjI1NA=="}, "originalCommit": {"oid": "521dcdaa796dae131a5bd121cd84bae847669c76"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3229, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}