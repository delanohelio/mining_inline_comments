{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjgwMzg2", "number": 1508, "title": "Added \"editable\" info to rules in REST API", "bodyText": "This was part of #1451 and has been separated as an independent PR that can already been reviewed and merged independently.\nSigned-off-by: Kai Kreuzer kai@openhab.org", "createdAt": "2020-05-31T22:39:40Z", "url": "https://github.com/openhab/openhab-core/pull/1508", "merged": true, "mergeCommit": {"oid": "bb81ed27e59ad0f2068543ddb7971d7486b19c41"}, "closed": true, "closedAt": "2020-06-03T06:35:43Z", "author": {"login": "kaikreuzer"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmzbj6AH2gAyNDI1NjgwMzg2OmZiNTNiM2M0MWE2M2E4MDA5NDRkZDQ3ODg1MzIzNjA1Nzk3MDRkNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnjj4iAFqTQyMzI1NDg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb53b3c41a63a800944dd4788532360579704d58", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/fb53b3c41a63a800944dd4788532360579704d58", "committedDate": "2020-05-31T22:30:28Z", "message": "added \"editable\" info to rules in REST API\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTEzMDQ0", "url": "https://github.com/openhab/openhab-core/pull/1508#pullrequestreview-422113044", "createdAt": "2020-06-01T19:18:22Z", "commit": {"oid": "fb53b3c41a63a800944dd4788532360579704d58"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToxODoyMlrOGdW45g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOToxOToyMlrOGdW64g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNjkwMg==", "bodyText": "Is this really an optional reference? Isn't it mandatory and we can pass it via constructor injection?", "url": "https://github.com/openhab/openhab-core/pull/1508#discussion_r433436902", "createdAt": "2020-06-01T19:18:22Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/RuleResource.java", "diffHunk": "@@ -121,6 +126,15 @@ public RuleResource( //\n         this.ruleRegistry = ruleRegistry;\n     }\n \n+    @Reference(cardinality = ReferenceCardinality.OPTIONAL, policy = ReferencePolicy.DYNAMIC)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb53b3c41a63a800944dd4788532360579704d58"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzNzQxMA==", "bodyText": "If the reference stays optional I prefer to see a null-check on the managedRuleProvider here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    enrichedRuleDto.editable = managedRuleProvider.get(enrichedRuleDto.uid) != null;\n          \n          \n            \n                    enrichedRuleDto.editable = managedRuleProvider.get(rule.getUID()) != null;", "url": "https://github.com/openhab/openhab-core/pull/1508#discussion_r433437410", "createdAt": "2020-06-01T19:19:22Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.automation.rest/src/main/java/org/openhab/core/automation/rest/internal/dto/EnrichedRuleDTOMapper.java", "diffHunk": "@@ -20,13 +21,16 @@\n  * This is a utility class to convert between the respective object and its DTO.\n  *\n  * @author Markus Rathgeb - Initial contribution\n+ * @author Kai Kreuzer - added editable field\n  */\n public class EnrichedRuleDTOMapper extends RuleDTOMapper {\n \n-    public static EnrichedRuleDTO map(final Rule rule, final RuleManager ruleEngine) {\n+    public static EnrichedRuleDTO map(final Rule rule, final RuleManager ruleEngine,\n+            final ManagedRuleProvider managedRuleProvider) {\n         final EnrichedRuleDTO enrichedRuleDto = new EnrichedRuleDTO();\n         fillProperties(rule, enrichedRuleDto);\n         enrichedRuleDto.status = ruleEngine.getStatusInfo(rule.getUID());\n+        enrichedRuleDto.editable = managedRuleProvider.get(enrichedRuleDto.uid) != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb53b3c41a63a800944dd4788532360579704d58"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70bf7a54617a665feba615efca4f9966f2c2d87c", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/70bf7a54617a665feba615efca4f9966f2c2d87c", "committedDate": "2020-06-02T18:50:23Z", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd2048341ae0a2ffae699d0796eee0a004372e1d", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/cd2048341ae0a2ffae699d0796eee0a004372e1d", "committedDate": "2020-06-02T18:46:54Z", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}, "afterCommit": {"oid": "70bf7a54617a665feba615efca4f9966f2c2d87c", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/70bf7a54617a665feba615efca4f9966f2c2d87c", "committedDate": "2020-06-02T18:50:23Z", "message": "addressed review comments\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjU0ODY1", "url": "https://github.com/openhab/openhab-core/pull/1508#pullrequestreview-423254865", "createdAt": "2020-06-03T06:35:00Z", "commit": {"oid": "70bf7a54617a665feba615efca4f9966f2c2d87c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4813, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}