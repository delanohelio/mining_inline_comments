{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MTQwMzY1", "number": 1617, "title": "Improved add-on installation logic", "bodyText": "Checking the existence of an add-on before trying to install it and otherwise logging a warning.\nAdditionally checking for real changes in the config, which stops the regular re-installation mechanism that otherwise runs every minute. In case of a failure, this means people have to manually restart or to change their configuration once, but they anyhow see an error in the log.\nApplied thread naming convention and removed one (hopefully?) unnecessary scheduler thread.\n\nSigned-off-by: Kai Kreuzer kai@openhab.org", "createdAt": "2020-09-02T20:12:57Z", "url": "https://github.com/openhab/openhab-core/pull/1617", "merged": true, "mergeCommit": {"oid": "9070539a1a16e2cddd5466584f31844b0fb37b1c"}, "closed": true, "closedAt": "2020-09-03T10:13:26Z", "author": {"login": "kaikreuzer"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFBvMzgH2gAyNDc4MTQwMzY1OmQ5NjgxMjBlZDAxMWYzMWJlN2EyZjc1NTE5MTYyZDE0M2U2Mzc3Yzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFOarYAFqTQ4MTcyMDY5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d968120ed011f31be7a2f75519162d143e6377c7", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/d968120ed011f31be7a2f75519162d143e6377c7", "committedDate": "2020-09-02T20:08:19Z", "message": "improved add-on installation logic\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094", "author": {"user": {"login": "kaikreuzer", "name": "Kai Kreuzer"}}, "url": "https://github.com/openhab/openhab-core/commit/f36b22558a995874fefaeffba94c43c77b469094", "committedDate": "2020-09-03T08:38:37Z", "message": "enable retry mechanism on failed installs\n\nSigned-off-by: Kai Kreuzer <kai@openhab.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjk1OTcw", "url": "https://github.com/openhab/openhab-core/pull/1617#pullrequestreview-481695970", "createdAt": "2020-09-03T10:13:16Z", "commit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzIwNjk3", "url": "https://github.com/openhab/openhab-core/pull/1617#pullrequestreview-481720697", "createdAt": "2020-09-03T10:50:39Z", "commit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MDozOVrOHMhDvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDo1MTo0NlrOHMhGMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NjU5MQ==", "bodyText": "At the time we use String.strip() it might be better to check for isBlank() here.", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r482886591", "createdAt": "2020-09-03T10:50:39Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4NzIxNw==", "bodyText": "Should we use the combination of isBlank() / strip() in this loop too?", "url": "https://github.com/openhab/openhab-core/pull/1617#discussion_r482887217", "createdAt": "2020-09-03T10:51:46Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.karaf/src/main/java/org/openhab/core/karaf/internal/FeatureInstaller.java", "diffHunk": "@@ -336,15 +339,19 @@ private synchronized void installAddons(final FeaturesService service, final Map\n                     Feature[] features = service.listInstalledFeatures();\n                     for (String addon : entries) {\n                         if (addon != null && !addon.isEmpty()) {\n-                            String id = PREFIX + type + \"-\" + addon.trim();\n-                            targetAddons.add(id);\n-                            if (!isInstalled(features, id)) {\n-                                installAddons.add(id);\n+                            String id = PREFIX + type + \"-\" + addon.strip();\n+                            if (service.getFeature(id) != null) {\n+                                targetAddons.add(id);\n+                                if (!isInstalled(features, id)) {\n+                                    installAddons.add(id);\n+                                }\n+                            } else {\n+                                logger.warn(\"The {} add-on '{}' does not exist - ignoring it.\", type, addon.strip());\n                             }\n                         }\n                     }\n \n-                    // we collect all installed addons\n+                    // we collect all installed add-ons\n                     for (String addon : getAllAddonsOfType(service, type)) {\n                         if (addon != null && !addon.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36b22558a995874fefaeffba94c43c77b469094"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4743, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}