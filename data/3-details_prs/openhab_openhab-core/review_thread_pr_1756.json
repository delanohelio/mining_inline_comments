{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NTkwNDA4", "number": 1756, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMToyODozNlrOE2empg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMTozNDowM1rOE2eroQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTU5OTc0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMToyODozNlrOHvTQNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMToyODozNlrOHvTQNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MDU2NQ==", "bodyText": "Use shortcut here or remove static import.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .collect(Collectors.toSet());\n          \n          \n            \n                                .collect(toSet());", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519360565", "createdAt": "2020-11-08T11:28:36Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.io.rest.core/src/main/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcher.java", "diffHunk": "@@ -72,19 +63,22 @@ public MetadataSelectorMatcher(final @Reference MetadataRegistry metadataRegistr\n                     .map(n -> n.trim()) //\n                     .collect(Collectors.toSet());\n \n+            Set<String> allMetadataNamespaces = metadataRegistry.getAll().stream() //\n+                    .map(metadata -> metadata.getUID().getNamespace()) //\n+                    .distinct() //\n+                    .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ad56948ea4a518d877c8316af73a07b0da688c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTYwNzQ3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMTozMTo1MlrOHvTU7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMTozMTo1MlrOHvTU7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MTc3NA==", "bodyText": "Private property configDescriptionRegistry can be removed completely from this test.", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519361774", "createdAt": "2020-11-08T11:31:52Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "diffHunk": "@@ -53,21 +53,21 @@\n \n     @BeforeEach\n     public void setup() throws Exception {\n-        when(configDescriptionRegistry.getConfigDescriptions(null)).thenReturn(mockConfigDescriptions());\n+        when(metadataRegistry.getAll()).thenReturn(mockMetadata());\n         when(metadataRegistry.isInternalNamespace(anyString())).thenReturn(false);\n \n-        matcher = new MetadataSelectorMatcher(metadataRegistry, configDescriptionRegistry);\n+        matcher = new MetadataSelectorMatcher(metadataRegistry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ad56948ea4a518d877c8316af73a07b0da688c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTYxMjQ5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMTozNDowM1rOHvTYXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxMTozNDowM1rOHvTYXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTM2MjY1Mg==", "bodyText": "We do not need the method mockMetadate(). Can be implemented like this:\n       when(metadataRegistry.getAll()).thenReturn(List.of(new Metadata(new MetadataKey(\"magic\", \"test_item\"), \"test\", Map.of()), ... ));", "url": "https://github.com/openhab/openhab-core/pull/1756#discussion_r519362652", "createdAt": "2020-11-08T11:34:03Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.core.io.rest.core/src/test/java/org/openhab/core/io/rest/core/internal/item/MetadataSelectorMatcherTest.java", "diffHunk": "@@ -53,21 +53,21 @@\n \n     @BeforeEach\n     public void setup() throws Exception {\n-        when(configDescriptionRegistry.getConfigDescriptions(null)).thenReturn(mockConfigDescriptions());\n+        when(metadataRegistry.getAll()).thenReturn(mockMetadata());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16ad56948ea4a518d877c8316af73a07b0da688c"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3262, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}