{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MjQwMTgz", "number": 1877, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1NjoyMFrODfe36Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTo1NzozNVrODfwg6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzM4MjgxOnYy", "diffSide": "RIGHT", "path": "zk/src/archive/web/js/zk/au.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1NjoyMFrOFpNd_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwOTo1NjoyMFrOFpNd_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc1NjYwNg==", "bodyText": "check  len % 2 == 0", "url": "https://github.com/zkoss/zk/pull/1877#discussion_r378756606", "createdAt": "2020-02-13T09:56:20Z", "author": {"login": "scribetw"}, "path": "zk/src/archive/web/js/zk/au.js", "diffHunk": "@@ -1688,6 +1688,20 @@ zAu.cmd1 = /*prototype*/ {\n \t\t\t}\n \t\t}\n \t},\n+\t/**\n+\t * Sets the attributes of a widget.\n+\t * @param zk.Widget wgt the widget\n+\t * @param Array attrs an array or name1, value2, name2, value2, ...\n+\t * @since 9.0.1\n+\t */\n+\tsetAttrs: function (wgt, attrs) {\n+\t\tif (wgt) { // server push may cause wgt is null in some case - zksandbox/#a1\n+\t\t\tvar setAttr = zAu.cmd1.setAttr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2940c4294e6b842b581bf5fe0ab3484077153f63"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjI3MzA1OnYy", "diffSide": "RIGHT", "path": "zk/src/org/zkoss/zk/au/out/AuSetAttributes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTo1NzozNVrOFppjbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMTo1NzozNVrOFppjbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIxNjc0OA==", "bodyText": "StringBuilder", "url": "https://github.com/zkoss/zk/pull/1877#discussion_r379216748", "createdAt": "2020-02-14T01:57:35Z", "author": {"login": "DevChu"}, "path": "zk/src/org/zkoss/zk/au/out/AuSetAttributes.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/* AuSetAttributes.java\n+\n+\tPurpose:\n+\t\t\n+\tDescription:\n+\t\t\n+\tHistory:\n+\t\tWed Feb 12 15:48:05     2020, Created by rudyhuang\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+\n+*/\n+package org.zkoss.zk.au.out;\n+\n+import java.util.Date;\n+import java.util.List;\n+\n+import org.zkoss.json.JSONArray;\n+import org.zkoss.zk.au.AuResponse;\n+import org.zkoss.zk.au.DeferredValue;\n+import org.zkoss.zk.ui.Component;\n+\n+/**\n+ * A response to set successive attributes of the specified component at the client.\n+ * <p>data[0]: the uuid of the component<br/>\n+ * data[1]: the array of attribute name and attribute value\n+ *\n+ * @since 9.0.1\n+ * @author rudyhuang\n+ * @see org.zkoss.zk.au.out.AuSetAttribute\n+ */\n+public class AuSetAttributes extends AuResponse {\n+\t/**\n+\t * Construct an instance for miscellaneous values, such as Boolean,\n+\t * Integer and so on.\n+\t */\n+\tpublic AuSetAttributes(Component comp, AuSetAttribute... attrs) {\n+\t\tsuper(\"setAttrs\", comp, attrs);\n+\t}\n+\n+\t@Override\n+\tpublic List<Object> getEncodedData() {\n+\t\tif (_data == null)\n+\t\t\treturn null;\n+\n+\t\tfinal JSONArray encdata = new JSONArray();\n+\t\tencdata.add(new JSONComponent((Component) getDepends()));\n+\t\tfinal JSONArray subdata = new JSONArray();\n+\t\tfor (AuSetAttribute setAttr : (AuSetAttribute[]) _data) {\n+\t\t\tObject[] setAttrData = setAttr.getRawData();\n+\t\t\tfor (int j = 1, len = setAttrData.length; j < len; ++j) { // skip 0\n+\t\t\t\tObject d = setAttrData[j];\n+\t\t\t\tif (d instanceof DeferredValue)\n+\t\t\t\t\td = ((DeferredValue) d).getValue();\n+\t\t\t\tif (d instanceof Component)\n+\t\t\t\t\td = new JSONComponent((Component) d);\n+\t\t\t\tif (d instanceof Date)\n+\t\t\t\t\td = new JSONDate((Date) d);\n+\t\t\t\tsubdata.add(d);\n+\t\t\t}\n+\t\t}\n+\t\tencdata.add(subdata);\n+\t\treturn encdata;\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\t//Don't call getCommand and getData since it causes\n+\t\t//AuSetDeferredAttribute to evaluate the deferred value\n+\t\tfinal StringBuffer sb = new StringBuffer(60).append(\"[cmd=\").append(_cmd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b475983c8c2b2dfbb7369fe30910450a55a441f"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 588, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}