{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NTQ1MDQw", "number": 2148, "title": "ZK-4648: Audio supports to add tracks", "bodyText": "ZK-4649: Video supports to add tracks", "createdAt": "2020-09-02T03:32:47Z", "url": "https://github.com/zkoss/zk/pull/2148", "merged": true, "mergeCommit": {"oid": "f60570a4167e6ff96072e5994fffe1aebc5cf391"}, "closed": true, "closedAt": "2020-09-03T10:22:43Z", "author": {"login": "scribetw"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE4l16gFqTQ4MDYzODg4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFIsshgFqTQ4MTQ3OTY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNjM4ODgw", "url": "https://github.com/zkoss/zk/pull/2148#pullrequestreview-480638880", "createdAt": "2020-09-02T09:21:46Z", "commit": {"oid": "22b5a9ad48d5a928332d6143b6d1acf24bcc2cbb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOToyMTo0NlrOHLmkaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwOToyNDo1NFrOHLmsBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyODI5Ng==", "bodyText": "check null in setter", "url": "https://github.com/zkoss/zk/pull/2148#discussion_r481928296", "createdAt": "2020-09-02T09:21:46Z", "author": {"login": "plijyfes"}, "path": "zul/src/org/zkoss/zul/Track.java", "diffHunk": "@@ -0,0 +1,210 @@\n+/* Track.java\n+\n+\tPurpose:\n+\t\t\n+\tDescription:\n+\t\t\n+\tHistory:\n+\t\tTue Sep 01 09:44:26 CST 2020, Created by rudyhuang\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.zul;\n+\n+import java.io.IOException;\n+\n+import org.zkoss.lang.Objects;\n+import org.zkoss.lang.Strings;\n+import org.zkoss.zk.au.DeferredValue;\n+import org.zkoss.zk.ui.Component;\n+import org.zkoss.zk.ui.Desktop;\n+import org.zkoss.zk.ui.UiException;\n+import org.zkoss.zk.ui.WrongValueException;\n+import org.zkoss.zk.ui.sys.ContentRenderer;\n+import org.zkoss.zul.ext.MediaElement;\n+import org.zkoss.zul.impl.XulElement;\n+\n+/**\n+ * A representation of {@code <track>}.\n+ *\n+ * <p>It is expected to use with {@code <audio>} or {@code <video>}.\n+ * <p>{@code <track>} is not supported in Internet Explorer 9.\n+ *\n+ * @author rudyhuang\n+ * @since 9.5.0\n+ */\n+public class Track extends XulElement {\n+\tprivate boolean _default;\n+\tprivate String _kind;\n+\tprivate String _label;\n+\tprivate String _src;\n+\tprivate String _srclang;\n+\n+\tpublic Track() {\n+\t}\n+\n+\t/**\n+\t * Constructs a Track component with the specific source.\n+\t *\n+\t * @param src the source address of this track.\n+\t */\n+\tpublic Track(String src) {\n+\t\tsetSrc(src);\n+\t}\n+\n+\t/**\n+\t * Returns if this track should be enabled by default.\n+\t * <p>Default: false.\n+\t * @return if this track should be enabled by default.\n+\t */\n+\tpublic boolean isDefault() {\n+\t\treturn _default;\n+\t}\n+\n+\t/**\n+\t * Sets if this track should be enabled by default.\n+\t *\n+\t * @param isDefault if this track should be enabled by default.\n+\t */\n+\tpublic void setDefault(boolean isDefault) {\n+\t\tif (_default != isDefault) {\n+\t\t\t_default = isDefault;\n+\t\t\tsmartUpdate(\"default\", isDefault);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns what kind of track it is.\n+\t * <p>Default: null.\n+\t * @return what kind of track it is.\n+\t */\n+\tpublic String getKind() {\n+\t\treturn _kind;\n+\t}\n+\n+\t/**\n+\t * Set what kind of track it is. The following keywords are accepted:\n+\t * <ul>\n+\t *     <li>subtitles</li>\n+\t *     <li>captions</li>\n+\t *     <li>descriptions</li>\n+\t *     <li>chapters</li>\n+\t *     <li>metadata</li>\n+\t * </ul>\n+\t * @param kind what kind of track it is.\n+\t */\n+\tpublic void setKind(String kind) {\n+\t\tif (!\"subtitles\".equals(kind) && !\"captions\".equals(kind)\n+\t\t\t\t&& !\"descriptions\".equals(kind) && !\"chapters\".equals(kind) && !\"metadata\".equals(kind))\n+\t\t\tthrow new WrongValueException(\"kind cannot be \" + kind);\n+\t\tif (!Objects.equals(_kind, kind)) {\n+\t\t\t_kind = kind;\n+\t\t\tsmartUpdate(\"kind\", kind);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns a readable description of this track.\n+\t * <p>Default: null.\n+\t * @return a readable description of this track.\n+\t */\n+\tpublic String getLabel() {\n+\t\treturn _label;\n+\t}\n+\n+\t/**\n+\t * Sets a readable description of this track.\n+\t *\n+\t * @param label a readable description of this track.\n+\t */\n+\tpublic void setLabel(String label) {\n+\t\tif (!Objects.equals(_label, label)) {\n+\t\t\t_label = label;\n+\t\t\tsmartUpdate(\"label\", label);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns the source address of this track.\n+\t * <p>Default: null.\n+\t * @return the source address of this track.\n+\t */\n+\tpublic String getSrc() {\n+\t\treturn _src;\n+\t}\n+\n+\t/**\n+\t * Sets the source address of this track. Must be a valid URL.\n+\t * This attribute must be specified.\n+\t * The URL must have the same origin as the parent {@code <audio>} or {@code <video>},\n+\t * unless the {@code crossorigin} attribute is set.\n+\t *\n+\t * @param src the source address of this track.\n+\t */\n+\tpublic void setSrc(String src) {\n+\t\tif (!Objects.equals(_src, src)) {\n+\t\t\t_src = src;\n+\t\t\tsmartUpdate(\"src\", (DeferredValue) this::getEncodedSrc);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns the language of the source.\n+\t * <p>Default: null.\n+\t * @return the language of the source.\n+\t */\n+\tpublic String getSrclang() {\n+\t\treturn _srclang;\n+\t}\n+\n+\t/**\n+\t * Sets the language of the source.\n+\t * It must be a valid BCP 47 language tag.\n+\t * This attribute must be specified if kind is \"subtitles\".\n+\t *\n+\t * @param srclang the language of the source.\n+\t */\n+\tpublic void setSrclang(String srclang) {\n+\t\tif (!Objects.equals(_srclang, srclang)) {\n+\t\t\t_srclang = srclang;\n+\t\t\tsmartUpdate(\"srclang\", srclang);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getZclass() {\n+\t\treturn _zclass != null ? _zclass : \"z-track\";\n+\t}\n+\n+\t@Override\n+\tprotected boolean isChildable() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void beforeParentChanged(Component parent) {\n+\t\tif (parent != null && !(parent instanceof MediaElement))\n+\t\t\tthrow new UiException(\"Wrong parent: \" + parent);\n+\t\tsuper.beforeParentChanged(parent);\n+\t}\n+\n+\t@Override\n+\tprotected void renderProperties(ContentRenderer renderer) throws IOException {\n+\t\tsuper.renderProperties(renderer);\n+\n+\t\tif (Strings.isEmpty(_src))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b5a9ad48d5a928332d6143b6d1acf24bcc2cbb"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkzMDI0NQ==", "bodyText": "setter check", "url": "https://github.com/zkoss/zk/pull/2148#discussion_r481930245", "createdAt": "2020-09-02T09:24:54Z", "author": {"login": "plijyfes"}, "path": "zul/src/org/zkoss/zul/Track.java", "diffHunk": "@@ -0,0 +1,210 @@\n+/* Track.java\n+\n+\tPurpose:\n+\t\t\n+\tDescription:\n+\t\t\n+\tHistory:\n+\t\tTue Sep 01 09:44:26 CST 2020, Created by rudyhuang\n+\n+Copyright (C) 2020 Potix Corporation. All Rights Reserved.\n+*/\n+package org.zkoss.zul;\n+\n+import java.io.IOException;\n+\n+import org.zkoss.lang.Objects;\n+import org.zkoss.lang.Strings;\n+import org.zkoss.zk.au.DeferredValue;\n+import org.zkoss.zk.ui.Component;\n+import org.zkoss.zk.ui.Desktop;\n+import org.zkoss.zk.ui.UiException;\n+import org.zkoss.zk.ui.WrongValueException;\n+import org.zkoss.zk.ui.sys.ContentRenderer;\n+import org.zkoss.zul.ext.MediaElement;\n+import org.zkoss.zul.impl.XulElement;\n+\n+/**\n+ * A representation of {@code <track>}.\n+ *\n+ * <p>It is expected to use with {@code <audio>} or {@code <video>}.\n+ * <p>{@code <track>} is not supported in Internet Explorer 9.\n+ *\n+ * @author rudyhuang\n+ * @since 9.5.0\n+ */\n+public class Track extends XulElement {\n+\tprivate boolean _default;\n+\tprivate String _kind;\n+\tprivate String _label;\n+\tprivate String _src;\n+\tprivate String _srclang;\n+\n+\tpublic Track() {\n+\t}\n+\n+\t/**\n+\t * Constructs a Track component with the specific source.\n+\t *\n+\t * @param src the source address of this track.\n+\t */\n+\tpublic Track(String src) {\n+\t\tsetSrc(src);\n+\t}\n+\n+\t/**\n+\t * Returns if this track should be enabled by default.\n+\t * <p>Default: false.\n+\t * @return if this track should be enabled by default.\n+\t */\n+\tpublic boolean isDefault() {\n+\t\treturn _default;\n+\t}\n+\n+\t/**\n+\t * Sets if this track should be enabled by default.\n+\t *\n+\t * @param isDefault if this track should be enabled by default.\n+\t */\n+\tpublic void setDefault(boolean isDefault) {\n+\t\tif (_default != isDefault) {\n+\t\t\t_default = isDefault;\n+\t\t\tsmartUpdate(\"default\", isDefault);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns what kind of track it is.\n+\t * <p>Default: null.\n+\t * @return what kind of track it is.\n+\t */\n+\tpublic String getKind() {\n+\t\treturn _kind;\n+\t}\n+\n+\t/**\n+\t * Set what kind of track it is. The following keywords are accepted:\n+\t * <ul>\n+\t *     <li>subtitles</li>\n+\t *     <li>captions</li>\n+\t *     <li>descriptions</li>\n+\t *     <li>chapters</li>\n+\t *     <li>metadata</li>\n+\t * </ul>\n+\t * @param kind what kind of track it is.\n+\t */\n+\tpublic void setKind(String kind) {\n+\t\tif (!\"subtitles\".equals(kind) && !\"captions\".equals(kind)\n+\t\t\t\t&& !\"descriptions\".equals(kind) && !\"chapters\".equals(kind) && !\"metadata\".equals(kind))\n+\t\t\tthrow new WrongValueException(\"kind cannot be \" + kind);\n+\t\tif (!Objects.equals(_kind, kind)) {\n+\t\t\t_kind = kind;\n+\t\t\tsmartUpdate(\"kind\", kind);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns a readable description of this track.\n+\t * <p>Default: null.\n+\t * @return a readable description of this track.\n+\t */\n+\tpublic String getLabel() {\n+\t\treturn _label;\n+\t}\n+\n+\t/**\n+\t * Sets a readable description of this track.\n+\t *\n+\t * @param label a readable description of this track.\n+\t */\n+\tpublic void setLabel(String label) {\n+\t\tif (!Objects.equals(_label, label)) {\n+\t\t\t_label = label;\n+\t\t\tsmartUpdate(\"label\", label);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns the source address of this track.\n+\t * <p>Default: null.\n+\t * @return the source address of this track.\n+\t */\n+\tpublic String getSrc() {\n+\t\treturn _src;\n+\t}\n+\n+\t/**\n+\t * Sets the source address of this track. Must be a valid URL.\n+\t * This attribute must be specified.\n+\t * The URL must have the same origin as the parent {@code <audio>} or {@code <video>},\n+\t * unless the {@code crossorigin} attribute is set.\n+\t *\n+\t * @param src the source address of this track.\n+\t */\n+\tpublic void setSrc(String src) {\n+\t\tif (!Objects.equals(_src, src)) {\n+\t\t\t_src = src;\n+\t\t\tsmartUpdate(\"src\", (DeferredValue) this::getEncodedSrc);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Returns the language of the source.\n+\t * <p>Default: null.\n+\t * @return the language of the source.\n+\t */\n+\tpublic String getSrclang() {\n+\t\treturn _srclang;\n+\t}\n+\n+\t/**\n+\t * Sets the language of the source.\n+\t * It must be a valid BCP 47 language tag.\n+\t * This attribute must be specified if kind is \"subtitles\".\n+\t *\n+\t * @param srclang the language of the source.\n+\t */\n+\tpublic void setSrclang(String srclang) {\n+\t\tif (!Objects.equals(_srclang, srclang)) {\n+\t\t\t_srclang = srclang;\n+\t\t\tsmartUpdate(\"srclang\", srclang);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getZclass() {\n+\t\treturn _zclass != null ? _zclass : \"z-track\";\n+\t}\n+\n+\t@Override\n+\tprotected boolean isChildable() {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void beforeParentChanged(Component parent) {\n+\t\tif (parent != null && !(parent instanceof MediaElement))\n+\t\t\tthrow new UiException(\"Wrong parent: \" + parent);\n+\t\tsuper.beforeParentChanged(parent);\n+\t}\n+\n+\t@Override\n+\tprotected void renderProperties(ContentRenderer renderer) throws IOException {\n+\t\tsuper.renderProperties(renderer);\n+\n+\t\tif (Strings.isEmpty(_src))\n+\t\t\tthrow new UiException(\"src must be specified.\");\n+\t\tif (\"subtitles\".equals(_kind) && Strings.isEmpty(_srclang))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b5a9ad48d5a928332d6143b6d1acf24bcc2cbb"}, "originalPosition": 197}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22b5a9ad48d5a928332d6143b6d1acf24bcc2cbb", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/22b5a9ad48d5a928332d6143b6d1acf24bcc2cbb", "committedDate": "2020-09-02T03:29:12Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}, "afterCommit": {"oid": "1a4fdde63790a697ffd11fdddd938f9d84016240", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/1a4fdde63790a697ffd11fdddd938f9d84016240", "committedDate": "2020-09-02T10:58:16Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a4fdde63790a697ffd11fdddd938f9d84016240", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/1a4fdde63790a697ffd11fdddd938f9d84016240", "committedDate": "2020-09-02T10:58:16Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}, "afterCommit": {"oid": "a4124c1bfa3467961f8f013243867d7ae263af60", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/a4124c1bfa3467961f8f013243867d7ae263af60", "committedDate": "2020-09-03T01:53:25Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5076d2230bdc50a7c2c38795f8135320a55d1c5", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/c5076d2230bdc50a7c2c38795f8135320a55d1c5", "committedDate": "2020-09-03T02:07:25Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4124c1bfa3467961f8f013243867d7ae263af60", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/a4124c1bfa3467961f8f013243867d7ae263af60", "committedDate": "2020-09-03T01:53:25Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}, "afterCommit": {"oid": "c5076d2230bdc50a7c2c38795f8135320a55d1c5", "author": {"user": {"login": "scribetw", "name": "Scribe Huang"}}, "url": "https://github.com/zkoss/zk/commit/c5076d2230bdc50a7c2c38795f8135320a55d1c5", "committedDate": "2020-09-03T02:07:25Z", "message": "ZK-4648: Audio supports to add tracks\nZK-4649: Video supports to add tracks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNDc5Njc2", "url": "https://github.com/zkoss/zk/pull/2148#pullrequestreview-481479676", "createdAt": "2020-09-03T04:14:55Z", "commit": {"oid": "c5076d2230bdc50a7c2c38795f8135320a55d1c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 93, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}