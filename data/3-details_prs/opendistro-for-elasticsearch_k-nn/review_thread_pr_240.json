{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxOTU3NTY4", "number": 240, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTo1Mzo0N1rOEtMvnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjoxMDozOVrOEtPhQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODMwMTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTo1Mzo0N1rOHg2-HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo0MzoyMFrOHg6kOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzExNw==", "bodyText": "How about reading these algo params from the indexSettings here? Idea is to lazy load these settings to ensure the settings are available to read from IndexSettings.", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504217117", "createdAt": "2020-10-13T19:53:47Z", "author": {"login": "vamshin"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -344,6 +312,12 @@ public void parse(ParseContext context) throws IOException {\n             array[i++] = f;\n         }\n \n+        FieldType fieldType = new FieldType(Defaults.FIELD_TYPE);\n+        fieldType.putAttribute(KNNConstants.SPACE_TYPE, spaceType);\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_M, String.valueOf(m));\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_EF_CONSTRUCTION, String.valueOf(efConstruction));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e7b40d2899559c0eebda8d23f6f6813d6fabf3d"}, "originalPosition": 375}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3NjAyNQ==", "bodyText": "This would cause index settings to be read everytime a document is indexed. I refactored to build fieldType to the KNNVectorFieldMapper constructor and read the settings from BuilderContext during Builder.build()", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504276025", "createdAt": "2020-10-13T21:43:20Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -344,6 +312,12 @@ public void parse(ParseContext context) throws IOException {\n             array[i++] = f;\n         }\n \n+        FieldType fieldType = new FieldType(Defaults.FIELD_TYPE);\n+        fieldType.putAttribute(KNNConstants.SPACE_TYPE, spaceType);\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_M, String.valueOf(m));\n+        fieldType.putAttribute(KNNConstants.HNSW_ALGO_EF_CONSTRUCTION, String.valueOf(efConstruction));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIxNzExNw=="}, "originalCommit": {"oid": "1e7b40d2899559c0eebda8d23f6f6813d6fabf3d"}, "originalPosition": 375}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODc1NjUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjoxMDozOVrOHg7Rsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMjoxM1rOHg8cmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4NzY2Ng==", "bodyText": "Why are we storing state in Builder class? Why not get a fresh copy every time by reading from indexSettings?", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504287666", "createdAt": "2020-10-13T22:10:39Z", "author": {"login": "vamshin"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -122,59 +131,69 @@ public Builder(String name, String spaceType, int m, int efConstruction) {\n \n         @Override\n         public KNNVectorFieldMapper build(BuilderContext context) {\n-            return new KNNVectorFieldMapper(name, new KNNVectorFieldType(buildFullName(context), meta.getValue(),\n-                    dimension.getValue()), multiFieldsBuilder.build(this, context),\n-                    ignoreMalformed(context), spaceType, m, efConstruction, copyTo.build(), this);\n-        }\n-    }\n+            if (spaceType == null) {\n+                spaceType = getSpaceType(context.indexSettings());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af71c1b92bca88850e922d8f29fe9f8825d2e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNjg0MA==", "bodyText": "Makes sense. Updated.", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/240#discussion_r504306840", "createdAt": "2020-10-13T23:02:13Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNVectorFieldMapper.java", "diffHunk": "@@ -122,59 +131,69 @@ public Builder(String name, String spaceType, int m, int efConstruction) {\n \n         @Override\n         public KNNVectorFieldMapper build(BuilderContext context) {\n-            return new KNNVectorFieldMapper(name, new KNNVectorFieldType(buildFullName(context), meta.getValue(),\n-                    dimension.getValue()), multiFieldsBuilder.build(this, context),\n-                    ignoreMalformed(context), spaceType, m, efConstruction, copyTo.build(), this);\n-        }\n-    }\n+            if (spaceType == null) {\n+                spaceType = getSpaceType(context.indexSettings());\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4NzY2Ng=="}, "originalCommit": {"oid": "147af71c1b92bca88850e922d8f29fe9f8825d2e"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2675, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}