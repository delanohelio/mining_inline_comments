{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODAxODYw", "number": 52, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMzozNVrODgOT7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxNjoyNFrODgOUgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1NTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxMzozNVrOFqUX1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxODoxNjowMVrOFqUnrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODI5NA==", "bodyText": "Could you explain more why there is only 1 query parameter being passed in? Why are M and efConstruction not gotten?", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/52#discussion_r379918294", "createdAt": "2020-02-16T17:13:35Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -236,4 +236,8 @@ public void onFileDeleted(Path indexFilePath) {\n             getInstance().cache.invalidate(indexFilePath.toString());\n         }\n     };\n+\n+    private String[] getQueryParams(String indexName) {\n+        return new String[] {\"efSearch=\" + KNNSettings.getEfSearchParam(indexName)};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5da1be926741a8bf330d0962517b8cc3d1a6071"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjM1MQ==", "bodyText": "efSearch is required only during searches.  Other algorithm params are needed for indexing.", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/52#discussion_r379922351", "createdAt": "2020-02-16T18:16:01Z", "author": {"login": "vamshin"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/KNNIndexCache.java", "diffHunk": "@@ -236,4 +236,8 @@ public void onFileDeleted(Path indexFilePath) {\n             getInstance().cache.invalidate(indexFilePath.toString());\n         }\n     };\n+\n+    private String[] getQueryParams(String indexName) {\n+        return new String[] {\"efSearch=\" + KNNSettings.getEfSearchParam(indexName)};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODI5NA=="}, "originalCommit": {"oid": "c5da1be926741a8bf330d0962517b8cc3d1a6071"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTE1NjUxOnYy", "diffSide": "LEFT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/v1736/KNNIndex.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxNzoxNjoyNFrOFqUYkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxODoxNDozN1rOFqUnWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODQ4MA==", "bodyText": "Why is this no longer needed?", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/52#discussion_r379918480", "createdAt": "2020-02-16T17:16:24Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/v1736/KNNIndex.java", "diffHunk": "@@ -87,12 +87,6 @@ public long getIndexSize() {\n     public void close() {\n         Lock writeLock = readWriteLock.writeLock();\n         writeLock.lock();\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5da1be926741a8bf330d0962517b8cc3d1a6071"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjI2NQ==", "bodyText": "Good catch. Bad merge. Will add it back.", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/52#discussion_r379922265", "createdAt": "2020-02-16T18:14:37Z", "author": {"login": "vamshin"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/knn/index/v1736/KNNIndex.java", "diffHunk": "@@ -87,12 +87,6 @@ public long getIndexSize() {\n     public void close() {\n         Lock writeLock = readWriteLock.writeLock();\n         writeLock.lock();\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxODQ4MA=="}, "originalCommit": {"oid": "c5da1be926741a8bf330d0962517b8cc3d1a6071"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2714, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}