{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzE5OTM5", "number": 56, "title": "updated RFC", "bodyText": "Issue #, if available:\n#48\nDescription of changes:\nUpdated RFC to incorporate latest code changes.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-02-25T17:46:16Z", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/56", "merged": true, "mergeCommit": {"oid": "87d89e79b7e1045a5b076233762603523f59bf22"}, "closed": true, "closedAt": "2020-04-02T16:44:24Z", "author": {"login": "jmazanec15"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH1zesgH2gAyMzc5NzE5OTM5OjA0Y2Q0YTJkODM4OTIwMDhhNzE2Y2MxY2ZkNWU2YTNlNjUzNjIxM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTuz9nAFqTM4NjU5MDMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04cd4a2d83892008a716cc1cfd5e6a3e6536213c", "author": {"user": {"login": "jmazanec15", "name": "Jack Mazanec"}}, "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/04cd4a2d83892008a716cc1cfd5e6a3e6536213c", "committedDate": "2020-02-25T17:44:45Z", "message": "updated RFC"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDMzMTIy", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/56#pullrequestreview-364433122", "createdAt": "2020-02-25T20:42:13Z", "commit": {"oid": "04cd4a2d83892008a716cc1cfd5e6a3e6536213c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDo0MjoxM1rOFuUfPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMDo1NDo1OVrOFuU2mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDExNDQ5Mw==", "bodyText": "Elaborate ODFE?", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/56#discussion_r384114493", "createdAt": "2020-02-25T20:42:13Z", "author": {"login": "vamshin"}, "path": "RFC.md", "diffHunk": "@@ -1,15 +1,14 @@\n # K-Nearest Neighbors(KNN) Search Plugin\n-\n-The purpose of this document is to request the community for comments (RFC) for a new Open Distro for Elasticsearch KNN plugin and to collect feedback from the community. This RFC covers the high-level functionality of the KNN plugin and does not cover architecture and implementation details.\n+The purpose of this document is to introduce a new Open Distro for Elasticsearch KNN plugin and to request comments from the community (RFC). This RFC covers only the high-level functionality of the KNN plugin and does not cover architecture and implementation details.\n \n ## Problem Statement\n-Customers with similarity-based search use cases such as face search, fraud detection and recommendation systems have a need for finding K-Nearest Neighbor (KNN) using the machine learning models. The existing solutions for KNN search were inefficient and did not operate well at scale. Brute-force KNN search using CPU is very computationally intensive and generally too slow for large-scale real-time search applications.\n+Customers with similarity-based search use cases like facial recognition, fraud detection and recommendation systems have a need for finding the K-Nearest Neighbor (KNN) of vectors in high dimensional space. The existing solutions for KNN search in distributed systems either do not operate well at scale or are difficult to use and integrate with current systems.\n \n ## Proposed Solution\n \n-Open Distro for Elasticsearch enables you to run nearest neighbor search on billions of documents across thousands of dimensions with the same ease as running any regular Elasticsearch query. You can use aggregations and filter clauses to further refine your similarity search operations. Power use-cases include product recommendations, fraud detection, image and video search, related document search, and more.\n+The ODFE KNN plugin enables you to run an Approximate K Nearest Neighbor search on billions of documents across thousands of dimensions with the added usability and reliability of Elasticsearch. You can use aggregations and filter clauses to further refine your similarity search operations. Powerful use-cases include product recommendations, fraud detection, image and video search, related document search, and more.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04cd4a2d83892008a716cc1cfd5e6a3e6536213c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyMDQ3NA==", "bodyText": "\"The existing solutions for KNN search do not operate well at scale, difficult to use, computationally intensive and generally too slow for large-scale real-time search applications.\" ?", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/56#discussion_r384120474", "createdAt": "2020-02-25T20:54:59Z", "author": {"login": "vamshin"}, "path": "RFC.md", "diffHunk": "@@ -1,15 +1,14 @@\n # K-Nearest Neighbors(KNN) Search Plugin\n-\n-The purpose of this document is to request the community for comments (RFC) for a new Open Distro for Elasticsearch KNN plugin and to collect feedback from the community. This RFC covers the high-level functionality of the KNN plugin and does not cover architecture and implementation details.\n+The purpose of this document is to introduce a new Open Distro for Elasticsearch KNN plugin and to request comments from the community (RFC). This RFC covers only the high-level functionality of the KNN plugin and does not cover architecture and implementation details.\n \n ## Problem Statement\n-Customers with similarity-based search use cases such as face search, fraud detection and recommendation systems have a need for finding K-Nearest Neighbor (KNN) using the machine learning models. The existing solutions for KNN search were inefficient and did not operate well at scale. Brute-force KNN search using CPU is very computationally intensive and generally too slow for large-scale real-time search applications.\n+Customers with similarity-based search use cases like facial recognition, fraud detection and recommendation systems have a need for finding the K-Nearest Neighbor (KNN) of vectors in high dimensional space. The existing solutions for KNN search in distributed systems either do not operate well at scale or are difficult to use and integrate with current systems.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04cd4a2d83892008a716cc1cfd5e6a3e6536213c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fca1ec6579423f18fa1c5fdea5a2a5258a07bb5", "author": {"user": {"login": "jmazanec15", "name": "Jack Mazanec"}}, "url": "https://github.com/opendistro-for-elasticsearch/k-NN/commit/4fca1ec6579423f18fa1c5fdea5a2a5258a07bb5", "committedDate": "2020-04-01T17:16:58Z", "message": "improved wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTkwMzI5", "url": "https://github.com/opendistro-for-elasticsearch/k-NN/pull/56#pullrequestreview-386590329", "createdAt": "2020-04-02T16:23:02Z", "commit": {"oid": "4fca1ec6579423f18fa1c5fdea5a2a5258a07bb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1325, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}