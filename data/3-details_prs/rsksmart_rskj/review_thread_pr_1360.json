{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjIxMjAx", "number": 1360, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxOTo0MVrOE3xleQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoyMjoyNFrOE3xqSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTE5NTQ1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/resources/config/testnet.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxOTo0MVrOHxUNUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo1NDowM1rOHx-g_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3MzM2Mg==", "bodyText": "This is different than the default value, is it ok?", "url": "https://github.com/rsksmart/rskj/pull/1360#discussion_r521473362", "createdAt": "2020-11-11T16:19:41Z", "author": {"login": "donequis"}, "path": "rskj-core/src/main/resources/config/testnet.conf", "diffHunk": "@@ -71,3 +71,10 @@ wallet {\n     enabled = false\n     accounts = []\n }\n+\n+cache {\n+    btcBlockStore {\n+        depth: 50000,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d52494c6646aa7c18db3320ef4ae574025179638"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2NjUyNg==", "bodyText": "Yes, this is why I made it configurable, to change it in testnet. I'm testing syncing fully in testnet, and its performing much better. I will try to do more testing, but we can discuss this if you want.", "url": "https://github.com/rsksmart/rskj/pull/1360#discussion_r522166526", "createdAt": "2020-11-12T14:54:03Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/resources/config/testnet.conf", "diffHunk": "@@ -71,3 +71,10 @@ wallet {\n     enabled = false\n     accounts = []\n }\n+\n+cache {\n+    btcBlockStore {\n+        depth: 50000,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3MzM2Mg=="}, "originalCommit": {"oid": "d52494c6646aa7c18db3320ef4ae574025179638"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTIwNzc3OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/config/RskSystemProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoyMjoyNFrOHxUUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDowMzo0MlrOHyL_xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3NTIyNQ==", "bodyText": "There are two things that you can check here (or in the caller)\n\n\nThat depth <= size\n\n\nThat depth >= 4000 or some other constant. You can add a warning log in case that it fails, there's no reason to fail. But a lower value sounds problematic", "url": "https://github.com/rsksmart/rskj/pull/1360#discussion_r521475225", "createdAt": "2020-11-11T16:22:24Z", "author": {"login": "donequis"}, "path": "rskj-core/src/main/java/co/rsk/config/RskSystemProperties.java", "diffHunk": "@@ -338,6 +338,14 @@ public int getReceiptsCacheSize() {\n         return configFromFiles.getInt(\"cache.receipts.max-elements\");\n     }\n \n+    public int getBtcBlockStoreCacheSize() {\n+        return configFromFiles.getInt(\"cache.btcBlockStore.size\");\n+    }\n+\n+    public int getBtcBlockStoreCacheDepth() {\n+        return configFromFiles.getInt(\"cache.btcBlockStore.depth\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d52494c6646aa7c18db3320ef4ae574025179638"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4NzM5OA==", "bodyText": "Ok, I will add some warning.", "url": "https://github.com/rsksmart/rskj/pull/1360#discussion_r522387398", "createdAt": "2020-11-12T20:03:42Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/config/RskSystemProperties.java", "diffHunk": "@@ -338,6 +338,14 @@ public int getReceiptsCacheSize() {\n         return configFromFiles.getInt(\"cache.receipts.max-elements\");\n     }\n \n+    public int getBtcBlockStoreCacheSize() {\n+        return configFromFiles.getInt(\"cache.btcBlockStore.size\");\n+    }\n+\n+    public int getBtcBlockStoreCacheDepth() {\n+        return configFromFiles.getInt(\"cache.btcBlockStore.depth\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3NTIyNQ=="}, "originalCommit": {"oid": "d52494c6646aa7c18db3320ef4ae574025179638"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4534, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}