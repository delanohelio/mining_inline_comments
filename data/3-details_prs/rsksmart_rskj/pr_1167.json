{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzUxMDQ4", "number": 1167, "title": "Signature cache v2", "bodyText": "", "createdAt": "2020-01-31T20:07:16Z", "url": "https://github.com/rsksmart/rskj/pull/1167", "merged": true, "mergeCommit": {"oid": "85c6841a74ee784ca2878c9b23a02be662fab792"}, "closed": true, "closedAt": "2020-02-20T02:12:46Z", "author": {"login": "julianlen"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAtoKsgBqjMwMDIzNjQzMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF8-IIAFqTM2MTQzMTE4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e07cb8f283cf786f5698d4a7bff705f47dda7aa6", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/e07cb8f283cf786f5698d4a7bff705f47dda7aa6", "committedDate": "2020-01-31T19:58:42Z", "message": "create an interface SignatureCache for both caches"}, "afterCommit": {"oid": "8deb8e4d96ea2adac1618ee51590f2195479ca59", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/8deb8e4d96ea2adac1618ee51590f2195479ca59", "committedDate": "2020-02-03T14:14:41Z", "message": "create an interface SignatureCache for both caches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDIwNDcw", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-354020470", "createdAt": "2020-02-05T20:32:30Z", "commit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDozMjozMVrOFmGOiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDozMjozMVrOFmGOiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5MjIzNQ==", "bodyText": "Why change this for the if? Looks like this is a better option.", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375492235", "createdAt": "2020-02-05T20:32:31Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/org/ethereum/core/ReceivedTxSignatureCache.java", "diffHunk": "@@ -23,10 +42,27 @@ public RskAddress getSender(Transaction transaction) {\n             return RemascTransaction.REMASC_ADDRESS;\n         }\n \n-        return addressesCache.computeIfAbsent(transaction, Transaction::getSender);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NDE2MTMw", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-354416130", "createdAt": "2020-02-06T12:35:30Z", "commit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjozNTozMFrOFmZjcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzoyMTo1N1rOFmaxxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwODg4Mw==", "bodyText": "Interfaces should start with a capital I so it should be ISignatureCache", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375808883", "createdAt": "2020-02-06T12:35:30Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/SignatureCache.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+\n+public interface SignatureCache {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwOTI2Ng==", "bodyText": "you should receive by parameter a Signaturecache instead of a ReceivedTxSignatureCache in case in the feature you want to have another cache", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375809266", "createdAt": "2020-02-06T12:36:25Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockTxSignatureCache.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+import co.rsk.remasc.RemascTransaction;\n+import co.rsk.util.MaxSizeHashMap;\n+\n+import java.util.Map;\n+\n+public class BlockTxSignatureCache implements SignatureCache {\n+\n+    private static final int MAX_CACHE_SIZE = 6000;\n+\n+    private final Map<Transaction, RskAddress> addressesCache;\n+    private SignatureCache cacheN2;\n+\n+    public BlockTxSignatureCache(ReceivedTxSignatureCache cacheN2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgxMDg5Nw==", "bodyText": "Use the same patter as in https://github.com/rsksmart/rskj/pull/1167/files#diff-d7ef64078e614be54c9ed736c516b5a0R45 to avoid accessing twice to the array", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375810897", "createdAt": "2020-02-06T12:40:33Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockTxSignatureCache.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+import co.rsk.remasc.RemascTransaction;\n+import co.rsk.util.MaxSizeHashMap;\n+\n+import java.util.Map;\n+\n+public class BlockTxSignatureCache implements SignatureCache {\n+\n+    private static final int MAX_CACHE_SIZE = 6000;\n+\n+    private final Map<Transaction, RskAddress> addressesCache;\n+    private SignatureCache cacheN2;\n+\n+    public BlockTxSignatureCache(ReceivedTxSignatureCache cacheN2) {\n+        this.cacheN2 = cacheN2;\n+        addressesCache = new MaxSizeHashMap<>(MAX_CACHE_SIZE,true);\n+    }\n+\n+    public RskAddress getSender(Transaction transaction) {\n+\n+        if (transaction instanceof RemascTransaction) {\n+            return RemascTransaction.REMASC_ADDRESS;\n+        }\n+\n+        if (containsTx(transaction)) {\n+            return addressesCache.get(transaction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgxMTI3Mg==", "bodyText": "Same here, do RskAddress sender = cacheN2.getSender(transaction); and then  in the if check for not null instead of first checking for contains and then getting the value", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375811272", "createdAt": "2020-02-06T12:41:30Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockTxSignatureCache.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+import co.rsk.remasc.RemascTransaction;\n+import co.rsk.util.MaxSizeHashMap;\n+\n+import java.util.Map;\n+\n+public class BlockTxSignatureCache implements SignatureCache {\n+\n+    private static final int MAX_CACHE_SIZE = 6000;\n+\n+    private final Map<Transaction, RskAddress> addressesCache;\n+    private SignatureCache cacheN2;\n+\n+    public BlockTxSignatureCache(ReceivedTxSignatureCache cacheN2) {\n+        this.cacheN2 = cacheN2;\n+        addressesCache = new MaxSizeHashMap<>(MAX_CACHE_SIZE,true);\n+    }\n+\n+    public RskAddress getSender(Transaction transaction) {\n+\n+        if (transaction instanceof RemascTransaction) {\n+            return RemascTransaction.REMASC_ADDRESS;\n+        }\n+\n+        if (containsTx(transaction)) {\n+            return addressesCache.get(transaction);\n+        }\n+\n+        if (cacheN2.containsTx(transaction)) {\n+            RskAddress sender = cacheN2.getSender(transaction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgxMTgyMw==", "bodyText": "I recomend exposing the get instead of the containsTx as its more useful", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375811823", "createdAt": "2020-02-06T12:42:54Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockTxSignatureCache.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+import co.rsk.remasc.RemascTransaction;\n+import co.rsk.util.MaxSizeHashMap;\n+\n+import java.util.Map;\n+\n+public class BlockTxSignatureCache implements SignatureCache {\n+\n+    private static final int MAX_CACHE_SIZE = 6000;\n+\n+    private final Map<Transaction, RskAddress> addressesCache;\n+    private SignatureCache cacheN2;\n+\n+    public BlockTxSignatureCache(ReceivedTxSignatureCache cacheN2) {\n+        this.cacheN2 = cacheN2;\n+        addressesCache = new MaxSizeHashMap<>(MAX_CACHE_SIZE,true);\n+    }\n+\n+    public RskAddress getSender(Transaction transaction) {\n+\n+        if (transaction instanceof RemascTransaction) {\n+            return RemascTransaction.REMASC_ADDRESS;\n+        }\n+\n+        if (containsTx(transaction)) {\n+            return addressesCache.get(transaction);\n+        }\n+\n+        if (cacheN2.containsTx(transaction)) {\n+            RskAddress sender = cacheN2.getSender(transaction);\n+            addressesCache.put(transaction, sender);\n+            return sender;\n+        }\n+\n+        return transaction.getSender();\n+    }\n+\n+    @Override\n+    public boolean containsTx(Transaction transaction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgxMjE4OA==", "bodyText": "use the get and then check for null instead of first checking for contains and then getting the value.", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375812188", "createdAt": "2020-02-06T12:43:46Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockTxSignatureCache.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2017 RSK Labs Ltd.\n+ * (derived from ethereumJ library, Copyright (c) 2016 <ether.camp>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.ethereum.core;\n+\n+import co.rsk.core.RskAddress;\n+import co.rsk.remasc.RemascTransaction;\n+import co.rsk.util.MaxSizeHashMap;\n+\n+import java.util.Map;\n+\n+public class BlockTxSignatureCache implements SignatureCache {\n+\n+    private static final int MAX_CACHE_SIZE = 6000;\n+\n+    private final Map<Transaction, RskAddress> addressesCache;\n+    private SignatureCache cacheN2;\n+\n+    public BlockTxSignatureCache(ReceivedTxSignatureCache cacheN2) {\n+        this.cacheN2 = cacheN2;\n+        addressesCache = new MaxSizeHashMap<>(MAX_CACHE_SIZE,true);\n+    }\n+\n+    public RskAddress getSender(Transaction transaction) {\n+\n+        if (transaction instanceof RemascTransaction) {\n+            return RemascTransaction.REMASC_ADDRESS;\n+        }\n+\n+        if (containsTx(transaction)) {\n+            return addressesCache.get(transaction);\n+        }\n+\n+        if (cacheN2.containsTx(transaction)) {\n+            RskAddress sender = cacheN2.getSender(transaction);\n+            addressesCache.put(transaction, sender);\n+            return sender;\n+        }\n+\n+        return transaction.getSender();\n+    }\n+\n+    @Override\n+    public boolean containsTx(Transaction transaction) {\n+        return addressesCache.containsKey(transaction);\n+    }\n+\n+    @Override\n+    public void storeSender(Transaction transaction) {\n+\n+        if (transaction instanceof RemascTransaction) {\n+            return;\n+        }\n+\n+        if (cacheN2.containsTx(transaction)) {\n+            RskAddress sender = cacheN2.getSender(transaction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNDY0MA==", "bodyText": "could you add a spy to signatureCache = rskTestContext.getReceivedTxSignatureCache();\nAnd create a test where you add two times the same transaction, then check that the cached called only once the storeSender for that transaction and the getSender was called at least twice", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375824640", "createdAt": "2020-02-06T13:12:25Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/test/java/co/rsk/core/bc/TransactionPoolImplTest.java", "diffHunk": "@@ -710,6 +711,52 @@ public void checkTxWhichCanNotBePaidIsRejected() {\n         Assert.assertTrue(transactionPool.getQueuedTransactions().isEmpty());\n     }\n \n+    @Test\n+    public void aNewTxIsAddedInTxPoolAndShouldBeAddedInCache(){\n+        Coin balance = Coin.valueOf(1000000);\n+        createTestAccounts(2, balance);\n+        Account account1 = createAccount(1);\n+        Transaction tx = createSampleTransaction(1, 2, 1000, 0);\n+        transactionPool.addTransaction(tx);\n+\n+        Assert.assertTrue(signatureCache.containsTx(tx));\n+        Assert.assertArrayEquals(signatureCache.getSender(tx).getBytes(), account1.getAddress().getBytes());\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyODkzNQ==", "bodyText": "put the 100 on the same line as the rest", "url": "https://github.com/rsksmart/rskj/pull/1167#discussion_r375828935", "createdAt": "2020-02-06T13:21:57Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/test/java/co/rsk/test/builders/BlockChainBuilder.java", "diffHunk": "@@ -206,19 +206,24 @@ public BlockChainImpl build() {\n \n         BlockValidator blockValidator = validatorBuilder.build();\n \n+        ReceivedTxSignatureCache receivedTxSignatureCache = new ReceivedTxSignatureCache();\n+        BlockTxSignatureCache blockTxSignatureCache = new BlockTxSignatureCache(receivedTxSignatureCache);\n+\n         TransactionExecutorFactory transactionExecutorFactory = new TransactionExecutorFactory(\n                 config,\n                 blockStore,\n                 receiptStore,\n                 blockFactory,\n                 new ProgramInvokeFactoryImpl(),\n-                new PrecompiledContracts(config, bridgeSupportFactory)\n+                new PrecompiledContracts(config, bridgeSupportFactory),\n+                blockTxSignatureCache\n         );\n         repositoryLocator = new RepositoryLocator(trieStore, stateRootHandler);\n+\n         transactionPool = new TransactionPoolImpl(\n                 config, repositoryLocator, this.blockStore, blockFactory, new TestCompositeEthereumListener(),\n-                transactionExecutorFactory, 10, 100\n-        );\n+                transactionExecutorFactory, receivedTxSignatureCache, 10,\n+                100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eda11d912132086328297d7865dcdf01d732df28", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/eda11d912132086328297d7865dcdf01d732df28", "committedDate": "2020-02-05T13:25:01Z", "message": "test in TxPoolImpl added for TxReceivedCache"}, "afterCommit": {"oid": "5da1a7a36c09ba3d37e24fa6ad7792803f779169", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/5da1a7a36c09ba3d37e24fa6ad7792803f779169", "committedDate": "2020-02-06T18:19:52Z", "message": "test in TxPoolImpl added for TxReceivedCache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5da1a7a36c09ba3d37e24fa6ad7792803f779169", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/5da1a7a36c09ba3d37e24fa6ad7792803f779169", "committedDate": "2020-02-06T18:19:52Z", "message": "test in TxPoolImpl added for TxReceivedCache"}, "afterCommit": {"oid": "69c2849dbdf1c83c2e017ff74f9952ba7a9aa2cf", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/69c2849dbdf1c83c2e017ff74f9952ba7a9aa2cf", "committedDate": "2020-02-06T18:26:55Z", "message": "test in TxPoolImpl added for TxReceivedCache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "560d2c926dd1e48711e7700c699509d75ca6c642", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/560d2c926dd1e48711e7700c699509d75ca6c642", "committedDate": "2020-02-06T18:41:00Z", "message": "tests for BlockTxSignatureCache"}, "afterCommit": {"oid": "24b5fe7904fb83bc2d87256c5ad8acef076dfac9", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/24b5fe7904fb83bc2d87256c5ad8acef076dfac9", "committedDate": "2020-02-10T19:34:37Z", "message": "tests for BlockTxSignatureCache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24b5fe7904fb83bc2d87256c5ad8acef076dfac9", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/24b5fe7904fb83bc2d87256c5ad8acef076dfac9", "committedDate": "2020-02-10T19:34:37Z", "message": "tests for BlockTxSignatureCache"}, "afterCommit": {"oid": "ed834d63ccd737c6ee6c534ff84df926e648711a", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/ed834d63ccd737c6ee6c534ff84df926e648711a", "committedDate": "2020-02-10T20:21:47Z", "message": "tests for BlockTxSignatureCache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed834d63ccd737c6ee6c534ff84df926e648711a", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/ed834d63ccd737c6ee6c534ff84df926e648711a", "committedDate": "2020-02-10T20:21:47Z", "message": "tests for BlockTxSignatureCache"}, "afterCommit": {"oid": "3478547adef1042f16bb018f9c4cdd9a674f5851", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/3478547adef1042f16bb018f9c4cdd9a674f5851", "committedDate": "2020-02-11T14:58:59Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3478547adef1042f16bb018f9c4cdd9a674f5851", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/3478547adef1042f16bb018f9c4cdd9a674f5851", "committedDate": "2020-02-11T14:58:59Z", "message": "create an abstract class for shared behaviour between signaturecaches"}, "afterCommit": {"oid": "0047e0353179285a8ddc87cd45f1012dc8b81783", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/0047e0353179285a8ddc87cd45f1012dc8b81783", "committedDate": "2020-02-11T15:20:33Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0047e0353179285a8ddc87cd45f1012dc8b81783", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/0047e0353179285a8ddc87cd45f1012dc8b81783", "committedDate": "2020-02-11T15:20:33Z", "message": "create an abstract class for shared behaviour between signaturecaches"}, "afterCommit": {"oid": "9f6823c66cf8b666f88a7423bbe4ec50a7e35374", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/9f6823c66cf8b666f88a7423bbe4ec50a7e35374", "committedDate": "2020-02-11T15:23:08Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f6823c66cf8b666f88a7423bbe4ec50a7e35374", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/9f6823c66cf8b666f88a7423bbe4ec50a7e35374", "committedDate": "2020-02-11T15:23:08Z", "message": "create an abstract class for shared behaviour between signaturecaches"}, "afterCommit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/47f0215348d20ef4bcd67edc1243a748baf8c919", "committedDate": "2020-02-11T15:23:49Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODU3Mjg1", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-356857285", "createdAt": "2020-02-11T17:37:38Z", "commit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzEwOTI4", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-357710928", "createdAt": "2020-02-12T19:05:44Z", "commit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDUyNzEx", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-358452711", "createdAt": "2020-02-13T18:30:46Z", "commit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTg0Mzky", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-360584392", "createdAt": "2020-02-18T18:48:11Z", "commit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47f0215348d20ef4bcd67edc1243a748baf8c919", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/47f0215348d20ef4bcd67edc1243a748baf8c919", "committedDate": "2020-02-11T15:23:49Z", "message": "create an abstract class for shared behaviour between signaturecaches"}, "afterCommit": {"oid": "c4e199971439c35e6fb7eb784aa390a00a173502", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/c4e199971439c35e6fb7eb784aa390a00a173502", "committedDate": "2020-02-18T19:28:20Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjIzNTA0", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-360623504", "createdAt": "2020-02-18T19:46:40Z", "commit": {"oid": "c4e199971439c35e6fb7eb784aa390a00a173502"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f14e6b3e332112e728a125b25561e34b011fdf", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/22f14e6b3e332112e728a125b25561e34b011fdf", "committedDate": "2020-02-19T20:05:29Z", "message": "SignatureCache class added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0700bdbcb621b7979bbcd8e5b322bf1c366de42", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/f0700bdbcb621b7979bbcd8e5b322bf1c366de42", "committedDate": "2020-02-19T20:05:29Z", "message": "signature cache as a handshake between TransactionPool and Transaction for getsender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec52bf08ce7eb29d0795a59b609962b454035c9f", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/ec52bf08ce7eb29d0795a59b609962b454035c9f", "committedDate": "2020-02-19T20:05:29Z", "message": "signatures from TTransactionPool are cached by SignatureCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70d29c1fec32999d10801dcbb4dce2ad323068a3", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/70d29c1fec32999d10801dcbb4dce2ad323068a3", "committedDate": "2020-02-19T20:05:29Z", "message": "change signatureCache for cache level 2 that is just for signatures of received tx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67684fc65b2e865e1a9dffa4875ad17757c29cb6", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/67684fc65b2e865e1a9dffa4875ad17757c29cb6", "committedDate": "2020-02-19T20:05:29Z", "message": "Add a signature cache level 1, for signatures that coming from tx in blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25e0054241e770c8da4f1c60647b579ebf017a99", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/25e0054241e770c8da4f1c60647b579ebf017a99", "committedDate": "2020-02-19T20:05:29Z", "message": "SignatureCache was added to TransactionExecutor as internal variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7235dc85bdce88ebb999cee180ef582c6c799ba0", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/7235dc85bdce88ebb999cee180ef582c6c799ba0", "committedDate": "2020-02-19T20:05:29Z", "message": "create an interface SignatureCache for both caches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "865c3c5c2387dc5c75c69a8eea6779983b2c5a08", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/865c3c5c2387dc5c75c69a8eea6779983b2c5a08", "committedDate": "2020-02-19T20:05:29Z", "message": "Headers were added in the new classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "198e78096c9243fca548aba7b114a5f1c0d50a18", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/198e78096c9243fca548aba7b114a5f1c0d50a18", "committedDate": "2020-02-19T20:05:29Z", "message": "changes in both caches for no store invalid txs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f502357d23554cc101721a65834e03a4e0ab87", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/26f502357d23554cc101721a65834e03a4e0ab87", "committedDate": "2020-02-19T20:05:29Z", "message": "test in TxPoolImpl added for TxReceivedCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2c73657663779c19191b56fb2b584e4a97a62b0", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/a2c73657663779c19191b56fb2b584e4a97a62b0", "committedDate": "2020-02-19T20:05:29Z", "message": "tests for BlockTxSignatureCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31347dbc2fd6293934955bee6068cda1b51e277f", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/31347dbc2fd6293934955bee6068cda1b51e277f", "committedDate": "2020-02-19T20:05:29Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4e199971439c35e6fb7eb784aa390a00a173502", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/c4e199971439c35e6fb7eb784aa390a00a173502", "committedDate": "2020-02-18T19:28:20Z", "message": "create an abstract class for shared behaviour between signaturecaches"}, "afterCommit": {"oid": "31347dbc2fd6293934955bee6068cda1b51e277f", "author": {"user": {"login": "julianlen", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/31347dbc2fd6293934955bee6068cda1b51e277f", "committedDate": "2020-02-19T20:05:29Z", "message": "create an abstract class for shared behaviour between signaturecaches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDMxMTg2", "url": "https://github.com/rsksmart/rskj/pull/1167#pullrequestreview-361431186", "createdAt": "2020-02-19T20:57:52Z", "commit": {"oid": "31347dbc2fd6293934955bee6068cda1b51e277f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 646, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}