{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxODM4Nzgw", "number": 1363, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyMDowOVrOE5ng4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDozODo1N1rOE6C--g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODUxNjgxOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/Bridge.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyMDowOVrOH0Ln-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTowODozM1rOH0NZuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3ODQ1OA==", "bodyText": "Coukld we check if the argument is really an address? Now, the code discard the \"left-most\" bytes, that could contain anything.", "url": "https://github.com/rsksmart/rskj/pull/1363#discussion_r524478458", "createdAt": "2020-11-16T18:20:09Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/peg/Bridge.java", "diffHunk": "@@ -1094,20 +1095,20 @@ public boolean hasBtcBlockCoinbaseTransactionInformation(Object[] args) {\n         return bridgeSupport.hasBtcBlockCoinbaseTransactionInformation(blockHash);\n     }\n \n-    public int registerBtcTransfer(Object[] args) {\n-        logger.trace(\"registerBtcTransfer\");\n-\n-        byte[] btcTxSerialized = (byte[]) args[0];\n-        int height = ((BigInteger) args[1]).intValue();\n-        byte[] pmtSerialized = (byte[]) args[2];\n-        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap((byte[]) args[3]);\n-        Address userRefundAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[4]);\n-        RskAddress lbcAddress = new RskAddress((String) args[5]);\n-        Address lpBtcAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[6]);\n-        boolean executionStatus = (Boolean) args[7];\n+    public int registerFastBridgeBtcTransaction(Object[] args) {\n+        logger.trace(\"registerFastBridgeBtcTransaction\");\n \n         try {\n-            return bridgeSupport.registerBtcTransfer(\n+            byte[] btcTxSerialized = (byte[]) args[0];\n+            int height = ((BigInteger) args[1]).intValue();\n+            byte[] pmtSerialized = (byte[]) args[2];\n+            Sha256Hash derivationArgumentsHash = Sha256Hash.wrap((byte[]) args[3]);\n+            Address userRefundAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[4]);\n+            RskAddress lbcAddress = new RskAddress(((DataWord)args[5]).getLast20Bytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc02bfbfce90e610bffc1bc060e17df8fb6a9f6b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUwNzU3OQ==", "bodyText": "I will modify it! thank you!", "url": "https://github.com/rsksmart/rskj/pull/1363#discussion_r524507579", "createdAt": "2020-11-16T19:08:33Z", "author": {"login": "pamgonzalez"}, "path": "rskj-core/src/main/java/co/rsk/peg/Bridge.java", "diffHunk": "@@ -1094,20 +1095,20 @@ public boolean hasBtcBlockCoinbaseTransactionInformation(Object[] args) {\n         return bridgeSupport.hasBtcBlockCoinbaseTransactionInformation(blockHash);\n     }\n \n-    public int registerBtcTransfer(Object[] args) {\n-        logger.trace(\"registerBtcTransfer\");\n-\n-        byte[] btcTxSerialized = (byte[]) args[0];\n-        int height = ((BigInteger) args[1]).intValue();\n-        byte[] pmtSerialized = (byte[]) args[2];\n-        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap((byte[]) args[3]);\n-        Address userRefundAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[4]);\n-        RskAddress lbcAddress = new RskAddress((String) args[5]);\n-        Address lpBtcAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[6]);\n-        boolean executionStatus = (Boolean) args[7];\n+    public int registerFastBridgeBtcTransaction(Object[] args) {\n+        logger.trace(\"registerFastBridgeBtcTransaction\");\n \n         try {\n-            return bridgeSupport.registerBtcTransfer(\n+            byte[] btcTxSerialized = (byte[]) args[0];\n+            int height = ((BigInteger) args[1]).intValue();\n+            byte[] pmtSerialized = (byte[]) args[2];\n+            Sha256Hash derivationArgumentsHash = Sha256Hash.wrap((byte[]) args[3]);\n+            Address userRefundAddress = new Address(bridgeConstants.getBtcParams(), (byte[]) args[4]);\n+            RskAddress lbcAddress = new RskAddress(((DataWord)args[5]).getLast20Bytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3ODQ1OA=="}, "originalCommit": {"oid": "fc02bfbfce90e610bffc1bc060e17df8fb6a9f6b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODUyNTE3OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeMethods.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyMjoyMlrOH0LtKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo1NDowMlrOH0M37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3OTc4NA==", "bodyText": "Why this change is NOT A HARD FORK? AFAIK, this change doesn't rerun previous sent transactions", "url": "https://github.com/rsksmart/rskj/pull/1363#discussion_r524479784", "createdAt": "2020-11-16T18:22:22Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeMethods.java", "diffHunk": "@@ -577,14 +577,14 @@\n             activations -> activations.isActive(RSKIP143),\n             false\n     ),\n-    REGISTER_BTC_TRANSFER(\n+    REGISTER_FAST_BRIDGE_BTC_TRANSACTION(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc02bfbfce90e610bffc1bc060e17df8fb6a9f6b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5ODkyNg==", "bodyText": "It is a HF. (RSKIP 176)", "url": "https://github.com/rsksmart/rskj/pull/1363#discussion_r524498926", "createdAt": "2020-11-16T18:54:02Z", "author": {"login": "pamgonzalez"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeMethods.java", "diffHunk": "@@ -577,14 +577,14 @@\n             activations -> activations.isActive(RSKIP143),\n             false\n     ),\n-    REGISTER_BTC_TRANSFER(\n+    REGISTER_FAST_BRIDGE_BTC_TRANSACTION(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3OTc4NA=="}, "originalCommit": {"oid": "fc02bfbfce90e610bffc1bc060e17df8fb6a9f6b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzAxNzU0OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/Bridge.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDozODo1N1rOH0366w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDozODo1N1rOH0366w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIwNDIwMw==", "bodyText": "RegisterBtcTransactionException should not be needed I think", "url": "https://github.com/rsksmart/rskj/pull/1363#discussion_r525204203", "createdAt": "2020-11-17T14:38:57Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/Bridge.java", "diffHunk": "@@ -1116,10 +1117,11 @@ public int registerBtcTransfer(Object[] args) {\n                 userRefundAddress,\n                 lbcAddress,\n                 lpBtcAddress,\n-                executionStatus);\n-        } catch (BlockStoreException | RegisterBtcTransferException | IOException | RegisterBtcTransactionException e) {\n-            logger.warn(\"Exception in registerBtcTransfer\", e);\n-            throw new RuntimeException(\"Exception in registerBtcTransfer\", e);\n+                valueToTransfer\n+            );\n+        } catch (BlockStoreException | RegisterFastBridgeBtcTransactionException | IOException | RegisterBtcTransactionException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4bd7cdc025258f2dbfe866d9b19758b7c11a1df"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4542, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}