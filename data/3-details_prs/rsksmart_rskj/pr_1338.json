{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNzE1MzY0", "number": 1338, "title": "Add new data of (Fast Bridge Federation P2SH, Derivation Arguments ha\u2026", "bodyText": "\u2026sh, Federation P2SH) in StorageProvider.\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object which included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given.", "createdAt": "2020-10-13T19:07:43Z", "url": "https://github.com/rsksmart/rskj/pull/1338", "merged": true, "mergeCommit": {"oid": "cd7aed4ff957f8a4ae7240256de7f10a189d52a7"}, "closed": true, "closedAt": "2020-10-20T18:56:16Z", "author": {"login": "pamgonzalez"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSOdaQAFqTUwNzc5NzIwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUdP-agFqTUxMzAyNDk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3Nzk3MjAx", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-507797201", "createdAt": "2020-10-13T20:18:22Z", "commit": {"oid": "dc5f76e0985be0bf4691d019bde315e66409f7c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDoxODoyMlrOHg3z6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDoxODoyMlrOHg3z6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIzMDg4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FastBridgeFederationP2SH {\n          \n          \n            \n                private byte[] fastBridgeFederationP2SH;\n          \n          \n            \n                private byte[] federationP2SH;\n          \n          \n            \n            public class FastBridgeFederationInformation {\n          \n          \n            \n                private byte[] fastBridgeFederationScriptHash;\n          \n          \n            \n                private byte[] federationScriptHash;", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r504230888", "createdAt": "2020-10-13T20:18:22Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/fastBridge/FastBridgeFederationP2SH.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package co.rsk.peg.fastBridge;\n+\n+import co.rsk.bitcoinj.core.Sha256Hash;\n+\n+public class FastBridgeFederationP2SH {\n+    private byte[] fastBridgeFederationP2SH;\n+    private byte[] federationP2SH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc5f76e0985be0bf4691d019bde315e66409f7c1"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc5f76e0985be0bf4691d019bde315e66409f7c1", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/dc5f76e0985be0bf4691d019bde315e66409f7c1", "committedDate": "2020-10-13T19:02:42Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "93ef7625dc3ac4fe6243be7c8527a6fad66a603f", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/93ef7625dc3ac4fe6243be7c8527a6fad66a603f", "committedDate": "2020-10-15T15:57:10Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93ef7625dc3ac4fe6243be7c8527a6fad66a603f", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/93ef7625dc3ac4fe6243be7c8527a6fad66a603f", "committedDate": "2020-10-15T15:57:10Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "4944a2f2e10e46eea3cbb064271530d900a95515", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/4944a2f2e10e46eea3cbb064271530d900a95515", "committedDate": "2020-10-15T17:44:39Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4944a2f2e10e46eea3cbb064271530d900a95515", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/4944a2f2e10e46eea3cbb064271530d900a95515", "committedDate": "2020-10-15T17:44:39Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "216a81858332343552e49147d02872169d5451cc", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/216a81858332343552e49147d02872169d5451cc", "committedDate": "2020-10-15T19:16:29Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NzAzNjAz", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-509703603", "createdAt": "2020-10-15T19:32:22Z", "commit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "216a81858332343552e49147d02872169d5451cc", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/216a81858332343552e49147d02872169d5451cc", "committedDate": "2020-10-15T19:16:29Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "98f82286a4a135d8fc6e2cfaea6cf02acc1d12e5", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/98f82286a4a135d8fc6e2cfaea6cf02acc1d12e5", "committedDate": "2020-10-16T14:54:46Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODE1NjI0", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-509815624", "createdAt": "2020-10-15T21:16:36Z", "commit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMToxNjozN1rOHibM7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMToyMToyOFrOHibb6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg1OTMwOQ==", "bodyText": "maybe throw an exception?", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505859309", "createdAt": "2020-10-15T21:16:37Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSerializationUtils.java", "diffHunk": "@@ -743,6 +744,34 @@ public static CoinbaseInformation deserializeCoinbaseInformation(byte[] data) {\n         return RLP.encodeList(rlpElements);\n     }\n \n+    public static FastBridgeFederationInformation deserializeFederationBridge(byte[] data) {\n+        if ((data == null) || (data.length == 0)) {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MDAyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static byte[] serializeFederationBridge(FastBridgeFederationInformation fastBridgeFederationP2SH) {\n          \n          \n            \n                public static byte[] serializeFastBridgeInformation(FastBridgeFederationInformation fastBridgeFederationInformation) {", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505860022", "createdAt": "2020-10-15T21:17:31Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSerializationUtils.java", "diffHunk": "@@ -743,6 +744,34 @@ public static CoinbaseInformation deserializeCoinbaseInformation(byte[] data) {\n         return RLP.encodeList(rlpElements);\n     }\n \n+    public static FastBridgeFederationInformation deserializeFederationBridge(byte[] data) {\n+        if ((data == null) || (data.length == 0)) {\n+            return null;\n+        }\n+\n+        RLPList rlpList = (RLPList)RLP.decode2(data).get(0);\n+\n+        if (rlpList.size() != 2) {\n+            throw new RuntimeException(String.format(\"Invalid serialized Federation Bridge: expected 2 value but got %n\", rlpList.size()));\n+        }\n+\n+        byte[] fastBridgeFederationP2SH = rlpList.get(0).getRLPData();\n+        byte[] federationP2SH = rlpList.get(1).getRLPData();\n+\n+        return new FastBridgeFederationInformation(fastBridgeFederationP2SH, federationP2SH);\n+    }\n+\n+    public static byte[] serializeFederationBridge(FastBridgeFederationInformation fastBridgeFederationP2SH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MTEyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    FastBridgeFederationInformation fastBridgeFedP2SH = this.safeGetFromRepository(\n          \n          \n            \n                            getStorageKeyForfastBridgeFederationInformation(derivationArgsHash),\n          \n          \n            \n                            BridgeSerializationUtils::deserializeFederationBridge\n          \n          \n            \n                    );\n          \n          \n            \n                    if (fastBridgeFedP2SH == null) {\n          \n          \n            \n                        return Optional.empty();\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return Optional.of(fastBridgeFedP2SH);\n          \n          \n            \n                    FastBridgeFederationInformation fastBridgeFederationInformation = this.safeGetFromRepository(\n          \n          \n            \n                            getStorageKeyForfastBridgeFederationInformation(derivationArgsHash),\n          \n          \n            \n                            BridgeSerializationUtils::deserializeFederationBridge\n          \n          \n            \n                    );\n          \n          \n            \n                    if (fastBridgeFederationInformation == null) {\n          \n          \n            \n                        return Optional.empty();\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    return Optional.of(fastBridgeFederationInformation);", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505861126", "createdAt": "2020-10-15T21:18:58Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -594,39 +596,79 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public byte[] getFastBridgeFederationP2SH(Sha256Hash derivationArgsHash) {\n+    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n         if (!activations.isActive(RSKIP176)) {\n-            return null;\n+            return Optional.empty();\n         }\n \n         byte[] fastBridgeFedP2SH = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash));\n \n-        return fastBridgeFedP2SH;\n+        if (fastBridgeFedP2SH == null ) {\n+            return Optional.empty();\n+        }\n+\n+        return Optional.of(fastBridgeFedP2SH);\n     }\n \n-    public void setDerivationArgumentsP2SH(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n+    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n         if (activations.isActive(RSKIP176)) {\n-            if (derivationArgumentsP2SHToSave == null) {\n-                derivationArgumentsP2SHToSave = new HashMap<>();\n+            if (fastBridgeDerivationArgumentsScriptHashToSave == null) {\n+                fastBridgeDerivationArgumentsScriptHashToSave = new HashMap<>();\n             }\n-            derivationArgumentsP2SHToSave.put(derivationArgsHash, fastBridgeFedP2SH);\n+            fastBridgeDerivationArgumentsScriptHashToSave.put(derivationArgsHash, fastBridgeFedP2SH);\n         }\n     }\n \n-    protected Map<Sha256Hash, byte[]> getDerivationArgumentsP2SHToSave() {\n-        return derivationArgumentsP2SHToSave;\n+    private void saveDerivationArgumentsScriptHash() {\n+        if (fastBridgeDerivationArgumentsScriptHashToSave == null) {\n+            return;\n+        }\n+\n+        fastBridgeDerivationArgumentsScriptHashToSave.forEach((derivationArgsHash, fastBridgeFedP2SH) ->\n+                repository.addStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash), fastBridgeFedP2SH)\n+        );\n     }\n \n-    private void saveDerivationArgumentsP2SH() {\n-        if (derivationArgumentsP2SHToSave == null) {\n+    public Optional<FastBridgeFederationInformation> getFastBridgeFederationInformation(Sha256Hash derivationArgsHash) {\n+        if (!activations.isActive(RSKIP176)) {\n+            return Optional.empty();\n+        }\n+\n+        FastBridgeFederationInformation fastBridgeFedP2SH = this.safeGetFromRepository(\n+                getStorageKeyForfastBridgeFederationInformation(derivationArgsHash),\n+                BridgeSerializationUtils::deserializeFederationBridge\n+        );\n+        if (fastBridgeFedP2SH == null) {\n+            return Optional.empty();\n+        }\n+\n+        return Optional.of(fastBridgeFedP2SH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MTM4NA==", "bodyText": "same comment regarding naming", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505861384", "createdAt": "2020-10-15T21:19:18Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -594,39 +596,79 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public byte[] getFastBridgeFederationP2SH(Sha256Hash derivationArgsHash) {\n+    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n         if (!activations.isActive(RSKIP176)) {\n-            return null;\n+            return Optional.empty();\n         }\n \n         byte[] fastBridgeFedP2SH = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash));\n \n-        return fastBridgeFedP2SH;\n+        if (fastBridgeFedP2SH == null ) {\n+            return Optional.empty();\n+        }\n+\n+        return Optional.of(fastBridgeFedP2SH);\n     }\n \n-    public void setDerivationArgumentsP2SH(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n+    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n         if (activations.isActive(RSKIP176)) {\n-            if (derivationArgumentsP2SHToSave == null) {\n-                derivationArgumentsP2SHToSave = new HashMap<>();\n+            if (fastBridgeDerivationArgumentsScriptHashToSave == null) {\n+                fastBridgeDerivationArgumentsScriptHashToSave = new HashMap<>();\n             }\n-            derivationArgumentsP2SHToSave.put(derivationArgsHash, fastBridgeFedP2SH);\n+            fastBridgeDerivationArgumentsScriptHashToSave.put(derivationArgsHash, fastBridgeFedP2SH);\n         }\n     }\n \n-    protected Map<Sha256Hash, byte[]> getDerivationArgumentsP2SHToSave() {\n-        return derivationArgumentsP2SHToSave;\n+    private void saveDerivationArgumentsScriptHash() {\n+        if (fastBridgeDerivationArgumentsScriptHashToSave == null) {\n+            return;\n+        }\n+\n+        fastBridgeDerivationArgumentsScriptHashToSave.forEach((derivationArgsHash, fastBridgeFedP2SH) ->\n+                repository.addStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash), fastBridgeFedP2SH)\n+        );\n     }\n \n-    private void saveDerivationArgumentsP2SH() {\n-        if (derivationArgumentsP2SHToSave == null) {\n+    public Optional<FastBridgeFederationInformation> getFastBridgeFederationInformation(Sha256Hash derivationArgsHash) {\n+        if (!activations.isActive(RSKIP176)) {\n+            return Optional.empty();\n+        }\n+\n+        FastBridgeFederationInformation fastBridgeFedP2SH = this.safeGetFromRepository(\n+                getStorageKeyForfastBridgeFederationInformation(derivationArgsHash),\n+                BridgeSerializationUtils::deserializeFederationBridge\n+        );\n+        if (fastBridgeFedP2SH == null) {\n+            return Optional.empty();\n+        }\n+\n+        return Optional.of(fastBridgeFedP2SH);\n+    }\n+\n+    public void setFastBridgeFederationInformation(Sha256Hash derivationArgsHash, FastBridgeFederationInformation fastBridgeFedP2SH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MTk3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public FastBridgeFederationInformation(byte[] fastBridgeFederationP2SH, byte[] federationP2SH) {\n          \n          \n            \n                public FastBridgeFederationInformation(byte[] fastBridgeFederationScriptHash, byte[] federationScriptHash) {", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505861977", "createdAt": "2020-10-15T21:20:03Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/fastbridge/FastBridgeFederationInformation.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package co.rsk.peg.fastbridge;\n+\n+public class FastBridgeFederationInformation {\n+    private byte[] fastBridgeFederationScriptHash;\n+    private byte[] federationScriptHash;\n+\n+    public FastBridgeFederationInformation(byte[] fastBridgeFederationP2SH, byte[] federationP2SH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg2MzE0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static FastBridgeFederationInformation deserializeFederationBridge(byte[] data) {\n          \n          \n            \n                public static FastBridgeFederationInformation deserializeFastBridgeInformation(byte[] data) {", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r505863146", "createdAt": "2020-10-15T21:21:28Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSerializationUtils.java", "diffHunk": "@@ -743,6 +744,34 @@ public static CoinbaseInformation deserializeCoinbaseInformation(byte[] data) {\n         return RLP.encodeList(rlpElements);\n     }\n \n+    public static FastBridgeFederationInformation deserializeFederationBridge(byte[] data) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "216a81858332343552e49147d02872169d5451cc"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98f82286a4a135d8fc6e2cfaea6cf02acc1d12e5", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/98f82286a4a135d8fc6e2cfaea6cf02acc1d12e5", "committedDate": "2020-10-16T14:54:46Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "f678e85fa843af87ab66915b130e4a563a2d9e87", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/f678e85fa843af87ab66915b130e4a563a2d9e87", "committedDate": "2020-10-16T19:25:55Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f678e85fa843af87ab66915b130e4a563a2d9e87", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/f678e85fa843af87ab66915b130e4a563a2d9e87", "committedDate": "2020-10-16T19:25:55Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "7f1511635581e6c4713a2e6e0a0ca2de9075ab53", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/7f1511635581e6c4713a2e6e0a0ca2de9075ab53", "committedDate": "2020-10-18T22:25:51Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f1511635581e6c4713a2e6e0a0ca2de9075ab53", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/7f1511635581e6c4713a2e6e0a0ca2de9075ab53", "committedDate": "2020-10-18T22:25:51Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "32f677341fd7c06e7f39e33d60d3683ee2ad6711", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/32f677341fd7c06e7f39e33d60d3683ee2ad6711", "committedDate": "2020-10-18T22:47:24Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzI0NDk0", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-511724494", "createdAt": "2020-10-19T12:50:47Z", "commit": {"oid": "32f677341fd7c06e7f39e33d60d3683ee2ad6711"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjo1MDo0N1rOHkMwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjo1MDo0N1rOHkMwbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxOTc5MA==", "bodyText": "should call deserializeFastBridgeInformation method", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r507719790", "createdAt": "2020-10-19T12:50:47Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -626,6 +630,49 @@ private void saveDerivationArgumentsScriptHash() {\n         );\n     }\n \n+    public Optional<FastBridgeFederationInformation> getFastBridgeFederationInformation(byte[] fastBridgeFederationP2SH) {\n+        if (!activations.isActive(RSKIP176)) {\n+            return Optional.empty();\n+        }\n+\n+        if (fastBridgeFederationP2SH == null || fastBridgeFederationP2SH.length == 0) {\n+            return Optional.empty();\n+        }\n+\n+        FastBridgeFederationInformation fastBridgeFederationInformation = this.safeGetFromRepository(\n+                getStorageKeyForfastBridgeFederationInformation(fastBridgeFederationP2SH),\n+                BridgeSerializationUtils::deserializeFederationBridge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f677341fd7c06e7f39e33d60d3683ee2ad6711"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32f677341fd7c06e7f39e33d60d3683ee2ad6711", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/32f677341fd7c06e7f39e33d60d3683ee2ad6711", "committedDate": "2020-10-18T22:47:24Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/6415b7ee922668b36b074f978b88f6e220584311", "committedDate": "2020-10-19T13:46:50Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODU4ODQy", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-511858842", "createdAt": "2020-10-19T14:59:06Z", "commit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1OTowN1rOHkTEYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1OTowN1rOHkTEYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMzIwMQ==", "bodyText": "%n should be %d I think", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r507823201", "createdAt": "2020-10-19T14:59:07Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSerializationUtils.java", "diffHunk": "@@ -743,6 +744,33 @@ public static CoinbaseInformation deserializeCoinbaseInformation(byte[] data) {\n         return RLP.encodeList(rlpElements);\n     }\n \n+    public static FastBridgeFederationInformation deserializeFastBridgeInformation(byte[] data) {\n+        if ((data == null) || (data.length == 0)) {\n+            throw new RuntimeException(\"Invalid serialized Fast Bridge Federation: null data or no data to deserialize\");\n+        }\n+\n+        RLPList rlpList = (RLPList)RLP.decode2(data).get(0);\n+\n+        if (rlpList.size() != 2) {\n+            throw new RuntimeException(String.format(\"Invalid serialized Fast Bridge Federation: expected 2 value but got %n\", rlpList.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODU5Nzk4", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-511859798", "createdAt": "2020-10-19T14:59:58Z", "commit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1OTo1OFrOHkTHTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1OTo1OFrOHkTHTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMzk0OA==", "bodyText": "Should we check if rlpList is null?", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r507823948", "createdAt": "2020-10-19T14:59:58Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSerializationUtils.java", "diffHunk": "@@ -743,6 +744,33 @@ public static CoinbaseInformation deserializeCoinbaseInformation(byte[] data) {\n         return RLP.encodeList(rlpElements);\n     }\n \n+    public static FastBridgeFederationInformation deserializeFastBridgeInformation(byte[] data) {\n+        if ((data == null) || (data.length == 0)) {\n+            throw new RuntimeException(\"Invalid serialized Fast Bridge Federation: null data or no data to deserialize\");\n+        }\n+\n+        RLPList rlpList = (RLPList)RLP.decode2(data).get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278d52c8e237960e1fc9b573ed2f54a120cb5c98", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/278d52c8e237960e1fc9b573ed2f54a120cb5c98", "committedDate": "2020-10-19T15:31:32Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6415b7ee922668b36b074f978b88f6e220584311", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/6415b7ee922668b36b074f978b88f6e220584311", "committedDate": "2020-10-19T13:46:50Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}, "afterCommit": {"oid": "278d52c8e237960e1fc9b573ed2f54a120cb5c98", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/278d52c8e237960e1fc9b573ed2f54a120cb5c98", "committedDate": "2020-10-19T15:31:32Z", "message": "Add new data of  (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in StorageProvider.\n\nSave the data of (Fast Bridge Federation P2SH, Derivation Arguments hash, Federation P2SH) in Storage Provider\nReturns an object whitch included the info of (Fast Bridge Federation P2SH, Federation P2SH) when a Derivation Arguments hash is given."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODkyNTY2", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-511892566", "createdAt": "2020-10-19T15:32:28Z", "commit": {"oid": "278d52c8e237960e1fc9b573ed2f54a120cb5c98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDI0OTQ0", "url": "https://github.com/rsksmart/rskj/pull/1338#pullrequestreview-513024944", "createdAt": "2020-10-20T18:37:07Z", "commit": {"oid": "278d52c8e237960e1fc9b573ed2f54a120cb5c98"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODozNzowN1rOHlL1MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODozNzowN1rOHlL1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1MzIwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setFastBridgeFederationInformation(byte[] fastBridgeScriptHash, FastBridgeFederationInformation fastBridgeFedP2SH) {\n          \n          \n            \n                public void setFastBridgeFederationInformation(byte[] fastBridgeScriptHash, FastBridgeFederationInformation fastBridgeFederationInformation) {", "url": "https://github.com/rsksmart/rskj/pull/1338#discussion_r508753200", "createdAt": "2020-10-20T18:37:07Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -626,6 +630,49 @@ private void saveDerivationArgumentsScriptHash() {\n         );\n     }\n \n+    public Optional<FastBridgeFederationInformation> getFastBridgeFederationInformation(byte[] fastBridgeFederationP2SH) {\n+        if (!activations.isActive(RSKIP176)) {\n+            return Optional.empty();\n+        }\n+\n+        if (fastBridgeFederationP2SH == null || fastBridgeFederationP2SH.length == 0) {\n+            return Optional.empty();\n+        }\n+\n+        FastBridgeFederationInformation fastBridgeFederationInformation = this.safeGetFromRepository(\n+                getStorageKeyForfastBridgeFederationInformation(fastBridgeFederationP2SH),\n+                BridgeSerializationUtils::deserializeFastBridgeInformation\n+        );\n+        if (fastBridgeFederationInformation == null) {\n+            return Optional.empty();\n+        }\n+\n+        return Optional.of(fastBridgeFederationInformation);\n+    }\n+\n+    public void setFastBridgeFederationInformation(byte[] fastBridgeScriptHash, FastBridgeFederationInformation fastBridgeFedP2SH) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "278d52c8e237960e1fc9b573ed2f54a120cb5c98"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 588, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}