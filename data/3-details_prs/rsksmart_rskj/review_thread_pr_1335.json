{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzYxNTI0", "number": 1335, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjoyN1rOEtLiyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjozNlrOEtLjCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODEwNTA1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjoyN1rOHg1EVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjoyN1rOHg1EVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NTk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));\n          \n          \n            \n                        logger.warn(\"Rejecting peg-in: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        panicProcessor.panic(\"peg-in-refund\", String.format(\"peg-in money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));", "url": "https://github.com/rsksmart/rskj/pull/1335#discussion_r504185940", "createdAt": "2020-10-13T18:56:27Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "diffHunk": "@@ -2215,19 +2237,24 @@ private Address getParsedAddress(String base58Address) throws AddressFormatExcep\n         return Address.fromBase58(btcContext.getParams(), base58Address);\n     }\n \n-    private void generateRejectionRelease(BtcTransaction btcTx, Address senderBtcAddress, Transaction rskTx, Coin totalAmount) throws IOException {\n-        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, senderBtcAddress);\n+    private void generateRejectionRelease(\n+        BtcTransaction btcTx,\n+        Address btcRefundAddress,\n+        Transaction rskTx,\n+        Coin totalAmount) throws IOException {\n+\n+        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, btcRefundAddress);\n         if (buildReturnResult.isPresent()) {\n             if (activations.isActive(ConsensusRule.RSKIP146)) {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber(), rskTx.getHash());\n                 eventLogger.logReleaseBtcRequested(rskTx.getHash().getBytes(), buildReturnResult.get().getBtcTx(), totalAmount);\n             } else {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber());\n             }\n-            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", senderBtcAddress, rskTx, totalAmount);\n+            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);\n         } else {\n-            logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), senderBtcAddress, rskTx, totalAmount);\n-            panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), senderBtcAddress, rskTx, totalAmount));\n+            logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n+            panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODEwNTY4OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjozNlrOHg1EsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjozNlrOHg1EsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NjAzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        logger.info(\"Rejecting peg-in: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);", "url": "https://github.com/rsksmart/rskj/pull/1335#discussion_r504186032", "createdAt": "2020-10-13T18:56:36Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "diffHunk": "@@ -2215,19 +2237,24 @@ private Address getParsedAddress(String base58Address) throws AddressFormatExcep\n         return Address.fromBase58(btcContext.getParams(), base58Address);\n     }\n \n-    private void generateRejectionRelease(BtcTransaction btcTx, Address senderBtcAddress, Transaction rskTx, Coin totalAmount) throws IOException {\n-        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, senderBtcAddress);\n+    private void generateRejectionRelease(\n+        BtcTransaction btcTx,\n+        Address btcRefundAddress,\n+        Transaction rskTx,\n+        Coin totalAmount) throws IOException {\n+\n+        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, btcRefundAddress);\n         if (buildReturnResult.isPresent()) {\n             if (activations.isActive(ConsensusRule.RSKIP146)) {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber(), rskTx.getHash());\n                 eventLogger.logReleaseBtcRequested(rskTx.getHash().getBytes(), buildReturnResult.get().getBtcTx(), totalAmount);\n             } else {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber());\n             }\n-            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", senderBtcAddress, rskTx, totalAmount);\n+            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4500, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}