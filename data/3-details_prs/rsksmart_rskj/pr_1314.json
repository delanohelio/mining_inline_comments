{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzY2MjI5", "number": 1314, "title": "BLAKE2 Compression Function F Precompile ", "bodyText": "Goals of this PR\n\nMerge this other PR into master\nBe compatible with EIP-152\n\nI'm treating this new precompile as blackbox: byte array goes in byte array goes out\nAlso a little fix has been made regarding ExtcodeHash OPCODE tests.\nNOTE: RSKIP176 will be added soon :)", "createdAt": "2020-09-21T15:01:55Z", "url": "https://github.com/rsksmart/rskj/pull/1314", "merged": true, "mergeCommit": {"oid": "dfe2130f2970d1685d28b9f4712e994630abc815"}, "closed": true, "closedAt": "2021-02-26T14:03:48Z", "author": {"login": "fedejinich"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNY8-BAFqTQ5NzgzNzM2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd96m7pAFqTU5OTYwMjMyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODM3MzYz", "url": "https://github.com/rsksmart/rskj/pull/1314#pullrequestreview-497837363", "createdAt": "2020-09-28T19:37:20Z", "commit": {"oid": "cad5f0dcc8e6e1e1d1cc8d964e4aec0ffb986dcf"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTozNzoyMFrOHZM2PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTo0MjoyOFrOHZNArQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4Njk0MA==", "bodyText": "Be careful here.\nI would leave the error assertion outside or in a new method, and add a \"fail()\" if it doesnt fail.\nCould happen, that asserts / doesnt fail, and it will be still green when it shouldnt.", "url": "https://github.com/rsksmart/rskj/pull/1314#discussion_r496186940", "createdAt": "2020-09-28T19:37:20Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/test/java/org/ethereum/vm/PrecompiledContractTest.java", "diffHunk": "@@ -228,4 +233,103 @@ public void modExpTest() {\n         assertArrayEquals(EMPTY_BYTE_ARRAY, contract.execute(null));\n     }\n \n+    /**\n+     * Test Vectors for BLAKE2F are described at EIP-152 (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-152.md)\n+     */\n+\n+    @Test\n+    public void blake2fTestVector0() {\n+        String data = \"\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector1() {\n+        String data = \"00000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector2() {\n+        String data = \"000000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector3() {\n+        String data = \"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000002\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_FINAL_BLOCK_BYTES);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector4() {\n+        String data = \"0000000048c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"08c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d282e6ad7f520e511f6c3e2b8c68059b9442be0454267ce079217e1319cde05b\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector5() {\n+        String data = \"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"ba80a53f981c4d0d6a2797b69f12f6e94c212f14685ac4b74b12bb6fdbffa2d17d87c5392aab792dc252d5de4533cc9518d38aa8dbf1925ab92386edd4009923\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector6() {\n+        String data =\"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000\";\n+        String expected = \"75ab69d3190a562c51aef8d88f1c2775876944407270c42c9844252c26d2875298743e7f6d5ea2f2d3e8d226039cd31b4e426ac4f2d3d666a610c2116fde4735\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector7() {\n+        String data = \"0000000148c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"b63a380cb2897d521994a85234ee2c181b5f844d2c624c002677e9703449d2fba551b3a8333bcdf5f2f7e08993d53923de3d64fcc68c034e717b9293fed7a421\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector8() {\n+        // This tests takes a lot of time to be executed\n+\n+        String data = \"ffffffff48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"fc59093aafa9ab43daae0e914c57635c5402d8e3d2130eb9b3cc181de7f0ecf9b22bf99a7815ce16419e200e01846e6b5df8cc7703041bbceb571de6631d2615\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+\n+    private void internalBlake2fTestVector(String data, String expected, String expectedError) {\n+        ActivationConfig.ForBlock activations = mock(ActivationConfig.ForBlock.class);\n+        when(activations.isActive(ConsensusRule.RSKIP176)).thenReturn(true);\n+\n+        DataWord addr = DataWord.valueFromHex(\"0000000000000000000000000000000000000000000000000000000000000009\");\n+        PrecompiledContract contract = precompiledContracts.getContractForAddress(activations, addr);\n+        assertNotNull(contract);\n+\n+        byte[] dataBytes = Hex.decode(data);\n+\n+        try {\n+            byte[] resultBytes = contract.execute(dataBytes);\n+\n+            assertEquals(expected, Hex.toHexString(resultBytes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cad5f0dcc8e6e1e1d1cc8d964e4aec0ffb986dcf"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4OTYxMw==", "bodyText": "shouldnt we assert also for gas consumed? not sure where.", "url": "https://github.com/rsksmart/rskj/pull/1314#discussion_r496189613", "createdAt": "2020-09-28T19:42:28Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/test/java/org/ethereum/vm/PrecompiledContractTest.java", "diffHunk": "@@ -228,4 +233,103 @@ public void modExpTest() {\n         assertArrayEquals(EMPTY_BYTE_ARRAY, contract.execute(null));\n     }\n \n+    /**\n+     * Test Vectors for BLAKE2F are described at EIP-152 (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-152.md)\n+     */\n+\n+    @Test\n+    public void blake2fTestVector0() {\n+        String data = \"\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector1() {\n+        String data = \"00000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector2() {\n+        String data = \"000000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_INPUT_LENGHT);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector3() {\n+        String data = \"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000002\";\n+\n+        internalBlake2fTestVector(data, null, PrecompiledContracts.Blake2F.BLAKE2F_ERROR_FINAL_BLOCK_BYTES);\n+    }\n+\n+    @Test\n+    public void blake2fTestVector4() {\n+        String data = \"0000000048c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"08c9bcf367e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d282e6ad7f520e511f6c3e2b8c68059b9442be0454267ce079217e1319cde05b\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector5() {\n+        String data = \"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"ba80a53f981c4d0d6a2797b69f12f6e94c212f14685ac4b74b12bb6fdbffa2d17d87c5392aab792dc252d5de4533cc9518d38aa8dbf1925ab92386edd4009923\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector6() {\n+        String data =\"0000000c48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000\";\n+        String expected = \"75ab69d3190a562c51aef8d88f1c2775876944407270c42c9844252c26d2875298743e7f6d5ea2f2d3e8d226039cd31b4e426ac4f2d3d666a610c2116fde4735\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector7() {\n+        String data = \"0000000148c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"b63a380cb2897d521994a85234ee2c181b5f844d2c624c002677e9703449d2fba551b3a8333bcdf5f2f7e08993d53923de3d64fcc68c034e717b9293fed7a421\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+    @Test\n+    public void blake2fTestVector8() {\n+        // This tests takes a lot of time to be executed\n+\n+        String data = \"ffffffff48c9bdf267e6096a3ba7ca8485ae67bb2bf894fe72f36e3cf1361d5f3af54fa5d182e6ad7f520e511f6c3e2b8c68059b6bbd41fbabd9831f79217e1319cde05b61626300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000001\";\n+        String expected = \"fc59093aafa9ab43daae0e914c57635c5402d8e3d2130eb9b3cc181de7f0ecf9b22bf99a7815ce16419e200e01846e6b5df8cc7703041bbceb571de6631d2615\";\n+\n+        internalBlake2fTestVector(data, expected, null);\n+    }\n+\n+    private void internalBlake2fTestVector(String data, String expected, String expectedError) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cad5f0dcc8e6e1e1d1cc8d964e4aec0ffb986dcf"}, "originalPosition": 95}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c4331c00cc6260836e790d13e38b2c91a01df9f", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/6c4331c00cc6260836e790d13e38b2c91a01df9f", "committedDate": "2020-09-30T22:44:04Z", "message": "added some comments"}, "afterCommit": {"oid": "3c34d05dd9dd07975917e34d67b5bb414324a0cb", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/3c34d05dd9dd07975917e34d67b5bb414324a0cb", "committedDate": "2020-10-01T14:51:19Z", "message": "added some comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c34d05dd9dd07975917e34d67b5bb414324a0cb", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/3c34d05dd9dd07975917e34d67b5bb414324a0cb", "committedDate": "2020-10-01T14:51:19Z", "message": "added some comments"}, "afterCommit": {"oid": "53dd1f72755b73f01396697fabdcd124027f4a57", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/53dd1f72755b73f01396697fabdcd124027f4a57", "committedDate": "2020-10-01T16:01:12Z", "message": "added some comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53dd1f72755b73f01396697fabdcd124027f4a57", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/53dd1f72755b73f01396697fabdcd124027f4a57", "committedDate": "2020-10-01T16:01:12Z", "message": "added some comments"}, "afterCommit": {"oid": "1ce2b4bedf625aa3ac037a96769829bb3713f595", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/1ce2b4bedf625aa3ac037a96769829bb3713f595", "committedDate": "2020-10-01T16:04:16Z", "message": "added some comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03a0eba7a8a4d9cd5ae5007b930ed76465f05df1", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/03a0eba7a8a4d9cd5ae5007b930ed76465f05df1", "committedDate": "2020-11-19T20:16:11Z", "message": "blake2f included in rskip153"}, "afterCommit": {"oid": "cca778c1da3f38579925170433dc9eb0e41d3b8d", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/cca778c1da3f38579925170433dc9eb0e41d3b8d", "committedDate": "2020-11-19T20:50:59Z", "message": "blake2f included in rskip153"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cca778c1da3f38579925170433dc9eb0e41d3b8d", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/cca778c1da3f38579925170433dc9eb0e41d3b8d", "committedDate": "2020-11-19T20:50:59Z", "message": "blake2f included in rskip153"}, "afterCommit": {"oid": "f73126bfad6f79a0a30cff00f10fef8883a2b0b9", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/f73126bfad6f79a0a30cff00f10fef8883a2b0b9", "committedDate": "2021-01-06T14:42:36Z", "message": "blake2f included in rskip153"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b24e8e3e94e3811283ce5af1705aa74faa11747e", "author": {"user": {"login": "patogallaiovlabs", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/b24e8e3e94e3811283ce5af1705aa74faa11747e", "committedDate": "2021-01-06T16:17:16Z", "message": "fix tests. add blacke2f check to Precompiled Error handling"}, "afterCommit": {"oid": "528025cfa7d471a6c28f1f4acac64ec32c030f97", "author": {"user": {"login": "patogallaiovlabs", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/528025cfa7d471a6c28f1f4acac64ec32c030f97", "committedDate": "2021-01-06T18:14:28Z", "message": "fix tests. add blacke2f check to Precompiled Error handling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4438719f2b5c7eb98b8231af17689efa80dd97e8", "author": {"user": {"login": "patogallaiovlabs", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/4438719f2b5c7eb98b8231af17689efa80dd97e8", "committedDate": "2021-01-06T18:19:10Z", "message": "fix sonar issues"}, "afterCommit": {"oid": "b32609ccf0cdc19d58548ccf02fd2d0d995e0cfd", "author": {"user": {"login": "patogallaiovlabs", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/b32609ccf0cdc19d58548ccf02fd2d0d995e0cfd", "committedDate": "2021-01-06T19:20:18Z", "message": "fix sonar issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NTMyMTMx", "url": "https://github.com/rsksmart/rskj/pull/1314#pullrequestreview-564532131", "createdAt": "2021-01-08T19:42:09Z", "commit": {"oid": "b32609ccf0cdc19d58548ccf02fd2d0d995e0cfd"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxOTo0MjowOVrOIQe0yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxOTo0NDoyMlrOIQe4sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDE1MzE2Mg==", "bodyText": "wrong class name?", "url": "https://github.com/rsksmart/rskj/pull/1314#discussion_r554153162", "createdAt": "2021-01-08T19:42:09Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/test/java/org/ethereum/crypto/cryptohash/Black2bTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.ethereum.crypto.cryptohash;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+\n+/**\n+ * Created by bakaking on 25/10/2019.\n+ */\n+public class Black2bTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32609ccf0cdc19d58548ccf02fd2d0d995e0cfd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDE1NDE2Mw==", "bodyText": "Any chance to have more tests, with different input arguments, like number of rownds or f in false", "url": "https://github.com/rsksmart/rskj/pull/1314#discussion_r554154163", "createdAt": "2021-01-08T19:44:22Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/test/java/org/ethereum/crypto/cryptohash/Black2bTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.ethereum.crypto.cryptohash;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+\n+/**\n+ * Created by bakaking on 25/10/2019.\n+ */\n+public class Black2bTest {\n+\n+    @Test\n+    public void testF() {\n+        long[] h = {\n+                0x6a09e667f2bdc948L, 0xbb67ae8584caa73bL,\n+                0x3c6ef372fe94f82bL, 0xa54ff53a5f1d36f1L,\n+                0x510e527fade682d1L, 0x9b05688c2b3e6c1fL,\n+                0x1f83d9abfb41bd6bL, 0x5be0cd19137e2179L,\n+        };\n+        long[] m = {\n+                0x0000000000636261, 0x0000000000000000, 0x0000000000000000,\n+                0x0000000000000000, 0x0000000000000000, 0x0000000000000000,\n+                0x0000000000000000, 0x0000000000000000, 0x0000000000000000,\n+                0x0000000000000000, 0x0000000000000000, 0x0000000000000000,\n+                0x0000000000000000, 0x0000000000000000, 0x0000000000000000,\n+                0x0000000000000000,\n+        };\n+        long[] c = {3, 0};\n+        boolean f = true;\n+        int rounds = 12;\n+\n+        long[] expected = {\n+                0x0D4D1C983FA580BAL, 0xE9F6129FB697276AL,\n+                0xB7C45A68142F214CL, 0xD1A2FFDB6FBB124BL,\n+                0x2D79AB2A39C5877DL, 0x95CC3345DED552C2L,\n+                0x5A92F1DBA88AD318L, 0x239900D4ED8623B9L};\n+\n+        Blake2b.functionF(h, m, c, f, rounds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b32609ccf0cdc19d58548ccf02fd2d0d995e0cfd"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb8576520ae731dcd9f502ec631df358ee43c87b", "author": {"user": {"login": "fedejinich", "name": "Fede Jinich"}}, "url": "https://github.com/rsksmart/rskj/commit/eb8576520ae731dcd9f502ec631df358ee43c87b", "committedDate": "2021-01-22T16:37:54Z", "message": "add eip152-example as dsl test"}, "afterCommit": {"oid": "3134366ae6196db62b205b1434e3ffa053ec1dcb", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/3134366ae6196db62b205b1434e3ffa053ec1dcb", "committedDate": "2021-02-04T13:06:16Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3134366ae6196db62b205b1434e3ffa053ec1dcb", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/3134366ae6196db62b205b1434e3ffa053ec1dcb", "committedDate": "2021-02-04T13:06:16Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}, "afterCommit": {"oid": "4bb9e97168ceeb1479fe84235b85fae35431c0be", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/4bb9e97168ceeb1479fe84235b85fae35431c0be", "committedDate": "2021-02-04T13:11:44Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjIzODI2", "url": "https://github.com/rsksmart/rskj/pull/1314#pullrequestreview-595623826", "createdAt": "2021-02-22T17:56:28Z", "commit": {"oid": "4bb9e97168ceeb1479fe84235b85fae35431c0be"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f25bb7ed1841f29c303b21b77d706b00d48e1987", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/f25bb7ed1841f29c303b21b77d706b00d48e1987", "committedDate": "2021-02-25T19:20:45Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4bb9e97168ceeb1479fe84235b85fae35431c0be", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/4bb9e97168ceeb1479fe84235b85fae35431c0be", "committedDate": "2021-02-04T13:11:44Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}, "afterCommit": {"oid": "f25bb7ed1841f29c303b21b77d706b00d48e1987", "author": {"user": {"login": "bakaoh", "name": null}}, "url": "https://github.com/rsksmart/rskj/commit/f25bb7ed1841f29c303b21b77d706b00d48e1987", "committedDate": "2021-02-25T19:20:45Z", "message": "EIP-152: Add BLAKE2 Compression Function F Precompile\n\nUpdate BLAKE2F Precompile tests\n\nblake2f for iris hardfork\n\nfix blake2f integration\n\nchanged iris300 activation in unit test to only the test that need it\n\nrenamed rskip176\n\nadded missing test vectors (0 1 2 3) for blake2f precompiled\n\nignored testVector8 & separate testing logic for success and failure cases\n\nadding gasCost tests for blake2f\n\nadded some comments\n\nblake2f testing without Pair class\n\nfix: adapted rskip174 tests\n\nblake2f included in rskip153\n\nadd missing changes after rebase\n\nfix tests. add blacke2f check to Precompiled Error handling\n\nfix sonar issues\n\nfixed typo\n\nremove comment\n\nadd eip152-example as dsl test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5NjAyMzI3", "url": "https://github.com/rsksmart/rskj/pull/1314#pullrequestreview-599602327", "createdAt": "2021-02-26T14:03:38Z", "commit": {"oid": "f25bb7ed1841f29c303b21b77d706b00d48e1987"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 559, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}