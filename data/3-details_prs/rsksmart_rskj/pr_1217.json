{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MTQ4MzYy", "number": 1217, "title": "GetStorage and Storage Messages", "bodyText": "// Request for a proof of contract storage.\nRequest::Storage {\nID: 6\nInputs:\nLoose(H256) // block hash\nLoose(H256) // address hash\nLoose(H256) // storage key hash\nOutputs:\nU8 // merkle inclusion proof from storage trie\nH256 reusable_as(0) // storage value\n}", "createdAt": "2020-04-17T13:57:29Z", "url": "https://github.com/rsksmart/rskj/pull/1217", "merged": true, "mergeCommit": {"oid": "0fdbff98034721aabe4397763ddc68638fcf6865"}, "closed": true, "closedAt": "2020-04-17T17:16:51Z", "author": {"login": "smcsicardi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYRqtXAH2gAyNDA1MTQ4MzYyOjZmZDNlYjEyNjY5MzAzMzE4ZWY0ZjAyNGIzNThmZWY3NDdiNzdkNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYkfhwgFqTM5NTYyOTk2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6fd3eb12669303318ef4f024b358fef747b77d4c", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/6fd3eb12669303318ef4f024b358fef747b77d4c", "committedDate": "2020-04-16T19:15:18Z", "message": "init storage messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a93577270f7a0213f4f4e699f944b1c43aba4ca0", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/a93577270f7a0213f4f4e699f944b1c43aba4ca0", "committedDate": "2020-04-16T19:16:50Z", "message": "get storage functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe30fb1d456d8803d42e7699164e92dbd9ffedb8", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/fe30fb1d456d8803d42e7699164e92dbd9ffedb8", "committedDate": "2020-04-17T13:49:41Z", "message": "tests!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "911cdaef7757ff81dcbd630225f0d358cf1d995c", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/911cdaef7757ff81dcbd630225f0d358cf1d995c", "committedDate": "2020-04-17T14:15:08Z", "message": "headers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f985f003e104f26a7fa63b5f5cff6dde270e362", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/6f985f003e104f26a7fa63b5f5cff6dde270e362", "committedDate": "2020-04-17T14:13:04Z", "message": "headers"}, "afterCommit": {"oid": "911cdaef7757ff81dcbd630225f0d358cf1d995c", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/911cdaef7757ff81dcbd630225f0d358cf1d995c", "committedDate": "2020-04-17T14:15:08Z", "message": "headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8196f3641ab40786228c8370d0ebf511da6b5fe7", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/8196f3641ab40786228c8370d0ebf511da6b5fe7", "committedDate": "2020-04-17T14:34:50Z", "message": "forgotten break"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTI3MjAx", "url": "https://github.com/rsksmart/rskj/pull/1217#pullrequestreview-395527201", "createdAt": "2020-04-17T14:55:45Z", "commit": {"oid": "8196f3641ab40786228c8370d0ebf511da6b5fe7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDo1NTo0NVrOGHRYjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNToxNTowOFrOGHSI1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3ODAyOQ==", "bodyText": "Dont forget to log in the next way:\nString logBlockHash = Hex.toHexString(blockHash);\nlogger.trace(\"Processing block header request {} block {}\", id, logBlockHash);", "url": "https://github.com/rsksmart/rskj/pull/1217#discussion_r410278029", "createdAt": "2020-04-17T14:55:45Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/LightProcessor.java", "diffHunk": "@@ -185,4 +186,28 @@ public void processGetBlockBodyMessage(long id, byte[] blockHash, LightPeer ligh\n     public void processBlockBodyMessage(long id, List<BlockHeader> uncles, List<Transaction> transactions, LightPeer lightPeer) {\n         throw new UnsupportedOperationException(\"Not supported BlockBody processing\");\n     }\n+\n+    public void processGetStorageMessage(long id, byte[] blockHash, byte[] addressHash, byte[] storageKeyHash, LightPeer lightPeer) {\n+        final Block block = blockStore.getBlockByHash(blockHash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8196f3641ab40786228c8370d0ebf511da6b5fe7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI5MDM5MA==", "bodyText": "You should test the case in which the address has null storage", "url": "https://github.com/rsksmart/rskj/pull/1217#discussion_r410290390", "createdAt": "2020-04-17T15:15:08Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/LightProcessorTest.java", "diffHunk": "@@ -329,6 +330,45 @@ public void processBlockBodyMessageAndShouldThrowAnException() {\n         lightProcessor.processBlockBodyMessage(0, uncleList, transactionList,  lightPeer);\n     }\n \n+    @Test\n+    public void processGetStorageMessageAndShouldReturnsBlockBodyCorrectly() {\n+        long id = 0;\n+        final Block block = mock(Block.class);\n+        RskAddress address = randomAddress();\n+        DataWord storageKey = DataWord.valueOf(HashUtil.randomHash());\n+        final RepositorySnapshot repositorySnapshot = mock(RepositorySnapshot.class);\n+        byte[] storageValue = HashUtil.randomHash();\n+\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);\n+        when(block.getHash()).thenReturn(blockHash);\n+        when(repositoryLocator.snapshotAt(block.getHeader())).thenReturn(repositorySnapshot);\n+        when(repositorySnapshot.getStorageBytes(address, storageKey)).thenReturn(storageValue);\n+\n+        StorageMessage expectedMessage = new StorageMessage(id, new byte[] {0x00}, storageValue);\n+\n+        ArgumentCaptor<StorageMessage> argument = forClass(StorageMessage.class);\n+        lightProcessor.processGetStorageMessage(id, blockHash.getBytes(), address.getBytes(),\n+                storageKey.getData(), lightPeer);\n+        verify(msgQueue).sendMessage(argument.capture());\n+\n+        assertArrayEquals(expectedMessage.getEncoded(), argument.getValue().getEncoded());\n+    }\n+\n+    @Test\n+    public void processGetStorageyMessageWithInvalidBlockHash() {\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(null);\n+\n+        lightProcessor.processGetStorageMessage(100, blockHash.getBytes(), randomAddress().getBytes(),\n+                new byte[] {0x00}, lightPeer);\n+\n+        verify(msgQueue, times(0)).sendMessage(any());\n+    }\n+\n+    @Test(expected = UnsupportedOperationException.class)\n+    public void processStorageMessageAndShouldThrowAnException() {\n+        lightProcessor.processStorageMessage(0, new byte[] {0x00}, new byte[] {0x00}, lightPeer);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8196f3641ab40786228c8370d0ebf511da6b5fe7"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff20ef9373fc0e856e5b415ea59a547379a09da", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/8ff20ef9373fc0e856e5b415ea59a547379a09da", "committedDate": "2020-04-17T15:29:15Z", "message": "changes! (from juli's review)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6643545e1f84c08341e2b2437f542e9fecc853e0", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/6643545e1f84c08341e2b2437f542e9fecc853e0", "committedDate": "2020-04-17T15:27:45Z", "message": "changes! (from juli's PR)"}, "afterCommit": {"oid": "8ff20ef9373fc0e856e5b415ea59a547379a09da", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/8ff20ef9373fc0e856e5b415ea59a547379a09da", "committedDate": "2020-04-17T15:29:15Z", "message": "changes! (from juli's review)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTcyMDgw", "url": "https://github.com/rsksmart/rskj/pull/1217#pullrequestreview-395572080", "createdAt": "2020-04-17T15:50:44Z", "commit": {"oid": "8ff20ef9373fc0e856e5b415ea59a547379a09da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo1MDo0NFrOGHTePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNTo1MDo0NFrOGHTePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMxMjI1NA==", "bodyText": "To fix the SonarCloud advice \"Invoke method only conditionally\", we will start to log these messages in the next manner:\nString logBlockHash = Hex.toHexString(blockHash);\n        logger.trace(\"Processing block header request {} block {}\", id, logBlockHash);", "url": "https://github.com/rsksmart/rskj/pull/1217#discussion_r410312254", "createdAt": "2020-04-17T15:50:44Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/LightProcessor.java", "diffHunk": "@@ -185,4 +186,30 @@ public void processGetBlockBodyMessage(long id, byte[] blockHash, LightPeer ligh\n     public void processBlockBodyMessage(long id, List<BlockHeader> uncles, List<Transaction> transactions, LightPeer lightPeer) {\n         throw new UnsupportedOperationException(\"Not supported BlockBody processing\");\n     }\n+\n+    public void processGetStorageMessage(long id, byte[] blockHash, byte[] addressHash, byte[] storageKeyHash, LightPeer lightPeer) {\n+        logger.trace(\"Processing storage request {} block {} address {} storage key {}\", id,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff20ef9373fc0e856e5b415ea59a547379a09da"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4d48c24e2e977cad4e6b83d5a173b4bf4a59bd7", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/c4d48c24e2e977cad4e6b83d5a173b4bf4a59bd7", "committedDate": "2020-04-17T16:40:12Z", "message": "fix sonar cloud issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjI5OTY0", "url": "https://github.com/rsksmart/rskj/pull/1217#pullrequestreview-395629964", "createdAt": "2020-04-17T17:11:17Z", "commit": {"oid": "c4d48c24e2e977cad4e6b83d5a173b4bf4a59bd7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 697, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}