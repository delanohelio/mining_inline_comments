{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDc4MDc5", "number": 1355, "title": "new function createFastBridgeFederationData and new class FastBridgeF\u2026", "bodyText": "\u2026ederationData to return this information.\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obtained using bitcoinj-thin.", "createdAt": "2020-11-04T15:56:18Z", "url": "https://github.com/rsksmart/rskj/pull/1355", "merged": true, "mergeCommit": {"oid": "14c3cc273db55c9d024512bf7e579dca28f00fa1"}, "closed": true, "closedAt": "2020-11-11T15:18:48Z", "author": {"login": "pamgonzalez"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZh-VtAFqTUyNDIzNTEyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbejIfgBqjM5ODQwMDE0MDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjM1MTI2", "url": "https://github.com/rsksmart/rskj/pull/1355#pullrequestreview-524235126", "createdAt": "2020-11-05T13:00:18Z", "commit": {"oid": "7a38860a09c70e5eaea7d486ee115db6d781a8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzowMDoxOFrOHuCK_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzowMDoxOFrOHuCK_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAzMjEyNA==", "bodyText": "Add new line please", "url": "https://github.com/rsksmart/rskj/pull/1355#discussion_r518032124", "createdAt": "2020-11-05T13:00:18Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/fastbridge/FastBridgeFederationInformation.java", "diffHunk": "@@ -18,4 +18,4 @@ public Sha256Hash getDerivationHash() {\n     public byte[] getFederationScriptHash() {\n         return federationScriptHash.clone();\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a38860a09c70e5eaea7d486ee115db6d781a8ae"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Mjg0OTc5", "url": "https://github.com/rsksmart/rskj/pull/1355#pullrequestreview-524284979", "createdAt": "2020-11-05T13:58:09Z", "commit": {"oid": "7a38860a09c70e5eaea7d486ee115db6d781a8ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo1ODowOVrOHuEeSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo1ODowOVrOHuEeSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2OTgzMg==", "bodyText": "Why getBytes()?", "url": "https://github.com/rsksmart/rskj/pull/1355#discussion_r518069832", "createdAt": "2020-11-05T13:58:09Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeSupportTest.java", "diffHunk": "@@ -4983,6 +4984,59 @@ public void processPegIn_tx_no_lockable_by_surpassing_locking_cap() throws IOExc\n                 ConsensusRule.RSKIP134);\n     }\n \n+    @Test\n+    public void createFastBridgeFederationData_Ok() {\n+        BridgeSupport bridgeSupport = spy(getBridgeSupport(bridgeConstants, mock(BridgeStorageProvider.class)));\n+\n+        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        Address userRefundAddress = mock(Address.class);\n+        Address lpBtcAddress = mock(Address.class);\n+        RskAddress lbcAddress = mock(RskAddress.class);\n+\n+        Sha256Hash resultDerivationHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        doReturn(resultDerivationHash).when(bridgeSupport).getFastBridgeDerivationHash(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+\n+        FastBridgeFederationData fastBridgeFederationData = bridgeSupport.createFastBridgeFederationData(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+        Script resultRedeemScript = RedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+                bridgeSupport.getActiveFederation().getRedeemScript(),\n+                resultDerivationHash\n+        );\n+\n+        Assert.assertArrayEquals(resultDerivationHash.getBytes(), fastBridgeFederationData.getDerivationArgumentsHash().getBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a38860a09c70e5eaea7d486ee115db6d781a8ae"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a38860a09c70e5eaea7d486ee115db6d781a8ae", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/7a38860a09c70e5eaea7d486ee115db6d781a8ae", "committedDate": "2020-11-04T15:52:13Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}, "afterCommit": {"oid": "0e4d90752091a9975aaa9084f452c2079917be04", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/0e4d90752091a9975aaa9084f452c2079917be04", "committedDate": "2020-11-05T14:03:25Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjkxNzE0", "url": "https://github.com/rsksmart/rskj/pull/1355#pullrequestreview-524291714", "createdAt": "2020-11-05T14:05:08Z", "commit": {"oid": "0e4d90752091a9975aaa9084f452c2079917be04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e4d90752091a9975aaa9084f452c2079917be04", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/0e4d90752091a9975aaa9084f452c2079917be04", "committedDate": "2020-11-05T14:03:25Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}, "afterCommit": {"oid": "55f8c2f2b490a0481d0716beeb36dcd716702954", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/55f8c2f2b490a0481d0716beeb36dcd716702954", "committedDate": "2020-11-05T17:58:51Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55f8c2f2b490a0481d0716beeb36dcd716702954", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/55f8c2f2b490a0481d0716beeb36dcd716702954", "committedDate": "2020-11-05T17:58:51Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}, "afterCommit": {"oid": "73be92907e83774f3bfbee28fe4ca7cbb77b4c7a", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/73be92907e83774f3bfbee28fe4ca7cbb77b4c7a", "committedDate": "2020-11-05T19:30:53Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44ba47ef921cde8ffc3d707fa2d0d38e5f49c2cc", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/44ba47ef921cde8ffc3d707fa2d0d38e5f49c2cc", "committedDate": "2020-11-10T14:20:38Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}, "afterCommit": {"oid": "96bcc703ab1035ae329936371a2af97666585f36", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/96bcc703ab1035ae329936371a2af97666585f36", "committedDate": "2020-11-10T14:46:12Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTEzMzI2", "url": "https://github.com/rsksmart/rskj/pull/1355#pullrequestreview-527513326", "createdAt": "2020-11-10T18:54:40Z", "commit": {"oid": "96bcc703ab1035ae329936371a2af97666585f36"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1NDo0MFrOHwq-QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1NTowM1rOHwq_rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5Nzc2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.fail();\n          \n      \n    \n    \n  \n\nIf the test doesn't triggers an exception it will fail, no need for the assert.fail", "url": "https://github.com/rsksmart/rskj/pull/1355#discussion_r520797761", "createdAt": "2020-11-10T18:54:40Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeSupportTest.java", "diffHunk": "@@ -5446,6 +5446,79 @@ public void getFastBridgeWallet_OK() {\n         assertEquals(obtainedWallet.getBalance(), Coin.COIN);\n     }\n \n+    @Test\n+    public void createFastBridgeFederationData_Ok() {\n+        BridgeSupport bridgeSupport = spy(getBridgeSupport(bridgeConstants, mock(BridgeStorageProvider.class)));\n+\n+        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        Address userRefundAddress = mock(Address.class);\n+        Address lpBtcAddress = mock(Address.class);\n+        RskAddress lbcAddress = mock(RskAddress.class);\n+\n+        Sha256Hash resultDerivationHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        doReturn(resultDerivationHash).when(bridgeSupport).getFastBridgeDerivationHash(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+\n+        FastBridgeFederationData fastBridgeFederationData = bridgeSupport.createFastBridgeFederationData(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+        Script resultRedeemScript = RedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+                bridgeSupport.getActiveFederation().getRedeemScript(),\n+                resultDerivationHash\n+        );\n+\n+        Assert.assertEquals(resultDerivationHash, fastBridgeFederationData.getDerivationArgumentsHash());\n+        Assert.assertEquals(ScriptBuilder.createP2SHOutputScript(resultRedeemScript), fastBridgeFederationData.getFastBridgeScriptHash());\n+    }\n+\n+    @Test(expected = Exception.class)\n+    public void createFastBridgeFederationData_Error() {\n+        BridgeSupport bridgeSupport = spy(getBridgeSupport(bridgeConstants, mock(BridgeStorageProvider.class)));\n+\n+        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        Address userRefundAddress = mock(Address.class);\n+        Address lpBtcAddress = mock(Address.class);\n+        RskAddress lbcAddress = mock(RskAddress.class);\n+\n+        Sha256Hash resultDerivationHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        doReturn(null).when(bridgeSupport).getFastBridgeDerivationHash(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+\n+        Assert.fail();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bcc703ab1035ae329936371a2af97666585f36"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5ODEyNA==", "bodyText": "Why using generic Exception? Doesn't it triggers custom exceptions?", "url": "https://github.com/rsksmart/rskj/pull/1355#discussion_r520798124", "createdAt": "2020-11-10T18:55:03Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeSupportTest.java", "diffHunk": "@@ -5446,6 +5446,79 @@ public void getFastBridgeWallet_OK() {\n         assertEquals(obtainedWallet.getBalance(), Coin.COIN);\n     }\n \n+    @Test\n+    public void createFastBridgeFederationData_Ok() {\n+        BridgeSupport bridgeSupport = spy(getBridgeSupport(bridgeConstants, mock(BridgeStorageProvider.class)));\n+\n+        Sha256Hash derivationArgumentsHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        Address userRefundAddress = mock(Address.class);\n+        Address lpBtcAddress = mock(Address.class);\n+        RskAddress lbcAddress = mock(RskAddress.class);\n+\n+        Sha256Hash resultDerivationHash = Sha256Hash.wrap(HashUtil.randomHash());\n+        doReturn(resultDerivationHash).when(bridgeSupport).getFastBridgeDerivationHash(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+\n+        FastBridgeFederationData fastBridgeFederationData = bridgeSupport.createFastBridgeFederationData(\n+                derivationArgumentsHash,\n+                userRefundAddress,\n+                lpBtcAddress,\n+                lbcAddress\n+        );\n+        Script resultRedeemScript = RedeemScriptParser.createMultiSigFastBridgeRedeemScript(\n+                bridgeSupport.getActiveFederation().getRedeemScript(),\n+                resultDerivationHash\n+        );\n+\n+        Assert.assertEquals(resultDerivationHash, fastBridgeFederationData.getDerivationArgumentsHash());\n+        Assert.assertEquals(ScriptBuilder.createP2SHOutputScript(resultRedeemScript), fastBridgeFederationData.getFastBridgeScriptHash());\n+    }\n+\n+    @Test(expected = Exception.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bcc703ab1035ae329936371a2af97666585f36"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b30d447fb1a7f3a0925840c535ffd41cf2a2b4", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/b5b30d447fb1a7f3a0925840c535ffd41cf2a2b4", "committedDate": "2020-11-11T14:07:49Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96bcc703ab1035ae329936371a2af97666585f36", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/96bcc703ab1035ae329936371a2af97666585f36", "committedDate": "2020-11-10T14:46:12Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}, "afterCommit": {"oid": "b5b30d447fb1a7f3a0925840c535ffd41cf2a2b4", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/b5b30d447fb1a7f3a0925840c535ffd41cf2a2b4", "committedDate": "2020-11-11T14:07:49Z", "message": "new function createFastBridgeFederationData and new class FastBridgeFederationData to return this information.\n\nIncludes new class to FastBridgeFederationData, and a function to create this new class with fast bridge derivation argument hash (calculated here) and the redeem script obteined using bitcoinj-thin."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 620, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}