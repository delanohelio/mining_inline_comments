{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzOTMwMzI0", "number": 1368, "title": "Modify the signature and the way the derivationHash is saved.", "bodyText": "Previously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key.", "createdAt": "2020-11-19T12:52:47Z", "url": "https://github.com/rsksmart/rskj/pull/1368", "merged": true, "mergeCommit": {"oid": "e85e44da009620674144d0b9027aab7b43e24370"}, "closed": true, "closedAt": "2020-11-24T18:14:54Z", "author": {"login": "pamgonzalez"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeD85wABqjQwMTYyNTMxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdft0eeAFqTUzNzc4MTkzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d98715d3a0c7c650a5927fd72329a42ad6809733", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/d98715d3a0c7c650a5927fd72329a42ad6809733", "committedDate": "2020-11-19T12:50:41Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "6c6ed051b272a892ef4f308c78d8fae40792fd46", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/6c6ed051b272a892ef4f308c78d8fae40792fd46", "committedDate": "2020-11-19T14:42:34Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c6ed051b272a892ef4f308c78d8fae40792fd46", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/6c6ed051b272a892ef4f308c78d8fae40792fd46", "committedDate": "2020-11-19T14:42:34Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "b2dd2285386bff119c79dc34d30db672a7e09dec", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/b2dd2285386bff119c79dc34d30db672a7e09dec", "committedDate": "2020-11-24T15:00:33Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2dd2285386bff119c79dc34d30db672a7e09dec", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/b2dd2285386bff119c79dc34d30db672a7e09dec", "committedDate": "2020-11-24T15:00:33Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "07923203f235a29facd47c609f6844eab5eb825f", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/07923203f235a29facd47c609f6844eab5eb825f", "committedDate": "2020-11-24T15:29:44Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07923203f235a29facd47c609f6844eab5eb825f", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/07923203f235a29facd47c609f6844eab5eb825f", "committedDate": "2020-11-24T15:29:44Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/46ff7bbaa57dc7482488e33b9510f0681b48aba6", "committedDate": "2020-11-24T16:01:18Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NjkxNjA2", "url": "https://github.com/rsksmart/rskj/pull/1368#pullrequestreview-537691606", "createdAt": "2020-11-24T16:27:14Z", "commit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzM3MTEy", "url": "https://github.com/rsksmart/rskj/pull/1368#pullrequestreview-537737112", "createdAt": "2020-11-24T17:16:56Z", "commit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxNjo1NlrOH5NEFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxODowNFrOH5NG9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0NDkxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Sha256Hash rskTxHash = PegTestUtils.createHash(2);\n          \n          \n            \n                    Sha256Hash btcTxHash = PegTestUtils.createHash(2);", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529744919", "createdAt": "2020-11-24T17:16:56Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2154,13 +2154,16 @@ public void saveCoinBaseInformation_after_RSKIP143() throws IOException {\n     public void isFastBridgeFederationDerivationHashUsed_afterRSKIP176_returnTrue() {\n         Repository repository = mock(Repository.class);\n \n-        Sha256Hash hash = Sha256Hash.ZERO_HASH;\n+        Sha256Hash derivationHash = PegTestUtils.createHash(1);\n+        Sha256Hash rskTxHash = PegTestUtils.createHash(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0NTY1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullrskTxHash_notSaved() throws IOException {\n          \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_null_derivationHash_notSaved() throws IOException {", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529745652", "createdAt": "2020-11-24T17:18:04Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2281,24 +2297,72 @@ public void saveDerivationArgumentsScriptHash_afterRSKIP176_Ok() throws IOExcept\n                 activations\n         );\n \n-        provider.markFastBridgeFederationDerivationHashAsUsed(hash);\n+        provider.markFastBridgeFederationDerivationHashAsUsed(rskTxHash, derivationHash);\n \n         provider.save();\n \n         verify(repository, times(1)).addStorageBytes(\n                 PrecompiledContracts.BRIDGE_ADDR,\n-                DataWord.fromLongString(\"fastBridgeScriptHash-\" + hash.toString()),\n+                DataWord.fromLongString(\"fastBridgeHashUsedInBtcTx-\" + rskTxHash.toString() + derivationHash.toString()),\n                 new byte[]{FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE_TEST}\n         );\n         verifyNoMoreInteractions(repository);\n     }\n \n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {\n+        Repository repository = mock(Repository.class);\n+\n+        Sha256Hash derivationHash = PegTestUtils.createHash(1);\n+        Sha256Hash rskTxHash = null;\n+\n+        ActivationConfig.ForBlock activations = mock(ActivationConfig.ForBlock.class);\n+        when(activations.isActive(ConsensusRule.RSKIP176)).thenReturn(true);\n+\n+        BridgeStorageProvider provider = new BridgeStorageProvider(\n+                repository,\n+                PrecompiledContracts.BRIDGE_ADDR,\n+                config.getNetworkConstants().getBridgeConstants(),\n+                activations\n+        );\n+\n+        provider.markFastBridgeFederationDerivationHashAsUsed(rskTxHash, derivationHash);\n+\n+        provider.save();\n+        \n+        verifyZeroInteractions(repository);\n+    }\n+\n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullrskTxHash_notSaved() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6"}, "originalPosition": 189}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46ff7bbaa57dc7482488e33b9510f0681b48aba6", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/46ff7bbaa57dc7482488e33b9510f0681b48aba6", "committedDate": "2020-11-24T16:01:18Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "1b313289d9532c3e715c93e4a9049338c89f0b87", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/1b313289d9532c3e715c93e4a9049338c89f0b87", "committedDate": "2020-11-24T17:32:46Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Nzc0MzAw", "url": "https://github.com/rsksmart/rskj/pull/1368#pullrequestreview-537774300", "createdAt": "2020-11-24T18:01:48Z", "commit": {"oid": "1b313289d9532c3e715c93e4a9049338c89f0b87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODowMTo0OFrOH5O2Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODowMTo0OFrOH5O2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NDEzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {\n          \n          \n            \n                public void saveDerivationArgumentsScriptHash_afterRSKIP176_null_derivationHash_notSaved() throws IOException {", "url": "https://github.com/rsksmart/rskj/pull/1368#discussion_r529774130", "createdAt": "2020-11-24T18:01:48Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/test/java/co/rsk/peg/BridgeStorageProviderTest.java", "diffHunk": "@@ -2281,24 +2297,48 @@ public void saveDerivationArgumentsScriptHash_afterRSKIP176_Ok() throws IOExcept\n                 activations\n         );\n \n-        provider.markFastBridgeFederationDerivationHashAsUsed(hash);\n+        provider.markFastBridgeFederationDerivationHashAsUsed(btcTxHash, derivationHash);\n \n         provider.save();\n \n         verify(repository, times(1)).addStorageBytes(\n                 PrecompiledContracts.BRIDGE_ADDR,\n-                DataWord.fromLongString(\"fastBridgeScriptHash-\" + hash.toString()),\n+                DataWord.fromLongString(\"fastBridgeHashUsedInBtcTx-\" + btcTxHash.toString() + derivationHash.toString()),\n                 new byte[]{FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE_TEST}\n         );\n         verifyNoMoreInteractions(repository);\n     }\n \n+    @Test\n+    public void saveDerivationArgumentsScriptHash_afterRSKIP176_nullBtcTxHash_notSaved() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b313289d9532c3e715c93e4a9049338c89f0b87"}, "originalPosition": 165}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bb3eff491a419b294d21f45c0a9161cd856865", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/11bb3eff491a419b294d21f45c0a9161cd856865", "committedDate": "2020-11-24T18:08:15Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b313289d9532c3e715c93e4a9049338c89f0b87", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/1b313289d9532c3e715c93e4a9049338c89f0b87", "committedDate": "2020-11-24T17:32:46Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}, "afterCommit": {"oid": "11bb3eff491a419b294d21f45c0a9161cd856865", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/11bb3eff491a419b294d21f45c0a9161cd856865", "committedDate": "2020-11-24T18:08:15Z", "message": "Modify the signature and the way the derivationHash is saved.\n\nPreviously only the derivationHash was saved, now the hash of the original bitcoin transaction is added as a joint key."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzgxOTM3", "url": "https://github.com/rsksmart/rskj/pull/1368#pullrequestreview-537781937", "createdAt": "2020-11-24T18:11:56Z", "commit": {"oid": "11bb3eff491a419b294d21f45c0a9161cd856865"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 635, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}