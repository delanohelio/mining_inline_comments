{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODg0MzY3", "number": 1206, "title": "Light client GetAccounts and Accounts Messages", "bodyText": "", "createdAt": "2020-04-08T14:27:19Z", "url": "https://github.com/rsksmart/rskj/pull/1206", "merged": true, "mergeCommit": {"oid": "1bb66484947b66c4e370eca1da1d2d4fc644f540"}, "closed": true, "closedAt": "2020-04-14T18:54:58Z", "author": {"login": "smcsicardi"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXO6BNgH2gAyNDAwODg0MzY3OjVjM2VlMzlhNjdhODE3MjJhNWQwZDdlYzQxZDFkZjQwOTlkYzE5OGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXoJyZAFqTM5MzIwNTg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c3ee39a67a81722a5d0d7ec41d1df4099dc198e", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/5c3ee39a67a81722a5d0d7ec41d1df4099dc198e", "committedDate": "2020-04-13T13:28:23Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a453e7c571571dd77df22e014555a7b5ee43a30", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/4a453e7c571571dd77df22e014555a7b5ee43a30", "committedDate": "2020-04-13T13:28:27Z", "message": "added accounts response funcionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa314c4c76a95c5204eb2946077eb815a3021341", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/fa314c4c76a95c5204eb2946077eb815a3021341", "committedDate": "2020-04-13T13:28:27Z", "message": "added tests and some minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6876cfa1417b00174fa94273db314084d19621db", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/6876cfa1417b00174fa94273db314084d19621db", "committedDate": "2020-04-13T13:28:27Z", "message": "accounts message tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55a350a74877543301fdcf25f94b733008f1e017", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/55a350a74877543301fdcf25f94b733008f1e017", "committedDate": "2020-04-13T13:40:13Z", "message": "finished tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23b5cf603c973d7bb562b95114fcac0d56905ce2", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/23b5cf603c973d7bb562b95114fcac0d56905ce2", "committedDate": "2020-04-13T13:40:15Z", "message": "added headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40c3521fcb0c23f4c246188349f92bd7e673b6d", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/e40c3521fcb0c23f4c246188349f92bd7e673b6d", "committedDate": "2020-04-13T13:40:15Z", "message": "more headers hehe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4ccc176641c054a886446342d55f63e196fc15b", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/e4ccc176641c054a886446342d55f63e196fc15b", "committedDate": "2020-04-13T13:40:15Z", "message": "last test added and minor fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94752490d1df81e1cddad72edfe5c9a62fe550f5", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/94752490d1df81e1cddad72edfe5c9a62fe550f5", "committedDate": "2020-04-08T17:32:52Z", "message": "last test added and minor fixes"}, "afterCommit": {"oid": "e4ccc176641c054a886446342d55f63e196fc15b", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/e4ccc176641c054a886446342d55f63e196fc15b", "committedDate": "2020-04-13T13:40:15Z", "message": "last test added and minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a58355c05675465b6e84b6f906ebc7497da9ce", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/c4a58355c05675465b6e84b6f906ebc7497da9ce", "committedDate": "2020-04-13T13:42:56Z", "message": "changed last message code in inRange method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/486bc9f1b5b04840df7331327b9940137ff71fcb", "committedDate": "2020-04-14T14:16:57Z", "message": "changed order of tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDU2NzUz", "url": "https://github.com/rsksmart/rskj/pull/1206#pullrequestreview-393056753", "createdAt": "2020-04-14T15:43:14Z", "commit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo0MzoxNFrOGFU-Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowNDowMFrOGFV6bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzOTYyMw==", "bodyText": "In fact, it is sending \"account response\", I think it's better to log \"Read message: {} GET_ACCOUNTS.\", for ACCOUNTS too.", "url": "https://github.com/rsksmart/rskj/pull/1206#discussion_r408239623", "createdAt": "2020-04-14T15:43:14Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/eth/LightClientHandler.java", "diffHunk": "@@ -80,6 +80,18 @@ protected void channelRead0(ChannelHandlerContext ctx, LightClientMessage msg) t\n                 CodeMessage codeMsg = (CodeMessage) msg;\n                 lightProcessor.processCodeMessage(codeMsg.getId(), codeMsg.getCodeHash(), msgQueue);\n                 break;\n+            case GET_ACCOUNTS:\n+                logger.debug(\"Read message: {} GET_ACCOUNTS. Sending code request\", msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1Mzg2MQ==", "bodyText": "Repeat this sentence twice", "url": "https://github.com/rsksmart/rskj/pull/1206#discussion_r408253861", "createdAt": "2020-04-14T16:02:20Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/LightProcessorTest.java", "diffHunk": "@@ -207,6 +206,67 @@ public void processCodeMessageAndShouldThrowAnException() {\n         }\n     }\n \n+    @Test\n+    public void processGetAccountsMessageAndShouldReturnsAccountsCorrectly() {\n+        long id = 101;\n+        Coin balance = Coin.valueOf(1010);\n+        long nonce = 100;\n+        RskAddress address = randomAddress();\n+        final Block block = mock(Block.class);\n+        final RepositorySnapshot repositorySnapshot = mock(RepositorySnapshot.class);\n+        Keccak256 codeHash = randomHash();\n+        byte[] storageRoot = randomHash().getBytes();\n+        AccountState accountState = mock(AccountState.class);\n+\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);\n+        when(block.getHash()).thenReturn(blockHash);\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NTA4Ng==", "bodyText": "As we talked, we should change the way we test these cases", "url": "https://github.com/rsksmart/rskj/pull/1206#discussion_r408255086", "createdAt": "2020-04-14T16:04:00Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/LightProcessorTest.java", "diffHunk": "@@ -207,6 +206,67 @@ public void processCodeMessageAndShouldThrowAnException() {\n         }\n     }\n \n+    @Test\n+    public void processGetAccountsMessageAndShouldReturnsAccountsCorrectly() {\n+        long id = 101;\n+        Coin balance = Coin.valueOf(1010);\n+        long nonce = 100;\n+        RskAddress address = randomAddress();\n+        final Block block = mock(Block.class);\n+        final RepositorySnapshot repositorySnapshot = mock(RepositorySnapshot.class);\n+        Keccak256 codeHash = randomHash();\n+        byte[] storageRoot = randomHash().getBytes();\n+        AccountState accountState = mock(AccountState.class);\n+\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);\n+        when(block.getHash()).thenReturn(blockHash);\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);\n+        when(repositoryLocator.snapshotAt(block.getHeader())).thenReturn(repositorySnapshot);\n+        when(repositorySnapshot.getAccountState(address)).thenReturn(accountState);\n+\n+        when(accountState.getNonce()).thenReturn(BigInteger.valueOf(nonce));\n+        when(accountState.getBalance()).thenReturn(balance);\n+        when(repositorySnapshot.getCodeHash(address)).thenReturn(codeHash);\n+        when(repositorySnapshot.getRoot()).thenReturn(storageRoot);\n+\n+        AccountsMessage expectedMessage = new AccountsMessage(id, new byte[] {0x00}, nonce,\n+                balance.asBigInteger().longValue(), codeHash.getBytes(), storageRoot);\n+\n+        ArgumentCaptor<AccountsMessage> argument = forClass(AccountsMessage.class);\n+        lightProcessor.processGetAccountsMessage(id, blockHash.getBytes(), address.getBytes(), msgQueue);\n+        verify(msgQueue).sendMessage(argument.capture());\n+\n+        assertArrayEquals(expectedMessage.getEncoded(), argument.getValue().getEncoded());\n+    }\n+\n+    @Test\n+    public void processGetAccountsMessageWithInvalidBlockHash() {\n+        long requestId = 100;\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(null);\n+        byte[] addressHash = HashUtil.randomHash();\n+\n+        lightProcessor.processGetAccountsMessage(requestId, blockHash.getBytes(), addressHash, msgQueue);\n+\n+        verify(msgQueue, times(0)).sendMessage(any());\n+    }\n+\n+    @Test\n+    public void processAccountsMessageAndShouldThrowAnException() {\n+        long id = 1;\n+        byte [] merkleInclusionProof = new byte[] {0x01};\n+        long nonce = 123;\n+        long balance = 100;\n+        byte[] codeHash = HashUtil.randomHash();\n+        byte[] storageRoot = HashUtil.randomHash();\n+\n+        String expected = \"Not supported AccountsMessage processing\";\n+        try {\n+            lightProcessor.processAccountsMessage(id, merkleInclusionProof, nonce, balance, codeHash, storageRoot, msgQueue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTA4NDE1", "url": "https://github.com/rsksmart/rskj/pull/1206#pullrequestreview-393108415", "createdAt": "2020-04-14T16:42:47Z", "commit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0Mjo0N1rOGFXipg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0Mjo0N1rOGFXipg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MTc2Ng==", "bodyText": "You repeat this sentence too", "url": "https://github.com/rsksmart/rskj/pull/1206#discussion_r408281766", "createdAt": "2020-04-14T16:42:47Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/eth/LightClientHandlerTest.java", "diffHunk": "@@ -180,6 +184,58 @@ public void lightClientHandlerSendsCodeMsgToQueueAndShouldThrowAnException() thr\n         }\n     }\n \n+    @Test\n+    public void lightClientHandlerSendsGetAccountsToQueue() throws Exception {\n+        long id = 101;\n+        Keccak256 blockHash = randomHash();\n+        RskAddress address = randomAddress();\n+        final Block block = mock(Block.class);\n+        final RepositorySnapshot repositorySnapshot = mock(RepositorySnapshot.class);\n+        Keccak256 codeHash = randomHash();\n+        byte[] storageRoot = randomHash().getBytes();\n+        AccountState accountState = mock(AccountState.class);\n+        Coin balance = Coin.valueOf(1010);\n+        long nonce = 100;\n+\n+        when(blockStore.getBlockByHash(blockHash.getBytes())).thenReturn(block);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "486bc9f1b5b04840df7331327b9940137ff71fcb"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32bc339b46572a31e4891514b8950a89c58c8e10", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/32bc339b46572a31e4891514b8950a89c58c8e10", "committedDate": "2020-04-14T18:03:32Z", "message": "Fixed some typos and better error handling on tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjA1ODY1", "url": "https://github.com/rsksmart/rskj/pull/1206#pullrequestreview-393205865", "createdAt": "2020-04-14T18:53:14Z", "commit": {"oid": "32bc339b46572a31e4891514b8950a89c58c8e10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 687, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}