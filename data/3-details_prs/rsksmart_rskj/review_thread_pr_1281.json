{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzI3Njk1", "number": 1281, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNzoyNFrOETWJ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToxOTo0OFrOEdyoVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzIxMzc3OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/config/blockchain/upgrades/NetworkUpgrade.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNzoyNFrOG5B62w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNzoyNFrOG5B62w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1MzQ2Nw==", "bodyText": "was it agree by the team ?  hah", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462453467", "createdAt": "2020-07-29T17:07:24Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/org/ethereum/config/blockchain/upgrades/NetworkUpgrade.java", "diffHunk": "@@ -26,7 +26,8 @@\n     ORCHID_060(\"orchid060\"),\n     WASABI_100(\"wasabi100\"),\n     PAPYRUS_200(\"papyrus200\"),\n-    TWOTOTHREE(\"twoToThree\");\n+    TWOTOTHREE(\"twoToThree\"),\n+    COVID220(\"covid220\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e7865af2a39a7fbf75c764563623f16254153d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzMwNzkzOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzozMjoxNlrOG5C1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDozMjoyMVrOG676ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODYwMA==", "bodyText": "It's wrong. The key is an address that it's a contract but without code. Then, we are in the case it has empty code. The answer should be KECCAK_256_OF_EMPTY_ARRAY", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462468600", "createdAt": "2020-07-29T17:32:16Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "diffHunk": "@@ -158,21 +159,47 @@ public synchronized int getCodeLength(RskAddress addr) {\n     }\n \n     @Override\n-    public synchronized Keccak256 getCodeHash(RskAddress addr) {\n+    public synchronized Keccak256 getCodeHashNonStandard(RskAddress addr) {\n \n         if (!isExist(addr)) {\n             return Keccak256.ZERO_HASH;\n         }\n \n         if (!isContract(addr)) {\n-            return new Keccak256(\n-                    Keccak256Helper.keccak256(EMPTY_BYTE_ARRAY));\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n         }\n \n         byte[] key = trieKeyMapper.getCodeKey(addr);\n-        return mutableTrie.getValueHash(key);\n-    }\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {\n+            //This is the non standard implementation we had pre RskipEXTCODEHASH implementation\n+            //and thus me must honor it.\n+            return Keccak256.ZERO_HASH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e7865af2a39a7fbf75c764563623f16254153d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjI1OQ==", "bodyText": "This is the method that implements the previous behavior", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464452259", "createdAt": "2020-08-03T14:32:21Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "diffHunk": "@@ -158,21 +159,47 @@ public synchronized int getCodeLength(RskAddress addr) {\n     }\n \n     @Override\n-    public synchronized Keccak256 getCodeHash(RskAddress addr) {\n+    public synchronized Keccak256 getCodeHashNonStandard(RskAddress addr) {\n \n         if (!isExist(addr)) {\n             return Keccak256.ZERO_HASH;\n         }\n \n         if (!isContract(addr)) {\n-            return new Keccak256(\n-                    Keccak256Helper.keccak256(EMPTY_BYTE_ARRAY));\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n         }\n \n         byte[] key = trieKeyMapper.getCodeKey(addr);\n-        return mutableTrie.getValueHash(key);\n-    }\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {\n+            //This is the non standard implementation we had pre RskipEXTCODEHASH implementation\n+            //and thus me must honor it.\n+            return Keccak256.ZERO_HASH;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODYwMA=="}, "originalCommit": {"oid": "d2e7865af2a39a7fbf75c764563623f16254153d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzMxMDQ4OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzozMjo1OVrOG5C3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzozMjo1OVrOG5C3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2ODk5Nw==", "bodyText": "Well, this is correct", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462468997", "createdAt": "2020-07-29T17:32:59Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/org/ethereum/db/MutableRepository.java", "diffHunk": "@@ -158,21 +159,47 @@ public synchronized int getCodeLength(RskAddress addr) {\n     }\n \n     @Override\n-    public synchronized Keccak256 getCodeHash(RskAddress addr) {\n+    public synchronized Keccak256 getCodeHashNonStandard(RskAddress addr) {\n \n         if (!isExist(addr)) {\n             return Keccak256.ZERO_HASH;\n         }\n \n         if (!isContract(addr)) {\n-            return new Keccak256(\n-                    Keccak256Helper.keccak256(EMPTY_BYTE_ARRAY));\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n         }\n \n         byte[] key = trieKeyMapper.getCodeKey(addr);\n-        return mutableTrie.getValueHash(key);\n-    }\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {\n+            //This is the non standard implementation we had pre RskipEXTCODEHASH implementation\n+            //and thus me must honor it.\n+            return Keccak256.ZERO_HASH;\n+        }\n+\n+        return valueHash;    }\n \n+    @Override\n+    public synchronized Keccak256 getCodeHashStandard(RskAddress addr) {\n+\n+        if (!isExist(addr)) {\n+            return Keccak256.ZERO_HASH;\n+        }\n+\n+        if (!isContract(addr)) {\n+            return KECCAK_256_OF_EMPTY_ARRAY;\n+        }\n+\n+        byte[] key = trieKeyMapper.getCodeKey(addr);\n+        Keccak256 valueHash = mutableTrie.getValueHash(key);\n+\n+        if (valueHash == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e7865af2a39a7fbf75c764563623f16254153d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzMyMzkzOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/co/rsk/db/MutableTrieCacheTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzozNjozOVrOG5C_4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzozNjozOVrOG5C_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3MTEzNw==", "bodyText": "is zeroHash variable being used ?", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r462471137", "createdAt": "2020-07-29T17:36:39Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/db/MutableTrieCacheTest.java", "diffHunk": "@@ -433,8 +433,8 @@ public void testGetValueNotStoredAndGetHash() {\n         byte[] wrongKey = toBytes(\"BOB\");\n         Keccak256 zeroHash = Keccak256.ZERO_HASH;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e7865af2a39a7fbf75c764563623f16254153d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzgzNTA2OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieCache.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOTo1OToyNVrOG7ZqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMTo1NVrOG8JZ5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTYyOQ==", "bodyText": "can we mark this method with @Nullable annotation. Some IDE's and static code analysis tools will complain when calling methods on a result of this method without checking it for null.", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464939629", "createdAt": "2020-08-04T09:59:25Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieCache.java", "diffHunk": "@@ -235,7 +235,7 @@ public Uint24 getValueLength(byte[] key) {\n \n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMTgyOA==", "bodyText": "Changed it to Optional instead", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r465721828", "createdAt": "2020-08-05T13:21:55Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieCache.java", "diffHunk": "@@ -235,7 +235,7 @@ public Uint24 getValueLength(byte[] key) {\n \n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTYyOQ=="}, "originalCommit": {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzgzNjIwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOTo1OTo0OFrOG7ZrLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMjowNlrOG8JaRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTgyMQ==", "bodyText": "Same here - @Nullable result", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464939821", "createdAt": "2020-08-04T09:59:48Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieImpl.java", "diffHunk": "@@ -89,9 +89,8 @@ public Uint24 getValueLength(byte[] key) {\n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMTkyNQ==", "bodyText": "Same, using Optional now", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r465721925", "createdAt": "2020-08-05T13:22:06Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/co/rsk/db/MutableTrieImpl.java", "diffHunk": "@@ -89,9 +89,8 @@ public Uint24 getValueLength(byte[] key) {\n     @Override\n     public Keccak256 getValueHash(byte[] key) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzOTgyMQ=="}, "originalCommit": {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzg2MTc2OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/co/rsk/vm/ExtCodeHashDslTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDowNzoxNlrOG7Z61Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDowNzoxNlrOG7Z61Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0MzgyOQ==", "bodyText": "2020 ? J", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r464943829", "createdAt": "2020-08-04T10:07:16Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/test/java/co/rsk/vm/ExtCodeHashDslTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2018 RSK Labs Ltd.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500c5c6aca365d668b602dfe5bb0e857334ddc0e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjczNjg1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/resources/reference.conf", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToxOTo0OFrOHJKoSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToxOTo0OFrOHJKoSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3MzM4Ng==", "bodyText": "iris300?", "url": "https://github.com/rsksmart/rskj/pull/1281#discussion_r479373386", "createdAt": "2020-08-28T15:19:48Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/resources/reference.conf", "diffHunk": "@@ -37,7 +37,7 @@ blockchain = {\n             rskip152 = papyrus200\n             rskip156 = papyrus200\n             rskipUMM = papyrus200\n-            rskip169 = hop\n+            rskip169 = iris", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94acf60cd68963533897cfb2a7fd0e8d41affac5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4447, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}