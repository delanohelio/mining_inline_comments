{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDQwMjkw", "number": 1253, "title": "Fix issue #1127: Transactions were lost in reorganizations", "bodyText": "As reported in #1127 transactions are being lost in reorganizations.\nWhen a new block is created the method processBest of the TransactionPoolImpl class is called with the new block, which should calculate the fork, and for each block that is no longer part of the best chain, call retractBlock which in turn calls to addTransaction.\nThe current problem is the following: addTransaction runs validations on the block, but these validations are run against the wrong AccountState: an account state that is derived from what was the previous best block, a block that included the same transaction we now want to add again to the transaction pool. This is because currently the bestBlock attribute of the TransactionPoolImpl is being updated after calling retract block. So the tx will be inevitably rejected because of an invalid nonce.\nThe proposed solution is to update the bestBlock attribute before actually calling retractBlock so the tx will be validated against the new best block in the chain.\nThis PR also includes a small refactor on the call to removeObsoleteTransactions, because the first parameter was, with the change, always the same value.\nNOTE: This PR only aims to fix the issue of the transaction being lost in the reorganization. The issue #1127 also mentions \"The transaction with the same hash should be able to resend it to the network after a period of time.\", that is not part of what is being tackled in this PR", "createdAt": "2020-06-09T20:17:11Z", "url": "https://github.com/rsksmart/rskj/pull/1253", "merged": true, "mergeCommit": {"oid": "79661070205e6a261833fb5369194d4c9e3563a9"}, "closed": true, "closedAt": "2020-06-25T17:14:10Z", "author": {"login": "nicops"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctyHzXgFqTQzNDk0MjA5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuguumAFqTQzNzAxMTYwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0OTQyMDk5", "url": "https://github.com/rsksmart/rskj/pull/1253#pullrequestreview-434942099", "createdAt": "2020-06-22T13:50:38Z", "commit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1MDozOVrOGnBgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1MDozOVrOGnBgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MjIzMQ==", "bodyText": "This check shouldn\u2019t be done inside the Comparator logic?", "url": "https://github.com/rsksmart/rskj/pull/1253#discussion_r443572231", "createdAt": "2020-06-22T13:50:39Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/TransactionPoolImpl.java", "diffHunk": "@@ -299,15 +302,23 @@ public synchronized void processBest(Block block) {\n             }\n         }\n \n-        removeObsoleteTransactions(block.getNumber(), this.outdatedThreshold, this.outdatedTimeout);\n-\n-        bestBlock = block;\n+        removeObsoleteTransactions(this.outdatedThreshold, this.outdatedTimeout);\n \n         if (listener != null) {\n             EventDispatchThread.invokeLater(() -> listener.onTransactionPoolChanged(TransactionPoolImpl.this));\n         }\n     }\n \n+    private BlockFork getFork(Block oldBestBlock, Block newBestBlock) {\n+        if (oldBestBlock != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDA5Nzkz", "url": "https://github.com/rsksmart/rskj/pull/1253#pullrequestreview-437009793", "createdAt": "2020-06-24T21:11:37Z", "commit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "325fbfe5540a5613e2ab40a7b3fb626fc2ab89c1", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/325fbfe5540a5613e2ab40a7b3fb626fc2ab89c1", "committedDate": "2020-06-24T21:13:11Z", "message": "Fix issue #1127: Transactions were lost in reorganizations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f16b97097961bc7cd6e80f46d5b6a59b898dc071", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/f16b97097961bc7cd6e80f46d5b6a59b898dc071", "committedDate": "2020-06-24T21:13:11Z", "message": "added extra tests for \"Transactions were lost in reorganizations\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/96a0b53bcc27aef316135310a932745bc7c0d2a6", "committedDate": "2020-06-18T13:51:52Z", "message": "added extra tests for \"Transactions were lost in reorganizations\""}, "afterCommit": {"oid": "f16b97097961bc7cd6e80f46d5b6a59b898dc071", "author": {"user": null}, "url": "https://github.com/rsksmart/rskj/commit/f16b97097961bc7cd6e80f46d5b6a59b898dc071", "committedDate": "2020-06-24T21:13:11Z", "message": "added extra tests for \"Transactions were lost in reorganizations\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDExNjA4", "url": "https://github.com/rsksmart/rskj/pull/1253#pullrequestreview-437011608", "createdAt": "2020-06-24T21:14:36Z", "commit": {"oid": "f16b97097961bc7cd6e80f46d5b6a59b898dc071"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 466, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}