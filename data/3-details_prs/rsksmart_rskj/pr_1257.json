{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDcyNzI2", "number": 1257, "title": "Message Handler to Support multiple messages from different Light Peers", "bodyText": "This PR improves the Light Client Sync protocol with the possibility to process more than one message at the same time, instead of discarding them.\nThe process is simple: Once a message arrives it is inserted in a FIFO blocking queue (so we can assure each message is inserted correctly from different threads).\nThere is a thread which consists only in getting messages from the queue and processing them, in FIFO order. Each message is linked to its own ChannelContextManager, LightPeer and LightClientHandler (for the sync message only).\nTesting is done in order to check whether one and several messages are processed correctly, from the same and different Peers. Also a new TestUtils class is created for this purpose (I created a method to return the correct answer for a given GetAccounts message, and is the basis for new methods for each message) .", "createdAt": "2020-06-18T13:26:14Z", "url": "https://github.com/rsksmart/rskj/pull/1257", "merged": true, "mergeCommit": {"oid": "7d2adfc3db3d15e8f679fab5bdbe6c6690d0464f"}, "closed": true, "closedAt": "2020-06-23T17:38:52Z", "author": {"login": "smcsicardi"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsegNagH2gAyNDM2NDcyNzI2Ojc4NjQ1MzExM2E3NzJjODE2NjMzODY1MDgzZDY3YzY4MTUyMWZkOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuHhHHAFqTQzNTkyMjA2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "786453113a772c816633865083d67c681521fd8f", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/786453113a772c816633865083d67c681521fd8f", "committedDate": "2020-06-18T13:31:05Z", "message": "init development"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c8073707fb820a9566ee0345a57a622e89ed7e5", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/9c8073707fb820a9566ee0345a57a622e89ed7e5", "committedDate": "2020-06-18T13:31:07Z", "message": "add implemented light message handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95798f8cc169e9970514a08626cb37e93a2a6612", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/95798f8cc169e9970514a08626cb37e93a2a6612", "committedDate": "2020-06-18T13:31:07Z", "message": "init queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "935394a58ddc2d6068ff7b755e155b86a8f54153", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/935394a58ddc2d6068ff7b755e155b86a8f54153", "committedDate": "2020-06-18T13:33:41Z", "message": "added service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908d694663e83ccab7f3ac732a94ae75de83c993", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/908d694663e83ccab7f3ac732a94ae75de83c993", "committedDate": "2020-06-18T13:34:41Z", "message": "fixed some tests and fifo queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0edd3bc72ad7344dd4c3d1cd0478aa1f630c9c43", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/0edd3bc72ad7344dd4c3d1cd0478aa1f630c9c43", "committedDate": "2020-06-18T13:37:09Z", "message": "fix old tests, start new ones"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b521257c9fbd01e78735122cf18aa755456a46f", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/7b521257c9fbd01e78735122cf18aa755456a46f", "committedDate": "2020-06-18T13:37:12Z", "message": "some tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "712884f6f104f1081bfc1e203c3cea479ee57908", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/712884f6f104f1081bfc1e203c3cea479ee57908", "committedDate": "2020-06-18T13:37:12Z", "message": "added test and refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a79c13596d8d45debe91128e4177be14df4c479", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/1a79c13596d8d45debe91128e4177be14df4c479", "committedDate": "2020-06-18T13:37:12Z", "message": "added headers, a test, and methods in testutils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "committedDate": "2020-06-18T13:37:12Z", "message": "refactor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e41058d0cfc2896f94ace797d7cf5d2264a0ce2e", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/e41058d0cfc2896f94ace797d7cf5d2264a0ce2e", "committedDate": "2020-06-18T13:26:41Z", "message": "refactor"}, "afterCommit": {"oid": "3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/3239b1f3b0eb9b8a3b162f9ef0921b33998c6b00", "committedDate": "2020-06-18T13:37:12Z", "message": "refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c844cb8f17ac4535303f7b3491e0419dabfc9956", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/c844cb8f17ac4535303f7b3491e0419dabfc9956", "committedDate": "2020-06-18T13:48:30Z", "message": "fixed failing tests and remove failing test due to new functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "274757ed96de49d4211eac202dbdaa0f783f831e", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/274757ed96de49d4211eac202dbdaa0f783f831e", "committedDate": "2020-06-18T14:10:59Z", "message": "sonar issues, now with await :D"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4d311527a0fe15c9a028948d119ec16bd8cf3fc", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/e4d311527a0fe15c9a028948d119ec16bd8cf3fc", "committedDate": "2020-06-18T18:19:55Z", "message": "changed lightpeer name in some places"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/4c1682fb5f55173ff2d472990f7a623feba930c3", "committedDate": "2020-06-19T13:41:04Z", "message": "fix test coverage in some changed places"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTQxMTkz", "url": "https://github.com/rsksmart/rskj/pull/1257#pullrequestreview-435141193", "createdAt": "2020-06-22T17:40:10Z", "commit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo0MDoxMVrOGnKsrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxODo0MjozOVrOGnMseg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMjkyNA==", "bodyText": "Why do the max amount of blocks is eleven?", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443722924", "createdAt": "2020-06-22T17:40:11Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;\n+\n+    public LightMessageHandler(LightProcessor lightProcessor, LightSyncProcessor lightSyncProcessor) {\n+        this.lightProcessor = lightProcessor;\n+        this.lightSyncProcessor = lightSyncProcessor;\n+        this.queue = new ArrayBlockingQueue<>(11);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNTA0NQ==", "bodyText": "Is it just for me? postMessage sounds me a bit confusing, I understand 'postMessage' like \"send message\". A name as \"store message\" could fit better?", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443725045", "createdAt": "2020-06-22T17:44:16Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;\n+\n+    public LightMessageHandler(LightProcessor lightProcessor, LightSyncProcessor lightSyncProcessor) {\n+        this.lightProcessor = lightProcessor;\n+        this.lightSyncProcessor = lightSyncProcessor;\n+        this.queue = new ArrayBlockingQueue<>(11);\n+    }\n+\n+    public void processMessage(LightPeer lightPeer, LightClientMessage message,\n+                               ChannelHandlerContext ctx, LightClientHandler lightClientHandler) {\n+        LightClientMessageVisitor visitor = new LightClientMessageVisitor(lightPeer, lightProcessor, lightSyncProcessor, ctx, lightClientHandler);\n+        message.accept(visitor);\n+    }\n+\n+    public void postMessage(LightPeer lightPeer, LightClientMessage message, ChannelHandlerContext ctx,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMzUxMQ==", "bodyText": "By default, the stopped variable is false?", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443733511", "createdAt": "2020-06-22T17:59:30Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/LightMessageHandler.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * This file is part of RskJ\n+ * Copyright (C) 2020 RSK Labs Ltd.\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Lesser General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program. If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package co.rsk.net.light;\n+\n+import co.rsk.config.InternalService;\n+import co.rsk.net.eth.LightClientHandler;\n+import co.rsk.net.light.message.LightClientMessage;\n+import com.google.common.annotations.VisibleForTesting;\n+import io.netty.channel.ChannelHandlerContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.TimeUnit;\n+\n+public class LightMessageHandler implements InternalService, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(\"lightmessagehandler\");\n+    private static final Logger loggerMessageProcess = LoggerFactory.getLogger(\"lightmessageProcess\");\n+\n+    private final LightProcessor lightProcessor;\n+    private final LightSyncProcessor lightSyncProcessor;\n+\n+    private final ArrayBlockingQueue<MessageTask> queue;\n+\n+    private volatile boolean stopped;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc1NTY0Mg==", "bodyText": "Ok, we should implement a peer handler before accepting messages from more than one peer, we are not doing anything to peers with bad behavior.", "url": "https://github.com/rsksmart/rskj/pull/1257#discussion_r443755642", "createdAt": "2020-06-22T18:42:39Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/light/LightSyncProcessorTest.java", "diffHunk": "@@ -141,29 +141,12 @@ public void processStatusMessageAndShouldAskForAndReceiveBlockHeaderCorrectly()\n \n         BlockHeadersMessage blockHeadersMessage = new BlockHeadersMessage(requestId, bHs);\n \n-        lightClientHandler.channelRead0(ctx, blockHeadersMessage);\n+        lightMessageHandler.processMessage(lightPeer, blockHeadersMessage, ctx, lightClientHandler);\n \n         assertEquals(1, lightPeer.getBlocks().size());\n         assertEquals(bHs, lightPeer.getBlocks());\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1682fb5f55173ff2d472990f7a623feba930c3"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e63cdefad4d4c8e1ffc57275c4609264ea0632", "author": {"user": {"login": "smcsicardi", "name": "Sebastian Sicardi"}}, "url": "https://github.com/rsksmart/rskj/commit/22e63cdefad4d4c8e1ffc57275c4609264ea0632", "committedDate": "2020-06-23T13:19:33Z", "message": "PR changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTIyMDY5", "url": "https://github.com/rsksmart/rskj/pull/1257#pullrequestreview-435922069", "createdAt": "2020-06-23T15:52:06Z", "commit": {"oid": "22e63cdefad4d4c8e1ffc57275c4609264ea0632"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 468, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}