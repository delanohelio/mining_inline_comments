{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzYxNTI0", "number": 1335, "title": "Process pegin information version1 fix", "bodyText": "Generate rejection release to refund address instead of the sender", "createdAt": "2020-10-12T19:15:08Z", "url": "https://github.com/rsksmart/rskj/pull/1335", "merged": true, "mergeCommit": {"oid": "4468a742076ae3f234dda75a7401cf87faabbf8c"}, "closed": true, "closedAt": "2020-10-13T19:58:44Z", "author": {"login": "marcos-iov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSK1_tABqjM4NzIyMzcyNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSNfcbgBqjM4NzMwODIzMDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "638fea2899f4035c2998448defe1c5cf80c03e97", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/638fea2899f4035c2998448defe1c5cf80c03e97", "committedDate": "2020-10-12T19:13:17Z", "message": "Generte rejection release to refund address instead of sender"}, "afterCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/500209c6eb6503e741cabe096f8a8b939e398a27", "committedDate": "2020-10-13T16:05:08Z", "message": "Generte rejection release to refund address instead of sender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdd4963a828fa2500a71062a75a3e26167257190", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/bdd4963a828fa2500a71062a75a3e26167257190", "committedDate": "2020-10-13T18:56:24Z", "message": "Update lockBtc event in BridgeEventLogger to handle the case when sender is null\n\nIf senderBtcAddress is null because the sender could not be obtained, then put \"Undetermined\" string in the sender field of the event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fbf1b981e208a56209fea45255ed69e7457b2fc", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/6fbf1b981e208a56209fea45255ed69e7457b2fc", "committedDate": "2020-10-13T18:56:24Z", "message": "Rename BtcLockSender TxType enum to TxSenderAddressType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4d57cf18d7c68f4b800498e4dbcfea2b0a402da", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/c4d57cf18d7c68f4b800498e4dbcfea2b0a402da", "committedDate": "2020-10-13T18:56:24Z", "message": "Rename txIsProcessable to txIsProcessableInLegacyVersion in BridgeUtils"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/500209c6eb6503e741cabe096f8a8b939e398a27", "committedDate": "2020-10-13T16:05:08Z", "message": "Generte rejection release to refund address instead of sender"}, "afterCommit": {"oid": "d5b15854bceebfb84a0d98fb1303b9ad203d09b2", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/d5b15854bceebfb84a0d98fb1303b9ad203d09b2", "committedDate": "2020-10-13T18:56:24Z", "message": "Generte rejection release to refund address instead of sender"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzM5MTQ0", "url": "https://github.com/rsksmart/rskj/pull/1335#pullrequestreview-507739144", "createdAt": "2020-10-13T18:56:27Z", "commit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjoyN1rOHg1EVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo1NjozNlrOHg1EsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NTk0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));\n          \n          \n            \n                        logger.warn(\"Rejecting peg-in: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        panicProcessor.panic(\"peg-in-refund\", String.format(\"peg-in money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));", "url": "https://github.com/rsksmart/rskj/pull/1335#discussion_r504185940", "createdAt": "2020-10-13T18:56:27Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "diffHunk": "@@ -2215,19 +2237,24 @@ private Address getParsedAddress(String base58Address) throws AddressFormatExcep\n         return Address.fromBase58(btcContext.getParams(), base58Address);\n     }\n \n-    private void generateRejectionRelease(BtcTransaction btcTx, Address senderBtcAddress, Transaction rskTx, Coin totalAmount) throws IOException {\n-        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, senderBtcAddress);\n+    private void generateRejectionRelease(\n+        BtcTransaction btcTx,\n+        Address btcRefundAddress,\n+        Transaction rskTx,\n+        Coin totalAmount) throws IOException {\n+\n+        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, btcRefundAddress);\n         if (buildReturnResult.isPresent()) {\n             if (activations.isActive(ConsensusRule.RSKIP146)) {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber(), rskTx.getHash());\n                 eventLogger.logReleaseBtcRequested(rskTx.getHash().getBytes(), buildReturnResult.get().getBtcTx(), totalAmount);\n             } else {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber());\n             }\n-            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", senderBtcAddress, rskTx, totalAmount);\n+            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);\n         } else {\n-            logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), senderBtcAddress, rskTx, totalAmount);\n-            panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), senderBtcAddress, rskTx, totalAmount));\n+            logger.warn(\"Rejecting lock: return tx build for btc tx {} error. Return was to {}. Tx {}. Value {}\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount);\n+            panicProcessor.panic(\"lock-refund\", String.format(\"whitelist money return tx build for btc tx %s error. Return was to %s. Tx %s. Value %s\", btcTx.getHash(), btcRefundAddress, rskTx, totalAmount));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NjAzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);\n          \n          \n            \n                        logger.info(\"Rejecting peg-in: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);", "url": "https://github.com/rsksmart/rskj/pull/1335#discussion_r504186032", "createdAt": "2020-10-13T18:56:36Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeSupport.java", "diffHunk": "@@ -2215,19 +2237,24 @@ private Address getParsedAddress(String base58Address) throws AddressFormatExcep\n         return Address.fromBase58(btcContext.getParams(), base58Address);\n     }\n \n-    private void generateRejectionRelease(BtcTransaction btcTx, Address senderBtcAddress, Transaction rskTx, Coin totalAmount) throws IOException {\n-        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, senderBtcAddress);\n+    private void generateRejectionRelease(\n+        BtcTransaction btcTx,\n+        Address btcRefundAddress,\n+        Transaction rskTx,\n+        Coin totalAmount) throws IOException {\n+\n+        Optional<ReleaseTransactionBuilder.BuildResult> buildReturnResult = this.getRefundingTransaction(btcTx, btcRefundAddress);\n         if (buildReturnResult.isPresent()) {\n             if (activations.isActive(ConsensusRule.RSKIP146)) {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber(), rskTx.getHash());\n                 eventLogger.logReleaseBtcRequested(rskTx.getHash().getBytes(), buildReturnResult.get().getBtcTx(), totalAmount);\n             } else {\n                 provider.getReleaseTransactionSet().add(buildReturnResult.get().getBtcTx(), rskExecutionBlock.getNumber());\n             }\n-            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", senderBtcAddress, rskTx, totalAmount);\n+            logger.info(\"Rejecting lock: return tx build successful to {}. Tx {}. Value {}.\", btcRefundAddress, rskTx, totalAmount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500209c6eb6503e741cabe096f8a8b939e398a27"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a12caf3243fabf986d5dec2d491f0a50a3bd176d", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/a12caf3243fabf986d5dec2d491f0a50a3bd176d", "committedDate": "2020-10-13T19:10:23Z", "message": "Generte rejection release to refund address instead of sender"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5b15854bceebfb84a0d98fb1303b9ad203d09b2", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/d5b15854bceebfb84a0d98fb1303b9ad203d09b2", "committedDate": "2020-10-13T18:56:24Z", "message": "Generte rejection release to refund address instead of sender"}, "afterCommit": {"oid": "a12caf3243fabf986d5dec2d491f0a50a3bd176d", "author": {"user": {"login": "marcos-iov", "name": "Marcos Irisarri"}}, "url": "https://github.com/rsksmart/rskj/commit/a12caf3243fabf986d5dec2d491f0a50a3bd176d", "committedDate": "2020-10-13T19:10:23Z", "message": "Generte rejection release to refund address instead of sender"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 582, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}