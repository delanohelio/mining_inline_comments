{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTI0NDY2", "number": 1299, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoyNToxNFrOEll92g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzozNTowNVrOEy7Sfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODU0ODEwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoyNToxNFrOHVJgzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoyNToxNFrOHVJgzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkzNzk5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Optional.of(decoded.get(0).getValue().toString());\n          \n          \n            \n                    return decoded.isEmpty() ? Optional.empty() : Optional.of(decoded.get(0).getValue().toString());", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r491937996", "createdAt": "2020-09-21T10:25:14Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "diffHunk": "@@ -227,6 +240,25 @@ private ProgramResult callConstant(Web3.CallArguments args, Block executionBlock\n         );\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private Optional<String> decodeRevertReason(ProgramResult res) {\n+        byte[] bytes = res.getHReturn();\n+        if (bytes == null || bytes.length == 0) {\n+            return Optional.empty();\n+        }\n+\n+        String value = Hex.toHexString(res.getHReturn());\n+        if (!value.startsWith(\"08c379a0\")) {\n+            return Optional.empty();\n+        }\n+\n+        List<TypeReference<Type>> revertReasonTypes =\n+                Collections.singletonList(TypeReference.create((Class<Type>) AbiTypes.getType(\"string\")));\n+        String encodedRevertReason = value.substring(8);\n+        List<Type> decoded = FunctionReturnDecoder.decode(encodedRevertReason, revertReasonTypes);\n+        return Optional.of(decoded.get(0).getValue().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e224f3f501fa7796132a389aa240338a2b0f81a"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTE0NjkyOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1NToyMFrOHWIG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1NToyMFrOHWIG1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2MzU0MQ==", "bodyText": "Magic value? Add comment and Constant.", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r492963541", "createdAt": "2020-09-22T18:55:20Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "diffHunk": "@@ -227,6 +240,25 @@ private ProgramResult callConstant(Web3.CallArguments args, Block executionBlock\n         );\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private Optional<String> decodeRevertReason(ProgramResult res) {\n+        byte[] bytes = res.getHReturn();\n+        if (bytes == null || bytes.length == 0) {\n+            return Optional.empty();\n+        }\n+\n+        String value = Hex.toHexString(res.getHReturn());\n+        if (!value.startsWith(\"08c379a0\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e224f3f501fa7796132a389aa240338a2b0f81a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTE0OTQ0OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1NjowM1rOHWIIag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1NjowM1rOHWIIag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2Mzk0Ng==", "bodyText": "Extract these lines to a method and add docs (at least some doc).", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r492963946", "createdAt": "2020-09-22T18:56:03Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "diffHunk": "@@ -227,6 +240,25 @@ private ProgramResult callConstant(Web3.CallArguments args, Block executionBlock\n         );\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private Optional<String> decodeRevertReason(ProgramResult res) {\n+        byte[] bytes = res.getHReturn();\n+        if (bytes == null || bytes.length == 0) {\n+            return Optional.empty();\n+        }\n+\n+        String value = Hex.toHexString(res.getHReturn());\n+        if (!value.startsWith(\"08c379a0\")) {\n+            return Optional.empty();\n+        }\n+\n+        List<TypeReference<Type>> revertReasonTypes =\n+                Collections.singletonList(TypeReference.create((Class<Type>) AbiTypes.getType(\"string\")));\n+        String encodedRevertReason = value.substring(8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e224f3f501fa7796132a389aa240338a2b0f81a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTE1NzUxOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/co/rsk/rpc/modules/eth/EthModuleTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1ODoxNlrOHWINlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo1ODoxNlrOHWINlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2NTI2OQ==", "bodyText": "What does this value means? Add some comments. We could check other possible values (?)", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r492965269", "createdAt": "2020-09-22T18:58:16Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/test/java/co/rsk/rpc/modules/eth/EthModuleTest.java", "diffHunk": "@@ -78,6 +80,50 @@ public void callSmokeTest() {\n         assertThat(result, is(TypeConverter.toJsonHex(hreturn)));\n     }\n \n+    @Test\n+    public void test_revertedTransaction() {\n+        Web3.CallArguments args = new Web3.CallArguments();\n+        BlockResult blockResult = mock(BlockResult.class);\n+        Block block = mock(Block.class);\n+        ExecutionBlockRetriever retriever = mock(ExecutionBlockRetriever.class);\n+        when(retriever.getExecutionBlock_workaround(\"latest\"))\n+                .thenReturn(blockResult);\n+        when(blockResult.getBlock()).thenReturn(block);\n+\n+        byte[] hreturn = Hex.decode(\n+                \"08c379a000000000000000000000000000000000000000000000000000000000\" +\n+                        \"0000002000000000000000000000000000000000000000000000000000000000\" +\n+                        \"0000000f6465706f73697420746f6f2062696700000000000000000000000000\" +\n+                        \"00000000\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e224f3f501fa7796132a389aa240338a2b0f81a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODM1NjQ3OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzozNTowNVrOHp13kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDoyMjo1NFrOHp7-xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYzNjI0MQ==", "bodyText": "Any real transaction executed in a code test (maybe using DSL), to test this signature?", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r513636241", "createdAt": "2020-10-28T17:35:05Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "diffHunk": "@@ -58,6 +58,9 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(\"web3\");\n \n+    private static final CallTransaction.Function ERROR_ABI_FUNCTION = CallTransaction.Function.fromSignature(\"Error\", \"string\");\n+    private static final byte[] ERROR_ABI_FUNCTION_SIGNATURE = ERROR_ABI_FUNCTION.encodeSignature(); //08c379a0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64e1037fa0a561288d3941d73ad25fdf81bd4462"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczNjM5MQ==", "bodyText": "Done!", "url": "https://github.com/rsksmart/rskj/pull/1299#discussion_r513736391", "createdAt": "2020-10-28T20:22:54Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/rpc/modules/eth/EthModule.java", "diffHunk": "@@ -58,6 +58,9 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(\"web3\");\n \n+    private static final CallTransaction.Function ERROR_ABI_FUNCTION = CallTransaction.Function.fromSignature(\"Error\", \"string\");\n+    private static final byte[] ERROR_ABI_FUNCTION_SIGNATURE = ERROR_ABI_FUNCTION.encodeSignature(); //08c379a0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYzNjI0MQ=="}, "originalCommit": {"oid": "64e1037fa0a561288d3941d73ad25fdf81bd4462"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4465, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}