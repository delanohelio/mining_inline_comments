{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MjkxNjAx", "number": 1260, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo1NjoxNFrOEIv11Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowNTo1NFrOEIwFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA3ODkzOnYy", "diffSide": "LEFT", "path": "rskj-core/src/main/java/co/rsk/net/light/message/GetBlockHeadersMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo1NjoxNFrOGo5Xog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoyNjoyOFrOGo6mkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzNjE2Mg==", "bodyText": "Shouldn't this method be declared as a method to implement in child classes?", "url": "https://github.com/rsksmart/rskj/pull/1260#discussion_r445536162", "createdAt": "2020-06-25T12:56:14Z", "author": {"login": "smcsicardi"}, "path": "rskj-core/src/main/java/co/rsk/net/light/message/GetBlockHeadersMessage.java", "diffHunk": "@@ -79,40 +64,13 @@ public int getMax() {\n         return max;\n     }\n \n-    private boolean getReverse() {\n-        return reverse;\n-    }\n-\n-    @Override\n-    public byte[] getEncoded() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7aa6c220889e64995c7eb5206310ab0379b52f"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1NjM3MA==", "bodyText": "yes, you are right", "url": "https://github.com/rsksmart/rskj/pull/1260#discussion_r445556370", "createdAt": "2020-06-25T13:26:28Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/main/java/co/rsk/net/light/message/GetBlockHeadersMessage.java", "diffHunk": "@@ -79,40 +64,13 @@ public int getMax() {\n         return max;\n     }\n \n-    private boolean getReverse() {\n-        return reverse;\n-    }\n-\n-    @Override\n-    public byte[] getEncoded() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzNjE2Mg=="}, "originalCommit": {"oid": "ac7aa6c220889e64995c7eb5206310ab0379b52f"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjExODQ5OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/co/rsk/net/light/LightProcessorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzowNTo1NFrOGo5xOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoyODozM1rOGo6sRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0MjcxMw==", "bodyText": "Move this methods to the LightClientTestUtils! That was why it was created for haha", "url": "https://github.com/rsksmart/rskj/pull/1260#discussion_r445542713", "createdAt": "2020-06-25T13:05:54Z", "author": {"login": "smcsicardi"}, "path": "rskj-core/src/test/java/co/rsk/net/light/LightProcessorTest.java", "diffHunk": "@@ -613,6 +586,32 @@ private static TransactionReceipt createReceipt() {\n         return receipt;\n     }\n \n+    private Block mockBestBlock() {\n+        Block bestBlock = mock(Block.class);\n+        when(bestBlock.getNumber()).thenReturn((long) 50);\n+        when(blockStore.getBestBlock()).thenReturn(bestBlock);\n+        return bestBlock;\n+    }\n+\n+    private Block createMockedBlockAndIncludeInBlockchain(long blockNumber, byte[] blockHash) {\n+        final Block block = mock(Block.class);\n+        final BlockHeader startBlockHeader = mock(BlockHeader.class);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7aa6c220889e64995c7eb5206310ab0379b52f"}, "originalPosition": 304}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1NzgzMA==", "bodyText": "Yes, I know. but the branch lc-SyncRound which I'm working on has more interesting methods to move to LightClientTestUtils, so after merged, I'll move those methods to Utils.", "url": "https://github.com/rsksmart/rskj/pull/1260#discussion_r445557830", "createdAt": "2020-06-25T13:28:33Z", "author": {"login": "julianlen"}, "path": "rskj-core/src/test/java/co/rsk/net/light/LightProcessorTest.java", "diffHunk": "@@ -613,6 +586,32 @@ private static TransactionReceipt createReceipt() {\n         return receipt;\n     }\n \n+    private Block mockBestBlock() {\n+        Block bestBlock = mock(Block.class);\n+        when(bestBlock.getNumber()).thenReturn((long) 50);\n+        when(blockStore.getBestBlock()).thenReturn(bestBlock);\n+        return bestBlock;\n+    }\n+\n+    private Block createMockedBlockAndIncludeInBlockchain(long blockNumber, byte[] blockHash) {\n+        final Block block = mock(Block.class);\n+        final BlockHeader startBlockHeader = mock(BlockHeader.class);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU0MjcxMw=="}, "originalCommit": {"oid": "ac7aa6c220889e64995c7eb5206310ab0379b52f"}, "originalPosition": 304}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4429, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}