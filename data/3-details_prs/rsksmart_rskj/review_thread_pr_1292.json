{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTU5MTM4", "number": 1292, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo1MToxNVrOEYMHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo1MToxNVrOEYMHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzk5ODAzOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo1MToxNVrOHAZIZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozNDozNFrOHA25UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3Mzc5Ng==", "bodyText": "Should we add  trieStore.dispose()?", "url": "https://github.com/rsksmart/rskj/pull/1292#discussion_r470173796", "createdAt": "2020-08-13T18:51:15Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -67,6 +67,13 @@ public void start() {\n     public void stop() {\n         emitter.removeListener(listener);\n         flushAll();\n+        closeAll();\n+    }\n+\n+    private void closeAll() {\n+        logger.trace(\"closing blockStore.\");\n+        blockStore.close();\n+        logger.trace(\"blockStore closed.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e7bde44a8833e37eecf3204287352e1321c8c9d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4NTcwNA==", "bodyText": "Well... DataSourceWithCache does that job. I wouldn\u2019t analyse that in the scope of this PR.", "url": "https://github.com/rsksmart/rskj/pull/1292#discussion_r470185704", "createdAt": "2020-08-13T19:10:17Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -67,6 +67,13 @@ public void start() {\n     public void stop() {\n         emitter.removeListener(listener);\n         flushAll();\n+        closeAll();\n+    }\n+\n+    private void closeAll() {\n+        logger.trace(\"closing blockStore.\");\n+        blockStore.close();\n+        logger.trace(\"blockStore closed.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3Mzc5Ng=="}, "originalCommit": {"oid": "8e7bde44a8833e37eecf3204287352e1321c8c9d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxODc3OQ==", "bodyText": "Seems that DataSource.close() is not called on shutdown, and, as a result, LevelDB instances are not getting disposed gracefully.\nIn the examples here they do close db.\nI guess we should investigate this more deeply in scope of this or another task.", "url": "https://github.com/rsksmart/rskj/pull/1292#discussion_r470618779", "createdAt": "2020-08-14T13:20:07Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -67,6 +67,13 @@ public void start() {\n     public void stop() {\n         emitter.removeListener(listener);\n         flushAll();\n+        closeAll();\n+    }\n+\n+    private void closeAll() {\n+        logger.trace(\"closing blockStore.\");\n+        blockStore.close();\n+        logger.trace(\"blockStore closed.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3Mzc5Ng=="}, "originalCommit": {"oid": "8e7bde44a8833e37eecf3204287352e1321c8c9d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MTQ1Ng==", "bodyText": "Yep, totally agreed. I will add another task to make a deep analysis.", "url": "https://github.com/rsksmart/rskj/pull/1292#discussion_r470661456", "createdAt": "2020-08-14T14:34:34Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -67,6 +67,13 @@ public void start() {\n     public void stop() {\n         emitter.removeListener(listener);\n         flushAll();\n+        closeAll();\n+    }\n+\n+    private void closeAll() {\n+        logger.trace(\"closing blockStore.\");\n+        blockStore.close();\n+        logger.trace(\"blockStore closed.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3Mzc5Ng=="}, "originalCommit": {"oid": "8e7bde44a8833e37eecf3204287352e1321c8c9d"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4458, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}