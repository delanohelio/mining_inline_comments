{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MjkyODA3", "number": 1341, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0NzoxOFrOEw1L3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODozMFrOExT-1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM4NDk1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0NzoxOFrOHmoW7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0NzoxOFrOHmoW7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2OTE2Ng==", "bodyText": "I think there are unnecessary parentheses surrounding derivationArgHash", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r510269166", "createdAt": "2020-10-22T15:47:18Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -625,22 +625,22 @@ private void saveDerivationArgumentsScriptHash() {\n             return;\n         }\n \n-        fastBridgeDerivationArgumentsScriptHashToSave.forEach((derivationArgsHash, fastBridgeFedP2SH) ->\n-                repository.addStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash), fastBridgeFedP2SH)\n+        fastBridgeDerivationArgumentsScriptHashToSave.forEach((derivationArgsHash) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb87cf8b1d00da21f02984b969525439280dda8b"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM5OTQ2OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDoyMlrOHmogBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDoyMlrOHmogBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTQ5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean isSavedFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n          \n          \n            \n                public boolean isFastBridgeFederationDerivationHashUsed(Sha256Hash derivationArgsHash) {", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r510271492", "createdAt": "2020-10-22T15:50:22Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -597,26 +600,23 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n+    public boolean isSavedFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb87cf8b1d00da21f02984b969525439280dda8b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwMDcxOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDozOFrOHmogxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MDozOFrOHmogxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MTY4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    byte[] data = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationARguments(derivationArgsHash));\n          \n          \n            \n                    byte[] data = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationArguments(derivationArgsHash));", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r510271684", "createdAt": "2020-10-22T15:50:38Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -597,26 +600,23 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n+    public boolean isSavedFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n         if (!activations.isActive(RSKIP176)) {\n-            return Optional.empty();\n+            return false;\n         }\n+        byte[] data = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationARguments(derivationArgsHash));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb87cf8b1d00da21f02984b969525439280dda8b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQwNTQyOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1MTozOFrOHmojow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoyMTo0MVrOHmyZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjQxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash) {\n          \n          \n            \n                public void markFastBridgeFederationDerivationHashAsUsed(Sha256Hash derivationArgsHash) {", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r510272419", "createdAt": "2020-10-22T15:51:38Z", "author": {"login": "josedahlquist"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -597,26 +600,23 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n+    public boolean isSavedFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n         if (!activations.isActive(RSKIP176)) {\n-            return Optional.empty();\n+            return false;\n         }\n+        byte[] data = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationARguments(derivationArgsHash));\n \n-        byte[] fastBridgeFedP2SH = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash));\n-\n-        if (fastBridgeFedP2SH == null ) {\n-            return Optional.empty();\n-        }\n-\n-        return Optional.of(fastBridgeFedP2SH);\n+        return ((data != null) && (data.length == 1) && (data[0] == FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE));\n     }\n \n-    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n+    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb87cf8b1d00da21f02984b969525439280dda8b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzMzYxNw==", "bodyText": "I think setDerivationArgumentsScriptHash is still there", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r510433617", "createdAt": "2020-10-22T20:21:41Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -597,26 +600,23 @@ private void saveCoinbaseInformations() {\n             safeSaveToRepository(getStorageKeyForCoinbaseInformation(blockHash), data, BridgeSerializationUtils::serializeCoinbaseInformation));\n     }\n \n-    public Optional<byte[]> getFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n+    public boolean isSavedFastBridgeFederationScriptHash(Sha256Hash derivationArgsHash) {\n         if (!activations.isActive(RSKIP176)) {\n-            return Optional.empty();\n+            return false;\n         }\n+        byte[] data = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationARguments(derivationArgsHash));\n \n-        byte[] fastBridgeFedP2SH = repository.getStorageBytes(contractAddress, getStorageKeyForDerivationP2SHByHash(derivationArgsHash));\n-\n-        if (fastBridgeFedP2SH == null ) {\n-            return Optional.empty();\n-        }\n-\n-        return Optional.of(fastBridgeFedP2SH);\n+        return ((data != null) && (data.length == 1) && (data[0] == FAST_BRIDGE_FEDERATION_SCRIPT_HASH_TRUE_VALUE));\n     }\n \n-    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash, byte[] fastBridgeFedP2SH) {\n+    public void setDerivationArgumentsScriptHash(Sha256Hash derivationArgsHash) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3MjQxOQ=="}, "originalCommit": {"oid": "eb87cf8b1d00da21f02984b969525439280dda8b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTQzMDYwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODozMFrOHnYmjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODoxODozMFrOHnYmjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1OTU5OQ==", "bodyText": "Both parameters fastBridgeScriptHash &  fastBridgeFederationInformationsToSave should be private", "url": "https://github.com/rsksmart/rskj/pull/1341#discussion_r511059599", "createdAt": "2020-10-23T18:18:30Z", "author": {"login": "guidohernan93"}, "path": "rskj-core/src/main/java/co/rsk/peg/BridgeStorageProvider.java", "diffHunk": "@@ -111,9 +114,11 @@\n \n     private Map<Sha256Hash, CoinbaseInformation> coinbaseInformationMap;\n \n-    private Map<Sha256Hash, byte[]> fastBridgeDerivationArgumentsScriptHashToSave;\n+    private Sha256Hash fastBridgeDerivationArgumentsScriptHashToSave = null;\n+\n+    byte[] fastBridgeScriptHash = new byte[]{};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8f59176716f4817a9496832a1b2ee4cc0b620e5"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4512, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}