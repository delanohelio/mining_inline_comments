{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTQ0ODc1", "number": 1172, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoxMDo0NFrODgfsAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoyNjowN1rODgf2AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDAwMTkzOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/net/NodeMessageHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoxMDo0NFrOFquzBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoxMDo0NFrOFquzBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MTIzNg==", "bodyText": "This condition is never true, as this.queue.offer never returns false:\n     * Inserts the specified element into this priority queue.\n     * As the queue is unbounded, this method will never return {@code false}.", "url": "https://github.com/rsksmart/rskj/pull/1172#discussion_r380351236", "createdAt": "2020-02-17T20:10:44Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/co/rsk/net/NodeMessageHandler.java", "diffHunk": "@@ -123,7 +124,10 @@ private void tryAddMessage(Peer sender, Message message) {\n                 }\n                 this.receivedMessages.add(encodedMessage);\n             }\n-            if (!this.queue.offer(new MessageTask(sender, message))){\n+\n+            double score = sender.score(System.currentTimeMillis(), message.getMessageType());\n+\n+            if (score >= 0 && !this.queue.offer(new MessageTask(sender, message, score))){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b9dcf694ae41ac065ff917367637915844a339"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDAyNzUyOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/net/NodeMessageHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoyNjowN1rOFqvCXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDoyNjowN1rOFqvCXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1NTE2NQ==", "bodyText": "I think it's weird to have MessageTask be naturally ordered by their score. It certainly helps in this implementation, but it is weird to read taskA > taskB and assign it any meaning. Maybe use the other constructor to the queue which allows to define a Comparator<MessageTask>?\nMaybe I'm being too picky here, take just a note/discussion.", "url": "https://github.com/rsksmart/rskj/pull/1172#discussion_r380355165", "createdAt": "2020-02-17T20:26:07Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/co/rsk/net/NodeMessageHandler.java", "diffHunk": "@@ -236,6 +247,31 @@ public String toString() {\n                     \", message=\" + message +\n                     '}';\n         }\n+\n+        @Override\n+        public int compareTo(MessageTask messageTask) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b9dcf694ae41ac065ff917367637915844a339"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4557, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}