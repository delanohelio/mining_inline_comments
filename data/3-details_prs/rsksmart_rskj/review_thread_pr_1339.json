{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTM4ODAw", "number": 1339, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDowOTozNlrOEw7QRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDowOTozNlrOEw7QRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzM3OTI1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/org/ethereum/util/ByteUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDowOTozNlrOHmx_xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDowOTozNlrOHmx_xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyNzA3OA==", "bodyText": "I would add an assert of the last byte, matching the src.", "url": "https://github.com/rsksmart/rskj/pull/1339#discussion_r510427078", "createdAt": "2020-10-22T20:09:36Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/test/java/org/ethereum/util/ByteUtilTest.java", "diffHunk": "@@ -466,7 +466,47 @@ public void testParseBytes() {\n         for (int i=0; i < b3.length; i++) {\n             assertEquals(b3[i],normalByteArrayOffset3LeadingZeroes[i]);\n         }\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testToBytesWithLeadingZeros_InvalidLen() {\n+        ByteUtil.toBytesWithLeadingZeros(new byte[0], -1);\n+    }\n+\n+    @Test\n+    public void testToBytesWithLeadingZeros_NullSource() {\n+        byte[] actualResult = ByteUtil.toBytesWithLeadingZeros(null, 1);\n+\n+        assertNull(actualResult);\n+    }\n+\n+    @Test\n+    public void testToBytesWithLeadingZeros_EmptySource() {\n+        byte[] src = new byte[0];\n+\n+        byte[] actualResult = ByteUtil.toBytesWithLeadingZeros(src, 0);\n \n+        assertEquals(src, actualResult);\n     }\n \n+    @Test\n+    public void testToBytesWithLeadingZeros_SameSource() {\n+        byte[] src = new byte[]{0};\n+\n+        byte[] actualResult = ByteUtil.toBytesWithLeadingZeros(src, 0);\n+\n+        assertEquals(src, actualResult);\n+    }\n+\n+    @Test\n+    public void testToBytesWithLeadingZeros_WithLeadingZeros() {\n+        byte[] src = new byte[]{1};\n+\n+        byte[] actualResult = ByteUtil.toBytesWithLeadingZeros(src, 10);\n+\n+        assertEquals(10, actualResult.length);\n+        for (int i = 0; i < actualResult.length - src.length; i++) {\n+            assertEquals(0, actualResult[i]);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3fecfe2363ac67db63e21659c29d6bf34b9f139"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4507, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}