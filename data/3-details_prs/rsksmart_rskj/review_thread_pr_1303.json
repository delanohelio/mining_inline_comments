{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNjU4ODQy", "number": 1303, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNjoyOFrOEhn-1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNDozNFrOEhsaww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjkzNTI0OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/util/ByteUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNjoyOFrOHPCgdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOToxNDoyOFrOHPWE_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMTc2NA==", "bodyText": "how about this way?\n    public static int numBytes(String val) {\n        return new BigInteger(val).bitLength() / 8 + 1;\n    }", "url": "https://github.com/rsksmart/rskj/pull/1303#discussion_r485531764", "createdAt": "2020-09-09T11:16:28Z", "author": {"login": "Vovchyk"}, "path": "rskj-core/src/main/java/org/ethereum/util/ByteUtil.java", "diffHunk": "@@ -366,14 +366,14 @@ public static String oneByteToHexString(byte value) {\n     public static int numBytes(String val) {\n \n         BigInteger bInt = new BigInteger(val);\n-        int bytes = 0;\n+        int bytes = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "016625b9c574f10cc777555b6d7bca6fe716fc1e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1MjQxNQ==", "bodyText": "worked like a charm!", "url": "https://github.com/rsksmart/rskj/pull/1303#discussion_r485852415", "createdAt": "2020-09-09T19:14:28Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/org/ethereum/util/ByteUtil.java", "diffHunk": "@@ -366,14 +366,14 @@ public static String oneByteToHexString(byte value) {\n     public static int numBytes(String val) {\n \n         BigInteger bInt = new BigInteger(val);\n-        int bytes = 0;\n+        int bytes = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMTc2NA=="}, "originalCommit": {"oid": "016625b9c574f10cc777555b6d7bca6fe716fc1e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzY1NTgxOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxMzoxMVrOHPJbJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxOToxOTo0NFrOHPWPSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NTA5NA==", "bodyText": "I don't think this is the right way to tackle this. Instead, I would change the logging level of the test logback.xml", "url": "https://github.com/rsksmart/rskj/pull/1303#discussion_r485645094", "createdAt": "2020-09-09T14:13:11Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -77,9 +78,9 @@ public void stop() {\n     }\n \n     private void closeAll() {\n-        logger.trace(\"closing blockStore.\");\n+        getLogger().trace(\"closing blockStore.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "016625b9c574f10cc777555b6d7bca6fe716fc1e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1NTA1MA==", "bodyText": "changed as suggested, thanks!", "url": "https://github.com/rsksmart/rskj/pull/1303#discussion_r485855050", "createdAt": "2020-09-09T19:19:44Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/BlockChainFlusher.java", "diffHunk": "@@ -77,9 +78,9 @@ public void stop() {\n     }\n \n     private void closeAll() {\n-        logger.trace(\"closing blockStore.\");\n+        getLogger().trace(\"closing blockStore.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NTA5NA=="}, "originalCommit": {"oid": "016625b9c574f10cc777555b6d7bca6fe716fc1e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzY2MjExOnYy", "diffSide": "LEFT", "path": "rskj-core/src/main/java/org/ethereum/util/ByteUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNDozNFrOHPJfJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNDozNFrOHPJfJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NjExNw==", "bodyText": "SonarQube says this expression is always true, but that seems off. Surely it is not guaranteed it is always true, given the while above? bad static analysis?", "url": "https://github.com/rsksmart/rskj/pull/1303#discussion_r485646117", "createdAt": "2020-09-09T14:14:34Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/org/ethereum/util/ByteUtil.java", "diffHunk": "@@ -366,14 +366,14 @@ public static String oneByteToHexString(byte value) {\n     public static int numBytes(String val) {\n \n         BigInteger bInt = new BigInteger(val);\n-        int bytes = 0;\n+        int bytes = 1;\n \n         while (!bInt.equals(BigInteger.ZERO)) {\n             bInt = bInt.shiftRight(8);\n             ++bytes;\n         }\n-        if (bytes == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "016625b9c574f10cc777555b6d7bca6fe716fc1e"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4467, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}