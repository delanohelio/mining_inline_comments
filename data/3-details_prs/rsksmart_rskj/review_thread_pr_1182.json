{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTAyMTUz", "number": 1182, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzoyOTowMVrODnLPfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjowNVrODnerxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDA1MjQ3OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzoyOTowMVrOF1BXVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzoyOTowMVrOF1BXVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MTIwNQ==", "bodyText": "This method should not be called when ummRoot.length ==0. It's better to throw an exception in that case.", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391141205", "createdAt": "2020-03-11T17:29:01Z", "author": {"login": "SergioDemianLerner"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -496,6 +514,20 @@ public String getShortHashForMergedMining() {\n         return hashForMergedMining;\n     }\n \n+    private byte[] getHashRootForMergedMining(byte[] leftHash) {\n+        if ((ummRoot.length != UMM_LEAVES_LENGTH) && (ummRoot.length != 0)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97bb60c4b4f9c15dbbb4e7a4dae292146a70b2da"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzE1NDUzOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo0NjoxM1rOF1fOsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo0NjoxM1rOF1fOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYzMDUxMg==", "bodyText": "This message will get old really fast. Change the message so it prints the exact amount of elements the header must have depending on if UMM is activated or not.", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391630512", "createdAt": "2020-03-12T13:46:13Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "diffHunk": "@@ -186,14 +179,32 @@ private BlockHeader decodeHeader(RLPList rlpHeader, boolean sealed) {\n         byte[] minimumGasPriceBytes = rlpHeader.get(14).getRLPData();\n         Coin minimumGasPrice = RLP.parseSignedCoinNonNullZero(minimumGasPriceBytes);\n \n+        if (!canBeDecoded(rlpHeader, blockNumber)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"A block header must have 16/17 elements or 19/20 including merged-mining fields but it had %d\",\n+                    rlpHeader.size()\n+            ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a45a9ea7081156b2447529ed489fbf81614e820"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzE4OTAxOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo1NDo0MFrOF1fkTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo1NDo0MFrOF1fkTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYzNjA0Nw==", "bodyText": "Can we avoid using r++? It will only cause confusion at some point, at some point someone will believe that it does get(r + 1);r += 1 and it instead does get(r); r += 1", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391636047", "createdAt": "2020-03-12T13:54:40Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockFactory.java", "diffHunk": "@@ -186,14 +179,32 @@ private BlockHeader decodeHeader(RLPList rlpHeader, boolean sealed) {\n         byte[] minimumGasPriceBytes = rlpHeader.get(14).getRLPData();\n         Coin minimumGasPrice = RLP.parseSignedCoinNonNullZero(minimumGasPriceBytes);\n \n+        if (!canBeDecoded(rlpHeader, blockNumber)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"A block header must have 16/17 elements or 19/20 including merged-mining fields but it had %d\",\n+                    rlpHeader.size()\n+            ));\n+        }\n+\n         int r = 15;\n \n+        boolean isUmm = activationConfig.isActive(ConsensusRule.RSKIPUMM, blockNumber);\n+\n+        boolean includeUncleCount = isUmm ||\n+            // sizes prior to UMM activation\n+            rlpHeader.size() == (RLP_HEADER_SIZE-1) || rlpHeader.size() == (RLP_HEADER_SIZE_WITH_MERGED_MINING-1);\n+\n         int uncleCount = 0;\n-        if (rlpHeader.size() == RLP_HEADER_SIZE || rlpHeader.size() == RLP_HEADER_SIZE_WITH_MERGED_MINING) {\n+        if (includeUncleCount) {\n             byte[] ucBytes = rlpHeader.get(r++).getRLPData();\n             uncleCount = parseBigInteger(ucBytes).intValueExact();\n         }\n \n+        byte[] ummRoot = null;\n+        if (isUmm) {\n+            ummRoot = rlpHeader.get(r++).getRLPRawData();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a45a9ea7081156b2447529ed489fbf81614e820"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIzMjcwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNDo0OFrOF1f_lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNDo0OFrOF1f_lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0MzAyOA==", "bodyText": "Should this be the condition an not isActive(umm)? For example, getPendingState always create a null ummRoot, even after activation... If coded this way, we will have two kind of blocks inside the node, some which encode to something with ummroots, and some which dont... is this intended? Sounds like it will complicate things at some point.", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391643028", "createdAt": "2020-03-12T14:04:48Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -349,6 +353,10 @@ public Coin getMinimumGasPrice() {\n         byte[] uncleCount = RLP.encodeBigInteger(BigInteger.valueOf(this.uncleCount));\n         fieldToEncodeList.add(uncleCount);\n \n+        if (this.ummRoot != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a45a9ea7081156b2447529ed489fbf81614e820"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIzNzgyOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjowNVrOF1gC5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjowNVrOF1gC5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0Mzg3Nw==", "bodyText": "Same comments as above, shouldn't all blocks be UMM Blocks after the activation?", "url": "https://github.com/rsksmart/rskj/pull/1182#discussion_r391643877", "createdAt": "2020-03-12T14:06:05Z", "author": {"login": "joaquinlpereyra-iov"}, "path": "rskj-core/src/main/java/org/ethereum/core/BlockHeader.java", "diffHunk": "@@ -477,9 +485,19 @@ public String getShortHashForMergedMining() {\n         return HashUtil.shortHash(getHashForMergedMining());\n     }\n \n+    public boolean isUMMBlock() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a45a9ea7081156b2447529ed489fbf81614e820"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4567, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}