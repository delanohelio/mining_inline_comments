{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDQwMjkw", "number": 1253, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1MDozOVrOEHlGmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1MDozOVrOEHlGmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzgzMzg1OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/core/bc/TransactionPoolImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzo1MDozOVrOGnBgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTowMjoxOVrOGojBIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MjIzMQ==", "bodyText": "This check shouldn\u2019t be done inside the Comparator logic?", "url": "https://github.com/rsksmart/rskj/pull/1253#discussion_r443572231", "createdAt": "2020-06-22T13:50:39Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/TransactionPoolImpl.java", "diffHunk": "@@ -299,15 +302,23 @@ public synchronized void processBest(Block block) {\n             }\n         }\n \n-        removeObsoleteTransactions(block.getNumber(), this.outdatedThreshold, this.outdatedTimeout);\n-\n-        bestBlock = block;\n+        removeObsoleteTransactions(this.outdatedThreshold, this.outdatedTimeout);\n \n         if (listener != null) {\n             EventDispatchThread.invokeLater(() -> listener.onTransactionPoolChanged(TransactionPoolImpl.this));\n         }\n     }\n \n+    private BlockFork getFork(Block oldBestBlock, Block newBestBlock) {\n+        if (oldBestBlock != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2NDY0Nw==", "bodyText": "I don't think so. I see the fact that oldBestBlock can be null as an implementation detail of this class.", "url": "https://github.com/rsksmart/rskj/pull/1253#discussion_r444364647", "createdAt": "2020-06-23T16:46:12Z", "author": {"login": "nicops"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/TransactionPoolImpl.java", "diffHunk": "@@ -299,15 +302,23 @@ public synchronized void processBest(Block block) {\n             }\n         }\n \n-        removeObsoleteTransactions(block.getNumber(), this.outdatedThreshold, this.outdatedTimeout);\n-\n-        bestBlock = block;\n+        removeObsoleteTransactions(this.outdatedThreshold, this.outdatedTimeout);\n \n         if (listener != null) {\n             EventDispatchThread.invokeLater(() -> listener.onTransactionPoolChanged(TransactionPoolImpl.this));\n         }\n     }\n \n+    private BlockFork getFork(Block oldBestBlock, Block newBestBlock) {\n+        if (oldBestBlock != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MjIzMQ=="}, "originalCommit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE2OTk1NA==", "bodyText": "Shouldn't calculateFork() have a check for null params?", "url": "https://github.com/rsksmart/rskj/pull/1253#discussion_r445169954", "createdAt": "2020-06-24T21:02:19Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/core/bc/TransactionPoolImpl.java", "diffHunk": "@@ -299,15 +302,23 @@ public synchronized void processBest(Block block) {\n             }\n         }\n \n-        removeObsoleteTransactions(block.getNumber(), this.outdatedThreshold, this.outdatedTimeout);\n-\n-        bestBlock = block;\n+        removeObsoleteTransactions(this.outdatedThreshold, this.outdatedTimeout);\n \n         if (listener != null) {\n             EventDispatchThread.invokeLater(() -> listener.onTransactionPoolChanged(TransactionPoolImpl.this));\n         }\n     }\n \n+    private BlockFork getFork(Block oldBestBlock, Block newBestBlock) {\n+        if (oldBestBlock != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MjIzMQ=="}, "originalCommit": {"oid": "96a0b53bcc27aef316135310a932745bc7c0d2a6"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4422, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}