{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjYwMDI2", "number": 1366, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo0NjowNFrOE6sO6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo0NjowNFrOE6sO6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTc3NTc4OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/rpc/netty/Web3ResultHttpResponseHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo0NjowNFrOH16mPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDozNTowM1rOH7Ae2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5NjYzOA==", "bodyText": "You can use:\nimport static io.netty.handler.codec.http.HttpHeaders.Names.CONTENT_TYPE;\nimport static io.netty.handler.codec.http.HttpHeaders.Values.APPLICATION_JSON;", "url": "https://github.com/rsksmart/rskj/pull/1366#discussion_r526296638", "createdAt": "2020-11-18T17:46:04Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/rpc/netty/Web3ResultHttpResponseHandler.java", "diffHunk": "@@ -29,11 +29,15 @@\n \n     @Override\n     protected void channelRead0(ChannelHandlerContext ctx, Web3Result msg) {\n-        ctx.write(new DefaultFullHttpResponse(\n-            HttpVersion.HTTP_1_1,\n-            HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n-            msg.getContent()\n-        )).addListener(ChannelFutureListener.CLOSE);\n+        DefaultFullHttpResponse response = new DefaultFullHttpResponse(\n+                HttpVersion.HTTP_1_1,\n+                HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n+                msg.getContent()\n+        );\n+\n+        response.headers().add(\"Content-Type\", \"application/json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86730a66f302c1ad65bbb378094add9d1c5ed3bc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMwNjQ0Mw==", "bodyText": "We could also remove unused import:\nimport io.netty.channel.ChannelFutureListener;", "url": "https://github.com/rsksmart/rskj/pull/1366#discussion_r526306443", "createdAt": "2020-11-18T17:58:49Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/co/rsk/rpc/netty/Web3ResultHttpResponseHandler.java", "diffHunk": "@@ -29,11 +29,15 @@\n \n     @Override\n     protected void channelRead0(ChannelHandlerContext ctx, Web3Result msg) {\n-        ctx.write(new DefaultFullHttpResponse(\n-            HttpVersion.HTTP_1_1,\n-            HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n-            msg.getContent()\n-        )).addListener(ChannelFutureListener.CLOSE);\n+        DefaultFullHttpResponse response = new DefaultFullHttpResponse(\n+                HttpVersion.HTTP_1_1,\n+                HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n+                msg.getContent()\n+        );\n+\n+        response.headers().add(\"Content-Type\", \"application/json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5NjYzOA=="}, "originalCommit": {"oid": "86730a66f302c1ad65bbb378094add9d1c5ed3bc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYzNTkyOQ==", "bodyText": "Added constants. The ChannelFutureListener import is still in use", "url": "https://github.com/rsksmart/rskj/pull/1366#discussion_r531635929", "createdAt": "2020-11-27T14:35:03Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/rpc/netty/Web3ResultHttpResponseHandler.java", "diffHunk": "@@ -29,11 +29,15 @@\n \n     @Override\n     protected void channelRead0(ChannelHandlerContext ctx, Web3Result msg) {\n-        ctx.write(new DefaultFullHttpResponse(\n-            HttpVersion.HTTP_1_1,\n-            HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n-            msg.getContent()\n-        )).addListener(ChannelFutureListener.CLOSE);\n+        DefaultFullHttpResponse response = new DefaultFullHttpResponse(\n+                HttpVersion.HTTP_1_1,\n+                HttpResponseStatus.valueOf(DefaultHttpStatusCodeProvider.INSTANCE.getHttpStatusCode(msg.getCode())),\n+                msg.getContent()\n+        );\n+\n+        response.headers().add(\"Content-Type\", \"application/json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5NjYzOA=="}, "originalCommit": {"oid": "86730a66f302c1ad65bbb378094add9d1c5ed3bc"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4544, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}