{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzk5ODEw", "number": 1383, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNTozNDozM1rOFA2tDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0Njo0N1rOFD8u2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDQwNTkwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNTozNDozM1rOH_WICw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjozOTowNFrOH_Y1yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE4NDg0Mw==", "bodyText": "Why did you change the byte array for RLPList? whats the rationale?\nAnd why didn't you change it in subclasses?", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r536184843", "createdAt": "2020-12-04T15:34:33Z", "author": {"login": "patogallaiovlabs"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -101,20 +100,16 @@\n     private Keccak256 hash;\n     private Keccak256 rawHash;\n \n-    protected Transaction(byte[] rawData) {\n-        RLPList transaction = RLP.decodeList(rawData);\n-\n+    protected Transaction(RLPList transaction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e870377bb70ed474abae720caeabae75ea39740"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyOTMyMA==", "bodyText": "@patogallaiovlabs I've tried to reduce amount of byte[] arrays passed around as arguments, which brings a stronger typing.\nIt might be unnecessary here, as subclasses seem to be about of scope of this task.", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r536229320", "createdAt": "2020-12-04T16:39:04Z", "author": {"login": "andreoss"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -101,20 +100,16 @@\n     private Keccak256 hash;\n     private Keccak256 rawHash;\n \n-    protected Transaction(byte[] rawData) {\n-        RLPList transaction = RLP.decodeList(rawData);\n-\n+    protected Transaction(RLPList transaction) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE4NDg0Mw=="}, "originalCommit": {"oid": "2e870377bb70ed474abae720caeabae75ea39740"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Njg0MzkwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0NDo1NlrOID1S-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTozNDowMVrOIEPS5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg4OTg0OA==", "bodyText": "Could we clone these fields in the innermost constructor?", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r540889848", "createdAt": "2020-12-11T11:44:56Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -137,56 +132,38 @@ protected Transaction(byte[] rawData) {\n      * or simple send tx\n      * [ nonce, gasPrice, gasLimit, receiveAddress, value, data, signature(v, r, s) ]\n      */\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n-        this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-    }\n-\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data, byte[] r, byte[] s, byte v) {\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n         this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-\n-        this.signature = ECDSASignature.fromComponents(r, s, v);\n     }\n \n-    public Transaction(long nonce, long gasPrice, long gas, String to, long value, byte[] data, byte chainId) {\n-        this(BigInteger.valueOf(nonce).toByteArray(), BigInteger.valueOf(gasPrice).toByteArray(),\n-                BigInteger.valueOf(gas).toByteArray(), Hex.decode(to), BigInteger.valueOf(value).toByteArray(),\n-                data, chainId);\n-    }\n-\n-    public Transaction(BigInteger nonce, BigInteger gasPrice, BigInteger gas, String to, BigInteger value, byte[] data,\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] valueRaw, byte[] data,\n                        byte chainId) {\n-        this(nonce.toByteArray(), gasPrice.toByteArray(), gas.toByteArray(), Hex.decode(to), value.toByteArray(), data,\n-                chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, (byte[]) null, chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, String data, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, data == null ? null : Hex.decode(data), chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte[] decodedData, byte chainId) {\n-        this(BigIntegers.asUnsignedByteArray(nonce),\n-                gasPrice.toByteArray(),\n-                BigIntegers.asUnsignedByteArray(gasLimit),\n-                to != null ? Hex.decode(to) : null,\n-                BigIntegers.asUnsignedByteArray(amount),\n-                decodedData,\n-                chainId);\n+        this(\n+                ByteUtil.cloneBytes(nonce),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMxNTgxMg==", "bodyText": "@ajlopezrsk Done", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r541315812", "createdAt": "2020-12-11T21:34:01Z", "author": {"login": "andreoss"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -137,56 +132,38 @@ protected Transaction(byte[] rawData) {\n      * or simple send tx\n      * [ nonce, gasPrice, gasLimit, receiveAddress, value, data, signature(v, r, s) ]\n      */\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n-        this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-    }\n-\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data, byte[] r, byte[] s, byte v) {\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n         this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-\n-        this.signature = ECDSASignature.fromComponents(r, s, v);\n     }\n \n-    public Transaction(long nonce, long gasPrice, long gas, String to, long value, byte[] data, byte chainId) {\n-        this(BigInteger.valueOf(nonce).toByteArray(), BigInteger.valueOf(gasPrice).toByteArray(),\n-                BigInteger.valueOf(gas).toByteArray(), Hex.decode(to), BigInteger.valueOf(value).toByteArray(),\n-                data, chainId);\n-    }\n-\n-    public Transaction(BigInteger nonce, BigInteger gasPrice, BigInteger gas, String to, BigInteger value, byte[] data,\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] valueRaw, byte[] data,\n                        byte chainId) {\n-        this(nonce.toByteArray(), gasPrice.toByteArray(), gas.toByteArray(), Hex.decode(to), value.toByteArray(), data,\n-                chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, (byte[]) null, chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, String data, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, data == null ? null : Hex.decode(data), chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte[] decodedData, byte chainId) {\n-        this(BigIntegers.asUnsignedByteArray(nonce),\n-                gasPrice.toByteArray(),\n-                BigIntegers.asUnsignedByteArray(gasLimit),\n-                to != null ? Hex.decode(to) : null,\n-                BigIntegers.asUnsignedByteArray(amount),\n-                decodedData,\n-                chainId);\n+        this(\n+                ByteUtil.cloneBytes(nonce),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg4OTg0OA=="}, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Njg0NTY4OnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0NToyNlrOID1T-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTozMjo0MVrOIEPOOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg5MDEwNg==", "bodyText": "Any suggested explicit visibility?", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r540890106", "createdAt": "2020-12-11T11:45:26Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -137,56 +132,38 @@ protected Transaction(byte[] rawData) {\n      * or simple send tx\n      * [ nonce, gasPrice, gasLimit, receiveAddress, value, data, signature(v, r, s) ]\n      */\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n-        this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-    }\n-\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data, byte[] r, byte[] s, byte v) {\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n         this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-\n-        this.signature = ECDSASignature.fromComponents(r, s, v);\n     }\n \n-    public Transaction(long nonce, long gasPrice, long gas, String to, long value, byte[] data, byte chainId) {\n-        this(BigInteger.valueOf(nonce).toByteArray(), BigInteger.valueOf(gasPrice).toByteArray(),\n-                BigInteger.valueOf(gas).toByteArray(), Hex.decode(to), BigInteger.valueOf(value).toByteArray(),\n-                data, chainId);\n-    }\n-\n-    public Transaction(BigInteger nonce, BigInteger gasPrice, BigInteger gas, String to, BigInteger value, byte[] data,\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] valueRaw, byte[] data,\n                        byte chainId) {\n-        this(nonce.toByteArray(), gasPrice.toByteArray(), gas.toByteArray(), Hex.decode(to), value.toByteArray(), data,\n-                chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, (byte[]) null, chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, String data, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, data == null ? null : Hex.decode(data), chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte[] decodedData, byte chainId) {\n-        this(BigIntegers.asUnsignedByteArray(nonce),\n-                gasPrice.toByteArray(),\n-                BigIntegers.asUnsignedByteArray(gasLimit),\n-                to != null ? Hex.decode(to) : null,\n-                BigIntegers.asUnsignedByteArray(amount),\n-                decodedData,\n-                chainId);\n+        this(\n+                ByteUtil.cloneBytes(nonce),\n+                RLP.parseCoinNonNullZero(ByteUtil.cloneBytes(gasPriceRaw)),\n+                ByteUtil.cloneBytes(gasLimit),\n+                RLP.parseRskAddress(ByteUtil.cloneBytes(receiveAddress)),\n+                RLP.parseCoinNullZero(ByteUtil.cloneBytes(valueRaw)),\n+                ByteUtil.cloneBytes(data),\n+                chainId,\n+                false\n+        );\n+    }\n+\n+    Transaction(byte[] nonce, Coin gasPriceRaw, byte[] gasLimit, RskAddress receiveAddress, Coin valueRaw, byte[] data,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMxNDYxNg==", "bodyText": "@ajlopezrsk Replaced implicit with protected.", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r541314616", "createdAt": "2020-12-11T21:32:41Z", "author": {"login": "andreoss"}, "path": "rskj-core/src/main/java/org/ethereum/core/Transaction.java", "diffHunk": "@@ -137,56 +132,38 @@ protected Transaction(byte[] rawData) {\n      * or simple send tx\n      * [ nonce, gasPrice, gasLimit, receiveAddress, value, data, signature(v, r, s) ]\n      */\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n-        this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-    }\n-\n-    public Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data, byte[] r, byte[] s, byte v) {\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] value, byte[] data) {\n         this(nonce, gasPriceRaw, gasLimit, receiveAddress, value, data, (byte) 0);\n-\n-        this.signature = ECDSASignature.fromComponents(r, s, v);\n     }\n \n-    public Transaction(long nonce, long gasPrice, long gas, String to, long value, byte[] data, byte chainId) {\n-        this(BigInteger.valueOf(nonce).toByteArray(), BigInteger.valueOf(gasPrice).toByteArray(),\n-                BigInteger.valueOf(gas).toByteArray(), Hex.decode(to), BigInteger.valueOf(value).toByteArray(),\n-                data, chainId);\n-    }\n-\n-    public Transaction(BigInteger nonce, BigInteger gasPrice, BigInteger gas, String to, BigInteger value, byte[] data,\n+    protected Transaction(byte[] nonce, byte[] gasPriceRaw, byte[] gasLimit, byte[] receiveAddress, byte[] valueRaw, byte[] data,\n                        byte chainId) {\n-        this(nonce.toByteArray(), gasPrice.toByteArray(), gas.toByteArray(), Hex.decode(to), value.toByteArray(), data,\n-                chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, (byte[]) null, chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, String data, byte chainId) {\n-        this(to, amount, nonce, gasPrice, gasLimit, data == null ? null : Hex.decode(data), chainId);\n-    }\n-\n-    public Transaction(String to, BigInteger amount, BigInteger nonce, BigInteger gasPrice, BigInteger gasLimit, byte[] decodedData, byte chainId) {\n-        this(BigIntegers.asUnsignedByteArray(nonce),\n-                gasPrice.toByteArray(),\n-                BigIntegers.asUnsignedByteArray(gasLimit),\n-                to != null ? Hex.decode(to) : null,\n-                BigIntegers.asUnsignedByteArray(amount),\n-                decodedData,\n-                chainId);\n+        this(\n+                ByteUtil.cloneBytes(nonce),\n+                RLP.parseCoinNonNullZero(ByteUtil.cloneBytes(gasPriceRaw)),\n+                ByteUtil.cloneBytes(gasLimit),\n+                RLP.parseRskAddress(ByteUtil.cloneBytes(receiveAddress)),\n+                RLP.parseCoinNullZero(ByteUtil.cloneBytes(valueRaw)),\n+                ByteUtil.cloneBytes(data),\n+                chainId,\n+                false\n+        );\n+    }\n+\n+    Transaction(byte[] nonce, Coin gasPriceRaw, byte[] gasLimit, RskAddress receiveAddress, Coin valueRaw, byte[] data,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg5MDEwNg=="}, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Njg1MDgwOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/main/java/co/rsk/remasc/RemascTransaction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0Njo0N1rOID1W3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTozMzo0M1rOIEPR0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg5MDg0NA==", "bodyText": "Maybe, out of scope, but it could be nice to have RLP logic decoupled from Transaction class, at least in this constructor", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r540890844", "createdAt": "2020-12-11T11:46:47Z", "author": {"login": "ajlopezrsk"}, "path": "rskj-core/src/main/java/co/rsk/remasc/RemascTransaction.java", "diffHunk": "@@ -53,7 +54,7 @@ public String toJsonString() {\n     };\n \n     public RemascTransaction(byte[] rawData) {\n-        super(rawData);\n+        super(RLP.decodeList(rawData));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMxNTUzNg==", "bodyText": "@ajlopezrsk Now RLP logic is handled by the base class itself.", "url": "https://github.com/rsksmart/rskj/pull/1383#discussion_r541315536", "createdAt": "2020-12-11T21:33:43Z", "author": {"login": "andreoss"}, "path": "rskj-core/src/main/java/co/rsk/remasc/RemascTransaction.java", "diffHunk": "@@ -53,7 +54,7 @@ public String toJsonString() {\n     };\n \n     public RemascTransaction(byte[] rawData) {\n-        super(rawData);\n+        super(RLP.decodeList(rawData));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg5MDg0NA=="}, "originalCommit": {"oid": "0d20256ae7610113845c21189930cc2438094e25"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4406, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}