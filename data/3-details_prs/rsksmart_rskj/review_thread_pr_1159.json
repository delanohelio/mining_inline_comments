{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMjA3NzIy", "number": 1159, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoyNjowNFrODYO9Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoyNjowNFrODYO9Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzM3NTAyOnYy", "diffSide": "RIGHT", "path": "rskj-core/src/test/java/co/rsk/mine/MinerServerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjoyNjowNFrOFd-VFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNDo1Mzo1OVrOFpG_0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDIyOA==", "bodyText": "Really? xD", "url": "https://github.com/rsksmart/rskj/pull/1159#discussion_r366974228", "createdAt": "2020-01-15T16:26:04Z", "author": {"login": "pmprete"}, "path": "rskj-core/src/test/java/co/rsk/mine/MinerServerTest.java", "diffHunk": "@@ -868,11 +868,18 @@ public void extraDataWithClientDataMoreThan32Bytes() {\n \n         byte[] secondItem = decodedExtraData.get(1).getRLPData();\n         assertNotNull(secondItem);\n-        assertEquals(\"SNAPSHOT-cb7f28e\", new String(secondItem));\n+        assertEquals(config.projectVersionModifier().concat(\"-cb7f28e\"), new String(secondItem));\n \n         byte[] thirdItem = decodedExtraData.get(2).getRLPData();\n         assertNotNull(thirdItem);\n-        assertEquals(\"tincho is th\", new String(thirdItem));\n+\n+        // The final client extra data may be truncated by the combined size of the other encoded elements\n+        int extraDataMaxLength = 32;\n+        int extraDataEncodingOverhead = 3;\n+        Integer clientExtraDataSize =\n+                extraDataMaxLength - extraDataEncodingOverhead - firstItem.length - secondItem.length;\n+\n+        assertEquals(\"tincho is the king of mining\".substring(0, clientExtraDataSize), new String(thirdItem));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f74b2013497c37638c8ce665043970775d08502"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY1MDU3OQ==", "bodyText": "100% sure xD", "url": "https://github.com/rsksmart/rskj/pull/1159#discussion_r378650579", "createdAt": "2020-02-13T04:53:59Z", "author": {"login": "martinmedina"}, "path": "rskj-core/src/test/java/co/rsk/mine/MinerServerTest.java", "diffHunk": "@@ -868,11 +868,18 @@ public void extraDataWithClientDataMoreThan32Bytes() {\n \n         byte[] secondItem = decodedExtraData.get(1).getRLPData();\n         assertNotNull(secondItem);\n-        assertEquals(\"SNAPSHOT-cb7f28e\", new String(secondItem));\n+        assertEquals(config.projectVersionModifier().concat(\"-cb7f28e\"), new String(secondItem));\n \n         byte[] thirdItem = decodedExtraData.get(2).getRLPData();\n         assertNotNull(thirdItem);\n-        assertEquals(\"tincho is th\", new String(thirdItem));\n+\n+        // The final client extra data may be truncated by the combined size of the other encoded elements\n+        int extraDataMaxLength = 32;\n+        int extraDataEncodingOverhead = 3;\n+        Integer clientExtraDataSize =\n+                extraDataMaxLength - extraDataEncodingOverhead - firstItem.length - secondItem.length;\n+\n+        assertEquals(\"tincho is the king of mining\".substring(0, clientExtraDataSize), new String(thirdItem));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDIyOA=="}, "originalCommit": {"oid": "8f74b2013497c37638c8ce665043970775d08502"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4551, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}