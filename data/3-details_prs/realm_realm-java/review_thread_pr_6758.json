{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjgwNzU2", "number": 6758, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMDo1NFrODjYtHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyNjowMFrODjYz0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDMxNTE2OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/java/io/realm/internal/RealmObjectProxy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMDo1NFrOFvKijQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDo0MTozMlrOFvNVAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMDA3Nw==", "bodyText": "Why silencing FindBug? is this used from the generated class?", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385000077", "createdAt": "2020-02-27T09:20:54Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/main/java/io/realm/internal/RealmObjectProxy.java", "diffHunk": "@@ -34,6 +35,7 @@\n      * Tuple class for saving meta data about a cached RealmObject.\n      */\n     class CacheData<E extends RealmModel> {\n+        @SuppressFBWarnings(\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\")\n         public int minDepth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA0NTc2MQ==", "bodyText": "Yes, it is referenced by our proxy classes. Not entirely sure why it suddenly starts complaining.", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385045761", "createdAt": "2020-02-27T10:41:32Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/java/io/realm/internal/RealmObjectProxy.java", "diffHunk": "@@ -34,6 +35,7 @@\n      * Tuple class for saving meta data about a cached RealmObject.\n      */\n     class CacheData<E extends RealmModel> {\n+        @SuppressFBWarnings(\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\")\n         public int minDepth;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMDA3Nw=="}, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDMyMzMxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMzoyNVrOFvKnxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMzoyNVrOFvKnxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTQxMw==", "bodyText": "Leftover for the FIXME?", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385001413", "createdAt": "2020-02-27T09:23:25Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "diffHunk": "@@ -652,7 +642,9 @@ public void stop_multipleTimes() {\n \n     @Test\n     @RunTestInLooperThread\n+    @Ignore(\"FIXME https://github.com/realm/realm-sync/issues/3234\")\n     public void waitForInitialRemoteData_throwsOnTimeout() {\n+        RealmLog.setLevel(LogLevel.DEBUG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDMyNjEyOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyNDoxMVrOFvKpgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxMjowNlrOFvMWYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTg1Ng==", "bodyText": "The Java & Core issue related to this seems closed, do you want to enable this again?", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385001856", "createdAt": "2020-02-27T09:24:11Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "diffHunk": "@@ -652,7 +642,9 @@ public void stop_multipleTimes() {\n \n     @Test\n     @RunTestInLooperThread\n+    @Ignore(\"FIXME https://github.com/realm/realm-sync/issues/3234\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyOTczMQ==", "bodyText": "Yup, reenabling.", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385029731", "createdAt": "2020-02-27T10:12:06Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncSessionTests.java", "diffHunk": "@@ -652,7 +642,9 @@ public void stop_multipleTimes() {\n \n     @Test\n     @RunTestInLooperThread\n+    @Ignore(\"FIXME https://github.com/realm/realm-sync/issues/3234\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTg1Ng=="}, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDMzMjM1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyNjowMFrOFvKtYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMTozNzowMVrOFvO9tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMjg0OQ==", "bodyText": "Hmm. this is confusing RealmMigrationNeededException doesn't make sense in an additive Sync schema scenario...", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385002849", "createdAt": "2020-02-27T09:26:00Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmIntegrationTests.java", "diffHunk": "@@ -299,7 +293,7 @@ public void waitForInitialRemoteData_readOnlyTrue_throwsIfWrongServerSchema() {\n             // schema.\n             realm = Realm.getInstance(configNew);\n             fail();\n-        } catch (IllegalStateException ignored) {\n+        } catch (RealmMigrationNeededException ignored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyOTY1MQ==", "bodyText": "Good point. I'll fix it.", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385029651", "createdAt": "2020-02-27T10:11:58Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmIntegrationTests.java", "diffHunk": "@@ -299,7 +293,7 @@ public void waitForInitialRemoteData_readOnlyTrue_throwsIfWrongServerSchema() {\n             // schema.\n             realm = Realm.getInstance(configNew);\n             fail();\n-        } catch (IllegalStateException ignored) {\n+        } catch (RealmMigrationNeededException ignored) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMjg0OQ=="}, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3MjU2Nw==", "bodyText": "There is something odd here. But changing the exception to IllegalState causes other errors. It looks like a difference between query-based and fully synchronized Realms (since this PR changes the default back to fully synchronized). I have created #6759 to track it.", "url": "https://github.com/realm/realm-java/pull/6758#discussion_r385072567", "createdAt": "2020-02-27T11:37:01Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/syncIntegrationTest/java/io/realm/SyncedRealmIntegrationTests.java", "diffHunk": "@@ -299,7 +293,7 @@ public void waitForInitialRemoteData_readOnlyTrue_throwsIfWrongServerSchema() {\n             // schema.\n             realm = Realm.getInstance(configNew);\n             fail();\n-        } catch (IllegalStateException ignored) {\n+        } catch (RealmMigrationNeededException ignored) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMjg0OQ=="}, "originalCommit": {"oid": "cb1b8a82a44c8b9d9399786a7c4efb0b837097f7"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 600, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}