{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODUyMTY2", "number": 7097, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1MzoxNVrOEjiO0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTowMDoyNFrOEjiYtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Njk2NDY1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1MzoxNVrOHR8Fkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTowOTo0M1rOHR8oOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjMwNg==", "bodyText": "Is this the default behaviour we want to introduce rather than throwing? what happens now if the user silently ignores this error? sync will stop or we'll keep getting a divergent history error from the server?", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488572306", "createdAt": "2020-09-15T10:53:15Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "diffHunk": "@@ -338,6 +347,12 @@ public void onError(SyncSession session, AppException error) {\n                 }\n             }\n         };\n+        private SyncSession.ClientResetHandler defaultClientResetHandler = new SyncSession.ClientResetHandler() {\n+            @Override\n+            public void onClientReset(SyncSession session, ClientResetRequiredError error) {\n+                RealmLog.error(\"Client Reset required for: \" + session.getConfiguration().getServerUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU4MTE3OQ==", "bodyText": "It is the same behavior we have currently for the default behavior, but yes I was also considering if we should throw an exception instead.\nThrowing feels a bit heavy though because you can theoretically still use the app after this happens, Sync just stops working. If we throw, it might mean forcibly breaking a lot of apps if the developer somehow failed to implement support. Without throwing there is a least a bigger chance that the app is still somewhat useful.", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488581179", "createdAt": "2020-09-15T11:09:43Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "diffHunk": "@@ -338,6 +347,12 @@ public void onError(SyncSession session, AppException error) {\n                 }\n             }\n         };\n+        private SyncSession.ClientResetHandler defaultClientResetHandler = new SyncSession.ClientResetHandler() {\n+            @Override\n+            public void onClientReset(SyncSession session, ClientResetRequiredError error) {\n+                RealmLog.error(\"Client Reset required for: \" + session.getConfiguration().getServerUrl());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MjMwNg=="}, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Njk2OTY5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1NDo0NFrOHR8ImQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1NDo0NFrOHR8ImQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3MzA4MQ==", "bodyText": "can't we use Util.checkNull(handler, \"handler\"); simply?", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488573081", "createdAt": "2020-09-15T10:54:44Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncConfiguration.java", "diffHunk": "@@ -807,6 +820,21 @@ public Builder errorHandler(SyncSession.ErrorHandler errorHandler) {\n             return this;\n         }\n \n+        /**\n+         * Sets the handler for when a Client Reset occurs. If no handler is set, and error is\n+         * logged when a Client Reset occurs.\n+         *\n+         * @param handler custom handler in case of a Client Reset.\n+         */\n+        public Builder clientResetHandler(SyncSession.ClientResetHandler handler) {\n+            //noinspection ConstantConditions\n+            if (handler == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Njk3NzY4OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1Njo0MVrOHR8NKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1Njo0MVrOHR8NKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NDI1MA==", "bodyText": "Is the code snippet pointed to from the doc is up-to-date?", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488574250", "createdAt": "2020-09-15T10:56:41Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -196,8 +198,8 @@ void notifySessionError(String nativeErrorCategory, int nativeErrorCode, String\n         if (errCode == ErrorCode.CLIENT_RESET) {\n             // errorMessage contains the path to the backed up file\n             RealmConfiguration backupRealmConfiguration = configuration.forErrorRecovery(errorMessage);\n-            errorHandler.onError(this, new ClientResetRequiredError(errCode, \"A Client Reset is required. \" +\n-                    \"Read more here: https://realm.io/docs/realm-object-server/#client-recovery-from-a-backup.\",\n+            clientResetHandler.onClientReset(this, new ClientResetRequiredError(errCode, \"A Client Reset is required. \" +\n+                    \"Read more here: https://docs.realm.io/sync/using-synced-realms/errors#client-reset.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Njk4MzgzOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDo1ODozMlrOHR8Q8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxMjo0N1rOHSt4PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NTIxNg==", "bodyText": "Is there a test checking we could actually open the backup correctly and inspect data?", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488575216", "createdAt": "2020-09-15T10:58:32Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -647,48 +649,60 @@ private void checkTimeout(long timeout, TimeUnit unit) {\n          * When an exception is thrown in the error handler, the occurrence will be logged and the exception\n          * will be ignored.\n          *\n-         * <p>\n-         * When the {@code error.getErrorCode()} returns {@link ErrorCode#CLIENT_RESET}, it indicates the Realm\n-         * needs to be reset and the {@code error} can be cast to {@link ClientResetRequiredError}.\n-         * <p>\n-         * A synced Realm may need to be reset because the Realm Object Server encountered an error and had\n-         * to be restored from a backup. If the backup copy of the remote Realm is of an earlier version\n-         * than the local copy of the Realm, the server will ask the client to reset the Realm.\n-         * <p>\n-         * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n-         * for safekeeping, and then deleted from the original location. The next time the Realm for that\n-         * URL is opened, the Realm will automatically be re-downloaded from the Realm Object Server, and\n-         * can be used as normal.\n-         * <p>\n-         * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n-         * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n-         * initially contain only the data present at the time the Realm was backed up on the server.\n-         * <p>\n-         * The client reset process can be initiated in one of two ways:\n-         * <ol>\n-         *     <li>\n-         *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n-         *         closed before this method is called.\n-         *     </li>\n-         *     <li>\n-         *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n-         *         Realm instances have been closed and re-opened. This will most likely be\n-         *         when the app is restarted.\n-         *     </li>\n-         * </ol>\n-         *\n-         * <b>WARNING:</b>\n-         * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n-         * synchronized to the Object Server. Those changes will only be present in the backed up file. It is therefore\n-         * recommended to close all open Realm instances as soon as possible.\n-         *\n-         *\n          * @param session {@link SyncSession} this error happened on.\n          * @param error type of error.\n          */\n         void onError(SyncSession session, AppException error);\n     }\n \n+    /**\n+     * Callback for the specific error event known as a Client Reset, determined by the error code\n+     * {@link ErrorCode#CLIENT_RESET}.\n+     * <p>\n+     * A synced Realm may need to be reset because the MongoDB Realm Server encountered an error and had\n+     * to be restored from a backup or because it has been too long since the client connected to the\n+     * server so the server has rotated the logs.\n+     * <p>\n+     * The Client Reset thus occurs because the server does not have the full information required to\n+     * bring the Client fully up to date.\n+     * <p>\n+     * The reset process is as follows: the local copy of the Realm is copied into a recovery directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4ODA5Mg==", "bodyText": "Yes: https://github.com/realm/realm-java/blob/v10/realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt#L190", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r489388092", "createdAt": "2020-09-16T12:12:47Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -647,48 +649,60 @@ private void checkTimeout(long timeout, TimeUnit unit) {\n          * When an exception is thrown in the error handler, the occurrence will be logged and the exception\n          * will be ignored.\n          *\n-         * <p>\n-         * When the {@code error.getErrorCode()} returns {@link ErrorCode#CLIENT_RESET}, it indicates the Realm\n-         * needs to be reset and the {@code error} can be cast to {@link ClientResetRequiredError}.\n-         * <p>\n-         * A synced Realm may need to be reset because the Realm Object Server encountered an error and had\n-         * to be restored from a backup. If the backup copy of the remote Realm is of an earlier version\n-         * than the local copy of the Realm, the server will ask the client to reset the Realm.\n-         * <p>\n-         * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n-         * for safekeeping, and then deleted from the original location. The next time the Realm for that\n-         * URL is opened, the Realm will automatically be re-downloaded from the Realm Object Server, and\n-         * can be used as normal.\n-         * <p>\n-         * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n-         * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n-         * initially contain only the data present at the time the Realm was backed up on the server.\n-         * <p>\n-         * The client reset process can be initiated in one of two ways:\n-         * <ol>\n-         *     <li>\n-         *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n-         *         closed before this method is called.\n-         *     </li>\n-         *     <li>\n-         *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n-         *         Realm instances have been closed and re-opened. This will most likely be\n-         *         when the app is restarted.\n-         *     </li>\n-         * </ol>\n-         *\n-         * <b>WARNING:</b>\n-         * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n-         * synchronized to the Object Server. Those changes will only be present in the backed up file. It is therefore\n-         * recommended to close all open Realm instances as soon as possible.\n-         *\n-         *\n          * @param session {@link SyncSession} this error happened on.\n          * @param error type of error.\n          */\n         void onError(SyncSession session, AppException error);\n     }\n \n+    /**\n+     * Callback for the specific error event known as a Client Reset, determined by the error code\n+     * {@link ErrorCode#CLIENT_RESET}.\n+     * <p>\n+     * A synced Realm may need to be reset because the MongoDB Realm Server encountered an error and had\n+     * to be restored from a backup or because it has been too long since the client connected to the\n+     * server so the server has rotated the logs.\n+     * <p>\n+     * The Client Reset thus occurs because the server does not have the full information required to\n+     * bring the Client fully up to date.\n+     * <p>\n+     * The reset process is as follows: the local copy of the Realm is copied into a recovery directory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NTIxNg=="}, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Njk4OTk5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTowMDoyNFrOHR8UzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTowMDoyNFrOHR8UzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NjIwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Callback that indicates a Client Reset has happend. This should be handled as quickly\n          \n          \n            \n                     * Callback that indicates a Client Reset has happened. This should be handled as quickly as possible.", "url": "https://github.com/realm/realm-java/pull/7097#discussion_r488576205", "createdAt": "2020-09-15T11:00:24Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/sync/SyncSession.java", "diffHunk": "@@ -647,48 +649,60 @@ private void checkTimeout(long timeout, TimeUnit unit) {\n          * When an exception is thrown in the error handler, the occurrence will be logged and the exception\n          * will be ignored.\n          *\n-         * <p>\n-         * When the {@code error.getErrorCode()} returns {@link ErrorCode#CLIENT_RESET}, it indicates the Realm\n-         * needs to be reset and the {@code error} can be cast to {@link ClientResetRequiredError}.\n-         * <p>\n-         * A synced Realm may need to be reset because the Realm Object Server encountered an error and had\n-         * to be restored from a backup. If the backup copy of the remote Realm is of an earlier version\n-         * than the local copy of the Realm, the server will ask the client to reset the Realm.\n-         * <p>\n-         * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n-         * for safekeeping, and then deleted from the original location. The next time the Realm for that\n-         * URL is opened, the Realm will automatically be re-downloaded from the Realm Object Server, and\n-         * can be used as normal.\n-         * <p>\n-         * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n-         * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n-         * initially contain only the data present at the time the Realm was backed up on the server.\n-         * <p>\n-         * The client reset process can be initiated in one of two ways:\n-         * <ol>\n-         *     <li>\n-         *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n-         *         closed before this method is called.\n-         *     </li>\n-         *     <li>\n-         *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n-         *         Realm instances have been closed and re-opened. This will most likely be\n-         *         when the app is restarted.\n-         *     </li>\n-         * </ol>\n-         *\n-         * <b>WARNING:</b>\n-         * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n-         * synchronized to the Object Server. Those changes will only be present in the backed up file. It is therefore\n-         * recommended to close all open Realm instances as soon as possible.\n-         *\n-         *\n          * @param session {@link SyncSession} this error happened on.\n          * @param error type of error.\n          */\n         void onError(SyncSession session, AppException error);\n     }\n \n+    /**\n+     * Callback for the specific error event known as a Client Reset, determined by the error code\n+     * {@link ErrorCode#CLIENT_RESET}.\n+     * <p>\n+     * A synced Realm may need to be reset because the MongoDB Realm Server encountered an error and had\n+     * to be restored from a backup or because it has been too long since the client connected to the\n+     * server so the server has rotated the logs.\n+     * <p>\n+     * The Client Reset thus occurs because the server does not have the full information required to\n+     * bring the Client fully up to date.\n+     * <p>\n+     * The reset process is as follows: the local copy of the Realm is copied into a recovery directory\n+     * for safekeeping, and then deleted from the original location. The next time the Realm for that\n+     * URL is opened, the Realm will automatically be re-downloaded from MongoDB Realm, and\n+     * can be used as normal.\n+     * <p>\n+     * Data written to the Realm after the local copy of the Realm diverged from the backup remote copy\n+     * will be present in the local recovery copy of the Realm file. The re-downloaded Realm will\n+     * initially contain only the data present at the time the Realm was backed up on the server.\n+     * <p>\n+     * The client reset process can be initiated in one of two ways:\n+     * <ol>\n+     *     <li>\n+     *         Run {@link ClientResetRequiredError#executeClientReset()} manually. All Realm instances must be\n+     *         closed before this method is called.\n+     *     </li>\n+     *     <li>\n+     *         If Client Reset isn't executed manually, it will automatically be carried out the next time all\n+     *         Realm instances have been closed and re-opened. This will most likely be\n+     *         when the app is restarted.\n+     *     </li>\n+     * </ol>\n+     *\n+     * <b>WARNING:</b>\n+     * Any writes to the Realm file between this callback and Client Reset has been executed, will not be\n+     * synchronized to MongoDB Realm. Those changes will only be present in the backed up file. It is therefore\n+     * recommended to close all open Realm instances as soon as possible.\n+     */\n+    public interface ClientResetHandler {\n+        /**\n+         * Callback that indicates a Client Reset has happend. This should be handled as quickly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54ff9b91ad0944c9e92d8e2b5d8971359375a9e1"}, "originalPosition": 113}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 536, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}