{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMzM3ODY4", "number": 7060, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0Mzo1MVrOEeJy6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODo1MjoxMFrOEg2Ldw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDUzMjI0OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0Mzo1MVrOHJp2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODoyNjoyMVrOHJvY3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NDgwNg==", "bodyText": "No need to manually stop the session. That should happen when closing the Realm", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479884806", "createdAt": "2020-08-31T04:43:51Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt", "diffHunk": "@@ -502,5 +502,18 @@ class SessionTests {\n     fun getOrCreateSession() {\n         assertNotNull(app.sync.getOrCreateSession(configuration))\n     }\n+\n+    @Test\n+    fun getAllSessions(){\n+        val realm = Realm.getInstance(configuration)\n+        val session = realm.syncSession\n+        val sessions = app.sync.allSessions\n+\n+        assertNotNull(sessions)\n+        assertEquals(1, sessions.size)\n+\n+        realm.close()\n+        session.stop()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3NTY0NQ==", "bodyText": "Ok!", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479975645", "createdAt": "2020-08-31T08:26:21Z", "author": {"login": "clementetb"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SessionTests.kt", "diffHunk": "@@ -502,5 +502,18 @@ class SessionTests {\n     fun getOrCreateSession() {\n         assertNotNull(app.sync.getOrCreateSession(configuration))\n     }\n+\n+    @Test\n+    fun getAllSessions(){\n+        val realm = Realm.getInstance(configuration)\n+        val session = realm.syncSession\n+        val sessions = app.sync.allSessions\n+\n+        assertNotNull(sessions)\n+        assertEquals(1, sessions.size)\n+\n+        realm.close()\n+        session.stop()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NDgwNg=="}, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDUzNTIxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0NjowMlrOHJp3wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODoyNzoyNFrOHJva4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NTI0OQ==", "bodyText": "We also need to move the removeUserAsync() method.", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479885249", "createdAt": "2020-08-31T04:46:02Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -330,6 +330,20 @@ public User switchUser(User user) {\n         return user;\n     }\n \n+    /**\n+     * Removes a users credentials from this device. If the user was currently logged in, they\n+     * will be logged out as part of the process. This is only a local change and does not\n+     * affect the user state on the server.\n+     *\n+     * @param user to remove\n+     * @return user that was removed.\n+     * @throws AppException if called from the UI thread or if the user was logged in, but\n+     *                      could not be logged out.\n+     */\n+    public User removeUser(User user) throws AppException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk3NjE2MQ==", "bodyText": "Didn't see the method \ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479976161", "createdAt": "2020-08-31T08:27:24Z", "author": {"login": "clementetb"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -330,6 +330,20 @@ public User switchUser(User user) {\n         return user;\n     }\n \n+    /**\n+     * Removes a users credentials from this device. If the user was currently logged in, they\n+     * will be logged out as part of the process. This is only a local change and does not\n+     * affect the user state on the server.\n+     *\n+     * @param user to remove\n+     * @return user that was removed.\n+     * @throws AppException if called from the UI thread or if the user was logged in, but\n+     *                      could not be logged out.\n+     */\n+    public User removeUser(User user) throws AppException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NTI0OQ=="}, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDUzODM5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/Profile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0Nzo1N1rOHJp5fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0Nzo1N1rOHJp5fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NTY5Mg==", "bodyText": "This constructor shouldn't be public if possible. Also, we should probably send in the User class as a parameter as we can then expose it through a getUser() (for completeness, so we can always find the user/app from any class in the class hierachy)", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479885692", "createdAt": "2020-08-31T04:47:57Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/Profile.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.realm.mongodb;\n+\n+import javax.annotation.Nullable;\n+\n+import io.realm.internal.objectstore.OsSyncUser;\n+\n+public class Profile {\n+    private final OsSyncUser osUser;\n+\n+    public Profile(OsSyncUser osUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDUzODkxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/Profile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0ODoyOVrOHJp53A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo0ODoyOVrOHJp53A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NTc4OA==", "bodyText": "We should probably implement equals/hashcode/toString", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479885788", "createdAt": "2020-08-31T04:48:29Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/Profile.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.realm.mongodb;\n+\n+import javax.annotation.Nullable;\n+\n+import io.realm.internal.objectstore.OsSyncUser;\n+\n+public class Profile {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDU0MTk2OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo1MDoyMFrOHJp7mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo1MDoyMFrOHJp7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NjIzMg==", "bodyText": "We seem to be lacking tests for this?", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479886232", "createdAt": "2020-08-31T04:50:20Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoClient.java", "diffHunk": "@@ -48,4 +48,13 @@ public MongoDatabase getDatabase(final String databaseName) {\n         return new MongoDatabase(osMongoClient.getDatabase(databaseName, codecRegistry),\n                 databaseName);\n     }\n+\n+    /**\n+     * Returns the service name for this client.\n+     *\n+     * @return the service name.\n+     */\n+    public String getServiceName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDU0MjI5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo1MDoyOVrOHJp7xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNDo1MDoyOVrOHJp7xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg4NjI3Ng==", "bodyText": "We seem to be lacking tests for this?", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r479886276", "createdAt": "2020-08-31T04:50:29Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/mongo/MongoCollection.java", "diffHunk": "@@ -85,6 +85,15 @@ public MongoNamespace getNamespace() {\n         return nameSpace;\n     }\n \n+    /**\n+     * Gets the name of this collection\n+     *\n+     * @return the name\n+     */\n+    public String getName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8df58bde39ebc27df2eef5e3b9e8fba6c95fbe7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODM4NTU3OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserProfileInfoTests.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzoxODoyOFrOHNy8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODo1MzowOVrOHN2nsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyODI2MQ==", "bodyText": "I have not picked up anything about changing Profile to ProfileInfo. Is this aligned with the other SDKs?", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r484228261", "createdAt": "2020-09-07T07:18:28Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserProfileInfoTests.kt", "diffHunk": "@@ -29,7 +29,7 @@ import org.junit.runner.RunWith\n import kotlin.test.assertNull\n \n @RunWith(AndroidJUnit4::class)\n-class UserProfileTests {\n+class UserProfileInfoTests {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bb35f2e8a565784a44dbe7979a797d1f34ffe5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4ODQzNQ==", "bodyText": "Sorry, I remembered wrong. JS is calling this UserProfile so we should rename to that as well: https://mongodb.slack.com/archives/CKW2HG3M0/p1599466293136100", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r484288435", "createdAt": "2020-09-07T08:53:09Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/UserProfileInfoTests.kt", "diffHunk": "@@ -29,7 +29,7 @@ import org.junit.runner.RunWith\n import kotlin.test.assertNull\n \n @RunWith(AndroidJUnit4::class)\n-class UserProfileTests {\n+class UserProfileInfoTests {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIyODI2MQ=="}, "originalCommit": {"oid": "a8bb35f2e8a565784a44dbe7979a797d1f34ffe5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODc3NTU5OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODo1MjoxMFrOHN2lnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODo1MjoxMFrOHN2lnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzkwMw==", "bodyText": "My bad, but I remembered wrong. JS is calling this class UserProfile so we should rename ours to the same. Sorry.", "url": "https://github.com/realm/realm-java/pull/7060#discussion_r484287903", "createdAt": "2020-09-07T08:52:10Z", "author": {"login": "cmelchior"}, "path": "CHANGELOG.md", "diffHunk": "@@ -5,12 +5,30 @@ We no longer support Realm Cloud (legacy), but instead the new MongoDB Realm Clo\n The old Realm Cloud legacy APIs have undergone significant refactoring. The new APIs are all located in the `io.realm.mongodb` package with `io.realm.mongodb.App` as the entry point.\n \n ### Breaking Changes\n-*  None.\n+* [RealmApp] Moved `User.remove()` to `App.removeUser()`.\n+* [RealmApp] Renamed `ApiKeyAuth.createApiKey()` to `ApiKeyAuth.create()` and `ApiKeyAuth.createApiKeyAsync()` to `ApiKeyAuth.createAsync()`.\n+* [RealmApp] Renamed `ApiKeyAuth.fetchApiKey()` to `ApiKeyAuth.fetch()` and `ApiKeyAuth.fetchApiKeyAsync()` to `ApiKeyAuth.fetchAsync()`.\n+* [RealmApp] Renamed `ApiKeyAuth.fetchAllApiKeys()` to `ApiKeyAuth.fetchAll()` and `ApiKeyAuth.fetchAllApiKeysAsync()` to `ApiKeyAuth.fetchAllAsync()`.\n+* [RealmApp] Renamed `ApiKeyAuth.deleteApiKey()` to `ApiKeyAuth.delete()` and `ApiKeyAuth.deleteApiKeyAsync()` to `ApiKeyAuth.deleteAsync()`.\n+* [RealmApp] Renamed `ApiKeyAuth.enableApiKey()` to `ApiKeyAuth.enable()` and `ApiKeyAuth.enableApiKeyAsync()` to `ApiKeyAuth.enableAsync()`.\n+* [RealmApp] Renamed `ApiKeyAuth.disableApiKey()` to `ApiKeyAuth.disable()` and `ApiKeyAuth.disableApiKeyAsync()` to `ApiKeyAuth.disableAsync()`.\n+* [RealmApp] Renamed `User.getApiKeysAuth()` to `User.getApiKeys()`.\n+* [RealmApp] Renamed `UserApiKey` class to `ApiKey`.\n+* [RealmApp] Removed support for `Credentials.serverApiKey()`.\n+* [RealmApp] Renamed `App.getEmailPasswordAuth()` to `App.getEmailPassword()`.\n+* [RealmApp] User profile methods `getName()`, `getEmail()`, `getPictureUrl()`, `getFirstName()`, `getLastName()`, `getGender()`, `getBirthday()`, `getMinAge()` and `getMaxAge()` are now available under a new class ProfileInfo. It can be accessed using `User.getProfile()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bb35f2e8a565784a44dbe7979a797d1f34ffe5"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 512, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}