{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDc0MzQ0", "number": 7019, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoxMjoxNVrOEV5YeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1MDoxMlrOEYCa4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzk1NzA1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoxMjoxNVrOG86fmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODo0NzoxMVrOG9R0Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUyNjEwNw==", "bodyText": "Shouldn't this be  synchronized on the SyncSession instance? Is it not reachable from user code through SyncManager.refreshConnection?", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r466526107", "createdAt": "2020-08-06T16:12:15Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "diffHunk": "@@ -888,26 +896,43 @@ protected void onSuccess(AuthenticateResponse response) {\n                             scheduleRefreshAccessToken(authServer, response.getAccessToken().expiresMs());\n                         }\n                     }\n+                    refreshTokenNetworkRequest = null;\n                 }\n             }\n \n             @Override\n             protected void onError(AuthenticateResponse response) {\n                 if (!isClosed && !Thread.currentThread().isInterrupted()) {\n                     onGoingAccessTokenQuery.set(false);\n-                    RealmLog.error(\"Unrecoverable error, while refreshing the access Token (\" + response.getError().toString() + \") reschedule will not happen\");\n+                    RealmLog.debug(\"Session[%s]: Unrecoverable error, while refreshing the access Token. Reschedule will not happen. %s\", configuration.getPath(), response.getError());\n                 }\n+                refreshTokenNetworkRequest = null;\n+            }\n+\n+            @Override\n+            protected String getName() {\n+                return taskName;\n             }\n-        });\n-        refreshTokenNetworkRequest = new RealmAsyncTaskImpl(task, SyncManager.NETWORK_POOL_EXECUTOR);\n+        }, SyncManager.NETWORK_POOL_EXECUTOR);\n+    }\n+\n+    void refreshConnection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4cf7c2203eb39c22350719e2b337d478bde2774"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkwODE3MA==", "bodyText": "Yup. Good catch", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r466908170", "createdAt": "2020-08-07T08:47:11Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "diffHunk": "@@ -888,26 +896,43 @@ protected void onSuccess(AuthenticateResponse response) {\n                             scheduleRefreshAccessToken(authServer, response.getAccessToken().expiresMs());\n                         }\n                     }\n+                    refreshTokenNetworkRequest = null;\n                 }\n             }\n \n             @Override\n             protected void onError(AuthenticateResponse response) {\n                 if (!isClosed && !Thread.currentThread().isInterrupted()) {\n                     onGoingAccessTokenQuery.set(false);\n-                    RealmLog.error(\"Unrecoverable error, while refreshing the access Token (\" + response.getError().toString() + \") reschedule will not happen\");\n+                    RealmLog.debug(\"Session[%s]: Unrecoverable error, while refreshing the access Token. Reschedule will not happen. %s\", configuration.getPath(), response.getError());\n                 }\n+                refreshTokenNetworkRequest = null;\n+            }\n+\n+            @Override\n+            protected String getName() {\n+                return taskName;\n             }\n-        });\n-        refreshTokenNetworkRequest = new RealmAsyncTaskImpl(task, SyncManager.NETWORK_POOL_EXECUTOR);\n+        }, SyncManager.NETWORK_POOL_EXECUTOR);\n+    }\n+\n+    void refreshConnection() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUyNjEwNw=="}, "originalCommit": {"oid": "c4cf7c2203eb39c22350719e2b337d478bde2774"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjUyOTAxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToxNTo1MlrOG9Ss5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoyNDoyOFrOHAN-KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyMjcyNQ==", "bodyText": "Not sure that I have the full overview of all execution paths, but seems like refreshTokenNetworkRequest could have been cleared in the meantime, so should be checked for null?", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r466922725", "createdAt": "2020-08-07T09:15:52Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "diffHunk": "@@ -873,7 +881,7 @@ protected AuthenticateResponse execute() {\n             protected void onSuccess(AuthenticateResponse response) {\n                 synchronized (SyncSession.this) {\n                     if (!isClosed && !Thread.currentThread().isInterrupted() && !refreshTokenNetworkRequest.isCancelled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192624bac054dc7d94b953f68de88e36d2d3d323"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5MDk1Mw==", "bodyText": "Looking into it. This should be covered by isClosed which is set to true before setting the refreshTokenNetworkRequest to null. So it should be safe.", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r469990953", "createdAt": "2020-08-13T14:24:28Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/SyncSession.java", "diffHunk": "@@ -873,7 +881,7 @@ protected AuthenticateResponse execute() {\n             protected void onSuccess(AuthenticateResponse response) {\n                 synchronized (SyncSession.this) {\n                     if (!isClosed && !Thread.currentThread().isInterrupted() && !refreshTokenNetworkRequest.isCancelled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyMjcyNQ=="}, "originalCommit": {"oid": "192624bac054dc7d94b953f68de88e36d2d3d323"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjQwOTMwOnYy", "diffSide": "RIGHT", "path": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo1MDoxMlrOHAKCCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozMDowOFrOHALk7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNjQwOA==", "bodyText": "Has google() stopped working? Maybe just backporting something. Seems to ring a bell about asking this before.", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r469926408", "createdAt": "2020-08-13T12:50:12Z", "author": {"login": "rorbech"}, "path": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "diffHunk": "@@ -121,7 +121,9 @@ class PluginTest {\n     void pluginAddsRightRepositories_noRepositorySet() {\n         project.buildscript {\n             repositories {\n-                google()\n+                maven {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9719698d0d9cd3917d5fb858827072031866f89"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk0MjI2MA==", "bodyText": "Yes, this is just a backport... All I remember from this was it was a big nightmare \ud83d\ude48 \ud83d\ude06", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r469942260", "createdAt": "2020-08-13T13:15:36Z", "author": {"login": "cmelchior"}, "path": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "diffHunk": "@@ -121,7 +121,9 @@ class PluginTest {\n     void pluginAddsRightRepositories_noRepositorySet() {\n         project.buildscript {\n             repositories {\n-                google()\n+                maven {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNjQwOA=="}, "originalCommit": {"oid": "f9719698d0d9cd3917d5fb858827072031866f89"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTcyNA==", "bodyText": "Yep, I stopped re-commenting when I stumbled upon the differently ordered repository lists.", "url": "https://github.com/realm/realm-java/pull/7019#discussion_r469951724", "createdAt": "2020-08-13T13:30:08Z", "author": {"login": "rorbech"}, "path": "gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy", "diffHunk": "@@ -121,7 +121,9 @@ class PluginTest {\n     void pluginAddsRightRepositories_noRepositorySet() {\n         project.buildscript {\n             repositories {\n-                google()\n+                maven {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNjQwOA=="}, "originalCommit": {"oid": "f9719698d0d9cd3917d5fb858827072031866f89"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 463, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}