{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjgxMjMw", "number": 6894, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowODoxM1rOECSOww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDowMjowN1rOECTUFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODMxMjk5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowODoxM1rOGepmMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowODoxM1rOGepmMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MTk4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n          \n          \n            \n             * An <i>App</i> is the main client-side entry point for interacting with a <i>MongoDB Realm App</i>.", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434791986", "createdAt": "2020-06-03T19:08:13Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODMxOTUzOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxMDoxOVrOGepqgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxMDoxOVrOGepqgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MzA4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *   <li>Register uses and perform various user related operations through authentication providers\n          \n          \n            \n             *   <li>Register uses and perform various user-related operations through authentication providers", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434793089", "createdAt": "2020-06-03T19:10:19Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODMyNDA5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxMTo0M1rOGeptRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxMTo0M1rOGeptRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Mzc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <i>App</i> as below:\n          \n          \n            \n             * <i>App</i> as shown below:", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434793797", "createdAt": "2020-06-03T19:11:43Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODM0MjU4OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxNzoxNFrOGep45g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxNzoxNFrOGep45g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Njc3NA==", "bodyText": "A couple of grammar mistakes.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n          \n          \n            \n             * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n          \n          \n            \n             * asynchronous counter parts. The example project in please see\n          \n          \n            \n             * call remote Realm Functions and access remote data through Mongo Collections. The examples below\n          \n          \n            \n             * show the synchronized APIs which cannot be used from the main thread. For the equivalent\n          \n          \n            \n             * asynchronous counterparts. The example project in please see\n          \n      \n    \n    \n  \n\nAlso, these two sentences do not make grammatical sense:\nFor the equivalent asynchronous counterparts. The example project in please see", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434796774", "createdAt": "2020-06-03T19:17:14Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODM0Mzg2OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxNzo0MFrOGep5vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxNzo0MFrOGep5vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Njk4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * To register a new user and/or login with an existing user as below:\n          \n          \n            \n             * To register a new user and/or login with an existing user do as shown below:", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434796989", "createdAt": "2020-06-03T19:17:40Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODM0NTM3OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxODoxMVrOGep6rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxODoxMVrOGep6rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NzIyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n          \n          \n            \n             * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as indicated below:", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797228", "createdAt": "2020-06-03T19:18:11Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODM0NjYyOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxODozMlrOGep7cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxODozMlrOGep7cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NzQyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * You can call remove Realm functions as below:\n          \n          \n            \n             * You can call remove Realm functions as shown below:", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797425", "createdAt": "2020-06-03T19:18:32Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n+ * <pre>\n+ *     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"<partition value>\")\n+ *              .build();\n+ *\n+ *     Realm instance = Realm.getInstance(syncConfiguration);\n+ *     SyncSession session = APP.getSync().getSession(syncConfiguration);\n+ *\n+ *     instance.executeTransaction(realm -> {\n+ *         realm.insert(...);\n+ *     });\n+ *     session.uploadAllLocalChanges();\n+ *     instance.close();\n+ * </pre>\n+ * <p>\n+ * You can call remove Realm functions as below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODM0OTUyOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxOTozNVrOGep9dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOToxOTozNVrOGep9dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5Nzk0Mg==", "bodyText": "Trying not to abuse the shown/indicate below:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * And access collections from the remote Realm App as below:\n          \n          \n            \n             * And access collections from the remote Realm App as shown here:", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434797942", "createdAt": "2020-06-03T19:19:35Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing\n+ *     APP.login(Credentials.emailPassword(username, password))\n+ * </pre>\n+ * <p>\n+ * With an authorized user you can synchronize data between the local device and the remote Realm\n+ * App by opening a Realm with a {@link io.realm.mongodb.sync.SyncConfiguration} as below:\n+ * <pre>\n+ *     SyncConfiguration syncConfiguration = new SyncConfiguration.Builder(user, \"<partition value>\")\n+ *              .build();\n+ *\n+ *     Realm instance = Realm.getInstance(syncConfiguration);\n+ *     SyncSession session = APP.getSync().getSession(syncConfiguration);\n+ *\n+ *     instance.executeTransaction(realm -> {\n+ *         realm.insert(...);\n+ *     });\n+ *     session.uploadAllLocalChanges();\n+ *     instance.close();\n+ * </pre>\n+ * <p>\n+ * You can call remove Realm functions as below:\n+ * <pre>\n+ *     Functions functions = user.getFunctions();\n+ *     Integer sum = functions.callFunction(\"sum\", Arrays.asList(1, 2, 3, 4), Integer.class);\n+ * </pre>\n+ * <p>\n+ * And access collections from the remote Realm App as below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODQ2MTQ5OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTo1MjoyMFrOGerFRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDozNjoxM1rOGe_2-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNjMyNw==", "bodyText": "Maybe move this to file constant or companion object definition? At least the way it is used below will not work with how it is defined here?", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434816327", "createdAt": "2020-06-03T19:52:20Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE1NjczMA==", "bodyText": "\ud83d\udc4d Moved", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r435156730", "createdAt": "2020-06-04T10:36:13Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNjMyNw=="}, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODQ4NzUzOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDowMTowNVrOGerWSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDowMTowNVrOGerWSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyMDY4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *     // Login with existing\n          \n          \n            \n             *     // Login with existing user", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434820683", "createdAt": "2020-06-03T20:01:05Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -51,8 +51,93 @@\n import io.realm.mongodb.functions.Functions;\n \n /**\n- * FIXME\n+ * An <i>App</i> is the main client side entry point for interacting with a <i>MongoDB Realm App</i>.\n+ *\n+ * The <i>App</i> can be used to:\n+ * <ul>\n+ *   <li>Register uses and perform various user related operations through authentication providers\n+ *   ({@link io.realm.mongodb.auth.ApiKeyAuth}, {@link EmailPasswordAuthImpl})</li>\n+ *   <li>Synchronize data between the local device and a remote Realm App with Synchronized Realms</li>\n+ *   <li>Invoke Realm App functions with {@link Functions}</li>\n+ *   <li>Access remote data from MongoDB databases with a {@link io.realm.mongodb.mongo.MongoClient}</li>\n+ * </ul>\n+ * <p>\n+ * To create an app that is linked with a remote <i>Realm App</i> initialize Realm and configure the\n+ * <i>App</i> as below:\n+ * <p>\n+ * <pre>\n+ *    class MyApplication extends Application {\n+ *\n+ *         @Override\n+ *         public void onCreate() {\n+ *             super.onCreate();\n+ *\n+ *             Realm.init(this);\n+ *\n+ *             AppConfiguration appConfiguration = new AppConfiguration.Builder(BuildConfig.MONGODB_REALM_APP_ID)\n+ *                     .appName(BuildConfig.VERSION_NAME)\n+ *                     .appVersion(Integer.toString(BuildConfig.VERSION_CODE))\n+ *                     .build();\n+ *\n+ *             App APP = new App(appConfiguration);\n+ *         }\n+ *\n+ *     }\n+ * </pre>\n+ * <p>\n+ * After configuring the <i>App</i> you can start managing users, configure Synchronized Realms,\n+ * call remote Realm Functions and access remote data through Mongo Collections. The below examples\n+ * shows the synchronized APIs which cannot be used from the main thread. For the equivalent\n+ * asynchronous counter parts. The example project in please see\n+ * https://github.com/realm/realm-java/tree/v10/examples/mongoDbRealmExample.\n+ *\n+ * To register a new user and/or login with an existing user as below:\n+ * <pre>\n+ *     // Register new user\n+ *     User user = APP.getEmailPasswordAuth().registerUser(username, password);\n+ *\n+ *     // Login with existing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODQ5MDQ0OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDowMjowN1rOGerYNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDowMjowN1rOGerYNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyMTE3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *", "url": "https://github.com/realm/realm-java/pull/6894#discussion_r434821174", "createdAt": "2020-06-03T20:02:07Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/App.java", "diffHunk": "@@ -242,7 +331,10 @@ public User currentUser() {\n     }\n \n     /**\n-     * Switch current user. The current user is the user returned by {@link #currentUser()}.\n+     * Switch current user.\n+     * <p>\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7deffd60bd381e0075056d7313e9adac95da28f4"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 738, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}