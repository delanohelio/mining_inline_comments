{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MDg3NzY5", "number": 6853, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNDoxOVrOD8miYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNjoxMlrOD8mk5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODcyNTQ2OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNDoxOVrOGVpSPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNDoxOVrOGVpSPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0OTY5NQ==", "bodyText": "That's no longer true :-)", "url": "https://github.com/realm/realm-java/pull/6853#discussion_r425349695", "createdAt": "2020-05-14T18:34:19Z", "author": {"login": "bmunkholm"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,8 +1,52 @@\n-## 6.2.0(YYYY-MM-DD)\n+## 7.0.0(YYYY-MM-DD)\n+\n+NOTE: This version bumps the Realm file format to version 10. It is not possible to downgrade version 9 or earlier. Files created with older versions of Realm will be automatically upgraded.\n+\n+### Breaking Changes\n+* [ObjectServer] Removed deprecated method `SyncConfiguration.Builder.partialRealm()`. Use `SyncConfiguration.Builder.fullSynchronization()` instead.\n+* [ObjectServer] Removed deprecated methods `SyncConfiguration.automatic()` and `SyncConfiguration.automatic(User, Uri)`. Use `SyncUser.getDefaultConfiguration()` and `SyncUser.createConfiguration(Url)`.\n+* [ObjectServer] Removed deprecated method `ErrorCode.fromInt(int)`.\n+* [ObjectServer] Removed deprecated method `SyncCredentials.nickname(name)` and `SyncCredentials.nickname(name, isAdmin)`. Use `SyncCredentials.usernamePassword(username, password)` instead.\n+* [ObjectServer] Deprecated state `SyncSession.State.ERROR` has been removed. Use `SyncConfiguration.Builder.errorHandler(ErrorHandler)` instead.\n+* [ObjectServer] `IncompatibleSyncedFileException` is removed as it is no longer used.\n+* [ObjectServer] New error codes thrown by the underlying sync layers now have proper enum mappings in `ErrorCode.java`. A few other errors have been renamed in order to have consistent naming. (Issue [#6387](https://github.com/realm/realm-java/issues/6387)) \n+* RxJava Flowables and Observables are now subscribed to and unsubscribed to asynchronously on the thread holding the live Realm, instead of previously where this was done synchronously.\n+* All RxJava Flowables and Observables now return frozen objects instead of live objects. This can be configured using `RealmConfiguration.Builder.rxFactory(new RealmObservableFactory(true|false))`. By using frozen objects, it is possible to send RealmObjects across threads, which means that all RxJava operators should now be supported without the need to copy Realm data into unmanaged objects.\n+* MIPS is not supported anymore.\n+* Realm now requires `minSdkVersion` 16. Up from 9.\n+* [ObjectServer] `IncompatibleSyncedFileException` is removed and no longer thrown.\n \n ### Enhancements\n+* Added `Realm.freeze()`, `RealmObject.freeze()`, `RealmResults.freeze()` and `RealmList.freeze()`. These methods will return a frozen version of the current Realm data. This data can be read from any thread without throwing an `IllegalStateException`, but will never change. All frozen Realms and data can be closed by calling `Realm.close()` on the frozen Realm, but fully closing all live Realms will also close the frozen ones. Frozen data can be queried as normal, but trying to mutate it in any way will throw an `IllegalStateException`. This includes all methods that attempt to refresh or add change listeners. (Issue [#6590](https://github.com/realm/realm-java/pull/6590))\n+* Added `Realm.isFrozen()`, `RealmObject.isFrozen()`, `RealmObject.isFrozen(RealmModel)`, `RealmResults.isFrozen()` and `RealmList.isFrozen()`, which returns whether or not the data is frozen.\n+* Added `RealmConfiguration.Builder.maxNumberOfActiveVersions(long number)`. Setting this will cause Realm to throw an `IllegalStateException` if too many versions of the Realm data are live at the same time. Having too many versions can dramatically increase the filesize of the Realm.\n+* `RealmResults.asJSON()` is no longer `@Beta`.\n * The default `toString()` for proxy objects now print the length of binary fields. (Issue [#6767](https://github.com/realm/realm-java/pull/6767))\n \n+### Fixes\n+* If a DynamicRealm and Realm was opened for the same file they would share transaction state by accident. The implication was that writes to a `Realm` would immediately show up in the `DynamicRealm`. This has been fixed, so now it is required to call `refresh()` on the other Realm or wait for normal change listeners to detect the change.\n+\n+### Compatibility\n+* Realm Object Server: 3.23.1 or later.\n+* File format: Generates Realms with format v10 (Reads and upgrades all previous formats from Realm Java 2.0 and later).\n+* APIs are backwards compatible with all previous release of realm-java in the 6.x.y series.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f55c2eac027a42bd310f2750eb944750108199f1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODcyODA1OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNTowNlrOGVpT-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNTowNlrOGVpT-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MDEzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: This version bumps the Realm file format to version 10. It is not possible to downgrade version 9 or earlier. Files created with older versions of Realm will be automatically upgraded.\n          \n          \n            \n            NOTE: This version bumps the Realm file format to version 10. Files created with previous versions of Realm will be automatically upgraded. It is not possible to downgrade to version 9 or earlier.", "url": "https://github.com/realm/realm-java/pull/6853#discussion_r425350136", "createdAt": "2020-05-14T18:35:06Z", "author": {"login": "bmunkholm"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,8 +1,52 @@\n-## 6.2.0(YYYY-MM-DD)\n+## 7.0.0(YYYY-MM-DD)\n+\n+NOTE: This version bumps the Realm file format to version 10. It is not possible to downgrade version 9 or earlier. Files created with older versions of Realm will be automatically upgraded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f55c2eac027a42bd310f2750eb944750108199f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODczMTkwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNjoxMlrOGVpWXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozNjoxMlrOGVpWXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MDc1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * APIs are backwards compatible with all previous release of realm-java in the 6.x.y series.\n          \n          \n            \n            * APIs are backwards compatible with all previous release of realm-java in the 7.x.y series.", "url": "https://github.com/realm/realm-java/pull/6853#discussion_r425350751", "createdAt": "2020-05-14T18:36:12Z", "author": {"login": "bmunkholm"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,8 +1,52 @@\n-## 6.2.0(YYYY-MM-DD)\n+## 7.0.0(YYYY-MM-DD)\n+\n+NOTE: This version bumps the Realm file format to version 10. It is not possible to downgrade version 9 or earlier. Files created with older versions of Realm will be automatically upgraded.\n+\n+### Breaking Changes\n+* [ObjectServer] Removed deprecated method `SyncConfiguration.Builder.partialRealm()`. Use `SyncConfiguration.Builder.fullSynchronization()` instead.\n+* [ObjectServer] Removed deprecated methods `SyncConfiguration.automatic()` and `SyncConfiguration.automatic(User, Uri)`. Use `SyncUser.getDefaultConfiguration()` and `SyncUser.createConfiguration(Url)`.\n+* [ObjectServer] Removed deprecated method `ErrorCode.fromInt(int)`.\n+* [ObjectServer] Removed deprecated method `SyncCredentials.nickname(name)` and `SyncCredentials.nickname(name, isAdmin)`. Use `SyncCredentials.usernamePassword(username, password)` instead.\n+* [ObjectServer] Deprecated state `SyncSession.State.ERROR` has been removed. Use `SyncConfiguration.Builder.errorHandler(ErrorHandler)` instead.\n+* [ObjectServer] `IncompatibleSyncedFileException` is removed as it is no longer used.\n+* [ObjectServer] New error codes thrown by the underlying sync layers now have proper enum mappings in `ErrorCode.java`. A few other errors have been renamed in order to have consistent naming. (Issue [#6387](https://github.com/realm/realm-java/issues/6387)) \n+* RxJava Flowables and Observables are now subscribed to and unsubscribed to asynchronously on the thread holding the live Realm, instead of previously where this was done synchronously.\n+* All RxJava Flowables and Observables now return frozen objects instead of live objects. This can be configured using `RealmConfiguration.Builder.rxFactory(new RealmObservableFactory(true|false))`. By using frozen objects, it is possible to send RealmObjects across threads, which means that all RxJava operators should now be supported without the need to copy Realm data into unmanaged objects.\n+* MIPS is not supported anymore.\n+* Realm now requires `minSdkVersion` 16. Up from 9.\n+* [ObjectServer] `IncompatibleSyncedFileException` is removed and no longer thrown.\n \n ### Enhancements\n+* Added `Realm.freeze()`, `RealmObject.freeze()`, `RealmResults.freeze()` and `RealmList.freeze()`. These methods will return a frozen version of the current Realm data. This data can be read from any thread without throwing an `IllegalStateException`, but will never change. All frozen Realms and data can be closed by calling `Realm.close()` on the frozen Realm, but fully closing all live Realms will also close the frozen ones. Frozen data can be queried as normal, but trying to mutate it in any way will throw an `IllegalStateException`. This includes all methods that attempt to refresh or add change listeners. (Issue [#6590](https://github.com/realm/realm-java/pull/6590))\n+* Added `Realm.isFrozen()`, `RealmObject.isFrozen()`, `RealmObject.isFrozen(RealmModel)`, `RealmResults.isFrozen()` and `RealmList.isFrozen()`, which returns whether or not the data is frozen.\n+* Added `RealmConfiguration.Builder.maxNumberOfActiveVersions(long number)`. Setting this will cause Realm to throw an `IllegalStateException` if too many versions of the Realm data are live at the same time. Having too many versions can dramatically increase the filesize of the Realm.\n+* `RealmResults.asJSON()` is no longer `@Beta`.\n * The default `toString()` for proxy objects now print the length of binary fields. (Issue [#6767](https://github.com/realm/realm-java/pull/6767))\n \n+### Fixes\n+* If a DynamicRealm and Realm was opened for the same file they would share transaction state by accident. The implication was that writes to a `Realm` would immediately show up in the `DynamicRealm`. This has been fixed, so now it is required to call `refresh()` on the other Realm or wait for normal change listeners to detect the change.\n+\n+### Compatibility\n+* Realm Object Server: 3.23.1 or later.\n+* File format: Generates Realms with format v10 (Reads and upgrades all previous formats from Realm Java 2.0 and later).\n+* APIs are backwards compatible with all previous release of realm-java in the 6.x.y series.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f55c2eac027a42bd310f2750eb944750108199f1"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 701, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}