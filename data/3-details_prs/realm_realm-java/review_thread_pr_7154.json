{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNDM4NTE2", "number": 7154, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxOTo0N1rOEtF6TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDowMFrOEtI7hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzE4MjIwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxOTo0N1rOHgsItw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxOTo0N1rOHgsItw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzOTYwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n          \n          \n            \n            * [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is through the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504039607", "createdAt": "2020-10-13T15:19:47Z", "author": {"login": "rorbech"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzE4NTIxOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMDoxOVrOHgsKgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMDoxOVrOHgsKgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MDA2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n          \n          \n            \n            NOTE: This version upgrades the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504040067", "createdAt": "2020-10-13T15:20:19Z", "author": {"login": "rorbech"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzIxNzEwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyNjozNVrOHgseLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyNjozNVrOHgseLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0NTEwMA==", "bodyText": "Realm JavaScript? \ud83e\udd28", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504045100", "createdAt": "2020-10-13T15:26:35Z", "author": {"login": "nirinchev"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzIyNDg4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyNzo1MVrOHgsi7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyNzo1MVrOHgsi7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0NjMxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n          \n          \n            \n            * [RealmApp] Most APIs for interacting with Realm Cloud have changed significantly. All new APIs can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n          \n      \n    \n    \n  \n\nhttps://news.ycombinator.com/item?id=3352411", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504046316", "createdAt": "2020-10-13T15:27:51Z", "author": {"login": "nirinchev"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI0NTEwOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMDozOFrOHgsvOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMDozOFrOHgsvOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0OTQ2NA==", "bodyText": "Missing requirement for a PK called _id on all top-level objects when using Sync. While the entirety of Sync is a breaking change, that one's worth calling out since it may not be obvious why a schema previously worked but it doesn't anymore.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504049464", "createdAt": "2020-10-13T15:30:38Z", "author": {"login": "nirinchev"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n+* [RealmApp] Client Resets are now handled through a custom `SyncConfiguration.Builder.clientResetHandler()` instead of through the default session error handler `SyncConfiguration.Builder.errorHandler()`\n+* [RealmApp] Realm files have changed location on disk. They are now located in `getFiles()/mongodb-realm`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI2MDk5OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMzoyOVrOHgs4eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMzoyOVrOHgs4eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MTgzNA==", "bodyText": "The docs link is wrong - it should probably point to the new docs.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504051834", "createdAt": "2020-10-13T15:33:29Z", "author": {"login": "nirinchev"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n+* [RealmApp] Client Resets are now handled through a custom `SyncConfiguration.Builder.clientResetHandler()` instead of through the default session error handler `SyncConfiguration.Builder.errorHandler()`\n+* [RealmApp] Realm files have changed location on disk. They are now located in `getFiles()/mongodb-realm`.\n+* From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.\n+\n+### Enhancements\n+* Users can now opt out from allowing queries to be launched from the UI thread by using `RealmConfiguration.Builder.allowQueriesOnUiThread(false)`. A `RealmException` will be thrown when calling `RealmQuery.findAll()`, `RealmQuery.findFirst()`, `RealmQuery.minimumDate()`, `RealmQuery.maximumDate()`, `RealmQuery.count()`, `RealmQuery.sum()`, `RealmQuery.max()`, `RealmQuery.min()`, `RealmQuery.average()` and `RealmQuery.averageDecimal128()` from the UI thread after having used `allowQueriesOnUiThread(false)`. Queries will be allowed from the thread from which the Realm instance was obtained as it always has been by default, although we recommend using `RealmQuery.findAllAsync()` or `RealmQuery.findFirstAsync()`, or, alternatively, using a non-UI thread to launch them.\n+* `BaseRealm.refresh()` will throw a `RealmException` if it is being called from the UI thread if `allowQueriesOnUiThread` is set to `false`, though it will be allowed by default.\n+* Added `DynamicRealm.executeTransactionAsync()`.\n+* Added Kotlin extension suspend function `Realm.executeTransactionAwait()` which runs transactions inside coroutines.\n+* Added Kotlin extension function `RealmResults.toFlow()` which returns a Kotlin flow, similar to our RxJava convenience method `asFlowable()`.\n+* Added Kotlin extension function `RealmList.toFlow()` which returns a Kotlin flow, similar to our RxJava convenience method `asFlowable()`.\n+* Added Kotlin extension function `RealmModel.toFlow()` which returns a Kotlin flow, similar to our RxJava convenience method `asFlowable()`.\n+* RealmLists can now be marked final. (Issue [#6892](https://github.com/realm/realm-java/issues/6892))\n+* Added support for `distinct` queries on non-index and linked fields. (Issue [#1906](https://github.com/realm/realm-java/issues/1906))\n+* Added support for `org.bson.types.Decimal128` and `org.bson.types.ObjectId` as supported fields in model classes.\n+* Added support for `org.bson.types.ObjectId` as a primary key.\n+* Added support for \"Embedded Objects\". They are enabled using `@RealmClass(embedded = true)`. An embedded object must have exactly one parent object linking to it and it will be deleted when the the parent is. Embedded objects can also be the parent of other embedded classes. Read more [here](https://realm.io/docs/java/latest/#embedded-objects). (Issue [#6713](https://github.com/realm/realm-java/issues/6713))  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzMwMjU0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTo0MTo1OVrOHgtRzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTo0MTo1OVrOHgtRzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1ODMxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.\n          \n          \n            \n            * From now on it is by default not allowed to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504058317", "createdAt": "2020-10-13T15:41:59Z", "author": {"login": "rorbech"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,45 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm JavaScript v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most API's for interacting with Realm Cloud has changed significantly. All new API's can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n+* [RealmApp] Client Resets are now handled through a custom `SyncConfiguration.Builder.clientResetHandler()` instead of through the default session error handler `SyncConfiguration.Builder.errorHandler()`\n+* [RealmApp] Realm files have changed location on disk. They are now located in `getFiles()/mongodb-realm`.\n+* From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec04bbedd62b2c7655b32388a936454b5b3267c6"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY3Njg0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDowMFrOHgw9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDowMFrOHgw9pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODY5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.\n          \n          \n            \n            * From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, however, we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.", "url": "https://github.com/realm/realm-java/pull/7154#discussion_r504118693", "createdAt": "2020-10-13T17:04:00Z", "author": {"login": "nhachicha"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,46 @@\n+## 10.0.0 (YYYY-MM-DD)\n+\n+NOTE: This is a unified release note covering all v10.0.0-BETA.X v10.0.0-RC.X releases.\n+\n+NOTE: Support for syncing with realm.cloud.io and/or Realm Object Server has been replaced with support for syncing with MongoDB Realm Cloud.\n+\n+NOTE: This version uses the Realm file format to version 20. It is not possible to downgrade to earlier versions than v10.0.0-BETA.7. Non-sync Realms will be upgraded automatically. Synced Realms can only be automatically upgraded if created with Realm Java v10.0.0-BETA.1 and above.\n+\n+### Breaking Changes\n+* [RealmApp] Most APIs for interacting with Realm Cloud have changed significantly. All new APIs can be found in the `io.realm.mongodb` package. The entry point is though the `App` class from which you can create and login users and otherwise interact with MongoDB Realm. See [the docs](https://docs.mongodb.com/realm/android/) for further details. Synced Realms still use a `SyncConfiguration` that are largely created the same way.\n+* [RealmApp] Client Resets are now handled through a custom `SyncConfiguration.Builder.clientResetHandler()` instead of through the default session error handler `SyncConfiguration.Builder.errorHandler()`\n+* [RealmApp] Realm files have changed location on disk. They are now located in `getFiles()/mongodb-realm`.\n+* [RealmApp] All synced model classes not marked as embedded are required to have a primary key named `_id`. It is possible to use `@RealmField(name = \"_id\")` to map from any Java or Kotlin property.\n+* From now on it is not allowed by default to run transactions with either `Realm.executeTransaction()` or `DynamicRealm.executeTransaction()` from the UI thread. Doing so will yield a `RealmException`. Users can override this behavior by using `RealmConfiguration.Builder.allowWritesOnUiThread(true)` when building a `RealmConfiguration` to obtain a Realm or DynamicRealm instance, though we do not recommend doing so. Instead, we recommend using `executeTransactionAsync()` or, alternatively, using non-UI threads when calling `executeTransaction()` for both `Realm`s and `DynamicRealm`s.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd10fb52c97df4c6d299c4fea3b41e53b9baa447"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 572, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}