{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMzU0MTU5", "number": 7053, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo0OTo1NVrOEbd26A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo1ODo0OFrOEf9Qfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjM2MjAwOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo0OTo1NVrOHFaY6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMToxNjoyOVrOHFf6Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA==", "bodyText": "You don't need to call refresh. It should be up to date when opened.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475437290", "createdAt": "2020-08-24T08:49:55Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {\n+        realm.executeTransaction(realm -> {\n+            AllJavaTypes object = realm.createObject(AllJavaTypes.class, 1000L);\n+            object.setFieldBoolean(null);\n+\n+            assertNull(object.isFieldBoolean());\n+        });\n+        realm.close();\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n+        dynamicRealm.refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMDA4MQ==", "bodyText": "It does not work without it. Maybe symptom of another issue. The below sequence runs without asserting\nDynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\nassertEquals(1, dynamicRealm.where(\"AllJavaTypes\").count());\ndynamicRealm.refresh();\nassertEquals(2, dynamicRealm.where(\"AllJavaTypes\").count());", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475520081", "createdAt": "2020-08-24T10:59:59Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {\n+        realm.executeTransaction(realm -> {\n+            AllJavaTypes object = realm.createObject(AllJavaTypes.class, 1000L);\n+            object.setFieldBoolean(null);\n+\n+            assertNull(object.isFieldBoolean());\n+        });\n+        realm.close();\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n+        dynamicRealm.refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMjAwNQ==", "bodyText": "Hmm, I don't like that. The underlying read transactions should not be shared between Realm and DynamicRealm. It indicates a bigger problem we need to look into. Probably some caching going wrong somewhere \ud83d\ude15", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475522005", "createdAt": "2020-08-24T11:04:08Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {\n+        realm.executeTransaction(realm -> {\n+            AllJavaTypes object = realm.createObject(AllJavaTypes.class, 1000L);\n+            object.setFieldBoolean(null);\n+\n+            assertNull(object.isFieldBoolean());\n+        });\n+        realm.close();\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n+        dynamicRealm.refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNzc0Nw==", "bodyText": "Yes. A dynamic realm with the same configuration was already setup. Sorry.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475527747", "createdAt": "2020-08-24T11:16:29Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {\n+        realm.executeTransaction(realm -> {\n+            AllJavaTypes object = realm.createObject(AllJavaTypes.class, 1000L);\n+            object.setFieldBoolean(null);\n+\n+            assertNull(object.isFieldBoolean());\n+        });\n+        realm.close();\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n+        dynamicRealm.refresh();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjM2ODg1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo1MTo0MFrOHFac5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo1OTo1NFrOHMjTEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODMxMQ==", "bodyText": "This seems to impact more than just null values, so we should have unit tests for all the data types.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475438311", "createdAt": "2020-08-24T08:51:40Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "diffHunk": "@@ -97,6 +97,9 @@ public DynamicRealmObject(RealmModel obj) {\n         proxyState.getRealm$realm().checkIfValid();\n \n         long columnKey = proxyState.getRow$realm().getColumnKey(fieldName);\n+        if (proxyState.getRow$realm().isNull(columnKey)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyNTQ1MQ==", "bodyText": "Implemented tests for null values for all types, but I would assume all-non null values to be sufficiently test by existing tests. Or what are you missing specifically?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r478425451", "createdAt": "2020-08-27T13:38:09Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "diffHunk": "@@ -97,6 +97,9 @@ public DynamicRealmObject(RealmModel obj) {\n         proxyState.getRealm$realm().checkIfValid();\n \n         long columnKey = proxyState.getRow$realm().getColumnKey(fieldName);\n+        if (proxyState.getRow$realm().isNull(columnKey)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODMxMQ=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMzI4MQ==", "bodyText": "No, those tests should be fine", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482923281", "createdAt": "2020-09-03T11:59:54Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "diffHunk": "@@ -97,6 +97,9 @@ public DynamicRealmObject(RealmModel obj) {\n         proxyState.getRealm$realm().checkIfValid();\n \n         long columnKey = proxyState.getRow$realm().getColumnKey(fieldName);\n+        if (proxyState.getRow$realm().isNull(columnKey)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODMxMQ=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjM3MDkxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo1MjoxMVrOHFaeAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo1MjoxMVrOHFaeAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODU5NA==", "bodyText": "The fix seems to indicate the bug impacted all primitive types. We should have tests for all of them instead of just boolean.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475438594", "createdAt": "2020-08-24T08:52:11Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTM0ODUzOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyOTozOFrOHMiT_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyOTozOFrOHMiT_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNzEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Crash when retrieving null valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))\n          \n          \n            \n            * Crash when retrieving `null` valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482907133", "createdAt": "2020-09-03T11:29:38Z", "author": {"login": "cmelchior"}, "path": "CHANGELOG.md", "diffHunk": "@@ -7,6 +7,7 @@\n * [ObjectServer] Calling `SyncManager.refreshConnections()` did not correctly refresh connections in all cases, which could delay reconnects up to 5 minutes. (Issue [#7003](https://github.com/realm/realm-java/issues/7003))\n * Upgrading the file format result did in some cases not work correctly. This could result in a number of crashes, e.g. `FORMAT_UPGRADE_REQUIRED`. (Issue [#6889](https://github.com/realm/realm-java/issues/6889), since 7.0.0)  \n * Bug in memory mapping management. This bug could result in multiple different asserts as well as segfaults. In many cases stack backtraces would include members of the EncyptedFileMapping near the top - even if encryption was not used at all. In other cases asserts or crashes would be in methods reading an array header or array element. In all cases the application would terminate immediately. (Issue [#3838](https://github.com/realm/realm-core/pull/3838), since 7.0.0)\n+* Crash when retrieving null valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTQ0MTQwOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo1NjozMFrOHMjLqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDo0NjoyNVrOHOB-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMTM4NQ==", "bodyText": "These tests do not seem related in a test named getNullableFields Lists can never be null and I hope that adding null is tested elsewhere, if not, it should probably be in its own test?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482921385", "createdAt": "2020-09-03T11:56:30Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());\n+            assertNull(primitiveNullables.getFieldInt());\n+            assertNull(primitiveNullables.getFieldFloat());\n+            assertNull(primitiveNullables.getFieldDouble());\n+            assertNull(primitiveNullables.getFieldString());\n+            assertNull(primitiveNullables.getFieldBinary());\n+            assertNull(primitiveNullables.getFieldDate());\n+\n+            realm.delete(AllJavaTypes.class);\n+            AllJavaTypes allJavaTypes = realm.createObject(AllJavaTypes.class, UUID.randomUUID().getLeastSignificantBits());\n+\n+            assertNull(allJavaTypes.getFieldObject());\n+            allJavaTypes.getFieldBooleanList().add(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3NDQxMQ==", "bodyText": "The issue was that we could not return null values for nullable fields from a dynamic realm. I thought it would be safest to also included a check of retrieving a null value from a list from a dynamic realm. I could try to find another place for the test...or update the name of the test to getNullForNullables ... ?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r484474411", "createdAt": "2020-09-07T14:46:25Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());\n+            assertNull(primitiveNullables.getFieldInt());\n+            assertNull(primitiveNullables.getFieldFloat());\n+            assertNull(primitiveNullables.getFieldDouble());\n+            assertNull(primitiveNullables.getFieldString());\n+            assertNull(primitiveNullables.getFieldBinary());\n+            assertNull(primitiveNullables.getFieldDate());\n+\n+            realm.delete(AllJavaTypes.class);\n+            AllJavaTypes allJavaTypes = realm.createObject(AllJavaTypes.class, UUID.randomUUID().getLeastSignificantBits());\n+\n+            assertNull(allJavaTypes.getFieldObject());\n+            allJavaTypes.getFieldBooleanList().add(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMTM4NQ=="}, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTQ0OTU4OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo1ODo0OFrOHMjQng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDo0Nzo1MFrOHOCAyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMjY1NA==", "bodyText": "all of these should be tested below?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482922654", "createdAt": "2020-09-03T11:58:48Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3NTA4MQ==", "bodyText": "Yes. I was just asserting that they were actually null when retrieved from the typed realm.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r484475081", "createdAt": "2020-09-07T14:47:50Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMjY1NA=="}, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}