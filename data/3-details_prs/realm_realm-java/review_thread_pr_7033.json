{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3OTE0MTA5", "number": 7033, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDo1Mzo0NlrOEYbUfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDo1Mzo0NlrOEYbUfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDQ4ODkyOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDo1Mzo0NlrOHAwY5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMDo1Mzo0NlrOHAwY5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NDg1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Bug in memory mapping management. This bug could result in multiple different asserts as well as segfaults. In many cases stack backtraces would include members of the EncyptedFileMapping near the top - even if encryption was not used at all. In other cases asserts or crashes would be in methods reading an array header or array element. In all cases the application would terminate immediately. (Issue [#3838](https://github.com/realm/realm-core/pull/3838), since 7.0.0)\n          \n          \n            \n            * Bug in memory mapping management. This bug could result in multiple different asserts as well as segfaults. In many cases stack backtraces would include members of the EncyptedFileMapping near the top - even if encryption was not used at all. In other cases asserts or crashes would be in methods reading an array header or array element. In all cases the application would terminate immediately. (Realm Core PR [#3838](https://github.com/realm/realm-core/pull/3838), since 7.0.0)", "url": "https://github.com/realm/realm-java/pull/7033#discussion_r470554853", "createdAt": "2020-08-14T10:53:46Z", "author": {"login": "rorbech"}, "path": "CHANGELOG.md", "diffHunk": "@@ -19,6 +19,8 @@ The old Realm Cloud legacy APIs have undergone significant refactoring. The new\n * [RealmApp] Sync would not refresh the access token if started with an expired one. (Since 10.0.0-BETA.1)\n * [RealmApp] Leaking objects when registering session listeners. (Issue [#6916](https://github.com/realm/realm-java/issues/6916))\n * Added support for Json-import of objects containing embedded objects. (Issue [#6896](https://github.com/realm/realm-java/issues/6896))\n+* Upgrading the file format result did in some cases not work correctly. This could result in a number of crashes, e.g. `FORMAT_UPGRADE_REQUIRED`. (Issue [#6889](https://github.com/realm/realm-java/issues/6889), since 7.0.0)  \n+* Bug in memory mapping management. This bug could result in multiple different asserts as well as segfaults. In many cases stack backtraces would include members of the EncyptedFileMapping near the top - even if encryption was not used at all. In other cases asserts or crashes would be in methods reading an array header or array element. In all cases the application would terminate immediately. (Issue [#3838](https://github.com/realm/realm-core/pull/3838), since 7.0.0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0aa16d4d5577e2758da191e41e3ca06aa1066e0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 477, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}