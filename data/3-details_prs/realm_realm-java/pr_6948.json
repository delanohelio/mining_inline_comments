{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTQyOTY0", "number": 6948, "title": "Distinct for non-indexed and linked properties", "bodyText": "Lifting restriction on distinct on non-indexed and linked properties according to support in Core.\nDistinct is now support on all field types except lists.\nCloses #1906", "createdAt": "2020-06-15T13:31:46Z", "url": "https://github.com/realm/realm-java/pull/6948", "merged": true, "mergeCommit": {"oid": "5c5371c3379830327382ae00efae31e1ff7fcf8a"}, "closed": true, "closedAt": "2020-06-18T15:32:36Z", "author": {"login": "rorbech"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrgXuTAH2gAyNDM0NTQyOTY0OmY5ZjJlMTZiMWI1ZjAwZDQ4ZWVkNzljZjAwYTQ1MWVhM2NmMmQ4ZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsf1ecgH2gAyNDM0NTQyOTY0OjFjYjFhZDg2NDhiNDQ0NTk1MmMxMjNhNWQyODZhMDNmODMxNTQwNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9f2e16b1b5f00d48eed79cf00a451ea3cf2d8d9", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/f9f2e16b1b5f00d48eed79cf00a451ea3cf2d8d9", "committedDate": "2020-06-15T13:07:42Z", "message": "Fixing assertions on related tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dfac4df44e20a6d4cc76c670dd4ca577ad30980", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/5dfac4df44e20a6d4cc76c670dd4ca577ad30980", "committedDate": "2020-06-15T13:07:42Z", "message": "Lift restriction on distinct on linked fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928e0f6b860d778d07acd4f06f8136dec2c9510b", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/928e0f6b860d778d07acd4f06f8136dec2c9510b", "committedDate": "2020-06-15T13:30:57Z", "message": "Fix manual distinct implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ca16b63fb242eac9d384360698ce724e8c3816b", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/1ca16b63fb242eac9d384360698ce724e8c3816b", "committedDate": "2020-06-17T08:45:53Z", "message": "Extend distinct query tests to all types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/6ce712ba8a7f7498cac1357d4b27def14789d415", "committedDate": "2020-06-17T08:45:53Z", "message": "Fix typo in LinkingObjects documentaiton"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDAyMzYz", "url": "https://github.com/realm/realm-java/pull/6948#pullrequestreview-432402363", "createdAt": "2020-06-17T13:30:45Z", "commit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzozMDo0NlrOGlF1tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDozMDo0MVrOGlIjqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NjE2Nw==", "bodyText": "A comment why/where this is needed might be good", "url": "https://github.com/realm/realm-java/pull/6948#discussion_r441546167", "createdAt": "2020-06-17T13:30:46Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java", "diffHunk": "@@ -59,6 +66,8 @@\n @RunWith(AndroidJUnit4.class)\n public class RealmQueryTests extends QueryTests {\n \n+    private static final Object NULL_PLACEHOLDER = new Object();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1MTgyNg==", "bodyText": "A bit hard to follow, but does make the following tests really easy \ud83d\udc4d", "url": "https://github.com/realm/realm-java/pull/6948#discussion_r441551826", "createdAt": "2020-06-17T13:38:47Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java", "diffHunk": "@@ -3120,95 +3151,143 @@ public void distinct_failIfAppliedMultipleTimes() {\n                 .distinct(AnnotationIndexTypes.FIELD_INDEX_DATE);\n     }\n \n-    @Test\n-    public void distinct_notIndexedFields() {\n+    private void distinctAllFields(Realm realm, String prefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU4OTI2NA==", "bodyText": "Not sure I understand this?", "url": "https://github.com/realm/realm-java/pull/6948#discussion_r441589264", "createdAt": "2020-06-17T14:28:46Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java", "diffHunk": "@@ -3705,5 +3867,80 @@ public void limit_invalidValuesThrows() {\n         }\n     }\n \n+    // FIXME Maybe move to QueryDescriptor or maybe even to RealmFieldType?\n+    private boolean supportDistinct(RealmFieldType type) {\n+        switch (type) {\n+            case INTEGER:\n+            case BOOLEAN:\n+            case STRING:\n+            case BINARY:\n+            case DATE:\n+            case FLOAT:\n+            case DOUBLE:\n+            case OBJECT:\n+            case DECIMAL128:\n+            case OBJECT_ID:\n+            case LINKING_OBJECTS:\n+                return true;\n+            case LIST:\n+            case INTEGER_LIST:\n+            case BOOLEAN_LIST:\n+            case STRING_LIST:\n+            case BINARY_LIST:\n+            case DATE_LIST:\n+            case FLOAT_LIST:\n+            case DOUBLE_LIST:\n+            case DECIMAL128_LIST:\n+            case OBJECT_ID_LIST:\n+                return false;\n+        }\n+        // Should never reach here as the above switch is exhaustive\n+        throw new UnsupportedOperationException(\"Unhandled realm field type \" + type);\n+    }\n+\n+    // Manual distinct method for verification. Uses field value's equals.\n+    @NotNull\n+    private Set<List<? super Object>> distinct(RealmResults<DynamicRealmObject> all, Object... fields) {\n+        Set<List<? super Object>> values = new HashSet();\n+\n+        // Parsed hierarchical field accessors\n+        List<String[]> fieldAccessors = new ArrayList<>();\n+        for (Object field : fields) {\n+            fieldAccessors.add(((String) field).split(\"\\\\.\"));\n+        }\n+\n+        for (DynamicRealmObject object : all) {\n+            List<? super Object> elements = new ArrayList<>(fields.length);\n+            for (String[] split : fieldAccessors) {\n+                int i = 0;\n+                while(i < split.length - 1) {\n+                    object = object.get(split[i]);\n+                    i++;\n+                }\n+                String fieldName = split[i];\n+                if (!object.isNull(fieldName)) {\n+                    Object e = object.get(fieldName);\n+                    // Need to convert byte arrays to list to detect duplicates when inserting to values\n+                    if (e instanceof byte[]) {\n+                        elements.add(convertBytesToList((byte[]) e));\n+                    } else {\n+                        elements.add(e);\n+                    }\n+                } else {\n+                    elements.add(NULL_PLACEHOLDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415"}, "originalPosition": 594}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU5MDY5Ng==", "bodyText": "Does this indexing distincting still makes sense or should it be combined with the above test case?", "url": "https://github.com/realm/realm-java/pull/6948#discussion_r441590696", "createdAt": "2020-06-17T14:30:41Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java", "diffHunk": "@@ -3344,46 +3423,104 @@ public void distinct_async_doesNotExist() {\n         looperThread.testComplete();\n     }\n \n+    // Smoke test of async distinct invalid types. Underlying mechanism is the same as for sync test\n+    // (distinct_allFields), so just verifying async mechanism.\n     @Test\n     @RunTestInLooperThread\n     public void distinct_async_invalidTypes() {\n         populateTestRealm(realm, TEST_DATA_SIZE);\n \n-        for (String field : new String[]{AllTypes.FIELD_REALMOBJECT, AllTypes.FIELD_REALMLIST, AllTypes.FIELD_DOUBLE, AllTypes.FIELD_FLOAT}) {\n-            try {\n-                realm.where(AllTypes.class).distinct(field).findAllAsync();\n-            } catch (IllegalArgumentException ignored) {\n+        RealmObjectSchema schema = realm.getSchema().getSchemaForClass(AllTypes.CLASS_NAME);\n+\n+        Set<String> fieldNames = schema.getFieldNames();\n+        for (String fieldName : fieldNames) {\n+            String field = fieldName;\n+            RealmFieldType type = schema.getFieldType(fieldName);\n+            if (!supportDistinct(type)) {\n+                try {\n+                    realm.where(AllTypes.class).distinct(field).findAllAsync();\n+                } catch (IllegalArgumentException ignored) {\n+                }\n             }\n         }\n         looperThread.testComplete();\n     }\n \n+    // Smoke test of async distinct index linked types. Underlying mechanism is the same as for sync test\n+    // (distinct_linkedAllFields), so just verifying async mechanism.\n     @Test\n     @RunTestInLooperThread\n     public void distinct_async_indexedLinkedFields() {\n         final long numberOfBlocks = 3;\n         final long numberOfObjects = 3;\n+        final Realm realm = looperThread.getRealm();\n         populateForDistinct(realm, numberOfBlocks, numberOfObjects, false);\n \n+        DynamicRealm dynamicRealm = DynamicRealm.createInstance(realm.sharedRealm);\n+        RealmResults<DynamicRealmObject> all = dynamicRealm.where(AnnotationIndexTypes.CLASS_NAME)\n+                .findAll();\n+\n+        AtomicInteger count = new AtomicInteger(0);\n+\n         for (String field : AnnotationIndexTypes.INDEX_FIELDS) {\n-            try {\n-                realm.where(AnnotationIndexTypes.class).distinct(AnnotationIndexTypes.FIELD_OBJECT + \".\" + field).findAllAsync();\n-                fail(\"Unsupported \" + field + \" linked field\");\n-            } catch (IllegalArgumentException ignored) {\n-            }\n+            String fieldName = AnnotationIndexTypes.FIELD_OBJECT + \".\" + field;\n+            RealmResults<AnnotationIndexTypes> distinct = realm.where(AnnotationIndexTypes.class).distinct(fieldName).findAllAsync();\n+            looperThread.keepStrongReference(distinct);\n+            distinct.addChangeListener(new RealmChangeListener<RealmResults<AnnotationIndexTypes>>() {\n+                @Override\n+                public void onChange(RealmResults<AnnotationIndexTypes> annotationIndexTypes) {\n+                    Set<List<? super Object>> values = RealmQueryTests.this.distinct(all, fieldName);\n+                    assertEquals(field, values.size(), distinct.size());\n+                    int i = count.incrementAndGet();\n+                    if (i == AnnotationIndexTypes.INDEX_FIELDS.length) {\n+                        looperThread.testComplete();\n+                    }\n+                }\n+            });\n         }\n-        looperThread.testComplete();\n     }\n \n+    // Smoke test of async distinct index linked types. Underlying mechanism is the same as for sync test\n+    // (distinct_linkedAllFields), so just verifying async mechanism.\n     @Test\n     @RunTestInLooperThread\n     public void distinct_async_notIndexedLinkedFields() {\n+        final long numberOfBlocks = 3;\n+        final long numberOfObjects = 3;\n+        final Realm realm = looperThread.getRealm();\n+        populateForDistinct(realm, numberOfBlocks, numberOfObjects, false);\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.createInstance(realm.sharedRealm);\n+        RealmResults<DynamicRealmObject> all = dynamicRealm.where(AnnotationIndexTypes.CLASS_NAME)\n+                .findAll();\n+\n+        for (String field : AnnotationIndexTypes.NOT_INDEX_FIELDS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce712ba8a7f7498cac1357d4b27def14789d415"}, "originalPosition": 355}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7119c3a81e6c413f234b01420e8440410c604817", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/7119c3a81e6c413f234b01420e8440410c604817", "committedDate": "2020-06-17T14:38:38Z", "message": "Fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f400240e8b19d32a8806929ba096bdcd016702ce", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/f400240e8b19d32a8806929ba096bdcd016702ce", "committedDate": "2020-06-18T12:02:22Z", "message": "Merge branch 'v10' into cr/distinct-for-link-properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb3cf35dec5ce4abad6a4c54cbc60d14e7f8e3b1", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/fb3cf35dec5ce4abad6a4c54cbc60d14e7f8e3b1", "committedDate": "2020-06-18T13:11:54Z", "message": "Updates according to code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09409a9dd8a9cdeba990ed05c168c3e7235dcc5a", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/09409a9dd8a9cdeba990ed05c168c3e7235dcc5a", "committedDate": "2020-06-18T13:47:31Z", "message": "Fix distinct tests to actually test linked and nested linked fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzY4NjM1", "url": "https://github.com/realm/realm-java/pull/6948#pullrequestreview-433368635", "createdAt": "2020-06-18T14:55:28Z", "commit": {"oid": "09409a9dd8a9cdeba990ed05c168c3e7235dcc5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d237cdc875e2285823f79f2238807519e4d3b41f", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/d237cdc875e2285823f79f2238807519e4d3b41f", "committedDate": "2020-06-18T14:58:22Z", "message": "Fix QueryDescriptorTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cb1ad8648b4445952c123a5d286a03f83154056", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/1cb1ad8648b4445952c123a5d286a03f83154056", "committedDate": "2020-06-18T15:04:13Z", "message": "Merge branch 'v10' into cr/distinct-for-link-properties"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2603, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}