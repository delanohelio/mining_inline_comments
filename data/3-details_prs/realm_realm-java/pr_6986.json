{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjU0NzA2", "number": 6986, "title": "Leaking objects when registering session listeners", "bodyText": "The leak was caused because when creating session listener we generated global references env->NewGlobalRef to Java objects that weren't deleted after finishing using such listeners.\nWe cannot use the JavaGlobalRef helper class to handle this references lifecycle because they are not compatible with the lambda functions. Lambda functions require objects to be copiable, but JavaGlobalRef isn't, it is just movable.\nA solution to be able to use lambdas normally is to create a new lifecycle reference handler that works via copy instead of moving. The downside is that we need to create and destroy global references anytime we copy the instance around.", "createdAt": "2020-07-02T17:31:26Z", "url": "https://github.com/realm/realm-java/pull/6986", "merged": true, "mergeCommit": {"oid": "f379910b466ceaa1b415c6afab9eef9607acbac7"}, "closed": true, "closedAt": "2020-07-04T07:25:30Z", "author": {"login": "clementetb"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxCJvKgH2gAyNDQzNjU0NzA2OjQ2YTVjZWJmMDMyZmFmNmZjYzAyMTVmZGZiMDQwMTkxODM1Y2EwZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxZCy1gH2gAyNDQzNjU0NzA2OjE2MDZhMjIyNDg4ZTkwMjNlYTdmYTg0ZTQ1ZjdmNmVhNDczYzhiOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/46a5cebf032faf6fcc0215fdfb040191835ca0f6", "committedDate": "2020-07-02T17:18:49Z", "message": "Create JNI global references handler that plays along with lambda functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTc5OTkw", "url": "https://github.com/realm/realm-java/pull/6986#pullrequestreview-441979990", "createdAt": "2020-07-02T19:53:17Z", "commit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTc2Nzky", "url": "https://github.com/realm/realm-java/pull/6986#pullrequestreview-442176792", "createdAt": "2020-07-03T06:35:37Z", "commit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjozNTozOFrOGslRWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjo0MTo1NFrOGslaRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTE3Ng==", "bodyText": "I would always add some justification as to why this could be used (e.g. the description you have in the PR).", "url": "https://github.com/realm/realm-java/pull/6986#discussion_r449401176", "createdAt": "2020-07-03T06:35:38Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/jni_util/java_global_ref_copy.hpp", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+#define REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+\n+#include <jni.h>\n+\n+namespace realm {\n+    namespace jni_util {\n+\n+        // Manage the lifecycle of jobject's global ref via copy constructors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMTU0OA==", "bodyText": "Would it make sense to rename these classes to JavaGlobalRefByMove and JavaGlobalRefByCopy? Just to make it clear from the class name? Having just JavaGlobalRef and JavaGlobalRefCopy` might be confusing?", "url": "https://github.com/realm/realm-java/pull/6986#discussion_r449401548", "createdAt": "2020-07-03T06:36:36Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/jni_util/java_global_ref_copy.hpp", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+#define REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+\n+#include <jni.h>\n+\n+namespace realm {\n+    namespace jni_util {\n+\n+        // Manage the lifecycle of jobject's global ref via copy constructors\n+        class JavaGlobalRefCopy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwMzQ2Mw==", "bodyText": "Don't we need to delete the move constructor in a similar to how the copy constructor is deleted in JavaGlobalRef?", "url": "https://github.com/realm/realm-java/pull/6986#discussion_r449403463", "createdAt": "2020-07-03T06:41:54Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/jni_util/java_global_ref_copy.hpp", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+#define REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+\n+#include <jni.h>\n+\n+namespace realm {\n+    namespace jni_util {\n+\n+        // Manage the lifecycle of jobject's global ref via copy constructors\n+        class JavaGlobalRefCopy {\n+        public:\n+            JavaGlobalRefCopy();\n+\n+            JavaGlobalRefCopy(JNIEnv *env, jobject obj);\n+\n+            JavaGlobalRefCopy(const JavaGlobalRefCopy &rhs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a5cebf032faf6fcc0215fdfb040191835ca0f6"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20c90a45f8ee15fbdf1be14238371cdac123057b", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/20c90a45f8ee15fbdf1be14238371cdac123057b", "committedDate": "2020-07-03T09:19:22Z", "message": "Include PR requests:\nRename JavaGlobalRef helpers\nAdd better description\nRemove default move constructor\nFix other leaks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzYwNDU4", "url": "https://github.com/realm/realm-java/pull/6986#pullrequestreview-442360458", "createdAt": "2020-07-03T11:51:50Z", "commit": {"oid": "20c90a45f8ee15fbdf1be14238371cdac123057b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MTo1MFrOGst8Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo1MTo1MFrOGst8Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0MzIyMg==", "bodyText": "Seems like this should have been deleted?", "url": "https://github.com/realm/realm-java/pull/6986#discussion_r449543222", "createdAt": "2020-07-03T11:51:50Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/jni_util/java_global_ref_by_copy.hpp", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Realm Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#ifndef REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+#define REALM_JNI_UTIL_JAVA_GLOBAL_REF_COPY_HPP\n+\n+#include <jni.h>\n+\n+namespace realm {\n+    namespace jni_util {\n+\n+        // Manages the lifecycle of jobject's global ref via copy constructors\n+        //\n+        // It prevents leaking global references by automatically referencing and unreferencing Java objects\n+        // any time the instance is copied or destroyed. Its principal use is on data structures that don't support\n+        // moving operations such as in std::function lambdas.\n+        //\n+        // Note that there is another flavor exists: JavaGlobalRefByMove. It manages the reference lifecycle by moving\n+        // operations.\n+        // Manages the lifecycle of jobject's global ref via move constructors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20c90a45f8ee15fbdf1be14238371cdac123057b"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3078e5b6024661b96d878949230c6de6004b0c55", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/3078e5b6024661b96d878949230c6de6004b0c55", "committedDate": "2020-07-03T13:40:28Z", "message": "Fix typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b21f57538dddc04be4a81518ca008676c2f81e1", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/8b21f57538dddc04be4a81518ca008676c2f81e1", "committedDate": "2020-07-03T13:44:05Z", "message": "Add fixes in change log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb395e24aaf344664f8fed1c46d3fe4f507809e", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/fcb395e24aaf344664f8fed1c46d3fe4f507809e", "committedDate": "2020-07-03T14:09:46Z", "message": "Merge branch 'v10' into ct/RJAVA-614"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1606a222488e9023ea7fa84e45f7f6ea473c8b95", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/1606a222488e9023ea7fa84e45f7f6ea473c8b95", "committedDate": "2020-07-03T19:59:03Z", "message": "Merge branch 'v10' into ct/RJAVA-614"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2280, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}