{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMjIzMDI3", "number": 7249, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0NzoxMVrOFGkcUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxNzoxNVrOFGtAOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDMyODUxOnYy", "diffSide": "RIGHT", "path": "realm/kotlin-extensions/src/androidTest/kotlin/io/realm/CoroutinesTests.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0NzoxMVrOIHonGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0NzoxMVrOIHonGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg3NjMxMw==", "bodyText": "Maybe not required for now, but I guess you could communicate through a channel now that we are in a coroutine context. That would make it cleaner when waiting for the result. Good old CSP.", "url": "https://github.com/realm/realm-java/pull/7249#discussion_r544876313", "createdAt": "2020-12-17T07:47:11Z", "author": {"login": "rorbech"}, "path": "realm/kotlin-extensions/src/androidTest/kotlin/io/realm/CoroutinesTests.kt", "diffHunk": "@@ -924,6 +928,160 @@ class CoroutinesTests {\n         TestHelper.awaitOrFail(countDownLatch)\n     }\n \n+    @Test\n+    fun realmList_flow_parentDeletionComplete() = looperThread.runBlocking {\n+        val realm = Realm.getInstance(configuration)\n+        realm.beginTransaction()\n+        val parent = realm.createObject<AllTypes>()\n+        val list = parent.columnRealmList\n+        list.add(Dog(\"dog\"))\n+        realm.commitTransaction()\n+\n+        val collectingStarted = AtomicBoolean(false)\n+        val context = looperThread.asDispatcher()\n+        val scope = CoroutineScope(context)\n+        scope.launch {\n+            // We should only emit valid lists. If the parent of the list is invalidated\n+            // it should close the stream gracefully resulting in onComplete being called.\n+            list.toFlow()\n+                    .onEach { assertTrue(it.isValid) }\n+                    .onCompletion {\n+                        realm.close()\n+                        looperThread.testComplete()\n+                    }.collect {\n+                        collectingStarted.set(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6890050398b65147c4398b6d7f2f5ecdb9ccd59"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTcxMjIzOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMjo0NlrOIH1AEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMjo0NlrOIH1AEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3OTMxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * RxJava Flowables/Observables and Coroutine Flows would crash if they where created from a `RealmList` and the parent object holding the list was deleted. Now, the stream is disposed/closed instead. (Issue [#7242](https://github.com/realm/realm-java/issues/7242)) \n          \n          \n            \n            * RxJava Flowables/Observables and Coroutine Flows would crash if they were created from a `RealmList` and the parent object holding the list was deleted. Now, the stream is disposed/closed instead. (Issue [#7242](https://github.com/realm/realm-java/issues/7242))", "url": "https://github.com/realm/realm-java/pull/7249#discussion_r545079314", "createdAt": "2020-12-17T13:12:46Z", "author": {"login": "edualonso"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,19 @@\n+## 10.2.1 (YYYY-MM-DD)\n+\n+### Enhancements\n+* None.\n+\n+### Fixes\n+* RxJava Flowables/Observables and Coroutine Flows would crash if they where created from a `RealmList` and the parent object holding the list was deleted. Now, the stream is disposed/closed instead. (Issue [#7242](https://github.com/realm/realm-java/issues/7242)) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6890050398b65147c4398b6d7f2f5ecdb9ccd59"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTczMTE0OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/testUtils/kotlin/io/realm/rule/BlockingLooperThread.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxNzoxNVrOIH1LAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxNzoxNVrOIH1LAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA4MjExMg==", "bodyText": "\ud83d\udc4f", "url": "https://github.com/realm/realm-java/pull/7249#discussion_r545082112", "createdAt": "2020-12-17T13:17:15Z", "author": {"login": "edualonso"}, "path": "realm/realm-library/src/testUtils/kotlin/io/realm/rule/BlockingLooperThread.kt", "diffHunk": "@@ -222,6 +208,11 @@ class BlockingLooperThread {\n         }\n     }\n \n+    fun asDispatcher(): CoroutineContext {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6890050398b65147c4398b6d7f2f5ecdb9ccd59"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 404, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}