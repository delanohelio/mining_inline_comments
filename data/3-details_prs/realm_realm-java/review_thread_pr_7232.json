{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMzkwMjgw", "number": 7232, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoxNToyOVrOFAxd3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDozNDozOFrOFBtZ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzU0NzgxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/java_accessor.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoxNToyOVrOH_OWew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1MjoyMVrOH_Pmow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1NzQ2Nw==", "bodyText": "Is this being used anywhere?", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536057467", "createdAt": "2020-12-04T12:15:29Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/java_accessor.hpp", "diffHunk": "@@ -154,6 +154,11 @@ class JObjectArrayAccessor {\n     jsize m_size;\n };\n \n+template<>\n+inline JStringAccessor JObjectArrayAccessor<JStringAccessor,jstring>::operator[](const int index) const noexcept {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3Nzk4Nw==", "bodyText": "It is used by https://github.com/realm/realm-java/pull/7232/files#diff-8905bc013670a06267a7fd4be2a36b6698ed38d2d3f442c88d1223f57e8e8772R107. The problem is the reference generated by the below GetObjectArrayElement, which is immediately passed into the JStringAccessor. I did not see any other reasonable easy way to grab it and delete without doing it through the JStringAccessor without having to verify all usages of JStringAccessor throughout our code. It is actually immediately releasable as the data is copied out in the constructor, so basically just propagating the owned argument to the inner temporary JStringCharsAccessor. Maybe delete_jstring_ref would be more appropriate.", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536077987", "createdAt": "2020-12-04T12:52:21Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/cpp/java_accessor.hpp", "diffHunk": "@@ -154,6 +154,11 @@ class JObjectArrayAccessor {\n     jsize m_size;\n };\n \n+template<>\n+inline JStringAccessor JObjectArrayAccessor<JStringAccessor,jstring>::operator[](const int index) const noexcept {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1NzQ2Nw=="}, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzU1NTczOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/java_network_transport.hpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoxNzozN1rOH_ObAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1NTo1MlrOH_PuwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1ODYyNg==", "bodyText": "Any reason to introduce the owned boolean for just this case? Couldn't we delete it after calling the ref after calling the completionBlock?", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536058626", "createdAt": "2020-12-04T12:17:37Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/java_network_transport.hpp", "diffHunk": "@@ -92,7 +103,7 @@ struct JavaNetworkTransport : public app::GenericNetworkTransport {\n \n             jint http_code = env->CallIntMethod(response, get_http_code_method);\n             jint custom_code = env->CallIntMethod(response, get_custom_code_method);\n-            JStringAccessor java_body(env, (jstring) env->CallObjectMethod(response, get_body_method));\n+            JStringAccessor java_body(env, (jstring) env->CallObjectMethod(response, get_body_method), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDA2NA==", "bodyText": "Just taking advantage of the new constructor needed to delete all the temporary jstring references generated in the JObjectArrayAccessor. We could do it manually, but I assume that we have loads of JStringAccessors that received a jstring which could instantly be deleted, so I see no reason for removing nice functionality. Alternative is to define a local jstring and manually delete the reference afterwards.", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536080064", "createdAt": "2020-12-04T12:55:52Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/cpp/java_network_transport.hpp", "diffHunk": "@@ -92,7 +103,7 @@ struct JavaNetworkTransport : public app::GenericNetworkTransport {\n \n             jint http_code = env->CallIntMethod(response, get_http_code_method);\n             jint custom_code = env->CallIntMethod(response, get_custom_code_method);\n-            JStringAccessor java_body(env, (jstring) env->CallObjectMethod(response, get_body_method));\n+            JStringAccessor java_body(env, (jstring) env->CallObjectMethod(response, get_body_method), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1ODYyNg=="}, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzU2MTE1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/util.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoxOToxOFrOH_OeRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzowMDo0MlrOH_P5sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1OTQ2Mg==", "bodyText": "This name is a bit confusing to me. Owned by who? Looking at the code, it seems to imply \"owned by this class\" so maybe \"owned_by_accessor\" or \"delete_on_free\" or pr. the comment above, just remove it? \ud83e\udd14", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536059462", "createdAt": "2020-12-04T12:19:18Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/util.cpp", "diffHunk": "@@ -331,6 +335,7 @@ struct JStringCharsAccessor {\n     const jstring m_string;\n     const jchar* const m_data;\n     const size_t m_size;\n+    const bool m_owned;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MjMwOQ==", "bodyText": "See other comments about the rationale. I can update the name to delete_on_free or maybe delete_jstring_ref_on_free to be very explicit.", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536082309", "createdAt": "2020-12-04T12:59:41Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/cpp/util.cpp", "diffHunk": "@@ -331,6 +335,7 @@ struct JStringCharsAccessor {\n     const jstring m_string;\n     const jchar* const m_data;\n     const size_t m_size;\n+    const bool m_owned;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1OTQ2Mg=="}, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4Mjg2Nw==", "bodyText": "I'm fine with keeping this. Either of the tow names you propose there seems better to me than owned.", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r536082867", "createdAt": "2020-12-04T13:00:42Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/util.cpp", "diffHunk": "@@ -331,6 +335,7 @@ struct JStringCharsAccessor {\n     const jstring m_string;\n     const jchar* const m_data;\n     const size_t m_size;\n+    const bool m_owned;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA1OTQ2Mg=="}, "originalCommit": {"oid": "35afc6681ae10d2e35e7108e7e58a39443717d98"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MzM2ODEyOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/util.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDozNDozOFrOIAgNOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMDozNDozOFrOIAgNOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5ODU4NQ==", "bodyText": "Add FIXME to ensure alignment of future updates", "url": "https://github.com/realm/realm-java/pull/7232#discussion_r537398585", "createdAt": "2020-12-07T10:34:38Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/cpp/util.cpp", "diffHunk": "@@ -306,16 +306,20 @@ struct JcharTraits {\n };\n \n struct JStringCharsAccessor {\n-    JStringCharsAccessor(JNIEnv* e, jstring s)\n+    JStringCharsAccessor(JNIEnv* e, jstring s, bool delete_jstring_ref_on_delete)\n         : m_env(e)\n         , m_string(s)\n         , m_data(e->GetStringChars(s, 0))\n         , m_size(get_size(e, s))\n+        , m_delete_jstring_ref_on_delete(delete_jstring_ref_on_delete)\n     {\n     }\n     ~JStringCharsAccessor()\n     {\n         m_env->ReleaseStringChars(m_string, m_data);\n+        if (m_delete_jstring_ref_on_delete) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cad4980186754074ab2eef1a1df7fe309f23a0bb"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 396, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}