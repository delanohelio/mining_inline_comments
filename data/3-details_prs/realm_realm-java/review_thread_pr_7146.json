{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3ODM5MTQy", "number": 7146, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMjo0NFrOEvOEJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMjo0NFrOEvOEJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ4OTY0OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/CMakeLists.txt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMjo0NFrOHkFBXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjozNzozM1rOHkMPFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MzA1Mw==", "bodyText": "@fealebenpae Any idea about a timeline when these are available?", "url": "https://github.com/realm/realm-java/pull/7146#discussion_r507593053", "createdAt": "2020-10-19T09:12:44Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/CMakeLists.txt", "diffHunk": "@@ -131,32 +130,19 @@ create_javah(TARGET jni_headers\n     DEPENDS ${classes_PATH}\n )\n \n-include(RealmCore)\n-use_realm_core(${build_SYNC} \"${REALM_CORE_DIST_DIR}\" \"${CORE_SOURCE_PATH}\")\n-\n-# Download OpenSSL lib\n-# FIXME Read the openssl version from core when the core/sync release has that information.\n-set(openssl_VERSION \"1.1.1b\")\n-set(openssl_FILENAME \"openssl.tgz\")\n-set(openssl_URL \"https://static.realm.io/downloads/openssl/${openssl_VERSION}/Android/${ANDROID_ABI}/${openssl_FILENAME}\")\n-\n-message(STATUS \"Downloading OpenSSL...\")\n-file(DOWNLOAD \"${openssl_URL}\" \"${PROJECT_BINARY_DIR}/${openssl_FILENAME}\")\n-\n-message(STATUS \"Uncompressing OpenSSL: ${PROJECT_BINARY_DIR}/${openssl_FILENAME}\")\n-execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz \"${openssl_FILENAME}\" WORKING_DIRECTORY \"${PROJECT_BINARY_DIR}\")\n-message(STATUS \"Importing OpenSSL...\")\n-include(${PROJECT_BINARY_DIR}/lib/cmake/OpenSSL/OpenSSLConfig.cmake)\n-get_target_property(openssl_include_DIR OpenSSL::Crypto INTERFACE_INCLUDE_DIRECTORIES)\n-get_target_property(crypto_LIB OpenSSL::Crypto IMPORTED_LOCATION)\n-get_target_property(ssl_LIB OpenSSL::SSL IMPORTED_LOCATION)\n+option(REALM_JAVA_BUILD_CORE_FROM_SOURCE \"Build Realm Core from source, as opposed to downloading prebuilt binaries\" ON)\n+if(REALM_JAVA_BUILD_CORE_FROM_SOURCE)\n+    set(REALM_BUILD_LIB_ONLY ON)\n+    add_subdirectory(realm-core)\n+else()\n+    message(FATAL_ERROR \"TODO: Implement downloading monorepo release artifacts\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c82847e3c4f51e01da745442892f897db25edfb6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMTI1NQ==", "bodyText": "I want to iron out all the kinks in the integration before I cut binary releases, so as soon as I've fixed the other issues (like the Mixed serialization above).", "url": "https://github.com/realm/realm-java/pull/7146#discussion_r507711255", "createdAt": "2020-10-19T12:37:33Z", "author": {"login": "fealebenpae"}, "path": "realm/realm-library/src/main/cpp/CMakeLists.txt", "diffHunk": "@@ -131,32 +130,19 @@ create_javah(TARGET jni_headers\n     DEPENDS ${classes_PATH}\n )\n \n-include(RealmCore)\n-use_realm_core(${build_SYNC} \"${REALM_CORE_DIST_DIR}\" \"${CORE_SOURCE_PATH}\")\n-\n-# Download OpenSSL lib\n-# FIXME Read the openssl version from core when the core/sync release has that information.\n-set(openssl_VERSION \"1.1.1b\")\n-set(openssl_FILENAME \"openssl.tgz\")\n-set(openssl_URL \"https://static.realm.io/downloads/openssl/${openssl_VERSION}/Android/${ANDROID_ABI}/${openssl_FILENAME}\")\n-\n-message(STATUS \"Downloading OpenSSL...\")\n-file(DOWNLOAD \"${openssl_URL}\" \"${PROJECT_BINARY_DIR}/${openssl_FILENAME}\")\n-\n-message(STATUS \"Uncompressing OpenSSL: ${PROJECT_BINARY_DIR}/${openssl_FILENAME}\")\n-execute_process(COMMAND ${CMAKE_COMMAND} -E tar xfz \"${openssl_FILENAME}\" WORKING_DIRECTORY \"${PROJECT_BINARY_DIR}\")\n-message(STATUS \"Importing OpenSSL...\")\n-include(${PROJECT_BINARY_DIR}/lib/cmake/OpenSSL/OpenSSLConfig.cmake)\n-get_target_property(openssl_include_DIR OpenSSL::Crypto INTERFACE_INCLUDE_DIRECTORIES)\n-get_target_property(crypto_LIB OpenSSL::Crypto IMPORTED_LOCATION)\n-get_target_property(ssl_LIB OpenSSL::SSL IMPORTED_LOCATION)\n+option(REALM_JAVA_BUILD_CORE_FROM_SOURCE \"Build Realm Core from source, as opposed to downloading prebuilt binaries\" ON)\n+if(REALM_JAVA_BUILD_CORE_FROM_SOURCE)\n+    set(REALM_BUILD_LIB_ONLY ON)\n+    add_subdirectory(realm-core)\n+else()\n+    message(FATAL_ERROR \"TODO: Implement downloading monorepo release artifacts\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MzA1Mw=="}, "originalCommit": {"oid": "c82847e3c4f51e01da745442892f897db25edfb6"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 558, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}