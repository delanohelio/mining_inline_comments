{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDAwOTAy", "number": 6938, "title": "Avoid crash if looking up NetworkTransport response class from C++ thread", "bodyText": "Fixes #6937\nThe underlying problem is that if the first network request comes from the Sync Client C++ thread, it will attempt to load the JavaClass into the static variable. But the Sync thread is started from C++ and doesn't have access to the Java class loader (see https://developer.android.com/training/articles/perf-jni#native-libraries), so it will crash with class-not-found.\nIf any Java call managed to get here first, this would not crash and all subsequent calls would succeed.\nThe fixes move the class lookup to JNI_Onload and stores it in our JavaClassGlobalDef wrapper which is guaranteed to be called from Java.\nUnfortunately, it isn't possible to create a unit test for this as the static variable is preserved across all unit tests, but the fix has been verified manually by:\n\nCreate a new app\nLog a user in and open a synced Realm\nLet the user access token expire (30 minutes)\nKill the app and restart it.\nIf the app uses App.currentUser() to directly open the synced Realm, the first network request will be from the Sync thread trying to refresh the token. Previously this crashed. With this fix, it doesn't.", "createdAt": "2020-06-10T11:46:48Z", "url": "https://github.com/realm/realm-java/pull/6938", "merged": true, "mergeCommit": {"oid": "0d4c40c899c45acc73a5534620707fa209ba6d7f"}, "closed": true, "closedAt": "2020-06-11T11:12:31Z", "author": {"login": "cmelchior"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp4ILyAH2gAyNDMyNDAwOTAyOjhiOTE2YThiZTZhOTAxOTMzOGYyNWRkNjRkZTc3OThlZDY4N2Y2ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp7ardgH2gAyNDMyNDAwOTAyOjFmN2RjMjg3ODhmMGZmMzU1YTc1NWU0NjY0NzUwZjlmMmNlMzZjMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8b916a8be6a9019338f25dd64de7798ed687f681", "author": {"user": {"login": "cmelchior", "name": "Christian Melchior"}}, "url": "https://github.com/realm/realm-java/commit/8b916a8be6a9019338f25dd64de7798ed687f681", "committedDate": "2020-06-10T11:40:36Z", "message": "Don't crash if looking up NetworkTransport response class from C++ thread"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTgyNzcw", "url": "https://github.com/realm/realm-java/pull/6938#pullrequestreview-427982770", "createdAt": "2020-06-10T12:03:26Z", "commit": {"oid": "8b916a8be6a9019338f25dd64de7798ed687f681"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjowMzoyNlrOGhxnAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjowOToxNFrOGhxyTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2ODk5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [RealmApp] When opening asynced Realm with a cached user, and the user access token had expired. It would crash the app with `Assertion failed: cls with (class_name) = [\"io/realm/internal/objectstore/OsJavaNetworkTransport$Response\"]`. (Issue [#6937](https://github.com/realm/realm-java/issues/6937), since 10.0.0-BETA.1)\n          \n          \n            \n            * [RealmApp] Opening a synced Realm for a cached user with expired access token would crash the app with `Assertion failed: cls with (class_name) = [\"io/realm/internal/objectstore/OsJavaNetworkTransport$Response\"]`. (Issue [#6937](https://github.com/realm/realm-java/issues/6937), since 10.0.0-BETA.1)", "url": "https://github.com/realm/realm-java/pull/6938#discussion_r438068992", "createdAt": "2020-06-10T12:03:26Z", "author": {"login": "rorbech"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,3 +1,27 @@\n+## 10.0.0-BETA.4 (YYYY-MM-DD)\n+\n+We no longer support Realm Cloud (legacy), but instead the new MongoDB Realm Cloud. MongoDB Realm is a serverless platform that enables developers to quickly build applications without having to set up server infrastructure. MongoDB Realm is built on top of MongoDB Atlas, automatically integrating the connection to your database.\n+\n+The old Realm Cloud legacy API's have undergone significant refactoring. The new API's are all located in the `io.realm.mongodb` package with `io.realm.mongodb.App` as the entry point.\n+\n+### Breaking Changes \n+* None\n+\n+### Enhancements\n+* None\n+\n+### Fixed\n+* [RealmApp] When opening asynced Realm with a cached user, and the user access token had expired. It would crash the app with `Assertion failed: cls with (class_name) = [\"io/realm/internal/objectstore/OsJavaNetworkTransport$Response\"]`. (Issue [#6937](https://github.com/realm/realm-java/issues/6937), since 10.0.0-BETA.1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b916a8be6a9019338f25dd64de7798ed687f681"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3MTg4NA==", "bodyText": "Not strong on the C++ details, but maybe fetch the class once. Maybe it is optimized away, but wouldn't that require it to be declared const.", "url": "https://github.com/realm/realm-java/pull/6938#discussion_r438071884", "createdAt": "2020-06-10T12:09:14Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/main/cpp/java_network_transport.hpp", "diffHunk": "@@ -84,11 +84,10 @@ struct JavaNetworkTransport : public app::GenericNetworkTransport {\n             return;\n         } else {\n             // Read response\n-            static JavaClass responseClass(env, \"io/realm/internal/objectstore/OsJavaNetworkTransport$Response\");\n-            static JavaMethod get_http_code_method(env, responseClass, \"getHttpResponseCode\", \"()I\");\n-            static JavaMethod get_custom_code_method(env, responseClass, \"getCustomResponseCode\", \"()I\");\n-            static JavaMethod get_headers_method(env, responseClass, \"getJNIFriendlyHeaders\", \"()[Ljava/lang/String;\");\n-            static JavaMethod get_body_method(env, responseClass, \"getBody\", \"()Ljava/lang/String;\");\n+            static JavaMethod get_http_code_method(env, JavaClassGlobalDef::network_transport_response_class(), \"getHttpResponseCode\", \"()I\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b916a8be6a9019338f25dd64de7798ed687f681"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTk3NjU4", "url": "https://github.com/realm/realm-java/pull/6938#pullrequestreview-427997658", "createdAt": "2020-06-10T12:24:12Z", "commit": {"oid": "8b916a8be6a9019338f25dd64de7798ed687f681"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f7dc28788f0ff355a755e4664750f9f2ce36c28", "author": {"user": {"login": "cmelchior", "name": "Christian Melchior"}}, "url": "https://github.com/realm/realm-java/commit/1f7dc28788f0ff355a755e4664750f9f2ce36c28", "committedDate": "2020-06-10T15:30:31Z", "message": "PR feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2597, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}