{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDc3NzEx", "number": 6970, "title": "Add encryption key to sync metadata + tests", "bodyText": "We couldn't encrypt users metadata even if we set the encryption key in the App config.\nFix by propagating the encryption key down to the SyncClientConfig and setting its metadata_mode to SyncManager::MetadataMode::Encryption if a key is set.\nHave included test cases to validate that the key is properly set in config, and that the Realm is actually encrypted.", "createdAt": "2020-06-26T09:22:08Z", "url": "https://github.com/realm/realm-java/pull/6970", "merged": true, "mergeCommit": {"oid": "49974b88cdaddb76d015eca64dea2469d3e8330e"}, "closed": true, "closedAt": "2020-06-26T15:33:43Z", "author": {"login": "clementetb"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu_nOsAH2gAyNDQwNDc3NzExOjhkYTA4MTM5NDM5Y2JjOWM1ZWI2NzE0NzhkZTVmZDRkMmZjNDA1YWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvE93ZgFqTQzODM4ODcwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/8da08139439cbc9c5eb671478de5fd4d2fc405ad", "committedDate": "2020-06-26T09:13:28Z", "message": "Add encryption key to sync metadata + tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTY0Mzc5", "url": "https://github.com/realm/realm-java/pull/6970#pullrequestreview-438164379", "createdAt": "2020-06-26T09:51:16Z", "commit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1MToxNlrOGpa4mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwOTo1OToxNVrOGpbHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NTI3NA==", "bodyText": "To be sure that we actually throws on the encryption key parameter. It should probably be:\nval builder = AppConfiguration.Builder(\"app-id\")\nassertFailsWith<IllegalArgumentException> { builder.encryptionKey(...) }", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446085274", "createdAt": "2020-06-26T09:51:16Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppConfigurationTests.kt", "diffHunk": "@@ -218,15 +217,27 @@ class AppConfigurationTests {\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey() {\n-        TODO()\n+        val key = TestHelper.getRandomKey()\n+\n+        val config = AppConfiguration.Builder(\"app-id\")\n+                .encryptionKey(key)\n+                .build()\n+\n+        assertArrayEquals(key, config.encryptionKey)\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey_invalidValuesThrows() {\n-        TODO()\n+        assertFailsWith<IllegalArgumentException> {\n+            AppConfiguration.Builder(\"app-id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NTM0NA==", "bodyText": "Same", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446085344", "createdAt": "2020-06-26T09:51:25Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppConfigurationTests.kt", "diffHunk": "@@ -218,15 +217,27 @@ class AppConfigurationTests {\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey() {\n-        TODO()\n+        val key = TestHelper.getRandomKey()\n+\n+        val config = AppConfiguration.Builder(\"app-id\")\n+                .encryptionKey(key)\n+                .build()\n+\n+        assertArrayEquals(key, config.encryptionKey)\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey_invalidValuesThrows() {\n-        TODO()\n+        assertFailsWith<IllegalArgumentException> {\n+            AppConfiguration.Builder(\"app-id\")\n+                    .encryptionKey(null)\n+        }\n+\n+        assertFailsWith<IllegalArgumentException> {\n+            AppConfiguration.Builder(\"app-id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NjUyMg==", "bodyText": "It looks like we have a wrong nullability defined if you are allowed to pass in null directly. It looks like we forgot to add something like https://github.com/realm/realm-java/blob/v10/realm/realm-library/src/main/java/io/realm/package-info.java to the io.realm.app package.\nIn other places like this we use TestHelper.getNull() to \"cheat\" the Kotlin type system.", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446086522", "createdAt": "2020-06-26T09:53:53Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppConfigurationTests.kt", "diffHunk": "@@ -218,15 +217,27 @@ class AppConfigurationTests {\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey() {\n-        TODO()\n+        val key = TestHelper.getRandomKey()\n+\n+        val config = AppConfiguration.Builder(\"app-id\")\n+                .encryptionKey(key)\n+                .build()\n+\n+        assertArrayEquals(key, config.encryptionKey)\n     }\n \n     @Test\n-    @Ignore(\"FIXME\")\n     fun encryptionKey_invalidValuesThrows() {\n-        TODO()\n+        assertFailsWith<IllegalArgumentException> {\n+            AppConfiguration.Builder(\"app-id\")\n+                    .encryptionKey(null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NjcwNQ==", "bodyText": "This shouldn't be needed?", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446086705", "createdAt": "2020-06-26T09:54:17Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppTests.kt", "diffHunk": "@@ -265,4 +267,25 @@ class AppTests {\n         assertEquals(registry, app.getFunctions(user, registry).defaultCodecRegistry)\n     }\n \n+    @Test()\n+    fun encryption() {\n+        tearDown()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4Njk1MQ==", "bodyText": "Should and the Realm.init should be done in setUp already?", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446086951", "createdAt": "2020-06-26T09:54:47Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppTests.kt", "diffHunk": "@@ -265,4 +267,25 @@ class AppTests {\n         assertEquals(registry, app.getFunctions(user, registry).defaultCodecRegistry)\n     }\n \n+    @Test()\n+    fun encryption() {\n+        tearDown()\n+\n+        val context = InstrumentationRegistry.getInstrumentation().targetContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4NzQ4NQ==", "bodyText": "Didn't know you could do this. Nice \ud83d\udc4d", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446087485", "createdAt": "2020-06-26T09:55:49Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/io_realm_mongodb_App.cpp", "diffHunk": "@@ -133,10 +135,16 @@ JNIEXPORT jlong JNICALL Java_io_realm_mongodb_App_nativeCreate(JNIEnv* env, jobj\n \n         SyncClientConfig client_config;\n         client_config.base_file_path = base_file_path;\n-        client_config.metadata_mode = SyncManager::MetadataMode::NoEncryption;\n         client_config.user_agent_binding_info = user_agent_binding_info;\n         client_config.user_agent_application_info = user_agent_application_info;\n \n+        if(j_encryption_key == nullptr){\n+            client_config.metadata_mode = SyncManager::MetadataMode::NoEncryption;\n+        } else {\n+            client_config.metadata_mode = SyncManager::MetadataMode::Encryption;\n+            client_config.custom_encryption_key = encryption_key.transform<std::vector<char>>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA4OTExNQ==", "bodyText": "I would also add a check to ensure the file already exists: assertTrue(File(config.path).exists())", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446089115", "createdAt": "2020-06-26T09:59:15Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/AppTests.kt", "diffHunk": "@@ -265,4 +267,25 @@ class AppTests {\n         assertEquals(registry, app.getFunctions(user, registry).defaultCodecRegistry)\n     }\n \n+    @Test()\n+    fun encryption() {\n+        tearDown()\n+\n+        val context = InstrumentationRegistry.getInstrumentation().targetContext\n+\n+        Realm.init(context)\n+        app = TestApp(customizeConfig = {\n+            it.encryptionKey(TestHelper.getRandomKey())\n+        })\n+\n+        val metadataDir = File(context.filesDir, \"realm-object-server/io.realm.object-server-utility/metadata/\")\n+        val config = RealmConfiguration.Builder()\n+                .name(\"sync_metadata.realm\")\n+                .directory(metadataDir)\n+                .build()\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8da08139439cbc9c5eb671478de5fd4d2fc405ad"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513e5b9af7fccbbef954317ee55526ebef5dffd3", "author": {"user": {"login": "clementetb", "name": null}}, "url": "https://github.com/realm/realm-java/commit/513e5b9af7fccbbef954317ee55526ebef5dffd3", "committedDate": "2020-06-26T10:54:48Z", "message": "Add modifications as suggested in PR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Mzg4NzA5", "url": "https://github.com/realm/realm-java/pull/6970#pullrequestreview-438388709", "createdAt": "2020-06-26T15:26:24Z", "commit": {"oid": "513e5b9af7fccbbef954317ee55526ebef5dffd3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNToyNjoyNFrOGplF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNToyNjoyNFrOGplF3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1MjUwOQ==", "bodyText": "We should create an issue about moving this to a package level annotation instead of only here. Generally all our public API should be non-null by default to play nicer with Kotlin.\nThis is fine for this PR though.", "url": "https://github.com/realm/realm-java/pull/6970#discussion_r446252509", "createdAt": "2020-06-26T15:26:24Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/AppConfiguration.java", "diffHunk": "@@ -294,7 +295,7 @@ public Builder(String appId) {\n          * @param key a 64 byte encryption key.\n          * @throws IllegalArgumentException if the key is not 64 bytes long.\n          */\n-        public Builder encryptionKey(byte[] key) {\n+        public Builder encryptionKey(@ParametersAreNonnullByDefault byte[] key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "513e5b9af7fccbbef954317ee55526ebef5dffd3"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2258, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}