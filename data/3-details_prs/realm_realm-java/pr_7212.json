{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzI3NDQy", "number": 7212, "title": "Ensure flow emissions are cooperative after the job has been cancelled.", "bodyText": "Fixes #7211\nIt is possible that a job is cancelled and the listener keeps emitting object updates. This could result in an AbortFlowException. To fix this we have to make the flow emissions cooperative.", "createdAt": "2020-11-18T16:56:46Z", "url": "https://github.com/realm/realm-java/pull/7212", "merged": true, "mergeCommit": {"oid": "f42b484fcc723e23697b0405800db9d73e49e6d2"}, "closed": true, "closedAt": "2020-11-20T12:26:40Z", "author": {"login": "edualonso"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddxBAOgH2gAyNTIzMzI3NDQyOjgwMjcwMWRiOGFiM2Y1MWRmZmZiNTNmODJjNmVkOWIxNDc4YzBiM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeE9XugH2gAyNTIzMzI3NDQyOjI4M2QzYmMyM2ZiZWU5OWU1YTcxMmM4MjAwNzJhMzE4NTRjOTNhMmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "802701db8ab3f51dfffb53f82c6ed9b1478c0b3f", "author": {"user": null}, "url": "https://github.com/realm/realm-java/commit/802701db8ab3f51dfffb53f82c6ed9b1478c0b3f", "committedDate": "2020-11-18T16:47:29Z", "message": "Made flow emissions cooperative as it could be that the job is cancelled and new object updates are emitted after that happens"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1674f3ed0501fab981c0487f14cdfebebd4127e0", "author": {"user": null}, "url": "https://github.com/realm/realm-java/commit/1674f3ed0501fab981c0487f14cdfebebd4127e0", "committedDate": "2020-11-18T16:51:56Z", "message": "Updated changelog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NTcyMTMy", "url": "https://github.com/realm/realm-java/pull/7212#pullrequestreview-534572132", "createdAt": "2020-11-19T15:36:33Z", "commit": {"oid": "1674f3ed0501fab981c0487f14cdfebebd4127e0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNTozNjozM1rOH2kgMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNTozNjozM1rOH2kgMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk4MzIxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Fixed crash present on slow devices in which calls to `toFlow` could crash if the Flow job is cancelled and object updates are emitted after that happens. (Issue [7211](https://github.com/realm/realm-java/issues/7211), since v10.0.1)\n          \n          \n            \n            * Fixed crash where calls to `toFlow` could crash if the Flow job is canceled and object updates are emitted after that happens. (Issue [7211](https://github.com/realm/realm-java/issues/7211), since v10.0.1)", "url": "https://github.com/realm/realm-java/pull/7212#discussion_r526983217", "createdAt": "2020-11-19T15:36:33Z", "author": {"login": "cmelchior"}, "path": "CHANGELOG.md", "diffHunk": "@@ -10,6 +10,7 @@\n ### Fixes\n * Fixed crash when adding classes containing an `ObjectId` as primary key to the schema. (Issue [#7189](https://github.com/realm/realm-java/issues/7189), since v10.0.0)\n * Fixed crash when creating proxy classes containing an `ObjectId` as primary key. (Issue [#7197](https://github.com/realm/realm-java/issues/7197), since v10.0.0)\n+* Fixed crash present on slow devices in which calls to `toFlow` could crash if the Flow job is cancelled and object updates are emitted after that happens. (Issue [7211](https://github.com/realm/realm-java/issues/7211), since v10.0.1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1674f3ed0501fab981c0487f14cdfebebd4127e0"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283d3bc23fbee99e5a712c820072a31854c93a2d", "author": {"user": null}, "url": "https://github.com/realm/realm-java/commit/283d3bc23fbee99e5a712c820072a31854c93a2d", "committedDate": "2020-11-19T16:01:37Z", "message": "Included check to avoid emission of objects coming from async queries which have not been loaded yet"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2215, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}