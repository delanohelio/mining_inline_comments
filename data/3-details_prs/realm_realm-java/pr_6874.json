{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTc3NTc1", "number": 6874, "title": "Add custom decoder variant of callFunctions", "bodyText": "", "createdAt": "2020-05-25T06:47:57Z", "url": "https://github.com/realm/realm-java/pull/6874", "merged": true, "mergeCommit": {"oid": "d4d797efb0d4e4ac1b1970bcb6c5d6eac213bd37"}, "closed": true, "closedAt": "2020-06-02T08:31:43Z", "author": {"login": "rorbech"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckZJcjAH2gAyNDIyNTc3NTc1OjI4NWY2OTY5YmQ1MTdmNTRmZmZkNDRiYzM0ZTAzNmFlNDk0ODRmMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcme8MLAH2gAyNDIyNTc3NTc1OjUyOTJmMzdhMzFkMDM1ZDc2MzE4OTc1YWZkNDJkMmY5ZGY0MWU5OWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "285f6969bd517f54fffd44bc34e036ae49484f34", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/285f6969bd517f54fffd44bc34e036ae49484f34", "committedDate": "2020-05-24T10:45:18Z", "message": "Add custom decoder variant of callFunctions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTcyNTg5", "url": "https://github.com/realm/realm-java/pull/6874#pullrequestreview-417572589", "createdAt": "2020-05-25T09:10:38Z", "commit": {"oid": "285f6969bd517f54fffd44bc34e036ae49484f34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139693cf404056757360757403508bff94512248", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/139693cf404056757360757403508bff94512248", "committedDate": "2020-05-25T09:37:33Z", "message": "Extract reusable custom string decoder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjA1MzEx", "url": "https://github.com/realm/realm-java/pull/6874#pullrequestreview-417605311", "createdAt": "2020-05-25T10:04:35Z", "commit": {"oid": "285f6969bd517f54fffd44bc34e036ae49484f34"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowNDozNlrOGZ8CKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDowNzo0MFrOGZ8Hjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTE3OA==", "bodyText": "Is there a reason you are not calling invoke directly from the public callFunction methods?", "url": "https://github.com/realm/realm-java/pull/6874#discussion_r429851178", "createdAt": "2020-05-25T10:04:36Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java", "diffHunk": "@@ -96,7 +97,34 @@ protected Functions(RealmUser user, CodecRegistry codecRegistry) {\n      * @see RealmAppConfiguration#getDefaultCodecRegistry()\n      */\n     public <T> T callFunction(String name, List<?> args, Class<T> resultClass) {\n-        return callFunction(name, args, resultClass, defaultCodecRegistry);\n+        return callFunction(name, args, defaultCodecRegistry, defaultCodecRegistry.get(resultClass));\n+    }\n+\n+    /**\n+     * Call a MongoDB Realm function synchronously with custom result decoder.\n+     * <p>\n+     * The arguments will be encoded with the default codec registry encoding.\n+     *\n+     * @param name Name of the Stitch function to call.\n+     * @param args Arguments to the Stitch function.\n+     * @param resultDecoder The decoder used to decode the result.\n+     * @param <T> The type that the response will be decoded as using the {@code resultDecoder}\n+     * @return Result of the Stitch function.\n+     *\n+     * @throws ObjectServerError if the request failed in some way.\n+     * @throws org.bson.codecs.configuration.CodecConfigurationException if the {@code codecRegistry}\n+     * does not provide codecs for the argument or {@code resultClass}.\n+     * @throws org.bson.BSONException is an error occurred during BSON processing.\n+     *\n+     * @see #callFunction(String, List, Class, CodecRegistry)\n+     * @see RealmAppConfiguration#getDefaultCodecRegistry()\n+     */\n+    public <T> T callFunction(String name, List<?> args, Decoder<T> resultDecoder) {\n+        return callFunction(name, args, defaultCodecRegistry, resultDecoder);\n+    }\n+\n+    <T> T callFunction(String name, List<?> args, CodecRegistry codecRegistry, Decoder<T> resultDecoder) {\n+        return invoke(name, args, codecRegistry, resultDecoder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "285f6969bd517f54fffd44bc34e036ae49484f34"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MjU1OA==", "bodyText": "The Callback will always return ObjectServerError in case of an error, but it might just wrap the underlying exception. But this description is not entirely accurate.", "url": "https://github.com/realm/realm-java/pull/6874#discussion_r429852558", "createdAt": "2020-05-25T10:07:40Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/objectServer/java/io/realm/mongodb/functions/Functions.java", "diffHunk": "@@ -159,7 +181,44 @@ public T run() throws ObjectServerError {\n      * @see RealmAppConfiguration#getDefaultCodecRegistry()\n      */\n     public <T> RealmAsyncTask callFunctionAsync(String name, List<?> args, Class<T> resultClass, RealmApp.Callback<T> callback) {\n-        return callFunctionAsync(name, args, resultClass, defaultCodecRegistry, callback);\n+        return callFunctionAsync(name, args, defaultCodecRegistry, defaultCodecRegistry.get(resultClass), callback);\n+    }\n+\n+    /**\n+     * Call a MongoDB Realm function asynchronously with custom result decoder.\n+     * <p>\n+     * This is the asynchronous equivalent of {@link #callFunction(String, List, Decoder)}.\n+     *\n+     * @param name Name of the Stitch function to call.\n+     * @param args Arguments to the Stitch function.\n+     * @param resultDecoder The decoder used to decode the result.\n+     * @param callback The callback that will receive the result of the request. If the request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "285f6969bd517f54fffd44bc34e036ae49484f34"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae9e17947ca810d233d6110b8c67003d6b66a22d", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/ae9e17947ca810d233d6110b8c67003d6b66a22d", "committedDate": "2020-05-25T20:04:17Z", "message": "Merge branch 'v10' into cr/functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a898a53822c37880f910e3e48ef0206dc05066", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/b0a898a53822c37880f910e3e48ef0206dc05066", "committedDate": "2020-05-26T07:41:13Z", "message": "Introduced separate BSON coding error codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f31dfde70ece76756e0cad65bac268eb57e96b9", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/7f31dfde70ece76756e0cad65bac268eb57e96b9", "committedDate": "2020-05-30T22:21:40Z", "message": "Merge branch 'v10' into cr/functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5292f37a31d035d76318975afd42d2f9df41e99a", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/5292f37a31d035d76318975afd42d2f9df41e99a", "committedDate": "2020-05-30T22:38:06Z", "message": "Included previously failing test cases along with C++ BSON parser fix from OS"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2553, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}