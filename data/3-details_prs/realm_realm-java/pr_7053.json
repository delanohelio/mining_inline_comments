{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMzU0MTU5", "number": 7053, "title": "Fix retrieval of null valued primitive property from dynamic realm", "bodyText": "Closes #7025", "createdAt": "2020-08-24T08:28:41Z", "url": "https://github.com/realm/realm-java/pull/7053", "merged": true, "mergeCommit": {"oid": "ea7d3799be8ea4610c6abc4c31c5ffe5eff6d9cc"}, "closed": true, "closedAt": "2020-09-08T08:28:13Z", "author": {"login": "rorbech"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdB-st5gFqTQ3MzIzNzM4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFQcYKAH2gAyNDcyMzU0MTU5OmJiZDc4Y2I1YTBkOTc3YmM2MTJkNDkzYjIyMDkzOTBjY2UwYTQ0OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMjM3Mzgx", "url": "https://github.com/realm/realm-java/pull/7053#pullrequestreview-473237381", "createdAt": "2020-08-24T08:49:55Z", "commit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo0OTo1NVrOHFaY6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODo1MjoxMVrOHFaeAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA==", "bodyText": "You don't need to call refresh. It should be up to date when opened.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475437290", "createdAt": "2020-08-24T08:49:55Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {\n+        realm.executeTransaction(realm -> {\n+            AllJavaTypes object = realm.createObject(AllJavaTypes.class, 1000L);\n+            object.setFieldBoolean(null);\n+\n+            assertNull(object.isFieldBoolean());\n+        });\n+        realm.close();\n+\n+        DynamicRealm dynamicRealm = DynamicRealm.getInstance(realm.configuration);\n+        dynamicRealm.refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODMxMQ==", "bodyText": "This seems to impact more than just null values, so we should have unit tests for all the data types.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475438311", "createdAt": "2020-08-24T08:51:40Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "diffHunk": "@@ -97,6 +97,9 @@ public DynamicRealmObject(RealmModel obj) {\n         proxyState.getRealm$realm().checkIfValid();\n \n         long columnKey = proxyState.getRow$realm().getColumnKey(fieldName);\n+        if (proxyState.getRow$realm().isNull(columnKey)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODU5NA==", "bodyText": "The fix seems to indicate the bug impacted all primitive types. We should have tests for all of them instead of just boolean.", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r475438594", "createdAt": "2020-08-24T08:52:11Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1727,4 +1727,23 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableBoolean() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cc0cb4dc44335bab0aaf61670497dfe4fbdfe0b", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/8cc0cb4dc44335bab0aaf61670497dfe4fbdfe0b", "committedDate": "2020-08-24T10:41:12Z", "message": "Fix retrieval of null valued primitive property from dynamic realm"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/a8fb00cf7c586ad9d7e89d0c302b8267d5243799", "committedDate": "2020-08-24T08:26:13Z", "message": "Fix retrieval of null valued primitive property from dynamic realm"}, "afterCommit": {"oid": "8cc0cb4dc44335bab0aaf61670497dfe4fbdfe0b", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/8cc0cb4dc44335bab0aaf61670497dfe4fbdfe0b", "committedDate": "2020-08-24T10:41:12Z", "message": "Fix retrieval of null valued primitive property from dynamic realm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/587a7a4b7597393b0a68ca1bfff03e8f5029f2f9", "committedDate": "2020-08-27T13:06:49Z", "message": "Testing retrieval of null values for all types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzQ0NTg3", "url": "https://github.com/realm/realm-java/pull/7053#pullrequestreview-481744587", "createdAt": "2020-09-03T11:26:36Z", "commit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzQ2NTI2", "url": "https://github.com/realm/realm-java/pull/7053#pullrequestreview-481746526", "createdAt": "2020-09-03T11:29:38Z", "commit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyOTozOFrOHMiT_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo1OTo1NFrOHMjTEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNzEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Crash when retrieving null valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))\n          \n          \n            \n            * Crash when retrieving `null` valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482907133", "createdAt": "2020-09-03T11:29:38Z", "author": {"login": "cmelchior"}, "path": "CHANGELOG.md", "diffHunk": "@@ -7,6 +7,7 @@\n * [ObjectServer] Calling `SyncManager.refreshConnections()` did not correctly refresh connections in all cases, which could delay reconnects up to 5 minutes. (Issue [#7003](https://github.com/realm/realm-java/issues/7003))\n * Upgrading the file format result did in some cases not work correctly. This could result in a number of crashes, e.g. `FORMAT_UPGRADE_REQUIRED`. (Issue [#6889](https://github.com/realm/realm-java/issues/6889), since 7.0.0)  \n * Bug in memory mapping management. This bug could result in multiple different asserts as well as segfaults. In many cases stack backtraces would include members of the EncyptedFileMapping near the top - even if encryption was not used at all. In other cases asserts or crashes would be in methods reading an array header or array element. In all cases the application would terminate immediately. (Issue [#3838](https://github.com/realm/realm-core/pull/3838), since 7.0.0)\n+* Crash when retrieving null valued primitive fields from dynamic realm. (Issue [#7025](https://github.com/realm/realm-java/issues/7025))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMTM4NQ==", "bodyText": "These tests do not seem related in a test named getNullableFields Lists can never be null and I hope that adding null is tested elsewhere, if not, it should probably be in its own test?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482921385", "createdAt": "2020-09-03T11:56:30Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());\n+            assertNull(primitiveNullables.getFieldInt());\n+            assertNull(primitiveNullables.getFieldFloat());\n+            assertNull(primitiveNullables.getFieldDouble());\n+            assertNull(primitiveNullables.getFieldString());\n+            assertNull(primitiveNullables.getFieldBinary());\n+            assertNull(primitiveNullables.getFieldDate());\n+\n+            realm.delete(AllJavaTypes.class);\n+            AllJavaTypes allJavaTypes = realm.createObject(AllJavaTypes.class, UUID.randomUUID().getLeastSignificantBits());\n+\n+            assertNull(allJavaTypes.getFieldObject());\n+            allJavaTypes.getFieldBooleanList().add(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMjY1NA==", "bodyText": "all of these should be tested below?", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482922654", "createdAt": "2020-09-03T11:58:48Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java", "diffHunk": "@@ -1629,4 +1631,95 @@ public void run() {\n         thread.start();\n         TestHelper.awaitOrFail(threadFinished);\n     }\n+\n+    @Test\n+    public void getNullableFields() {\n+        realm.executeTransaction(realm -> {\n+            NullablePrimitiveFields primitiveNullables = realm.createObject(NullablePrimitiveFields.class);\n+            primitiveNullables.setFieldBoolean(null);\n+\n+            assertNull(primitiveNullables.getFieldBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "587a7a4b7597393b0a68ca1bfff03e8f5029f2f9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMzI4MQ==", "bodyText": "No, those tests should be fine", "url": "https://github.com/realm/realm-java/pull/7053#discussion_r482923281", "createdAt": "2020-09-03T11:59:54Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java", "diffHunk": "@@ -97,6 +97,9 @@ public DynamicRealmObject(RealmModel obj) {\n         proxyState.getRealm$realm().checkIfValid();\n \n         long columnKey = proxyState.getRow$realm().getColumnKey(fieldName);\n+        if (proxyState.getRow$realm().isNull(columnKey)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzODMxMQ=="}, "originalCommit": {"oid": "a8fb00cf7c586ad9d7e89d0c302b8267d5243799"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbd78cb5a0d977bc612d493b2209390cce0a4499", "author": {"user": {"login": "rorbech", "name": "Claus R\u00f8rbech"}}, "url": "https://github.com/realm/realm-java/commit/bbd78cb5a0d977bc612d493b2209390cce0a4499", "committedDate": "2020-09-03T13:16:20Z", "message": "Update CHANGELOG.md\n\nCo-authored-by: Christian Melchior <christian@ilios.dk>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2336, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}