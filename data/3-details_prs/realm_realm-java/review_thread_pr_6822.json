{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMTE2ODg0", "number": 6822, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMjo1OToxMVrOD4XFVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo1MToyM1rOEGo4lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDI1MDQ0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMjo1OToxMVrOGPJEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMzoyNDozM1rOGPJmBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUzMDQ5NA==", "bodyText": "I guess this is not set if we are not running the emulator!?", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418530494", "createdAt": "2020-05-01T12:59:11Z", "author": {"login": "rorbech"}, "path": "Jenkinsfile", "diffHunk": "@@ -155,6 +164,7 @@ try {\n           archiveServerLogs(mongoDbRealmContainer.id, mongoDbRealmCommandServerContainer.id)\n           mongoDbRealmContainer.stop()\n           mongoDbRealmCommandServerContainer.stop()\n+          emulatorContainer.stop()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ffd86beea4b29ca2fd557ca0c05dc095550a5b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUzOTAxNA==", "bodyText": "Good point \ud83d\udc4d", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418539014", "createdAt": "2020-05-01T13:24:33Z", "author": {"login": "cmelchior"}, "path": "Jenkinsfile", "diffHunk": "@@ -155,6 +164,7 @@ try {\n           archiveServerLogs(mongoDbRealmContainer.id, mongoDbRealmCommandServerContainer.id)\n           mongoDbRealmContainer.stop()\n           mongoDbRealmCommandServerContainer.stop()\n+          emulatorContainer.stop()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUzMDQ5NA=="}, "originalCommit": {"oid": "88ffd86beea4b29ca2fd557ca0c05dc095550a5b"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNjE5Mjc1OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMTo1MDoxNVrOGPa-7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOToyNDoyMFrOGPhz-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyMzkxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Branches that are \"important\", so if the do not compile they will generate a Slack notification\n          \n          \n            \n            // Branches that are \"important\", so if they do not compile they will generate a Slack notification", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418823918", "createdAt": "2020-05-02T01:50:15Z", "author": {"login": "nhachicha"}, "path": "Jenkinsfile", "diffHunk": "@@ -5,11 +5,19 @@ import groovy.json.JsonOutput\n def buildSuccess = false\n def mongoDbRealmContainer = null\n def mongoDbRealmCommandServerContainer = null\n+def emulatorContainer = null\n def dockerNetworkId = UUID.randomUUID().toString()\n-def releaseBranches = ['master', 'next-major', 'v10'] // Branches from which we release SNAPSHOT's\n+// Branches from which we release SNAPSHOT's.\n+// Only release branches need to run on actual hardware.\n+def releaseBranches = ['master', 'next-major', 'v10']\n+// Branches that are \"important\", so if the do not compile they will generate a Slack notification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyNDI0Mg==", "bodyText": "is the slack bot fixed? or is it pointing to the old Realm.io Slack?", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418824242", "createdAt": "2020-05-02T01:50:58Z", "author": {"login": "nhachicha"}, "path": "Jenkinsfile", "diffHunk": "@@ -5,11 +5,19 @@ import groovy.json.JsonOutput\n def buildSuccess = false\n def mongoDbRealmContainer = null\n def mongoDbRealmCommandServerContainer = null\n+def emulatorContainer = null\n def dockerNetworkId = UUID.randomUUID().toString()\n-def releaseBranches = ['master', 'next-major', 'v10'] // Branches from which we release SNAPSHOT's\n+// Branches from which we release SNAPSHOT's.\n+// Only release branches need to run on actual hardware.\n+def releaseBranches = ['master', 'next-major', 'v10']\n+// Branches that are \"important\", so if the do not compile they will generate a Slack notification", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyMzkxOA=="}, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzNTgwMg==", "bodyText": "No, it isn't fixed. I need to look at that as well.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418935802", "createdAt": "2020-05-02T09:24:20Z", "author": {"login": "cmelchior"}, "path": "Jenkinsfile", "diffHunk": "@@ -5,11 +5,19 @@ import groovy.json.JsonOutput\n def buildSuccess = false\n def mongoDbRealmContainer = null\n def mongoDbRealmCommandServerContainer = null\n+def emulatorContainer = null\n def dockerNetworkId = UUID.randomUUID().toString()\n-def releaseBranches = ['master', 'next-major', 'v10'] // Branches from which we release SNAPSHOT's\n+// Branches from which we release SNAPSHOT's.\n+// Only release branches need to run on actual hardware.\n+def releaseBranches = ['master', 'next-major', 'v10']\n+// Branches that are \"important\", so if the do not compile they will generate a Slack notification", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyMzkxOA=="}, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNjIyNTI5OnYy", "diffSide": "LEFT", "path": "Dockerfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMTo1OTo0MFrOGPbNQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOToyNToxNVrOGPh0UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyNzU4Nw==", "bodyText": "You're running a 32-bit emulator, are you sure the i386 arch is no longer needed?", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418827587", "createdAt": "2020-05-02T01:59:40Z", "author": {"login": "nhachicha"}, "path": "Dockerfile", "diffHunk": "@@ -16,23 +18,24 @@ ENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}\n ENV PATH ${PATH}:${NDK_HOME}\n ENV NDK_CCACHE /usr/bin/ccache\n \n-# The 32 bit binaries because aapt requires it\n-# `file` is need by the script that creates NDK toolchains\n # Keep the packages in alphabetical order to make it easy to avoid duplication\n-RUN DEBIAN_FRONTEND=noninteractive dpkg --add-architecture i386 \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzNTg4OA==", "bodyText": "I'm not sure of much right now. It looked like the old 32-bit behavior was required by the old version of AAPT. So it should be safe to switch to 64-bit on the OS.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418935888", "createdAt": "2020-05-02T09:25:15Z", "author": {"login": "cmelchior"}, "path": "Dockerfile", "diffHunk": "@@ -16,23 +18,24 @@ ENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}\n ENV PATH ${PATH}:${NDK_HOME}\n ENV NDK_CCACHE /usr/bin/ccache\n \n-# The 32 bit binaries because aapt requires it\n-# `file` is need by the script that creates NDK toolchains\n # Keep the packages in alphabetical order to make it easy to avoid duplication\n-RUN DEBIAN_FRONTEND=noninteractive dpkg --add-architecture i386 \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyNzU4Nw=="}, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNjIyOTI2OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMjowMDo1M1rOGPbO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOToyODozOVrOGPh1iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyODAwMA==", "bodyText": "why no 64-bit image for the emulator?", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418828000", "createdAt": "2020-05-02T02:00:53Z", "author": {"login": "nhachicha"}, "path": "Jenkinsfile", "diffHunk": "@@ -72,89 +89,30 @@ try {\n \n             // Lock required around all usages of Gradle as it isn't\n             // able to share its cache between builds.\n-            lock(\"${env.NODE_NAME}-android\") {\n-\n-              stage('JVM tests') {\n-                try {\n-                  withCredentials([[$class: 'FileBinding', credentialsId: 'c0cc8f9e-c3f1-4e22-b22f-6568392e26ae', variable: 'S3CFG']]) {\n-                    sh \"chmod +x gradlew && ./gradlew assemble check javadoc -Ps3cfg=${env.S3CFG} ${abiFilter} --stacktrace\"\n-                  }\n-                } finally {\n-                  storeJunitResults 'realm/realm-annotations-processor/build/test-results/test/TEST-*.xml'\n-                  storeJunitResults 'examples/unitTestExample/build/test-results/**/TEST-*.xml'\n-                  step([$class: 'LintPublisher'])\n-                }\n+            if (useEmulator) {\n+              // TODO: We should wait until the emulator is online. For now assume it starts fast enough\n+              // before the tests will run.\n+              sh '''yes \"\\n\" | avdmanager create avd -n CIEmulator -k \"system-images;android-29;default;x86\" --force'''", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzNjIwMQ==", "bodyText": "I'm running into all sorts of problems with the 64-bit emulator. I'm running into this error described here: mingchen/docker-android-build-box#18\nSo far, it seems the only solution is running arm emulators instead on Docker. I really hope we don't need to do that because I suspect that would be unbearable slow.\nFrom what I can tell, the only other solution is havin dedicated machines that run emulators, because then they can run as part of the host.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r418936201", "createdAt": "2020-05-02T09:28:39Z", "author": {"login": "cmelchior"}, "path": "Jenkinsfile", "diffHunk": "@@ -72,89 +89,30 @@ try {\n \n             // Lock required around all usages of Gradle as it isn't\n             // able to share its cache between builds.\n-            lock(\"${env.NODE_NAME}-android\") {\n-\n-              stage('JVM tests') {\n-                try {\n-                  withCredentials([[$class: 'FileBinding', credentialsId: 'c0cc8f9e-c3f1-4e22-b22f-6568392e26ae', variable: 'S3CFG']]) {\n-                    sh \"chmod +x gradlew && ./gradlew assemble check javadoc -Ps3cfg=${env.S3CFG} ${abiFilter} --stacktrace\"\n-                  }\n-                } finally {\n-                  storeJunitResults 'realm/realm-annotations-processor/build/test-results/test/TEST-*.xml'\n-                  storeJunitResults 'examples/unitTestExample/build/test-results/**/TEST-*.xml'\n-                  step([$class: 'LintPublisher'])\n-                }\n+            if (useEmulator) {\n+              // TODO: We should wait until the emulator is online. For now assume it starts fast enough\n+              // before the tests will run.\n+              sh '''yes \"\\n\" | avdmanager create avd -n CIEmulator -k \"system-images;android-29;default;x86\" --force'''", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODgyODAwMA=="}, "originalCommit": {"oid": "439f4f08fd913e5cb65d6fc6602d1c8081a0707e"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzkxOTYxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/syncIntegrationTest/kotlin/io/realm/SyncSessionTests.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzozNzozN1rOGljNkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzozNzozN1rOGljNkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAyNzQwOQ==", "bodyText": "All tests in SyncSessionTests should be fixed by #6954", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r442027409", "createdAt": "2020-06-18T07:37:37Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/syncIntegrationTest/kotlin/io/realm/SyncSessionTests.kt", "diffHunk": "@@ -111,6 +111,7 @@ class SyncSessionTests {\n     }\n \n     @Test\n+    @Ignore(\"FIXME\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcb5a66212af1fb05085abcb637f2ff156a345cf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzk0MjE3OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SyncedRealmTests.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo0NDowNVrOGljbsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo0NDowNVrOGljbsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMTAyNA==", "bodyText": "Some of these tests should be fixed by #6954. Still looking at the rest of them.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r442031024", "createdAt": "2020-06-18T07:44:05Z", "author": {"login": "rorbech"}, "path": "realm/realm-library/src/androidTestObjectServer/kotlin/io/realm/mongodb/sync/SyncedRealmTests.kt", "diffHunk": "@@ -67,6 +67,7 @@ class SyncedRealmTests {\n \n     // Smoke test for Sync. Waiting for working Sync support.\n     @Test\n+    @Ignore(\"FIXME\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcb5a66212af1fb05085abcb637f2ff156a345cf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzk1NTQ4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo0Nzo1N1rOGljj9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo0Nzo1N1rOGljj9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzMzE0MA==", "bodyText": "Nitpick, but I guess nodeSelector would be more meaningful.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r442033140", "createdAt": "2020-06-18T07:47:57Z", "author": {"login": "rorbech"}, "path": "Jenkinsfile", "diffHunk": "@@ -4,14 +4,20 @@\n \n import groovy.json.JsonOutput\n \n-def buildSuccess = false\n-def mongoDbRealmContainer = null\n-def mongoDbRealmCommandServerContainer = null\n-def dockerNetworkId = UUID.randomUUID().toString()\n-def releaseBranches = ['master', 'next-major', 'v10'] // Branches from which we release SNAPSHOT's\n-def currentBranch = env.CHANGE_BRANCH\n+buildSuccess = false\n+mongoDbRealmContainer = null\n+mongoDbRealmCommandServerContainer = null\n+emulatorContainer = null\n+dockerNetworkId = UUID.randomUUID().toString()\n+// Branches from which we release SNAPSHOT's. Only release branches need to run on actual hardware.\n+releaseBranches = ['master', 'next-major', 'v10']\n+// Branches that are \"important\", so if they do not compile they will generate a Slack notification\n+slackNotificationBranches = [ 'master', 'releases', 'next-major', 'v10' ]\n+currentBranch = env.CHANGE_BRANCH\n+// 'android' nodes have android devices attached and 'brix' are physical machines in Copenhagen.\n+nodeName = (releaseBranches.contains(currentBranch)) ? 'android' : 'docker-cph-03' // Switch to `brix` when all CPH nodes work: https://jira.mongodb.org/browse/RCI-14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcb5a66212af1fb05085abcb637f2ff156a345cf"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mzk2NzU3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo1MToyM1rOGljrnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNzo1Nzo0OVrOGlj6CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzNTEwMA==", "bodyText": "Where does this come from? Assumes it is built into the emulator image.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r442035100", "createdAt": "2020-06-18T07:51:23Z", "author": {"login": "rorbech"}, "path": "Jenkinsfile", "diffHunk": "@@ -29,16 +35,21 @@ try {\n         }\n \n         // Toggles for PR vs. Master builds.\n-        // For PR's, we just build for arm-v7a and run unit tests for the ObjectServer variant\n-        // A full build is done on `master`.\n-        // TODO Once Android emulators are available on all nodes, we can switch to x86 builds\n-        // on PR's for even more throughput.\n+        // - For PR's, we favor speed > absolute correctness. So we just build for x86, use an\n+        //   emulator and run unit tests for the ObjectServer variant.\n+        // - For branches from which we make releases, we build all architectures and run tests\n+        //   on an actual device.\n+        def useEmulator = false\n+        def emulatorImage = \"\"\n         def abiFilter = \"\"\n         def instrumentationTestTarget = \"connectedAndroidTest\"\n+        def deviceSerial = \"\"\n         if (!releaseBranches.contains(currentBranch)) {\n-          abiFilter = \"-PbuildTargetABIs=armeabi-v7a\"\n+          useEmulator = true\n+          emulatorImage = \"system-images;android-29;default;x86\"\n+          abiFilter = \"-PbuildTargetABIs=x86\"\n           instrumentationTestTarget = \"connectedObjectServerDebugAndroidTest\"\n-          // Run in debug more for better error reporting\n+          deviceSerial = \"emulator-5554\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcb5a66212af1fb05085abcb637f2ff156a345cf"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzODc5Mg==", "bodyText": "Yes, it is the default serial id.", "url": "https://github.com/realm/realm-java/pull/6822#discussion_r442038792", "createdAt": "2020-06-18T07:57:49Z", "author": {"login": "cmelchior"}, "path": "Jenkinsfile", "diffHunk": "@@ -29,16 +35,21 @@ try {\n         }\n \n         // Toggles for PR vs. Master builds.\n-        // For PR's, we just build for arm-v7a and run unit tests for the ObjectServer variant\n-        // A full build is done on `master`.\n-        // TODO Once Android emulators are available on all nodes, we can switch to x86 builds\n-        // on PR's for even more throughput.\n+        // - For PR's, we favor speed > absolute correctness. So we just build for x86, use an\n+        //   emulator and run unit tests for the ObjectServer variant.\n+        // - For branches from which we make releases, we build all architectures and run tests\n+        //   on an actual device.\n+        def useEmulator = false\n+        def emulatorImage = \"\"\n         def abiFilter = \"\"\n         def instrumentationTestTarget = \"connectedAndroidTest\"\n+        def deviceSerial = \"\"\n         if (!releaseBranches.contains(currentBranch)) {\n-          abiFilter = \"-PbuildTargetABIs=armeabi-v7a\"\n+          useEmulator = true\n+          emulatorImage = \"system-images;android-29;default;x86\"\n+          abiFilter = \"-PbuildTargetABIs=x86\"\n           instrumentationTestTarget = \"connectedObjectServerDebugAndroidTest\"\n-          // Run in debug more for better error reporting\n+          deviceSerial = \"emulator-5554\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAzNTEwMA=="}, "originalCommit": {"oid": "dcb5a66212af1fb05085abcb637f2ff156a345cf"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 672, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}