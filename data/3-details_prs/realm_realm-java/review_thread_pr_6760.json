{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODkyNjQx", "number": 6760, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTo1OTo0N1rODjwb_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDoxOTozOVrODjw0dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODIwMzUxOnYy", "diffSide": "RIGHT", "path": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTo1OTo0N1rOFvvdMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTo1OTo0N1rOFvvdMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwNDkxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // String, short, int, long and must only be present one time.\n          \n          \n            \n                // String, short, int and long must only be present one time.", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385604914", "createdAt": "2020-02-28T09:59:47Z", "author": {"login": "nhachicha"}, "path": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.kt", "diffHunk": "@@ -698,7 +698,9 @@ class ClassMetaData(env: ProcessingEnvironment, typeMirrors: TypeMirrors, privat\n     }\n \n     // The field has the @PrimaryKey annotation. It is only valid for\n-    // String, short, int, long and must only be present one time\n+    // String, short, int, long and must only be present one time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODIwNDczOnYy", "diffSide": "RIGHT", "path": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDowMDoxM1rOFvvd8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDowNzozNlrOFvvsrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwNTEwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // From Core 6 primary keys are not indexed pr default anymore as\n          \n          \n            \n                // From Core 6 primary keys are not indexed by default anymore as", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385605107", "createdAt": "2020-02-28T10:00:13Z", "author": {"login": "nhachicha"}, "path": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.kt", "diffHunk": "@@ -698,7 +698,9 @@ class ClassMetaData(env: ProcessingEnvironment, typeMirrors: TypeMirrors, privat\n     }\n \n     // The field has the @PrimaryKey annotation. It is only valid for\n-    // String, short, int, long and must only be present one time\n+    // String, short, int, long and must only be present one time.\n+    // From Core 6 primary keys are not indexed pr default anymore as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwODg3Nw==", "bodyText": "Actually in Core 6 String primary keys don\u2019t need an Index, and in Core 10 none of the primary keys do", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385608877", "createdAt": "2020-02-28T10:07:36Z", "author": {"login": "nhachicha"}, "path": "realm/realm-annotations-processor/src/main/java/io/realm/processor/ClassMetaData.kt", "diffHunk": "@@ -698,7 +698,9 @@ class ClassMetaData(env: ProcessingEnvironment, typeMirrors: TypeMirrors, privat\n     }\n \n     // The field has the @PrimaryKey annotation. It is only valid for\n-    // String, short, int, long and must only be present one time\n+    // String, short, int, long and must only be present one time.\n+    // From Core 6 primary keys are not indexed pr default anymore as", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwNTEwNw=="}, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODI1MjgxOnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDoxNDo1OFrOFvv6dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDoyMTo0OFrOFvwGiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxMjQwNQ==", "bodyText": "we're passing twice the refresh token as a parameter? \u2639\ufe0f  shouldn't the second parameter be the access_token?", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385612405", "createdAt": "2020-02-28T10:14:58Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "diffHunk": "@@ -68,12 +68,13 @@ JNIEXPORT jstring JNICALL Java_io_realm_RealmFileUserStore_nativeGetUser(JNIEnv*\n }\n \n JNIEXPORT void JNICALL Java_io_realm_RealmFileUserStore_nativeUpdateOrCreateUser(JNIEnv* env, jclass,\n-                                                                                 jstring j_user_id, jstring json_token,\n+                                                                                 jstring j_user_id,\n+                                                                                 jstring j_refresh_json_token,\n                                                                                  jstring j_auth_url)\n {\n     try {\n-        JStringAccessor user_json_token(env, json_token); // throws\n-        SyncManager::shared().get_user(create_sync_user_identifier(env, j_user_id, j_auth_url), user_json_token);\n+        JStringAccessor refresh_json_token(env, j_refresh_json_token); // throws\n+        SyncManager::shared().get_user(create_sync_user_identifier(env, j_user_id, j_auth_url), refresh_json_token, refresh_json_token);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxNTQ5Nw==", "bodyText": "Yes, I discussed this with Jason. This is just a temporary workaround until we use Stitch for Authentication.", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385615497", "createdAt": "2020-02-28T10:21:48Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/io_realm_RealmFileUserStore.cpp", "diffHunk": "@@ -68,12 +68,13 @@ JNIEXPORT jstring JNICALL Java_io_realm_RealmFileUserStore_nativeGetUser(JNIEnv*\n }\n \n JNIEXPORT void JNICALL Java_io_realm_RealmFileUserStore_nativeUpdateOrCreateUser(JNIEnv* env, jclass,\n-                                                                                 jstring j_user_id, jstring json_token,\n+                                                                                 jstring j_user_id,\n+                                                                                 jstring j_refresh_json_token,\n                                                                                  jstring j_auth_url)\n {\n     try {\n-        JStringAccessor user_json_token(env, json_token); // throws\n-        SyncManager::shared().get_user(create_sync_user_identifier(env, j_user_id, j_auth_url), user_json_token);\n+        JStringAccessor refresh_json_token(env, j_refresh_json_token); // throws\n+        SyncManager::shared().get_user(create_sync_user_identifier(env, j_user_id, j_auth_url), refresh_json_token, refresh_json_token);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxMjQwNQ=="}, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODI2NjE1OnYy", "diffSide": "RIGHT", "path": "realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDoxOTozOVrOFvwCyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDoyMjoyMlrOFvwHlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxNDUzOQ==", "bodyText": "what happens if the access_token is expired?", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385614539", "createdAt": "2020-02-28T10:19:39Z", "author": {"login": "nhachicha"}, "path": "realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp", "diffHunk": "@@ -346,7 +346,8 @@ JNIEXPORT jstring JNICALL Java_io_realm_internal_OsRealmConfig_nativeCreateAndSe\n         if (!user) {\n             JStringAccessor realm_auth_url(env, j_auth_url);\n             JStringAccessor refresh_token(env, j_refresh_token);\n-            user = SyncManager::shared().get_user(sync_user_identifier, refresh_token);\n+            JStringAccessor access_token(env, j_access_token);\n+            user = SyncManager::shared().get_user(sync_user_identifier, refresh_token, access_token);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxNTc2Nw==", "bodyText": "This logic will change once we connect using Stitch. Right now this is just a temporary workaround.", "url": "https://github.com/realm/realm-java/pull/6760#discussion_r385615767", "createdAt": "2020-02-28T10:22:22Z", "author": {"login": "cmelchior"}, "path": "realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp", "diffHunk": "@@ -346,7 +346,8 @@ JNIEXPORT jstring JNICALL Java_io_realm_internal_OsRealmConfig_nativeCreateAndSe\n         if (!user) {\n             JStringAccessor realm_auth_url(env, j_auth_url);\n             JStringAccessor refresh_token(env, j_refresh_token);\n-            user = SyncManager::shared().get_user(sync_user_identifier, refresh_token);\n+            JStringAccessor access_token(env, j_access_token);\n+            user = SyncManager::shared().get_user(sync_user_identifier, refresh_token, access_token);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYxNDUzOQ=="}, "originalCommit": {"oid": "20bdea97f36c606ac0822179a07db0bdce9d1bab"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 603, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}