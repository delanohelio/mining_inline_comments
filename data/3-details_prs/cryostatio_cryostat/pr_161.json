{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTI3MTM5", "number": 161, "title": "Connectionless Protocols", "bodyText": "(Resubmission of #159 with appropriately-renamed branch)\nSee #155\nThis removes the ConnectionListener interface, thereby removing the statefulness of the WebServer and most Command implementations. Instead, Command implementations which were previously connection-stateful now expect one more argument to be provided (in all cases, as the new first argument), which is the connection specifier string for the target - ie host:port, ip:port, or JMX service URL, the same format previously accepted by the connect command. The WebServer's API endpoints have also been adjusted from ex. /api/v1/recordings/:recordingName to /api/v1/targets/:targetId/recordings/:recordingName. The previous \"stateless\" GET paths for recordings and reports still exist, however they are now only used for retrieving \"archived\" recordings  on-disk.\nIn either an HTTP or WS request scenario, the Command implementation or the WebServer will create a new JMX connection to the target JVM on-demand, keeping the JMX connection open only for as long as is needed to complete the request. This is however an internal implementation detail, not exposed by the API, and so some layer of connection reuse/caching or other optimizations could be made later. There is also currently a locking system that enforces sequential connections and FIFO ordering of JMX connection requests, simply to ensure that no potential issues arise from the implementation changing from maintaining only one long-lived stateful connection to allowing a theoretically unlimited number of active concurrent connections. Once this PR is stabilized and merged, we can investigate the impacts of removing the locking and allowing concurrent JMX connections (with connection reuse, or pooling, or caching/timeout, and other strategies) and modify the internal implementation details as needed.", "createdAt": "2020-05-19T13:40:24Z", "url": "https://github.com/cryostatio/cryostat/pull/161", "merged": true, "mergeCommit": {"oid": "47116a7ee8468e76e0ebba3123cfd00da6eee02a"}, "closed": true, "closedAt": "2020-05-25T16:47:52Z", "author": {"login": "andrewazores"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjK0qMABqjMzNTcwMzg4NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckxF4uAH2gAyNDIwMTI3MTM5OjQ2YWVmOWIwOGYxOTI3MjE2YjBkNTU0N2JlZTg4NTZkOTk3ZjcxZDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a92833ae9c83dc68c8fc9f179f19e519a5b5fb3", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/0a92833ae9c83dc68c8fc9f179f19e519a5b5fb3", "committedDate": "2020-05-20T14:47:46Z", "message": "Add TargetConnectionManager tests"}, "afterCommit": {"oid": "03990f1d69cf000260ef8d5bdfe47e96dd7ad108", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/03990f1d69cf000260ef8d5bdfe47e96dd7ad108", "committedDate": "2020-05-20T15:29:45Z", "message": "Add TargetConnectionManager tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63af4ec119720ef1d671e6a3aed8620ef3c875dd", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/63af4ec119720ef1d671e6a3aed8620ef3c875dd", "committedDate": "2020-05-20T17:09:43Z", "message": "Include hostId parameter in GET reports/recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf4a5f1ba5d5b2ab2ed947a5aa4994cbf55aecd2", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/bf4a5f1ba5d5b2ab2ed947a5aa4994cbf55aecd2", "committedDate": "2020-05-20T17:09:43Z", "message": "Remove internal WebServer recordings state\n\nRemove recordings and downloadCounts maps to move toward a\nnon-connection-oriented WebServer\n\nAlso remove wait-for-download command, which relied upon downloadCounts\nmap and was not necessarily useful anyway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58139b7cdad9740f3232dad422539fcc22a60d98", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/58139b7cdad9740f3232dad422539fcc22a60d98", "committedDate": "2020-05-20T17:09:43Z", "message": "WebServer made non-connection-oriented\n\nWebServer API methods consumed by Command implementations no longer\nassume any connection state. Commands must specify the connection, if\nany. This paves the way for commands which require users to specify the\ntarget as well."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86485343017081e55c31183503ad625c4617c0d", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/b86485343017081e55c31183503ad625c4617c0d", "committedDate": "2020-05-20T17:09:43Z", "message": "Remove redundant block scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc1c70163ee5ad187ffd2fa0625e9ddd845c968", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/9fc1c70163ee5ad187ffd2fa0625e9ddd845c968", "committedDate": "2020-05-20T17:09:43Z", "message": "Apply spotless formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf0be40f7f83517e9f81fd88e026064a222a08b3", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/bf0be40f7f83517e9f81fd88e026064a222a08b3", "committedDate": "2020-05-20T17:09:43Z", "message": "Set up \"connected\" commands to establish their own target connections\n\nAdd methods to base classes AbstractConnectedCommand and\nAbstractRecordingCommand for establishing new connections to target JVMs\nand performing actions using those connections. This allows the commands\nto be executed without first requiring state to track the\n\"active\"/current target connection. The ListCommand is modified to\nbecome stateless this way as a first test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a1e3afe38ed6a7d1a12f9fa12168b2b77258d3c", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/1a1e3afe38ed6a7d1a12f9fa12168b2b77258d3c", "committedDate": "2020-05-20T17:09:43Z", "message": "Start all servers in ContainerJFR main\n\nDo not cascade HttpServer startup through WebServer and do not start\nMessagingServer in module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d937153b6b0f37f80f206d5f104cbaf3375f1256", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d937153b6b0f37f80f206d5f104cbaf3375f1256", "committedDate": "2020-05-20T17:09:43Z", "message": "All \"connected\" commands require a target arg\n\nCommands which operate on a target JVM all require a target arg to be\nprovided, and use a new utility method in their abstract base class to\nestablish target connections on-demand"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55215464077faba87cfc6017f1bc73e6d7347f3a", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/55215464077faba87cfc6017f1bc73e6d7347f3a", "committedDate": "2020-05-20T17:09:43Z", "message": "Apply spotless formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d5b0e2c7994c17d619d39cb2c2b1378de4c0dc8", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/5d5b0e2c7994c17d619d39cb2c2b1378de4c0dc8", "committedDate": "2020-05-20T17:09:43Z", "message": "Remove ConnectionListener interface\n\nRemove now-unused ConnectionListener interface, since connect/disconnect\ncommands no longer exist and the commands and HTTP APIs are\nconnectionless. Also remove is-connected command, which likewise no\nlonger makes sense."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4adb14f5f9f3122200392e0df30baa3139ddf1a", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d4adb14f5f9f3122200392e0df30baa3139ddf1a", "committedDate": "2020-05-20T17:09:43Z", "message": "Apply spotless and spotbugs fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af06b4aa347115c878d52bc6d0e72a1ee7e562a2", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/af06b4aa347115c878d52bc6d0e72a1ee7e562a2", "committedDate": "2020-05-20T17:09:43Z", "message": "Bump required container-jfr-core version\n\nMake available new JFRConnection + Toolkit API enhancements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91601691acb93745521e2b12a9cef41938811cd8", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/91601691acb93745521e2b12a9cef41938811cd8", "committedDate": "2020-05-20T17:09:43Z", "message": "Implement TargetConnectionManager\n\nImplement TargetConnectionManager and refactor Commands and WebServer to\nuse it rather than JFRConnectionToolkit\n\nTargetConnectionManager wraps around the JFRConnectionToolkit and\nprovides facilities for safely creating, using, and cleaning up\nJFRConnections. It also (currently) enforces sequential connections so\nthat ContainerJFR only establishes a single JMX connection to a single\ntarget at any given time."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4765e440950d7b2afcfc80a9d9b692a2659fe760", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/4765e440950d7b2afcfc80a9d9b692a2659fe760", "committedDate": "2020-05-20T17:09:43Z", "message": "Rename API paths from hosts to targets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cee6aabe76899438e90a18e2ccb01b68dfddfbea", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/cee6aabe76899438e90a18e2ccb01b68dfddfbea", "committedDate": "2020-05-20T17:09:43Z", "message": "Re-add target-less HTTP API for saved recordings (only)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ef30d01bd5371e54eb3d543648cfb224f0dc81", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/69ef30d01bd5371e54eb3d543648cfb224f0dc81", "committedDate": "2020-05-20T17:09:43Z", "message": "Ensure lock is released when reports are generated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10307b6cbce7f17a6fce0e12d75d836a1e9cbf1b", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/10307b6cbce7f17a6fce0e12d75d836a1e9cbf1b", "committedDate": "2020-05-20T17:09:43Z", "message": "Ensure WebServer reports correct HTTP/HTTPS schemes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c771d890d664290acfc21e719ec895dedb4d97e1", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/c771d890d664290acfc21e719ec895dedb4d97e1", "committedDate": "2020-05-20T17:09:43Z", "message": "Use JMX URL for target ID rather than host:port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3186123dd1077a6a60754f27a006ad4e21b63702", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/3186123dd1077a6a60754f27a006ad4e21b63702", "committedDate": "2020-05-20T17:09:43Z", "message": "Rename hostId -> targetId\n\nOnly affects internal variable and method naming, but for consistency's\nsake, renames hostId to targetId to match API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c0ea3a80d8687d2589097197070e402b221bd3", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d0c0ea3a80d8687d2589097197070e402b221bd3", "committedDate": "2020-05-20T17:09:43Z", "message": "Add test for commands handling TCM throws"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf53d15d11148cf1e9c8d2946cef02808d0dc67a", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/cf53d15d11148cf1e9c8d2946cef02808d0dc67a", "committedDate": "2020-05-20T17:09:43Z", "message": "Remove redundant blank string checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8bcefe0ba8567c33ef9d949207017cf0cb1a7d2", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/f8bcefe0ba8567c33ef9d949207017cf0cb1a7d2", "committedDate": "2020-05-20T17:09:43Z", "message": "Add \"mixin\" interface for target ID validation testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a794c934fd52bf1183d6f30eb748da0cf7c7c3", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/50a794c934fd52bf1183d6f30eb748da0cf7c7c3", "committedDate": "2020-05-20T17:09:43Z", "message": "Fix delete-saved argument validation IOOB bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41180df6d6e6962d2db119f1573e2e4f31672fd4", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/41180df6d6e6962d2db119f1573e2e4f31672fd4", "committedDate": "2020-05-20T17:09:43Z", "message": "Add \"mixin\" interface for recording name validation testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3041cac373cd07fb3be31970f9635426c2043ea5", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/3041cac373cd07fb3be31970f9635426c2043ea5", "committedDate": "2020-05-20T17:09:43Z", "message": "Add \"mixin\" interface for event specifier validation testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0531db8736e33cb72ab7eeff3517da7c549a2335", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/0531db8736e33cb72ab7eeff3517da7c549a2335", "committedDate": "2020-05-20T17:09:43Z", "message": "Ensure empty strings are tested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8f860babb0fbe470ca400c0fbe4deba656c40a", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/ee8f860babb0fbe470ca400c0fbe4deba656c40a", "committedDate": "2020-05-20T17:09:43Z", "message": "Add test for duplicate recording save renaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adad89ab3fb69e1634d8bc468b659d9985826a2d", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/adad89ab3fb69e1634d8bc468b659d9985826a2d", "committedDate": "2020-05-20T17:09:43Z", "message": "Add ScanTargets command tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40833766ed7c79e55e93786d956e6b52e4fedd0f", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/40833766ed7c79e55e93786d956e6b52e4fedd0f", "committedDate": "2020-05-20T17:09:43Z", "message": "Enable connection reuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90", "committedDate": "2020-05-20T17:09:43Z", "message": "Add TargetConnectionManager tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03990f1d69cf000260ef8d5bdfe47e96dd7ad108", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/03990f1d69cf000260ef8d5bdfe47e96dd7ad108", "committedDate": "2020-05-20T15:29:45Z", "message": "Add TargetConnectionManager tests"}, "afterCommit": {"oid": "d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90", "committedDate": "2020-05-20T17:09:43Z", "message": "Add TargetConnectionManager tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711598c8e10cdfc87073dfc5d47f3abd1c8a98ab", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/711598c8e10cdfc87073dfc5d47f3abd1c8a98ab", "committedDate": "2020-05-22T20:18:09Z", "message": "Update COMMANDS.md for new connectionless command channel protocol"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTgzNzc0", "url": "https://github.com/cryostatio/cryostat/pull/161#pullrequestreview-417183774", "createdAt": "2020-05-22T21:08:48Z", "commit": {"oid": "d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTowODo0OFrOGZjqzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMTowODo0OFrOGZjqzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MTk4MA==", "bodyText": "Is this new argument to connect methods a list of cleanup functions to invoke? I suppose there will be a corresponding container-jfr-core PR?", "url": "https://github.com/cryostatio/cryostat/pull/161#discussion_r429451980", "createdAt": "2020-05-22T21:08:48Z", "author": {"login": "ebaron"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/net/TargetConnectionManager.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.net;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import javax.management.remote.JMXServiceURL;\n+\n+import com.redhat.rhjmc.containerjfr.core.log.Logger;\n+import com.redhat.rhjmc.containerjfr.core.net.JFRConnection;\n+import com.redhat.rhjmc.containerjfr.core.net.JFRConnectionToolkit;\n+\n+public class TargetConnectionManager {\n+\n+    public static final Pattern HOST_PORT_PAIR_PATTERN =\n+            Pattern.compile(\"^([^:\\\\s]+)(?::(\\\\d{1,5}))?$\");\n+\n+    private final Logger logger;\n+    // FIXME verify concurrent connection safety and remove locking\n+    private final ReentrantLock lock = new ReentrantLock();\n+    // maintain a short-lived cache of connections to allow nested ConnectedTasks\n+    // without having to manage connection reuse\n+    private final Map<String, JFRConnection> activeConnections = new HashMap<>();\n+    private final JFRConnectionToolkit jfrConnectionToolkit;\n+\n+    TargetConnectionManager(Logger logger, JFRConnectionToolkit jfrConnectionToolkit) {\n+        this.logger = logger;\n+        this.jfrConnectionToolkit = jfrConnectionToolkit;\n+    }\n+\n+    public <T> T executeConnectedTask(String targetId, ConnectedTask<T> task) throws Exception {\n+        try {\n+            if (activeConnections.containsKey(targetId)) {\n+                return task.execute(activeConnections.get(targetId));\n+            } else {\n+                try (JFRConnection connection = connect(targetId)) {\n+                    activeConnections.put(targetId, connection);\n+                    return task.execute(connection);\n+                }\n+            }\n+        } finally {\n+            activeConnections.remove(targetId);\n+        }\n+    }\n+\n+    /**\n+     * Returns a new JFRConnection to the specified Target. This does not do any connection reuse or\n+     * other management, so clients are responsible for cleaning up the connection when they are\n+     * finished with it. When possible, clients should use executeConnectedTask instead, which does\n+     * perform automatic cleanup when the provided task has been completed.\n+     */\n+    public JFRConnection connect(String targetId) throws Exception {\n+        try {\n+            return attemptConnectAsJMXServiceURL(targetId);\n+        } catch (Exception e) {\n+            return attemptConnectAsHostPortPair(targetId);\n+        }\n+    }\n+\n+    private JFRConnection attemptConnectAsJMXServiceURL(String url) throws Exception {\n+        return connect(new JMXServiceURL(url));\n+    }\n+\n+    private JFRConnection attemptConnectAsHostPortPair(String s) throws Exception {\n+        Matcher m = HOST_PORT_PAIR_PATTERN.matcher(s);\n+        if (!m.find()) {\n+            return null;\n+        }\n+        String host = m.group(1);\n+        String port = m.group(2);\n+        if (port == null) {\n+            port = \"9091\";\n+        }\n+        return connect(host, Integer.parseInt(port));\n+    }\n+\n+    private JFRConnection connect(JMXServiceURL url) throws Exception {\n+        logger.trace(String.format(\"Locking connection %s\", url.toString()));\n+        lock.lockInterruptibly();\n+        return jfrConnectionToolkit.connect(\n+                url,\n+                List.of(\n+                        lock::unlock,\n+                        () ->\n+                                logger.trace(\n+                                        String.format(\"Unlocking connection %s\", url.toString()))));\n+    }\n+\n+    private JFRConnection connect(String host, int port) throws Exception {\n+        logger.trace(String.format(\"Locking connection %s:%d\", host, port));\n+        lock.lockInterruptibly();\n+        return jfrConnectionToolkit.connect(\n+                host,\n+                port,\n+                List.of(\n+                        lock::unlock,\n+                        () ->\n+                                logger.trace(\n+                                        String.format(\"Unlocking connection %s:%d\", host, port))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzA4ODY0", "url": "https://github.com/cryostatio/cryostat/pull/161#pullrequestreview-417708864", "createdAt": "2020-05-25T13:24:42Z", "commit": {"oid": "d2d6d5349cde92efa794ad5b0e0d0e14ebe7ca90"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46aef9b08f1927216b0d5547bee8856d997f71d8", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/46aef9b08f1927216b0d5547bee8856d997f71d8", "committedDate": "2020-05-25T14:39:08Z", "message": "Update web-client submodule to use connectionless-API-compatible tag"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3142, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}