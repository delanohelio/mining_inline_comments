{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjE3OTkx", "number": 215, "title": "Unify API responses to only contain JMX service URLs", "bodyText": "#183", "createdAt": "2020-07-22T16:13:49Z", "url": "https://github.com/cryostatio/cryostat/pull/215", "merged": true, "mergeCommit": {"oid": "63314cec8a1dcb887c42752ec37703951d1b3edd"}, "closed": true, "closedAt": "2020-08-05T19:50:35Z", "author": {"login": "Alexjsenn"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3eZ9_AFqTQ1MzU0MDM0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8AsoKgFqTQ2MTk3NDMxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQwMzQ5", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453540349", "createdAt": "2020-07-22T17:37:25Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozNzoyNVrOG1tIBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozNzoyNVrOG1tIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzA0NQ==", "bodyText": "The point of the change is to ensure that all PlatformClients report JMXServiceURLs, right? So, should the String connectUrl here perhaps be replaced by a JMXServiceURL?", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458967045", "createdAt": "2020-07-22T17:37:25Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -49,16 +49,14 @@\n \n     private final String connectUrl;\n     private final String alias;\n-    private final int port;\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n+    public ServiceRef(String connectUrl) {\n+        this(connectUrl, connectUrl);\n     }\n \n-    public ServiceRef(String connectUrl, String alias, int port) {\n+    public ServiceRef(String connectUrl, String alias) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQwNTA2", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453540506", "createdAt": "2020-07-22T17:37:37Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozNzozN1rOG1tIiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozNzozN1rOG1tIiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzE3Nw==", "bodyText": "localhost probably isn't a valid JMXServiceURL", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458967177", "createdAt": "2020-07-22T17:37:37Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/SelfDiscoveryPlatformClient.java", "diffHunk": "@@ -47,8 +47,7 @@\n \n class SelfDiscoveryPlatformClient implements PlatformClient {\n \n-    private static final ServiceRef VM_SELF_REF =\n-            new ServiceRef(\"localhost\", \"This ContainerJFR\", 0);\n+    private static final ServiceRef VM_SELF_REF = new ServiceRef(\"localhost\", \"This ContainerJFR\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQwNzcy", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453540772", "createdAt": "2020-07-22T17:37:59Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODowMFrOG1tJbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODowMFrOG1tJbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzQwNA==", "bodyText": "If the ServiceRef contains a service URL then the toString here can be removed", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458967404", "createdAt": "2020-07-22T17:38:00Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/DefaultPlatformClient.java", "diffHunk": "@@ -67,7 +67,7 @@\n                         u -> {\n                             try {\n                                 return new ServiceRef(\n-                                        u.getJmxServiceUrl().toString(), u.getMainClass(), 0);\n+                                        u.getJmxServiceUrl().toString(), u.getMainClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQwOTY3", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453540967", "createdAt": "2020-07-22T17:38:16Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODoxNlrOG1tJ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODoxNlrOG1tJ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzU0OA==", "bodyText": "The cluster IP is definitely not a service URL", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458967548", "createdAt": "2020-07-22T17:38:16Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeApiPlatformClient.java", "diffHunk": "@@ -80,13 +80,7 @@\n                     .map(V1Service::getSpec)\n                     .peek(spec -> logger.trace(\"Service spec: \" + spec.toString()))\n                     .filter(s -> s.getPorts() != null)\n-                    .flatMap(\n-                            s ->\n-                                    s.getPorts().stream()\n-                                            .map(\n-                                                    p ->\n-                                                            new ServiceRef(\n-                                                                    s.getClusterIP(), p.getPort())))\n+                    .flatMap(s -> s.getPorts().stream().map(p -> new ServiceRef(s.getClusterIP())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQxMjI1", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453541225", "createdAt": "2020-07-22T17:38:34Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODozNFrOG1tKxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzozODozNFrOG1tKxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2Nzc0OQ==", "bodyText": "And the hostname is also not a fully-formed service URL", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458967749", "createdAt": "2020-07-22T17:38:34Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeApiPlatformClient.java", "diffHunk": "@@ -105,7 +99,7 @@ private ServiceRef resolveServiceRefHostname(ServiceRef in) {\n         try {\n             String hostname = resolver.resolveCanonicalHostName(in.getConnectUrl());\n             logger.debug(String.format(\"Resolved %s to %s\", in.getConnectUrl(), hostname));\n-            return new ServiceRef(hostname, in.getPort());\n+            return new ServiceRef(hostname);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQyODM0", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453542834", "createdAt": "2020-07-22T17:40:42Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MDo0MlrOG1tP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MDo0MlrOG1tP9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTA3OQ==", "bodyText": "Same here - the form of these environment variables looks like REDIS_MASTER_PORT_6379_TCP_ADDR=10.0.0.11 ( https://kubernetes.io/docs/concepts/services-networking/service/#environment-variables ) , so this will be a raw IP address.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458969079", "createdAt": "2020-07-22T17:40:42Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeEnvPlatformClient.java", "diffHunk": "@@ -76,7 +76,6 @@ private static ServiceRef envToServiceRef(Map.Entry<String, String> entry) {\n             return null;\n         }\n         String alias = matcher.group(1).toLowerCase();\n-        int port = Integer.parseInt(matcher.group(2));\n-        return new ServiceRef(entry.getValue(), alias, port);\n+        return new ServiceRef(entry.getValue(), alias);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQzMDE1", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453543015", "createdAt": "2020-07-22T17:40:58Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MDo1OFrOG1tQiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MDo1OFrOG1tQiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTIyNw==", "bodyText": "Also a raw IP address", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r458969227", "createdAt": "2020-07-22T17:40:58Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/openshift/OpenShiftPlatformClient.java", "diffHunk": "@@ -101,12 +101,7 @@ private boolean isCompatiblePort(EndpointPort port) {\n \n     private List<ServiceRef> createServiceRefs(EndpointSubset subset, EndpointPort port) {\n         return subset.getAddresses().stream()\n-                .map(\n-                        addr ->\n-                                new ServiceRef(\n-                                        addr.getIp(),\n-                                        addr.getTargetRef().getName(),\n-                                        port.getPort()))\n+                .map(addr -> new ServiceRef(addr.getIp(), addr.getTargetRef().getName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQzNjg1", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-453543685", "createdAt": "2020-07-22T17:41:54Z", "commit": {"oid": "6ad5569c3c672815be86fe51129a9f305e85f118"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDYwMTIz", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-454460123", "createdAt": "2020-07-23T20:11:03Z", "commit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMTowM1rOG2Z3tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMTowM1rOG2Z3tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMDE1MQ==", "bodyText": "This doesn't seem right. Why would a null entry to added to the list in this case?", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r459700151", "createdAt": "2020-07-23T20:11:03Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/SelfDiscoveryPlatformClient.java", "diffHunk": "@@ -45,21 +45,28 @@\n import java.util.Collections;\n import java.util.List;\n \n+import com.redhat.rhjmc.containerjfr.core.log.Logger;\n+\n class SelfDiscoveryPlatformClient implements PlatformClient {\n \n-    private static final ServiceRef VM_SELF_REF =\n-            new ServiceRef(\"localhost\", \"This ContainerJFR\", 0);\n+    private static ServiceRef VM_SELF_REF;\n     private final PlatformClient client;\n \n     SelfDiscoveryPlatformClient(PlatformClient client) {\n         this.client = client;\n     }\n \n     @Override\n-    public List<ServiceRef> listDiscoverableServices() {\n+    public List<ServiceRef> listDiscoverableServices(Logger logger) {\n         List<ServiceRef> list = new ArrayList<>();\n+        try {\n+            VM_SELF_REF = new ServiceRef(\"localhost\", \"This ContainerJFR\", 0);\n+        } catch (Exception e) {\n+            logger.info(e);\n+            VM_SELF_REF = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDYwNjQw", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-454460640", "createdAt": "2020-07-23T20:11:53Z", "commit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMTo1M1rOG2Z5SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMTo1M1rOG2Z5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMDU1Mw==", "bodyText": "It doesn't seem very useful to use the URL itself as the alias (which is intended to be a human-friendly identifier) for the URL. This is, in hindsight, a mistake of the old implementation, so let's clean it up here. Rather, perhaps the alias should be an Optional.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r459700553", "createdAt": "2020-07-23T20:11:53Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -41,36 +41,37 @@\n  */\n package com.redhat.rhjmc.containerjfr.platform;\n \n+import javax.management.remote.JMXServiceURL;\n+\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n \n public class ServiceRef {\n \n-    private final String connectUrl;\n+    private final JMXServiceURL JMXServiceURL;\n     private final String alias;\n-    private final int port;\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n+    public ServiceRef(JMXServiceURL JMXServiceURL) {\n+        this(JMXServiceURL, JMXServiceURL.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDYyNTQ1", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-454462545", "createdAt": "2020-07-23T20:14:54Z", "commit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNDo1NFrOG2Z-0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNDo1NFrOG2Z-0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTk3MA==", "bodyText": "host/alias/port feels like an unnatural ordering of these params IMO. Maybe host/port/alias? Or alias/host/port? I think the host/port should be adjacent to each other.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r459701970", "createdAt": "2020-07-23T20:14:54Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -41,36 +41,37 @@\n  */\n package com.redhat.rhjmc.containerjfr.platform;\n \n+import javax.management.remote.JMXServiceURL;\n+\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n \n public class ServiceRef {\n \n-    private final String connectUrl;\n+    private final JMXServiceURL JMXServiceURL;\n     private final String alias;\n-    private final int port;\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n+    public ServiceRef(JMXServiceURL JMXServiceURL) {\n+        this(JMXServiceURL, JMXServiceURL.toString());\n     }\n \n-    public ServiceRef(String connectUrl, String alias, int port) {\n-        this.connectUrl = connectUrl;\n+    public ServiceRef(JMXServiceURL JMXServiceURL, String alias) {\n+        this.JMXServiceURL = JMXServiceURL;\n         this.alias = alias;\n-        this.port = port;\n     }\n \n-    public String getConnectUrl() {\n-        return connectUrl;\n+    public ServiceRef(String host, String alias, int port) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDYzMjU3", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-454463257", "createdAt": "2020-07-23T20:15:58Z", "commit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNTo1OFrOG2aBDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNTo1OFrOG2aBDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMjU0MA==", "bodyText": "This goes for all of these new logger statements - maybe a Warning level message would be more appropriate?", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r459702540", "createdAt": "2020-07-23T20:15:58Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeEnvPlatformClient.java", "diffHunk": "@@ -57,26 +58,33 @@\n     private static final Pattern SERVICE_ENV_PATTERN =\n             Pattern.compile(\"([\\\\S]+)_PORT_([\\\\d]+)_TCP_ADDR\");\n     private final Environment env;\n+    private final Logger logger;\n \n-    KubeEnvPlatformClient(Environment env) {\n+    KubeEnvPlatformClient(Environment env, Logger logger) {\n         this.env = env;\n+        this.logger = logger;\n     }\n \n     @Override\n-    public List<ServiceRef> listDiscoverableServices() {\n+    public List<ServiceRef> listDiscoverableServices(Logger logger) {\n         return env.getEnv().entrySet().stream()\n-                .map(KubeEnvPlatformClient::envToServiceRef)\n+                .map(this::envToServiceRef)\n                 .filter(Objects::nonNull)\n                 .collect(Collectors.toList());\n     }\n \n-    private static ServiceRef envToServiceRef(Map.Entry<String, String> entry) {\n+    private ServiceRef envToServiceRef(Map.Entry<String, String> entry) {\n         Matcher matcher = SERVICE_ENV_PATTERN.matcher(entry.getKey());\n         if (!matcher.matches()) {\n             return null;\n         }\n         String alias = matcher.group(1).toLowerCase();\n         int port = Integer.parseInt(matcher.group(2));\n-        return new ServiceRef(entry.getValue(), alias, port);\n+        try {\n+            return new ServiceRef(entry.getValue(), alias, port);\n+        } catch (Exception e) {\n+            logger.info(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDY0MDY5", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-454464069", "createdAt": "2020-07-23T20:17:16Z", "commit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNzoxNlrOG2aDwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxNzoxNlrOG2aDwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMzIzNA==", "bodyText": "This seems wrong. Why does the Logger need to be provided as an argument to this method? I would expect it to be dependency injected into the PlatformClient implementations' constructors.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r459703234", "createdAt": "2020-07-23T20:17:16Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/PlatformClient.java", "diffHunk": "@@ -43,6 +43,8 @@\n \n import java.util.List;\n \n+import com.redhat.rhjmc.containerjfr.core.log.Logger;\n+\n public interface PlatformClient {\n-    List<ServiceRef> listDiscoverableServices();\n+    List<ServiceRef> listDiscoverableServices(Logger logger);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8129e419c6f0254c8f8491a33946cc6a483b0f9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDQ2MDcy", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-455046072", "createdAt": "2020-07-24T17:01:38Z", "commit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowMTozOFrOG22_8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowMTozOFrOG22_8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3NzM5Mg==", "bodyText": "For robustness, maybe this should be Optional.ofNullable()? Optional.of(null) throws an exception IIRC, which we could avoid by just using ofNullable which produces an empty Optional if passed null.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r460177392", "createdAt": "2020-07-24T17:01:38Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -41,36 +41,39 @@\n  */\n package com.redhat.rhjmc.containerjfr.platform;\n \n+import java.util.Optional;\n+\n+import javax.management.remote.JMXServiceURL;\n+\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n \n public class ServiceRef {\n \n-    private final String connectUrl;\n-    private final String alias;\n-    private final int port;\n+    private final JMXServiceURL JMXServiceURL;\n+    private Optional<String> alias = Optional.empty();\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n+    public ServiceRef(JMXServiceURL JMXServiceURL) {\n+        this.JMXServiceURL = JMXServiceURL;\n     }\n \n-    public ServiceRef(String connectUrl, String alias, int port) {\n-        this.connectUrl = connectUrl;\n-        this.alias = alias;\n-        this.port = port;\n+    public ServiceRef(JMXServiceURL JMXServiceURL, String alias) {\n+        this.JMXServiceURL = JMXServiceURL;\n+        this.alias = Optional.of(alias);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDQ3MTU2", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-455047156", "createdAt": "2020-07-24T17:03:24Z", "commit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowMzoyNFrOG23DIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowMzoyNFrOG23DIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3ODIwOQ==", "bodyText": "Just a style thing but the constructor param should be named like jmxServiceUrl or jmxServiceURL, not JMXServiceURL.\nAlso if the other constructor has a throws declaration, they probably all should. In fact, this constructor should be the \"primary\" one, and the others should defer to it, ex:\npublic ServiceRef(JMXServiceURL jmxServiceUrl) {\n  this(jmxServiceUrl, null);\n}\n\nThat way as much logic is shared as possible.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r460178209", "createdAt": "2020-07-24T17:03:24Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -41,36 +41,39 @@\n  */\n package com.redhat.rhjmc.containerjfr.platform;\n \n+import java.util.Optional;\n+\n+import javax.management.remote.JMXServiceURL;\n+\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n \n public class ServiceRef {\n \n-    private final String connectUrl;\n-    private final String alias;\n-    private final int port;\n+    private final JMXServiceURL JMXServiceURL;\n+    private Optional<String> alias = Optional.empty();\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n+    public ServiceRef(JMXServiceURL JMXServiceURL) {\n+        this.JMXServiceURL = JMXServiceURL;\n     }\n \n-    public ServiceRef(String connectUrl, String alias, int port) {\n-        this.connectUrl = connectUrl;\n-        this.alias = alias;\n-        this.port = port;\n+    public ServiceRef(JMXServiceURL JMXServiceURL, String alias) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDQ4Nzgx", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-455048781", "createdAt": "2020-07-24T17:05:55Z", "commit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowNTo1NVrOG23IFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowNTo1NVrOG23IFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3OTQ3OQ==", "bodyText": "Is this intended to be removed? The point of this method was to map IP addresses to more readable hostnames for the entry aliases, since the IP address itself isn't likely to be meaningful to a human reader without them having to go look at their cluster configuration and cross-reference the addresses. A hostname is more likely to give some telling information about what the user is looking at.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r460179479", "createdAt": "2020-07-24T17:05:55Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeApiPlatformClient.java", "diffHunk": "@@ -100,15 +107,16 @@\n             return Collections.emptyList();\n         }\n     }\n-\n+    /*\n     private ServiceRef resolveServiceRefHostname(ServiceRef in) {\n         try {\n-            String hostname = resolver.resolveCanonicalHostName(in.getConnectUrl());\n-            logger.debug(String.format(\"Resolved %s to %s\", in.getConnectUrl(), hostname));\n-            return new ServiceRef(hostname, in.getPort());\n+            String hostname = resolver.resolveCanonicalHostName(in.getJMXServiceUrl());\n+            logger.debug(String.format(\"Resolved %s to %s\", in.getJMXServiceUrl(), hostname));\n+            return new ServiceRef(hostname);\n         } catch (Exception e) {\n             logger.debug(e);\n             return null;\n         }\n     }\n+    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDQ5NzM3", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-455049737", "createdAt": "2020-07-24T17:07:29Z", "commit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowNzoyOVrOG23LCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzowNzoyOVrOG23LCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4MDIzMw==", "bodyText": "Since there is a possible return null in this chain, there should also be a corresponding filter to remove null entries, like the KubeEnv client has for example.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r460180233", "createdAt": "2020-07-24T17:07:29Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/openshift/OpenShiftPlatformClient.java", "diffHunk": "@@ -99,14 +100,21 @@ private boolean isCompatiblePort(EndpointPort port) {\n         return \"jfr-jmx\".equals(port.getName()) || 9091 == port.getPort();\n     }\n \n-    private List<ServiceRef> createServiceRefs(EndpointSubset subset, EndpointPort port) {\n+    private List<ServiceRef> createServiceRefs(\n+            Logger logger, EndpointSubset subset, EndpointPort port) {\n         return subset.getAddresses().stream()\n                 .map(\n-                        addr ->\n-                                new ServiceRef(\n+                        addr -> {\n+                            try {\n+                                return new ServiceRef(\n                                         addr.getIp(),\n-                                        addr.getTargetRef().getName(),\n-                                        port.getPort()))\n+                                        port.getPort(),\n+                                        addr.getTargetRef().getName());\n+                            } catch (Exception e) {\n+                                logger.warn(e);\n+                                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e4447e7da811462af12bd703a2e173cd7f1c24"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTc5ODYw", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456179860", "createdAt": "2020-07-27T22:30:42Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMDo0M1rOG313Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMDo0M1rOG313Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNzMxMQ==", "bodyText": "This method isn't static, so I don't think it needs the logger instance passed as a parameter, does it?", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461207311", "createdAt": "2020-07-27T22:30:43Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/openshift/OpenShiftPlatformClient.java", "diffHunk": "@@ -99,14 +101,22 @@ private boolean isCompatiblePort(EndpointPort port) {\n         return \"jfr-jmx\".equals(port.getName()) || 9091 == port.getPort();\n     }\n \n-    private List<ServiceRef> createServiceRefs(EndpointSubset subset, EndpointPort port) {\n+    private List<ServiceRef> createServiceRefs(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgwNDI4", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456180428", "createdAt": "2020-07-27T22:32:03Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMjowM1rOG315CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMjowM1rOG315CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNzgxNw==", "bodyText": "Could you inject a Logger instance here and pass it to new GsonJmxServiceUrlAdapter(logger)?", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461207817", "createdAt": "2020-07-27T22:32:03Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/MainModule.java", "diffHunk": "@@ -85,7 +87,11 @@ static Logger provideLogger() {\n     @Provides\n     @Singleton\n     public static Gson provideGson() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgwNjAx", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456180601", "createdAt": "2020-07-27T22:32:28Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMjoyOFrOG315nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMjoyOFrOG315nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwNzk2NA==", "bodyText": "With the injected Logger instance, this exception can be logged (at warning level).", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461207964", "createdAt": "2020-07-27T22:32:28Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/util/GsonJmxServiceUrlAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.util;\n+\n+import java.io.IOException;\n+\n+import javax.management.remote.JMXServiceURL;\n+\n+import com.google.gson.TypeAdapter;\n+import com.google.gson.stream.JsonReader;\n+import com.google.gson.stream.JsonWriter;\n+\n+public class GsonJmxServiceUrlAdapter extends TypeAdapter<JMXServiceURL> {\n+\n+    @Override\n+    public JMXServiceURL read(JsonReader reader) throws IOException {\n+        String url = reader.nextString();\n+        JMXServiceURL jmxUrl;\n+        try {\n+            jmxUrl = new JMXServiceURL(url);\n+        } catch (Exception e) {\n+            jmxUrl = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxMTA5", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181109", "createdAt": "2020-07-27T22:33:38Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMzozOFrOG317RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozMzozOFrOG317RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODM4OA==", "bodyText": "This exception should never actually be thrown though, right? I think we can skip trying to handle it here and just add a throws-declaration to this test utility method.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208388", "createdAt": "2020-07-27T22:33:38Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/commands/internal/ScanTargetsCommandTest.java", "diffHunk": "@@ -139,9 +139,19 @@ void shouldExecuteAndReturnExceptionOutputIfPlatformClientThrows() throws Except\n     }\n \n     List<ServiceRef> getMockServices() {\n-        ServiceRef mockA = new ServiceRef(\"aHost\", \"Host A\", 1);\n-        ServiceRef mockB = new ServiceRef(\"bHost\", \"Host B\", 2);\n-        ServiceRef mockC = new ServiceRef(\"cHost\", \"Host C\", 3);\n+        ServiceRef mockA;\n+        ServiceRef mockB;\n+        ServiceRef mockC;\n+        try {\n+            mockA = new ServiceRef(\"aHost\", 0, \"Host A\");\n+            mockB = new ServiceRef(\"bHost\", 0, \"Host B\");\n+            mockC = new ServiceRef(\"cHost\", 0, \"Host C\");\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxNDAx", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181401", "createdAt": "2020-07-27T22:34:17Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDoxN1rOG318VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDoxN1rOG318VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODY2MQ==", "bodyText": "Same here, just add a throws-declaration to the method and let it fail right away if somehow the test ServiceRef construction fails.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208661", "createdAt": "2020-07-27T22:34:17Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetsGetHandlerTest.java", "diffHunk": "@@ -90,7 +90,12 @@ void shouldHandleCorrectPath() {\n \n     @Test\n     void shouldReturnListOfTargets() {\n-        ServiceRef target = new ServiceRef(\"foo\", 1);\n+        ServiceRef target;\n+        try {\n+            target = new ServiceRef(\"foo\", 1, \"foo\");\n+        } catch (Exception e) {\n+            target = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxNDc0", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181474", "createdAt": "2020-07-27T22:34:27Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDoyN1rOG318jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDoyN1rOG318jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODcxNw==", "bodyText": "Same as above", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208717", "createdAt": "2020-07-27T22:34:27Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeApiPlatformClientTest.java", "diffHunk": "@@ -153,12 +153,21 @@ void discoversAndResolvesServices() throws ApiException, UnknownHostException {\n \n             List<ServiceRef> result = client.listDiscoverableServices();\n \n-            assertThat(\n-                    result,\n-                    Matchers.contains(\n-                            new ServiceRef(\"ServiceA.local\", 123),\n-                            new ServiceRef(\"ServiceA.local\", 456),\n-                            new ServiceRef(\"b-service.example.com\", 7899)));\n+            ServiceRef serv1;\n+            ServiceRef serv2;\n+            ServiceRef serv3;\n+            try {\n+                serv1 = new ServiceRef(\"127.0.0.1\", 123, \"ServiceA.local\");\n+                serv2 = new ServiceRef(\"127.0.0.1\", 456, \"ServiceA.local\");\n+                serv3 = new ServiceRef(\"10.0.0.1\", 7899, \"b-service.example.com\");\n+            } catch (Exception e) {\n+                serv1 = null;\n+                serv2 = null;\n+                serv3 = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxNTM1", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181535", "createdAt": "2020-07-27T22:34:35Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDozNVrOG318uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDozNVrOG318uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODc2Mw==", "bodyText": "Here too", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208763", "createdAt": "2020-07-27T22:34:35Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeApiPlatformClientTest.java", "diffHunk": "@@ -211,11 +220,16 @@ void ignoresUnresolveableServices() throws ApiException, UnknownHostException {\n \n             List<ServiceRef> result = client.listDiscoverableServices();\n \n-            assertThat(\n-                    result,\n-                    Matchers.contains(\n-                            new ServiceRef(\"ServiceA.local\", 123),\n-                            new ServiceRef(\"ServiceA.local\", 456)));\n+            ServiceRef serv1;\n+            ServiceRef serv2;\n+            try {\n+                serv1 = new ServiceRef(\"127.0.0.1\", 123, \"ServiceA.local\");\n+                serv2 = new ServiceRef(\"127.0.0.1\", 456, \"ServiceA.local\");\n+            } catch (Exception e) {\n+                serv1 = null;\n+                serv2 = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxNjQx", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181641", "createdAt": "2020-07-27T22:34:51Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDo1MVrOG319KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNDo1MVrOG319KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODg3Mg==", "bodyText": "And here", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208872", "createdAt": "2020-07-27T22:34:51Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/platform/internal/KubeEnvPlatformClientTest.java", "diffHunk": "@@ -97,11 +99,18 @@ void shouldDiscoverServicesByEnv() {\n                                     \"BAR_PORT_9999_TCP_ADDR\", \"1.2.3.4\",\n                                     \"BAZ_PORT_9876_UDP_ADDR\", \"5.6.7.8\"));\n             List<ServiceRef> services = client.listDiscoverableServices();\n-            MatcherAssert.assertThat(\n-                    services,\n-                    Matchers.containsInAnyOrder(\n-                            new ServiceRef(\"127.0.0.1\", \"foo\", 1234),\n-                            new ServiceRef(\"1.2.3.4\", \"bar\", 9999)));\n+\n+            ServiceRef serv1;\n+            ServiceRef serv2;\n+            try {\n+                serv1 = new ServiceRef(\"127.0.0.1\", 1234, \"foo\");\n+                serv2 = new ServiceRef(\"1.2.3.4\", 9999, \"bar\");\n+            } catch (Exception e) {\n+                serv1 = null;\n+                serv2 = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgxNzMx", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456181731", "createdAt": "2020-07-27T22:35:02Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNTowMlrOG319fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjozNTowMlrOG319fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIwODk1Ng==", "bodyText": "And finally, here :-)", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r461208956", "createdAt": "2020-07-27T22:35:02Z", "author": {"login": "andrewazores"}, "path": "src/test/java/com/redhat/rhjmc/containerjfr/platform/openshift/OpenShiftPlatformClientTest.java", "diffHunk": "@@ -173,23 +173,26 @@ void shouldReturnListOfMatchingEndpointRefs() throws Exception {\n         Mockito.when(mockListable.getItems()).thenReturn(Collections.singletonList(endpoint));\n \n         List<ServiceRef> result = platformClient.listDiscoverableServices();\n+        ServiceRef serv1;\n+        ServiceRef serv2;\n+        ServiceRef serv3;\n+        try {\n+            serv1 =\n+                    new ServiceRef(\n+                            address2.getIp(), port2.getPort(), address2.getTargetRef().getName());\n+            serv2 =\n+                    new ServiceRef(\n+                            address3.getIp(), port2.getPort(), address3.getTargetRef().getName());\n+            serv3 =\n+                    new ServiceRef(\n+                            address4.getIp(), port3.getPort(), address4.getTargetRef().getName());\n+        } catch (Exception e) {\n+            serv1 = null;\n+            serv2 = null;\n+            serv3 = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTgyMDU4", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-456182058", "createdAt": "2020-07-27T22:35:47Z", "commit": {"oid": "12e13648c625312a6deac9be90397b2e2c98e6f0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6a16452a44b586b62aa9eace0edabb70b8cf076", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/f6a16452a44b586b62aa9eace0edabb70b8cf076", "committedDate": "2020-07-28T21:22:25Z", "message": "Unify API responses by only having JMX service URLs. Remove port var from serviceRef"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edf9752489e5c6fc7b50fac3b7e15d0db0286aa8", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/edf9752489e5c6fc7b50fac3b7e15d0db0286aa8", "committedDate": "2020-07-28T21:28:18Z", "message": "modify serviceRef constructors to accept JMX urls, and modify platform clients accordingly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05ceb2d564ae3878eb88ac5dcde4ffff97378f5b", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/05ceb2d564ae3878eb88ac5dcde4ffff97378f5b", "committedDate": "2020-07-28T21:30:57Z", "message": "Modify order of paramters in some serviceRef constructors, remove logger parameter from listDiscoverableServices()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d7937a8fd31db2a448db0d298b0d69aaae74abb", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/7d7937a8fd31db2a448db0d298b0d69aaae74abb", "committedDate": "2020-07-28T21:31:02Z", "message": "minor fixes, change order of serviceRef constructors, filter out null objects in openShiftPlatformClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0088925725a2a363d75854f52b9ef91ede916959", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/0088925725a2a363d75854f52b9ef91ede916959", "committedDate": "2020-07-28T21:31:02Z", "message": "add resolveCanonicalHostName as alias of serviceRef, in KubeApiPlatformClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "394b7fe3bc2df733a43307dc36ce6e375154a696", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/394b7fe3bc2df733a43307dc36ce6e375154a696", "committedDate": "2020-07-28T21:31:54Z", "message": "Update tests to work with new serviceRef constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c574d3f48e5e7dca97188deb8c6d232ae76bbecb", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/c574d3f48e5e7dca97188deb8c6d232ae76bbecb", "committedDate": "2020-07-28T21:31:59Z", "message": "Add custom Gson adapter for JMXServiceURLs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ca7c07a2a1262dace66e55ab88b26ea2c31d810", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/3ca7c07a2a1262dace66e55ab88b26ea2c31d810", "committedDate": "2020-07-28T21:31:59Z", "message": "Change api response to closely follow previous format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e007042470650f2816163ec290e7ea6f1107fde5", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/e007042470650f2816163ec290e7ea6f1107fde5", "committedDate": "2020-07-28T21:32:48Z", "message": "fix basicCommandChannelIT test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75897fb1a52300b508f987e3fb127fc6a3251716", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/75897fb1a52300b508f987e3fb127fc6a3251716", "committedDate": "2020-07-28T21:32:56Z", "message": "minor changes to tests and add logger to custom jmx url adapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8431b6af09f02529a26951d899531befcc46a698", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/8431b6af09f02529a26951d899531befcc46a698", "committedDate": "2020-07-28T21:32:56Z", "message": "apply spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d03a80820053a5a52318055befe6fa312988b23", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/3d03a80820053a5a52318055befe6fa312988b23", "committedDate": "2020-07-28T21:32:56Z", "message": "fix logger problem (incorrect injection)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee2cb5e892aadfaafcda6d518599e2e78867b3bf", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/ee2cb5e892aadfaafcda6d518599e2e78867b3bf", "committedDate": "2020-07-29T19:49:24Z", "message": "fix integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae8203495305e8508d513b5b1332933ea4ec8ce1", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/ae8203495305e8508d513b5b1332933ea4ec8ce1", "committedDate": "2020-07-28T19:42:25Z", "message": "fix logger problem (incorrect injection)"}, "afterCommit": {"oid": "ee2cb5e892aadfaafcda6d518599e2e78867b3bf", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/ee2cb5e892aadfaafcda6d518599e2e78867b3bf", "committedDate": "2020-07-29T19:49:24Z", "message": "fix integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34e2f7040ef835688c34d9f21a9fac7c55d68e92", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/34e2f7040ef835688c34d9f21a9fac7c55d68e92", "committedDate": "2020-08-04T14:36:20Z", "message": "modify jmx service url protocol to rmi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTA4ODMy", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-461908832", "createdAt": "2020-08-05T18:14:03Z", "commit": {"oid": "34e2f7040ef835688c34d9f21a9fac7c55d68e92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxNDowM1rOG8VGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODoxNDowM1rOG8VGRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkxMzQxNA==", "bodyText": "Ah, tiny nitpick here - your format specifier has two %s tokens, but you pass in a string (%s) and an int (%d). This will still work because casting the port to a string still comes out the same in the formatted string, but I think it's still worth correcting.", "url": "https://github.com/cryostatio/cryostat/pull/215#discussion_r465913414", "createdAt": "2020-08-05T18:14:03Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/platform/ServiceRef.java", "diffHunk": "@@ -41,36 +41,45 @@\n  */\n package com.redhat.rhjmc.containerjfr.platform;\n \n+import java.net.MalformedURLException;\n+import java.util.Optional;\n+\n+import javax.management.remote.JMXServiceURL;\n+\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n+import com.google.gson.annotations.SerializedName;\n \n public class ServiceRef {\n \n-    private final String connectUrl;\n-    private final String alias;\n-    private final int port;\n+    @SerializedName(\"connectUrl\")\n+    private final JMXServiceURL JMXServiceURL;\n \n-    public ServiceRef(String connectUrl, int port) {\n-        this(connectUrl, connectUrl, port);\n-    }\n+    private final String alias; // nullable\n \n-    public ServiceRef(String connectUrl, String alias, int port) {\n-        this.connectUrl = connectUrl;\n+    public ServiceRef(JMXServiceURL jmxServiceUrl, String alias) throws MalformedURLException {\n+        this.JMXServiceURL = jmxServiceUrl;\n         this.alias = alias;\n-        this.port = port;\n     }\n \n-    public String getConnectUrl() {\n-        return connectUrl;\n+    public ServiceRef(JMXServiceURL jmxServiceUrl) throws MalformedURLException {\n+        this(jmxServiceUrl, null);\n+    }\n+\n+    public ServiceRef(String host, int port, String alias) throws MalformedURLException {\n+        this(\n+                new JMXServiceURL(\n+                        \"rmi\", \"\", 0, String.format(\"/jndi/rmi://%s:%s/jmxrmi\", host, port)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e2f7040ef835688c34d9f21a9fac7c55d68e92"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3d31b73cf33422f8ae40bdb3d4b5a2ad761d89c", "author": {"user": {"login": "Alexjsenn", "name": "Alex Senn"}}, "url": "https://github.com/cryostatio/cryostat/commit/a3d31b73cf33422f8ae40bdb3d4b5a2ad761d89c", "committedDate": "2020-08-05T18:50:39Z", "message": "modify string formatting in serviceRef"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTc0MzEw", "url": "https://github.com/cryostatio/cryostat/pull/215#pullrequestreview-461974310", "createdAt": "2020-08-05T19:50:17Z", "commit": {"oid": "a3d31b73cf33422f8ae40bdb3d4b5a2ad761d89c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3183, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}