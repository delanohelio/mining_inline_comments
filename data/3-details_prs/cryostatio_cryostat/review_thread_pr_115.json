{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Njc4OTMy", "number": 115, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTozMDowMVrODcVewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjo1NjoxOVrODcYR3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDM4NjU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/MessagingServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTozMDowMVrOFkVofw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTozMDowMVrOFkVofw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NzQ4Nw==", "bodyText": "Do we need synchronized access for connections here too?", "url": "https://github.com/cryostatio/cryostat/pull/115#discussion_r373647487", "createdAt": "2020-01-31T19:30:01Z", "author": {"login": "ebaron"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/MessagingServer.java", "diffHunk": "@@ -43,6 +57,14 @@ void start() throws SocketException, UnknownHostException {\n                         return;\n                     }\n                     String remoteAddress = sws.remoteAddress().toString();\n+                    if (connections.size() >= maxConnections) {\n+                        logger.info(\n+                                String.format(\n+                                        \"Dropping remote client %s due to too many concurrent connections\",\n+                                        remoteAddress));\n+                        sws.reject();\n+                        return;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f7383494e33987e5cba4ba2dc54e47604e21ed"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDgzNzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/WsClientReaderWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjo1MjoxOFrOFkaEcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDozMTowNFrOFkzSjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDE3Nw==", "bodyText": "Maybe need some synchronization here if readingThread becomes null after the check, but this might be overkill for now.", "url": "https://github.com/cryostatio/cryostat/pull/115#discussion_r373720177", "createdAt": "2020-01-31T22:52:18Z", "author": {"login": "ebaron"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/WsClientReaderWriter.java", "diffHunk": "@@ -35,11 +34,10 @@ public void handle(String msg) {\n \n     @Override\n     public void close() {\n-        if (running && readingThread != null) {\n-            inQ.clear();\n+        inQ.clear();\n+        if (readingThread != null) {\n             readingThread.interrupt();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f7383494e33987e5cba4ba2dc54e47604e21ed"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEzMzM5MA==", "bodyText": "It's possible. The expected flow here is that this interrupt is what causes readingThread to become null, but something else could interrupt the thread too.", "url": "https://github.com/cryostatio/cryostat/pull/115#discussion_r374133390", "createdAt": "2020-02-03T14:31:04Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/WsClientReaderWriter.java", "diffHunk": "@@ -35,11 +34,10 @@ public void handle(String msg) {\n \n     @Override\n     public void close() {\n-        if (running && readingThread != null) {\n-            inQ.clear();\n+        inQ.clear();\n+        if (readingThread != null) {\n             readingThread.interrupt();\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMDE3Nw=="}, "originalCommit": {"oid": "28f7383494e33987e5cba4ba2dc54e47604e21ed"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDg0NTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/MessagingServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjo1NjoxOVrOFkaJAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMjo1NjoxOVrOFkaJAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyMTM0NQ==", "bodyText": "What do you think about logging a warning here, so the user knows their argument is invalid and will be ignored?", "url": "https://github.com/cryostatio/cryostat/pull/115#discussion_r373721345", "createdAt": "2020-01-31T22:56:19Z", "author": {"login": "ebaron"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/tui/ws/MessagingServer.java", "diffHunk": "@@ -161,4 +183,21 @@ public void println(Exception e) {\n             }\n         };\n     }\n+\n+    private int determineMaximumWsConnections(Environment env) {\n+        try {\n+            int maxConn =\n+                    Integer.parseInt(\n+                            env.getEnv(\n+                                    MAX_CONNECTIONS_ENV_VAR,\n+                                    String.valueOf(DEFAULT_MAX_CONNECTIONS)));\n+            if (maxConn > 64 || maxConn < 1) {\n+                return DEFAULT_MAX_CONNECTIONS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f7383494e33987e5cba4ba2dc54e47604e21ed"}, "originalPosition": 173}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 804, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}