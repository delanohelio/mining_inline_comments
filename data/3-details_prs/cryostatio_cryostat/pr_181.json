{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjY5Nzcw", "number": 181, "title": "Fix `upload-recording` Command", "bodyText": "Fixes #174.\nThe diff for the tests looks a little weird, but mostly because I moved some stuff around; the actual changes I made are pretty small. Basically, I saw that the shouldSelectInMemoryIfAvailable() test had all its mocks before its stubs, so I changed the ordering of the other RecordingSelection tests to do the same. Although later I realized that that first test was kind of the exception...so I'm not really sure now. Should I change the ordering back?", "createdAt": "2020-06-10T20:01:56Z", "url": "https://github.com/cryostatio/cryostat/pull/181", "merged": true, "mergeCommit": {"oid": "139649d925d16f8c10594145ef9bd55c112cb867"}, "closed": true, "closedAt": "2020-06-10T20:45:56Z", "author": {"login": "vic-ma"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp-u_WgH2gAyNDMyNjY5NzcwOjczN2Y3Zjc0NGIzMzgxMTg5YjJjYmVkNjAzM2Y1YTdlZjg3YjBlMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp_612AFqTQyODQxNDQ1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "737f7f744b3381189b2cbed6033f5a7ef87b0e09", "author": {"user": {"login": "vic-ma", "name": "Victor Ma"}}, "url": "https://github.com/cryostatio/cryostat/commit/737f7f744b3381189b2cbed6033f5a7ef87b0e09", "committedDate": "2020-06-10T19:22:25Z", "message": "Fix `upload-recording` command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "494cee3b00d9f5234acaab8762aaf43d54e58946", "author": {"user": {"login": "vic-ma", "name": "Victor Ma"}}, "url": "https://github.com/cryostatio/cryostat/commit/494cee3b00d9f5234acaab8762aaf43d54e58946", "committedDate": "2020-06-10T19:22:25Z", "message": "Change tests to match new implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef5b9eb83e68d454b2f4d091f567a1dd90b8a53", "author": {"user": {"login": "vic-ma", "name": "Victor Ma"}}, "url": "https://github.com/cryostatio/cryostat/commit/3ef5b9eb83e68d454b2f4d091f567a1dd90b8a53", "committedDate": "2020-06-10T19:22:25Z", "message": "Remove duplicate test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f4be6397123d1230265e3d98610bca74ff149a", "author": {"user": {"login": "vic-ma", "name": "Victor Ma"}}, "url": "https://github.com/cryostatio/cryostat/commit/f4f4be6397123d1230265e3d98610bca74ff149a", "committedDate": "2020-06-10T19:22:25Z", "message": "Fix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzkwODQ4", "url": "https://github.com/cryostatio/cryostat/pull/181#pullrequestreview-428390848", "createdAt": "2020-06-10T20:09:44Z", "commit": {"oid": "737f7f744b3381189b2cbed6033f5a7ef87b0e09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDowOTo0NFrOGiEmBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDowOTo0NFrOGiEmBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MDAzNw==", "bodyText": "Just a minor style nitpick - generally the convention would be private final.", "url": "https://github.com/cryostatio/cryostat/pull/181#discussion_r438380037", "createdAt": "2020-06-10T20:09:44Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/commands/internal/UploadRecordingCommand.java", "diffHunk": "@@ -175,25 +178,43 @@ public boolean validate(String[] args) {\n \n     // returned stream should be cleaned up by HttpClient\n     @SuppressFBWarnings(\"OBL_UNSATISFIED_OBLIGATION\")\n-    Optional<InputStream> getBestRecordingForName(String targetId, String recordingName)\n+    RecordingConnection getBestRecordingForName(String targetId, String recordingName)\n             throws Exception {\n         Optional<IRecordingDescriptor> currentRecording =\n                 getDescriptorByName(targetId, recordingName);\n         if (currentRecording.isPresent()) {\n-            return targetConnectionManager.executeConnectedTask(\n-                    targetId,\n-                    connection -> {\n-                        return Optional.of(\n-                                connection.getService().openStream(currentRecording.get(), false));\n-                    });\n+            JFRConnection connection = targetConnectionManager.connect(targetId);\n+            return new RecordingConnection(\n+                    Optional.of(connection.getService().openStream(currentRecording.get(), false)),\n+                    Optional.of(connection));\n         }\n \n         Path archivedRecording = recordingsPath.resolve(recordingName);\n         if (fs.isRegularFile(archivedRecording) && fs.isReadable(archivedRecording)) {\n-            return Optional.of(new BufferedInputStream(fs.newInputStream(archivedRecording)));\n+            return new RecordingConnection(\n+                    Optional.of(new BufferedInputStream(fs.newInputStream(archivedRecording))),\n+                    Optional.empty());\n         }\n \n-        return Optional.empty();\n+        return new RecordingConnection(Optional.empty(), Optional.empty());\n+    }\n+\n+    static class RecordingConnection {\n+        final private Optional<InputStream> stream;\n+        final private Optional<JFRConnection> connection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "737f7f744b3381189b2cbed6033f5a7ef87b0e09"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzkxNDYw", "url": "https://github.com/cryostatio/cryostat/pull/181#pullrequestreview-428391460", "createdAt": "2020-06-10T20:10:39Z", "commit": {"oid": "737f7f744b3381189b2cbed6033f5a7ef87b0e09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxMDozOVrOGiEnzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoxMDozOVrOGiEnzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4MDQ5Mg==", "bodyText": "And also a minor nitpick, but this constructor and the instance methods below it probably don't need to be public if the class itself is default visibility (package-private).", "url": "https://github.com/cryostatio/cryostat/pull/181#discussion_r438380492", "createdAt": "2020-06-10T20:10:39Z", "author": {"login": "andrewazores"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/commands/internal/UploadRecordingCommand.java", "diffHunk": "@@ -175,25 +178,43 @@ public boolean validate(String[] args) {\n \n     // returned stream should be cleaned up by HttpClient\n     @SuppressFBWarnings(\"OBL_UNSATISFIED_OBLIGATION\")\n-    Optional<InputStream> getBestRecordingForName(String targetId, String recordingName)\n+    RecordingConnection getBestRecordingForName(String targetId, String recordingName)\n             throws Exception {\n         Optional<IRecordingDescriptor> currentRecording =\n                 getDescriptorByName(targetId, recordingName);\n         if (currentRecording.isPresent()) {\n-            return targetConnectionManager.executeConnectedTask(\n-                    targetId,\n-                    connection -> {\n-                        return Optional.of(\n-                                connection.getService().openStream(currentRecording.get(), false));\n-                    });\n+            JFRConnection connection = targetConnectionManager.connect(targetId);\n+            return new RecordingConnection(\n+                    Optional.of(connection.getService().openStream(currentRecording.get(), false)),\n+                    Optional.of(connection));\n         }\n \n         Path archivedRecording = recordingsPath.resolve(recordingName);\n         if (fs.isRegularFile(archivedRecording) && fs.isReadable(archivedRecording)) {\n-            return Optional.of(new BufferedInputStream(fs.newInputStream(archivedRecording)));\n+            return new RecordingConnection(\n+                    Optional.of(new BufferedInputStream(fs.newInputStream(archivedRecording))),\n+                    Optional.empty());\n         }\n \n-        return Optional.empty();\n+        return new RecordingConnection(Optional.empty(), Optional.empty());\n+    }\n+\n+    static class RecordingConnection {\n+        final private Optional<InputStream> stream;\n+        final private Optional<JFRConnection> connection;\n+\n+        public RecordingConnection(Optional<InputStream> stream, Optional<JFRConnection> connection) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "737f7f744b3381189b2cbed6033f5a7ef87b0e09"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e90acba6d7405b0d0e69f4ca62ad0f056d6a5e7", "author": {"user": {"login": "vic-ma", "name": "Victor Ma"}}, "url": "https://github.com/cryostatio/cryostat/commit/8e90acba6d7405b0d0e69f4ca62ad0f056d6a5e7", "committedDate": "2020-06-10T20:30:27Z", "message": "Remove public modifier for RecordingConnection methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDE0NDUy", "url": "https://github.com/cryostatio/cryostat/pull/181#pullrequestreview-428414452", "createdAt": "2020-06-10T20:45:16Z", "commit": {"oid": "8e90acba6d7405b0d0e69f4ca62ad0f056d6a5e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3150, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}