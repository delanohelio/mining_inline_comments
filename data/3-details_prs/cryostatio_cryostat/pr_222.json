{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MTIwNTI0", "number": 222, "title": "HTTP REST API feature parity", "bodyText": "This series of commits brings the HTTP REST API up to feature parity with the WebSocket Command Channel - that is, anything (recording-related, anyway - there is no equivalent for help, hostname, etc.) that can be accomplished using a Command can now also be accomplished using an HTTP request. The immediate benefit here is in the easier extensibility of HTTP requests with various headers, which will be used in a follow-up PR (#225) to enable JMX authentication credentials. All commands that operate upon a specific target have been marked deprecated as they are not planned to gain JMX authentication support. When any such command is run the registry will log a warning to indicate this.\nTODO as followups:\n\ncreate a document outlining the HTTP REST API, similar to the current COMMANDS.md\nupdate -web and -operator to send these requests whenever applicable, rather than using command channel\n\nRequires:\ncryostatio/cryostat-core#45", "createdAt": "2020-07-29T00:09:14Z", "url": "https://github.com/cryostatio/cryostat/pull/222", "merged": true, "mergeCommit": {"oid": "26c0696a1f0bcc027d7e347b150f870055895ee2"}, "closed": true, "closedAt": "2020-08-06T21:43:31Z", "author": {"login": "andrewazores"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5zeW8gBqjM2MDEyOTM3Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8WvKlAFqTQ2Mjg5MDYwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f381864bda71a34b1d987702547d3f23e288ee9a", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/f381864bda71a34b1d987702547d3f23e288ee9a", "committedDate": "2020-07-29T21:08:40Z", "message": "Pass ConnectionDescriptor through to reports service"}, "afterCommit": {"oid": "3b804c42fe2f9227806377f56035b0dedc07e42c", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/3b804c42fe2f9227806377f56035b0dedc07e42c", "committedDate": "2020-07-29T23:17:57Z", "message": "Pass ConnectionDescriptor through to reports service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b804c42fe2f9227806377f56035b0dedc07e42c", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/3b804c42fe2f9227806377f56035b0dedc07e42c", "committedDate": "2020-07-29T23:17:57Z", "message": "Pass ConnectionDescriptor through to reports service"}, "afterCommit": {"oid": "d5610a43d5ae2b6d62584f728fac00c54d70e142", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d5610a43d5ae2b6d62584f728fac00c54d70e142", "committedDate": "2020-07-29T23:21:57Z", "message": "Pass ConnectionDescriptor through to reports service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "023ae9888dd3c3f08d8d0f16f2c1a46d8444db01", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/023ae9888dd3c3f08d8d0f16f2c1a46d8444db01", "committedDate": "2020-07-31T13:52:54Z", "message": "Correctly end archived recording deletion request"}, "afterCommit": {"oid": "36e3884fc52b09a8ecde375fd66b1ed315054a0b", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/36e3884fc52b09a8ecde375fd66b1ed315054a0b", "committedDate": "2020-07-31T13:57:20Z", "message": "Correctly end archived recording deletion request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDQzMTg3", "url": "https://github.com/cryostatio/cryostat/pull/222#pullrequestreview-459443187", "createdAt": "2020-07-31T20:13:37Z", "commit": {"oid": "583fbe5b4494c92bcfefd032a2173810273c3670"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxMzozN1rOG6U-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxMzozN1rOG6U-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNDE1Ng==", "bodyText": "Does this comment also apply to EventOptionsBuilder?", "url": "https://github.com/cryostatio/cryostat/pull/222#discussion_r463814156", "createdAt": "2020-07-31T20:13:37Z", "author": {"login": "jiekang"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/commands/internal/RecordingOptionsBuilderFactory.java", "diffHunk": "@@ -45,7 +45,9 @@\n import org.openjdk.jmc.flightrecorder.configuration.recording.RecordingOptionsBuilder;\n import org.openjdk.jmc.rjmx.services.jfr.IFlightRecorderService;\n \n-interface RecordingOptionsBuilderFactory {\n+// FIXME this should be in a more general package, not commands/internal. This is also used in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "583fbe5b4494c92bcfefd032a2173810273c3670"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5cc8d0453d6bdb76b2748e90c2cd9ffb8b386e1", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/e5cc8d0453d6bdb76b2748e90c2cd9ffb8b386e1", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for saving recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dba63b6747b3193bb094cc5ccc34f0c71c4a0c12", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/dba63b6747b3193bb094cc5ccc34f0c71c4a0c12", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for stopping recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96515d42825e05c2b8f01845dfb6135864187ccc", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/96515d42825e05c2b8f01845dfb6135864187ccc", "committedDate": "2020-08-05T19:52:19Z", "message": "Clean up and add tests for recording PATCH meta-handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e34c9e68a451f8c111fd24056ddf2ed1a2984de", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/6e34c9e68a451f8c111fd24056ddf2ed1a2984de", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for creating new recordings\n\nAlso some related refactoring/cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84374f8321eea829d844e13fb3e4aa8704d8035b", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/84374f8321eea829d844e13fb3e4aa8704d8035b", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for deleting recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34aeaeb14f1460abf0a4b733ace2ee8dd1aee92", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/e34aeaeb14f1460abf0a4b733ace2ee8dd1aee92", "committedDate": "2020-08-05T19:52:19Z", "message": "Initial merged implementation of recording upload handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b2f990647ad77953580c0ff4f9b854ca9e8c8a0", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/1b2f990647ad77953580c0ff4f9b854ca9e8c8a0", "committedDate": "2020-08-05T19:52:19Z", "message": "Split recording upload handler implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5add862bba305618bc3abf3b7bdaa33b208724", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/fa5add862bba305618bc3abf3b7bdaa33b208724", "committedDate": "2020-08-05T19:52:19Z", "message": "Rebase and fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1ca58c861aa8af5879c3f5c394f358c831acc6", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/8d1ca58c861aa8af5879c3f5c394f358c831acc6", "committedDate": "2020-08-05T19:52:19Z", "message": "Add TargetRecordingUploadPostHandlerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4796acb958d333be1b057d405ec46dd8550348e0", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/4796acb958d333be1b057d405ec46dd8550348e0", "committedDate": "2020-08-05T19:52:19Z", "message": "Exception handling cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d468a79fcc8f9a2da53d64a691f157d3761d780b", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d468a79fcc8f9a2da53d64a691f157d3761d780b", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for deleting saved recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c710bc972069e062af4e6fda09832be8dde836", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/d7c710bc972069e062af4e6fda09832be8dde836", "committedDate": "2020-08-05T19:52:19Z", "message": "Implement handler for creating snapshot recordings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73ada7c583f13620ef76e6bdc510d9fb04bceebb", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/73ada7c583f13620ef76e6bdc510d9fb04bceebb", "committedDate": "2020-08-05T19:52:19Z", "message": "Mark commands as deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13f0ff3a44371a32a4d4fcc6eef32aa1b0c3992b", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/13f0ff3a44371a32a4d4fcc6eef32aa1b0c3992b", "committedDate": "2020-08-05T19:52:19Z", "message": "Log warning when deprecated command requests are received"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69a44bbfadd3497f3e54217bd96b2bc573e5d832", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/69a44bbfadd3497f3e54217bd96b2bc573e5d832", "committedDate": "2020-08-05T19:52:19Z", "message": "Pass ConnectionDescriptor through to reports service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9c4248efeff1b035084c6d2d7318e4a2c65357", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/6d9c4248efeff1b035084c6d2d7318e4a2c65357", "committedDate": "2020-08-05T19:52:19Z", "message": "Use ConnectionDescriptor, not just its targetId, as cache key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "000abf9d68da154b32e2a279ecf11bc87bf7389c", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/000abf9d68da154b32e2a279ecf11bc87bf7389c", "committedDate": "2020-08-05T19:52:19Z", "message": "Snapshot creation should not be tied to a recording name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db158c728988239195320112fe60e76a81c51653", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/db158c728988239195320112fe60e76a81c51653", "committedDate": "2020-08-05T19:53:02Z", "message": "Include report/download URLs in archived recordings response\n\nFormat as JSON array of objects, rather than simple array of strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7938a0e2517642700819672b85137a9c514d53", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/ee7938a0e2517642700819672b85137a9c514d53", "committedDate": "2020-08-05T19:53:03Z", "message": "Add missing binding for archived recording deletion handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c544879fc91e313c1f6067a7e9f5fc1866050c9", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/3c544879fc91e313c1f6067a7e9f5fc1866050c9", "committedDate": "2020-08-05T19:53:03Z", "message": "Correctly end archived recording deletion request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ec644c366861e47114faf810dcdbcbfb6e1563", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/18ec644c366861e47114faf810dcdbcbfb6e1563", "committedDate": "2020-08-05T19:53:03Z", "message": "Correct reversed order of parameters in exception message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25306ec0e0d9d6cd0a68152ff75a532ece991a2d", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/25306ec0e0d9d6cd0a68152ff75a532ece991a2d", "committedDate": "2020-08-05T19:53:03Z", "message": "Use more appropriate status code when archives are unavailable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "583fbe5b4494c92bcfefd032a2173810273c3670", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/583fbe5b4494c92bcfefd032a2173810273c3670", "committedDate": "2020-07-31T14:12:52Z", "message": "Use more appropriate status code when archives are unavailable"}, "afterCommit": {"oid": "25306ec0e0d9d6cd0a68152ff75a532ece991a2d", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/25306ec0e0d9d6cd0a68152ff75a532ece991a2d", "committedDate": "2020-08-05T19:53:03Z", "message": "Use more appropriate status code when archives are unavailable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe", "committedDate": "2020-08-05T22:00:37Z", "message": "Correct rebased test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODQ5NzMy", "url": "https://github.com/cryostatio/cryostat/pull/222#pullrequestreview-462849732", "createdAt": "2020-08-06T20:23:32Z", "commit": {"oid": "ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyMzozMlrOG9C_Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoyMzozMlrOG9C_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2NTIzNA==", "bodyText": "Would the check for this be running mvn spotbugs:check ?", "url": "https://github.com/cryostatio/cryostat/pull/222#discussion_r466665234", "createdAt": "2020-08-06T20:23:32Z", "author": {"login": "jiekang"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/RecordingUploadPostHandler.java", "diffHunk": "@@ -0,0 +1,174 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.net.web.handlers;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.redhat.rhjmc.containerjfr.MainModule;\n+import com.redhat.rhjmc.containerjfr.core.sys.Environment;\n+import com.redhat.rhjmc.containerjfr.core.sys.FileSystem;\n+import com.redhat.rhjmc.containerjfr.net.AuthManager;\n+import com.redhat.rhjmc.containerjfr.net.web.HttpMimeType;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.client.HttpResponse;\n+import io.vertx.ext.web.client.WebClient;\n+import io.vertx.ext.web.handler.impl.HttpStatusException;\n+import io.vertx.ext.web.multipart.MultipartForm;\n+\n+class RecordingUploadPostHandler extends AbstractAuthenticatedRequestHandler {\n+\n+    private final Environment env;\n+    private final WebClient webClient;\n+    private final FileSystem fs;\n+    private final Path savedRecordingsPath;\n+\n+    @Inject\n+    RecordingUploadPostHandler(\n+            AuthManager auth,\n+            Environment env,\n+            WebClient webClient,\n+            FileSystem fs,\n+            @Named(MainModule.RECORDINGS_PATH) Path savedRecordingsPath) {\n+        super(auth);\n+        this.env = env;\n+        this.webClient = webClient;\n+        this.fs = fs;\n+        this.savedRecordingsPath = savedRecordingsPath;\n+    }\n+\n+    @Override\n+    public HttpMethod httpMethod() {\n+        return HttpMethod.POST;\n+    }\n+\n+    @Override\n+    public String path() {\n+        return \"/api/v1/recordings/:recordingName/upload\";\n+    }\n+\n+    @Override\n+    public boolean isAsync() {\n+        return false;\n+    }\n+\n+    @Override\n+    void handleAuthenticated(RoutingContext ctx) throws Exception {\n+        String recordingName = ctx.pathParam(\"recordingName\");\n+        try {\n+            URL uploadUrl = new URL(env.getEnv(\"GRAFANA_DATASOURCE_URL\"));\n+            // TODO validate URL before POST attempt\n+            ResponseMessage response = doPost(recordingName, uploadUrl);\n+            ctx.response().setStatusCode(response.statusCode);\n+            ctx.response().setStatusMessage(response.statusMessage);\n+            ctx.response().end(response.body);\n+        } catch (MalformedURLException e) {\n+            throw new HttpStatusException(501, e);\n+        }\n+    }\n+\n+    // FindBugs thinks the recordingPath or its properties is null somehow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODYzOTg4", "url": "https://github.com/cryostatio/cryostat/pull/222#pullrequestreview-462863988", "createdAt": "2020-08-06T20:45:30Z", "commit": {"oid": "ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDo0NTozMFrOG9DpyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDo0NTozMFrOG9DpyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NjE2OA==", "bodyText": "resolve can throw an InvalidPathException. If this happens, it will throw through handleAuthenticated as it only catches MalformedURLException. Would it make sense to handle it within instead to respond that the input was invalid? Or does it do that somewhere higher up?\nI see test class for TargetRecordingUploadPostHandler but not for this one. Is that intended?", "url": "https://github.com/cryostatio/cryostat/pull/222#discussion_r466676168", "createdAt": "2020-08-06T20:45:30Z", "author": {"login": "jiekang"}, "path": "src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/RecordingUploadPostHandler.java", "diffHunk": "@@ -0,0 +1,174 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.net.web.handlers;\n+\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.redhat.rhjmc.containerjfr.MainModule;\n+import com.redhat.rhjmc.containerjfr.core.sys.Environment;\n+import com.redhat.rhjmc.containerjfr.core.sys.FileSystem;\n+import com.redhat.rhjmc.containerjfr.net.AuthManager;\n+import com.redhat.rhjmc.containerjfr.net.web.HttpMimeType;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.client.HttpResponse;\n+import io.vertx.ext.web.client.WebClient;\n+import io.vertx.ext.web.handler.impl.HttpStatusException;\n+import io.vertx.ext.web.multipart.MultipartForm;\n+\n+class RecordingUploadPostHandler extends AbstractAuthenticatedRequestHandler {\n+\n+    private final Environment env;\n+    private final WebClient webClient;\n+    private final FileSystem fs;\n+    private final Path savedRecordingsPath;\n+\n+    @Inject\n+    RecordingUploadPostHandler(\n+            AuthManager auth,\n+            Environment env,\n+            WebClient webClient,\n+            FileSystem fs,\n+            @Named(MainModule.RECORDINGS_PATH) Path savedRecordingsPath) {\n+        super(auth);\n+        this.env = env;\n+        this.webClient = webClient;\n+        this.fs = fs;\n+        this.savedRecordingsPath = savedRecordingsPath;\n+    }\n+\n+    @Override\n+    public HttpMethod httpMethod() {\n+        return HttpMethod.POST;\n+    }\n+\n+    @Override\n+    public String path() {\n+        return \"/api/v1/recordings/:recordingName/upload\";\n+    }\n+\n+    @Override\n+    public boolean isAsync() {\n+        return false;\n+    }\n+\n+    @Override\n+    void handleAuthenticated(RoutingContext ctx) throws Exception {\n+        String recordingName = ctx.pathParam(\"recordingName\");\n+        try {\n+            URL uploadUrl = new URL(env.getEnv(\"GRAFANA_DATASOURCE_URL\"));\n+            // TODO validate URL before POST attempt\n+            ResponseMessage response = doPost(recordingName, uploadUrl);\n+            ctx.response().setStatusCode(response.statusCode);\n+            ctx.response().setStatusMessage(response.statusMessage);\n+            ctx.response().end(response.body);\n+        } catch (MalformedURLException e) {\n+            throw new HttpStatusException(501, e);\n+        }\n+    }\n+\n+    // FindBugs thinks the recordingPath or its properties is null somehow\n+    @SuppressFBWarnings(\"NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE\")\n+    private ResponseMessage doPost(String recordingName, URL uploadUrl) throws Exception {\n+        Path recordingPath =\n+                getRecordingPath(recordingName)\n+                        .orElseThrow(() -> new HttpStatusException(404, recordingName));\n+\n+        MultipartForm form =\n+                MultipartForm.create()\n+                        .binaryFileUpload(\n+                                \"file\",\n+                                recordingName,\n+                                recordingPath.toString(),\n+                                HttpMimeType.OCTET_STREAM.toString());\n+\n+        CompletableFuture<ResponseMessage> future = new CompletableFuture<>();\n+        webClient\n+                .postAbs(uploadUrl.toURI().resolve(\"/load\").normalize().toString())\n+                .timeout(30_000L)\n+                .sendMultipartForm(\n+                        form,\n+                        uploadHandler -> {\n+                            if (uploadHandler.failed()) {\n+                                future.completeExceptionally(uploadHandler.cause());\n+                                return;\n+                            }\n+                            HttpResponse<Buffer> response = uploadHandler.result();\n+                            future.complete(\n+                                    new ResponseMessage(\n+                                            response.statusCode(),\n+                                            response.statusMessage(),\n+                                            response.bodyAsString()));\n+                        });\n+        return future.get();\n+    }\n+\n+    Optional<Path> getRecordingPath(String recordingName) throws Exception {\n+        Path archivedRecording = savedRecordingsPath.resolve(recordingName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab0b68c55fa917838b5c4c0d5057a15b7e4ccefe"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98c6fe094e4565bb9f8768fe509eb384b608d8fb", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/98c6fe094e4565bb9f8768fe509eb384b608d8fb", "committedDate": "2020-08-06T20:58:53Z", "message": "Remove spotbugs suppression annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e3bbd811d106f379e47a04339d98c78db07f944", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/7e3bbd811d106f379e47a04339d98c78db07f944", "committedDate": "2020-08-06T20:58:53Z", "message": "Respond 400 if client provides invalid recording name (path)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ea5220925e7bbdaee759cd91a90ce8915e55b15", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/5ea5220925e7bbdaee759cd91a90ce8915e55b15", "committedDate": "2020-08-06T20:57:24Z", "message": "Respond 400 if client provides invalid recording name (path)"}, "afterCommit": {"oid": "7e3bbd811d106f379e47a04339d98c78db07f944", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/7e3bbd811d106f379e47a04339d98c78db07f944", "committedDate": "2020-08-06T20:58:53Z", "message": "Respond 400 if client provides invalid recording name (path)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84604b38492f1edefa7c8d3fa088975e82fba79d", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/84604b38492f1edefa7c8d3fa088975e82fba79d", "committedDate": "2020-08-06T21:19:44Z", "message": "Respond 404 when recording not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a559e299bd4dd82638c3072b0b842adccdddb097", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/a559e299bd4dd82638c3072b0b842adccdddb097", "committedDate": "2020-08-06T21:21:41Z", "message": "Add RecordingUploadPostHandlerTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9aa3bcf047e54bd0907033ea286211be1e75db0", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/a9aa3bcf047e54bd0907033ea286211be1e75db0", "committedDate": "2020-08-06T21:19:54Z", "message": "Add RecordingUploadPostHandlerTest"}, "afterCommit": {"oid": "a559e299bd4dd82638c3072b0b842adccdddb097", "author": {"user": {"login": "andrewazores", "name": "Andrew Azores"}}, "url": "https://github.com/cryostatio/cryostat/commit/a559e299bd4dd82638c3072b0b842adccdddb097", "committedDate": "2020-08-06T21:21:41Z", "message": "Add RecordingUploadPostHandlerTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODkwNjA4", "url": "https://github.com/cryostatio/cryostat/pull/222#pullrequestreview-462890608", "createdAt": "2020-08-06T21:30:58Z", "commit": {"oid": "a559e299bd4dd82638c3072b0b842adccdddb097"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3186, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}