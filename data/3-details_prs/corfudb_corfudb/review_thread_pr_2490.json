{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MzU3NjU0", "number": 2490, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzowOTozM1rODtx4Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzowOTozM1rODtx4Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzI5NzU1OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzowOTozM1rOF_ZzFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTozMTo0NFrOGEyS_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNzI4NA==", "bodyText": "please replace by\nreturn ImmutableList.copyOf(mainMap.values());", "url": "https://github.com/CorfuDB/CorfuDB/pull/2490#discussion_r402027284", "createdAt": "2020-04-02T03:09:33Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -473,7 +474,7 @@ public void clear() {\n     public @Nonnull Collection<V> values() {\n         return mainMap.values()\n                 .stream()\n-                .collect(ImmutableSet.toImmutableSet());\n+                .collect(ImmutableList.toImmutableList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e165f908531693965e8ad5c9e3052fa1d2734cfd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3MTU1MQ==", "bodyText": "Done.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2490#discussion_r407671551", "createdAt": "2020-04-13T19:31:44Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -473,7 +474,7 @@ public void clear() {\n     public @Nonnull Collection<V> values() {\n         return mainMap.values()\n                 .stream()\n-                .collect(ImmutableSet.toImmutableSet());\n+                .collect(ImmutableList.toImmutableList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNzI4NA=="}, "originalCommit": {"oid": "e165f908531693965e8ad5c9e3052fa1d2734cfd"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1953, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}