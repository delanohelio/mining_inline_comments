{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mjk4MTc1", "number": 2613, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1MzoyN1rOEOWD9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTowOTowMVrOEO7Lrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDc2OTgyOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1MzoyN1rOGxciGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo1MzoxM1rOGxeyHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMDg4OQ==", "bodyText": "Why do you need a local variable for this?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454500889", "createdAt": "2020-07-14T16:53:27Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNzc1Nw==", "bodyText": "activeServer is a volatile and can be re-assigned by multiple threads.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454537757", "createdAt": "2020-07-14T17:53:13Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMDg4OQ=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTI0ODc2OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODo1OToxMlrOGxhIpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMToyMTozN1rOGxqzLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NjI5NQ==", "bodyText": "This doesn't help at all, I suspect it can even cause loss of the logs.\nLogback already have solved the problem, and we have it enabled \n  \n    \n      CorfuDB/infrastructure/src/main/resources/logback.prod.xml\n    \n    \n         Line 5\n      in\n      30c8d15\n    \n    \n    \n    \n\n        \n          \n           <shutdownHook/>", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454576295", "createdAt": "2020-07-14T18:59:12Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();\n+            }\n+        } catch (Throwable th) {\n+            log.error(\"cleanShutdown: failed during shutdown\", th);\n+        }\n+\n+        // Flush the async appender before exiting to prevent the loss of logs\n+        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcwODA5Mw==", "bodyText": "This is not the Matrix, but things are not what they seem to be.\nThe shutdown hook configuration added in #2049 is malformed and actually doesn't register a hook that stops the logger's context on shutdown. This is true despite what logback's documentation says, it might be outdated, there might be a bug, or it might just be inaccurate. At least for version 1.2.3 it doesn't work.\nFor a shutdown hook to be called, a shutdown thread must be registered with Runtime.getRuntime().addShutdownHook for it to be executed. If you run the server and collect a heap dump, you can inspect all the shutdown hooks registered and you won't see any hooks registered by logback. This means that the logger context is not being stopped properly on shutdown, which explains some of the log loss I've seen debugging a couple of bugs.\nNow even if that configuration works, its not the best way of implementing \"shutdown\" logic for a logger because there is no order on shutdown hooks. This means that logging statements produced during the execution of the shutdown hook can be lost this is due to an undefined execution order of the hooks. If the logback shutdown hook is executed first  then subsequent logs will be lost from other hooks.\nIf you are not convinced, then you can inspect logback's source code here: https://github.com/qos-ch/logback/blob/a154cd1b564d436c90a26b8cb1a2e8ffff0a4a47/logback-core/src/main/java/ch/qos/logback/core/joran/action/ShutdownHookAction.java#L46\nIf you inspect the code snippet I linked you'll see that it tries to find a class attribute, but fails to do so (because it doesn't exist). This means that even the \"default\" hook isn't being registered.\nFurthermore, the documentation you link about the default hook is incorrect, if you checkout logback's code base version 1.2.3 you'll see that a DefaultShutdownHook type doesn't even exist.\nFinally, to fix the configuration bug introduced in #2049  the class and full type path must be supplied. For example, the correct configuration for installing a default hook would be\n<shutdownHook class=\"ch.qos.logback.core.hook.DelayingShutdownHook\"/>\nAnyways, I think this PR fixes an existing problem on master and improves logging in general (via explicit shutdown ordering) and I think we should go forward with it.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454708093", "createdAt": "2020-07-14T23:45:57Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();\n+            }\n+        } catch (Throwable th) {\n+            log.error(\"cleanShutdown: failed during shutdown\", th);\n+        }\n+\n+        // Flush the async appender before exiting to prevent the loss of logs\n+        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NjI5NQ=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMjM1Mg==", "bodyText": "So,\n\nlet's add DelayingShutdownHook or any other class that is required to the shutdownHook?\nwhat I see from source code is all the hooks are run in parallel, which means no hooks wait for each other. If you do not shutdown JVM then no reason for shutting down the logger. If the JVM gonna fail you will lose your logs, either way, it doesn't matter if you shutdown it by a hook or explicitly in your code, the effect will be the same.\n\nI still don't see the motivation for adding the code that shouldn't be added. because we have a solution provided by the library of the box.\nThat's great if you found a misconfiguration bug in the config, let's fix the config?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454722352", "createdAt": "2020-07-15T00:36:26Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();\n+            }\n+        } catch (Throwable th) {\n+            log.error(\"cleanShutdown: failed during shutdown\", th);\n+        }\n+\n+        // Flush the async appender before exiting to prevent the loss of logs\n+        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NjI5NQ=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczMTAzMw==", "bodyText": "I still don't see the motivation for adding the code that shouldn't be added\n\nPlease read my response again.\nEven if you ignore the logback bug, the PR doesn't re-implement the \"out-of-box\" behavior. This PR adds execution order which I already describe in detail.\n\nhooks are run in parallel, which means no hooks wait for each other.\n\nI never claimed that. I explicitly mention undefined execution order , which is the whole point of having one hook and having serial order, as opposed to having two hooks and no order.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454731033", "createdAt": "2020-07-15T01:09:02Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();\n+            }\n+        } catch (Throwable th) {\n+            log.error(\"cleanShutdown: failed during shutdown\", th);\n+        }\n+\n+        // Flush the async appender before exiting to prevent the loss of logs\n+        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NjI5NQ=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNDYzOA==", "bodyText": "Ok, I see your point", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454734638", "createdAt": "2020-07-15T01:21:37Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();\n+            }\n+        } catch (Throwable th) {\n+            log.error(\"cleanShutdown: failed during shutdown\", th);\n+        }\n+\n+        // Flush the async appender before exiting to prevent the loss of logs\n+        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NjI5NQ=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjIzMjA4OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDo1Njo0NlrOGxqYaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzoxNToyM1rOGxxTTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyNzc4Nw==", "bodyText": "it has to be current  instead of activeServer", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454727787", "createdAt": "2020-07-15T00:56:46Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0MTE2NQ==", "bodyText": "Yep.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454841165", "createdAt": "2020-07-15T07:15:23Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                activeServer.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyNzc4Nw=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjIzNjI4OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDo1OToyMFrOGxqbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzoxNTo1MVrOGxxUNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyODQ2NA==", "bodyText": "what about - replace volatile by AtomicReference? Then your code will be cleaner, no need for checking for null and bringing additional mental complexity to the code?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454728464", "createdAt": "2020-07-15T00:59:20Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyOTY4MA==", "bodyText": "Ok, looks like AtomicReference doesn't have good API for that. Nevermind", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454729680", "createdAt": "2020-07-15T01:03:55Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyODQ2NA=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0MTM5Nw==", "bodyText": "Ok.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454841397", "createdAt": "2020-07-15T07:15:51Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyODQ2NA=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjI5OTIyOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/resources/logback.prod.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMTozMzo0MVrOGxq_mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzoxMzo1NlrOGxxQug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzgxOA==", "bodyText": "Should we remove this line: https://github.com/CorfuDB/CorfuDB/blob/master/infrastructure/src/main/resources/logback.prod.xml#L5 , since we are doing it elsewhere and it's missing class name as well?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454737818", "createdAt": "2020-07-15T01:33:41Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/resources/logback.prod.xml", "diffHunk": "@@ -27,6 +27,7 @@\n     <appender name=\"async_file\" class=\"ch.qos.logback.classic.AsyncAppender\">\n         <appender-ref ref=\"file\" />\n         <queueSize>1024</queueSize>\n+        <maxFlushTime>5000</maxFlushTime>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg0MDUwNg==", "bodyText": "Yep, I think we should keep maxFlushTime", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r454840506", "createdAt": "2020-07-15T07:13:56Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/resources/logback.prod.xml", "diffHunk": "@@ -27,6 +27,7 @@\n     <appender name=\"async_file\" class=\"ch.qos.logback.classic.AsyncAppender\">\n         <appender-ref ref=\"file\" />\n         <queueSize>1024</queueSize>\n+        <maxFlushTime>5000</maxFlushTime>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDczNzgxOA=="}, "originalCommit": {"oid": "95e7e150cfab0df62b25eb3912206dc43bd2933c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDg1MTY2OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTowOTowMVrOGyWh9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMToxMzoxNlrOGyWmQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1MTEyNw==", "bodyText": "In the best case would be great to get rid of a volatile variable completely. Probably next time", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r455451127", "createdAt": "2020-07-16T01:09:01Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                current.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad3026b915e39d6d20363d99d88800f0fec2f2aa"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1MjIyNw==", "bodyText": "I'm planning to get rid of CorfuServerNode its unnecessarily complex, with that the volatile will disappear.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2613#discussion_r455452227", "createdAt": "2020-07-16T01:13:16Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServer.java", "diffHunk": "@@ -346,7 +347,18 @@ static void restartServer(boolean resetData) {\n     private static void cleanShutdown() {\n         log.info(\"CleanShutdown: Starting Cleanup.\");\n         shutdownServer = true;\n-        activeServer.close();\n+        try {\n+            CorfuServerNode current = activeServer;\n+            if (current != null) {\n+                current.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1MTEyNw=="}, "originalCommit": {"oid": "ad3026b915e39d6d20363d99d88800f0fec2f2aa"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1840, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}