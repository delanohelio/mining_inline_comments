{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzQ3NTEx", "number": 2329, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzo0ODowNlrODbqcrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0MzoyNlrODcGKmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzMzNjEyOnYy", "diffSide": "LEFT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzo0ODowNlrOFjRtcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNTozNToyMlrOFkByQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw==", "bodyText": "We skip this check if it is MAC os by checking OS property.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r372534643", "createdAt": "2020-01-29T17:48:06Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47df9b05c40225e44a0d456ba6847c986b27f6cb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyMjQxNg==", "bodyText": "We could but it would be better to avoid adding platform specific code as far as possible.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r372722416", "createdAt": "2020-01-30T01:40:30Z", "author": {"login": "hisundar"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}, "originalCommit": {"oid": "47df9b05c40225e44a0d456ba6847c986b27f6cb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0MDcyNQ==", "bodyText": "If we don't do this check on Linux, and the file system is really in read-only mode. The following call new File(), it will throw an IO.readonly.exception. it is better to handle it.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373240725", "createdAt": "2020-01-30T23:02:43Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}, "originalCommit": {"oid": "47df9b05c40225e44a0d456ba6847c986b27f6cb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjMwNQ==", "bodyText": "if the new File() throws an IO.readonly.exception that is also acceptable. Either case the objective of preventing a LogUnitServer from coming up would be accomplished, right?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373322305", "createdAt": "2020-01-31T05:35:22Z", "author": {"login": "hisundar"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}, "originalCommit": {"oid": "47df9b05c40225e44a0d456ba6847c986b27f6cb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzg3NzM5OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMzo0MzoyNlrOFj9jiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNTozNzozOVrOFkBzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzAwMA==", "bodyText": "Just saw this comment in JDK source code:\nhttps://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/io/File.java#L780\nLooks like the parent filesystem check may still be necessary  in some cases in addition to the directory check here, though I understand it's still not 100% guarantee.\nCan we try to increase JVM privilege to overcome this issue? Or use another directory check API with stronger guarantee?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373253000", "createdAt": "2020-01-30T23:43:26Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {\n-                throw new LogUnitException(\"Cannot start Corfu on a read-only filesystem:\" + corfuDir);\n-            }\n-\n             File corfuDirFile = new File(corfuDir);\n             if (!corfuDirFile.canWrite()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7090990c7785877c98ab47bc7c96bbbd71614e19"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjY4NA==", "bodyText": "From the Java doc..\nOn some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only.\nWe are only interested in capability to write to a file. If the permissions allow modification of the file, that is going to be good enough for LogUnitServer.\nBesides this is a small best effort check. It would be quite difficult to cover all the possibilities of file based permissions mismatch that can occur.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373322684", "createdAt": "2020-01-31T05:37:39Z", "author": {"login": "hisundar"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {\n-                throw new LogUnitException(\"Cannot start Corfu on a read-only filesystem:\" + corfuDir);\n-            }\n-\n             File corfuDirFile = new File(corfuDir);\n             if (!corfuDirFile.canWrite()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzAwMA=="}, "originalCommit": {"oid": "7090990c7785877c98ab47bc7c96bbbd71614e19"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2066, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}