{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODIxNjg5", "number": 2684, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjowMjo0N1rOEWYAiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjowMjo0N1rOEWYAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODk3NDgwOnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjowMjo0N1rOG9qC6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMjo0NToxOVrOG9qv0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwNTE5Mg==", "bodyText": "where do we define what gets executed when this thread runs?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2684#discussion_r467305192", "createdAt": "2020-08-07T22:02:47Z", "author": {"login": "pankti-m"}, "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "diffHunk": "@@ -85,6 +90,14 @@ public LockClient(UUID clientId, CorfuRuntime corfuRuntime) throws NoSuchMethodE\n             return t;\n         });\n \n+        this.leaseMonitorScheduler = Executors.newScheduledThreadPool(1, (r) ->\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79afad060617ac3ca6f405e0b743dce53114411f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMxNjY5MA==", "bodyText": "You can see that logic in the HasLeaseState class L.196", "url": "https://github.com/CorfuDB/CorfuDB/pull/2684#discussion_r467316690", "createdAt": "2020-08-07T22:45:19Z", "author": {"login": "annym"}, "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "diffHunk": "@@ -85,6 +90,14 @@ public LockClient(UUID clientId, CorfuRuntime corfuRuntime) throws NoSuchMethodE\n             return t;\n         });\n \n+        this.leaseMonitorScheduler = Executors.newScheduledThreadPool(1, (r) ->\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMwNTE5Mg=="}, "originalCommit": {"oid": "79afad060617ac3ca6f405e0b743dce53114411f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1900, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}