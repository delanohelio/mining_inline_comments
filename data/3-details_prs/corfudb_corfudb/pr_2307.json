{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzg1NTEx", "number": 2307, "title": "Change checkpoint initialization logic", "bodyText": "This patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address.\nOverview\nDescription:\nWhy should this be merged:\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-01-14T00:19:26Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2307", "merged": true, "mergeCommit": {"oid": "cce324f4cdc0bef3ba0355890caa5e3d673d1b4b"}, "closed": true, "closedAt": "2020-01-27T04:26:12Z", "author": {"login": "vjeko"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7HXEyAFqTM0NDM1NjYyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-QQd1ABqjI5ODAyMjY0NTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MzU2NjI5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2307#pullrequestreview-344356629", "createdAt": "2020-01-17T04:19:11Z", "commit": {"oid": "334162d1ea179324f15b3622ffdfb1e905cf2810"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNDoxOToxMVrOFeueIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNDoyMzo0OFrOFeuhZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2Mjk3OQ==", "bodyText": "Could they be final? Looks we don't change their references.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2307#discussion_r367762979", "createdAt": "2020-01-17T04:19:11Z", "author": {"login": "zhangn49"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/stream/AbstractQueuedStreamView.java", "diffHunk": "@@ -911,6 +913,8 @@ synchronized void seek(long globalAddress) {\n      */\n     @Data\n     static class StreamCheckpoint {\n+        public static StreamCheckpoint UNINITIALIZED = new StreamCheckpoint();\n+        public static StreamCheckpoint INITIALIZED = new StreamCheckpoint();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "334162d1ea179324f15b3622ffdfb1e905cf2810"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2MzgxNA==", "bodyText": "I see testCheckpointTrim and testSuccessiveCheckpointTrim use these four lines to trim.\nCan we replace them with trim()?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2307#discussion_r367763814", "createdAt": "2020-01-17T04:23:48Z", "author": {"login": "zhangn49"}, "path": "test/src/test/java/org/corfudb/runtime/checkpoint/CheckpointTrimTest.java", "diffHunk": "@@ -174,6 +182,68 @@ public void testSuccessiveCheckpointTrim() throws Exception {\n                 .isEqualTo(\"a\" + (nCheckpoints - 1));\n     }\n \n+    /**\n+     * Verify that the streaming interface can be consumed directly and that\n+     * {@link TrimmedException} is being thrown when linearizable history is lost.\n+     */\n+    @Test\n+    public void rawStreamConsumer() {\n+        final int BATCH_SIZE = 10;\n+        final int CHECKPOINT_SIZE = 3;\n+        final String CHECKPOINT_AUTHOR = \"Author\";\n+        final String tableName = \"test\";\n+        final CorfuTable<Integer, Integer> map = getDefaultRuntime().getObjectsView().build()\n+                .setTypeToken(new TypeToken<CorfuTable<Integer, Integer>>() {})\n+                .setStreamName(tableName)\n+                .open();\n+\n+        final MultiCheckpointWriter<CorfuTable> mcw = new MultiCheckpointWriter();\n+        mcw.addMap(map);\n+\n+        IntStream.range(0, BATCH_SIZE).forEach(idx -> map.put(idx, idx));\n+\n+        // Insert a checkpoint\n+        Token checkpointAddress = mcw.appendCheckpoints(getRuntime(), CHECKPOINT_AUTHOR);\n+\n+        IntStream.range(0, BATCH_SIZE).forEach(idx -> map.put(idx, idx));\n+\n+        // Trim the log in between the checkpoints\n+        trim(checkpointAddress);\n+\n+        CorfuRuntime newRuntime = getNewRuntime(getDefaultNode()).connect();\n+        Map<Integer, Integer> newMap = newRuntime.getObjectsView().build()\n+                .setTypeToken(new TypeToken<SMRMap<Integer, Integer>>() {\n+                })\n+                .setStreamName(tableName)\n+                .open();\n+\n+        IStreamView s = newRuntime.getStreamsView().get(CorfuRuntime.getStreamID(tableName));\n+        s.seek(BATCH_SIZE + CHECKPOINT_SIZE);\n+        // Seek beyond the last trimmed address.\n+        // The first call to remainingUpTo() will load the checkpoint, and the\n+        // second one will fetch the actual data.\n+        Assertions.assertThat(Stream.of(s.remainingUpTo(Long.MAX_VALUE), s.remainingUpTo(Long.MAX_VALUE))\n+                .map(List::size).mapToInt(Integer::intValue).sum())\n+                .isEqualTo(BATCH_SIZE);\n+\n+        trim(mcw.appendCheckpoints(getRuntime(), CHECKPOINT_AUTHOR));\n+        IntStream.range(0, BATCH_SIZE).forEach(idx -> newMap.put(idx, idx));\n+        Assertions.assertThatThrownBy(() -> s.remainingUpTo(Long.MAX_VALUE))\n+                .isInstanceOf(TrimmedException.class);\n+    }\n+\n+    /**\n+     * Given the token, trim the address-space at {@link Token#getSequence()}.\n+     *\n+     * @param token point at which to trim the address space.\n+     */\n+    private void trim(Token token) {\n+        getRuntime().getAddressSpaceView().prefixTrim(token);\n+        getRuntime().getAddressSpaceView().gc();\n+        getRuntime().getAddressSpaceView().invalidateServerCaches();\n+        getRuntime().getAddressSpaceView().invalidateClientCache();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "334162d1ea179324f15b3622ffdfb1e905cf2810"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjU0MDkw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2307#pullrequestreview-348254090", "createdAt": "2020-01-24T22:11:12Z", "commit": {"oid": "334162d1ea179324f15b3622ffdfb1e905cf2810"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "334162d1ea179324f15b3622ffdfb1e905cf2810", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/334162d1ea179324f15b3622ffdfb1e905cf2810", "committedDate": "2020-01-14T00:10:49Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}, "afterCommit": {"oid": "f861138442b37a9cde4087e3bb23e5e7403d152e", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f861138442b37a9cde4087e3bb23e5e7403d152e", "committedDate": "2020-01-24T22:35:02Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f861138442b37a9cde4087e3bb23e5e7403d152e", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f861138442b37a9cde4087e3bb23e5e7403d152e", "committedDate": "2020-01-24T22:35:02Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}, "afterCommit": {"oid": "ec7e344b2b2176127be0b88b4e8e3efd91ec6948", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ec7e344b2b2176127be0b88b4e8e3efd91ec6948", "committedDate": "2020-01-24T22:36:09Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93bfafc1e841b8e337d86ae44213344f07e49f21", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/93bfafc1e841b8e337d86ae44213344f07e49f21", "committedDate": "2020-01-26T22:54:26Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec7e344b2b2176127be0b88b4e8e3efd91ec6948", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ec7e344b2b2176127be0b88b4e8e3efd91ec6948", "committedDate": "2020-01-24T22:36:09Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}, "afterCommit": {"oid": "93bfafc1e841b8e337d86ae44213344f07e49f21", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/93bfafc1e841b8e337d86ae44213344f07e49f21", "committedDate": "2020-01-26T22:54:26Z", "message": "Change checkpoint initialization logic\n\nThis patch fixes a bug that gets triggers when IStreamView is being\nconsumed directly. When initializing a stream, the condition which\ndictates when a checkpoint should be loaded needs to take into account\nthat a stream has been previously seek-ed to some valid address."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3396, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}