{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTkwMDM0", "number": 2736, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMDoxMjozMFrOEbXlsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDozMjo0NVrOEbzgig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTMzNDkwOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMDoxMjozMFrOHFRK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMDo0Mjo0OFrOHFRbBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4NjI2Nw==", "bodyText": "should this rather be reset on negotiation? because imagine the case where you lost the lock for a short period or even a long period but writes did not progress, so your lastProcessSequence is still valid as you can continue from that point onwards?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r475286267", "createdAt": "2020-08-24T00:12:30Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,6 +436,7 @@ private void onLeadershipAcquire() {\n                 // Standby Site : the LogReplicationServer (server handler) will initiate the LogReplicationSinkManager\n                 log.info(\"Start as Sink (receiver)\");\n                 interClusterReplicationService.getLogReplicationServer().setLeadership(true);\n+                interClusterReplicationService.getLogReplicationServer().getSinkManager().reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4OTA4Mg==", "bodyText": "Do you mean lost the lock for a short period and there is no negotiation during this period? So we don't need to reset in this case.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r475289082", "createdAt": "2020-08-24T00:33:33Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,6 +436,7 @@ private void onLeadershipAcquire() {\n                 // Standby Site : the LogReplicationServer (server handler) will initiate the LogReplicationSinkManager\n                 log.info(\"Start as Sink (receiver)\");\n                 interClusterReplicationService.getLogReplicationServer().setLeadership(true);\n+                interClusterReplicationService.getLogReplicationServer().getSinkManager().reset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4NjI2Nw=="}, "originalCommit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MDM3NQ==", "bodyText": "I see your point. Active won't know remote leader loss if there is no write... Moved it to negotiation", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r475290375", "createdAt": "2020-08-24T00:42:48Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,6 +436,7 @@ private void onLeadershipAcquire() {\n                 // Standby Site : the LogReplicationServer (server handler) will initiate the LogReplicationSinkManager\n                 log.info(\"Start as Sink (receiver)\");\n                 interClusterReplicationService.getLogReplicationServer().setLeadership(true);\n+                interClusterReplicationService.getLogReplicationServer().getSinkManager().reset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4NjI2Nw=="}, "originalCommit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTkwOTIyOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDozMjo0NVrOHF82sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo1MzowNVrOHGlcbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAwMTk3MQ==", "bodyText": "do we also need to print the number of remainingEntries?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r476001971", "createdAt": "2020-08-25T00:32:45Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -328,16 +328,22 @@ public void setReplicationRemainingEntries(String clusterId, long remainingEntri\n         TxBuilder txBuilder = corfuStore.tx(NAMESPACE);\n         txBuilder.update(REPLICATION_STATUS_TABLE, key, val, null);\n         txBuilder.commit();\n+\n+        log.trace(\"setReplicationRemainingEntries: clusterId: {}, remainingEntries: {}, type: {}\",\n+                clusterId, remainingEntries, type);\n     }\n \n     public Map<String, ReplicationStatusVal> getReplicationRemainingEntries() {\n         Map<String, ReplicationStatusVal> replicationStatusMap = new HashMap<>();\n         QueryResult<CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>> entries =\n-                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, (x) -> {return true;});\n+                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, record -> true);\n \n         for(CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>entry : entries.getResult()) {\n             replicationStatusMap.put(entry.getKey().getClusterId(), entry.getPayload());\n         }\n+\n+        log.debug(\"getReplicationRemainingEntries: replicationStatusMap size: {}\", replicationStatusMap.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2Njk5MA==", "bodyText": "I think number of remainingEntries is fine, because the consumer will only check it is 0 or not.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r476666990", "createdAt": "2020-08-25T18:53:05Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -328,16 +328,22 @@ public void setReplicationRemainingEntries(String clusterId, long remainingEntri\n         TxBuilder txBuilder = corfuStore.tx(NAMESPACE);\n         txBuilder.update(REPLICATION_STATUS_TABLE, key, val, null);\n         txBuilder.commit();\n+\n+        log.trace(\"setReplicationRemainingEntries: clusterId: {}, remainingEntries: {}, type: {}\",\n+                clusterId, remainingEntries, type);\n     }\n \n     public Map<String, ReplicationStatusVal> getReplicationRemainingEntries() {\n         Map<String, ReplicationStatusVal> replicationStatusMap = new HashMap<>();\n         QueryResult<CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>> entries =\n-                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, (x) -> {return true;});\n+                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, record -> true);\n \n         for(CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>entry : entries.getResult()) {\n             replicationStatusMap.put(entry.getKey().getClusterId(), entry.getPayload());\n         }\n+\n+        log.debug(\"getReplicationRemainingEntries: replicationStatusMap size: {}\", replicationStatusMap.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAwMTk3MQ=="}, "originalCommit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1660, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}