{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzQyMjE3", "number": 2332, "title": "Make VmManager more reliable in terms of catching runtime exceptions ", "bodyText": "Overview\nDescription:\nMake VmManager more reliable in terms of catching runtime exceptions from ViJava lib\nWhy should this be merged:\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-01-29T20:07:16Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332", "merged": true, "mergeCommit": {"oid": "f6d254acac47519e0cae742f27d6ba03c2e15dda"}, "closed": true, "closedAt": "2020-01-30T22:32:11Z", "author": {"login": "xnull"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_LpFFgH2gAyMzY4NzQyMjE3OjFlMzVjZTA3MjBiMmNmNjFhZWJiNWRiODM1MmMzZGZlNDU0YzFmMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_iU6FAFqTM1MTE4ODQ2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e35ce0720b2cf61aebb5db8352c3dfe454c1f2e", "author": {"user": {"login": "xnull", "name": "Viacheslav"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/1e35ce0720b2cf61aebb5db8352c3dfe454c1f2e", "committedDate": "2020-01-29T20:05:59Z", "message": "Make VmManager more reliable in terms of catching runtime exceptions from ViJava lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26", "author": {"user": {"login": "xnull", "name": "Viacheslav"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/686ba242efc275deef17b80cba3e5d0776408f26", "committedDate": "2020-01-29T23:04:19Z", "message": "Merge branch 'master' into universe-vmmanager-err-handlers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNTYwMDYx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#pullrequestreview-350560061", "createdAt": "2020-01-30T03:10:49Z", "commit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzoxMDo0OVrOFjeTnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzoxMDo0OVrOFjeTnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTAyMw==", "bodyText": "Do you want a message for this exception?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372741023", "createdAt": "2020-01-30T03:10:49Z", "author": {"login": "hisundar"}, "path": "it/src/main/java/org/corfudb/universe/universe/vm/VmManager.java", "diffHunk": "@@ -284,16 +297,20 @@ private VirtualMachineCloneSpec createLinuxCustomization(ImmutableMap<String, St\n     }\n \n     private Result<VmManager, UniverseException> cloneAndPowerOn(VirtualMachine vm) {\n-        VirtualMachinePowerState powerState = vm.getSummary().runtime.powerState;\n-        if (powerState == VirtualMachinePowerState.poweredOn) {\n-            return Result.ok(this);\n-        } else {\n-            return powerOn().map(taskInfo -> this);\n+        try {\n+            VirtualMachinePowerState powerState = vm.getSummary().runtime.powerState;\n+            if (powerState == VirtualMachinePowerState.poweredOn) {\n+                return Result.ok(this);\n+            } else {\n+                return powerOn().map(taskInfo -> this);\n+            }\n+        } catch (RuntimeException ex) {\n+            return Result.error(new UniverseException(ex));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "originalPosition": 160}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNTYwMTQ4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#pullrequestreview-350560148", "createdAt": "2020-01-30T03:11:12Z", "commit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzoxMToxMlrOFjeT6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzoxMToxMlrOFjeT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0MTA5Nw==", "bodyText": "Maybe a message for this exception", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#discussion_r372741097", "createdAt": "2020-01-30T03:11:12Z", "author": {"login": "hisundar"}, "path": "it/src/main/java/org/corfudb/universe/universe/vm/VmManager.java", "diffHunk": "@@ -210,33 +218,38 @@ public IpAddress getResolvedIpAddress() {\n         return getVm(universeParams.getTemplateVMName()).flatMap(vmTemplate -> {\n             log.info(\"Cloning the VM {} via vSphere {}\", vmName, universeParams.getVSphereUrl());\n \n-            Properties vmPropsResult = VmConfigPropertiesLoader\n-                    .loadVmProperties()\n-                    .get();\n+            try {\n \n-            ImmutableMap<String, String> vmProps = Maps.fromProperties(vmPropsResult);\n+                Properties vmPropsResult = VmConfigPropertiesLoader\n+                        .loadVmProperties()\n+                        .get();\n \n-            // Create customization for cloning process\n-            VirtualMachineCloneSpec cloneSpec = createLinuxCustomization(vmProps);\n+                ImmutableMap<String, String> vmProps = Maps.fromProperties(vmPropsResult);\n \n-            String folderProp = String.format(\n-                    \"vm%d.%s\", vmName.getIndex(), ResourceType.FOLDER.resource\n-            );\n+                // Create customization for cloning process\n+                VirtualMachineCloneSpec cloneSpec = createLinuxCustomization(vmProps);\n \n-            Folder folder;\n-            if (vmProps.containsKey(folderProp)) {\n-                ManagedObjectReference folderR = new ManagedObjectReference();\n-                folderR.setType(ResourceType.FOLDER.resource);\n+                String folderProp = String.format(\n+                        \"vm%d.%s\", vmName.getIndex(), ResourceType.FOLDER.resource\n+                );\n \n-                String prop = vmProps.get(folderProp);\n-                folderR.setVal(prop);\n+                Folder folder;\n+                if (vmProps.containsKey(folderProp)) {\n+                    ManagedObjectReference folderR = new ManagedObjectReference();\n+                    folderR.setType(ResourceType.FOLDER.resource);\n \n-                folder = new Folder(vmTemplate.getServerConnection(), folderR);\n-            } else {\n-                folder = (Folder) vmTemplate.getParent();\n-            }\n+                    String prop = vmProps.get(folderProp);\n+                    folderR.setVal(prop);\n \n-            return executeTask(() -> vmTemplate.cloneVM_Task(folder, vmName.getName(), cloneSpec));\n+                    folder = new Folder(vmTemplate.getServerConnection(), folderR);\n+                } else {\n+                    folder = (Folder) vmTemplate.getParent();\n+                }\n+\n+                return executeTask(() -> vmTemplate.cloneVM_Task(folder, vmName.getName(), cloneSpec));\n+            } catch (RuntimeException ex) {\n+                return Result.error(new UniverseException(ex));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTY2OTc1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#pullrequestreview-351166975", "createdAt": "2020-01-30T21:51:11Z", "commit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTg4NDYy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2332#pullrequestreview-351188462", "createdAt": "2020-01-30T22:31:46Z", "commit": {"oid": "686ba242efc275deef17b80cba3e5d0776408f26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3441, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}