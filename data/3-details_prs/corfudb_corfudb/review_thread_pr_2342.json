{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzU4Mjk0", "number": 2342, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMTo0OTowMFrODcZYcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMTo0OTowMFrODcZYcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTAyNTc2OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMTo0OTowMFrOFkb0eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTowMDo0NlrOFk8UIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODg1OA==", "bodyText": "You might want to throw an exception on the default path, and have an explicit delete.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2342#discussion_r373748858", "createdAt": "2020-02-01T01:49:00Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java", "diffHunk": "@@ -68,12 +75,26 @@ public CorfuStreamEntry(K key, V payload, M metadata, long address, OperationTyp\n      * Convert a given SMREntry to CorfuStreamEntry.\n      */\n     public static <K extends Message, V extends Message, M extends Message>\n-        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final Class<K> keyClass,\n-            @Nonnull final Class<V> payloadClass, @Nullable final Class<M> metadataClass) {\n+        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final long epoch,\n+                                               @Nonnull final Class<K> keyClass,\n+                                               @Nonnull final Class<V> payloadClass,\n+                                               @Nullable final Class<M> metadataClass) {\n \n         long address = entry.getGlobalAddress();\n \n-        OperationType operationType = (entry.getSMRMethod().equals(\"put\")) ? OperationType.UPDATE : OperationType.DELETE;\n+        OperationType operationType;\n+        log.trace(\"fromSRMEntry: Table {} streamer got SMR {}\", keyClass.getName(), entry.getSMRMethod());\n+        switch(entry.getSMRMethod()) {\n+            case \"put\":\n+                operationType = OperationType.UPDATE;\n+                break;\n+            case \"clear\":\n+                operationType = OperationType.CLEAR;\n+                break;\n+            default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c882b892bcd7bb65af29389e095e1c264e13711"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MTI1MQ==", "bodyText": "good point, done!", "url": "https://github.com/CorfuDB/CorfuDB/pull/2342#discussion_r374281251", "createdAt": "2020-02-03T19:00:46Z", "author": {"login": "hisundar"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuStreamEntry.java", "diffHunk": "@@ -68,12 +75,26 @@ public CorfuStreamEntry(K key, V payload, M metadata, long address, OperationTyp\n      * Convert a given SMREntry to CorfuStreamEntry.\n      */\n     public static <K extends Message, V extends Message, M extends Message>\n-        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final Class<K> keyClass,\n-            @Nonnull final Class<V> payloadClass, @Nullable final Class<M> metadataClass) {\n+        CorfuStreamEntry<K, V, M> fromSMREntry(SMREntry entry, @Nonnull final long epoch,\n+                                               @Nonnull final Class<K> keyClass,\n+                                               @Nonnull final Class<V> payloadClass,\n+                                               @Nullable final Class<M> metadataClass) {\n \n         long address = entry.getGlobalAddress();\n \n-        OperationType operationType = (entry.getSMRMethod().equals(\"put\")) ? OperationType.UPDATE : OperationType.DELETE;\n+        OperationType operationType;\n+        log.trace(\"fromSRMEntry: Table {} streamer got SMR {}\", keyClass.getName(), entry.getSMRMethod());\n+        switch(entry.getSMRMethod()) {\n+            case \"put\":\n+                operationType = OperationType.UPDATE;\n+                break;\n+            case \"clear\":\n+                operationType = OperationType.CLEAR;\n+                break;\n+            default:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0ODg1OA=="}, "originalCommit": {"oid": "2c882b892bcd7bb65af29389e095e1c264e13711"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2080, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}