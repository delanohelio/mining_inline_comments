{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDk2NjEy", "number": 2793, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMjowNDoyNVrOEusf-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjoxNDo0OFrOEuuUIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Mzk5MDMyOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMjowNDoyNVrOHjQ_zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMjowNDoyNVrOHjQ_zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0MDY4Nw==", "bodyText": "It will be good to add a comment here that LR simply replicates the streams and does not need it to be added to the transaction log", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506740687", "createdAt": "2020-10-16T22:04:25Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,7 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        this.corfuStore = new CorfuStore(runtime, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4241125554818f46c01c9ccb1ef628f3d559e1f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDI4NTExOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjoxMDozN1rOHjThMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0MTo0M1rOHjsf_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg==", "bodyText": "is the relation between data change notification and tx stream general to corfu?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506782002", "createdAt": "2020-10-17T02:10:37Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,9 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        // LR does not require transaction logging as we don't want data change notifications on the replicated data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5572c18e2768249f9f49296256faac9c1f97395"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4NjI1MQ==", "bodyText": "not really, it's one use case (out of Corfu) but it can be used for any purpose. Just didn't know how to make it clear.. I've rephrased it, take a look and let me know if you think it still is confusing.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506786251", "createdAt": "2020-10-17T03:02:36Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,9 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        // LR does not require transaction logging as we don't want data change notifications on the replicated data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg=="}, "originalCommit": {"oid": "f5572c18e2768249f9f49296256faac9c1f97395"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTI5Mw==", "bodyText": "maybe we can say - 'Replicated entries from LR need not be logged to the transaction stream'... or something like that?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r507191293", "createdAt": "2020-10-18T17:41:43Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -59,7 +59,9 @@\n \n     public LogReplicationMetadataManager(CorfuRuntime rt, long topologyConfigId, String localClusterId) {\n         this.runtime = rt;\n-        this.corfuStore = new CorfuStore(runtime);\n+        // LR does not require transaction logging as we don't want data change notifications on the replicated data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjAwMg=="}, "originalCommit": {"oid": "f5572c18e2768249f9f49296256faac9c1f97395"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDI4NzcwOnYy", "diffSide": "RIGHT", "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMjoxNDo0OFrOHjTicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMzo1NDoxNlrOHjUAIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjMyMg==", "bodyText": "slightly unrelated to this change, but do we need to create multiple runtimes?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506782322", "createdAt": "2020-10-17T02:14:48Z", "author": {"login": "pankti-m"}, "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java", "diffHunk": "@@ -179,6 +196,88 @@ public void testSnapshotSyncApplyInterrupted() throws Exception {\n         }\n     }\n \n+    /**\n+     * Validate that no data is written into the Standby's Transaction Log during replication\n+     * of 5K objects.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testStandbyTransactionLogging() throws Exception {\n+        final long timeout = 30;\n+\n+        replicationEnded.set(false);\n+\n+        // (1) Subscribe Client to Standby Transaction Log\n+        log.debug(\">>> (1) Subscribe to Transaction Stream on Standby\");\n+        Future<Boolean> consumerState = subscribeTransactionStream();\n+\n+        // (2) Snapshot and Log Entry Sync\n+        log.debug(\">>> (2) Start Snapshot and Log Entry Sync\");\n+        testEndToEndSnapshotAndLogEntrySync();\n+\n+        replicationEnded.set(true);\n+\n+        Boolean txStreamEmpty = consumerState.get(timeout, TimeUnit.SECONDS);\n+        assertThat(txStreamEmpty).isTrue();\n+    }\n+\n+    private Future<Boolean>  subscribeTransactionStream() {\n+\n+        ExecutorService consumer = Executors.newSingleThreadExecutor();\n+        List<CorfuRuntime> consumerRts = new ArrayList<>();\n+\n+        // A thread that starts and consumes transaction updates via the Transaction Stream.\n+        return consumer.submit(() -> {\n+\n+            CorfuRuntime consumerRt = CorfuRuntime.fromParameters(CorfuRuntime.CorfuRuntimeParameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5572c18e2768249f9f49296256faac9c1f97395"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4OTkyMA==", "bodyText": "no, changing to only one and shutting it down...", "url": "https://github.com/CorfuDB/CorfuDB/pull/2793#discussion_r506789920", "createdAt": "2020-10-17T03:54:16Z", "author": {"login": "annym"}, "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationReconfigurationIT.java", "diffHunk": "@@ -179,6 +196,88 @@ public void testSnapshotSyncApplyInterrupted() throws Exception {\n         }\n     }\n \n+    /**\n+     * Validate that no data is written into the Standby's Transaction Log during replication\n+     * of 5K objects.\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testStandbyTransactionLogging() throws Exception {\n+        final long timeout = 30;\n+\n+        replicationEnded.set(false);\n+\n+        // (1) Subscribe Client to Standby Transaction Log\n+        log.debug(\">>> (1) Subscribe to Transaction Stream on Standby\");\n+        Future<Boolean> consumerState = subscribeTransactionStream();\n+\n+        // (2) Snapshot and Log Entry Sync\n+        log.debug(\">>> (2) Start Snapshot and Log Entry Sync\");\n+        testEndToEndSnapshotAndLogEntrySync();\n+\n+        replicationEnded.set(true);\n+\n+        Boolean txStreamEmpty = consumerState.get(timeout, TimeUnit.SECONDS);\n+        assertThat(txStreamEmpty).isTrue();\n+    }\n+\n+    private Future<Boolean>  subscribeTransactionStream() {\n+\n+        ExecutorService consumer = Executors.newSingleThreadExecutor();\n+        List<CorfuRuntime> consumerRts = new ArrayList<>();\n+\n+        // A thread that starts and consumes transaction updates via the Transaction Stream.\n+        return consumer.submit(() -> {\n+\n+            CorfuRuntime consumerRt = CorfuRuntime.fromParameters(CorfuRuntime.CorfuRuntimeParameters", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc4MjMyMg=="}, "originalCommit": {"oid": "f5572c18e2768249f9f49296256faac9c1f97395"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1729, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}