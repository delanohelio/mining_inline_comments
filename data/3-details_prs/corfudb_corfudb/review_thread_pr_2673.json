{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4Nzg0MjA1", "number": 2673, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjoyMTo0NVrOETfn5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjoyMzo1OVrOETfpXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODc2NTE4OnYy", "diffSide": "RIGHT", "path": "corfudb-tools/src/main/java/org/corfudb/browser/CorfuStoreBrowser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjoyMTo0NVrOG5Qr9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMDoxMzozMlrOG539JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5NTQxMw==", "bodyText": "Probably it should be (int)Math.ceil((double)numItems/batchSize);\nImagine 10 entries, in batches of 8, it would return 1, instead of 2.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2673#discussion_r462695413", "createdAt": "2020-07-30T02:21:45Z", "author": {"login": "annym"}, "path": "corfudb-tools/src/main/java/org/corfudb/browser/CorfuStoreBrowser.java", "diffHunk": "@@ -203,4 +206,45 @@ public int dropTable(String namespace, String tablename) {\n         log.info(\"\\n======================\\n\");\n         return tableSize;\n     }\n+\n+    /**\n+     * Loads the table with random data\n+     * @param namespace - the namespace where the table belongs\n+     * @param tablename - table name without the namespace\n+     * @param numItems - total number of items to load\n+     * @param batchSize - number of items in each transaction\n+     * @return - number of entries in the table\n+     */\n+    public int loadTable(String namespace, String tablename, int numItems, int batchSize) {\n+        verifyNamespaceAndTablename(namespace, tablename);\n+        CorfuStore store = new CorfuStore(runtime);\n+        try {\n+            TableOptions.TableOptionsBuilder<Object, Object> optionsBuilder = TableOptions.builder();\n+            if (diskPath != null) {\n+                optionsBuilder.persistentDataPath(Paths.get(diskPath));\n+            }\n+            store.openTable(namespace, tablename,\n+                    TableName.getDefaultInstance().getClass(),\n+                    TableName.getDefaultInstance().getClass(),\n+                    TableName.getDefaultInstance().getClass(),\n+                    optionsBuilder.build());\n+\n+            TableName dummyVal = TableName.newBuilder().setNamespace(namespace).setTableName(tablename).build();\n+            log.info(\"Loading {} items in {} batchSized transactions into {}${}\",\n+                    numItems, batchSize, namespace, tablename);\n+            while (numItems > 0) {\n+                log.info(\"loadTable: Items left {}\", numItems);\n+                TxBuilder tx = store.tx(namespace);\n+                for (int j = batchSize; j > 0 && numItems > 0; j--, numItems--) {\n+                    TableName dummyKey = TableName.newBuilder().setNamespace(Integer.toString(numItems))\n+                            .setTableName(Integer.toString(j)).build();\n+                    tx.update(tablename, dummyKey, dummyVal, dummyVal);\n+                }\n+                tx.commit();\n+            }\n+        } catch (Exception e) {\n+            log.error(\"loadTable: {} {} {} {} failed.\", namespace, tablename, numItems, batchSize, e);\n+        }\n+        return numItems/batchSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e2cf9aa9f3d80dfe1859ec9a366e5882f644b69"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzODc4OQ==", "bodyText": "done. thanks", "url": "https://github.com/CorfuDB/CorfuDB/pull/2673#discussion_r463338789", "createdAt": "2020-07-31T00:13:32Z", "author": {"login": "hisundar"}, "path": "corfudb-tools/src/main/java/org/corfudb/browser/CorfuStoreBrowser.java", "diffHunk": "@@ -203,4 +206,45 @@ public int dropTable(String namespace, String tablename) {\n         log.info(\"\\n======================\\n\");\n         return tableSize;\n     }\n+\n+    /**\n+     * Loads the table with random data\n+     * @param namespace - the namespace where the table belongs\n+     * @param tablename - table name without the namespace\n+     * @param numItems - total number of items to load\n+     * @param batchSize - number of items in each transaction\n+     * @return - number of entries in the table\n+     */\n+    public int loadTable(String namespace, String tablename, int numItems, int batchSize) {\n+        verifyNamespaceAndTablename(namespace, tablename);\n+        CorfuStore store = new CorfuStore(runtime);\n+        try {\n+            TableOptions.TableOptionsBuilder<Object, Object> optionsBuilder = TableOptions.builder();\n+            if (diskPath != null) {\n+                optionsBuilder.persistentDataPath(Paths.get(diskPath));\n+            }\n+            store.openTable(namespace, tablename,\n+                    TableName.getDefaultInstance().getClass(),\n+                    TableName.getDefaultInstance().getClass(),\n+                    TableName.getDefaultInstance().getClass(),\n+                    optionsBuilder.build());\n+\n+            TableName dummyVal = TableName.newBuilder().setNamespace(namespace).setTableName(tablename).build();\n+            log.info(\"Loading {} items in {} batchSized transactions into {}${}\",\n+                    numItems, batchSize, namespace, tablename);\n+            while (numItems > 0) {\n+                log.info(\"loadTable: Items left {}\", numItems);\n+                TxBuilder tx = store.tx(namespace);\n+                for (int j = batchSize; j > 0 && numItems > 0; j--, numItems--) {\n+                    TableName dummyKey = TableName.newBuilder().setNamespace(Integer.toString(numItems))\n+                            .setTableName(Integer.toString(j)).build();\n+                    tx.update(tablename, dummyKey, dummyVal, dummyVal);\n+                }\n+                tx.commit();\n+            }\n+        } catch (Exception e) {\n+            log.error(\"loadTable: {} {} {} {} failed.\", namespace, tablename, numItems, batchSize, e);\n+        }\n+        return numItems/batchSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5NTQxMw=="}, "originalCommit": {"oid": "8e2cf9aa9f3d80dfe1859ec9a366e5882f644b69"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODc2ODk1OnYy", "diffSide": "RIGHT", "path": "test/src/test/java/org/corfudb/integration/CorfuStoreBrowserIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMjoyMzo1OVrOG5QuSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMDoxNDowNVrOG539qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5NjAxMA==", "bodyText": "In line with the above comment probably we should explicitly expect numItems/batchSize (in case someone changes numItems)... or use non-divisible numbers for test completeness.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2673#discussion_r462696010", "createdAt": "2020-07-30T02:23:59Z", "author": {"login": "annym"}, "path": "test/src/test/java/org/corfudb/integration/CorfuStoreBrowserIT.java", "diffHunk": "@@ -132,6 +132,26 @@ public void browserTest() throws\n         Assert.assertEquals(browser.printTableInfo(namespace, tableName), 0);\n     }\n \n+    /**\n+     * Create a table and add data to it using the loadTable command.\n+     * @throws IOException\n+     */\n+    @Test\n+    public void loaderTest() throws IOException {\n+        final String namespace = \"namespace\";\n+        final String tableName = \"table\";\n+        runSinglePersistentServer(corfuSingleNodeHost,\n+                corfuStringNodePort);\n+\n+        // Start a Corfu runtime\n+        runtime = createRuntime(singleNodeEndpoint);\n+        final int numItems = 100;\n+        final int batchSize = 10;\n+\n+        CorfuStoreBrowser browser = new CorfuStoreBrowser(runtime);\n+        Assert.assertEquals(browser.loadTable(namespace, tableName, numItems, batchSize), batchSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e2cf9aa9f3d80dfe1859ec9a366e5882f644b69"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzODkyMQ==", "bodyText": "the return type is purely for testing - no one using the browser will see it.\nthanks", "url": "https://github.com/CorfuDB/CorfuDB/pull/2673#discussion_r463338921", "createdAt": "2020-07-31T00:14:05Z", "author": {"login": "hisundar"}, "path": "test/src/test/java/org/corfudb/integration/CorfuStoreBrowserIT.java", "diffHunk": "@@ -132,6 +132,26 @@ public void browserTest() throws\n         Assert.assertEquals(browser.printTableInfo(namespace, tableName), 0);\n     }\n \n+    /**\n+     * Create a table and add data to it using the loadTable command.\n+     * @throws IOException\n+     */\n+    @Test\n+    public void loaderTest() throws IOException {\n+        final String namespace = \"namespace\";\n+        final String tableName = \"table\";\n+        runSinglePersistentServer(corfuSingleNodeHost,\n+                corfuStringNodePort);\n+\n+        // Start a Corfu runtime\n+        runtime = createRuntime(singleNodeEndpoint);\n+        final int numItems = 100;\n+        final int batchSize = 10;\n+\n+        CorfuStoreBrowser browser = new CorfuStoreBrowser(runtime);\n+        Assert.assertEquals(browser.loadTable(namespace, tableName, numItems, batchSize), batchSize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY5NjAxMA=="}, "originalCommit": {"oid": "8e2cf9aa9f3d80dfe1859ec9a366e5882f644b69"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1888, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}