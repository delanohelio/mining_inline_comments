{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MjIwNjAx", "number": 2768, "title": "Add Test for Single Listener to Multiple Tables in StreamingIT.", "bodyText": "We do not have a test where a single listener subscribes to multiple tables\nand verifies that updates made to those tables in a single transaction are\nreceived in the same CorfuStreamEntry.\nWhy should this be merged:  Test a different usecase of the streaming layer", "createdAt": "2020-09-10T18:58:57Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768", "merged": true, "mergeCommit": {"oid": "0d696c3796bdd2209171e3bcb6d00f589da11dd0"}, "closed": true, "closedAt": "2020-09-17T09:51:32Z", "author": {"login": "pankti-m"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI6QoEgFqTQ4ODE2MTA1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJlvzHgH2gAyNDg0MjIwNjAxOjEzMGI2ZmYwMzdkNzE5MTg0MjMyMzhmZDM5YzdmNDlmNzc5M2VlZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTYxMDU4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#pullrequestreview-488161058", "createdAt": "2020-09-14T21:41:17Z", "commit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjI1Mjc5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#pullrequestreview-488225279", "createdAt": "2020-09-14T23:37:11Z", "commit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzozNzoxMVrOHRrNuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzo0MToyNVrOHRrSbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NTg2NQ==", "bodyText": "Expand.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#discussion_r488295865", "createdAt": "2020-09-14T23:37:11Z", "author": {"login": "WenbinZhu"}, "path": "test/src/test/java/org/corfudb/integration/StreamingIT.java", "diffHunk": "@@ -17,9 +17,7 @@\n import org.junit.Test;\n \n import java.io.IOException;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NzA2OA==", "bodyText": "Why sleeping here? Is the test relying on the sleep to be passed? If not we can remove it, otherwise it's better to make it synchronous instead of sleeping.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#discussion_r488297068", "createdAt": "2020-09-14T23:41:25Z", "author": {"login": "WenbinZhu"}, "path": "test/src/test/java/org/corfudb/integration/StreamingIT.java", "diffHunk": "@@ -323,4 +321,67 @@ public void testStreamingMultiTableStreams() throws Exception {\n \n         assertThat(shutdownCorfuServer(corfuServer)).isTrue();\n     }\n+\n+    /**\n+     * Streaming Test with 2 different tables and a single streamer\n+     * <p>\n+     * The test creates two tables in the same namespace and makes updates to both in the same transaction.\n+     * A single streamer subscribes to updates from both.\n+     * <p>\n+     * The test verifies that the streamer receives updates from both tables and since the updates were made in\n+     * the same transaction, they are received in one CorfuStreamEntry.\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testStreamingMultiTableSingleListener() throws Exception {\n+        // Run a corfu server\n+        Process corfuServer = runSinglePersistentServer(corfuSingleNodeHost, corfuStringNodePort);\n+\n+        // Start a Corfu runtime\n+        runtime = createRuntime(singleNodeEndpoint);\n+\n+        runtime.setTransactionLogging(true);\n+        CorfuStore store = new CorfuStore(runtime);\n+\n+        // Record the initial timestamp.\n+        Timestamp ts1 = store.getTimestamp();\n+\n+        // Create 2 tables in the same namespace\n+        Table<Uuid, Uuid, Uuid> n1t1 = store.openTable(\n+                \"n1\", \"t1\", Uuid.class,\n+                Uuid.class, Uuid.class,\n+                TableOptions.builder().build()\n+        );\n+\n+        Table<Uuid, Uuid, Uuid> n2t1 = store.openTable(\n+                \"n1\", \"t2\", Uuid.class,\n+                Uuid.class, Uuid.class,\n+                TableOptions.builder().build()\n+        );\n+\n+        // Make an update to the tables in a transaction\n+        final int t1_uuid = 5;\n+        final int t2_uuid = 10;\n+        Uuid t1Uuid = Uuid.newBuilder().setMsb(t1_uuid).setLsb(t1_uuid).build();\n+        Uuid t2Uuid = Uuid.newBuilder().setMsb(t2_uuid).setLsb(t2_uuid).build();\n+        TxBuilder txBuilder = store.tx(\"n1\");\n+        txBuilder.update(\"t1\", t1Uuid, t1Uuid, t1Uuid);\n+        txBuilder.update(\"t2\", t2Uuid, t2Uuid, t2Uuid);\n+        txBuilder.commit();\n+\n+        // Subscribe to both tables\n+        List<TableSchema> tablesSubscribed = new ArrayList<>();\n+        tablesSubscribed.add(new TableSchema(\"t1\", Uuid.class, Uuid.class, Uuid.class));\n+        tablesSubscribed.add(new TableSchema(\"t2\", Uuid.class, Uuid.class, Uuid.class));\n+        StreamListenerImpl listener = new StreamListenerImpl(\"n1_listener\");\n+        store.subscribe(listener, \"n1\", tablesSubscribed, ts1);\n+\n+        // Verify that both updates come to the subscriber in the same StreamEntry\n+        TimeUnit.SECONDS.sleep(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjI2OTcw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#pullrequestreview-488226970", "createdAt": "2020-09-14T23:42:27Z", "commit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzo0MjoyN1rOHRrTZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzo0MjoyN1rOHRrTZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5NzMxOA==", "bodyText": "Maybe add a check for the content of the update?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2768#discussion_r488297318", "createdAt": "2020-09-14T23:42:27Z", "author": {"login": "WenbinZhu"}, "path": "test/src/test/java/org/corfudb/integration/StreamingIT.java", "diffHunk": "@@ -323,4 +321,67 @@ public void testStreamingMultiTableStreams() throws Exception {\n \n         assertThat(shutdownCorfuServer(corfuServer)).isTrue();\n     }\n+\n+    /**\n+     * Streaming Test with 2 different tables and a single streamer\n+     * <p>\n+     * The test creates two tables in the same namespace and makes updates to both in the same transaction.\n+     * A single streamer subscribes to updates from both.\n+     * <p>\n+     * The test verifies that the streamer receives updates from both tables and since the updates were made in\n+     * the same transaction, they are received in one CorfuStreamEntry.\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testStreamingMultiTableSingleListener() throws Exception {\n+        // Run a corfu server\n+        Process corfuServer = runSinglePersistentServer(corfuSingleNodeHost, corfuStringNodePort);\n+\n+        // Start a Corfu runtime\n+        runtime = createRuntime(singleNodeEndpoint);\n+\n+        runtime.setTransactionLogging(true);\n+        CorfuStore store = new CorfuStore(runtime);\n+\n+        // Record the initial timestamp.\n+        Timestamp ts1 = store.getTimestamp();\n+\n+        // Create 2 tables in the same namespace\n+        Table<Uuid, Uuid, Uuid> n1t1 = store.openTable(\n+                \"n1\", \"t1\", Uuid.class,\n+                Uuid.class, Uuid.class,\n+                TableOptions.builder().build()\n+        );\n+\n+        Table<Uuid, Uuid, Uuid> n2t1 = store.openTable(\n+                \"n1\", \"t2\", Uuid.class,\n+                Uuid.class, Uuid.class,\n+                TableOptions.builder().build()\n+        );\n+\n+        // Make an update to the tables in a transaction\n+        final int t1_uuid = 5;\n+        final int t2_uuid = 10;\n+        Uuid t1Uuid = Uuid.newBuilder().setMsb(t1_uuid).setLsb(t1_uuid).build();\n+        Uuid t2Uuid = Uuid.newBuilder().setMsb(t2_uuid).setLsb(t2_uuid).build();\n+        TxBuilder txBuilder = store.tx(\"n1\");\n+        txBuilder.update(\"t1\", t1Uuid, t1Uuid, t1Uuid);\n+        txBuilder.update(\"t2\", t2Uuid, t2Uuid, t2Uuid);\n+        txBuilder.commit();\n+\n+        // Subscribe to both tables\n+        List<TableSchema> tablesSubscribed = new ArrayList<>();\n+        tablesSubscribed.add(new TableSchema(\"t1\", Uuid.class, Uuid.class, Uuid.class));\n+        tablesSubscribed.add(new TableSchema(\"t2\", Uuid.class, Uuid.class, Uuid.class));\n+        StreamListenerImpl listener = new StreamListenerImpl(\"n1_listener\");\n+        store.subscribe(listener, \"n1\", tablesSubscribed, ts1);\n+\n+        // Verify that both updates come to the subscriber in the same StreamEntry\n+        TimeUnit.SECONDS.sleep(2);\n+        LinkedList<CorfuStreamEntries> updates = listener.getUpdates();\n+        assertThat(updates.size()).isEqualTo(1);\n+        assertThat(updates.getFirst().getEntries().entrySet().size()).isEqualTo(2);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad973387c2b223ed7f8f8167c7d6171ed2f00c2"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a19da036cadb65958579c3578843d7fc1117b80d", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/a19da036cadb65958579c3578843d7fc1117b80d", "committedDate": "2020-09-15T23:37:43Z", "message": "Add Test for Single Listener to Multiple Tables in StreamingIT.\n\nWe do not have a test where a single listener subscribes to multiple tables\nand verifies that updates made to those tables in a single transaction are\nreceived in the same CorfuStreamEntry."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5a7b4085d79d20c2c356cde3c071c40c3453aa1", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d5a7b4085d79d20c2c356cde3c071c40c3453aa1", "committedDate": "2020-09-15T04:51:05Z", "message": "Merge branch 'master' into streaming_unit_test"}, "afterCommit": {"oid": "a19da036cadb65958579c3578843d7fc1117b80d", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/a19da036cadb65958579c3578843d7fc1117b80d", "committedDate": "2020-09-15T23:37:43Z", "message": "Add Test for Single Listener to Multiple Tables in StreamingIT.\n\nWe do not have a test where a single listener subscribes to multiple tables\nand verifies that updates made to those tables in a single transaction are\nreceived in the same CorfuStreamEntry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57d07042c6c0d3e6b3082bbac7fc8c69ee4ab154", "author": {"user": {"login": "WenbinZhu", "name": "Wenbin Zhu"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/57d07042c6c0d3e6b3082bbac7fc8c69ee4ab154", "committedDate": "2020-09-16T20:07:55Z", "message": "Merge branch 'master' into streaming_unit_test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130b6ff037d71918423238fd39c7f49f7793eef1", "author": {"user": {"login": "WenbinZhu", "name": "Wenbin Zhu"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/130b6ff037d71918423238fd39c7f49f7793eef1", "committedDate": "2020-09-17T00:21:15Z", "message": "Merge branch 'master' into streaming_unit_test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4051, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}