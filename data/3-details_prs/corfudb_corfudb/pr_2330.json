{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzQ5MjU0", "number": 2330, "title": "Layout Bootstrap and ClusterId Validation for the Server Message Routing ", "bodyText": "Overview\nDescription:\nThis is a bug fix to prevent writes from happening to the non bootstrapped corfu server.\nWhy should this be merged:\nWe had this bug happening a couple of times in production for the following scenario:\n\nThe node belongs to cluster A.\nThe node is getting reset to join to cluster B.\nSome client, who used a cluster A in the past, writes a record stamped with epoch 0 to the log unit.\nThe node is getting reset to join a cluster B.\nAlthough the routers of this node are reset, the packet comes out of limbo (either because it got stuck in the netty caches or just delayed during routing), gets accepted to the node's log unit before the node is bootstrapped with a new layout of cluster B.\nSince the default sealed epoch is still the same (0), the record goes through the batch processor and gets written finally in the stream log.\nAs you may have guessed, this creates data inconsistency that usually manifests itself in the broken state transfer or corrupted data.\n\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-01-29T03:14:11Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330", "merged": true, "mergeCommit": {"oid": "c060d9a2cc3032b974f26fa388a1e4fb5df26df3"}, "closed": true, "closedAt": "2020-03-05T01:20:11Z", "author": {"login": "PavelZaytsev"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_MW5tAFqTM1MDQxNzk3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKfHiggH2gAyMzY4MzQ5MjU0OjVmY2FiZDgwNzNiNTdhNWQ2NWE1MDI0ZjE2ZDZjNzUxNDlkZWZmNWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDE3OTcw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-350417970", "createdAt": "2020-01-29T20:56:02Z", "commit": {"oid": "032e1f397996cdcbe549727ac714a521d65e224b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMjc2NjQy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-351276642", "createdAt": "2020-01-31T03:29:10Z", "commit": {"oid": "f1cef3fa9cbc6cd31b1a7006a1a32eb91f0b692b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMjc3NzMz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-351277733", "createdAt": "2020-01-31T03:34:40Z", "commit": {"oid": "f1cef3fa9cbc6cd31b1a7006a1a32eb91f0b692b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMzozNDo0MFrOFkAoOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMzozNDo0MFrOFkAoOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwMzM1Mw==", "bodyText": "I dont think this is needed.\nThe root cause of the problem is: the epoch's uninitialized value is a valid value. Therefore, we need to change ServerContext:getServerEpoch to return an invalid value if epoch == null. Instead of returning 0 for null, we should return Layout.INVALID_EPOCH", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r373303353", "createdAt": "2020-01-31T03:34:40Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServerNode.java", "diffHunk": "@@ -90,6 +89,7 @@ public CorfuServerNode(@Nonnull ServerContext serverContext,\n         this.serverMap = serverMap;\n         router = new NettyServerRouter(new ArrayList<>(serverMap.values()));\n         this.serverContext.setServerRouter(router);\n+        this.serverContext.setServerEpochForSingleNodeLayout(serverContext.getServerEpoch(), router);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cef3fa9cbc6cd31b1a7006a1a32eb91f0b692b"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af44838110e7e9ad2b8df068bb9484baa993850c", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/af44838110e7e9ad2b8df068bb9484baa993850c", "committedDate": "2020-02-06T03:54:34Z", "message": "Fix test"}, "afterCommit": {"oid": "f1cef3fa9cbc6cd31b1a7006a1a32eb91f0b692b", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f1cef3fa9cbc6cd31b1a7006a1a32eb91f0b692b", "committedDate": "2020-01-30T23:59:09Z", "message": "Seal for a one node setup fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjA2NDk1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360606495", "createdAt": "2020-02-18T19:21:07Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMTowOFrOFrPOQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMTowOFrOFrPOQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4MjQ5OA==", "bodyText": "It seems like these changes were based on an older master, undo this file's changes?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380882498", "createdAt": "2020-02-18T19:21:08Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/BatchProcessor.java", "diffHunk": "@@ -135,16 +129,16 @@ private void processor() {\n                     currOp.getFutureResult().completeExceptionally(\n                             new QuotaExceededException(\"Quota of \"\n                                     + streamLog.quotaLimitInBytes() + \" bytes\"));\n-                    log.warn(\"batchprocessor: quota exceeded, dropping msg {}\", currOp.getMsg());\n-                } else if (currOp.getType() == Type.SEAL && currOp.getMsg().getEpoch() >= sealEpoch) {\n+                    log.warn(\"batchWriteProcessor: quota exceeded, dropping msg {}\", currOp.getMsg());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjA2NTU0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360606554", "createdAt": "2020-02-18T19:21:11Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjE0NTQ3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360614547", "createdAt": "2020-02-18T19:33:11Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTozMzoxMVrOFrPnKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTozMzoxMVrOFrPnKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4ODg3Mg==", "bodyText": "serverContext.getServerEpoch() can still return 0 if it wasn't initialized. Why not just use an invalid value like -1 ?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380888872", "createdAt": "2020-02-18T19:33:11Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServerNode.java", "diffHunk": "@@ -80,10 +80,10 @@ public CorfuServerNode(@Nonnull ServerContext serverContext) {\n      * @param serverMap     Server Map with all components.\n      */\n     public CorfuServerNode(@Nonnull ServerContext serverContext,\n-                           @Nonnull Map<Class, AbstractServer> serverMap) {\n+                           @Nonnull ImmutableMap<Class, AbstractServer> serverMap) {\n         this.serverContext = serverContext;\n         this.serverMap = serverMap;\n-        router = new NettyServerRouter(new ArrayList<>(serverMap.values()));\n+        router = new NettyServerRouter(serverMap, serverContext.getServerEpoch());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjMyODU3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360632857", "createdAt": "2020-02-18T20:00:43Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowMDo0NFrOFrQgNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowMDo0NFrOFrQgNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkwMzQ3OA==", "bodyText": "The router shouldn't depend on the LayoutServer , its cleaner to just use serverContext.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380903478", "createdAt": "2020-02-18T20:00:44Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/NettyServerRouter.java", "diffHunk": "@@ -90,25 +91,13 @@ public void sendResponse(ChannelHandlerContext ctx, CorfuMsg inMsg, CorfuMsg out\n         log.trace(\"Sent response: {}\", outMsg);\n     }\n \n-    /**\n-     * Validate the epoch of a CorfuMsg, and send a WRONG_EPOCH response if\n-     * the server is in the wrong epoch. Ignored if the message type is reset (which\n-     * is valid in any epoch).\n-     *\n-     * @param msg The incoming message to validate.\n-     * @param ctx The context of the channel handler.\n-     * @return True, if the epoch is correct, but false otherwise.\n-     */\n-    public boolean validateEpoch(CorfuMsg msg, ChannelHandlerContext ctx) {\n-        long serverEpoch = getServerEpoch();\n-        if (!msg.getMsgType().ignoreEpoch && msg.getEpoch() != serverEpoch) {\n-            sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_EPOCH,\n-                    serverEpoch));\n-            log.trace(\"Incoming message with wrong epoch, got {}, expected {}, message was: {}\",\n-                    msg.getEpoch(), serverEpoch, msg);\n-            return false;\n+    @Override\n+    public Optional<Layout> getCurrentLayout() {\n+        if(!serverMap.containsKey(LayoutServer.class)){\n+            throw new IllegalStateException(\"Layout server is not in a server map.\");\n         }\n-        return true;\n+        LayoutServer layoutServer = (LayoutServer) serverMap.get(LayoutServer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjM2MjEx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360636211", "createdAt": "2020-02-18T20:06:18Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowNjoxOFrOFrQrcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowNjoxOFrOFrQrcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkwNjM1NQ==", "bodyText": "Just pass the whole layout instead of passing the epoch and cluster id separately ?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380906355", "createdAt": "2020-02-18T20:06:18Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/RuntimeLayout.java", "diffHunk": "@@ -109,8 +110,9 @@ private IClient getClient(final Class<? extends IClient> clientClass,\n             endpointClientMap.computeIfAbsent(endpoint, s -> {\n                 try {\n                     Constructor<? extends IClient> ctor =\n-                            clientClass.getDeclaredConstructor(IClientRouter.class, long.class);\n-                    IClient inst = ctor.newInstance(getRuntime().getRouter(endpoint), layout.getEpoch());\n+                            clientClass.getDeclaredConstructor(IClientRouter.class, long.class, UUID.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjM2MzM2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360636336", "createdAt": "2020-02-18T20:06:30Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowNjozMFrOFrQr3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowNjozMFrOFrQr3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkwNjQ2Mg==", "bodyText": "Undo ?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380906462", "createdAt": "2020-02-18T20:06:30Z", "author": {"login": "Maithem"}, "path": "test/src/test/java/org/corfudb/infrastructure/AbstractServerTest.java", "diffHunk": "@@ -15,6 +15,8 @@\n import org.corfudb.runtime.clients.TestClientRouter;\n import org.junit.Before;\n \n+import java.util.AbstractMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjM3MzQ1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360637345", "createdAt": "2020-02-18T20:08:10Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowODoxMFrOFrQu8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowODoxMFrOFrQu8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkwNzI0OA==", "bodyText": "Why ignore the epoch/cluster id check?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380907248", "createdAt": "2020-02-18T20:08:10Z", "author": {"login": "Maithem"}, "path": "test/src/test/java/org/corfudb/infrastructure/LogUnitCacheTest.java", "diffHunk": "@@ -39,6 +39,13 @@ public AbstractServer getDefaultServer() {\n                 .build());\n     }\n \n+    @Override\n+    public void setServer(AbstractServer server) {\n+        router.reset();\n+        router.setIgnoreMessageValidation(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjM4MzA3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360638307", "createdAt": "2020-02-18T20:09:36Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowOTozNlrOFrQyMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDowOTozNlrOFrQyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkwODA4Mw==", "bodyText": "Just pass the whole Layout?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380908083", "createdAt": "2020-02-18T20:09:36Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/management/FailureDetector.java", "diffHunk": "@@ -93,7 +94,7 @@ public PollReport poll(\n \n         // Perform polling of all responsive servers.\n         return pollRound(\n-                layout.getEpoch(), allServers, routerMap, sequencerMetrics,\n+                layout.getEpoch(), layout.getClusterId(), allServers, routerMap, sequencerMetrics,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjQ1NTA1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360645505", "createdAt": "2020-02-18T20:21:40Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjQ2MzE4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-360646318", "createdAt": "2020-02-18T20:22:58Z", "commit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMjo1OVrOFrRKiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoyMjo1OVrOFrRKiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNDMxMg==", "bodyText": "This seems incorrect.\nImagine a fault detector from one cluster trying to seal a node from another cluster. Since a seal message is marked as ignore epoch, the second check won't be executed and thus allowing fault detectors from different cluster to reconfigure each other's nodes.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r380914312", "createdAt": "2020-02-18T20:22:59Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/IServerRouter.java", "diffHunk": "@@ -21,14 +32,123 @@\n      */\n     void setServerEpoch(long newEpoch);\n \n+    /**\n+     * Get the currently bootstrapped layout.\n+     */\n+    Optional<Layout> getCurrentLayout();\n+\n     /**\n      * Register a server to route messages to.\n-     * @param server    The server to route messages to\n+     * @param server The server to route messages to\n      */\n     void addServer(AbstractServer server);\n \n     /**\n      * Get a list of registered servers.\n      */\n     List<AbstractServer> getServers();\n+\n+    /**\n+     * Send WRONG_EPOCH message.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     */\n+    default void sendWrongEpochMessage(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_EPOCH,\n+                getServerEpoch()));\n+        log.trace(\"Incoming message with wrong epoch, got {}, expected {}, message was: {}\",\n+                msg.getEpoch(), getServerEpoch(), msg);\n+    }\n+\n+    /**\n+     * Send LAYOUT_NOBOOTSTRAP message.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     */\n+    default void sendNoBootstrapMessage(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        sendResponse(ctx, msg, new CorfuMsg(CorfuMsgType.LAYOUT_NOBOOTSTRAP));\n+        log.warn(\"Received message but not bootstrapped! Message={}\", msg);\n+    }\n+\n+    /**\n+     * Send WRONG_CLUSTER_ID message.\n+     *\n+     * @param msg              The incoming message.\n+     * @param ctx              The context of the channel handler.\n+     * @param currentClusterID The current cluster id.\n+     */\n+    default void sendWrongClusterIdMessage(CorfuMsg msg, ChannelHandlerContext ctx, UUID currentClusterID) {\n+        sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_CLUSTER_ID, currentClusterID));\n+        log.warn(\"Incoming message with a wrong cluster ID, got {}, expected {}, message was {}\",\n+                msg.getClusterID(), currentClusterID, msg);\n+    }\n+\n+    /**\n+     * Validate the epoch of a CorfuMsg, and send a WRONG_EPOCH response if\n+     * the server is in the wrong epoch. Ignored if the message type is reset (which\n+     * is valid in any epoch).\n+     *\n+     * @param msg The incoming message to validate.\n+     * @param ctx The context of the channel handler.\n+     * @return True, if the epoch is correct, but false otherwise.\n+     */\n+    default boolean epochIsValid(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        long serverEpoch = getServerEpoch();\n+        if (msg.getEpoch() != serverEpoch) {\n+            sendWrongEpochMessage(msg, ctx);\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * Validate that the message's cluster ID is equal to the cluster ID of a bootstrapped layout.\n+     *\n+     * @param msg           The incoming message.\n+     * @param ctx           The context of the channel handler.\n+     * @param currentLayout The layout a server was bootstrapped with.\n+     * @return True, if the message's cluster ID is equal to this node's cluster ID, otherwise false.\n+     */\n+    default boolean clusterIdIsValid(CorfuMsg msg, ChannelHandlerContext ctx, Layout currentLayout) {\n+        UUID currentClusterID = currentLayout.getClusterId();\n+\n+        boolean clusterIdsMatch = msg.getClusterID()\n+                .equals(currentClusterID);\n+\n+        if (!clusterIdsMatch) {\n+            sendWrongClusterIdMessage(msg, ctx, currentClusterID);\n+        }\n+        return clusterIdsMatch;\n+    }\n+\n+    /**\n+     * Validate the incoming message. The message is valid if:\n+     * 1) The flag ignoreEpoch is set to true.\n+     * 2) Otherwise,\n+     *      a. The message's epoch is the same as the router's epoch.\n+     *      b. The current layout server should be bootstrapped and\n+     *         the message's cluster ID should be equal to the bootstrapped layout's cluster ID.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     * @return True, if it's a valid message, and false otherwise.\n+     */\n+    default boolean messageIsValid(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        if (msg.getMsgType().ignoreEpoch) {\n+            return true;\n+        }\n+\n+        if (!epochIsValid(msg, ctx)) {\n+            return false;\n+        }\n+\n+        return getCurrentLayout()\n+                .map(layout -> clusterIdIsValid(msg, ctx, layout))\n+                .orElseGet(() -> {\n+                    sendNoBootstrapMessage(msg, ctx);\n+                    return false;\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cacc103834662c2883ad8d5c9a49f6d5d391e4"}, "originalPosition": 147}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzE5NzUy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-364319752", "createdAt": "2020-02-25T17:32:36Z", "commit": {"oid": "8f3389c2f293ab556871b5335fe3ca87fbe43471"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNzozMjozNlrOFuO3Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNzozMzo1MlrOFuO56w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMjMxOA==", "bodyText": "please rename currentClusterId\nnote: never use consecutive capital letters", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r384022318", "createdAt": "2020-02-25T17:32:36Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/IServerRouter.java", "diffHunk": "@@ -21,14 +33,130 @@\n      */\n     void setServerEpoch(long newEpoch);\n \n+    /**\n+     * Get the currently bootstrapped layout.\n+     */\n+    Optional<Layout> getCurrentLayout();\n+\n     /**\n      * Register a server to route messages to.\n-     * @param server    The server to route messages to\n+     * @param server The server to route messages to\n      */\n     void addServer(AbstractServer server);\n \n     /**\n      * Get a list of registered servers.\n      */\n     List<AbstractServer> getServers();\n+\n+    /**\n+     * Set a serverContext for this router.\n+     * @param serverContext A current server context.\n+     */\n+    void setServerContext(ServerContext serverContext);\n+\n+    /**\n+     * Send WRONG_EPOCH message.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     */\n+    default void sendWrongEpochMessage(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_EPOCH,\n+                getServerEpoch()));\n+        log.warn(\"Incoming message with wrong epoch, got {}, expected {}, message was: {}\",\n+                msg.getEpoch(), getServerEpoch(), msg);\n+    }\n+\n+    /**\n+     * Send LAYOUT_NOBOOTSTRAP message.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     */\n+    default void sendNoBootstrapMessage(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        sendResponse(ctx, msg, new CorfuMsg(CorfuMsgType.LAYOUT_NOBOOTSTRAP));\n+        log.warn(\"Received message but not bootstrapped! Message={}\", msg);\n+    }\n+\n+    /**\n+     * Send WRONG_CLUSTER_ID message.\n+     *\n+     * @param msg              The incoming message.\n+     * @param ctx              The context of the channel handler.\n+     * @param currentClusterID The current cluster id.\n+     */\n+    default void sendWrongClusterIdMessage(CorfuMsg msg, ChannelHandlerContext ctx, UUID currentClusterID) {\n+        sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_CLUSTER_ID,\n+                new WrongClusterMsg(currentClusterID, msg.getClusterID())));\n+        log.warn(\"Incoming message with a wrong cluster ID, got {}, expected {}, message was {}\",\n+                msg.getClusterID(), currentClusterID, msg);\n+    }\n+\n+    /**\n+     * Validate the epoch of a CorfuMsg, and send a WRONG_EPOCH response if\n+     * the server is in the wrong epoch. Ignored if the message type is reset (which\n+     * is valid in any epoch).\n+     *\n+     * @param msg The incoming message to validate.\n+     * @param ctx The context of the channel handler.\n+     * @return True, if the epoch is correct, but false otherwise.\n+     */\n+    default boolean epochIsValid(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        long serverEpoch = getServerEpoch();\n+        if (msg.getEpoch() != serverEpoch) {\n+            sendWrongEpochMessage(msg, ctx);\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * Validate that the message's cluster ID is equal to the cluster ID of a bootstrapped layout.\n+     *\n+     * @param msg           The incoming message.\n+     * @param ctx           The context of the channel handler.\n+     * @param currentLayout The layout a server was bootstrapped with.\n+     * @return True, if the message's cluster ID is equal to this node's cluster ID, otherwise false.\n+     */\n+    default boolean clusterIdIsValid(CorfuMsg msg, ChannelHandlerContext ctx, Layout currentLayout) {\n+        UUID currentClusterID = currentLayout.getClusterId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f3389c2f293ab556871b5335fe3ca87fbe43471"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMzAxOQ==", "bodyText": "*clusterId", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r384023019", "createdAt": "2020-02-25T17:33:52Z", "author": {"login": "xnull"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/management/FailureDetector.java", "diffHunk": "@@ -126,7 +127,7 @@ PollReport pollRound(\n         List<PollReport> reports = new ArrayList<>();\n         for (int iteration = 0; iteration < failureThreshold; iteration++) {\n             PollReport currReport = pollIteration(\n-                    allServers, router, epoch, sequencerMetrics, layoutUnresponsiveNodes\n+                    allServers, router, epoch, clusterID, sequencerMetrics, layoutUnresponsiveNodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f3389c2f293ab556871b5335fe3ca87fbe43471"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDM5NDkw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-366039490", "createdAt": "2020-02-27T22:17:09Z", "commit": {"oid": "32c550c152ca3351bc253409f94a87e498454e56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxNzowOVrOFvjLaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxNzowOVrOFvjLaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMzc1Mg==", "bodyText": "Can you put this in CorfuMsgType. IgnoreClusterId should be specified in similar way to ignoreEpoch", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385403752", "createdAt": "2020-02-27T22:17:09Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/NettyServerRouter.java", "diffHunk": "@@ -41,20 +45,41 @@\n     volatile long serverEpoch;\n \n     /** The {@link AbstractServer}s this {@link NettyServerRouter} routes messages for. */\n-    final List<AbstractServer> servers;\n+    private final ImmutableList<AbstractServer> servers;\n+\n+    /**\n+     * The set of messages for which the layout and cluster id validations should be ignored.\n+     */\n+    private final Set<CorfuMsgType> ignoreLayoutMsgTypes = ImmutableSet.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32c550c152ca3351bc253409f94a87e498454e56"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQwOTE1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-366040915", "createdAt": "2020-02-27T22:19:54Z", "commit": {"oid": "32c550c152ca3351bc253409f94a87e498454e56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDk5MTk4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-366099198", "createdAt": "2020-02-28T00:49:49Z", "commit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDo0OTo0OVrOFvmODw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTo1NTo1OFrOFvnSLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1MzU4Mw==", "bodyText": "This log line and the the ones in the following methods are trace level in master, why we made it warning level?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385453583", "createdAt": "2020-02-28T00:49:49Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/IServerRouter.java", "diffHunk": "@@ -21,14 +34,128 @@\n      */\n     void setServerEpoch(long newEpoch);\n \n+    /**\n+     * Get the currently bootstrapped layout.\n+     */\n+    Optional<Layout> getCurrentLayout();\n+\n     /**\n      * Register a server to route messages to.\n-     * @param server    The server to route messages to\n+     * @param server The server to route messages to\n      */\n     void addServer(AbstractServer server);\n \n     /**\n      * Get a list of registered servers.\n      */\n     List<AbstractServer> getServers();\n+\n+    /**\n+     * Set a serverContext for this router.\n+     * @param serverContext A current server context.\n+     */\n+    void setServerContext(ServerContext serverContext);\n+\n+    /**\n+     * Send WRONG_EPOCH message.\n+     *\n+     * @param msg The incoming message.\n+     * @param ctx The context of the channel handler.\n+     */\n+    default void sendWrongEpochMessage(CorfuMsg msg, ChannelHandlerContext ctx) {\n+        sendResponse(ctx, msg, new CorfuPayloadMsg<>(CorfuMsgType.WRONG_EPOCH,\n+                getServerEpoch()));\n+        log.warn(\"Incoming message with wrong epoch, got {}, expected {}, message was: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1ODM2MQ==", "bodyText": "Is this necessary? Looks like no one use it other than itself.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385458361", "createdAt": "2020-02-28T01:06:45Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServer.java", "diffHunk": "@@ -81,6 +81,7 @@\n     /**\n      * The server context of the node.\n      */\n+    @Getter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1OTM5Nw==", "bodyText": "Can you explain the necessity of this block?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385459397", "createdAt": "2020-02-28T01:10:54Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/CorfuServerNode.java", "diffHunk": "@@ -80,11 +80,17 @@ public CorfuServerNode(@Nonnull ServerContext serverContext) {\n      * @param serverMap     Server Map with all components.\n      */\n     public CorfuServerNode(@Nonnull ServerContext serverContext,\n-                           @Nonnull Map<Class, AbstractServer> serverMap) {\n+                           @Nonnull ImmutableMap<Class, AbstractServer> serverMap) {\n         this.serverContext = serverContext;\n         this.serverMap = serverMap;\n-        router = new NettyServerRouter(new ArrayList<>(serverMap.values()));\n+        router = new NettyServerRouter(serverMap.values().asList(), serverContext);\n         this.serverContext.setServerRouter(router);\n+        // If the node is started in the single node setup and was bootstrapped,\n+        // set the server epoch as well.\n+        if(serverContext.isSingleNodeSetup() && serverContext.getCurrentLayout() != null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2MTcxMg==", "bodyText": "NIT: add spaces after if and else", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385461712", "createdAt": "2020-02-28T01:19:50Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/protocols/wireprotocol/CorfuMsg.java", "diffHunk": "@@ -119,6 +126,15 @@ public void serialize(ByteBuf buffer) {\n             buffer.writeLong(clientID.getMostSignificantBits());\n             buffer.writeLong(clientID.getLeastSignificantBits());\n         }\n+        if(clusterID == null){\n+            buffer.writeLong(0L);\n+            buffer.writeLong(0L);\n+        }\n+        else{\n+            buffer.writeLong(clusterID.getMostSignificantBits());\n+            buffer.writeLong(clusterID.getLeastSignificantBits());\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2Njc3Ng==", "bodyText": "I think for KEEP_ALIVE, it's better not to ignore cluster ID, if a client is from a different cluster, it's unnecessary for the servers in this cluster to keep alive the channel to that client.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385466776", "createdAt": "2020-02-28T01:39:02Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/protocols/wireprotocol/CorfuMsgType.java", "diffHunk": "@@ -82,41 +84,42 @@\n     ERROR_VALUE_ADOPTED(59,new TypeToken<CorfuPayloadMsg<ReadResponse>>() {}),\n \n     // EXTRA CODES\n-    LAYOUT_ALREADY_BOOTSTRAP(60, TypeToken.of(CorfuMsg.class), true),\n-    LAYOUT_PREPARE_ACK(61, new TypeToken<CorfuPayloadMsg<LayoutPrepareResponse>>(){}, true),\n-    RESTART(62, TypeToken.of(CorfuMsg.class), true),\n-    KEEP_ALIVE(63, TypeToken.of(CorfuMsg.class), true),\n+    LAYOUT_ALREADY_BOOTSTRAP(60, TypeToken.of(CorfuMsg.class), true, false),\n+    LAYOUT_PREPARE_ACK(61, new TypeToken<CorfuPayloadMsg<LayoutPrepareResponse>>(){}, true, false),\n+    RESTART(62, TypeToken.of(CorfuMsg.class), true, false),\n+    KEEP_ALIVE(63, TypeToken.of(CorfuMsg.class), true, true),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NzA4Mw==", "bodyText": "Add javadoc", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385467083", "createdAt": "2020-02-28T01:40:28Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/protocols/wireprotocol/WrongClusterMsg.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.corfudb.protocols.wireprotocol;\n+\n+import io.netty.buffer.ByteBuf;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Getter;\n+\n+import java.util.UUID;\n+\n+@Builder\n+@AllArgsConstructor\n+@Getter\n+public class WrongClusterMsg implements ICorfuPayload<WrongClusterMsg> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2OTc3Mg==", "bodyText": "The APIs in this file are public APIs consumed by our verticals, you probably need to modify the veritcal codes when you check-in to production code. Is this clusterId field really needed here, can we just use the default?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385469772", "createdAt": "2020-02-28T01:50:59Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/RebootUtil.java", "diffHunk": "@@ -51,13 +61,16 @@ public static void reset(@NonNull String endpoint,\n      * @param corfuRuntimeParameters CorfuRuntimeParameters can specify security parameters.\n      * @param retries                Number of retries to bootstrap each node before giving up.\n      * @param retryDuration          Duration between retries.\n+     * @param clusterId              Optional cluster Id. If None is provided, then the default one\n+     *                               will be used to create a base client.\n      */\n     public static void reset(@NonNull String endpoint,\n                              @NonNull CorfuRuntimeParameters corfuRuntimeParameters,\n                              int retries,\n-                             @NonNull Duration retryDuration) {\n+                             @NonNull Duration retryDuration,\n+                             Optional<UUID> clusterId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3MDU5Nw==", "bodyText": "Can we reuse Layout.INVALID_CLUSTER_ID?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385470597", "createdAt": "2020-02-28T01:54:12Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/RebootUtil.java", "diffHunk": "@@ -25,6 +27,11 @@ private RebootUtil() {\n         // prevent instantiation of this class\n     }\n \n+    /**\n+     * A default cluster Id for resets if none are provided by a user.\n+     */\n+    private static final UUID DEFAULT_CLUSTER_ID =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3MDkzMQ==", "bodyText": "You can use Layout.INVALID_CLUSTER_ID", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385470931", "createdAt": "2020-02-28T01:55:40Z", "author": {"login": "WenbinZhu"}, "path": "test/src/test/java/org/corfudb/infrastructure/TestLayoutBuilder.java", "diffHunk": "@@ -34,6 +34,7 @@ public TestLayoutBuilder() {\n         layoutServers = new ArrayList<>();\n         unresponsiveServers = new ArrayList<>();\n         segments = new ArrayList<>();\n+        clusterId = UUID.fromString(\"00000000-0000-0000-0000-000000000000\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3MTAyMA==", "bodyText": "You can use Layout.INVALID_CLUSTER_ID, please replace occurences in other test files.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#discussion_r385471020", "createdAt": "2020-02-28T01:55:58Z", "author": {"login": "WenbinZhu"}, "path": "test/src/test/java/org/corfudb/infrastructure/TestLayoutBuilder.java", "diffHunk": "@@ -49,7 +50,7 @@ public static Layout single(int port) {\n                 .addLogUnit(port)\n                 .addToSegment()\n                 .addToLayout()\n-                .setClusterId(UUID.randomUUID())\n+                .setClusterId(UUID.fromString(\"00000000-0000-0000-0000-000000000000\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e67dd3095b2191d19685db9b894659ad3c83f3b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c157f1b7009766bff5bceab76b96e9faf1ab628b", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c157f1b7009766bff5bceab76b96e9faf1ab628b", "committedDate": "2020-02-29T00:01:11Z", "message": "Introduce server routing msg verifications"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c486c37ec26cd46008d6370106147af6acd5159", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/6c486c37ec26cd46008d6370106147af6acd5159", "committedDate": "2020-02-28T22:28:24Z", "message": "Merge branch 'reset-bug' of github.com:CorfuDB/CorfuDB into reset-bug"}, "afterCommit": {"oid": "c157f1b7009766bff5bceab76b96e9faf1ab628b", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c157f1b7009766bff5bceab76b96e9faf1ab628b", "committedDate": "2020-02-29T00:01:11Z", "message": "Introduce server routing msg verifications"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e9f020a99558f74ba2c5d2bc62714d7f131efb7", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/2e9f020a99558f74ba2c5d2bc62714d7f131efb7", "committedDate": "2020-03-02T20:57:38Z", "message": "Merge with the reset router changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzE0MzQz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2330#pullrequestreview-368314343", "createdAt": "2020-03-03T20:51:12Z", "commit": {"oid": "2e9f020a99558f74ba2c5d2bc62714d7f131efb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5050bfd8853d774e31fe6a1610ef62765f3f4a17", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/5050bfd8853d774e31fe6a1610ef62765f3f4a17", "committedDate": "2020-03-03T22:00:47Z", "message": "Fix client for bootstrap/management bootstrap in cmdlets. Fix clojure dangling parens"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8d0d802ac39ce48e6eeb4b17efb3278dd5081c", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/5d8d0d802ac39ce48e6eeb4b17efb3278dd5081c", "committedDate": "2020-03-03T22:31:42Z", "message": "Get a client from the clojure namespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d0250e08505e6235fcf8786312fc895b14847a4", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3d0250e08505e6235fcf8786312fc895b14847a4", "committedDate": "2020-03-04T02:28:43Z", "message": "Add clusterId verification for the bootstraps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ecb4b342c9823b3519df8c170d69828f679d1ef", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3ecb4b342c9823b3519df8c170d69828f679d1ef", "committedDate": "2020-03-04T21:55:13Z", "message": "Merge branch 'master' into reset-bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fcabd8073b57a5d65a5024f16d6c75149deff5f", "author": {"user": {"login": "PavelZaytsev", "name": "Pavel Zaytsev"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/5fcabd8073b57a5d65a5024f16d6c75149deff5f", "committedDate": "2020-03-04T23:00:37Z", "message": "Merge branch 'master' into reset-bug"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3438, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}