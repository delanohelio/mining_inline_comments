{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzc5OTEy", "number": 2680, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo0Njo1NFrOEUyDIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDoxNTowOVrOEX43Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjI2OTc3OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo0Njo1NFrOG7LGpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTozMzowM1rOG7yRMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwMTA5NQ==", "bodyText": "This catch will mask the next catch block, because NetworkException and IllegalStateException are also RuntimeException, you need to put it after the next catch block. Please also check with @PavelZaytsev if initially he intentionally wanted to not retry on other runtime exceptions, as there might be some edge cases.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464701095", "createdAt": "2020-08-03T22:46:54Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0Mjc3MA==", "bodyText": "Moved the catch block. It was gonna mask other exceptions.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465342770", "createdAt": "2020-08-04T21:33:03Z", "author": {"login": "achinmishra"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwMTA5NQ=="}, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjI5NDcyOnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo1OTowN1rOG7LVaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTozNToxN1rOG7yU7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg==", "bodyText": "Style -- missing space.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464704872", "createdAt": "2020-08-03T22:59:07Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNjMzNA==", "bodyText": "You need to check for the root cause. If the root cause is not an instance of TImeoutException, you will want to re-throw.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464706334", "createdAt": "2020-08-03T23:03:52Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcxMTk5MA==", "bodyText": "Also, since Corfu's exception handling is pretty screwed up, it might make sense to make exception checking more generic:\n            } catch (TimeoutException e) {\n                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n            } catch (RuntimeException runtimeException) {\n                handleException(runtimeException);\n            }\n\n    private void handleException(RuntimeException runtimeException) {\n        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n        if (cause instanceof TimeoutException ||\n                cause instanceof IllegalStateException ||\n                cause instanceof NetworkException) {\n            log.warn(\"WorkflowRequest: Error while running {} with cause:\", this, runtimeException);\n        } else {\n            throw runtimeException;\n        }\n    }", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r464711990", "createdAt": "2020-08-03T23:21:58Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MzcyNw==", "bodyText": "The root cause was an instance of TimeoutException, coming from bootstrapManagementServer().\nI think its a good idea to add a method listed as above to handle the exceptions gracefully. I will make those changes.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465343727", "createdAt": "2020-08-04T21:35:17Z", "author": {"login": "achinmishra"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwNDg3Mg=="}, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTc4ODU0OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODoyNzo0NFrOG7sYvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTozNTo0M1rOG7yVoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjM5OA==", "bodyText": "Minor thing. Since you touched this piece of code, would be great if you rename x to retryIteration", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465246398", "createdAt": "2020-08-04T18:27:44Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {\n+                log.warn(\"WorkflowRequest: Additional handling of the exception wrapped herein.\" +\n+                        \" Running {} on attempt {},  cause:\", this, x, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MzkwNA==", "bodyText": "Right! Better code readability. Pushing the change.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465343904", "createdAt": "2020-08-04T21:35:43Z", "author": {"login": "achinmishra"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,6 +141,9 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n+            } catch(RuntimeException e) {\n+                log.warn(\"WorkflowRequest: Additional handling of the exception wrapped herein.\" +\n+                        \" Running {} on attempt {},  cause:\", this, x, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0NjM5OA=="}, "originalCommit": {"oid": "02a9c2c24cd18cb727ec3225e9771732fea88989"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDM2ODEyOnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1MTo1NFrOG8YRrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTo1MTo1NFrOG8YRrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk2NTQ4Ng==", "bodyText": "TimeoutException can't appear here, because it already handled in invoke method", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r465965486", "createdAt": "2020-08-05T19:51:54Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDQ0OTE2OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoyNjoxOFrOG8_TFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOTowNzo0NFrOG9Aopg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNDgyMA==", "bodyText": "another curly bracket needed for runtimeException", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466604820", "createdAt": "2020-08-06T18:26:18Z", "author": {"login": "pankti-m"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||\n+                cause instanceof IllegalStateException ||\n+                cause instanceof NetworkException) {\n+            log.warn(\"WorkflowRequest: Error while running {} with cause:\", this, runtimeException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyNjcyNg==", "bodyText": "Unfortunately, you are not correct, another bracket is not needed", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466626726", "createdAt": "2020-08-06T19:07:44Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||\n+                cause instanceof IllegalStateException ||\n+                cause instanceof NetworkException) {\n+            log.warn(\"WorkflowRequest: Error while running {} with cause:\", this, runtimeException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNDgyMA=="}, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDQ1MzE1OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoyNzozNVrOG8_Vpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoxNToyOVrOG9CvNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA==", "bodyText": "another curly bracket required for exception", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466605478", "createdAt": "2020-08-06T18:27:35Z", "author": {"login": "pankti-m"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyNjgxNA==", "bodyText": "Unfortunately, you are not correct, another bracket is not needed", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466626814", "createdAt": "2020-08-06T19:07:54Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MDEwMA==", "bodyText": "@pankti-m the log.warn is overloaded with void warn(String var1, Object var2, Object var3);  , so it doesn't need a string specific (i.e. '{}') to log the exception. You can just do log.warn(\"msg\", new ExceptionType()); and it will log the exception properly.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466650100", "createdAt": "2020-08-06T19:52:24Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTE3NQ==", "bodyText": "Good to know.  Thanks @Maithem", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r466661175", "createdAt": "2020-08-06T20:15:29Z", "author": {"login": "pankti-m"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTQ3OA=="}, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODMwMjkyOnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxODoxODo0NlrOG9jhjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo1Mjo0N1rOG-ZK1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODM1MQ==", "bodyText": "For your consideration - I personally vote for getting rid of handleException method, it reduces the complexity of the code if you make it flat", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r467198351", "createdAt": "2020-08-07T18:18:46Z", "author": {"login": "xnull"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);\n+            } catch (RuntimeException e) {\n+                handleException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3NzI2OA==", "bodyText": "Let me make a note of your suggestion @xnull", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468077268", "createdAt": "2020-08-10T17:52:47Z", "author": {"login": "achinmishra"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -141,8 +156,10 @@ public void invoke() {\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n \n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);\n+            } catch (RuntimeException e) {\n+                handleException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODM1MQ=="}, "originalCommit": {"oid": "e8342e670bf5f7b266313d93e3a5fedf79fa2758"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDI0OTMxOnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjo0Njo0OVrOG_P3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjo0Njo0OVrOG_P3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3MzQ1OQ==", "bodyText": "This logic here is kind of weird, why not just catch RuntimeException and check \"instance of\" and cause in side the catch? IllegalStateException is a RuntimeException, and TimeoutException should not be thrown without being wrapped in RuntimeException, because it's a checked exception.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468973459", "createdAt": "2020-08-12T02:46:49Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -140,9 +155,10 @@ public void invoke() {\n                 else{\n                     throw new IllegalStateException(\"Orchestrator can not be selected\");\n                 }\n-\n-            } catch (NetworkException | TimeoutException | IllegalStateException e) {\n-                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, x, e);\n+            } catch (IllegalStateException | TimeoutException e) {\n+                log.warn(\"WorkflowRequest: Error while running {} on attempt {}, cause:\", this, retryIteration, e);\n+            } catch (RuntimeException e) {\n+                handleException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb87e3441c356ff0a00f98bd23d13948d1b20c8"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDI1NjY2OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjo1MTowMlrOG_P7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMjo1MTowMlrOG_P7tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk3NDUxOQ==", "bodyText": "This seems incorrect. IllegalStateException and NetworkException are RuntimeException, so the cause returned by ExceptionUtils.getRootCause() is null, so \"instance of\" will fail, and exception will be thrown without being retried.\nHere is a quick example for reference:\n@Test\n    public void xxx() {\n        try {\n            throw new NetworkException(\"s\", \"t\");\n        } catch (RuntimeException e) {\n            final Throwable cause = ExceptionUtils.getRootCause(e);\n            if (cause instanceof NetworkException) {\n                System.out.println(1111);\n            } else {\n                System.out.println(2222);\n            }\n        }\n    }\nThe code prints 222 because cause is actually null.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r468974519", "createdAt": "2020-08-12T02:51:02Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -119,6 +120,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n         throw new TimeoutException();\n     }\n \n+    /*\n+     * private method to handle exceptions while sendRequest()\n+     */\n+    private void handleException(RuntimeException runtimeException) {\n+        final Throwable cause = ExceptionUtils.getRootCause(runtimeException);\n+        if (cause instanceof TimeoutException ||\n+                cause instanceof IllegalStateException ||\n+                cause instanceof NetworkException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdb87e3441c356ff0a00f98bd23d13948d1b20c8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDg0MzI3OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDoxNTowOVrOG_7YiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDowOTo1M1rOHAb4YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NjQwOQ==", "bodyText": "You may need to add the number of attemp in the log, same as what it does when we catch the exception.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r469686409", "createdAt": "2020-08-13T04:15:09Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -130,19 +142,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n      * verified.\n      */\n     public void invoke() {\n-        for (int x = 0; x < retry; x++) {\n+        for (int retryIteration = 0; retryIteration < retry; retryIteration++) {\n             try {\n                 Optional<ManagementClient> orchestrator = getOrchestrator();\n                 if(orchestrator.isPresent()){\n                     UUID workflowId = sendRequest(orchestrator.get());\n                     waitForWorkflow(workflowId, orchestrator.get(), timeout, pollPeriod);\n                 }\n-                else{\n-                    throw new IllegalStateException(\"Orchestrator can not be selected\");\n+                else {\n+                    log.warn(\"Orchestrator can not be selected\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d9ccc49ef519848b6b81afa6c939bfac582b0c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIxODg0OQ==", "bodyText": "Noted. Thanks", "url": "https://github.com/CorfuDB/CorfuDB/pull/2680#discussion_r470218849", "createdAt": "2020-08-13T20:09:53Z", "author": {"login": "achinmishra"}, "path": "runtime/src/main/java/org/corfudb/runtime/view/workflows/WorkflowRequest.java", "diffHunk": "@@ -130,19 +142,20 @@ private void waitForWorkflow(@NonNull UUID workflow, @NonNull ManagementClient c\n      * verified.\n      */\n     public void invoke() {\n-        for (int x = 0; x < retry; x++) {\n+        for (int retryIteration = 0; retryIteration < retry; retryIteration++) {\n             try {\n                 Optional<ManagementClient> orchestrator = getOrchestrator();\n                 if(orchestrator.isPresent()){\n                     UUID workflowId = sendRequest(orchestrator.get());\n                     waitForWorkflow(workflowId, orchestrator.get(), timeout, pollPeriod);\n                 }\n-                else{\n-                    throw new IllegalStateException(\"Orchestrator can not be selected\");\n+                else {\n+                    log.warn(\"Orchestrator can not be selected\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NjQwOQ=="}, "originalCommit": {"oid": "02d9ccc49ef519848b6b81afa6c939bfac582b0c"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1893, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}