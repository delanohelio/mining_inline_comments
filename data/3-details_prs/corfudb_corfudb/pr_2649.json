{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODE2NjA3", "number": 2649, "title": "Server-Side Infrastructure for New BaseServer RPCs", "bodyText": "Overview\nDescription: Protobuf RPCs for BaseServer.\nWhy should this be merged: Meant to replace RequestHandler, and allow for the development of other RPC types.\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-07-22T00:44:32Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649", "merged": true, "mergeCommit": {"oid": "76b2ccf1adae5e5cff3b1669cd36d1f02b24fbc1"}, "closed": true, "closedAt": "2020-08-06T01:14:43Z", "author": {"login": "zfrenette"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3Pz01AH2gAyNDU0ODE2NjA3OmI1MTQ0ODNmNzA1YzIyNDg4NDY2NTJhZjExMzZiNjdkYmYwY2IyZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7phD7AH2gAyNDU0ODE2NjA3OjQ5MmY2ODg1MTEzOWVmZDk5ODNiNDMxMjFhMDE3MjE2YWJhMmE1YTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b514483f705c2248846652af1136b67dbf0cb2f4", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b514483f705c2248846652af1136b67dbf0cb2f4", "committedDate": "2020-07-22T00:37:06Z", "message": "Initial Commit -- Primarily includes some server-side infrastructure for new Protobuf RPC message types."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b10a76076d3da0d432e90d2a0bb5e5e78135bd9c", "committedDate": "2020-07-22T00:39:21Z", "message": "Initial Commit -- Primarily includes some server-side infrastructure for new Protobuf RPC message types."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTc0MzQ1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-452974345", "createdAt": "2020-07-22T03:45:57Z", "commit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0NTo1OFrOG1RoHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0NTo1OFrOG1RoHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNjUwOQ==", "bodyText": "Read and check the value instead of assuming its 0x2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r458516509", "createdAt": "2020-07-22T03:45:58Z", "author": {"login": "Maithem"}, "path": "common/src/main/java/org/corfudb/common/protocol/client/ResponseHandler.java", "diffHunk": "@@ -20,6 +20,7 @@\n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n         ByteBuf msgBuf = (ByteBuf) msg;\n+        msgBuf.readByte(); // Temporary -- Consume 0x2 marker.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTc1ODAz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-452975803", "createdAt": "2020-07-22T03:51:27Z", "commit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo1MToyN1rOG1RtdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo1MToyN1rOG1RtdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzg3Nw==", "bodyText": "You can remove this and do the version check on every message instead. The message version can be kept inside the header.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r458517877", "createdAt": "2020-07-22T03:51:27Z", "author": {"login": "Maithem"}, "path": "common/src/main/proto/CorfuProtocol.proto", "diffHunk": "@@ -87,20 +84,23 @@ message PingRequest {\n message PingResponse {\n }\n \n+// TODO(Zach): Update handshake logic\n message AuthenticateRequest {\n-\n+    UUID clientId = 1;\n+    UUID serverId = 2;\n }\n \n+// TODO(Zach): Update handshake logic\n message AuthenticateResponse {\n-\n+    UUID serverId = 1;\n+    string corfuVersion = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTc2NDEy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-452976412", "createdAt": "2020-07-22T03:53:39Z", "commit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo1MzozOVrOG1Rvvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo1MzozOVrOG1Rvvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxODQ2Mg==", "bodyText": "Can you make these static constants (i.e. 0x1 and 0x2)", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r458518462", "createdAt": "2020-07-22T03:53:39Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/protocol/NettyServerRouter.java", "diffHunk": "@@ -0,0 +1,144 @@\n+package org.corfudb.infrastructure.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufInputStream;\n+import com.google.common.collect.ImmutableList;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.corfudb.common.protocol.proto.CorfuProtocol;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.MessageType;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.Request;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.Header;\n+import org.corfudb.infrastructure.ServerContext;\n+import org.corfudb.runtime.view.Layout;\n+\n+import java.util.*;\n+\n+@Slf4j\n+@ChannelHandler.Sharable\n+public class NettyServerRouter extends ChannelInboundHandlerAdapter implements IServerRouter {\n+\n+    /**\n+     * This map stores the mapping from message types to server handler.\n+     */\n+    private final Map<MessageType, AbstractServer> handlerMap;\n+\n+    /**\n+     * This node's server context.\n+     */\n+    private final ServerContext serverContext;\n+\n+    /**\n+     * The epoch of this router. This is managed by the base server implementation.\n+     */\n+    @Getter\n+    @Setter\n+    volatile long serverEpoch;\n+\n+    /** The {@link AbstractServer}s this {@link NettyServerRouter} routes messages for. */\n+    private final ImmutableList<AbstractServer> servers;\n+\n+    public NettyServerRouter(ImmutableList<AbstractServer> servers, ServerContext serverContext) {\n+        this.serverContext = serverContext;\n+        this.serverEpoch = serverContext.getServerEpoch();\n+        this.servers = servers;\n+        handlerMap = new EnumMap<>(MessageType.class);\n+\n+        servers.forEach(server -> {\n+            Set<MessageType> handledTypes = server.getHandler().getHandledTypes();\n+            handledTypes.forEach(handledType -> handlerMap.put(handledType, server));\n+        });\n+    }\n+\n+    @Override\n+    public Optional<Layout> getCurrentLayout() {\n+        return Optional.ofNullable(serverContext.getCurrentLayout());\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     *\n+     * @deprecated This operation is no longer supported. The router will only route messages for\n+     * servers provided at construction time.\n+     */\n+    @Override\n+    @Deprecated\n+    public void addServer(AbstractServer server) {\n+        //TODO(Zach): Method still needed?\n+        throw new UnsupportedOperationException(\"No longer supported\");\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<AbstractServer> getServers() {\n+        return servers;\n+    }\n+\n+    @Override\n+    public void setServerContext(ServerContext serverContext) {\n+        //TODO(Zach): Method still needed?\n+        throw new UnsupportedOperationException(\"The operation is not supported.\");\n+    }\n+\n+    @Override\n+    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n+        log.info(\"channelActive: Incoming connection established from: {}.\",\n+                ctx.channel().remoteAddress());\n+    }\n+\n+    @Override\n+    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n+        ByteBuf msgBuf = (ByteBuf) msg;\n+\n+        // Temporary -- Check Corfu msg marker: 0x1 indicates legacy while 0x2 indicates new\n+        if (msgBuf.getByte(msgBuf.readerIndex()) == 0x1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b10a76076d3da0d432e90d2a0bb5e5e78135bd9c"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f895c0a55712a73f3ad539cf09c948585aad69d5", "committedDate": "2020-07-22T18:45:21Z", "message": "Defined messages marking constants (legacy and protobuf) in API."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNjM5MzIy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-453639322", "createdAt": "2020-07-22T19:58:03Z", "commit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTo1ODowNFrOG1yBhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTo1ODowNFrOG1yBhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA0NzMwMA==", "bodyText": "This is a bug. The marker is already consumed in line 24, if that if-statement isnt true, then another byte will be consumed, which is not the marker byte, so this will fail the subsequent call to serialization since it will be missing a byte.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r459047300", "createdAt": "2020-07-22T19:58:04Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/protocols/wireprotocol/NettyCorfuMessageDecoder.java", "diffHunk": "@@ -19,6 +20,13 @@\n     @Override\n     protected void decode(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf,\n                           List<Object> list) throws Exception {\n+        // Leave message unchanged if is non-legacy\n+        if(byteBuf.getByte(byteBuf.readerIndex()) != API.LEGACY_CORFU_MSG_MARK) {\n+            list.add(byteBuf);\n+            return;\n+        }\n+\n+        byteBuf.readByte();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNjUwMTEx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-453650111", "createdAt": "2020-07-22T20:13:40Z", "commit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDoxMzo0MFrOG1yiLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDoxMzo0MFrOG1yiLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA1NTY2MA==", "bodyText": "Never mind, ignore my comment below. It's wrong.\nUnlike the readByte, getByte API doesn't move the reader index.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r459055660", "createdAt": "2020-07-22T20:13:40Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/protocols/wireprotocol/NettyCorfuMessageDecoder.java", "diffHunk": "@@ -19,6 +20,13 @@\n     @Override\n     protected void decode(ChannelHandlerContext channelHandlerContext, ByteBuf byteBuf,\n                           List<Object> list) throws Exception {\n+        // Leave message unchanged if is non-legacy\n+        if(byteBuf.getByte(byteBuf.readerIndex()) != API.LEGACY_CORFU_MSG_MARK) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNjYyNjg3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-453662687", "createdAt": "2020-07-22T20:32:27Z", "commit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDozMjoyN1rOG1zIiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDozMjoyN1rOG1zIiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NTQ4MQ==", "bodyText": "What if this byte is not LEGACY_CORFU_MSG_MARK ?\nI think you should explicitly check that it is LEGACY_CORFU_MSG_MARK and throw an IllegalStateException otherwise.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r459065481", "createdAt": "2020-07-22T20:32:27Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/protocol/NettyServerRouter.java", "diffHunk": "@@ -96,14 +97,13 @@ public void channelActive(ChannelHandlerContext ctx) throws Exception {\n     public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n         ByteBuf msgBuf = (ByteBuf) msg;\n \n-        // Temporary -- Check Corfu msg marker: 0x1 indicates legacy while 0x2 indicates new\n-        if (msgBuf.getByte(msgBuf.readerIndex()) == 0x1) {\n-            ctx.fireChannelRead(msgBuf); // Forward legacy corfu msg to next handler\n+        // Temporary -- If message is not a new Protobuf message, forward the message.\n+        if (msgBuf.getByte(msgBuf.readerIndex()) != API.PROTO_CORFU_MSG_MARK) {\n+            ctx.fireChannelRead(msgBuf);\n             return;\n         }\n \n-        msgBuf.readByte(); // Temporary -- Consume 0x2 marker\n-\n+        msgBuf.readByte();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f895c0a55712a73f3ad539cf09c948585aad69d5"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2032f981b15b0cc69a3c1484e909707a0d73bb36", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/2032f981b15b0cc69a3c1484e909707a0d73bb36", "committedDate": "2020-07-22T20:35:24Z", "message": "Fix for nettySasl test in NettyCommTest class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25ff36ca19f5fb9c98f491837afb8590dd3a9ad8", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/25ff36ca19f5fb9c98f491837afb8590dd3a9ad8", "committedDate": "2020-07-23T22:36:40Z", "message": "Mainly an API update that allows for a ServerError in a Response message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/a304c82f73286eff001025bd461d5c8014397afd", "committedDate": "2020-07-24T21:27:08Z", "message": "Mainly a base server implementation of ping message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjUyMDE5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-455252019", "createdAt": "2020-07-25T01:58:31Z", "commit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMTo1ODozMVrOG3Bjyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMTo1ODozMVrOG3Bjyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDQxMQ==", "bodyText": "Pass the allocator via the constructor. Accessing a resources from multiple entry points makes it hard to change. You can wrap the default allocator and pass that instance to the constructor.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r460350411", "createdAt": "2020-07-25T01:58:31Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/protocol/NettyServerRouter.java", "diffHunk": "@@ -60,6 +62,17 @@ public NettyServerRouter(ImmutableList<AbstractServer> servers, ServerContext se\n         return Optional.ofNullable(serverContext.getCurrentLayout());\n     }\n \n+\n+\n+    @Override\n+    public void sendResponse(Response response, ChannelHandlerContext ctx) {\n+        ByteBuf outBuf = PooledByteBufAllocator.DEFAULT.buffer();\n+        outBuf.writeByte(API.PROTO_CORFU_MSG_MARK);\n+        outBuf.writeBytes(response.toByteArray());\n+        //TODO(Zach): Where to remove allocation?\n+        ctx.writeAndFlush(outBuf);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzg5MjA0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-455389204", "createdAt": "2020-07-26T19:26:38Z", "commit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNjozOFrOG3OmYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNjozOFrOG3OmYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDA2NA==", "bodyText": "You can use an input stream here and release it on IOException", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r460564064", "createdAt": "2020-07-26T19:26:38Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/protocol/NettyServerRouter.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.corfudb.infrastructure.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufInputStream;\n+import com.google.common.collect.ImmutableList;\n+import io.netty.buffer.PooledByteBufAllocator;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.channel.ChannelInboundHandlerAdapter;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.corfudb.common.protocol.API;\n+import org.corfudb.common.protocol.proto.CorfuProtocol;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.MessageType;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.Request;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.Response;\n+import org.corfudb.common.protocol.proto.CorfuProtocol.Header;\n+import org.corfudb.infrastructure.ServerContext;\n+import org.corfudb.runtime.view.Layout;\n+\n+import java.util.*;\n+\n+@Slf4j\n+@ChannelHandler.Sharable\n+public class NettyServerRouter extends ChannelInboundHandlerAdapter implements IServerRouter {\n+\n+    /**\n+     * This map stores the mapping from message types to server handler.\n+     */\n+    private final Map<MessageType, AbstractServer> handlerMap;\n+\n+    /**\n+     * This node's server context.\n+     */\n+    private final ServerContext serverContext;\n+\n+    /**\n+     * The epoch of this router. This is managed by the base server implementation.\n+     */\n+    @Getter\n+    @Setter\n+    volatile long serverEpoch;\n+\n+    /** The {@link AbstractServer}s this {@link NettyServerRouter} routes messages for. */\n+    private final ImmutableList<AbstractServer> servers;\n+\n+    public NettyServerRouter(ImmutableList<AbstractServer> servers, ServerContext serverContext) {\n+        this.serverContext = serverContext;\n+        this.serverEpoch = serverContext.getServerEpoch();\n+        this.servers = servers;\n+        handlerMap = new EnumMap<>(MessageType.class);\n+\n+        servers.forEach(server -> {\n+            Set<MessageType> handledTypes = server.getHandler().getHandledTypes();\n+            handledTypes.forEach(handledType -> handlerMap.put(handledType, server));\n+        });\n+    }\n+\n+    @Override\n+    public Optional<Layout> getCurrentLayout() {\n+        return Optional.ofNullable(serverContext.getCurrentLayout());\n+    }\n+\n+\n+\n+    @Override\n+    public void sendResponse(Response response, ChannelHandlerContext ctx) {\n+        ByteBuf outBuf = PooledByteBufAllocator.DEFAULT.buffer();\n+        outBuf.writeByte(API.PROTO_CORFU_MSG_MARK);\n+        outBuf.writeBytes(response.toByteArray());\n+        //TODO(Zach): Where to remove allocation?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzg5Mjg1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-455389285", "createdAt": "2020-07-26T19:27:54Z", "commit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNzo1NFrOG3Om0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNzo1NFrOG3Om0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDE3OA==", "bodyText": "Added the new annotated methods in the existing class. I don't see a strong reason to fork the class.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r460564178", "createdAt": "2020-07-26T19:27:54Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/protocol/BaseServer.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package org.corfudb.infrastructure.protocol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a304c82f73286eff001025bd461d5c8014397afd"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7399e95c674136431a17ede477069d7c0738b490", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/7399e95c674136431a17ede477069d7c0738b490", "committedDate": "2020-07-27T18:22:55Z", "message": "Completion of various TODOs in new IServerRouter and NettyServerRouter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50975c21b425387aabc1f22b36716588e3b63b0d", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/50975c21b425387aabc1f22b36716588e3b63b0d", "committedDate": "2020-07-27T22:29:41Z", "message": "Consolidation of AbstractServer and BaseServer, along with some minor fixes/edits."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ab22fabf2b3a868b916c660a4a0f6fb1be375d", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/72ab22fabf2b3a868b916c660a4a0f6fb1be375d", "committedDate": "2020-07-27T23:39:43Z", "message": "Minor TODO resolution in RequestHandlerMethods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8502b9f7892ae88a766102001606ef134d07449a", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/8502b9f7892ae88a766102001606ef134d07449a", "committedDate": "2020-07-28T02:03:26Z", "message": "Integration of new NettyServerRouter class into CorfuServerNode pipeline."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ce52ff90c06829ca3e030f69e4ebedb55c4f69a", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/9ce52ff90c06829ca3e030f69e4ebedb55c4f69a", "committedDate": "2020-07-28T20:14:21Z", "message": "Server-side implementation of handlers for RESET and RESTART. Partial implementation of SEAL handler."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTkyNTkw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-456992590", "createdAt": "2020-07-28T20:37:44Z", "commit": {"oid": "9ce52ff90c06829ca3e030f69e4ebedb55c4f69a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDozNzo0NFrOG4d5Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDozNzo0NFrOG4d5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2MzI2Ng==", "bodyText": "How can you even get routed to this point without having the ResetRequest? I think that check is done before a call is made to this method.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r461863266", "createdAt": "2020-07-28T20:37:44Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/BaseServer.java", "diffHunk": "@@ -180,6 +213,24 @@ private void doReset(CorfuMsg msg, ChannelHandlerContext ctx, IServerRouter r) {\n         CorfuServer.restartServer(true);\n     }\n \n+    /**\n+     * Reset the JVM. This mechanism leverages that corfu_server runs in a bash script\n+     * which monitors the exit code of Corfu. If the exit code is 100, then it resets\n+     * the server and DELETES ALL EXISTING DATA.\n+     * @param req The incoming request message.\n+     * @param ctx The channel context.\n+     * @param r The server router.\n+     */\n+    @AnnotatedServerHandler(type = CorfuProtocol.MessageType.RESET)\n+    private void handleReset(Request req, ChannelHandlerContext ctx, org.corfudb.infrastructure.protocol.IServerRouter r) {\n+        log.warn(\"Remote reset requested from client {}\", req.getHeader().getClientId());\n+        //TODO(Zach): checkArgument(req.hasResetRequest());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce52ff90c06829ca3e030f69e4ebedb55c4f69a"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTg3MTA5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-457187109", "createdAt": "2020-07-29T04:32:59Z", "commit": {"oid": "9ce52ff90c06829ca3e030f69e4ebedb55c4f69a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDozMjo1OVrOG4oMFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDozMjo1OVrOG4oMFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzMTg5NQ==", "bodyText": "I think you forgot to change this to -\nreturn newResetResponse(header, newNoServerError());", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r462031895", "createdAt": "2020-07-29T04:32:59Z", "author": {"login": "chetangudisagar"}, "path": "common/src/main/java/org/corfudb/common/protocol/API.java", "diffHunk": "@@ -131,6 +137,71 @@ public static Response newPingResponse(Header header, ServerError error) {\n                 .build();\n     }\n \n+    public static Request newRestartRequest(Header header) {\n+        RestartRequest restartRequest = RestartRequest.getDefaultInstance();\n+        return Request.newBuilder()\n+                .setHeader(header)\n+                .setRestartRequest(restartRequest)\n+                .build();\n+    }\n+\n+    public static Response newRestartResponse(Header header) {\n+        return newRestartResponse(header, newNoServerError());\n+    }\n+\n+    public static Response newRestartResponse(Header header, ServerError error) {\n+        RestartResponse restartResponse = RestartResponse.getDefaultInstance();\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .setRestartResponse(restartResponse)\n+                .build();\n+    }\n+\n+    public static Request newResetRequest(Header header) {\n+        ResetRequest resetRequest = ResetRequest.getDefaultInstance();\n+        return Request.newBuilder()\n+                .setHeader(header)\n+                .setResetRequest(resetRequest)\n+                .build();\n+    }\n+\n+    public static Response newResetResponse(Header header) {\n+        return newRestartResponse(header, newNoServerError());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce52ff90c06829ca3e030f69e4ebedb55c4f69a"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63032c6f6ad1d7f1ab50ed79414ebd448b3bdb28", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/63032c6f6ad1d7f1ab50ed79414ebd448b3bdb28", "committedDate": "2020-07-29T14:21:13Z", "message": "Minor API fix for RESET."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f45d7caa097092fdcb999938995340a6d93ceed8", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f45d7caa097092fdcb999938995340a6d93ceed8", "committedDate": "2020-07-29T18:43:01Z", "message": "Minor cleanup in RequestHandlerMethods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d0be7850c9b8bdc209f88ee2ef533bfdc208cf", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f7d0be7850c9b8bdc209f88ee2ef533bfdc208cf", "committedDate": "2020-07-29T18:45:25Z", "message": "Check that requests have appropriate payloads given request type in IServerRouter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MTM0MTkz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#pullrequestreview-458134193", "createdAt": "2020-07-30T07:03:53Z", "commit": {"oid": "f7d0be7850c9b8bdc209f88ee2ef533bfdc208cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzowMzo1M1rOG5WO1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzowMzo1M1rOG5WO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc4NjI2Mg==", "bodyText": "This seems superfluous, just let the message go through and if not recognized the server should reply with an error.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2649#discussion_r462786262", "createdAt": "2020-07-30T07:03:53Z", "author": {"login": "Maithem"}, "path": "common/src/main/java/org/corfudb/common/protocol/API.java", "diffHunk": "@@ -47,4 +124,163 @@ public static Request newPingRequest(Header header) {\n                 .build();\n     }\n \n+    public static Response newPingResponse(Header header) {\n+        return newPingResponse(header, newNoServerError());\n+    }\n+\n+    public static Response newPingResponse(Header header, ServerError error) {\n+        PingResponse pingResponse = PingResponse.getDefaultInstance();\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .setPingResponse(pingResponse)\n+                .build();\n+    }\n+\n+    public static Request newRestartRequest(Header header) {\n+        RestartRequest restartRequest = RestartRequest.getDefaultInstance();\n+        return Request.newBuilder()\n+                .setHeader(header)\n+                .setRestartRequest(restartRequest)\n+                .build();\n+    }\n+\n+    public static Response newRestartResponse(Header header) {\n+        return newRestartResponse(header, newNoServerError());\n+    }\n+\n+    public static Response newRestartResponse(Header header, ServerError error) {\n+        RestartResponse restartResponse = RestartResponse.getDefaultInstance();\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .setRestartResponse(restartResponse)\n+                .build();\n+    }\n+\n+    public static Request newResetRequest(Header header) {\n+        ResetRequest resetRequest = ResetRequest.getDefaultInstance();\n+        return Request.newBuilder()\n+                .setHeader(header)\n+                .setResetRequest(resetRequest)\n+                .build();\n+    }\n+\n+    public static Response newResetResponse(Header header) {\n+        return newResetResponse(header, newNoServerError());\n+    }\n+\n+    public static Response newResetResponse(Header header, ServerError error) {\n+        ResetResponse resetResponse = ResetResponse.getDefaultInstance();\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .setResetResponse(resetResponse)\n+                .build();\n+    }\n+\n+    public static Request newSealRequest(Header header, long newEpoch) {\n+        SealRequest sealRequest = SealRequest.newBuilder()\n+                                        .setEpoch(newEpoch)\n+                                        .build();\n+        return Request.newBuilder()\n+                .setHeader(header)\n+                .setSealRequest(sealRequest)\n+                .build();\n+    }\n+\n+    public static Response newSealResponse(Header header) {\n+        return newSealResponse(header, newNoServerError());\n+    }\n+\n+    public static Response newSealResponse(Header header, ServerError error) {\n+        SealResponse sealResponse = SealResponse.getDefaultInstance();\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .setSealResponse(sealResponse)\n+                .build();\n+    }\n+\n+    public static Response newErrorResponseNoPayload(Header header, ServerError error) {\n+        return Response.newBuilder()\n+                .setHeader(header)\n+                .setError(error)\n+                .build();\n+    }\n+\n+    public static boolean validateRequest(Request request) {\n+        switch(request.getHeader().getType()) {\n+            case PING:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7d0be7850c9b8bdc209f88ee2ef533bfdc208cf"}, "originalPosition": 213}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c994843e46e478101581765b1469a81473b53f", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c6c994843e46e478101581765b1469a81473b53f", "committedDate": "2020-08-03T16:18:00Z", "message": "Minor cleanup and renaming to API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e48904952df5366da9c28c93ed24f41441ab3f14", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/e48904952df5366da9c28c93ed24f41441ab3f14", "committedDate": "2020-08-03T17:31:47Z", "message": "Log formatting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492f68851139efd9983b43121a017216aba2a5a8", "author": {"user": {"login": "zfrenette", "name": "Zachary Frenette"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/492f68851139efd9983b43121a017216aba2a5a8", "committedDate": "2020-08-04T16:49:50Z", "message": "Completion of SEAL handler."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4312, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}