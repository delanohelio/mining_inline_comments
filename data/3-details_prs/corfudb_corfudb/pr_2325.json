{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTY1Nzcw", "number": 2325, "title": "VersionLockedObject and CorfuTable Deadlock", "bodyText": "Overview\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter).\nWhy should this be merged: Fixes a deadlock bug\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-01-25T23:37:43Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325", "merged": true, "mergeCommit": {"oid": "ba3676473e477b74af9ddd9730fcf0027c76fef8"}, "closed": true, "closedAt": "2020-01-31T22:12:41Z", "author": {"login": "Maithem"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb98SQKgBqjI5Nzk2MDMxNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_10fyAH2gAyMzY3MTY1NzcwOjIyMjE5OTU0M2E1ZjZhNGNiMTcwNDRhNDRhODE2MWQwNjM4MDRmZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2ea3febdc9fb8178bbbec1e653670da018facc2", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c2ea3febdc9fb8178bbbec1e653670da018facc2", "committedDate": "2020-01-25T23:35:05Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}, "afterCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b0b7c3cdc5dad6a754ca328340622b93a03f002a", "committedDate": "2020-01-25T23:38:20Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDU5MDE0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#pullrequestreview-349059014", "createdAt": "2020-01-28T00:03:22Z", "commit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMzoyMlrOFiVn8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowODozOVrOFiVtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDE5NA==", "bodyText": "r/away/a way/", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r371550194", "createdAt": "2020-01-28T00:03:22Z", "author": {"login": "medhavidhawan"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDQ4NQ==", "bodyText": "r/exhauseted/exhausted", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r371550485", "createdAt": "2020-01-28T00:04:25Z", "author": {"login": "medhavidhawan"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a\n+    // circular dependency between the VersionLockedObject(VLO) lock and the common forkjoin thread pool. In order\n+    // to break the dependency, parallel stream operations have to execute on a separate pool that applications\n+    // cant use. For example, if there are 4 accessor threads all using the common forkjoin pool, one of the threads\n+    // can acquire the VLO lock and cause the other 3 threads to wait, but after acquiring the VLO lock, the thread\n+    // gets block on parallel stream, because the pool is exhauseted with threads that are trying to acquire the VLO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MDYwMQ==", "bodyText": "r/decadency/dependency", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r371550601", "createdAt": "2020-01-28T00:04:44Z", "author": {"login": "medhavidhawan"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a\n+    // circular dependency between the VersionLockedObject(VLO) lock and the common forkjoin thread pool. In order\n+    // to break the dependency, parallel stream operations have to execute on a separate pool that applications\n+    // cant use. For example, if there are 4 accessor threads all using the common forkjoin pool, one of the threads\n+    // can acquire the VLO lock and cause the other 3 threads to wait, but after acquiring the VLO lock, the thread\n+    // gets block on parallel stream, because the pool is exhauseted with threads that are trying to acquire the VLO\n+    // look, which creates a circular decadency. In other words, a deadlock.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTMwMA==", "bodyText": "Should this be a parameter ? or is this formula always good.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r371551300", "createdAt": "2020-01-28T00:07:16Z", "author": {"login": "medhavidhawan"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a\n+    // circular dependency between the VersionLockedObject(VLO) lock and the common forkjoin thread pool. In order\n+    // to break the dependency, parallel stream operations have to execute on a separate pool that applications\n+    // cant use. For example, if there are 4 accessor threads all using the common forkjoin pool, one of the threads\n+    // can acquire the VLO lock and cause the other 3 threads to wait, but after acquiring the VLO lock, the thread\n+    // gets block on parallel stream, because the pool is exhauseted with threads that are trying to acquire the VLO\n+    // look, which creates a circular decadency. In other words, a deadlock.\n+    private static final ForkJoinPool.ForkJoinWorkerThreadFactory factory = pool -> {\n+        final ForkJoinWorkerThread worker = ForkJoinPool.defaultForkJoinWorkerThreadFactory.newThread(pool);\n+        worker.setName(\"CorfuTable-Forkjoin-pool-\" + worker.getPoolIndex());\n+        return worker;\n+    };\n+\n+    private final static ForkJoinPool pool = new ForkJoinPool(Runtime.getRuntime().availableProcessors() - 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTY2NQ==", "bodyText": "I know i have seen this problem, but is there a way to create a test that will cause this deadlock. I am not holding the review for this but just want to see if something is possible.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r371551665", "createdAt": "2020-01-28T00:08:39Z", "author": {"login": "medhavidhawan"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -358,19 +376,19 @@ public void insert(@ConflictParameter K key, V value) {\n      */\n     @Accessor\n     public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n-        return mainMap.entryStream()\n+        return pool.submit(() -> mainMap.entryStream()\n                 .map(Entry::getValue).filter(valuePredicate)\n-                .collect(Collectors.toCollection(ArrayList::new));\n+                .collect(Collectors.toCollection(ArrayList::new))).join();\n     }\n \n     /** {@inheritDoc} */\n     @Override\n     @Accessor\n     public Collection<Map.Entry<K, V>> scanAndFilterByEntry(\n             Predicate<? super Map.Entry<K, V>> entryPredicate) {\n-        return mainMap.entryStream()\n+        return pool.submit(() -> mainMap.entryStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNTgyNjE2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#pullrequestreview-350582616", "createdAt": "2020-01-30T05:01:24Z", "commit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNTowMToyNVrOFjffLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwNToxNToxOVrOFjfozQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc2MDM2Ng==", "bodyText": "Is it cleaner to make the factory an anomymous class instead of a private class field since it's only used here?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r372760366", "createdAt": "2020-01-30T05:01:25Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a\n+    // circular dependency between the VersionLockedObject(VLO) lock and the common forkjoin thread pool. In order\n+    // to break the dependency, parallel stream operations have to execute on a separate pool that applications\n+    // cant use. For example, if there are 4 accessor threads all using the common forkjoin pool, one of the threads\n+    // can acquire the VLO lock and cause the other 3 threads to wait, but after acquiring the VLO lock, the thread\n+    // gets block on parallel stream, because the pool is exhauseted with threads that are trying to acquire the VLO\n+    // look, which creates a circular decadency. In other words, a deadlock.\n+    private static final ForkJoinPool.ForkJoinWorkerThreadFactory factory = pool -> {\n+        final ForkJoinWorkerThread worker = ForkJoinPool.defaultForkJoinWorkerThreadFactory.newThread(pool);\n+        worker.setName(\"CorfuTable-Forkjoin-pool-\" + worker.getPoolIndex());\n+        return worker;\n+    };\n+\n+    private final static ForkJoinPool pool = new ForkJoinPool(Runtime.getRuntime().availableProcessors() - 1,\n+            factory, null, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc2MjgyOQ==", "bodyText": "scanAndFilter/scanAndFilterByEntry are not the only functions using entryStream(), which uses parallel stream. Other functions like keySet() are using it as well, why only scanAndFilter/scanAndFilterByEntry are changed in the patch?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r372762829", "createdAt": "2020-01-30T05:15:19Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -358,19 +376,19 @@ public void insert(@ConflictParameter K key, V value) {\n      */\n     @Accessor\n     public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n-        return mainMap.entryStream()\n+        return pool.submit(() -> mainMap.entryStream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDYyMTA4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#pullrequestreview-351062108", "createdAt": "2020-01-30T18:55:18Z", "commit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo1NToxOFrOFj2H-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo1NjoxMVrOFj2JnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzMTI1OA==", "bodyText": "small typo: away -> a way", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r373131258", "createdAt": "2020-01-30T18:55:18Z", "author": {"login": "lixinchengdu"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzMTY3Ng==", "bodyText": "the can create -> they can create", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#discussion_r373131676", "createdAt": "2020-01-30T18:56:11Z", "author": {"login": "lixinchengdu"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -61,6 +63,22 @@\n public class CorfuTable<K ,V> implements\n         ICorfuTable<K, V>, ICorfuSMR<CorfuTable<K, V>> {\n \n+    // Accessor/Mutator threads can interleave in away that creates a deadlock because the can create a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDg2NjY5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#pullrequestreview-351086669", "createdAt": "2020-01-30T19:33:11Z", "commit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0b7c3cdc5dad6a754ca328340622b93a03f002a", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b0b7c3cdc5dad6a754ca328340622b93a03f002a", "committedDate": "2020-01-25T23:38:20Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}, "afterCommit": {"oid": "98c06f42b7d41deeed5aa0cbc087ae4b114e7160", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/98c06f42b7d41deeed5aa0cbc087ae4b114e7160", "committedDate": "2020-01-31T01:01:07Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98c06f42b7d41deeed5aa0cbc087ae4b114e7160", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/98c06f42b7d41deeed5aa0cbc087ae4b114e7160", "committedDate": "2020-01-31T01:01:07Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}, "afterCommit": {"oid": "ac1d3d0ee33920546fa5988a92c5099b667ec9c3", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ac1d3d0ee33920546fa5988a92c5099b667ec9c3", "committedDate": "2020-01-31T01:45:02Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzE3NzYw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2325#pullrequestreview-351317760", "createdAt": "2020-01-31T06:46:34Z", "commit": {"oid": "ac1d3d0ee33920546fa5988a92c5099b667ec9c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f367edeaec77bdc3ff2279a97de81e836a86580", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3f367edeaec77bdc3ff2279a97de81e836a86580", "committedDate": "2020-01-31T17:54:38Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac1d3d0ee33920546fa5988a92c5099b667ec9c3", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ac1d3d0ee33920546fa5988a92c5099b667ec9c3", "committedDate": "2020-01-31T01:45:02Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}, "afterCommit": {"oid": "3f367edeaec77bdc3ff2279a97de81e836a86580", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3f367edeaec77bdc3ff2279a97de81e836a86580", "committedDate": "2020-01-31T17:54:38Z", "message": "VersionLockedObject and CorfuTable Deadlock\n\nThis patch removes a circular dependency between threads acquiring\nthe VLO lock and threads used for parallel stream operations (i.e\nscanAndFilter)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222199543a5f6a4cb17044a44a8161d063804fde", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/222199543a5f6a4cb17044a44a8161d063804fde", "committedDate": "2020-01-31T21:14:28Z", "message": "Merge branch 'master' into fjDeadlock"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3426, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}