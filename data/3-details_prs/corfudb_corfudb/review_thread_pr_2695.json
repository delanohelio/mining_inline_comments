{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NzUxODI4", "number": 2695, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjowMjo0N1rOEW-s5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoxMjowMVrOEZw9HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTMxNDI5OnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/org/corfudb/utils/lock/states/NoLeaseState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjowMjo0N1rOG-hWLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjowMjo0N1rOG-hWLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIxMTI0Nw==", "bodyText": "Can we have a test that verifies that LR is correctly restarted and able to resume?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2695#discussion_r468211247", "createdAt": "2020-08-10T22:02:47Z", "author": {"login": "annym"}, "path": "utils/src/main/java/org/corfudb/utils/lock/states/NoLeaseState.java", "diffHunk": "@@ -90,7 +91,13 @@ private void acquireLease() {\n             if (lockStore.acquire(lock.getLockId())) {\n                 lock.input(LockEvent.LEASE_ACQUIRED);\n             }\n-        } catch (Exception e) {\n+        }\n+        catch (WrongClusterException wce) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dae7620535e91eda2fc58e54ea724f241add1c4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTQxODczOnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjo0Njo0NVrOG-iUUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzowMzo1NVrOG-iqJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIyNzE1NQ==", "bodyText": "we should log something here also", "url": "https://github.com/CorfuDB/CorfuDB/pull/2695#discussion_r468227155", "createdAt": "2020-08-10T22:46:45Z", "author": {"login": "pankti-m"}, "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "diffHunk": "@@ -160,7 +161,12 @@ private void monitorLocks() {\n                             log.debug(\"LockClient: lease revoked for lock {}\", lockId.getLockName());\n                             locks.get(lockId).input(LockEvent.LEASE_REVOKED);\n                         }\n-                    } catch (Exception ex) {\n+                    }\n+                    catch (WrongClusterException wce) {\n+                        log.error(\"Lock client {} is connected to a wrong cluster:\", clientId, wce);\n+                        throw wce;\n+                    }\n+                    catch (Exception ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dae7620535e91eda2fc58e54ea724f241add1c4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzMjc0MQ==", "bodyText": "Actually, if we re-throw an exception we must not log it.\nIn the other case, we will log the same thrown exceptions on all levels of the application, which dramatically increases log size and make it difficult to read and understand the application logic.\nWould be great if Pavel removes those logs in catch block because they will be handled on a higher level of the stack", "url": "https://github.com/CorfuDB/CorfuDB/pull/2695#discussion_r468232741", "createdAt": "2020-08-10T23:03:55Z", "author": {"login": "xnull"}, "path": "utils/src/main/java/org/corfudb/utils/lock/LockClient.java", "diffHunk": "@@ -160,7 +161,12 @@ private void monitorLocks() {\n                             log.debug(\"LockClient: lease revoked for lock {}\", lockId.getLockName());\n                             locks.get(lockId).input(LockEvent.LEASE_REVOKED);\n                         }\n-                    } catch (Exception ex) {\n+                    }\n+                    catch (WrongClusterException wce) {\n+                        log.error(\"Lock client {} is connected to a wrong cluster:\", clientId, wce);\n+                        throw wce;\n+                    }\n+                    catch (Exception ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIyNzE1NQ=="}, "originalCommit": {"oid": "3dae7620535e91eda2fc58e54ea724f241add1c4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDUxOTMzOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoxMjowMVrOHCxUDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDoxMjowMVrOHCxUDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2NzE0OA==", "bodyText": "Codacy found an issue: System.exit() should not be used in J2EE/JEE apps", "url": "https://github.com/CorfuDB/CorfuDB/pull/2695#discussion_r472667148", "createdAt": "2020-08-19T04:12:01Z", "author": {"login": "corfudb-bot"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -312,6 +316,7 @@ private CorfuRuntime getCorfuRuntime() {\n                     .keyStore((String) serverContext.getServerConfig().get(\"--keystore\"))\n                     .ksPasswordFile((String) serverContext.getServerConfig().get(\"--keystore-password-file\"))\n                     .tlsEnabled((Boolean) serverContext.getServerConfig().get(\"--enable-tls\"))\n+                    .systemDownHandler(() -> System.exit(SYSTEM_EXIT_ERROR_CODE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73230e9a2aba7fad452f6090b32a6aa9b7040dfb"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}