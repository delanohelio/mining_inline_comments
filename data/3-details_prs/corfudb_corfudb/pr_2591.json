{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTE1MzEz", "number": 2591, "title": "Fix topology config change logic", "bodyText": "Overview\nDescription:\nFix topology config change logic and make CorfuReplicationSiteConfigIT work\nWhy should this be merged:\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-06-30T09:53:23Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591", "merged": true, "mergeCommit": {"oid": "21b1b985e84a0cfd243953732283c0621cf0d89e"}, "closed": true, "closedAt": "2020-07-02T01:36:11Z", "author": {"login": "zhangn49"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwX0U0gFqTQ0MDE2MzYwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw0qNigFqTQ0MTI5Mzg2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTYzNjA0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-440163604", "createdAt": "2020-06-30T15:59:25Z", "commit": {"oid": "123615707a508a648d7c4ac4cfc8392c0a7f7166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1OToyNVrOGrDXTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1OToyNVrOGrDXTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NzA2OQ==", "bodyText": "May add log.warn that this call should not be called on non active site. Also why replicationManager can be null?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r447797069", "createdAt": "2020-06-30T15:59:25Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -497,7 +514,9 @@ public void updateSiteConfig(LogReplicationClusterInfo.TopologyConfigurationMsg\n      */\n     @Override\n     public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123615707a508a648d7c4ac4cfc8392c0a7f7166"}, "originalPosition": 168}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTY0MDY5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-440164069", "createdAt": "2020-06-30T15:59:55Z", "commit": {"oid": "123615707a508a648d7c4ac4cfc8392c0a7f7166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1OTo1NlrOGrDYkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1OTo1NlrOGrDYkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NzM5NA==", "bodyText": "Add log.warn if the roletype is not active.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r447797394", "createdAt": "2020-06-30T15:59:56Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -506,7 +525,15 @@ public void prepareSiteRoleChange() {\n      */\n     @Override\n     public int queryReplicationStatus() {\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123615707a508a648d7c4ac4cfc8392c0a7f7166"}, "originalPosition": 179}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDIzMTk4", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-440423198", "createdAt": "2020-06-30T22:14:13Z", "commit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjoxNDoxM1rOGrQURg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjoyOTo1MVrOGrQq1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTI4Ng==", "bodyText": "Let's rename processSiteFlip -> processClusterRoleChange", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448009286", "createdAt": "2020-06-30T22:14:13Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -391,32 +390,50 @@ public void processLockRelease() {\n \n         interClusterReplicationService.getLogReplicationServer().setLeadership(false);\n \n-        if (localNodeDescriptor.isLeader()) {\n+        if (isLeader) {\n             stopLogReplication();\n-            localNodeDescriptor.setLeader(false);\n+            isLeader = false;\n         }\n     }\n \n     public void processSiteFlip(TopologyDescriptor newConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTU1NQ==", "bodyText": "Same here -> processClusterRoleChangeNotification", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448009555", "createdAt": "2020-06-30T22:14:58Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -391,32 +390,50 @@ public void processLockRelease() {\n \n         interClusterReplicationService.getLogReplicationServer().setLeadership(false);\n \n-        if (localNodeDescriptor.isLeader()) {\n+        if (isLeader) {\n             stopLogReplication();\n-            localNodeDescriptor.setLeader(false);\n+            isLeader = false;\n         }\n     }\n \n     public void processSiteFlip(TopologyDescriptor newConfig) {\n-        // TODO(Nan): Check standby to active and active to standby...\n+        // stop ongoing replication, stopLogReplication() checks leadership and active\n         stopLogReplication();\n+\n         //TODO pankti: read the configuration again and refresh the LogReplicationConfig object\n-        replicationManager.setTopologyDescriptor(newConfig);\n-        boolean activeCluster = localNodeDescriptor.getRoleType() == ClusterRole.ACTIVE;\n-        updateTopologyConfigId(activeCluster);\n+\n+        // update local topology descriptor\n+        topologyDescriptor = newConfig;\n+\n+        // update local cluster descriptor\n+        localClusterDescriptor = topologyDescriptor.getClusterDescriptor(localEndpoint);\n+\n+        // update local node descriptor\n+        localNodeDescriptor = localClusterDescriptor.getNode(localEndpoint);\n+\n+        // update config id in metadata manager\n+        interClusterReplicationService.getLogReplicationServer().getSinkManager()\n+                .updateTopologyConfigId(topologyDescriptor.getTopologyConfigId());\n+        log.debug(\"Persist new topologyConfigId {}, status={}\", topologyDescriptor.getTopologyConfigId(),\n+                localClusterDescriptor.getRole());\n+\n+        logReplicationServerHandler.setActive(localClusterDescriptor.getRole().equals(ClusterRole.ACTIVE));\n+\n+        // we do not need to update replication manager's config, since it will be initialized again\n+\n         startLogReplication();\n     }\n \n     public void processSiteChangeNotification(DiscoveryServiceEvent event) {\n         // Stale notification, skip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMDQzMA==", "bodyText": "let's rename -> setTopologyConfigId", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448010430", "createdAt": "2020-06-30T22:17:09Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/LogReplicationSourceManager.java", "diffHunk": "@@ -173,6 +173,7 @@ public LogReplicationSourceManager(CorfuRuntime runtime,\n \n         this.logReplicationFSM = new LogReplicationFSM(this.runtime, config, params.getRemoteClusterDescriptor(),\n                 dataSender, readProcessor, logReplicationFSMWorkers);\n+        this.logReplicationFSM.setSiteConfigID(params.getTopologyConfigId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMDU5NA==", "bodyText": "typo -> manage -> manager", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448010594", "createdAt": "2020-06-30T22:17:35Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -196,6 +196,8 @@ public LogReplicationEntry receive(LogReplicationEntry message) {\n          // It could be caused by an out-of-date sender or the local node hasn't done the site discovery yet.\n          // If there is a siteConfig change, the discovery service will detect it and reset the state.\n         if (message.getMetadata().getTopologyConfigId() != siteConfigID) {\n+            log.trace(\"Sink manage with config id {} ignored msg id {}\", siteConfigID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMDkwNA==", "bodyText": "Is this required but still not working? or old code we can remove?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448010904", "createdAt": "2020-06-30T22:18:27Z", "author": {"login": "annym"}, "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationSiteConfigIT.java", "diffHunk": "@@ -342,11 +343,11 @@ public void runSiteSwitch() throws Exception {\n             sleep(sleepInterval);\n \n             siteManager.prepareSiteRoleChange();\n-            while (replicationStatus != CorfuReplicationManager.PERCENTAGE_BASE) {\n-                replicationStatus = siteManager.queryReplicationStatus();\n-                System.out.print(\"\\nreplication percentage done \" + replicationStatus);\n-                sleep(sleepInterval);\n-            }\n+//            while (replicationStatus != CorfuReplicationManager.PERCENTAGE_BASE) {\n+//                replicationStatus = siteManager.queryReplicationStatus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMTUyNw==", "bodyText": "Let's group these three into, updateTopology()", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448011527", "createdAt": "2020-06-30T22:20:08Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -391,32 +390,50 @@ public void processLockRelease() {\n \n         interClusterReplicationService.getLogReplicationServer().setLeadership(false);\n \n-        if (localNodeDescriptor.isLeader()) {\n+        if (isLeader) {\n             stopLogReplication();\n-            localNodeDescriptor.setLeader(false);\n+            isLeader = false;\n         }\n     }\n \n     public void processSiteFlip(TopologyDescriptor newConfig) {\n-        // TODO(Nan): Check standby to active and active to standby...\n+        // stop ongoing replication, stopLogReplication() checks leadership and active\n         stopLogReplication();\n+\n         //TODO pankti: read the configuration again and refresh the LogReplicationConfig object\n-        replicationManager.setTopologyDescriptor(newConfig);\n-        boolean activeCluster = localNodeDescriptor.getRoleType() == ClusterRole.ACTIVE;\n-        updateTopologyConfigId(activeCluster);\n+\n+        // update local topology descriptor\n+        topologyDescriptor = newConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjAyMA==", "bodyText": "Let's rename -> prepareClusterRoleChange", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448012020", "createdAt": "2020-06-30T22:21:36Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -497,7 +514,12 @@ public void updateSiteConfig(LogReplicationClusterInfo.TopologyConfigurationMsg\n      */\n     @Override\n     public void prepareSiteRoleChange() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjM0OA==", "bodyText": "same here... in ReplicationManager let's rename for consistency to prepareClusterRoleChange", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448012348", "createdAt": "2020-06-30T22:22:27Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -497,7 +514,12 @@ public void updateSiteConfig(LogReplicationClusterInfo.TopologyConfigurationMsg\n      */\n     @Override\n     public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareSiteRoleChange();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDAyMg==", "bodyText": "Does this calculate how much is pending or how much is done? Can we fix the method description and rename accordingly.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448014022", "createdAt": "2020-06-30T22:27:03Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -506,7 +528,17 @@ public void prepareSiteRoleChange() {\n      */\n     @Override\n     public int queryReplicationStatus() {\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDI5NA==", "bodyText": "can we add some logging warning, before this return 0. Cause then we don't know if it means that 0 is pending as it all was transferred or the replication never started so 0 is pending.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448014294", "createdAt": "2020-06-30T22:27:49Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -506,7 +528,17 @@ public void prepareSiteRoleChange() {\n      */\n     @Override\n     public int queryReplicationStatus() {\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {\n+            // If not leader, replication manager might be null\n+            if (replicationManager != null) {\n+                return replicationManager.queryReplicationStatus();\n+            }\n+            return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDYxMg==", "bodyText": "Can we make -1 a final static variable INVALID_REPLICATION_STATUS.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448014612", "createdAt": "2020-06-30T22:28:36Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -506,7 +528,17 @@ public void prepareSiteRoleChange() {\n      */\n     @Override\n     public int queryReplicationStatus() {\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {\n+            // If not leader, replication manager might be null\n+            if (replicationManager != null) {\n+                return replicationManager.queryReplicationStatus();\n+            }\n+            return 0;\n+        } else {\n+            log.warn(\"Illegal queryReplicationStatus when cluster{} with role {}\",\n+                    localClusterDescriptor.getClusterId(), localClusterDescriptor.getRole());\n+            return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDc4MA==", "bodyText": "Can we rename PRIMARY_SITE_NAME -> ACTIVE_CLUSTER_NAME", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448014780", "createdAt": "2020-06-30T22:29:05Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/plugins/DefaultClusterManager.java", "diffHunk": "@@ -134,7 +134,7 @@ public static TopologyDescriptor readConfig() throws IOException {\n         for (int i = 0; i < primaryNodeNames.size(); i++) {\n             log.info(\"Primary Site Name {}, IpAddress {}\", primaryNodeNames.get(i), primaryIpAddresses.get(i));\n             NodeDescriptor nodeInfo = new NodeDescriptor(primaryIpAddresses.get(i),\n-                    activeLogReplicationPort, ClusterRole.ACTIVE, PRIMARY_SITE_NAME, UUID.fromString(primaryNodeIds.get(i)));\n+                    activeLogReplicationPort, PRIMARY_SITE_NAME, UUID.fromString(primaryNodeIds.get(i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDg0NA==", "bodyText": "site -> cluster", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448014844", "createdAt": "2020-06-30T22:29:16Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/plugins/DefaultClusterManager.java", "diffHunk": "@@ -145,7 +145,7 @@ public static TopologyDescriptor readConfig() throws IOException {\n         for (int i = 0; i < standbyNodeNames.size(); i++) {\n             log.info(\"Standby Site Name {}, IpAddress {}\", standbyNodeNames.get(i), standbyIpAddresses.get(i));\n             NodeDescriptor nodeInfo = new NodeDescriptor(standbyIpAddresses.get(i),\n-                    standbyLogReplicationPort, ClusterRole.STANDBY, STANDBY_SITE_NAME, UUID.fromString(standbyNodeIds.get(i)));\n+                    standbyLogReplicationPort, STANDBY_SITE_NAME, UUID.fromString(standbyNodeIds.get(i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNTA2Mw==", "bodyText": "siteConfigID -> topologyConfigId (in the argument)", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448015063", "createdAt": "2020-06-30T22:29:51Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -363,10 +365,9 @@ private boolean receivedValidMessage(LogReplicationEntry message) {\n      * 1. update the metadata store with the most recent topologyConfigId\n      * 2. reset snapshotWriter and logEntryWriter state\n      * 3. reset buffer logEntryBuffer state.\n-     * @param active\n      * @param siteConfigID\n      */\n-    public void updateTopologyConfigId(boolean active, long siteConfigID) {\n+    public void updateTopologyConfigId(long siteConfigID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748", "committedDate": "2020-06-30T20:51:19Z", "message": "Address comment"}, "afterCommit": {"oid": "58465e8965ba084ef7056a94d1aebbb2e068f70e", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/58465e8965ba084ef7056a94d1aebbb2e068f70e", "committedDate": "2020-06-30T23:24:27Z", "message": "Address comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58465e8965ba084ef7056a94d1aebbb2e068f70e", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/58465e8965ba084ef7056a94d1aebbb2e068f70e", "committedDate": "2020-06-30T23:24:27Z", "message": "Address comment"}, "afterCommit": {"oid": "fd313da4ce1065e4e85472cbfedd8ed3865da907", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/fd313da4ce1065e4e85472cbfedd8ed3865da907", "committedDate": "2020-07-01T18:34:14Z", "message": "Fix site change\n\nAddress comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d22aecb8c791ebb9adafe10e354857e1a601e53a", "committedDate": "2020-07-01T18:37:55Z", "message": "Fix site change\n\nAddress comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd313da4ce1065e4e85472cbfedd8ed3865da907", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/fd313da4ce1065e4e85472cbfedd8ed3865da907", "committedDate": "2020-07-01T18:34:14Z", "message": "Fix site change\n\nAddress comment"}, "afterCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d22aecb8c791ebb9adafe10e354857e1a601e53a", "committedDate": "2020-07-01T18:37:55Z", "message": "Fix site change\n\nAddress comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTExMDg3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-441111087", "createdAt": "2020-07-01T18:39:36Z", "commit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTEzNzg1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-441113785", "createdAt": "2020-07-01T18:43:54Z", "commit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo0Mzo1NFrOGrxYnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo0Mzo1NFrOGrxYnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTA2OQ==", "bodyText": "I see the point that only the leader should do replication related jobs.\nBut discovery service does not only have topologyConfig, it also has cluster, node... etc.\nSo we need to make sure all fields get updated, and once any node gets a lock, it has updated configs...", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448551069", "createdAt": "2020-07-01T18:43:54Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,40 +445,51 @@ public void processClusterRoleChange(TopologyDescriptor newTopology) {\n      *\n      * @param event discovery event\n      */\n-    private void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n+    public void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n         // Stale notification, skip\n-        if (event.getTopologyConfig().getTopologyConfigID() < getReplicationManager().getTopology().getTopologyConfigId()) {\n-            log.debug(\"Stale Topology Change Notification, current={}, received={}\", topologyDescriptor.getTopologyConfigId(),\n-                    event.getTopologyConfig());\n+        if (event.getTopologyConfig().getTopologyConfigID() < topologyDescriptor.getTopologyConfigId()) {\n+            log.debug(\"Stale Topology Change Notification, current={}, received={}\",\n+                    topologyDescriptor.getTopologyConfigId(), event.getTopologyConfig());\n             return;\n         }\n \n         TopologyDescriptor newConfig = new TopologyDescriptor(event.getTopologyConfig());\n-        topologyDescriptor = newConfig;\n \n-        //On topology change notification, store latest topology and only process if current node is the leader\n-        if (isLeader) {\n-            if (newConfig.getTopologyConfigId() == getReplicationManager().getTopology().getTopologyConfigId()) {\n-                if (localNodeDescriptor.getRoleType() == ClusterRole.STANDBY) {\n-                    return;\n-                }\n+        // Note: should not update topology here. Otherwise, below check is always true.\n+        if (newConfig.getTopologyConfigId() == topologyDescriptor.getTopologyConfigId()) {\n+            if (localClusterDescriptor.getRole() == ClusterRole.STANDBY) {\n+                return;\n+            }\n \n-                // If the current node is active, compare with the current topologyConfig, see if there are additional or\n-                // removed standbys\n-                getReplicationManager().processStandbyChange(newConfig);\n-            } else {\n-                // TODO: Are we sure that when there is a topologyConfigId change it implies a role change\n-                //  and not a new standby added??\n-                processClusterRoleChange(newConfig);\n+            // If the current node is active, compare with the current topologyConfig, see if there are additional or\n+            // removed standbys\n+            if (replicationManager != null && isLeader) {\n+                replicationManager.processStandbyChange(newConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTI2Mjcx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-441126271", "createdAt": "2020-07-01T19:03:54Z", "commit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOTowMzo1NFrOGrx9_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOTo1MzoyMlrOGrzW2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2MDYzNw==", "bodyText": "I think updateTopologyConfigId is not the correct naming in the SinkManager, right? Cause that method has added functionality and is really doing much more than that... maybe processClusterRoleChange or resetOnClusterRoleChange?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448560637", "createdAt": "2020-07-01T19:03:54Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -419,11 +418,21 @@ public void processLockRelease() {\n      * @param newTopology new discovered topology\n      */\n     public void processClusterRoleChange(TopologyDescriptor newTopology) {\n+        // stop ongoing replication, stopLogReplication() checks leadership and active\n         stopLogReplication();\n+\n         //TODO pankti: read the configuration again and refresh the LogReplicationConfig object\n-        replicationManager.setTopology(newTopology);\n-        boolean activeCluster = localNodeDescriptor.getRoleType() == ClusterRole.ACTIVE;\n-        updateTopologyConfigId(activeCluster);\n+\n+        // update topology, cluster, and node configs\n+        updateLocalTopology(newTopology);\n+\n+        // update config id in metadata manager\n+        interClusterReplicationService.getLogReplicationServer().getSinkManager()\n+                .updateTopologyConfigId(topologyDescriptor.getTopologyConfigId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2MTg5Ng==", "bodyText": "Also, similar to stop log replication isn't this dependent of the fact that you are currently a standby?... In such case, it might be a good idea to put this statement in the stopLogReplication method in the case STANDBY, right?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448561896", "createdAt": "2020-07-01T19:06:42Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -419,11 +418,21 @@ public void processLockRelease() {\n      * @param newTopology new discovered topology\n      */\n     public void processClusterRoleChange(TopologyDescriptor newTopology) {\n+        // stop ongoing replication, stopLogReplication() checks leadership and active\n         stopLogReplication();\n+\n         //TODO pankti: read the configuration again and refresh the LogReplicationConfig object\n-        replicationManager.setTopology(newTopology);\n-        boolean activeCluster = localNodeDescriptor.getRoleType() == ClusterRole.ACTIVE;\n-        updateTopologyConfigId(activeCluster);\n+\n+        // update topology, cluster, and node configs\n+        updateLocalTopology(newTopology);\n+\n+        // update config id in metadata manager\n+        interClusterReplicationService.getLogReplicationServer().getSinkManager()\n+                .updateTopologyConfigId(topologyDescriptor.getTopologyConfigId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2MDYzNw=="}, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NTk5NA==", "bodyText": "Correct, so one question. When a DISCOVERED_TOPOLOGY comes in (change in the topology) we come in this method processTopologyChangeNotification, only if it is stale we can ignore that incoming topology, otherwise, shouldn't the first thing we do is call your updateLocalTopology() to update all local objects? and maybe you can store the old topology in a temp for the further comparisons.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448565994", "createdAt": "2020-07-01T19:15:14Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,40 +445,51 @@ public void processClusterRoleChange(TopologyDescriptor newTopology) {\n      *\n      * @param event discovery event\n      */\n-    private void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n+    public void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n         // Stale notification, skip\n-        if (event.getTopologyConfig().getTopologyConfigID() < getReplicationManager().getTopology().getTopologyConfigId()) {\n-            log.debug(\"Stale Topology Change Notification, current={}, received={}\", topologyDescriptor.getTopologyConfigId(),\n-                    event.getTopologyConfig());\n+        if (event.getTopologyConfig().getTopologyConfigID() < topologyDescriptor.getTopologyConfigId()) {\n+            log.debug(\"Stale Topology Change Notification, current={}, received={}\",\n+                    topologyDescriptor.getTopologyConfigId(), event.getTopologyConfig());\n             return;\n         }\n \n         TopologyDescriptor newConfig = new TopologyDescriptor(event.getTopologyConfig());\n-        topologyDescriptor = newConfig;\n \n-        //On topology change notification, store latest topology and only process if current node is the leader\n-        if (isLeader) {\n-            if (newConfig.getTopologyConfigId() == getReplicationManager().getTopology().getTopologyConfigId()) {\n-                if (localNodeDescriptor.getRoleType() == ClusterRole.STANDBY) {\n-                    return;\n-                }\n+        // Note: should not update topology here. Otherwise, below check is always true.\n+        if (newConfig.getTopologyConfigId() == topologyDescriptor.getTopologyConfigId()) {\n+            if (localClusterDescriptor.getRole() == ClusterRole.STANDBY) {\n+                return;\n+            }\n \n-                // If the current node is active, compare with the current topologyConfig, see if there are additional or\n-                // removed standbys\n-                getReplicationManager().processStandbyChange(newConfig);\n-            } else {\n-                // TODO: Are we sure that when there is a topologyConfigId change it implies a role change\n-                //  and not a new standby added??\n-                processClusterRoleChange(newConfig);\n+            // If the current node is active, compare with the current topologyConfig, see if there are additional or\n+            // removed standbys\n+            if (replicationManager != null && isLeader) {\n+                replicationManager.processStandbyChange(newConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTA2OQ=="}, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MTUzMQ==", "bodyText": "I see we have a processClusterRoleChange which comes as part of a DISCOVERED_TOPOLOGY event, but who can directly act upon the discovery service to forcefully prepare for Cluster Role Change? Is this some testing API? we should mark it as such and document it if it's the case.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448571531", "createdAt": "2020-07-01T19:27:17Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MTgxMw==", "bodyText": "prepareSiteRoleChange -> prepareClusterRoleChange in the log comment.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448571813", "createdAt": "2020-07-01T19:27:56Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareSiteRoleChange when cluster{} with role {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MjA2Nw==", "bodyText": "Can't there be a role change from standby to active?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448572067", "createdAt": "2020-07-01T19:28:34Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareSiteRoleChange when cluster{} with role {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MTgxMw=="}, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3Njg0Ng==", "bodyText": "You can remove the first TODO in this method as that you addressed.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448576846", "createdAt": "2020-07-01T19:39:00Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareSiteRoleChange when cluster{} with role {}\",\n+                    localClusterDescriptor.getClusterId(), localClusterDescriptor.getRole());\n+        }\n     }\n \n     /**\n-     * Query all replicated stream log tails and calculate the number of messages to be sent.\n-     * If the max tail has changed, return 0%.\n+     * Query the current all replication stream log tail and calculate the number of messages to be sent.\n+     * If the max tail has changed, give 0%.\n      */\n     @Override\n     public int queryReplicationStatus() {\n         // TODO (maxi): address Nan's comments\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3Nzk4NQ==", "bodyText": "I think we should only reply if we are the leader. Cause from their point of view most likely we'll tell them to query all nodes in the cluster and they'll pick the max of these 3 values, otherwise, they won't know who is the leader right now as the lock is something internal.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448577985", "createdAt": "2020-07-01T19:41:25Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareSiteRoleChange when cluster{} with role {}\",\n+                    localClusterDescriptor.getClusterId(), localClusterDescriptor.getRole());\n+        }\n     }\n \n     /**\n-     * Query all replicated stream log tails and calculate the number of messages to be sent.\n-     * If the max tail has changed, return 0%.\n+     * Query the current all replication stream log tail and calculate the number of messages to be sent.\n+     * If the max tail has changed, give 0%.\n      */\n     @Override\n     public int queryReplicationStatus() {\n         // TODO (maxi): address Nan's comments\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {\n+            // If not leader, replication manager might be null\n+            if (replicationManager != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3OTk3OA==", "bodyText": "I think we have something loose in this API. It does not restrict ClusterRole change from standby -> active or active->standby however, our underlying only process one type. Maybe it's the naming? or revising the actual functionality?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448579978", "createdAt": "2020-07-01T19:45:57Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/plugins/CorfuReplicationClusterManagerAdapter.java", "diffHunk": "@@ -35,7 +35,7 @@ public synchronized void updateTopologyConfig(TopologyConfigurationMsg newTopolo\n     }\n \n     public void prepareSiteRoleChange() {\n-        corfuReplicationDiscoveryService.prepareSiteRoleChange();\n+        corfuReplicationDiscoveryService.prepareClusterRoleChange();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MDg1NQ==", "bodyText": "now that you are unifying the topologyConfigId, please change it also on. the snapshot and logEntry reader to setTopologyConfigId.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448580855", "createdAt": "2020-07-01T19:47:49Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/fsm/LogReplicationFSM.java", "diffHunk": "@@ -349,7 +349,7 @@ void transition(LogReplicationState from, LogReplicationState to) {\n         to.onEntry(from);\n     }\n \n-    public void setSiteConfigID(long siteConfigID) {\n+    public void setTopologyConfigId(long siteConfigID) {\n         this.siteConfigID = siteConfigID;\n         snapshotReader.setSiteEpoch(siteConfigID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MTc3MA==", "bodyText": "this is the method I mentioned up in another comment that we might change the name as it is overloaded with other functionalities.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448581770", "createdAt": "2020-07-01T19:49:53Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -363,14 +365,13 @@ private boolean receivedValidMessage(LogReplicationEntry message) {\n      * 1. update the metadata store with the most recent topologyConfigId\n      * 2. reset snapshotWriter and logEntryWriter state\n      * 3. reset buffer logEntryBuffer state.\n-     * @param active\n-     * @param siteConfigID\n+     * @param topologyConfigId\n      */\n-    public void updateTopologyConfigId(boolean active, long siteConfigID) {\n-        this.siteConfigID = siteConfigID;\n+    public void updateTopologyConfigId(long topologyConfigId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU4MzM4Ng==", "bodyText": "Nan would you mind adding a brief description on what this test does. So when someone wants to look at it they know in plain English what it is doing. Maybe something in the line: Bring up an active and standby Log Replication Server, start replication. Initiate a cluster role switch in the middle of (snapshot/log entry) sync, while data is still being persisted into the active datastore (or do you stop the writing before the switch).. is the replication still going on when asked to switch or did it finish already? something in that line so we can easily detect which tests we need to add.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448583386", "createdAt": "2020-07-01T19:53:22Z", "author": {"login": "annym"}, "path": "test/src/test/java/org/corfudb/integration/CorfuReplicationSiteConfigIT.java", "diffHunk": "@@ -18,6 +18,7 @@\n public class CorfuReplicationSiteConfigIT extends AbstractIT {\n     final static int MAX_RETRY = 10;\n     final static long sleepInterval = 10000;\n+    private final String pluginConfigFilePath = \"src/test/resources/transport/nettyConfig.properties\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1", "committedDate": "2020-07-01T22:05:44Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjU5MDgx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-441259081", "createdAt": "2020-07-01T23:35:50Z", "commit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMzozNTo1MFrOGr4l8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDowNjoxMFrOGr5GnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2OTE3MA==", "bodyText": "typo -> lof -> log", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448669170", "createdAt": "2020-07-01T23:35:50Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -358,35 +365,27 @@ private void onLeadershipAcquire() {\n                 break;\n             default:\n                 log.error(\"Log Replication not started on this cluster. Leader node {} belongs to cluster with {} role.\",\n-                            localEndpoint, localNodeDescriptor.getRoleType());\n+                            localEndpoint, localClusterDescriptor.getRole());\n                 break;\n         }\n     }\n \n-    private void updateTopologyConfigId(boolean active) {\n-        // Required only on topology changes\n-        interClusterReplicationService.getLogReplicationServer().getSinkManager().updateTopologyConfigId(active, topologyDescriptor.getTopologyConfigId());\n-\n-        log.debug(\"Persist new topologyConfigId {}, status={}\", topologyDescriptor.getTopologyConfigId(),\n-                localNodeDescriptor.getRoleType());\n-    }\n-\n     /**\n      * Stop Log Replication\n      */\n     private void stopLogReplication() {\n-        switch(localNodeDescriptor.getRoleType()) {\n+        switch(localClusterDescriptor.getRole()) {\n             case ACTIVE:\n-                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localNodeDescriptor.getRoleType());\n+                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localClusterDescriptor.getRole());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2OTk1NA==", "bodyText": "typo -> lof -> log", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448669954", "createdAt": "2020-07-01T23:38:31Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -358,35 +365,27 @@ private void onLeadershipAcquire() {\n                 break;\n             default:\n                 log.error(\"Log Replication not started on this cluster. Leader node {} belongs to cluster with {} role.\",\n-                            localEndpoint, localNodeDescriptor.getRoleType());\n+                            localEndpoint, localClusterDescriptor.getRole());\n                 break;\n         }\n     }\n \n-    private void updateTopologyConfigId(boolean active) {\n-        // Required only on topology changes\n-        interClusterReplicationService.getLogReplicationServer().getSinkManager().updateTopologyConfigId(active, topologyDescriptor.getTopologyConfigId());\n-\n-        log.debug(\"Persist new topologyConfigId {}, status={}\", topologyDescriptor.getTopologyConfigId(),\n-                localNodeDescriptor.getRoleType());\n-    }\n-\n     /**\n      * Stop Log Replication\n      */\n     private void stopLogReplication() {\n-        switch(localNodeDescriptor.getRoleType()) {\n+        switch(localClusterDescriptor.getRole()) {\n             case ACTIVE:\n-                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localNodeDescriptor.getRoleType());\n+                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localClusterDescriptor.getRole());\n                 replicationManager.stop();\n                 break;\n             case STANDBY:\n-                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localNodeDescriptor.getRoleType());\n+                log.info(\"This cluster has lost leadership. Stopping lof replication, according to role {}\", localClusterDescriptor.getRole());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3MzkxOQ==", "bodyText": "Questions:\n\nBut aren't they all writing to the same CorfuStore? the metadata is shared through the datastore.\nI do agree its needed for the node that is currently receiving data. But, those that are not should access it in a shared store as they are not really having activity. If you are pushing it as part of another PR that would address this.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448673919", "createdAt": "2020-07-01T23:52:22Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -419,11 +418,21 @@ public void processLockRelease() {\n      * @param newTopology new discovered topology\n      */\n     public void processClusterRoleChange(TopologyDescriptor newTopology) {\n+        // stop ongoing replication, stopLogReplication() checks leadership and active\n         stopLogReplication();\n+\n         //TODO pankti: read the configuration again and refresh the LogReplicationConfig object\n-        replicationManager.setTopology(newTopology);\n-        boolean activeCluster = localNodeDescriptor.getRoleType() == ClusterRole.ACTIVE;\n-        updateTopologyConfigId(activeCluster);\n+\n+        // update topology, cluster, and node configs\n+        updateLocalTopology(newTopology);\n+\n+        // update config id in metadata manager\n+        interClusterReplicationService.getLogReplicationServer().getSinkManager()\n+                .updateTopologyConfigId(topologyDescriptor.getTopologyConfigId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2MDYzNw=="}, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3NTMwMw==", "bodyText": "Let's remove this TODO and please add a note that this is under the assumption that changes in the topology config Id imply a change of cluster role.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448675303", "createdAt": "2020-07-01T23:57:38Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,40 +450,58 @@ public void processClusterRoleChange(TopologyDescriptor newTopology) {\n      *\n      * @param event discovery event\n      */\n-    private void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n-        // Stale notification, skip\n-        if (event.getTopologyConfig().getTopologyConfigID() < getReplicationManager().getTopology().getTopologyConfigId()) {\n-            log.debug(\"Stale Topology Change Notification, current={}, received={}\", topologyDescriptor.getTopologyConfigId(),\n-                    event.getTopologyConfig());\n+    public void processTopologyChangeNotification(DiscoveryServiceEvent event) {\n+        // Skip stale notification\n+        if (event.getTopologyConfig().getTopologyConfigID() < topologyDescriptor.getTopologyConfigId()) {\n+            log.debug(\"Stale Topology Change Notification, current={}, received={}\",\n+                    topologyDescriptor.getTopologyConfigId(), event.getTopologyConfig());\n             return;\n         }\n \n-        TopologyDescriptor newConfig = new TopologyDescriptor(event.getTopologyConfig());\n-        topologyDescriptor = newConfig;\n-\n-        //On topology change notification, store latest topology and only process if current node is the leader\n-        if (isLeader) {\n-            if (newConfig.getTopologyConfigId() == getReplicationManager().getTopology().getTopologyConfigId()) {\n-                if (localNodeDescriptor.getRoleType() == ClusterRole.STANDBY) {\n-                    return;\n-                }\n+        TopologyDescriptor newTopology = new TopologyDescriptor(event.getTopologyConfig());\n+        // Process standby add/remove, which will not increment config id\n+        // We won't stop ongoing replications in this case\n+        if (newTopology.getTopologyConfigId() == topologyDescriptor.getTopologyConfigId()) {\n+            log.debug(\"Processing a new topology with the same config id, previous topology\" +\n+                    \" is {}, and new topology is {}\", topologyDescriptor, newTopology);\n+            if (localClusterDescriptor.getRole() == ClusterRole.STANDBY) {\n+                return;\n+            }\n \n-                // If the current node is active, compare with the current topologyConfig, see if there are additional or\n-                // removed standbys\n-                getReplicationManager().processStandbyChange(newConfig);\n-            } else {\n-                // TODO: Are we sure that when there is a topologyConfigId change it implies a role change\n-                //  and not a new standby added??\n-                processClusterRoleChange(newConfig);\n+            // If the current node is active, compare with the current topologyConfig, see if there\n+            // are additional or removed standbys\n+            if (replicationManager != null && isLeader) {\n+                replicationManager.processStandbyChange(newTopology);\n             }\n+\n+            // After processing standby change, update local topology\n+            updateLocalTopology(newTopology);\n+            return;\n         }\n+\n+        // TODO: Are we sure that when there is a topologyConfigId change it implies a role change", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3NTk1NA==", "bodyText": "typo -> Query all current replication streams log tails ...", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448675954", "createdAt": "2020-07-02T00:00:07Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +549,40 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareClusterRoleChange when cluster{} with role {}\",\n+                    localClusterDescriptor.getClusterId(), localClusterDescriptor.getRole());\n+        }\n     }\n \n     /**\n-     * Query all replicated stream log tails and calculate the number of messages to be sent.\n-     * If the max tail has changed, return 0%.\n+     * Query the current all replication stream log tail and calculate the number of messages to be sent.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e9d7d1f1d3419fbc200f50563b8e994d9aeb9e1"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3NjI3Mg==", "bodyText": "Can you add a TODO in the code please so we don't miss this whenever we decide to merge into master.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448676272", "createdAt": "2020-07-02T00:01:16Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -506,7 +528,17 @@ public void prepareSiteRoleChange() {\n      */\n     @Override\n     public int queryReplicationStatus() {\n-        return replicationManager.queryReplicationStatus();\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNDAyMg=="}, "originalCommit": {"oid": "d050e6debd7f26b0a5cfd9b7c7b3d7f9b1fe8748"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3NzUzMg==", "bodyText": "ok, let's leave it for another PR, but we should revisit this.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#discussion_r448677532", "createdAt": "2020-07-02T00:06:10Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -517,18 +537,35 @@ public void updateTopology(LogReplicationClusterInfo.TopologyConfigurationMsg to\n      * msg needs to send out.\n      */\n     @Override\n-    public void prepareSiteRoleChange() {\n-        replicationManager.prepareSiteRoleChange();\n+    public void prepareClusterRoleChange() {\n+        if (localClusterDescriptor.getRole() == ClusterRole.ACTIVE && replicationManager != null) {\n+            replicationManager.prepareClusterRoleChange();\n+        } else {\n+            log.warn(\"Illegal prepareSiteRoleChange when cluster{} with role {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU3MTgxMw=="}, "originalCommit": {"oid": "d22aecb8c791ebb9adafe10e354857e1a601e53a"}, "originalPosition": 186}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b48d91a680de6798710ffd753f2098f976e4dd3", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/1b48d91a680de6798710ffd753f2098f976e4dd3", "committedDate": "2020-07-02T01:12:16Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjkzODY5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2591#pullrequestreview-441293869", "createdAt": "2020-07-02T01:35:37Z", "commit": {"oid": "1b48d91a680de6798710ffd753f2098f976e4dd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3316, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}