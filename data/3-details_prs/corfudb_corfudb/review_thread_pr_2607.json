{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTE1NzMw", "number": 2607, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoyNDo0OFrOEMrMGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NjowN1rOEM_4kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzI1OTc2OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoyNDo0OFrOGu7QbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0NDo0NlrOGu92zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA==", "bodyText": "@xiaoqin2012 can you please confirm this TODO note? To be sure keeping it around for future work.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451858540", "createdAt": "2020-07-08T22:24:48Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg2ODE4NA==", "bodyText": "This is not written by me. Also the statement doesn't sound correct. If there are logs trimmed, we don't know if there are entries belong to the replicated tables or not. To be correct and safe, a full snapshot sync should be requested.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451868184", "createdAt": "2020-07-08T22:52:30Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MzEzOQ==", "bodyText": "It was written by me, as I was adding the logging and had never reviewed this code. I just wanted to have your input on this specific point.\nMy point here is that getLastLogProcessed + 1 is not necessarily the next entry, right? so though getLastLogProcessed+1 falls in the trimmed space, maybe the next entry is getLastLogProcessed+2000 ( as this is a global address, which does not fall in the trimmed space). So, for better accuracy in the future (not now) we can leave this note around so we check the real next entry (from all the streams to replicate) and avoid doing a full snapshot sync when not really required.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451873139", "createdAt": "2020-07-08T23:07:37Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3NDA5MQ==", "bodyText": "Last processed is 10, now the log has been trimmed and the log head is 20. How do you know the entries between 11 and 19 contains the data to be replicated or not?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451874091", "createdAt": "2020-07-08T23:10:37Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3NTAyOQ==", "bodyText": "We inspect txStream.next()and see the global address of the one coming next... and if it is 16, OK let's do snapshot sync. But if the next is 56, no need to.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451875029", "createdAt": "2020-07-08T23:13:43Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3ODA3OQ==", "bodyText": "After trim, the log head is 20, the txStream's head at least will be 20 or bigger, right?\nassume txStream has entries at 16, 18, 22. After trim, txStream's head will be 22, the next() call will give 22, right?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451878079", "createdAt": "2020-07-08T23:23:02Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMTEzNA==", "bodyText": "mm, I see your point. But now I have a follow up question, the bitmaps keep track of the last trimmed address, so despite this scenario we could know that head is 22 and last trimmed address is 18. Again, we don't need this now, but I'm seeing if its an option.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r451901134", "createdAt": "2020-07-09T00:44:46Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -256,11 +264,20 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n              * otherwise, start snapshot full sync.\n              */\n             if (logHead <= negotiationResponse.getLastLogProcessed() + 1) {\n+                log.info(\"Resume LOG ENTRY sync. Address space has not been trimmed, deltas are guaranteed to be available. \" +\n+                        \"logHead={}, lastLogProcessed={}\", logHead, negotiationResponse.getLastLogProcessed());\n                 fsm.input(new LogReplicationRuntimeEvent(LogReplicationRuntimeEvent.LogReplicationRuntimeEventType.NEGOTIATION_COMPLETE,\n                         new LogReplicationEvent(LogReplicationEvent.LogReplicationEventType.REPLICATION_START,\n                                 new LogReplicationEventMetadata(LogReplicationEventMetadata.getNIL_UUID(), negotiationResponse.getLastLogProcessed())\n                         )));\n             } else {\n+                // TODO: it is OK for a first phase, but this might not be efficient/accurate, as the next (+1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1ODU0MA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDY0MDQ3OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1Mjo0NFrOGvbv0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxMToxNlrOGveTrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MDg2NA==", "bodyText": "Debug logs also get printed in the logs.  Do we want to see the response from each node?  If not can we make it trace instead?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r452390864", "createdAt": "2020-07-09T17:52:44Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -142,6 +143,9 @@ public void setLeaderEndpoint(String endpoint) {\n      */\n     private void processNegotiationResponse(LogReplicationNegotiationResponse negotiationResponse)\n             throws LogReplicationNegotiationException {\n+\n+        log.debug(\"Process negotiation response {} from {}\", negotiationResponse, fsm.getRemoteClusterId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMjgxMg==", "bodyText": "I also thought of this, but negotiation doesn't happen that frequent so I thought it would be useful to actually have it.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r452432812", "createdAt": "2020-07-09T19:11:16Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -142,6 +143,9 @@ public void setLeaderEndpoint(String endpoint) {\n      */\n     private void processNegotiationResponse(LogReplicationNegotiationResponse negotiationResponse)\n             throws LogReplicationNegotiationException {\n+\n+        log.debug(\"Process negotiation response {} from {}\", negotiationResponse, fsm.getRemoteClusterId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MDg2NA=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDY1MDQwOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1NjowN1rOGvb2lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxMjo0OFrOGveW4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MjU5OQ==", "bodyText": "how can snapshotStart > snapshotTransferred?  Should the comment be updated to make it clearer?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r452392599", "createdAt": "2020-07-09T17:56:07Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -200,14 +205,14 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n          * \"topologyConfigId\": \"10\"\n          * \"version\": \"release-1.0\"\n          * \"snapshotStart\": \"100\"\n-         * \"snapshotSeqNum\": \" 88\"\n+         * \"snapshotSeqNum\": \"88\"\n          * \"snapshotTransferred\": \"-1\"\n          * \"snapshotApplied\": \"-1\"\n          * \"lastLogEntryProcessed\": \"-1\"\n          */\n         if (negotiationResponse.getSnapshotStart() > negotiationResponse.getSnapshotTransferred()) {\n-            log.info(\"Get the negotiation response {} and will start replication.\",\n-                    negotiationResponse);\n+            log.info(\"Previous Snapshot Sync transfer did not complete. Restart SNAPSHOT sync, snapshotStart={}, snapshotTransferred={}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMzYzNQ==", "bodyText": "It can be greater because the transfer did not complete. It started (was set at that moment) but did not complete (so the transferred remains -1).", "url": "https://github.com/CorfuDB/CorfuDB/pull/2607#discussion_r452433635", "createdAt": "2020-07-09T19:12:48Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/runtime/fsm/NegotiatingState.java", "diffHunk": "@@ -200,14 +205,14 @@ private void processNegotiationResponse(LogReplicationNegotiationResponse negoti\n          * \"topologyConfigId\": \"10\"\n          * \"version\": \"release-1.0\"\n          * \"snapshotStart\": \"100\"\n-         * \"snapshotSeqNum\": \" 88\"\n+         * \"snapshotSeqNum\": \"88\"\n          * \"snapshotTransferred\": \"-1\"\n          * \"snapshotApplied\": \"-1\"\n          * \"lastLogEntryProcessed\": \"-1\"\n          */\n         if (negotiationResponse.getSnapshotStart() > negotiationResponse.getSnapshotTransferred()) {\n-            log.info(\"Get the negotiation response {} and will start replication.\",\n-                    negotiationResponse);\n+            log.info(\"Previous Snapshot Sync transfer did not complete. Restart SNAPSHOT sync, snapshotStart={}, snapshotTransferred={}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MjU5OQ=="}, "originalCommit": {"oid": "d84245554f38306714350a5eb619221176801956"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1835, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}