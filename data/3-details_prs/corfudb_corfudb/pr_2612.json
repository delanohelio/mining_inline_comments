{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mjg2MjE4", "number": 2612, "title": "Unify Read APIs", "bodyText": "Overview\nMerged the multi-address read with the single read API.\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-07-10T07:53:07Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612", "merged": true, "mergeCommit": {"oid": "e645e1fd2bef4e0651defda977b5e5a28276ee99"}, "closed": true, "closedAt": "2020-07-27T21:29:47Z", "author": {"login": "Maithem"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0ohY6gBqjM1NDE0MTE4OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5HVZGAFqTQ1NjA4NzEwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e54a74e6ae17fb9808ef9619cdfe395599210762", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/e54a74e6ae17fb9808ef9619cdfe395599210762", "committedDate": "2020-07-10T07:51:26Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}, "afterCommit": {"oid": "465e0259fa53be7abb29177738059eccbbea5cad", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/465e0259fa53be7abb29177738059eccbbea5cad", "committedDate": "2020-07-13T21:42:09Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzA2Nzgz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-448306783", "createdAt": "2020-07-14T17:16:24Z", "commit": {"oid": "465e0259fa53be7abb29177738059eccbbea5cad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "465e0259fa53be7abb29177738059eccbbea5cad", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/465e0259fa53be7abb29177738059eccbbea5cad", "committedDate": "2020-07-13T21:42:09Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}, "afterCommit": {"oid": "b59eeb17c96bf5b9a98ec4cb076cea74533965f1", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b59eeb17c96bf5b9a98ec4cb076cea74533965f1", "committedDate": "2020-07-16T01:46:00Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTU2Nzcz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-449556773", "createdAt": "2020-07-16T07:00:47Z", "commit": {"oid": "17752408d4c35d689d7e152502be3ace50474299"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzowMDo0N1rOGycvDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzowMDo0N1rOGycvDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1Mjc4MA==", "bodyText": "This is actually a bug on master, if a multi read encounters a data corruption exception, it will keep timing out. This patches fixes this bug.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#discussion_r455552780", "createdAt": "2020-07-16T07:00:47Z", "author": {"login": "Maithem"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServer.java", "diffHunk": "@@ -326,7 +308,8 @@ public void multiRead(CorfuPayloadMsg<MultipleReadRequest> msg, ChannelHandlerCo\n             }\n             r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n         } catch (DataCorruptionException e) {\n-            r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.msg());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17752408d4c35d689d7e152502be3ace50474299"}, "originalPosition": 101}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17752408d4c35d689d7e152502be3ace50474299", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/17752408d4c35d689d7e152502be3ace50474299", "committedDate": "2020-07-16T06:50:09Z", "message": "Merge branch 'master' into unifyReadAPI"}, "afterCommit": {"oid": "c5d3adaaaf2fb5a4a7b9586191cfdd9688a29dba", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c5d3adaaaf2fb5a4a7b9586191cfdd9688a29dba", "committedDate": "2020-07-16T07:02:25Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d3adaaaf2fb5a4a7b9586191cfdd9688a29dba", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c5d3adaaaf2fb5a4a7b9586191cfdd9688a29dba", "committedDate": "2020-07-16T07:02:25Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}, "afterCommit": {"oid": "c99da581ad2e419fcd375b8c3112b61fc66220e8", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c99da581ad2e419fcd375b8c3112b61fc66220e8", "committedDate": "2020-07-16T07:05:01Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c99da581ad2e419fcd375b8c3112b61fc66220e8", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c99da581ad2e419fcd375b8c3112b61fc66220e8", "committedDate": "2020-07-16T07:05:01Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}, "afterCommit": {"oid": "3aa12186a287eb4034b89ae8a50c08ecb0ec122e", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3aa12186a287eb4034b89ae8a50c08ecb0ec122e", "committedDate": "2020-07-16T07:47:57Z", "message": "Unify Read APIs\n\nMerged the multi-address read with the single read API."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMjUwNDQy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-450250442", "createdAt": "2020-07-16T22:09:09Z", "commit": {"oid": "22a8af4da1f96e16134a14a1d4a2492277e5767e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22a8af4da1f96e16134a14a1d4a2492277e5767e", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/22a8af4da1f96e16134a14a1d4a2492277e5767e", "committedDate": "2020-07-16T20:52:50Z", "message": "Merge branch 'master' into unifyReadAPI"}, "afterCommit": {"oid": "058085211daba9f85b313f57808cd89012b328dd", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/058085211daba9f85b313f57808cd89012b328dd", "committedDate": "2020-07-16T23:01:37Z", "message": "Unify Read APIs + InspectAddresses Bug\n\n- Merged the multi-address read with the single read API.\n- Fix response type returned by inspectAddresses on data\n  corruption."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "058085211daba9f85b313f57808cd89012b328dd", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/058085211daba9f85b313f57808cd89012b328dd", "committedDate": "2020-07-16T23:01:37Z", "message": "Unify Read APIs + InspectAddresses Bug\n\n- Merged the multi-address read with the single read API.\n- Fix response type returned by inspectAddresses on data\n  corruption."}, "afterCommit": {"oid": "80eb8b91e2a26e624ccd7f919b9f13bec141600e", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/80eb8b91e2a26e624ccd7f919b9f13bec141600e", "committedDate": "2020-07-17T00:02:32Z", "message": "Unify Read APIs + InspectAddresses Bug\n\n- Merged the multi-address read with the single read API.\n- Fix response type returned by inspectAddresses on data\n  corruption."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTY5MDM5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-454569039", "createdAt": "2020-07-23T23:55:39Z", "commit": {"oid": "0d7ab293dec3ecc48854f4e56bee4c0753a9a859"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo1NTozOVrOG2fZIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMDowMTo1MFrOG2ff3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDYyNA==", "bodyText": "Can we use long instead of Long and get rid of the currentRead variable?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#discussion_r459790624", "createdAt": "2020-07-23T23:55:39Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServer.java", "diffHunk": "@@ -288,55 +288,46 @@ private void prefixTrim(CorfuPayloadMsg<TrimRequest> msg, ChannelHandlerContext\n                 });\n     }\n \n-    @ServerHandler(type = CorfuMsgType.READ_REQUEST)\n-    public void read(CorfuPayloadMsg<ReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n-        long address = msg.getPayload().getAddress();\n-        boolean cacheable = msg.getPayload().isCacheReadResult();\n-        log.trace(\"read: {}, cacheable: {}\", msg.getPayload().getAddress(), cacheable);\n-\n-        ReadResponse rr = new ReadResponse();\n-        try {\n-            ILogData logData = dataCache.get(address, cacheable);\n-            if (logData == null) {\n-                rr.put(address, LogData.getEmpty(address));\n-            } else {\n-                rr.put(address, (LogData) logData);\n-            }\n-            r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n-        } catch (DataCorruptionException e) {\n-            log.error(\"Data corruption exception while reading address {}\", address, e);\n-            r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.payloadMsg(address));\n-        }\n+  @ServerHandler(type = CorfuMsgType.READ_REQUEST)\n+  public void read(CorfuPayloadMsg<ReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n+    boolean cacheable = msg.getPayload().isCacheReadResult();\n+    if (log.isTraceEnabled()) {\n+      log.trace(\"read: {}, cacheable: {}\", msg.getPayload().getAddresses(), cacheable);\n     }\n \n-    @ServerHandler(type = CorfuMsgType.MULTIPLE_READ_REQUEST)\n-    public void multiRead(CorfuPayloadMsg<MultipleReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n-        boolean cacheable = msg.getPayload().isCacheReadResult();\n-        log.trace(\"multiRead: {}, cacheable: {}\", msg.getPayload().getAddresses(), cacheable);\n-\n-        ReadResponse rr = new ReadResponse();\n-        try {\n-            for (Long address : msg.getPayload().getAddresses()) {\n-                ILogData logData = dataCache.get(address, cacheable);\n-                if (logData == null) {\n-                    rr.put(address, LogData.getEmpty(address));\n-                } else {\n-                    rr.put(address, (LogData) logData);\n-                }\n-            }\n-            r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n-        } catch (DataCorruptionException e) {\n-            r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.msg());\n+    ReadResponse rr = new ReadResponse();\n+    long currentRead = Address.NON_ADDRESS;\n+    try {\n+      for (Long address : msg.getPayload().getAddresses()) {\n+        currentRead = address;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ab293dec3ecc48854f4e56bee4c0753a9a859"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MjM0OQ==", "bodyText": "address is primitive long, do we really need currentAddress?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#discussion_r459792349", "createdAt": "2020-07-24T00:01:50Z", "author": {"login": "WenbinZhu"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/LogUnitServer.java", "diffHunk": "@@ -288,55 +288,46 @@ private void prefixTrim(CorfuPayloadMsg<TrimRequest> msg, ChannelHandlerContext\n                 });\n     }\n \n-    @ServerHandler(type = CorfuMsgType.READ_REQUEST)\n-    public void read(CorfuPayloadMsg<ReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n-        long address = msg.getPayload().getAddress();\n-        boolean cacheable = msg.getPayload().isCacheReadResult();\n-        log.trace(\"read: {}, cacheable: {}\", msg.getPayload().getAddress(), cacheable);\n-\n-        ReadResponse rr = new ReadResponse();\n-        try {\n-            ILogData logData = dataCache.get(address, cacheable);\n-            if (logData == null) {\n-                rr.put(address, LogData.getEmpty(address));\n-            } else {\n-                rr.put(address, (LogData) logData);\n-            }\n-            r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n-        } catch (DataCorruptionException e) {\n-            log.error(\"Data corruption exception while reading address {}\", address, e);\n-            r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.payloadMsg(address));\n-        }\n+  @ServerHandler(type = CorfuMsgType.READ_REQUEST)\n+  public void read(CorfuPayloadMsg<ReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n+    boolean cacheable = msg.getPayload().isCacheReadResult();\n+    if (log.isTraceEnabled()) {\n+      log.trace(\"read: {}, cacheable: {}\", msg.getPayload().getAddresses(), cacheable);\n     }\n \n-    @ServerHandler(type = CorfuMsgType.MULTIPLE_READ_REQUEST)\n-    public void multiRead(CorfuPayloadMsg<MultipleReadRequest> msg, ChannelHandlerContext ctx, IServerRouter r) {\n-        boolean cacheable = msg.getPayload().isCacheReadResult();\n-        log.trace(\"multiRead: {}, cacheable: {}\", msg.getPayload().getAddresses(), cacheable);\n-\n-        ReadResponse rr = new ReadResponse();\n-        try {\n-            for (Long address : msg.getPayload().getAddresses()) {\n-                ILogData logData = dataCache.get(address, cacheable);\n-                if (logData == null) {\n-                    rr.put(address, LogData.getEmpty(address));\n-                } else {\n-                    rr.put(address, (LogData) logData);\n-                }\n-            }\n-            r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n-        } catch (DataCorruptionException e) {\n-            r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.msg());\n+    ReadResponse rr = new ReadResponse();\n+    long currentRead = Address.NON_ADDRESS;\n+    try {\n+      for (Long address : msg.getPayload().getAddresses()) {\n+        currentRead = address;\n+        ILogData logData = dataCache.get(address, cacheable);\n+        if (logData == null) {\n+          rr.put(address, LogData.getEmpty(address));\n+        } else {\n+          rr.put(address, (LogData) logData);\n         }\n+      }\n+      r.sendResponse(ctx, msg, CorfuMsgType.READ_RESPONSE.payloadMsg(rr));\n+    } catch (DataCorruptionException e) {\n+      log.error(\n+          \"Data corruption exception while reading addresses {}\",\n+          msg.getPayload().getAddresses(),\n+          e);\n+      r.sendResponse(ctx, msg, CorfuMsgType.ERROR_DATA_CORRUPTION.payloadMsg(currentRead));\n     }\n+  }\n \n     @ServerHandler(type = CorfuMsgType.INSPECT_ADDRESSES_REQUEST)\n     public void inspectAddresses(CorfuPayloadMsg<InspectAddressesRequest> msg,\n                                  ChannelHandlerContext ctx, IServerRouter r) {\n-        log.trace(\"inspectAddresses: {}\", msg.getPayload().getAddresses());\n+        List<Long> addresses = msg.getPayload().getAddresses();\n+        log.trace(\"inspectAddresses: {}\", addresses);\n         InspectAddressesResponse inspectResponse = new InspectAddressesResponse();\n+\n+    long currentAddress = Address.NON_ADDRESS;\n         try {\n-            for (long address : msg.getPayload().getAddresses()) {\n+            for (long address : addresses) {\n+                currentAddress = address;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7ab293dec3ecc48854f4e56bee4c0753a9a859"}, "originalPosition": 145}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13c2d4a28b53fadd6253ee6d87d38a4557761ea0", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/13c2d4a28b53fadd6253ee6d87d38a4557761ea0", "committedDate": "2020-07-24T06:16:36Z", "message": "Unify Read APIs + InspectAddresses Bug\n\n- Merged the multi-address read with the single read API.\n- Fix response type returned by inspectAddresses on data\n  corruption."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d7ab293dec3ecc48854f4e56bee4c0753a9a859", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/0d7ab293dec3ecc48854f4e56bee4c0753a9a859", "committedDate": "2020-07-23T23:26:19Z", "message": "Merge branch 'master' into unifyReadAPI"}, "afterCommit": {"oid": "13c2d4a28b53fadd6253ee6d87d38a4557761ea0", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/13c2d4a28b53fadd6253ee6d87d38a4557761ea0", "committedDate": "2020-07-24T06:16:36Z", "message": "Unify Read APIs + InspectAddresses Bug\n\n- Merged the multi-address read with the single read API.\n- Fix response type returned by inspectAddresses on data\n  corruption."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjU2NjAx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-455256601", "createdAt": "2020-07-25T03:14:48Z", "commit": {"oid": "13c2d4a28b53fadd6253ee6d87d38a4557761ea0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDg3MTAz", "url": "https://github.com/CorfuDB/CorfuDB/pull/2612#pullrequestreview-456087103", "createdAt": "2020-07-27T19:52:28Z", "commit": {"oid": "13c2d4a28b53fadd6253ee6d87d38a4557761ea0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}