{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MTE2MTk5", "number": 2600, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzowODo1N1rOEL6QxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTo0MjoxMlrOEMoTiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTI0MzU3OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMzowODo1N1rOGttpxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTozMzoyN1rOGuMtEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ==", "bodyText": "I have a test to verify this fix. It will come as part of another PR as it has refactored the CorfuLogReplicationE2ETest to make the methods as utils for other tests.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450587079", "createdAt": "2020-07-07T03:08:57Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NDk5OA==", "bodyText": "The clusterManager does update the persisted topologyConfigId. But within the LogReplicationSinkManager we use the cached value (see for instance the receive method). This cached value is updated on processTopologyConfigChange but not in the initial path (when there is no change but we're starting)... So topologyConfigId on the first run is always 0 instead of the one received by the ClusterManager... We're ok on the update path but fail to set it on the start path...", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450594998", "createdAt": "2020-07-07T03:44:10Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU5NTk2MQ==", "bodyText": "Then it is better that sinkManager doesn't cache the configureID. If the sinkManager needs the configID, it just queries the metadata table to get the most recent one.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450595961", "createdAt": "2020-07-07T03:48:36Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwMjEwOA==", "bodyText": "For every received message we verify it is intended for us on that 'epoch'. That would mean accessing the database for every received message.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450602108", "createdAt": "2020-07-07T04:18:42Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxMjM5Ng==", "bodyText": "The data is at runtime, it is a in-memory database, the accessing should be fast. Just one scenario: a node missed the notification of the clusterConfig change due to network partition, this node join the cluster again with the old config and becomes the leader later, will its cached configID be out of date?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450612396", "createdAt": "2020-07-07T05:03:49Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYzNTc2Ng==", "bodyText": "One question, why is it an in-memory database? Isn't the metadata table manager doing an access to Corfu itself? which is not running in-memory and which could be doing an RPC call by reading from the tail.\nMaybe this scenario that you're highlighting is an indicative that on leadership (lock acquisition) we should re-fetch the topology, cause what if all 3 nodes missed the notification? even if we read from the datastore it is going to rely on an old config. Maybe that's the second change that we should do.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450635766", "createdAt": "2020-07-07T06:23:30Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1OTI1OA==", "bodyText": "If performance is the concern, we can remove the epoch and epoch check at SinkManager, the snapshotWriter/logEntryWriter will do the check anyway. The checking at sinkManager just brings more complexity. It is nice to pass the epoch down at the startup to the metadata manager.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r450959258", "createdAt": "2020-07-07T15:37:43Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2Mzk4OA==", "bodyText": "But that is just moving the problem one layer up, right? cause still we process every message, so for every message we would be accessing the database.\nI would say that maybe we should keep the topologyConfigId cached and it is refreshed on two events:\n\nOn lock acquisition (we need to add this, to avoid the scenario of all nodes missing notification)\nOn topology change notification", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451063988", "createdAt": "2020-07-07T18:32:27Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2OTU2MQ==", "bodyText": "The out-of-sync configID is not a common case. The writers always do the check no matter what. One hint we can use is that if the message's configID is smaller, it should drop them anyway. If the message's configID is bigger, the current node should go to state that keeps polling clusterManager to get the desired configID that should not smaller then the message's configID.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451069561", "createdAt": "2020-07-07T18:42:50Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NzE4NA==", "bodyText": "But it is a possible case. The writers can continue to do the check always, that is not in question. I'm just concerned of having to access the database on every apply (every message) to check the topologyConfigId. TopologyConfigId changes anyways always come from the discovery service, either because:\n(1) the lock was acquired and we check what is the recent topology  (to be added), or\n(2) because a changeOfTopologyNotification came in\nIn this sense, we can always push this value down. Anyways reading from the DB is because we persisted it from the discovery service on (1) or (2) and instead of pushing the new topologyConfigId down, down there we read it from the database. There is where I don't think we need to be doing RPC calls for every received message if we can have it locally by being pushed by the Discovery Service.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451087184", "createdAt": "2020-07-07T19:16:34Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA5NTgyNw==", "bodyText": "I think adding a checking at SinkManager is ok. Just when the message has a higher topology epoch, the current node should send an alarm to DiscoveryService to get the most recent topology information etc. We can address that in another PR.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451095827", "createdAt": "2020-07-07T19:33:27Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationSinkManager.java", "diffHunk": "@@ -113,6 +108,7 @@ public LogReplicationSinkManager(String localCorfuEndpoint, LogReplicationConfig\n          */\n         this.rxState = RxState.LOG_ENTRY_SYNC;\n         this.config = config;\n+        this.topologyConfigId = topologyConfigId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4NzA3OQ=="}, "originalCommit": {"oid": "778677bdea92618d952e4c7ff6f94d0bbd359641"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjQ2ODI1OnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODowNDo1OFrOGuzhRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODowNDo1OFrOGuzhRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczMTc4Mw==", "bodyText": "Just doing updateTopologyConfigID is not enough. While process a topology change event, the discovery service does more work refer to processTopologyChangeNotification.\nWhile combining two events topology change and leadership change together, it is a bit complex.\nWould suggest to not call the fetchTopologyFromClusterManager.  First, the topology change is a notification API from clusterManager. Even with this call, it will fetch the cached value from clusterManagerAdapter. Second, it just add more complexity and doesn't completely solve the problem.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451731783", "createdAt": "2020-07-08T18:04:58Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -396,9 +419,28 @@ private void stopLogReplication() {\n     public void processLockAcquire() {\n         log.debug(\"Process lock acquire event\");\n         isLeader = true;\n+\n+        // Regardless of the role of this node, on leadership acquisition\n+        // we shall query the topology provider to get the most up to date\n+        // topologyConfigId, which might have changed during our time as non-leaders\n+        // and for which we might have missed the change notification and update it on\n+        // the sink manager so the value is cached to filter messages upon receive.\n+        fetchTopologyFromClusterManager();\n+        updateTopologyConfigId(topologyDescriptor.getTopologyConfigId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjc3MjEzOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTozNzoxM1rOGu2iMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTo0MzoyNlrOGvfTFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4MTE3MA==", "bodyText": "I think we missed 'logReplicationServerHandler.setActive' after updating localTopology.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451781170", "createdAt": "2020-07-08T19:37:13Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -396,9 +419,28 @@ private void stopLogReplication() {\n     public void processLockAcquire() {\n         log.debug(\"Process lock acquire event\");\n         isLeader = true;\n+\n+        // Regardless of the role of this node, on leadership acquisition\n+        // we shall query the topology provider to get the most up to date\n+        // topologyConfigId, which might have changed during our time as non-leaders\n+        // and for which we might have missed the change notification and update it on\n+        // the sink manager so the value is cached to filter messages upon receive.\n+        fetchTopologyFromClusterManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0OTA0NQ==", "bodyText": "you're right! So, to avoid this being loose and in different places, I refactored a bit as for updates to always happen when verifying if the cluster belongs to the retrieved topology.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r452449045", "createdAt": "2020-07-09T19:43:26Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -396,9 +419,28 @@ private void stopLogReplication() {\n     public void processLockAcquire() {\n         log.debug(\"Process lock acquire event\");\n         isLeader = true;\n+\n+        // Regardless of the role of this node, on leadership acquisition\n+        // we shall query the topology provider to get the most up to date\n+        // topologyConfigId, which might have changed during our time as non-leaders\n+        // and for which we might have missed the change notification and update it on\n+        // the sink manager so the value is cached to filter messages upon receive.\n+        fetchTopologyFromClusterManager();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4MTE3MA=="}, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjc4NzMxOnYy", "diffSide": "RIGHT", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTo0MjoxMlrOGu2r4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMToyMzoxNVrOGvm5KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4MzY0OA==", "bodyText": "One more thought is when we process config change event notification, we are using the config from that notification message, which might be delayed/outdated. I was wondering if we can fetch latest one to skip those outdated ones?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r451783648", "createdAt": "2020-07-08T19:42:12Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -370,6 +370,29 @@ private void onLeadershipAcquire() {\n         }\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzNzU4Nw==", "bodyText": "mmm but that would be really complex right, the same argument could be thought for the one being fetched (that it could be delayed/outdated). Anyways, if it is delayed or outdated we'll soon receive another notification.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r452437587", "createdAt": "2020-07-09T19:20:12Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -370,6 +370,29 @@ private void onLeadershipAcquire() {\n         }\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4MzY0OA=="}, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MzQ4MA==", "bodyText": "While processing a topology event, it is an optimization we can do to query the most recent topology. But while there is a leadership change, there is no need to query the topology to complicate the scenario.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2600#discussion_r452573480", "createdAt": "2020-07-10T01:23:15Z", "author": {"login": "xiaoqin2012"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -370,6 +370,29 @@ private void onLeadershipAcquire() {\n         }\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc4MzY0OA=="}, "originalCommit": {"oid": "2acff5cab97f61758ca51823f8284661965d44b2"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1827, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}