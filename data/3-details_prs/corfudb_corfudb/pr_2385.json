{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzY3NDQ3", "number": 2385, "title": "move scanAndFilter to StreamingMap", "bodyText": "Overview\nDescription:\nFrom a scale test, observed performance regression in scanAndFilter function.\nentryStream calls ImmutableListSetWrapper.fromMap, which causes 1-2x more latency than directly using values to filter.\nSo I add scanAndFilter & scanAndFilterByEntry to StreamingMap Interface to make StreamingMapDecorator and PersistedStreamingMap have different implementation.\nWhy should this be merged:\nFix performance regression.\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-02-08T22:56:47Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385", "merged": true, "mergeCommit": {"oid": "3681c59cb70da349ee125c8016194ee56f33663e"}, "closed": true, "closedAt": "2020-02-11T21:11:17Z", "author": {"login": "zhangn49"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCd26_AFqTM1NTU3NzI5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDWxNbgFqTM1NjkyNjA3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTc3Mjk0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-355577294", "createdAt": "2020-02-09T01:01:10Z", "commit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMToxMFrOFnSwgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMToxMFrOFnSwgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0NjExNQ==", "bodyText": "This is using Java's common pool. I believe this will introduce a regression -- this is why a separate thread pool was introduced.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r376746115", "createdAt": "2020-02-09T01:01:10Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/StreamingMapDecorator.java", "diffHunk": "@@ -131,4 +135,25 @@ public void clear() {\n     public Set<Entry<K, V>> entrySet() {\n         return mapImpl.entrySet();\n     }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n+        return mapImpl.values().parallelStream()\n+                .filter(valuePredicate)\n+                .collect(Collectors.toCollection(ArrayList::new));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTc3MzAy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-355577302", "createdAt": "2020-02-09T01:01:18Z", "commit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMToxOFrOFnSwjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMToxOFrOFnSwjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0NjEyNA==", "bodyText": "Same comment here.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r376746124", "createdAt": "2020-02-09T01:01:18Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/StreamingMapDecorator.java", "diffHunk": "@@ -131,4 +135,25 @@ public void clear() {\n     public Set<Entry<K, V>> entrySet() {\n         return mapImpl.entrySet();\n     }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n+        return mapImpl.values().parallelStream()\n+                .filter(valuePredicate)\n+                .collect(Collectors.toCollection(ArrayList::new));\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Collection<Entry<K, V>> scanAndFilterByEntry(\n+            Predicate<? super Entry<K, V>> entryPredicate) {\n+        return mapImpl.entrySet().parallelStream()\n+                .filter(entryPredicate)\n+                .collect(Collectors.toCollection(ArrayList::new));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTc3Mzcx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-355577371", "createdAt": "2020-02-09T01:03:33Z", "commit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMzozM1rOFnSw4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMTowMzozM1rOFnSw4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0NjIxMA==", "bodyText": "PersistedStreamingMap cannot take advantage of parallel processing, so there is no point of spawning more than one thread. Is there a reason why ForkJoinPool was moved out of CorfuTable?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r376746210", "createdAt": "2020-02-09T01:03:33Z", "author": {"login": "vjeko"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/PersistedStreamingMap.java", "diffHunk": "@@ -33,6 +38,19 @@\n  */\n @Slf4j\n public class PersistedStreamingMap<K, V> implements ContextAwareMap<K, V> {\n+    // Accessor/Mutator threads can interleave in a way that create a deadlock because they can create a\n+    // circular dependency between the VersionLockedObject(VLO) lock and the common forkjoin thread pool. In order\n+    // to break the dependency, parallel stream operations have to execute on a separate pool that applications\n+    // cant use. For example, if there are 4 accessor threads all using the common forkjoin pool, one of the threads\n+    // can acquire the VLO lock and cause the other 3 threads to wait, but after acquiring the VLO lock, the thread\n+    // gets block on parallel stream, because the pool is exhausted with threads that are trying to acquire the VLO\n+    // look, which creates a circular dependency. In other words, a deadlock.\n+    private final static ForkJoinPool pool = new ForkJoinPool(Runtime.getRuntime().availableProcessors() - 1,\n+            pool -> {\n+                final ForkJoinWorkerThread worker = ForkJoinPool.defaultForkJoinWorkerThreadFactory.newThread(pool);\n+                worker.setName(\"PersistedStreamingMap-Forkjoin-pool-\" + worker.getPoolIndex());\n+                return worker;\n+            }, null, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "094169a7d6e53414afe38de3a8a89e068732cafc", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/094169a7d6e53414afe38de3a8a89e068732cafc", "committedDate": "2020-02-08T22:51:47Z", "message": "move scanAndFilter to StreamingMap"}, "afterCommit": {"oid": "f002b15c4e4ab67975473f8377c59680393d13dd", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f002b15c4e4ab67975473f8377c59680393d13dd", "committedDate": "2020-02-09T02:31:53Z", "message": "move scanAndFilter to StreamingMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjUyMDk0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356252094", "createdAt": "2020-02-10T20:49:27Z", "commit": {"oid": "f002b15c4e4ab67975473f8377c59680393d13dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDo0OToyN1rOFn1DnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDo0OToyN1rOFn1DnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMwODA2MA==", "bodyText": "Maybe we can do this in another patch, but we need to get rid of this.\nIf the table set cannot fit in memory, then its possible that the resulting set won't fit in memory.\nApplications can just directly use the Stream exposed by entryStream.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r377308060", "createdAt": "2020-02-10T20:49:27Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/PersistedStreamingMap.java", "diffHunk": "@@ -275,6 +278,27 @@ public void clear() {\n         return resStream;\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n+        return entryStream()\n+                .map(Entry::getValue).filter(valuePredicate)\n+                .collect(Collectors.toCollection(ArrayList::new));\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public Collection<Entry<K, V>> scanAndFilterByEntry(\n+            Predicate<? super Entry<K, V>> entryPredicate) {\n+        return entryStream()\n+                .filter(entryPredicate)\n+                .collect(Collectors.toCollection(ArrayList::new));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f002b15c4e4ab67975473f8377c59680393d13dd"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjUyMzA3", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356252307", "createdAt": "2020-02-10T20:49:51Z", "commit": {"oid": "f002b15c4e4ab67975473f8377c59680393d13dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzMzNzcx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356333771", "createdAt": "2020-02-10T23:13:28Z", "commit": {"oid": "fbb6706343c52aba9b80911bf43a7424febe0124"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86317e5229970b72c88885209ff9c518a081616", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d86317e5229970b72c88885209ff9c518a081616", "committedDate": "2020-02-11T00:38:37Z", "message": "move scanAndFilter to StreamingMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbb6706343c52aba9b80911bf43a7424febe0124", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/fbb6706343c52aba9b80911bf43a7424febe0124", "committedDate": "2020-02-10T22:50:48Z", "message": "Merge branch 'master' into scan_and_filter"}, "afterCommit": {"oid": "d86317e5229970b72c88885209ff9c518a081616", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d86317e5229970b72c88885209ff9c518a081616", "committedDate": "2020-02-11T00:38:37Z", "message": "move scanAndFilter to StreamingMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzY4MzEy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356368312", "createdAt": "2020-02-11T00:54:24Z", "commit": {"oid": "d86317e5229970b72c88885209ff9c518a081616"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03d6120b485f0833b532ad6463505b9208bd98ed", "author": {"user": {"login": "vjeko", "name": "Vjekoslav Brajkovic"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/03d6120b485f0833b532ad6463505b9208bd98ed", "committedDate": "2020-02-11T00:54:46Z", "message": "Merge branch 'master' into scan_and_filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2Mzg0ODIw", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356384820", "createdAt": "2020-02-11T02:00:22Z", "commit": {"oid": "03d6120b485f0833b532ad6463505b9208bd98ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730497c6c0b6a6d9ffb4190f6220d42b02d38067", "author": {"user": {"login": "Maithem", "name": "Maithem"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/730497c6c0b6a6d9ffb4190f6220d42b02d38067", "committedDate": "2020-02-11T06:19:10Z", "message": "Merge branch 'master' into scan_and_filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDU5MTY5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356459169", "createdAt": "2020-02-11T07:48:42Z", "commit": {"oid": "730497c6c0b6a6d9ffb4190f6220d42b02d38067"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo0ODo0MlrOFn_lLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo0ODo0MlrOFn_lLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4MDQ5Mg==", "bodyText": "Can you use try-resources on the stream so that It is explicitly closed after its used.\nLike this\ne8f154e#diff-6f23471c25711fa551fa3b560d27d49dR154", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r377480492", "createdAt": "2020-02-11T07:48:42Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/CorfuTable.java", "diffHunk": "@@ -368,17 +365,11 @@ public void insert(@ConflictParameter K key, V value) {\n         // operations are needed to be executed on the internal data structure\n     }\n \n-    /**\n-     * Returns a filtered {@link List} view of the values contained in this map.\n-     * This method has a memory/CPU advantage over the map iterators as no deep copy\n-     * is actually performed.\n-     *\n-     * @param valuePredicate java predicate (function to evaluate)\n-     * @return a view of the values contained in this map meeting the predicate condition.\n-     */\n+    /** {@inheritDoc} */\n+    @Override\n     @Accessor\n     public List<V> scanAndFilter(Predicate<? super V> valuePredicate) {\n-        return pool.submit(() -> mainMap.entryStream()\n+        return pool.submit(() -> mainMap.mutableEntryStream()\n                 .map(Entry::getValue).filter(valuePredicate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730497c6c0b6a6d9ffb4190f6220d42b02d38067"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDYwMDg0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356460084", "createdAt": "2020-02-11T07:51:25Z", "commit": {"oid": "730497c6c0b6a6d9ffb4190f6220d42b02d38067"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo1MToyNVrOFn_oLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo1MToyNVrOFn_oLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4MTI2Mg==", "bodyText": "I think unsafeStream is a more appropriate adjective. It also makes it clear that it can only be used under an Accessor lock.\nI would also prefer to not have a default method. Just stub it out in the implementation.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#discussion_r377481262", "createdAt": "2020-02-11T07:51:25Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/collections/StreamingMap.java", "diffHunk": "@@ -21,4 +20,8 @@\n      * @return stream of entries\n      */\n     Stream<Map.Entry<K, V>> entryStream();\n+\n+    default Stream<Map.Entry<K, V>> mutableEntryStream() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730497c6c0b6a6d9ffb4190f6220d42b02d38067"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891280874c28fe4abe3a7e00a7c9a4c14c26915a", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/891280874c28fe4abe3a7e00a7c9a4c14c26915a", "committedDate": "2020-02-11T19:00:42Z", "message": "address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTI2MDcx", "url": "https://github.com/CorfuDB/CorfuDB/pull/2385#pullrequestreview-356926071", "createdAt": "2020-02-11T19:19:31Z", "commit": {"oid": "891280874c28fe4abe3a7e00a7c9a4c14c26915a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3326, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}