{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NzI3Njgx", "number": 2814, "title": "Stop Log Replication if Plugin fails to read the configuration.", "bodyText": "Description:\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version.\nWhy should this be merged: Better Error Handling", "createdAt": "2020-11-05T01:12:37Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814", "merged": true, "mergeCommit": {"oid": "1f74ffcdeaf4dbaa17e837c48a64526a943d9b91"}, "closed": true, "closedAt": "2020-11-10T01:18:48Z", "author": {"login": "pankti-m"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZnYBugFqTUyNDU3MDAwNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABda6KH2gH2gAyNTE1NzI3NjgxOjRjZGY1OGUwYjUyOGE2MmEyNTU3NmRlY2I0YWQ3Y2RmYWU4MmRjYmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTcwMDA1", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#pullrequestreview-524570005", "createdAt": "2020-11-05T18:56:48Z", "commit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1Njo0OVrOHuRyig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo1Njo0OVrOHuRyig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4ODAxMA==", "bodyText": "Do we need to catch? cause it's only re-throwing?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#discussion_r518288010", "createdAt": "2020-11-05T18:56:49Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -319,30 +320,34 @@ private void connectToClusterManager() {\n      * - Start Log Replication Server (receiver component)\n      */\n     private void bootstrapLogReplicationService() {\n-        // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)\n-        LogReplicationConfig logReplicationConfig = getLogReplicationConfiguration(getCorfuRuntime());\n+        try {\n+            // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)\n+            LogReplicationConfig logReplicationConfig = getLogReplicationConfiguration(getCorfuRuntime());\n \n-        logReplicationMetadataManager = new LogReplicationMetadataManager(getCorfuRuntime(),\n+            logReplicationMetadataManager = new LogReplicationMetadataManager(getCorfuRuntime(),\n                 topologyDescriptor.getTopologyConfigId(), localClusterDescriptor.getClusterId());\n \n-        logReplicationServerHandler = new LogReplicationServer(serverContext, logReplicationConfig,\n+            logReplicationServerHandler = new LogReplicationServer(serverContext, logReplicationConfig,\n                 logReplicationMetadataManager, localCorfuEndpoint, topologyDescriptor.getTopologyConfigId());\n-        logReplicationServerHandler.setActive(localClusterDescriptor.getRole().equals(ClusterRole.ACTIVE));\n+            logReplicationServerHandler.setActive(localClusterDescriptor.getRole().equals(ClusterRole.ACTIVE));\n \n-        interClusterReplicationService = new CorfuInterClusterReplicationServerNode(serverContext,\n+            interClusterReplicationService = new CorfuInterClusterReplicationServerNode(serverContext,\n                 logReplicationServerHandler, logReplicationConfig);\n \n-        // Pass server's channel context through the Log Replication Context, for shared objects between the server\n-        // and the client channel (specific requirements of the transport implementation)\n-        replicationContext = new LogReplicationContext(logReplicationConfig, topologyDescriptor,\n+            // Pass server's channel context through the Log Replication Context, for shared objects between the server\n+            // and the client channel (specific requirements of the transport implementation)\n+            replicationContext = new LogReplicationContext(logReplicationConfig, topologyDescriptor,\n                 localCorfuEndpoint, interClusterReplicationService.getRouter().getServerAdapter().getChannelContext());\n \n-        // Unblock server initialization & register to Log Replication Lock, to attempt lock / leadership acquisition\n-        serverCallback.complete(interClusterReplicationService);\n+            // Unblock server initialization & register to Log Replication Lock, to attempt lock / leadership acquisition\n+            serverCallback.complete(interClusterReplicationService);\n \n-        logReplicationEventListener = new LogReplicationEventListener(this);\n-        logReplicationEventListener.start();\n-        serverStarted = true;\n+            logReplicationEventListener = new LogReplicationEventListener(this);\n+            logReplicationEventListener.start();\n+            serverStarted = true;\n+        } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzAzMDE5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#pullrequestreview-524703019", "createdAt": "2020-11-05T21:55:18Z", "commit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMTo1NToxOFrOHuYM-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMTo1NjoxOFrOHuYO7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5MzA4Mg==", "bodyText": "+1 We can let the upper-level function catch it.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#discussion_r518393082", "createdAt": "2020-11-05T21:55:18Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -319,30 +320,34 @@ private void connectToClusterManager() {\n      * - Start Log Replication Server (receiver component)\n      */\n     private void bootstrapLogReplicationService() {\n-        // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)\n-        LogReplicationConfig logReplicationConfig = getLogReplicationConfiguration(getCorfuRuntime());\n+        try {\n+            // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)\n+            LogReplicationConfig logReplicationConfig = getLogReplicationConfiguration(getCorfuRuntime());\n \n-        logReplicationMetadataManager = new LogReplicationMetadataManager(getCorfuRuntime(),\n+            logReplicationMetadataManager = new LogReplicationMetadataManager(getCorfuRuntime(),\n                 topologyDescriptor.getTopologyConfigId(), localClusterDescriptor.getClusterId());\n \n-        logReplicationServerHandler = new LogReplicationServer(serverContext, logReplicationConfig,\n+            logReplicationServerHandler = new LogReplicationServer(serverContext, logReplicationConfig,\n                 logReplicationMetadataManager, localCorfuEndpoint, topologyDescriptor.getTopologyConfigId());\n-        logReplicationServerHandler.setActive(localClusterDescriptor.getRole().equals(ClusterRole.ACTIVE));\n+            logReplicationServerHandler.setActive(localClusterDescriptor.getRole().equals(ClusterRole.ACTIVE));\n \n-        interClusterReplicationService = new CorfuInterClusterReplicationServerNode(serverContext,\n+            interClusterReplicationService = new CorfuInterClusterReplicationServerNode(serverContext,\n                 logReplicationServerHandler, logReplicationConfig);\n \n-        // Pass server's channel context through the Log Replication Context, for shared objects between the server\n-        // and the client channel (specific requirements of the transport implementation)\n-        replicationContext = new LogReplicationContext(logReplicationConfig, topologyDescriptor,\n+            // Pass server's channel context through the Log Replication Context, for shared objects between the server\n+            // and the client channel (specific requirements of the transport implementation)\n+            replicationContext = new LogReplicationContext(logReplicationConfig, topologyDescriptor,\n                 localCorfuEndpoint, interClusterReplicationService.getRouter().getServerAdapter().getChannelContext());\n \n-        // Unblock server initialization & register to Log Replication Lock, to attempt lock / leadership acquisition\n-        serverCallback.complete(interClusterReplicationService);\n+            // Unblock server initialization & register to Log Replication Lock, to attempt lock / leadership acquisition\n+            serverCallback.complete(interClusterReplicationService);\n \n-        logReplicationEventListener = new LogReplicationEventListener(this);\n-        logReplicationEventListener.start();\n-        serverStarted = true;\n+            logReplicationEventListener = new LogReplicationEventListener(this);\n+            logReplicationEventListener.start();\n+            serverStarted = true;\n+        } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4ODAxMA=="}, "originalCommit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM5MzU4Mw==", "bodyText": "Do we also retrieve the version info through the adapter? If so, let's modify the comment a little bit", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#discussion_r518393583", "createdAt": "2020-11-05T21:56:18Z", "author": {"login": "zhangn49"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -319,30 +320,34 @@ private void connectToClusterManager() {\n      * - Start Log Replication Server (receiver component)\n      */\n     private void bootstrapLogReplicationService() {\n-        // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)\n-        LogReplicationConfig logReplicationConfig = getLogReplicationConfiguration(getCorfuRuntime());\n+        try {\n+            // Through LogReplicationConfigAdapter retrieve system-specific configurations (including streams to replicate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d43d8c71bde8e533f078bab210f5d2593fb6b993", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d43d8c71bde8e533f078bab210f5d2593fb6b993", "committedDate": "2020-11-05T01:09:08Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}, "afterCommit": {"oid": "836408bd06ca25a8abb8f65d7b89edba281010c2", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/836408bd06ca25a8abb8f65d7b89edba281010c2", "committedDate": "2020-11-06T00:18:36Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Nzc5MzE5", "url": "https://github.com/CorfuDB/CorfuDB/pull/2814#pullrequestreview-524779319", "createdAt": "2020-11-06T00:40:42Z", "commit": {"oid": "836408bd06ca25a8abb8f65d7b89edba281010c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "836408bd06ca25a8abb8f65d7b89edba281010c2", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/836408bd06ca25a8abb8f65d7b89edba281010c2", "committedDate": "2020-11-06T00:18:36Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}, "afterCommit": {"oid": "b434c81e7ad916779fdbe59464919e26bb58cfa0", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b434c81e7ad916779fdbe59464919e26bb58cfa0", "committedDate": "2020-11-06T05:49:13Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f4f31801b99fa90563ed8232cff34dcad73e348", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/2f4f31801b99fa90563ed8232cff34dcad73e348", "committedDate": "2020-11-07T00:32:18Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b434c81e7ad916779fdbe59464919e26bb58cfa0", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/b434c81e7ad916779fdbe59464919e26bb58cfa0", "committedDate": "2020-11-06T05:49:13Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}, "afterCommit": {"oid": "2f4f31801b99fa90563ed8232cff34dcad73e348", "author": {"user": {"login": "pankti-m", "name": null}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/2f4f31801b99fa90563ed8232cff34dcad73e348", "committedDate": "2020-11-07T00:32:18Z", "message": "Stop Log Replication if Plugin fails to read the configuration.\n\nLog Replication should stop if the plugin fails to fetch important info\nsuch as streams to replicate and version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cdf58e0b528a62a25576decb4ad7cdfae82dcbf", "author": {"user": {"login": "annym", "name": "Anny Martinez"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/4cdf58e0b528a62a25576decb4ad7cdfae82dcbf", "committedDate": "2020-11-09T19:44:49Z", "message": "Merge branch 'master' into lr_exception"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4135, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}