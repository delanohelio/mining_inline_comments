{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MTUyMzY2", "number": 2322, "title": "CorfuStore: Record if table is opened as disk based", "bodyText": "This is needed for the checkpointer to make sure that\na disk based table is opened as a disk based table and\nnot an in-memory table.", "createdAt": "2020-01-23T02:27:00Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322", "merged": true, "mergeCommit": {"oid": "44ee9ef1df4e82e3dcc727709c9aea67948fd31a"}, "closed": true, "closedAt": "2020-02-22T00:00:49Z", "author": {"login": "hisundar"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9THEzAFqTM0NzY3OTg3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGmZncABqjMwNjE5NDEyNDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3Njc5ODc2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#pullrequestreview-347679876", "createdAt": "2020-01-23T23:40:14Z", "commit": {"oid": "787a9603f8047796abf42d73528dc0dc281e6832"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzo0MDoxNFrOFhQKCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzo0MDoxNFrOFhQKCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxMjA0Mg==", "bodyText": "The metadata is for a distributed object, but the path of is local information. Does it make sense to store it in this registry ?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#discussion_r370412042", "createdAt": "2020-01-23T23:40:14Z", "author": {"login": "Maithem"}, "path": "runtime/proto/corfu_store_metadata.proto", "diffHunk": "@@ -30,8 +30,12 @@ message TableMetadata {\n     TableName table_name = 1;\n     // True if the CorfuStore is disk based and False if it can be contained in memory.\n     bool disk_based = 2;\n+\n+    // Full path to disk based location if this table is disk based\n+    string disk_based_path = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "787a9603f8047796abf42d73528dc0dc281e6832"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "787a9603f8047796abf42d73528dc0dc281e6832", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/787a9603f8047796abf42d73528dc0dc281e6832", "committedDate": "2020-01-23T02:26:19Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for the checkpointer to make sure that\na disk based table is opened as a disk based table and\nnot an in-memory table."}, "afterCommit": {"oid": "cf0b4c0dfd01c6998d0c8d2ed4601101ce761587", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/cf0b4c0dfd01c6998d0c8d2ed4601101ce761587", "committedDate": "2020-01-24T01:51:33Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for the checkpointer to make sure that\na disk based table is opened as a disk based table and\nnot an in-memory table."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf0b4c0dfd01c6998d0c8d2ed4601101ce761587", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/cf0b4c0dfd01c6998d0c8d2ed4601101ce761587", "committedDate": "2020-01-24T01:51:33Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for the checkpointer to make sure that\na disk based table is opened as a disk based table and\nnot an in-memory table."}, "afterCommit": {"oid": "3aef40b07d4c3524fea95f5a72fde0cbc8311a32", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/3aef40b07d4c3524fea95f5a72fde0cbc8311a32", "committedDate": "2020-01-27T23:45:20Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for the checkpointer to make sure that\na disk based table is opened as a disk based table and\nnot an in-memory table."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTk4MDc0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#pullrequestreview-351198074", "createdAt": "2020-01-30T22:52:42Z", "commit": {"oid": "c9d24825b53514c284be69f741ae8c362b21b861"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "74f739808bde71765bfbeef3217ec97b9dc1a6cb", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/74f739808bde71765bfbeef3217ec97b9dc1a6cb", "committedDate": "2020-02-03T21:37:35Z", "message": "Merge branch 'master' into setIfDiskBased"}, "afterCommit": {"oid": "f5ebad053575ab72fe9fd8eff76cb52bd96ba2c4", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f5ebad053575ab72fe9fd8eff76cb52bd96ba2c4", "committedDate": "2020-02-04T01:17:26Z", "message": "CorfuStore: Add test to checkpoint & Trim disk based CorfuStore table"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5ebad053575ab72fe9fd8eff76cb52bd96ba2c4", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/f5ebad053575ab72fe9fd8eff76cb52bd96ba2c4", "committedDate": "2020-02-04T01:17:26Z", "message": "CorfuStore: Add test to checkpoint & Trim disk based CorfuStore table"}, "afterCommit": {"oid": "c65ee77870dad55d02b35fedbda59c4c173304ab", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c65ee77870dad55d02b35fedbda59c4c173304ab", "committedDate": "2020-02-05T02:47:52Z", "message": "CorfuBrowser: Add support for disk tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDEwNDc0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#pullrequestreview-355410474", "createdAt": "2020-02-07T20:13:47Z", "commit": {"oid": "c65ee77870dad55d02b35fedbda59c4c173304ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxMzo0N1rOFnI_0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxMzo0N1rOFnI_0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NjE5NQ==", "bodyText": "I know you are just using the provided API, but we really need to clean this interface. Creating a disk back CorfuTable should be as easy as creating an in-memory table.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#discussion_r376586195", "createdAt": "2020-02-07T20:13:47Z", "author": {"login": "Maithem"}, "path": "test/src/test/java/org/corfudb/integration/CorfuStoreIT.java", "diffHunk": "@@ -232,4 +244,122 @@ public void readDataWithDynamicMessages() throws Exception {\n \n         assertThat(shutdownCorfuServer(corfuServer)).isTrue();\n     }\n+\n+    public Token checkpointAndTrimCorfuStore(CorfuRuntime runtimeC, boolean skipTrim, String tempDiskPath) {\n+\n+        TableRegistry tableRegistry = runtimeC.getTableRegistry();\n+        CorfuTable<CorfuStoreMetadata.TableName,\n+                CorfuRecord<CorfuStoreMetadata.TableDescriptors,\n+                        CorfuStoreMetadata.TableMetadata>>\n+                        tableRegistryCT = tableRegistry.getRegistryTable();\n+\n+        // Save the regular serializer first..\n+        ISerializer protobufSerializer = Serializers.getSerializer(ProtobufSerializer.PROTOBUF_SERIALIZER_CODE);\n+\n+        // Must register dynamicProtobufSerializer *AFTER* the getTableRegistry() call to ensure that\n+        // the serializer does not go back to the regular ProtobufSerializer\n+        ISerializer dynamicProtobufSerializer = new DynamicProtobufSerializer(runtimeC);\n+        Serializers.registerSerializer(dynamicProtobufSerializer);\n+\n+        // First checkpoint the TableRegistry system table\n+        MultiCheckpointWriter<CorfuTable> mcw = new MultiCheckpointWriter<>();\n+\n+        Token trimToken = new Token(Token.UNINITIALIZED.getEpoch(), Token.UNINITIALIZED.getSequence());\n+        for (CorfuStoreMetadata.TableName tableName : tableRegistry.listTables(null)) {\n+            String fullTableName = TableRegistry.getFullyQualifiedTableName(\n+                    tableName.getNamespace(), tableName.getTableName()\n+                    );\n+            SMRObject.Builder<CorfuTable<CorfuDynamicKey, CorfuDynamicRecord>> corfuTableBuilder = runtimeC.getObjectsView().build()\n+                    .setTypeToken(new TypeToken<CorfuTable<CorfuDynamicKey, CorfuDynamicRecord>>() {})\n+                    .setStreamName(fullTableName)\n+                    .setSerializer(dynamicProtobufSerializer);\n+\n+            // Find out if a table needs to be backed up by disk path to even checkpoint\n+            boolean diskBased = tableRegistryCT.get(tableName).getMetadata().getDiskBased();\n+            if (diskBased) {\n+                final Path persistedCacheLocation = Paths.get(tempDiskPath + tableName.getTableName());\n+                final Options options = new Options().setCreateIfMissing(true);\n+                final Supplier<StreamingMap<CorfuDynamicKey, CorfuDynamicRecord>> mapSupplier = () -> new PersistedStreamingMap<>(\n+                        persistedCacheLocation, options,\n+                        dynamicProtobufSerializer, runtimeC);\n+                corfuTableBuilder.setArguments(mapSupplier, ICorfuVersionPolicy.MONOTONIC);\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c65ee77870dad55d02b35fedbda59c4c173304ab"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDM5NTE2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2322#pullrequestreview-355439516", "createdAt": "2020-02-07T21:12:12Z", "commit": {"oid": "c65ee77870dad55d02b35fedbda59c4c173304ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4f6b990e893bbd7c055b18d1dc56b480c9b92eb", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/d4f6b990e893bbd7c055b18d1dc56b480c9b92eb", "committedDate": "2020-02-13T20:48:32Z", "message": "Merge branch 'master' into setIfDiskBased"}, "afterCommit": {"oid": "cf5da3b9d6b1c3eecbfae55b3bf23fff6fcc1ff9", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/cf5da3b9d6b1c3eecbfae55b3bf23fff6fcc1ff9", "committedDate": "2020-02-13T22:37:14Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for checkpointer so it can do the same.\n\nCorfuBrowser: Add support for disk tables\nWithout it browser can't open large tables.\n\nCorfuStore: Add test to checkpoint & Trim disk based CorfuStore table\nWithout this bugs are only discovered when deployed in scale setups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8ff69f8ece69e8d22ded58cdb364b887c2596d9", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/c8ff69f8ece69e8d22ded58cdb364b887c2596d9", "committedDate": "2020-02-14T01:36:15Z", "message": "CorfuBrowser: add support for diskPath to open large tables"}, "afterCommit": {"oid": "bd54f95249fc0ad4e3e5f4797be083515b3a6253", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/bd54f95249fc0ad4e3e5f4797be083515b3a6253", "committedDate": "2020-02-14T04:01:29Z", "message": "CorfuBrowser: add support for diskPath to open large tables\n\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be opened\nas an in-memory table."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd54f95249fc0ad4e3e5f4797be083515b3a6253", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/bd54f95249fc0ad4e3e5f4797be083515b3a6253", "committedDate": "2020-02-14T04:01:29Z", "message": "CorfuBrowser: add support for diskPath to open large tables\n\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be opened\nas an in-memory table."}, "afterCommit": {"oid": "ae123965e512acfc540bb1e7f35f3803b958553d", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ae123965e512acfc540bb1e7f35f3803b958553d", "committedDate": "2020-02-21T19:44:31Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for checkpointer so it can do the same.\n\nCorfuBrowser: Add support for disk tables\nWithout it browser can't open large tables.\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be\nopened as an in-memory table.\n\nCorfuStore: Add test to checkpoint & Trim disk based\nCorfuStore table Without this bugs are only\ndiscovered when deployed in scale setups."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "530d9c07e2c9ec8ad944789842357b81824441a7", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/530d9c07e2c9ec8ad944789842357b81824441a7", "committedDate": "2020-02-21T21:13:44Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for checkpointer so it can do the same.\n\nCorfuBrowser: Add support for disk tables\nWithout it browser can't open large tables.\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be\nopened as an in-memory table.\n\nCorfuStore: Add test to checkpoint & Trim disk based\nCorfuStore table Without this bugs are only\ndiscovered when deployed in scale setups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae123965e512acfc540bb1e7f35f3803b958553d", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/ae123965e512acfc540bb1e7f35f3803b958553d", "committedDate": "2020-02-21T19:44:31Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for checkpointer so it can do the same.\n\nCorfuBrowser: Add support for disk tables\nWithout it browser can't open large tables.\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be\nopened as an in-memory table.\n\nCorfuStore: Add test to checkpoint & Trim disk based\nCorfuStore table Without this bugs are only\ndiscovered when deployed in scale setups."}, "afterCommit": {"oid": "530d9c07e2c9ec8ad944789842357b81824441a7", "author": {"user": {"login": "hisundar", "name": "Sundar Sridharan"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/530d9c07e2c9ec8ad944789842357b81824441a7", "committedDate": "2020-02-21T21:13:44Z", "message": "CorfuStore: Record if table is opened as disk based\n\nThis is needed for checkpointer so it can do the same.\n\nCorfuBrowser: Add support for disk tables\nWithout it browser can't open large tables.\nIf a table is too large to fit in memory then user can\npass a --diskPath and let that table be\nopened as an in-memory table.\n\nCorfuStore: Add test to checkpoint & Trim disk based\nCorfuStore table Without this bugs are only\ndiscovered when deployed in scale setups."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3418, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}