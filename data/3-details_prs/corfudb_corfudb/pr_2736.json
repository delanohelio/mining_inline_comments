{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTkwMDM0", "number": 2736, "title": "Reset SinkBufferManager on negotiation", "bodyText": "Overview\nDescription:\nSinkBufferManager has a field lastProcessedSeq to apply entry and send ACK. It is initialized when the discovery service starts.\nWhen a non-leader node acquires the lock, lastProcessedSeq is very likely outdated, and won't process new entries.\nWhy should this be merged:\nFix bug.\nRelated issue(s) (if applicable): #\nChecklist (Definition of Done):\n\n There are no TODOs left in the code\n Coding conventions (e.g. for logging, unit tests) have been followed\n Change is covered by automated tests\n Public API has Javadoc", "createdAt": "2020-08-23T23:07:48Z", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736", "merged": true, "mergeCommit": {"oid": "d4e161d9a50a2658bae4b54bd1734a0ca50474a4"}, "closed": true, "closedAt": "2020-08-25T22:10:37Z", "author": {"login": "zhangn49"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdB3RWEgFqTQ3MzA1OTY0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCcBQiAFqTQ3NDc3MDIyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDU5NjQ2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#pullrequestreview-473059646", "createdAt": "2020-08-24T00:12:30Z", "commit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMDoxMjozMFrOHFRK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMDoxMjozMFrOHFRK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI4NjI2Nw==", "bodyText": "should this rather be reset on negotiation? because imagine the case where you lost the lock for a short period or even a long period but writes did not progress, so your lastProcessSequence is still valid as you can continue from that point onwards?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r475286267", "createdAt": "2020-08-24T00:12:30Z", "author": {"login": "annym"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/infrastructure/CorfuReplicationDiscoveryService.java", "diffHunk": "@@ -436,6 +436,7 @@ private void onLeadershipAcquire() {\n                 // Standby Site : the LogReplicationServer (server handler) will initiate the LogReplicationSinkManager\n                 log.info(\"Start as Sink (receiver)\");\n                 interClusterReplicationService.getLogReplicationServer().setLeadership(true);\n+                interClusterReplicationService.getLogReplicationServer().getSinkManager().reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/6aafc9bd3753fcd92095cd285906c1b408fd90f3", "committedDate": "2020-08-24T00:40:28Z", "message": "Reset SinkBufferManager on negotiation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c19a20b49433a0ed1247ef46041387fa0494b15", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/6c19a20b49433a0ed1247ef46041387fa0494b15", "committedDate": "2020-08-23T23:00:06Z", "message": "Reset SinkBufferManager after acquiring the lock"}, "afterCommit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3", "author": {"user": {"login": "zhangn49", "name": "Nan Zhang"}}, "url": "https://github.com/CorfuDB/CorfuDB/commit/6aafc9bd3753fcd92095cd285906c1b408fd90f3", "committedDate": "2020-08-24T00:40:28Z", "message": "Reset SinkBufferManager on negotiation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzc4ODc2", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#pullrequestreview-473778876", "createdAt": "2020-08-24T19:04:54Z", "commit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDE1MTUy", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#pullrequestreview-474015152", "createdAt": "2020-08-25T00:32:45Z", "commit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDozMjo0NVrOHF82sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMDozMjo0NVrOHF82sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAwMTk3MQ==", "bodyText": "do we also need to print the number of remainingEntries?", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#discussion_r476001971", "createdAt": "2020-08-25T00:32:45Z", "author": {"login": "pankti-m"}, "path": "infrastructure/src/main/java/org/corfudb/infrastructure/logreplication/replication/receive/LogReplicationMetadataManager.java", "diffHunk": "@@ -328,16 +328,22 @@ public void setReplicationRemainingEntries(String clusterId, long remainingEntri\n         TxBuilder txBuilder = corfuStore.tx(NAMESPACE);\n         txBuilder.update(REPLICATION_STATUS_TABLE, key, val, null);\n         txBuilder.commit();\n+\n+        log.trace(\"setReplicationRemainingEntries: clusterId: {}, remainingEntries: {}, type: {}\",\n+                clusterId, remainingEntries, type);\n     }\n \n     public Map<String, ReplicationStatusVal> getReplicationRemainingEntries() {\n         Map<String, ReplicationStatusVal> replicationStatusMap = new HashMap<>();\n         QueryResult<CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>> entries =\n-                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, (x) -> {return true;});\n+                corfuStore.query(NAMESPACE).executeQuery(REPLICATION_STATUS_TABLE, record -> true);\n \n         for(CorfuStoreEntry<ReplicationStatusKey, ReplicationStatusVal, ReplicationStatusVal>entry : entries.getResult()) {\n             replicationStatusMap.put(entry.getKey().getClusterId(), entry.getPayload());\n         }\n+\n+        log.debug(\"getReplicationRemainingEntries: replicationStatusMap size: {}\", replicationStatusMap.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NzcwMjI0", "url": "https://github.com/CorfuDB/CorfuDB/pull/2736#pullrequestreview-474770224", "createdAt": "2020-08-25T19:03:48Z", "commit": {"oid": "6aafc9bd3753fcd92095cd285906c1b408fd90f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4003, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}