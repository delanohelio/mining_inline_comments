{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjI4ODcx", "number": 2380, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzowNDoyMlrODeLRsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzowNDoyMlrODeLRsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTY4NjI2OnYy", "diffSide": "RIGHT", "path": "runtime/src/main/java/org/corfudb/runtime/object/VersionLockedObject.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzowNDoyMlrOFnMyZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMzoyNDozNFrOFnNG8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0ODI5Mg==", "bodyText": "I don't think you need to check if direct access is possible since it is called right after the write lock is acquired.\nRemove it?\nIts possible that from the time the optimistic read happened to the time the lock was acquired the version can change back to the original access version, but this if-call is not necessary because if the VLO is at the right version then updateFunction.accept(this); will just be a no-op", "url": "https://github.com/CorfuDB/CorfuDB/pull/2380#discussion_r376648292", "createdAt": "2020-02-07T23:04:22Z", "author": {"login": "Maithem"}, "path": "runtime/src/main/java/org/corfudb/runtime/object/VersionLockedObject.java", "diffHunk": "@@ -243,13 +243,7 @@ public void gc(long trimMark) {\n             // Check if direct access is possible (unlikely).\n             if (directAccessCheckFunction.apply(this)) {\n                 log.trace(\"Access [{}] Direct (writelock) access at {}\", this, getVersionUnsafe());\n-                R ret = accessFunction.apply(object.getContext(ICorfuExecutionContext.DEFAULT));\n-\n-                long versionForCorrectness = getVersionUnsafe();\n-                if (lock.validate(ts)) {\n-                    correctnessLogger.trace(\"Version, {}\", versionForCorrectness);\n-                    return ret;\n-                }\n+                return accessFunction.apply(object.getContext(ICorfuExecutionContext.DEFAULT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd2ce900d22a0254fd1eff359f6f0f49613cb03"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY1MzU1NQ==", "bodyText": "Discussed offline, this can be an optimization in non-transactional read cases.", "url": "https://github.com/CorfuDB/CorfuDB/pull/2380#discussion_r376653555", "createdAt": "2020-02-07T23:24:34Z", "author": {"login": "WenbinZhu"}, "path": "runtime/src/main/java/org/corfudb/runtime/object/VersionLockedObject.java", "diffHunk": "@@ -243,13 +243,7 @@ public void gc(long trimMark) {\n             // Check if direct access is possible (unlikely).\n             if (directAccessCheckFunction.apply(this)) {\n                 log.trace(\"Access [{}] Direct (writelock) access at {}\", this, getVersionUnsafe());\n-                R ret = accessFunction.apply(object.getContext(ICorfuExecutionContext.DEFAULT));\n-\n-                long versionForCorrectness = getVersionUnsafe();\n-                if (lock.validate(ts)) {\n-                    correctnessLogger.trace(\"Version, {}\", versionForCorrectness);\n-                    return ret;\n-                }\n+                return accessFunction.apply(object.getContext(ICorfuExecutionContext.DEFAULT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0ODI5Mg=="}, "originalCommit": {"oid": "0dd2ce900d22a0254fd1eff359f6f0f49613cb03"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2000, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}