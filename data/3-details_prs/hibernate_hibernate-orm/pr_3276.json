{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDYzNDE0", "number": 3276, "title": "Wip/6.0 Various cosmetic code improvements", "bodyText": "The following obvious code improvements are done, including:\n\nunnecessary type specification (e.g. Collections.<PackageDescriptor>emptySet());\nunnecessary nullness checking (e.g. dataSourceConfigValue != null && String.class.isInstance( dataSourceConfigValue ));\nunnecessary string creation in StringBuilder (e.g. buffer.append( sql.substring( 0, pos ) ));\nmany others\n\nShould be easy to review and verify.", "createdAt": "2020-03-01T16:17:16Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3276", "merged": true, "mergeCommit": {"oid": "adc87b790849a1d265b973f933be7c1895f1cf4a"}, "closed": true, "closedAt": "2020-03-19T18:12:13Z", "author": {"login": "NathanQingyangXu"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJbk8BgFqTM2Njg2OTg4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO4zJHABqjMxNDE4OTkwNzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODY5ODg0", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-366869884", "createdAt": "2020-03-01T16:19:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoxOToxMVrOFwO7pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoxOToxMVrOFwO7pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEyMDYxNQ==", "bodyText": "we don't need key checking when we simply wanna remove it, regardless of whether it exists or not.", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386120615", "createdAt": "2020-03-01T16:19:11Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/boot/internal/InFlightMetadataCollectorImpl.java", "diffHunk": "@@ -688,7 +688,7 @@ public void applyResultSetMapping(NamedResultSetMappingDefinition resultSetMappi\n \t@Override\n \tpublic void addDefaultResultSetMapping(NamedResultSetMappingDefinition definition) {\n \t\tfinal String name = definition.getRegistrationName();\n-\t\tif ( !defaultSqlResultSetMappingNames.contains( name ) && sqlResultSetMappingMap.containsKey( name ) ) {\n+\t\tif ( !defaultSqlResultSetMappingNames.contains( name ) ) {\n \t\t\tsqlResultSetMappingMap.remove( name );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODcwMDE5", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-366870019", "createdAt": "2020-03-01T16:21:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoyMTozN1rOFwO8WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoyMTozN1rOFwO8WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEyMDc5Mw==", "bodyText": "We don't need nullness checking for either instanceof or Class#isInstance() will take care of that already", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386120793", "createdAt": "2020-03-01T16:21:37Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/context/internal/ThreadLocalSessionContext.java", "diffHunk": "@@ -111,7 +111,7 @@ private boolean needsWrapping(Session session) {\n \t\t// try to make sure we don't wrap and already wrapped session\n \t\tif ( Proxy.isProxyClass( session.getClass() ) ) {\n \t\t\tfinal InvocationHandler invocationHandler = Proxy.getInvocationHandler( session );\n-\t\t\tif ( invocationHandler != null && TransactionProtectionWrapper.class.isInstance( invocationHandler ) ) {\n+\t\t\tif ( TransactionProtectionWrapper.class.isInstance( invocationHandler ) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODcwMTkx", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-366870191", "createdAt": "2020-03-01T16:24:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoyNDozNVrOFwO9Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjoyNDozNVrOFwO9Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEyMDk3NQ==", "bodyText": "JDK8's method reference can simplify our code clutter dramatically", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386120975", "createdAt": "2020-03-01T16:24:35Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/function/TimestampaddFunction.java", "diffHunk": "@@ -90,8 +90,7 @@ public SelfRenderingFunctionSqlAstExpression expression(\n \t\t\tSqlAstNode... sqlAstArguments) {\n \t\tExpression to = (Expression) sqlAstArguments[2];\n \t\treturn new SelfRenderingFunctionSqlAstExpression(\n-\t\t\t\t(sqlAppender, sqlAstArguments1, walker)\n-\t\t\t\t\t\t-> render(sqlAppender, sqlAstArguments1, walker),\n+\t\t\t\tthis::render,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODgwMTUz", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-366880153", "createdAt": "2020-03-01T19:23:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxOToyMzowOVrOFwPtUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxOToyMzowOVrOFwPtUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzMzMyOA==", "bodyText": "Seems there is no reason to use putIfAbsent. put should be enough for initial map population.", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386133328", "createdAt": "2020-03-01T19:23:09Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/FastSessionServices.java", "diffHunk": "@@ -221,11 +221,11 @@ private static boolean isTransactionAccessible(SessionFactoryImpl sf, Transactio\n \t\tHashMap<String,Object> p = new HashMap<>();\n \n \t\t//Static defaults:\n-\t\tp.putIfAbsent( AvailableSettings.FLUSH_MODE, FlushMode.AUTO.name() );\n-\t\tp.putIfAbsent( JPA_LOCK_SCOPE, PessimisticLockScope.EXTENDED.name() );\n-\t\tp.putIfAbsent( JPA_LOCK_TIMEOUT, LockOptions.WAIT_FOREVER );\n-\t\tp.putIfAbsent( JPA_SHARED_CACHE_RETRIEVE_MODE, CacheModeHelper.DEFAULT_RETRIEVE_MODE );\n-\t\tp.putIfAbsent( JPA_SHARED_CACHE_STORE_MODE, CacheModeHelper.DEFAULT_STORE_MODE );\n+\t\tp.put( AvailableSettings.FLUSH_MODE, FlushMode.AUTO.name() );\n+\t\tp.put( JPA_LOCK_SCOPE, PessimisticLockScope.EXTENDED.name() );\n+\t\tp.put( JPA_LOCK_TIMEOUT, LockOptions.WAIT_FOREVER );\n+\t\tp.put( JPA_SHARED_CACHE_RETRIEVE_MODE, CacheModeHelper.DEFAULT_RETRIEVE_MODE );\n+\t\tp.put( JPA_SHARED_CACHE_STORE_MODE, CacheModeHelper.DEFAULT_STORE_MODE );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDg4NDcw", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-367088470", "createdAt": "2020-03-02T10:22:57Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyMjo1N1rOFwaV8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyMjo1N1rOFwaV8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwNzU3MA==", "bodyText": "just my personal opinion but not sure this helps code readability", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386307570", "createdAt": "2020-03-02T10:22:57Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/StatefulPersistenceContext.java", "diffHunk": "@@ -408,7 +408,7 @@ public Object getEntity(EntityKey key) {\n \n \t@Override\n \tpublic boolean containsEntity(EntityKey key) {\n-\t\treturn entitiesByKey == null ? false : entitiesByKey.containsKey( key );\n+\t\treturn entitiesByKey != null && entitiesByKey.containsKey( key );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDg4Njc4", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#pullrequestreview-367088678", "createdAt": "2020-03-02T10:23:16Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyMzoxNlrOFwaWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyMzoxNlrOFwaWiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMwNzcyMQ==", "bodyText": "just my personal opinion but not sure this helps code readability", "url": "https://github.com/hibernate/hibernate-orm/pull/3276#discussion_r386307721", "createdAt": "2020-03-02T10:23:16Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/main/java/org/hibernate/cfg/AbstractPropertyHolder.java", "diffHunk": "@@ -134,7 +134,7 @@ protected ConverterDescriptor makeAttributeConverterDescriptor(AttributeConversi\n \n \t@Override\n \tpublic boolean isInIdClass() {\n-\t\treturn isInIdClass != null ? isInIdClass : parent != null ? parent.isInIdClass() : false;\n+\t\treturn isInIdClass != null ? isInIdClass : ( parent != null && parent.isInIdClass() );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "331a00fe003cad5f2f01f07b447218f63489ac6e", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/331a00fe003cad5f2f01f07b447218f63489ac6e", "committedDate": "2020-03-18T15:11:20Z", "message": "various cosmetic code improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "331a00fe003cad5f2f01f07b447218f63489ac6e", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/331a00fe003cad5f2f01f07b447218f63489ac6e", "committedDate": "2020-03-18T15:11:20Z", "message": "various cosmetic code improvements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3194, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}