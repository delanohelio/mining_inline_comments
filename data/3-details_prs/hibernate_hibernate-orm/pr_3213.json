{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5OTY1OTQz", "number": 3213, "title": "Binary literals", "bodyText": "This patch adds support to HQL for hexadecimal-format binary literals, using the standard SQL syntax X'deadbeef'.", "createdAt": "2020-02-02T03:11:59Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3213", "merged": true, "mergeCommit": {"oid": "cb3560de9626c6ad924c152053e5e0ed3b6196ad"}, "closed": true, "closedAt": "2020-02-05T15:33:09Z", "author": {"login": "gavinking"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAPjQXAFqTM1MTkxNjE3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBX1WrAFqTM1MzgwNDc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTE2MTc3", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#pullrequestreview-351916177", "createdAt": "2020-02-02T03:13:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzoxMFrOFkf6OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzoxMFrOFkf6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTg2NA==", "bodyText": "This old code wasn't consistent with how JDBC drivers handle the conversion from unsigned to signed bytes.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815864", "createdAt": "2020-02-02T03:13:10Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/ByteArrayTypeDescriptor.java", "diffHunk": "@@ -67,7 +67,7 @@ public String toString(Byte[] bytes) {\n \t\tByte[] bytes = new Byte[string.length() / 2];\n \t\tfor ( int i = 0; i < bytes.length; i++ ) {\n \t\t\tfinal String hexStr = string.substring( i * 2, (i + 1) * 2 );\n-\t\t\tbytes[i] = (byte) ( Integer.parseInt( hexStr, 16 ) + Byte.MIN_VALUE );\n+\t\t\tbytes[i] = (byte) Integer.parseInt( hexStr, 16 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTE2MTg4", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#pullrequestreview-351916188", "createdAt": "2020-02-02T03:13:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzozN1rOFkf6Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzozN1rOFkf6Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTg3OQ==", "bodyText": "This old code wasn't consistent with how JDBC drivers handle the conversion from unsigned to signed bytes.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815879", "createdAt": "2020-02-02T03:13:37Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.java", "diffHunk": "@@ -73,7 +73,7 @@ public String extractLoggableRepresentation(byte[] value) {\n \t\tbyte[] bytes = new byte[string.length() / 2];\n \t\tfor ( int i = 0; i < bytes.length; i++ ) {\n \t\t\tfinal String hexStr = string.substring( i * 2, (i + 1) * 2 );\n-\t\t\tbytes[i] = (byte) (Integer.parseInt(hexStr, 16) + Byte.MIN_VALUE);\n+\t\t\tbytes[i] = (byte) Integer.parseInt( hexStr, 16 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTE2MjE1", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#pullrequestreview-351916215", "createdAt": "2020-02-02T03:14:31Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxNDozMlrOFkf6bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxNDozMlrOFkf6bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTkxNg==", "bodyText": "I think this is the best thing to do on PostgreSQL, though I'm not 100% certain.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815916", "createdAt": "2020-02-02T03:14:32Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/PostgreSQLDialect.java", "diffHunk": "@@ -691,6 +691,11 @@ public String translateExtractField(TemporalUnit unit) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic String formatBinaryliteral(byte[] bytes) {\n+\t\treturn \"bytea '\\\\x\" + StandardBasicTypes.BINARY.toString( bytes ) + \"'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzMxMjEx", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#pullrequestreview-353731211", "createdAt": "2020-02-05T13:55:28Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzo1NToyOFrOFl4hdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzo1NToyOFrOFl4hdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI2NzcwMg==", "bodyText": "Can we use BINARY_LITERAL instead?  It's 3 extra characters and so much more immediately understandable.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r375267702", "createdAt": "2020-02-05T13:55:28Z", "author": {"login": "sebersole"}, "path": "hibernate-core/src/main/antlr/org/hibernate/grammars/hql/HqlLexer.g4", "diffHunk": "@@ -93,6 +93,10 @@ UNICODE_ESCAPE\n \t: 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT\n \t;\n \n+BIN_LITERAL", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "470cbc488b07ce6b5678c64c5c7f8ea0ae8ba521", "author": {"user": {"login": "gavinking", "name": "Gavin King"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/470cbc488b07ce6b5678c64c5c7f8ea0ae8ba521", "committedDate": "2020-02-05T14:34:30Z", "message": "Add hexadecimal binary literals with standard SQL syntax\n\nAnd fix up the parsing and formatting in VarbinaryTypeDescriptor which\nwas inconsistent with how the JDBC drivers handle the conversion to\nsigned bytes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "470cbc488b07ce6b5678c64c5c7f8ea0ae8ba521", "author": {"user": {"login": "gavinking", "name": "Gavin King"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/470cbc488b07ce6b5678c64c5c7f8ea0ae8ba521", "committedDate": "2020-02-05T14:34:30Z", "message": "Add hexadecimal binary literals with standard SQL syntax\n\nAnd fix up the parsing and formatting in VarbinaryTypeDescriptor which\nwas inconsistent with how the JDBC drivers handle the conversion to\nsigned bytes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3376468cec2b12060d48705bc4cf49f4cb4826e6", "author": {"user": {"login": "gavinking", "name": "Gavin King"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/3376468cec2b12060d48705bc4cf49f4cb4826e6", "committedDate": "2020-02-05T15:04:53Z", "message": "Allow binary literals to be specified in a Java byte-array-like format\n\nAllow you to write x'DEADBEEF' as {0xDE, 0xAD, 0xBE, 0xEF}.\n\nFor now I'm being quite restrictive here:\n\n- byte literals must be written in hexadecimal not in decimal\n- they must be exactly two digits in length\n\n(I would like to allow decimal format but I think that would start to\ncollide with other rules with braces in the grammar.)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODA0NzQ4", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#pullrequestreview-353804748", "createdAt": "2020-02-05T15:26:07Z", "commit": {"oid": "3376468cec2b12060d48705bc4cf49f4cb4826e6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3106, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}