{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTYyMjQ5", "number": 3539, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMToxMVrOEg-3Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMzozOFrOEg-5Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDE5ODE4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/antlr/sql-gen.g", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMToxMVrOHOD5lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMToxMVrOHOD5lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjAwNQ==", "bodyText": "The above changes include:\n\nadd ENTITY_JOIN to tableJoin so it can show up anywhere and SQL generated won't ignore it;\nchange the variable name to better reflect that ENTITY_JOIN is not special (original naming implies that it is only at the top level).", "url": "https://github.com/hibernate/hibernate-orm/pull/3539#discussion_r484506005", "createdAt": "2020-09-07T16:01:11Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/antlr/sql-gen.g", "diffHunk": "@@ -309,12 +309,13 @@ fromTable\n \t// Write the table node (from fragment) and all the join fragments associated with it.\n \t: #( a:FROM_FRAGMENT  { out(a); } (tableJoin [ a ])* { fromFragmentSeparator(a); } )\n \t| #( b:JOIN_FRAGMENT  { out(b); } (tableJoin [ b ])* { fromFragmentSeparator(b); } )\n-\t| #( e:ENTITY_JOIN    { out(e); } (tableJoin [ e ])* { fromFragmentSeparator(e); } )\n+\t| #( c:ENTITY_JOIN    { out(c); } (tableJoin [ c ])* { fromFragmentSeparator(c); } )\n \t;\n \n tableJoin [ AST parent ]\n-\t: #( c:JOIN_FRAGMENT { out(\" \"); out(c); } (tableJoin [ c ] )* )\n-\t| #( d:FROM_FRAGMENT { nestedFromFragment(d,parent); } (tableJoin [ d ] )* )\n+\t: #( d:JOIN_FRAGMENT { out(\" \"); out(d); } (tableJoin [ d ] )* )\n+\t| #( e:FROM_FRAGMENT { nestedFromFragment(e,parent); } (tableJoin [ e ] )* )\n+\t| #( f:ENTITY_JOIN   { out(\" \"); out(f); } (tableJoin [ f ] )* )\n \t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIwMzE5OnYy", "diffSide": "LEFT", "path": "hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/FromClause.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMzozOFrOHOD8ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMzozOFrOHOD8ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjc4Mg==", "bodyText": "Now the above field has been redundant for it is included in fromElements which reserves join order via LinkedHashSet.", "url": "https://github.com/hibernate/hibernate-orm/pull/3539#discussion_r484506782", "createdAt": "2020-09-07T16:03:38Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/internal/ast/tree/FromClause.java", "diffHunk": "@@ -61,8 +61,6 @@\n \t */\n \tprivate List impliedElements = new LinkedList();\n \n-\tprivate List<EntityJoinFromElement> entityJoinFromElements;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4177, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}