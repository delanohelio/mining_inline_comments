{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTgxODAz", "number": 3401, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxNzoyMjoyM1rOD9GiZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMDo0OToxMlrOD9HWKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mzk2ODM3OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxNzoyMjoyM1rOGWbhjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQxODozMzowMlrOGWb5_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw==", "bodyText": "@DavideD I'm not a big fan of this. I think it might be better to add a getQueryPlanCache() accessor to SessionFactoryImpl and override it on the subclass.", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426172813", "createdAt": "2020-05-16T17:22:23Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "diffHunk": "@@ -260,7 +265,7 @@ public SessionFactoryImpl(\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = new QueryPlanCache( this );\n+\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NjE3Ng==", "bodyText": "(You're passing a reference to a partially-uninitialized object to an arbitrary function. The subclass constructor hasn't been called at this point.)", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426176176", "createdAt": "2020-05-16T17:59:48Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "diffHunk": "@@ -260,7 +265,7 @@ public SessionFactoryImpl(\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = new QueryPlanCache( this );\n+\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}, "originalCommit": {"oid": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3NjYwNA==", "bodyText": "And note: you're using a function ref here precisely because you want to circumvent the JVM's restriction which is designed to prevent you doing exactly what you're doing here :-)", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426176604", "createdAt": "2020-05-16T18:03:51Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "diffHunk": "@@ -260,7 +265,7 @@ public SessionFactoryImpl(\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = new QueryPlanCache( this );\n+\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}, "originalCommit": {"oid": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3OTA3MA==", "bodyText": "You got me :) OK, I will change it", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426179070", "createdAt": "2020-05-16T18:33:02Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/SessionFactoryImpl.java", "diffHunk": "@@ -260,7 +265,7 @@ public SessionFactoryImpl(\n \t\tLOG.debugf( \"Session factory constructed with filter configurations : %s\", filters );\n \t\tLOG.debugf( \"Instantiating session factory with properties: %s\", properties );\n \n-\t\tthis.queryPlanCache = new QueryPlanCache( this );\n+\t\tthis.queryPlanCache = queryPlanCacheFunction.apply( this );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3MjgxMw=="}, "originalCommit": {"oid": "6a798f7ec5b5eefb4fa7f0e7795427c238eb761e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDEwMDkwOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "isResolved": true, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMDo0OToxMlrOGWckxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoxODoyMVrOGWwx2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ==", "bodyText": "Are you guys really using inheritance everywhere?  You really want to subclass all of these?  Why not just pass in functionals that can create the plan?  Then your SessionFactory (I assume you already subclass SessionFactory, Session, etc) can simply pass in a different one.\nI mean, feel free to keep subclassing everything, but personally I'd be trying to minimize what I need to subclass", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426190021", "createdAt": "2020-05-16T20:49:12Z", "author": {"login": "sebersole"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3MjgwNQ==", "bodyText": "@sebersole the new subclass RxHQLQueryPlan actually adds new public operations, it's not just overriding operations of HQLQueryPlan.\nOn the other hand, perhaps you're right about RxQueryPlanCache: I now notice we could probably eliminate that class and replace it by a new argument to QueryPlanCache. @DavideD do you want me to try and make that change?", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426472805", "createdAt": "2020-05-18T08:59:10Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4Mjk1NQ==", "bodyText": "I think I can take care of it. Let me give it a go.", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426482955", "createdAt": "2020-05-18T09:15:36Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NDQzNw==", "bodyText": "I've almost got it done.", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426484437", "createdAt": "2020-05-18T09:17:59Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NjYyMw==", "bodyText": "@DavideD can I push to your branch?", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426486623", "createdAt": "2020-05-18T09:21:27Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4NzI4NQ==", "bodyText": "You are talking about adding a function for the creation of the QueryPlanCache, isn't it? Can I add a new getHQLQueryPlan with this additional argument? Or do  need to keep the API of QueryPlanCache the same?", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426487285", "createdAt": "2020-05-18T09:22:29Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4Nzg3Nw==", "bodyText": "OK, push it on the branch. No problem", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426487877", "createdAt": "2020-05-18T09:23:23Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MTQ1MQ==", "bodyText": "@DavideD do I have permission?\nAuthentication failed for 'https://github.com/DavideD/hibernate-orm.git/'", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426491451", "createdAt": "2020-05-18T09:29:02Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5MjIxNA==", "bodyText": "Anyway the commit is c0ca156", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426492214", "createdAt": "2020-05-18T09:30:16Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ5NDcxNA==", "bodyText": "And the corresponding change to your patch to hibernate-reactive is gavinking/hibernate-reactive@2f3d48f", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426494714", "createdAt": "2020-05-18T09:34:32Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMTA1MQ==", "bodyText": "I've updated both PRs. I've squashed the commits in the Hibernate Reactive one", "url": "https://github.com/hibernate/hibernate-orm/pull/3401#discussion_r426521051", "createdAt": "2020-05-18T10:18:21Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/query/spi/QueryPlanCache.java", "diffHunk": "@@ -152,7 +153,7 @@ public HQLQueryPlan getHQLQueryPlan(String queryString, boolean shallow, Map<Str\n \t\t\tfinal long startTime = ( stats ) ? System.nanoTime() : 0L;\n \n \t\t\tLOG.tracev( \"Unable to locate HQL query plan in cache; generating ({0})\", queryString );\n-\t\t\tvalue = new HQLQueryPlan( queryString, shallow, enabledFilters, factory );\n+\t\t\tvalue = createHQLQueryPlan( queryString, shallow, enabledFilters, factory );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5MDAyMQ=="}, "originalCommit": {"oid": "4ff1e1891e67f3294007727d4c8561d7f5f2b3bb"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4003, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}