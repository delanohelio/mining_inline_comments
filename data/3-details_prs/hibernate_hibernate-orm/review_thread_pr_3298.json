{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDY4MDM1", "number": 3298, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1NzowOVrODnn-kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODozNFrODnoACg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc2MDUxOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/loader/ast/internal/LoaderSelectBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1NzowOVrOF1vC5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1NzowOVrOF1vC5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg4OTYzOQ==", "bodyText": "The boolean parameter to denote whether we are exploring 'keySubGraph' is important to disambiguate in entity graph implementing, so I changed Consumer to BiConsumer.", "url": "https://github.com/hibernate/hibernate-orm/pull/3298#discussion_r391889639", "createdAt": "2020-03-12T20:57:09Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/loader/ast/internal/LoaderSelectBuilder.java", "diffHunk": "@@ -366,36 +382,33 @@ private void applyOrdering(TableGroup tableGroup, PluralAttributeMapping pluralA\n \t\t}\n \t}\n \n-\tprivate void applyOrdering(\n-\t\t\tTableGroup tableGroup,\n-\t\t\tOrderByFragment orderByFragment) {\n+\tprivate void applyOrdering(TableGroup tableGroup, OrderByFragment orderByFragment) {\n \t\tif ( orderByFragments == null ) {\n \t\t\torderByFragments = new LinkedHashMap<>();\n \t\t}\n \t\torderByFragments.put( orderByFragment, tableGroup );\n \t}\n \n-\tprivate int fetchDepth = 0;\n-\n \tprivate List<Fetch> visitFetches(FetchParent fetchParent, QuerySpec querySpec, LoaderSqlAstCreationState creationState) {\n \t\tlog.tracef( \"Starting visitation of FetchParent's Fetchables : %s\", fetchParent.getNavigablePath() );\n \n \t\tfinal List<Fetch> fetches = new ArrayList<>();\n \n-\t\tfinal Consumer<Fetchable> processor = createFetchableConsumer( fetchParent, querySpec, creationState, fetches );\n+\t\tfinal BiConsumer<Fetchable, Boolean> processor = createFetchableBiConsumer( fetchParent, querySpec, creationState, fetches );\n \n \t\tfinal FetchableContainer referencedMappingContainer = fetchParent.getReferencedMappingContainer();\n-\t\treferencedMappingContainer.visitKeyFetchables( processor, null );\n-\t\treferencedMappingContainer.visitFetchables( processor, null );\n+\t\treferencedMappingContainer.visitKeyFetchables( fetchable -> processor.accept( fetchable, true ), null );\n+\t\treferencedMappingContainer.visitFetchables( fetchable -> processor.accept( fetchable, false ), null );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODc2NDI2OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/query/sqm/sql/internal/StandardSqmSelectTranslator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODozNFrOF1vFQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1ODozNFrOF1vFQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDI0MQ==", "bodyText": "I moved the field here for best practice. Also, it seems we don't need to set default value here.", "url": "https://github.com/hibernate/hibernate-orm/pull/3298#discussion_r391890241", "createdAt": "2020-03-12T20:58:34Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/query/sqm/sql/internal/StandardSqmSelectTranslator.java", "diffHunk": "@@ -86,7 +85,9 @@\n \t// prepare for 10 root selections to avoid list growth in most cases\n \tprivate final List<DomainResult> domainResults = CollectionHelper.arrayList( 10 );\n \n-\tprivate GraphImplementor<?> currentJpaGraphNode;\n+\tprivate final EntityGraphNavigator entityGraphNavigator;\n+\n+\tprivate int fetchDepth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}