{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NTM1NDgz", "number": 3354, "title": "wip/6.0 Implement filter for HQL/Criteria", "bodyText": "https://trello.com/c/KLZjWiX0/118-filter-support-for-hql-criteria\nAlso a followup for https://trello.com/c/RQxAqQaT/104-loaderselectbuilder-implement-use-of-loadqueryinfluencer, which was mainly focused on loader filter implementation.\nThe idiosyncrasy of @Filter and @FilterJointable feature is that they bring about additional JDBC parameter bindings. In last PR I registered these filter parameter bindings via QuerySpec which is tightly coupled with loader and not workable for HQL/Criteria. To support both loader and HQL/Criteria, this PR refactored previous implementation to store filter parameter to JdbcSelect instead, which accommodates both scenarios well. However, better idea is more than welcome!\nAs in last PR, extensive testing cases were added.", "createdAt": "2020-04-18T17:51:16Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3354", "merged": true, "mergeCommit": {"oid": "686a5196806953d65a0cb16c27a88e09faeb8d7c"}, "closed": true, "closedAt": "2020-04-21T22:08:21Z", "author": {"login": "NathanQingyangXu"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcY8qmdABqjMyNDg0MDU5MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ7IyPgFqTM5NjgxODkwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTU2ODUy", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#pullrequestreview-395956852", "createdAt": "2020-04-18T22:35:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjozNToxMlrOGHu7cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjozNToxMlrOGHu7cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc2MjA5OA==", "bodyText": "The above filter is not used for Client. Seems an overlooking and might be misleading.", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#discussion_r410762098", "createdAt": "2020-04-18T22:35:12Z", "author": {"login": "NathanQingyangXu"}, "path": "documentation/src/test/java/org/hibernate/userguide/pc/FilterJoinTableTest.java", "diffHunk": "@@ -118,10 +115,6 @@ public void testLifecycle() {\n             type=\"int\"\n         )\n     )\n-    @Filter(\n-        name=\"firstAccounts\",\n-        condition=\"order_id <= :maxOrderId\"\n-    )", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "committedDate": "2020-04-20T13:03:23Z", "message": "implement @Filter for HQL/Criteria"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/355aa7f1ae3b87eaa3236c5ca2717df3265c194d", "committedDate": "2020-04-20T13:03:23Z", "message": "implement @Filter for HQL/Criteria"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODE4OTAw", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#pullrequestreview-396818900", "createdAt": "2020-04-20T21:16:26Z", "commit": {"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowNDo0NVrOGJacLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowNDo0NVrOGJacLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzU2Nw==", "bodyText": "An enhancement here would be to support filtering on non-primary-table columns", "url": "https://github.com/hibernate/hibernate-orm/pull/3354#discussion_r412523567", "createdAt": "2020-04-21T22:04:45Z", "author": {"login": "sebersole"}, "path": "hibernate-core/src/main/java/org/hibernate/query/sqm/sql/internal/StandardSqmSelectTranslator.java", "diffHunk": "@@ -187,6 +195,24 @@ protected void prepareQuerySpec(QuerySpec sqlQuerySpec) {\n \n \t@Override\n \tprotected void postProcessQuerySpec(QuerySpec sqlQuerySpec) {\n+\t\tfinal List<TableGroup> roots = sqlQuerySpec.getFromClause().getRoots();\n+\t\tif ( roots != null && roots.size() == 1 ) {\n+\t\t\tfinal TableGroup root = roots.get( 0 );\n+\t\t\tfinal ModelPartContainer modelPartContainer = root.getModelPart();\n+\t\t\tfinal EntityPersister entityPersister = modelPartContainer.findContainingEntityMapping().getEntityPersister();\n+\t\t\tassert entityPersister instanceof AbstractEntityPersister;\n+\t\t\tfinal String primaryTableAlias = root.getPrimaryTableReference().getIdentificationVariable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355aa7f1ae3b87eaa3236c5ca2717df3265c194d"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3041, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}