{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NTc3Mjcx", "number": 3550, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoyNzoyN1rOEjIBWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NjowOFrOEjJPfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjY3MDM1OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/antlr/sql-gen.g", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoyNzoyOFrOHRTuuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozNjoyMFrOHRURCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxMTA5Nw==", "bodyText": "I might be wrong. It seems the SQL_TOKEN usually implies null ordDir and ordNul. Also, you might need to update the comment as well.", "url": "https://github.com/hibernate/hibernate-orm/pull/3550#discussion_r487911097", "createdAt": "2020-09-14T13:27:28Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/antlr/sql-gen.g", "diffHunk": "@@ -191,18 +191,15 @@ whereClauseExpr\n \t| booleanExpr[ false ]\n \t;\n \n-orderBySqlFragmentOrExprs\n-\t: sqlToken // for the purpose of mapping-defined orderBy SQL fragment\n-\t| orderExprs\n-\t;\n-\n orderExprs { String ordExp = null; String ordDir = null; String ordNul = null; }\n \t// TODO: remove goofy space before the comma when we don't have to regression test anymore.\n \t// Dialect is provided a hook to render each ORDER BY element, so the expression is being captured instead of\n \t// printing to the SQL output directly. See Dialect#renderOrderByElement(String, String, String, NullPrecedence).\n-\t: { captureExpressionStart(); } ( expr ) { captureExpressionFinish(); ordExp = resetCapture(); }\n+\t: { captureExpressionStart(); } ( e:expr ) { captureExpressionFinish(); ordExp = resetCapture(); }\n \t    (dir:orderDirection { ordDir = #dir.getText(); })? (ordNul=nullOrdering)?\n-\t        { out( renderOrderByElement( ordExp, ordDir, ordNul ) ); }\n+\t    // SQL Tokens without a direction and null ordering can be passed through as-is.\n+\t    // These tokens could be mapping defined order by fragments which are already rendered via the dialect hook\n+\t        { out( #e.getType() == SQL_TOKEN && ordDir == null && ordNul == null ? ordExp : renderOrderByElement( ordExp, ordDir, ordNul ) ); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxOTg4Mg==", "bodyText": "You are right! Thanks for the hint", "url": "https://github.com/hibernate/hibernate-orm/pull/3550#discussion_r487919882", "createdAt": "2020-09-14T13:36:20Z", "author": {"login": "beikov"}, "path": "hibernate-core/src/main/antlr/sql-gen.g", "diffHunk": "@@ -191,18 +191,15 @@ whereClauseExpr\n \t| booleanExpr[ false ]\n \t;\n \n-orderBySqlFragmentOrExprs\n-\t: sqlToken // for the purpose of mapping-defined orderBy SQL fragment\n-\t| orderExprs\n-\t;\n-\n orderExprs { String ordExp = null; String ordDir = null; String ordNul = null; }\n \t// TODO: remove goofy space before the comma when we don't have to regression test anymore.\n \t// Dialect is provided a hook to render each ORDER BY element, so the expression is being captured instead of\n \t// printing to the SQL output directly. See Dialect#renderOrderByElement(String, String, String, NullPrecedence).\n-\t: { captureExpressionStart(); } ( expr ) { captureExpressionFinish(); ordExp = resetCapture(); }\n+\t: { captureExpressionStart(); } ( e:expr ) { captureExpressionFinish(); ordExp = resetCapture(); }\n \t    (dir:orderDirection { ordDir = #dir.getText(); })? (ordNul=nullOrdering)?\n-\t        { out( renderOrderByElement( ordExp, ordDir, ordNul ) ); }\n+\t    // SQL Tokens without a direction and null ordering can be passed through as-is.\n+\t    // These tokens could be mapping defined order by fragments which are already rendered via the dialect hook\n+\t        { out( #e.getType() == SQL_TOKEN && ordDir == null && ordNul == null ? ordExp : renderOrderByElement( ordExp, ordDir, ordNul ) ); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxMTA5Nw=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mjg3MDM4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/antlr/sql-gen.g", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NjowOFrOHRViHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NjowOFrOHRViHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MDYzNw==", "bodyText": "so the above comment only applies in HQL. Now we allow for another possibility that \"printing to the SQL output directly\". We need to add more explanation to the comment above, for it is not accurate any more.", "url": "https://github.com/hibernate/hibernate-orm/pull/3550#discussion_r487940637", "createdAt": "2020-09-14T13:56:08Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/antlr/sql-gen.g", "diffHunk": "@@ -191,18 +191,15 @@ whereClauseExpr\n \t| booleanExpr[ false ]\n \t;\n \n-orderBySqlFragmentOrExprs\n-\t: sqlToken // for the purpose of mapping-defined orderBy SQL fragment\n-\t| orderExprs\n-\t;\n-\n orderExprs { String ordExp = null; String ordDir = null; String ordNul = null; }\n \t// TODO: remove goofy space before the comma when we don't have to regression test anymore.\n \t// Dialect is provided a hook to render each ORDER BY element, so the expression is being captured instead of\n \t// printing to the SQL output directly. See Dialect#renderOrderByElement(String, String, String, NullPrecedence).", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4186, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}