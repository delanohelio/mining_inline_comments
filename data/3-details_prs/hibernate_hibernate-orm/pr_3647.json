{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjA3MjMx", "number": 3647, "title": "HHH-13945: catch exception and fallback to call mapToMapFromEntity directly", "bodyText": "Fix: https://hibernate.atlassian.net/browse/HHH-13945\nIn HHH-13760, we tried to fix ClassCastException when Envers inserts audit rows that use lazy many-to-one mappings, but we didn't consider that there might be cases that the proxy object cannot initialized successfully. In our project, it's because the deleted object is an inherited object, and while hibernate tried to initialize the same object with parent class name, it will be the state that (1) not initialized (2) cannot load from session cache and 2nd cache (3) not existed in Data store, so the objectNotFoundException will be thrown.\nIn the bug discussion thread, there are other cases caused by the getImplementation() method. Add a fallback mechanism, so that we can try to eagerly initialize the proxy object, and if failed, call the mapToMapFromEntity directly as before.", "createdAt": "2020-11-17T07:40:45Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3647", "merged": true, "mergeCommit": {"oid": "e3a9ee61f2fb749e9e470971d7d53b3f9ecc73bb"}, "closed": true, "closedAt": "2020-11-23T12:52:21Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZKaPJgH2gAyNTIyMjA3MjMxOjlhOGViMGVhMmUwYmNlMTUwYzRiMTcwYmQ3MWZjMTYxMmQ0OTAwNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeO6p3ABqjQwMTg5NTAzNTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a8eb0ea2e0bce150c4b170bd71fc1612d490059", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/9a8eb0ea2e0bce150c4b170bd71fc1612d490059", "committedDate": "2020-11-04T09:33:03Z", "message": "HHH-13945: fallback to call map if exception thrown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dbb5f7c216397244b7f3e9594d3a91803eec852", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/9dbb5f7c216397244b7f3e9594d3a91803eec852", "committedDate": "2020-11-17T02:21:57Z", "message": "Merge branch 'master' of https://github.com/hibernate/hibernate-orm into HHH-13945"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e91f57c976633b5a08149011444b66a3b84d96b", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/1e91f57c976633b5a08149011444b66a3b84d96b", "committedDate": "2020-11-17T07:24:55Z", "message": "HHH-13945: catch PersistenceException during envers unproxy the field value, and fallback to using proxy entity"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNjIwODM5", "url": "https://github.com/hibernate/hibernate-orm/pull/3647#pullrequestreview-533620839", "createdAt": "2020-11-18T16:21:21Z", "commit": {"oid": "1e91f57c976633b5a08149011444b66a3b84d96b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoyMToyMVrOH1199Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoyMToyMVrOH1199Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMDc4OQ==", "bodyText": "IMO the exception should at least be logged with a DEBUG level. Since this throws a PersistenceException I assume that this will cause a transaction rollback due to the semantics of JPA, so this might not be the best way to fix this. Can you verify if the TX is marked as rollback only here?", "url": "https://github.com/hibernate/hibernate-orm/pull/3647#discussion_r526220789", "createdAt": "2020-11-18T16:21:21Z", "author": {"login": "beikov"}, "path": "hibernate-envers/src/main/java/org/hibernate/envers/internal/entities/mapper/relation/ToOneIdMapper.java", "diffHunk": "@@ -58,8 +60,16 @@ public boolean mapToMapFromEntity(\n \t\t// bi-directional relation, we always store the \"old\", unchanged data, to prevent storing changes made\n \t\t// to this field. It is the responsibility of the collection to properly update it if it really changed.\n \t\tObject entity = nonInsertableFake ? oldObj : newObj;\n+\n+\t\t// fix HHH-13760 - try to aggressively un-proxy this entity to help get the correct type of data later\n+\t\t// in mapToMapFromEntity. But it might fail while getImplementation() if object is deleted or other reasons.\n+\t\t// We catch the exception and fallback to call mapToMapFromEntity directly with the HibernateProxy entity\n \t\tif ( lazyMapping && entity instanceof HibernateProxy ) {\n-\t\t\tentity = ( (HibernateProxy) entity ).getHibernateLazyInitializer().getImplementation();\n+\t\t\ttry {\n+\t\t\t\tentity = ((HibernateProxy) entity).getHibernateLazyInitializer().getImplementation();\n+\t\t\t} catch ( PersistenceException e ) {\n+\t\t\t\t// Ignore the exception and fallback to call mapToMapFromEntity directly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f57c976633b5a08149011444b66a3b84d96b"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "8080da2ac098b29cbfec4128fa4caf6eb3118a53", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8080da2ac098b29cbfec4128fa4caf6eb3118a53", "committedDate": "2020-11-20T03:37:27Z", "message": "HHH-13945: add debug log during exception thrown"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8080da2ac098b29cbfec4128fa4caf6eb3118a53", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8080da2ac098b29cbfec4128fa4caf6eb3118a53", "committedDate": "2020-11-20T03:37:27Z", "message": "HHH-13945: add debug log during exception thrown"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2788, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}