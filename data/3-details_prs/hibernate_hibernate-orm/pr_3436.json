{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTQyNzU3", "number": 3436, "title": "HHH-14075: Changes to loaders and TwoPhaseLoad to allow \"internal\" loading to be\u2026", "bodyText": "\u2026 reused by hibernate-reactive\nhttps://hibernate.atlassian.net/browse/HHH-14075\nIncludes the following changes.\n\nBreak TwoPhaseLoad into 2 methods, #initializeEntityEntryLoadedState and #initializeEntityFromEntityEntryLoadedState. #initializeEntityEntryLoadedState takes an argument of type EntityResolver, which is responsible for resolving to-one entity properties.\nA method was extracted from Loader#processResultSet, #getRowsFromResultSet, which reads all the rows from the ResultSet.\nSome methods in Loader and OuterJoinLoader were changed to protected or public, as needed so that Reactive implementations could make them public.\nChanges to AbstractLoadPlanBasedEntityLoader, AbstractLoadQueryDetails, EntityLoadQueryDetails, BatchingLoadQueryDetailsFactory, to allow a ResultSetProcessorResolver to be provided by an implementation of AbstractLoadPlanBasedEntityLoader\nChanges to ResultSetProcessorImpl to allow hibernate-reactive loaders to extend it so that it can process the ResultSet and resolve hydrated objects reactively.\nAdded EntityType#isEager(Boolean overridingEager) in order to determine if an entity attribute being resolved by TwoPhaseLoad#initializeEntity will be eager.", "createdAt": "2020-06-17T23:16:18Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3436", "merged": true, "mergeCommit": {"oid": "467203e8c4e5f2467e7066aae5144eb8b59de449"}, "closed": true, "closedAt": "2020-06-22T09:03:35Z", "author": {"login": "gbadner"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsSM_lAH2gAyNDM2MTQyNzU3Ojg0MzM5NWI2YTZhYjdkNzAxYjQzZjIwOTJmY2YwNjQ5NTQxMGRjNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcttEk2AFqTQzNDczNTEyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "843395b6a6ab7d701b43f2092fcf06495410dc65", "author": {"user": {"login": "gbadner", "name": null}}, "url": "https://github.com/hibernate/hibernate-orm/commit/843395b6a6ab7d701b43f2092fcf06495410dc65", "committedDate": "2020-06-17T23:11:14Z", "message": "HHH-14075 : Changes to loaders and TwoPhaseLoad to allow \"internal\" loading to be reused by hibernate-reactive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMDY2ODQy", "url": "https://github.com/hibernate/hibernate-orm/pull/3436#pullrequestreview-433066842", "createdAt": "2020-06-18T08:42:45Z", "commit": {"oid": "843395b6a6ab7d701b43f2092fcf06495410dc65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjIwOTY1", "url": "https://github.com/hibernate/hibernate-orm/pull/3436#pullrequestreview-434220965", "createdAt": "2020-06-19T16:56:11Z", "commit": {"oid": "843395b6a6ab7d701b43f2092fcf06495410dc65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1NjoxMVrOGmbfiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1NjoxMVrOGmbfiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0OTUxMw==", "bodyText": "If this method is exposed to the public, we might change the last parameter type to Iterable<? extends PreloadEventListener> to be more robust. Not 100% sure, though.", "url": "https://github.com/hibernate/hibernate-orm/pull/3436#discussion_r442949513", "createdAt": "2020-06-19T16:56:11Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/TwoPhaseLoad.java", "diffHunk": "@@ -229,18 +248,36 @@ else if ( value != PropertyAccessStrategyBackRefImpl.UNKNOWN ) {\n \n \t\t\t\t// we know value != LazyPropertyInitializer.UNFETCHED_PROPERTY\n \t\t\t\tBoolean overridingEager = getOverridingEager( session, entityName, propertyNames[i], types[i], debugEnabled );\n-\t\t\t\thydratedState[i] = types[i].resolve( value, session, entity, overridingEager );\n+\t\t\t\thydratedState[i] = types[i].isEntityType()\n+\t\t\t\t\t\t? entityResolver.resolve( (EntityType) types[i], value, session, entity, overridingEager )\n+\t\t\t\t\t\t: types[i].resolve( value, session, entity, overridingEager );\n \t\t\t}\n \t\t\telse {\n \t\t\t\tif ( debugEnabled ) {\n \t\t\t\t\tLOG.debugf( \"Skipping <unknown> attribute : `%s`\", propertyNames[i] );\n \t\t\t\t}\n \t\t\t}\n-\t\t\t\n+\n \t\t\tif ( session.getFetchGraphLoadContext() != fetchGraphContext ) {\n \t\t\t\tsession.setFetchGraphLoadContext( fetchGraphContext );\n \t\t\t}\n \t\t}\n+\t}\n+\n+\tpublic static void initializeEntityFromEntityEntryLoadedState(\n+\t\t\tfinal Object entity,\n+\t\t\tfinal EntityEntry entityEntry,\n+\t\t\tfinal boolean readOnly,\n+\t\t\tfinal SharedSessionContractImplementor session,\n+\t\t\tfinal PreLoadEvent preLoadEvent,\n+\t\t\tfinal Iterable<PreLoadEventListener> preLoadEventListeners) throws HibernateException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843395b6a6ab7d701b43f2092fcf06495410dc65"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NzM1MTI5", "url": "https://github.com/hibernate/hibernate-orm/pull/3436#pullrequestreview-434735129", "createdAt": "2020-06-22T09:03:24Z", "commit": {"oid": "843395b6a6ab7d701b43f2092fcf06495410dc65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}