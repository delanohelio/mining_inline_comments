{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NjMzNTg1", "number": 3260, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxNzoxNlrODiveNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0Njo0OVrODiwOhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzU1OTU3OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxNzoxNlrOFuKFtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0MDo1MVrOFuLDXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0NDExOQ==", "bodyText": "I guess all the long executeStartNanos= 0 lines here are missing a space after executeStartNanos", "url": "https://github.com/hibernate/hibernate-orm/pull/3260#discussion_r383944119", "createdAt": "2020-02-25T15:17:16Z", "author": {"login": "kortov"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.java", "diffHunk": "@@ -46,9 +46,9 @@ public ResultSetReturnImpl(JdbcCoordinator jdbcCoordinator, JdbcServices jdbcSer\n \t@Override\n \tpublic ResultSet extract(PreparedStatement statement) {\n \t\t// IMPL NOTE : SQL logged by caller\n-\t\tlong executeStart = 0;\n+\t\tlong executeStartNanos= 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1MjIxNg==", "bodyText": "Thanks for spotting it. I fixed it and rebased it.", "url": "https://github.com/hibernate/hibernate-orm/pull/3260#discussion_r383952216", "createdAt": "2020-02-25T15:29:36Z", "author": {"login": "vladmihalcea"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.java", "diffHunk": "@@ -46,9 +46,9 @@ public ResultSetReturnImpl(JdbcCoordinator jdbcCoordinator, JdbcServices jdbcSer\n \t@Override\n \tpublic ResultSet extract(PreparedStatement statement) {\n \t\t// IMPL NOTE : SQL logged by caller\n-\t\tlong executeStart = 0;\n+\t\tlong executeStartNanos= 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0NDExOQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk1OTkwMg==", "bodyText": "Saw @Sanne 's comment on your ticket. I don't know too much about it, but it seems another exciting PR from Vlad. I approved this for I saw no room for improvement in terms of code quality and my approval is purely based on that.", "url": "https://github.com/hibernate/hibernate-orm/pull/3260#discussion_r383959902", "createdAt": "2020-02-25T15:40:51Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/internal/ResultSetReturnImpl.java", "diffHunk": "@@ -46,9 +46,9 @@ public ResultSetReturnImpl(JdbcCoordinator jdbcCoordinator, JdbcServices jdbcSer\n \t@Override\n \tpublic ResultSet extract(PreparedStatement statement) {\n \t\t// IMPL NOTE : SQL logged by caller\n-\t\tlong executeStart = 0;\n+\t\tlong executeStartNanos= 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0NDExOQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzY4MzI0OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/spi/SqlStatementLogger.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0Njo0OVrOFuLT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0Njo0OVrOFuLT3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NDEyNw==", "bodyText": "I would suggest providing more clue about  the exception like\nthrow new IllegalArgumentException( \"startTimeNanos [\" + startTimeNanos + \"] should be greater than 0!\" );\n\nto help debugger a little bit.", "url": "https://github.com/hibernate/hibernate-orm/pull/3260#discussion_r383964127", "createdAt": "2020-02-25T15:46:49Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/jdbc/spi/SqlStatementLogger.java", "diffHunk": "@@ -134,34 +135,34 @@ public void logStatement(String statement, Formatter formatter) {\n \t * Log a slow SQL query\n \t *\n \t * @param statement SQL statement.\n-\t * @param startTime Start time in milliseconds.\n+\t * @param startTimeNanos Start time in nanoseconds.\n \t */\n-\tpublic void logSlowQuery(Statement statement, long startTime) {\n+\tpublic void logSlowQuery(Statement statement, long startTimeNanos) {\n \t\tif ( logSlowQuery < 1 ) {\n \t\t\treturn;\n \t\t}\n-\t\tlogSlowQuery( statement.toString(), startTime );\n+\t\tlogSlowQuery( statement.toString(), startTimeNanos );\n \t}\n \n \t/**\n \t * Log a slow SQL query\n \t *\n \t * @param sql The SQL query.\n-\t * @param startTime Start time in milliseconds.\n+\t * @param startTimeNanos Start time in nanoseconds.\n \t */\n \t@AllowSysOut\n-\tpublic void logSlowQuery(String sql, long startTime) {\n+\tpublic void logSlowQuery(String sql, long startTimeNanos) {\n \t\tif ( logSlowQuery < 1 ) {\n \t\t\treturn;\n \t\t}\n-\t\tassert startTime > 0 : \"startTime is invalid!\";\n-\n-\t\tlong spent = System.currentTimeMillis() - startTime;\n+\t\tif ( startTimeNanos <= 0 ) {\n+\t\t\tthrow new IllegalArgumentException( \"startTimeNanos should be greater than 0!\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b2aca26d1891c0544973a923d3f7154cdf7209"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4045, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}