{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDY5MzYz", "number": 3490, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo0NzoyNFrOEUl1YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo0NzoyNFrOEUl1YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDI2ODQ4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/test/java/org/hibernate/test/annotations/manytoone/NotNullManyToOneTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo0NzoyNFrOG64JQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjo1NToyM1rOG64ZKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5MDQ2NA==", "bodyText": "the method name is a little bit confusing for the real issue is null parent", "url": "https://github.com/hibernate/hibernate-orm/pull/3490#discussion_r464390464", "createdAt": "2020-08-03T12:47:24Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/test/java/org/hibernate/test/annotations/manytoone/NotNullManyToOneTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.hibernate.test.annotations.manytoone;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.validation.constraints.NotNull;\n+\n+import org.hibernate.cfg.AvailableSettings;\n+import org.hibernate.cfg.Configuration;\n+import org.hibernate.cfg.beanvalidation.ValidationMode;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.hibernate.testing.junit4.BaseCoreFunctionalTestCase;\n+import org.junit.Test;\n+\n+/**\n+ * @author Andrea Boriero\n+ */\n+@TestForIssue(jiraKey = \"HHH-13959\")\n+public class NotNullManyToOneTest extends BaseCoreFunctionalTestCase {\n+\n+\t@Override\n+\tprotected void configure(Configuration configuration) {\n+\t\tconfiguration.setProperty( AvailableSettings.JPA_VALIDATION_MODE, ValidationMode.AUTO.name() );\n+\t}\n+\n+\t@Override\n+\tprotected Class<?>[] getAnnotatedClasses() {\n+\t\treturn new Class[] {\n+\t\t\t\tParent.class,\n+\t\t\t\tChild.class\n+\t\t};\n+\t}\n+\n+\t@Test\n+\tpublic void testSave() {\n+\t\tinTransaction(\n+\t\t\t\tsession -> {\n+\t\t\t\t\tParent parent = new Parent( new Child() );\n+\t\t\t\t\tsession.save( parent );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test(expected = javax.validation.ConstraintViolationException.class)\n+\tpublic void testSaveWithNullChild() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5NDUzNg==", "bodyText": "fixed it, Thanks", "url": "https://github.com/hibernate/hibernate-orm/pull/3490#discussion_r464394536", "createdAt": "2020-08-03T12:55:23Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/test/java/org/hibernate/test/annotations/manytoone/NotNullManyToOneTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.hibernate.test.annotations.manytoone;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.validation.constraints.NotNull;\n+\n+import org.hibernate.cfg.AvailableSettings;\n+import org.hibernate.cfg.Configuration;\n+import org.hibernate.cfg.beanvalidation.ValidationMode;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.hibernate.testing.junit4.BaseCoreFunctionalTestCase;\n+import org.junit.Test;\n+\n+/**\n+ * @author Andrea Boriero\n+ */\n+@TestForIssue(jiraKey = \"HHH-13959\")\n+public class NotNullManyToOneTest extends BaseCoreFunctionalTestCase {\n+\n+\t@Override\n+\tprotected void configure(Configuration configuration) {\n+\t\tconfiguration.setProperty( AvailableSettings.JPA_VALIDATION_MODE, ValidationMode.AUTO.name() );\n+\t}\n+\n+\t@Override\n+\tprotected Class<?>[] getAnnotatedClasses() {\n+\t\treturn new Class[] {\n+\t\t\t\tParent.class,\n+\t\t\t\tChild.class\n+\t\t};\n+\t}\n+\n+\t@Test\n+\tpublic void testSave() {\n+\t\tinTransaction(\n+\t\t\t\tsession -> {\n+\t\t\t\t\tParent parent = new Parent( new Child() );\n+\t\t\t\t\tsession.save( parent );\n+\t\t\t\t}\n+\t\t);\n+\t}\n+\n+\t@Test(expected = javax.validation.ConstraintViolationException.class)\n+\tpublic void testSaveWithNullChild() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5MDQ2NA=="}, "originalCommit": null, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}