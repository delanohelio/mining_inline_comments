{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5OTY1OTQz", "number": 3213, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzoxMFrODcciAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzo1NToyOFrODdVtmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTU0MTc4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/ByteArrayTypeDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzoxMFrOFkf6OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzoxMFrOFkf6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTg2NA==", "bodyText": "This old code wasn't consistent with how JDBC drivers handle the conversion from unsigned to signed bytes.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815864", "createdAt": "2020-02-02T03:13:10Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/ByteArrayTypeDescriptor.java", "diffHunk": "@@ -67,7 +67,7 @@ public String toString(Byte[] bytes) {\n \t\tByte[] bytes = new Byte[string.length() / 2];\n \t\tfor ( int i = 0; i < bytes.length; i++ ) {\n \t\t\tfinal String hexStr = string.substring( i * 2, (i + 1) * 2 );\n-\t\t\tbytes[i] = (byte) ( Integer.parseInt( hexStr, 16 ) + Byte.MIN_VALUE );\n+\t\t\tbytes[i] = (byte) Integer.parseInt( hexStr, 16 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTU0MTkwOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzozN1rOFkf6Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxMzozN1rOFkf6Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTg3OQ==", "bodyText": "This old code wasn't consistent with how JDBC drivers handle the conversion from unsigned to signed bytes.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815879", "createdAt": "2020-02-02T03:13:37Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.java", "diffHunk": "@@ -73,7 +73,7 @@ public String extractLoggableRepresentation(byte[] value) {\n \t\tbyte[] bytes = new byte[string.length() / 2];\n \t\tfor ( int i = 0; i < bytes.length; i++ ) {\n \t\t\tfinal String hexStr = string.substring( i * 2, (i + 1) * 2 );\n-\t\t\tbytes[i] = (byte) (Integer.parseInt(hexStr, 16) + Byte.MIN_VALUE);\n+\t\t\tbytes[i] = (byte) Integer.parseInt( hexStr, 16 );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTU0MjE3OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/dialect/PostgreSQLDialect.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxNDozMlrOFkf6bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMzoxNDozMlrOFkf6bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTkxNg==", "bodyText": "I think this is the best thing to do on PostgreSQL, though I'm not 100% certain.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r373815916", "createdAt": "2020-02-02T03:14:32Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/PostgreSQLDialect.java", "diffHunk": "@@ -691,6 +691,11 @@ public String translateExtractField(TemporalUnit unit) {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic String formatBinaryliteral(byte[] bytes) {\n+\t\treturn \"bytea '\\\\x\" + StandardBasicTypes.BINARY.toString( bytes ) + \"'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDkxMDMzOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/antlr/org/hibernate/grammars/hql/HqlLexer.g4", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzo1NToyOFrOFl4hdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDoyNDo0MlrOFl5iqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI2NzcwMg==", "bodyText": "Can we use BINARY_LITERAL instead?  It's 3 extra characters and so much more immediately understandable.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r375267702", "createdAt": "2020-02-05T13:55:28Z", "author": {"login": "sebersole"}, "path": "hibernate-core/src/main/antlr/org/hibernate/grammars/hql/HqlLexer.g4", "diffHunk": "@@ -93,6 +93,10 @@ UNICODE_ESCAPE\n \t: 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT\n \t;\n \n+BIN_LITERAL", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI4NDM5NQ==", "bodyText": "Sure.", "url": "https://github.com/hibernate/hibernate-orm/pull/3213#discussion_r375284395", "createdAt": "2020-02-05T14:24:42Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/antlr/org/hibernate/grammars/hql/HqlLexer.g4", "diffHunk": "@@ -93,6 +93,10 @@ UNICODE_ESCAPE\n \t: 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT\n \t;\n \n+BIN_LITERAL", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI2NzcwMg=="}, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4008, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}