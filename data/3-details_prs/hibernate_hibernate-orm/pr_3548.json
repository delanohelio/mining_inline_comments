{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTg2ODU2", "number": 3548, "title": "HHH-14212 Ultimate Fetch Graph fix", "bodyText": "https://hibernate.atlassian.net/browse/HHH-14212\nThis ticket exposes another regression issue and it forced me to re-consider the previous Fetch Graph implementation I initiated previously. It is becoming more and more difficult to maintain and obviously it is full of bugs and terribly fragile.\nFinally I figured out we have a much simpler way to implement Fetch Graph we overlooked previously:\n\nrevert back all the previous PRs related to Fetch Graph implementation and bug fixing (HHH-8776, HHH-14097, HHH-14124);\nsimply add a logic in TwoPhaseLoad class to check whether Fetch Graph is in effective for now; return false if so in the internal getOverridingEager() method in TwoPhaseLoad class.\n\nThe reason is our HQL to SQL step has added all the JOINs already and we simply keep from loading any other entities during hydrating phase. We don't need to duplicate Fetch Graph enforcement for another time!  Boom, all of sudden, we solve the Fetch Graph issue in a simple and elegant way. My previous initial implementation is purely misled.\nI intentionally organized the commit list to streamline code review. All the commits except the last one are reverting back previous PR commits. You can go to the last commit directly to understand the new implementation: 4685606", "createdAt": "2020-09-13T14:04:35Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3548", "merged": true, "mergeCommit": {"oid": "99a4edfac0ed31f2cfedfd7cbfb5e5a32edf114f"}, "closed": true, "closedAt": "2020-09-22T06:06:50Z", "author": {"login": "NathanQingyangXu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIfLiGgFqTQ4NzMxMDQzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLGSjjABqjM3ODk2NDE0NTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzEwNDM1", "url": "https://github.com/hibernate/hibernate-orm/pull/3548#pullrequestreview-487310435", "createdAt": "2020-09-13T14:08:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDowODoxN1rOHQ8tnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDowODoxN1rOHQ8tnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMzk4MA==", "bodyText": "The above one-liner is the gist of the ultimate fix. Its comment is self-explanatory.", "url": "https://github.com/hibernate/hibernate-orm/pull/3548#discussion_r487533980", "createdAt": "2020-09-13T14:08:17Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/engine/internal/TwoPhaseLoad.java", "diffHunk": "@@ -465,25 +428,14 @@ private static Boolean getOverridingEager(\n \t\t// Performance: check type.isCollectionType() first, as type.isAssociationType() is megamorphic\n \t\tif ( associationType.isCollectionType() || associationType.isAssociationType()  ) {\n \n-\t\t\t// check 'fetch graph' first; skip 'fetch profile' if 'fetch graph' takes effect\n-\t\t\tBoolean overridingEager = isEagerFetchGraph( session, associationName, associationType );\n-\n-\t\t\tif ( overridingEager != null ) {\n-\t\t\t\t//This method is very hot, and private so let's piggy back on the fact that the caller already knows the debugging state.\n-\t\t\t\tif ( isDebugEnabled ) {\n-\t\t\t\t\tLOG.debugf(\n-\t\t\t\t\t\t\t\"Overriding eager fetching using fetch graph. EntityName: %s, associationName: %s, eager fetching: %s\",\n-\t\t\t\t\t\t\tentityName,\n-\t\t\t\t\t\t\tassociationName,\n-\t\t\t\t\t\t\toverridingEager\n-\t\t\t\t\t);\n-\t\t\t\t}\n-\n-\t\t\t\treturn overridingEager;\n+\t\t\t// we can return false invariably for if the entity has been covered by entity graph,\n+\t\t\t// its associated JOIN has been present in the SQL generated and hence it would be loaded anyway\n+\t\t\tif ( session.isEnforcingFetchGraph() ) {\n+\t\t\t\treturn false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDQ5NjAw", "url": "https://github.com/hibernate/hibernate-orm/pull/3548#pullrequestreview-487449600", "createdAt": "2020-09-14T06:32:05Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NTA2OTYy", "url": "https://github.com/hibernate/hibernate-orm/pull/3548#pullrequestreview-487506962", "createdAt": "2020-09-14T07:58:50Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea7175f67721a750e01f1a89a1f6dc22e075b63", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/cea7175f67721a750e01f1a89a1f6dc22e075b63", "committedDate": "2020-09-21T16:49:50Z", "message": "HHH-14212 revert back HHH-14124 (retaining testing case)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f82d7458ea1f1892788561baa9fb4f31def1d7b", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/3f82d7458ea1f1892788561baa9fb4f31def1d7b", "committedDate": "2020-09-21T16:49:51Z", "message": "HHH-14212 revert back HHH-14097 (retaining testing case)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "198d3185cea1ecf200dbcb86846cd5ec09f9f3ac", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/198d3185cea1ecf200dbcb86846cd5ec09f9f3ac", "committedDate": "2020-09-21T16:49:51Z", "message": "HHH-14212 revert back HHH-8776 (retaining testing case)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "committedDate": "2020-09-21T16:49:51Z", "message": "HHH-14212 fix Fetch Graph by simply returning false in TwoPhaseLoad#getOverridingEager() when Fetch Graph is being enforced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/311c18097f55a3cd724e32ef1801d8c0d1a0a7df", "committedDate": "2020-09-21T16:49:51Z", "message": "HHH-14212 fix Fetch Graph by simply returning false in TwoPhaseLoad#getOverridingEager() when Fetch Graph is being enforced"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2915, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}