{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MTI0ODc5", "number": 3194, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNDo1MlrODb-x6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNDo1MlrODb-x6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY2NzI5OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/test/java/org/hibernate/event/service/internal/EventListenerReplacementStrategyTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNDo1MlrOFjxsFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNzo0NVrOFjxyEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODU4Mw==", "bodyText": "Can we rename this EventListenerDuplicationStrategyTest?  It now tests more than just the replace strategy", "url": "https://github.com/hibernate/hibernate-orm/pull/3194#discussion_r373058583", "createdAt": "2020-01-30T16:34:52Z", "author": {"login": "sebersole"}, "path": "hibernate-core/src/test/java/org/hibernate/event/service/internal/EventListenerReplacementStrategyTest.java", "diffHunk": "@@ -0,0 +1,298 @@\n+package org.hibernate.event.service.internal;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.hibernate.event.service.spi.DuplicationStrategy;\n+import org.hibernate.event.service.spi.EventListenerGroup;\n+import org.hibernate.event.service.spi.EventListenerRegistrationException;\n+import org.hibernate.event.spi.ClearEvent;\n+import org.hibernate.event.spi.ClearEventListener;\n+import org.hibernate.event.spi.EventType;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Test that a listener replacing the original one is actually called when the event is fired for each listener.\n+ * <p>\n+ *     Note: I'm using ClearEvent for the tests because it's the simpler one I've found.\n+ * </p>\n+ */\n+@TestForIssue(jiraKey = \"HHH-13831\")\n+public class EventListenerReplacementStrategyTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "935d85a78d1f0d23af34327e661638ed3f23a627"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MDExMg==", "bodyText": "Done!", "url": "https://github.com/hibernate/hibernate-orm/pull/3194#discussion_r373060112", "createdAt": "2020-01-30T16:37:45Z", "author": {"login": "DavideD"}, "path": "hibernate-core/src/test/java/org/hibernate/event/service/internal/EventListenerReplacementStrategyTest.java", "diffHunk": "@@ -0,0 +1,298 @@\n+package org.hibernate.event.service.internal;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.hibernate.event.service.spi.DuplicationStrategy;\n+import org.hibernate.event.service.spi.EventListenerGroup;\n+import org.hibernate.event.service.spi.EventListenerRegistrationException;\n+import org.hibernate.event.spi.ClearEvent;\n+import org.hibernate.event.spi.ClearEventListener;\n+import org.hibernate.event.spi.EventType;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+/**\n+ * Test that a listener replacing the original one is actually called when the event is fired for each listener.\n+ * <p>\n+ *     Note: I'm using ClearEvent for the tests because it's the simpler one I've found.\n+ * </p>\n+ */\n+@TestForIssue(jiraKey = \"HHH-13831\")\n+public class EventListenerReplacementStrategyTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODU4Mw=="}, "originalCommit": {"oid": "935d85a78d1f0d23af34327e661638ed3f23a627"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4069, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}