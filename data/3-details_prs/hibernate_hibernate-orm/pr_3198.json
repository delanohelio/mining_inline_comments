{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDg2MzEx", "number": 3198, "title": "Dialect.getFallbackSqmMutationStrategy()", "bodyText": "This method threw lots of NotImplementedFor6Exceptions on this branch, so I've tried to figure out what the right implementations are, going by what was there in the other branches. But I'm not at all sure that I got everything here right, so please review this @sebersole @dreab8.\nThis commit also gives TeradataDialect back its IndexExporter.", "createdAt": "2020-01-31T09:23:31Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3198", "merged": true, "mergeCommit": {"oid": "5d830ceebf37f5b912257fcc16bd89fe10b6a111"}, "closed": true, "closedAt": "2020-02-19T13:07:01Z", "author": {"login": "gavinking"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_rqZVgFqTM1MTM3ODkzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF2O4hAFqTM2MTA5MzA4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzc4OTM2", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351378936", "createdAt": "2020-01-31T09:24:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNDoyM1rOFkFi1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNDoyM1rOFkFi1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4Mzg5NA==", "bodyText": "Doesn't work for now, because InlineStrategy itself is unfinished and throws.", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373383894", "createdAt": "2020-01-31T09:24:23Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/Dialect.java", "diffHunk": "@@ -1573,7 +1579,18 @@ public String getCreateMultisetTableString() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType entityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n+\t\tif ( entityDescriptor.getIdentifierMapping() instanceof CompositeIdentifierMapping) {\n+\t\t\tif ( !supportsTuplesInSubqueries() ) {\n+\t\t\t\treturn new InlineStrategy( this );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzc5Mjcy", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351379272", "createdAt": "2020-01-31T09:25:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTowMFrOFkFj6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTowMFrOFkFj6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4NDE3MQ==", "bodyText": "Is this right? Should it add \"HT_\" to the table name?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373384171", "createdAt": "2020-01-31T09:25:00Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/Dialect.java", "diffHunk": "@@ -1573,7 +1579,18 @@ public String getCreateMultisetTableString() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType entityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n+\t\tif ( entityDescriptor.getIdentifierMapping() instanceof CompositeIdentifierMapping) {\n+\t\t\tif ( !supportsTuplesInSubqueries() ) {\n+\t\t\t\treturn new InlineStrategy( this );\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn new PersistentTableStrategy(\n+\t\t\t\tnew IdTable( entityDescriptor, name -> name ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzc5NTkz", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351379593", "createdAt": "2020-01-31T09:25:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTozNFrOFkFk1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTozNFrOFkFk1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4NDQwNA==", "bodyText": "Is this right?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373384404", "createdAt": "2020-01-31T09:25:34Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/FirebirdDialect.java", "diffHunk": "@@ -594,4 +601,20 @@ public JDBCException convert(SQLException sqlException, String message, String s\n \t\t};\n \t}\n \n+\t@Override\n+\tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(EntityMappingType entityDescriptor, RuntimeModelCreationContext runtimeModelCreationContext) {\n+\t\treturn getVersion() < 210\n+\t\t\t\t? super.getFallbackSqmMutationStrategy( entityDescriptor, runtimeModelCreationContext )\n+\t\t\t\t: new GlobalTemporaryTableStrategy(\n+\t\t\t\t\t\tnew IdTable( entityDescriptor, name -> \"HT_\" + name ),\n+\t\t\t\t\t\t() -> new TempIdTableExporter( false, this::getTypeName ) {\n+\t\t\t\t\t\t\t@Override\n+\t\t\t\t\t\t\tprotected String getCreateOptions() {\n+\t\t\t\t\t\t\t\treturn \"on commit delete rows\";\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\tAfterUseAction.CLEAN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzc5NzE1", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351379715", "createdAt": "2020-01-31T09:25:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTo0NlrOFkFlNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOToyNTo0NlrOFkFlNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4NDUwMw==", "bodyText": "Is this right?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373384503", "createdAt": "2020-01-31T09:25:46Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/Dialect.java", "diffHunk": "@@ -1573,7 +1579,18 @@ public String getCreateMultisetTableString() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType entityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n+\t\tif ( entityDescriptor.getIdentifierMapping() instanceof CompositeIdentifierMapping) {\n+\t\t\tif ( !supportsTuplesInSubqueries() ) {\n+\t\t\t\treturn new InlineStrategy( this );\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn new PersistentTableStrategy(\n+\t\t\t\tnew IdTable( entityDescriptor, name -> name ),\n+\t\t\t\tAfterUseAction.CLEAN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzg3MDU3", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351387057", "createdAt": "2020-01-31T09:39:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTozOToxOFrOFkF7lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTozOToxOFrOFkF7lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MDIzMA==", "bodyText": "Is this correct?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373390230", "createdAt": "2020-01-31T09:39:18Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/TimesTenDialect.java", "diffHunk": "@@ -216,28 +219,18 @@ public boolean isCurrentTimestampSelectStringCallable() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType rootEntityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n-\n-//\t\treturn new GlobalTemporaryTableBulkIdStrategy(\n-//\t\t\t\tnew IdTableSupportStandardImpl() {\n-//\t\t\t\t\t@Override\n-//\t\t\t\t\tpublic String generateIdTableName(String baseName) {\n-//\t\t\t\t\t\tfinal String name = super.generateIdTableName( baseName );\n-//\t\t\t\t\t\treturn name.length() > 30 ? name.substring( 1, 30 ) : name;\n-//\t\t\t\t\t}\n-//\n-//\t\t\t\t\t@Override\n-//\t\t\t\t\tpublic String getCreateIdTableCommand() {\n-//\t\t\t\t\t\treturn \"create global temporary table\";\n-//\t\t\t\t\t}\n-//\n-//\t\t\t\t\t@Override\n-//\t\t\t\t\tpublic String getCreateIdTableStatementOptions() {\n-//\t\t\t\t\t\treturn \"on commit delete rows\";\n-//\t\t\t\t\t}\n-//\t\t\t\t},\n-//\t\t\t\tAfterUseAction.CLEAN\n-//\t\t);\n+\t\treturn new GlobalTemporaryTableStrategy(\n+\t\t\t\tnew IdTable( rootEntityDescriptor,\n+\t\t\t\t\t\tname -> name.length() > 30 ? name.substring( 0, 30 ) : name ),\n+\t\t\t\t() -> new TempIdTableExporter( false, this::getTypeName ) {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tprotected String getCreateOptions() {\n+\t\t\t\t\t\treturn \"on commit delete rows\";\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\tAfterUseAction.CLEAN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzg4ODk3", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351388897", "createdAt": "2020-01-31T09:42:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MjozOVrOFkGBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MjozOVrOFkGBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTY0OQ==", "bodyText": "Is it correct to use PhysicalIdTableExporter here, even though it's really a temp table?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373391649", "createdAt": "2020-01-31T09:42:39Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/SAPDBDialect.java", "diffHunk": "@@ -195,23 +198,18 @@ public CaseFragment createCaseFragment() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType rootEntityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n-\n-//\t\treturn new LocalTemporaryTableBulkIdStrategy(\n-//\t\t\t\tnew IdTableSupportStandardImpl() {\n-//\t\t\t\t\t@Override\n-//\t\t\t\t\tpublic String generateIdTableName(String baseName) {\n-//\t\t\t\t\t\treturn \"temp.\" + super.generateIdTableName( baseName );\n-//\t\t\t\t\t}\n-//\n-//\t\t\t\t\t@Override\n-//\t\t\t\t\tpublic String getCreateIdTableStatementOptions() {\n-//\t\t\t\t\t\treturn \"ignore rollback\";\n-//\t\t\t\t\t}\n-//\t\t\t\t},\n-//\t\t\t\tAfterUseAction.DROP,\n-//\t\t\t\tnull\n-//\t\t);\n+\t\treturn new LocalTemporaryTableStrategy(\n+\t\t\t\tnew IdTable( rootEntityDescriptor, name -> \"temp.\" + name ),\n+\t\t\t\t() -> new PhysicalIdTableExporter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMzg5MjA1", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-351389205", "createdAt": "2020-01-31T09:43:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MzoxMVrOFkGCAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwOTo0MzoxMVrOFkGCAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM5MTg3Mw==", "bodyText": "Is this right?", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#discussion_r373391873", "createdAt": "2020-01-31T09:43:11Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/Dialect.java", "diffHunk": "@@ -1573,7 +1579,18 @@ public String getCreateMultisetTableString() {\n \tpublic SqmMultiTableMutationStrategy getFallbackSqmMutationStrategy(\n \t\t\tEntityMappingType entityDescriptor,\n \t\t\tRuntimeModelCreationContext runtimeModelCreationContext) {\n-\t\tthrow new NotYetImplementedFor6Exception( getClass() );\n+\t\tif ( entityDescriptor.getIdentifierMapping() instanceof CompositeIdentifierMapping) {\n+\t\t\tif ( !supportsTuplesInSubqueries() ) {\n+\t\t\t\treturn new InlineStrategy( this );\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\treturn new PersistentTableStrategy(\n+\t\t\t\tnew IdTable( entityDescriptor, name -> name ),\n+\t\t\t\tAfterUseAction.CLEAN,\n+\t\t\t\tPhysicalIdTableExporter::new,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "29d607d17bb72933cf115e5ee9ed2676b815fbc0", "author": {"user": {"login": "gavinking", "name": "Gavin King"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/29d607d17bb72933cf115e5ee9ed2676b815fbc0", "committedDate": "2020-02-01T11:32:48Z", "message": "Attempt to reconstruct the fallbackSqmMutationStrategies\n\nThis method threw lots of NotImplementedFor6Exceptions, so I've tried\nto figure out what the right implementations are, going by what was\nthere in the other branches. However, I'm not at all sure that I got\neverything here right."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "29d607d17bb72933cf115e5ee9ed2676b815fbc0", "author": {"user": {"login": "gavinking", "name": "Gavin King"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/29d607d17bb72933cf115e5ee9ed2676b815fbc0", "committedDate": "2020-02-01T11:32:48Z", "message": "Attempt to reconstruct the fallbackSqmMutationStrategies\n\nThis method threw lots of NotImplementedFor6Exceptions, so I've tried\nto figure out what the right implementations are, going by what was\nthere in the other branches. However, I'm not at all sure that I got\neverything here right."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDkzMDgx", "url": "https://github.com/hibernate/hibernate-orm/pull/3198#pullrequestreview-361093081", "createdAt": "2020-02-19T13:06:50Z", "commit": {"oid": "29d607d17bb72933cf115e5ee9ed2676b815fbc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3281, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}