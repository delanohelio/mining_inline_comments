{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDQ4OTc2", "number": 3329, "title": "HHH-13682 Generate Java 11/13/14 bytecode for tests when building with JDK11/13/14", "bodyText": "https://hibernate.atlassian.net/browse/HHH-13682\nThis PR is based on #3328 (HHH-13925 - upgrade to Gradle 6.3) . #3328 should be merged first. This PR includes commits from #3328, so it should be rebased after #3328 has been merged. => Done\nThe goal here is simply to compile tests to Java 11/13/14 when we build with JDK 11/13/14. That way, not only do we check that Hibernate ORM can be run within JDK 11/13/14, but we also check that it will correctly interact with Java 11/13/14 bytecode, which is especially important for bytecode enhancement.\nHopefully this will allow us to avoid the kind of problems we've had before, where bytebuddy needed an update and we didn't notice it because we were only ever manipulating Java 8 bytecode in our tests.\nBuild against JDK13: https://ci.hibernate.org/view/Personal%20jobs/job/hibernate-orm-personal-yoann-jdk13/8/\nBuild against JDK14: https://ci.hibernate.org/view/Personal%20jobs/job/hibernate-orm-personal-yoann-jdk14/4/\nHow to test that Java 11/13/14 is actually generated for tests, and not for the main code:\n# Build with JDK13\n$ ...\n# Check main code: bytecode version 52, i.e. Java 8\n$ od -A d -t 'u2' -N 8 --endian big hibernate-core/target/classes/java/main/org/hibernate/Criteria.class\n0000000 51966 47806     0    52\n0000008\n# Check test code: bytecode version 57, i.e. Java 13\n$ od -A d -t 'u2' -N 8 --endian big hibernate-core/target/classes/java/test/org/hibernate/jpa/test/callbacks/PreUpdateBytecodeEnhancementTest.class\n0000000 51966 47806     0    57\n0000008", "createdAt": "2020-04-03T08:57:45Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3329", "merged": true, "mergeCommit": {"oid": "5fab58bf767951ff1bebc74c06866237cb01c347"}, "closed": true, "closedAt": "2020-04-14T12:36:44Z", "author": {"login": "yrodiere"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU_RukgBqjMyMDU1NDU0NDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXimiEAFqTM5Mjg3NDczNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cd7d0318db13fd33163ee2b8b2b7ecb44791c57", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/0cd7d0318db13fd33163ee2b8b2b7ecb44791c57", "committedDate": "2020-04-07T06:21:38Z", "message": "HHH-13682 Remove unnecessary checks around Java 8 compatibility\n\nThe build requires JDK8+, so we're alwways Java 8 compatible."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11cdc6c0f73416f62f22957483bce1e375d483a", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/c11cdc6c0f73416f62f22957483bce1e375d483a", "committedDate": "2020-04-07T06:22:56Z", "message": "HHH-13682 Generate Java 13/14 bytecode for tests when building with JDK13/14"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6685a130fe23858d206ad6459e3d5125d69b595", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/e6685a130fe23858d206ad6459e3d5125d69b595", "committedDate": "2020-04-07T06:22:59Z", "message": "HHH-13682 Do not set net.bytebuddy.experimental=true in tests anymore\n\nIt's no longer necessary since we upgraded to byte-buddy 1.10.2,\nand it causes bytecode to be converted from Java 14 to Java 12 in some\ncases (I don't know why)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9715810d54d84c7530d0c83702ec428d5783069", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/b9715810d54d84c7530d0c83702ec428d5783069", "committedDate": "2020-04-07T06:22:59Z", "message": "HHH-13682 Enable extended bytecode enhancement in NaturalIdInUninitializedAssociationTest\n\nThis test accesses a field of an entity directly and expects it to be\nautomatically initialized; this cannot work without extended bytecode\nenhancement.\n\nThis used to work with Java 8 bytecode, but only by chance. It seems\nthat Java 8 bytecode relies on \"synthetic\", static access methods\ninserted by the compiler to access the fields of entities in this test:\nany access to the field is done through this access method instead of\nthrough a direct field access. Since we apply bytecode enhancement to\nall methods of entities, this means that access to fields triggers\ninitialization, without any bytecode enhancement in the caller class.\n\nI believe this is specific to nested classes, but couldn't find a\nsource. For reference, the bytecode of access methods looks like this:\n\n  static int access$002(org.hibernate.test.bytecode.enhancement.lazy.NaturalIdInUninitializedAssociationTest$AnEntity, int);\n    Code:\n       0: aload_0\n       1: iload_1\n       2: dup_x1\n       3: putfield      #3                  // Field id:I\n       6: ireturn\n\n  static org.hibernate.test.bytecode.enhancement.lazy.NaturalIdInUninitializedAssociationTest$EntityImmutableNaturalId access$102(org.hibernate.test.bytecode.enhancement.lazy.NaturalIdInUninitializedAssociationTest$AnEntity, org.hibernate.test.bytecode.enhancement.lazy.NaturalIdInUninitializedAssociationTest$EntityImmutableNaturalId);\n    Code:\n       0: aload_0\n       1: aload_1\n       2: dup_x1\n       3: putfield      #2                  // Field entityImmutableNaturalId:Lorg/hibernate/test/bytecode/enhancement/lazy/NaturalIdInUninitializedAssociationTest$EntityImmutableNaturalId;\n       6: areturn\n\nWith Java 11, however, access to fields of entities is done directly,\neven for nested classes. So the access methods no longer exist, and we\ndon't get automatic initialization upon field access. We need extended\nbytecode enhancement, like we would in any other case of field access\n(in particular accessing fields of non-nested classes)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73ba5d96e8b0ee066dc0601a68b7b41477bbacd4", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/73ba5d96e8b0ee066dc0601a68b7b41477bbacd4", "committedDate": "2020-04-07T06:22:59Z", "message": "HHH-13682 Allow forcing the tested Java version in the Gradle build\n\n... just in case we need that for some cutting-edge JDK, for example 15,\nthat would not be supported by Gradle yet."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f", "committedDate": "2020-04-07T06:23:00Z", "message": "HHH-13682 Upgrade to forbiddenapis 2.7\n\nSo that we can feed it Java 13/14 bytecode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f", "author": {"user": {"login": "yrodiere", "name": "Yoann Rodi\u00e8re"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f", "committedDate": "2020-04-07T06:23:00Z", "message": "HHH-13682 Upgrade to forbiddenapis 2.7\n\nSo that we can feed it Java 13/14 bytecode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODcyMzAz", "url": "https://github.com/hibernate/hibernate-orm/pull/3329#pullrequestreview-392872303", "createdAt": "2020-04-14T12:21:46Z", "commit": {"oid": "fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoyMTo0NlrOGFL9fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoyMTo0NlrOGFL9fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA5MjAzMQ==", "bodyText": "We no longer need this? Perhaps the check should be bumped to >= 15 ? It's kinda a pattern for ByteBuddy to only support the \"work in progress\" JDKs when this flag is on. I didn't check if the strategy changed.", "url": "https://github.com/hibernate/hibernate-orm/pull/3329#discussion_r408092031", "createdAt": "2020-04-14T12:21:46Z", "author": {"login": "Sanne"}, "path": "gradle/java-module.gradle", "diffHunk": "@@ -200,18 +208,6 @@ processTestResources {\n \t}\n }\n \n-// Enable the experimental features of ByteBuddy with JDK 12+\n-test {\n-\t//Only safe to attempt to parse the version as an integer since JDK11\n-\tif ( JavaVersion.current().isJava11Compatible() ) {\n-\t\tint majorJVMVersionInt = Integer.valueOf(JavaVersion.current().toString());\n-\t\t//Set the -Dnet.bytebuddy.experimental=true property only when we need it:\n-\t\tif (majorJVMVersionInt >= 12) {\n-\t\t\tsystemProperty 'net.bytebuddy.experimental', true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODc0NzM0", "url": "https://github.com/hibernate/hibernate-orm/pull/3329#pullrequestreview-392874734", "createdAt": "2020-04-14T12:25:12Z", "commit": {"oid": "fc9ff84ab9b4a8bb96b423967af1dfed5f8f345f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3025, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}