{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTg3MDU0", "number": 3275, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzoyOToyMFrODkDqxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzozMDowNVrODkDq0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTM1NDMwOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/persister/collection/AbstractCollectionPersister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzoyOToyMFrOFwMDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzoyOToyMFrOFwMDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MzQxOA==", "bodyText": "Without the above statement, there is no reason to check again at the next statement for localCopy would always be null.", "url": "https://github.com/hibernate/hibernate-orm/pull/3275#discussion_r386073418", "createdAt": "2020-03-01T03:29:20Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/persister/collection/AbstractCollectionPersister.java", "diffHunk": "@@ -744,18 +744,21 @@ protected void logStaticSQL() {\n \t\t}\n \t}\n \n-\tprivate CollectionLoader standardCollectionLoader;\n+\tprivate volatile CollectionLoader standardCollectionLoader;\n \n \t@Override\n \tpublic void initialize(Object key, SharedSessionContractImplementor session) throws HibernateException {\n //\t\tgetAppropriateInitializer( key, session ).initialize( key, session );\n \t\tdetermineLoaderToUse( key, session ).load( key, session );\n \t}\n \n+\t// lazily initialize instance field via 'double-checked locking'\n+\t// see https://en.wikipedia.org/wiki/Double-checked_locking on why 'volatile' and local copy is used\n \tprotected CollectionLoader getStandardCollectionLoader() {\n \t\tCollectionLoader localCopy = standardCollectionLoader;\n \t\tif ( localCopy == null ) {\n \t\t\tsynchronized (this) {\n+\t\t\t\tlocalCopy = standardCollectionLoader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70bab9928c134d1750ffc0a83642c9c64e74a39"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTM1NDQyOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/persister/collection/AbstractCollectionPersister.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzozMDowNlrOFwMDWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMzozMDowNlrOFwMDWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MzQzMg==", "bodyText": "The volatile keyword is mandatory to benefit from the 'local copy' paradigm later.", "url": "https://github.com/hibernate/hibernate-orm/pull/3275#discussion_r386073432", "createdAt": "2020-03-01T03:30:06Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/persister/collection/AbstractCollectionPersister.java", "diffHunk": "@@ -744,18 +744,21 @@ protected void logStaticSQL() {\n \t\t}\n \t}\n \n-\tprivate CollectionLoader standardCollectionLoader;\n+\tprivate volatile CollectionLoader standardCollectionLoader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70bab9928c134d1750ffc0a83642c9c64e74a39"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4052, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}