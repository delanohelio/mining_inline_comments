{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODE4NjE4", "number": 3481, "title": "HHH-14112 Invalid count SQL for JOINED inheritance and WHERE clause", "bodyText": "https://hibernate.atlassian.net/browse/HHH-14112\nThis is the new PR after @beikov authorized my creating a new PR after his (#3479). Testing cases are added cloned from the bug reporter's repo.\nThanks for @beikov 's bug fixing!", "createdAt": "2020-07-23T16:14:24Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3481", "merged": true, "mergeCommit": {"oid": "3e07791683d95db0952fcc16f60632f5fbcada46"}, "closed": true, "closedAt": "2020-07-24T06:59:42Z", "author": {"login": "NathanQingyangXu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3xv7egH2gAyNDU1ODE4NjE4OmRjZTQxNmMyM2UxYTJjYWJjN2Q3MTkyZGY5OWE3NmQ4Nzg1YmQwMGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3y4-SAFqTQ1NDM0OTAwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dce416c23e1a2cabc7d7192df99a76d8785bd00a", "author": {"user": {"login": "gbadner", "name": null}}, "url": "https://github.com/hibernate/hibernate-orm/commit/dce416c23e1a2cabc7d7192df99a76d8785bd00a", "committedDate": "2020-07-23T16:09:37Z", "message": "HHH-14112 : Invalid Pagination COUNT query generated with @Inheritance(strategy = InheritanceType.JOINED)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MjkzODAw", "url": "https://github.com/hibernate/hibernate-orm/pull/3481#pullrequestreview-454293800", "createdAt": "2020-07-23T16:17:03Z", "commit": {"oid": "dce416c23e1a2cabc7d7192df99a76d8785bd00a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzQ5MDAw", "url": "https://github.com/hibernate/hibernate-orm/pull/3481#pullrequestreview-454349000", "createdAt": "2020-07-23T17:29:24Z", "commit": {"oid": "dce416c23e1a2cabc7d7192df99a76d8785bd00a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoyOToyNFrOG2UgmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoyOToyNFrOG2UgmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxMjMxMg==", "bodyText": "@beikov so I have a question for you. It seems the logic fix is to include joins whenever there is where clause, but is there such possibility that the where clause can be found in child entity per se so we don't need to bother joining? Could we tell whether the joining is really necessary?", "url": "https://github.com/hibernate/hibernate-orm/pull/3481#discussion_r459612312", "createdAt": "2020-07-23T17:29:24Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/internal/ast/util/JoinProcessor.java", "diffHunk": "@@ -142,6 +142,14 @@ public static JoinType toHibernateJoinType(int astJoinType) {\n \t\t\tif ( role != null ) {\n \t\t\t\tresult.add( fromElement.getOrigin().getPropertyTableName(role.substring(role.lastIndexOf('.') + 1)) );\n \t\t\t}\n+\t\t\tfinal EntityPersister entityPersister = fromElement.getEntityPersister();\n+\t\t\tif ( entityPersister instanceof AbstractEntityPersister ) {\n+\t\t\t\tAbstractEntityPersister aep = (AbstractEntityPersister) entityPersister;\n+\t\t\t\twhile ( !aep.filterFragment( \"\", Collections.emptyMap() ).isEmpty() && aep.getMappedSuperclass() != null ) {\n+\t\t\t\t\tCollections.addAll( result, aep.getTableNames() );\n+\t\t\t\t\taep = (AbstractEntityPersister) walker.getSessionFactoryHelper().findEntityPersisterByName( aep.getMappedSuperclass() );\n+\t\t\t\t}\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dce416c23e1a2cabc7d7192df99a76d8785bd00a"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2822, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}