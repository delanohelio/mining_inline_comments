{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1Nzg3NjQ5", "number": 3393, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTo0N1rOD7BzHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTo0N1rOD7BzHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIyMDQ0OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/internal/util/MutableLong.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTo0N1rOGTH9Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTo0N1rOGTH9Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMg==", "bodyText": "I created this util class for 'long' case. Currently it is not used but it might be useful in the future.", "url": "https://github.com/hibernate/hibernate-orm/pull/3393#discussion_r422706502", "createdAt": "2020-05-10T22:01:47Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/internal/util/MutableLong.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later\n+ * See the lgpl.txt file in the root directory or http://www.gnu.org/licenses/lgpl-2.1.html\n+ */\n+package org.hibernate.internal.util;\n+\n+public class MutableLong {\n+\tprivate long value;\n+\n+\tpublic MutableLong() {\n+\t}\n+\n+\tpublic MutableLong(long value) {\n+\t\tthis.value = value;\n+\t}\n+\n+\tpublic MutableLong deepCopy() {\n+\t\treturn new MutableLong( value );\n+\t}\n+\n+\tpublic long getAndIncrement() {\n+\t\treturn value++;\n+\t}\n+\n+\tpublic long incrementAndGet() {\n+\t\treturn ++value;\n+\t}\n+\n+\tpublic long get() {\n+\t\treturn value;\n+\t}\n+\n+\tpublic void set(long value) {\n+\t\tthis.value = value;\n+\t}\n+\n+\tpublic void increase() {\n+\t\t++value;\n+\t}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c11778032f31aad8e75e5b262d6ef75543781ef"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4001, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}