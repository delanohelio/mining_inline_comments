{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1Mzk1NTMx", "number": 3238, "title": "Wip/6.0 circularity detection", "bodyText": "This PR tries to` fix :\n\ncircularity detection\n\n01c2cc0#diff-cb8a1a8f5a0e41bddbc848061ad794feR199  as discussed with Steve  may be we can do this check inside the CollectionLoader.\n\n\nhql query with a where clause checking for Embeddable is null generates the wrong sql (commit 18a3a58)\nFromClauseIndex#findFetchedJoinByPath not resolving FetchedJoin during EntityResultImpl creation (see Trello related card)  (commit 4479e55)", "createdAt": "2020-02-14T13:45:16Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3238", "merged": true, "mergeCommit": {"oid": "8defa9619e81d483618805746ac60535274faae0"}, "closed": true, "closedAt": "2020-02-18T18:04:03Z", "author": {"login": "dreab8"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEUWhkgFqTM1OTE1NTQzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFkl3rgBqjMwNDc4OTQxNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTU1NDM1", "url": "https://github.com/hibernate/hibernate-orm/pull/3238#pullrequestreview-359155435", "createdAt": "2020-02-14T19:04:28Z", "commit": {"oid": "4479e5517f971e394ea628a2be3e5cb6eeb32109"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTowNDoyOVrOFqAp3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTowNDoyOVrOFqAp3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5NTIzMQ==", "bodyText": "throw an exception?", "url": "https://github.com/hibernate/hibernate-orm/pull/3238#discussion_r379595231", "createdAt": "2020-02-14T19:04:29Z", "author": {"login": "NathanQingyangXu"}, "path": "design/working/circular-fetching.adoc", "diffHunk": "@@ -0,0 +1,208 @@\n+= Circular fetching\n+\n+[IMPORTANT]\n+====\n+We need to make sure that any association is only join-fetched once.  E.g.\n+\n+```\n+from LineItem l\n+    join fetch l.order o\n+    join fetch l.order o2\n+```\n+\n+This should be illegal.  It is possible to handle it specially, but that would be very complicated.\n+\n+`FromClauseIndex#findJoinFetch(NavigablePath parentPath, String fetchableName)` - if this does not return null we\n+know that the association is already join fetched and we should throw and exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4479e5517f971e394ea628a2be3e5cb6eeb32109"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTU3Mzc2", "url": "https://github.com/hibernate/hibernate-orm/pull/3238#pullrequestreview-359157376", "createdAt": "2020-02-14T19:08:03Z", "commit": {"oid": "4479e5517f971e394ea628a2be3e5cb6eeb32109"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTowODowM1rOFqAvrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTowODowM1rOFqAvrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5NjcxOA==", "bodyText": "guess there is some indentation issue here", "url": "https://github.com/hibernate/hibernate-orm/pull/3238#discussion_r379596718", "createdAt": "2020-02-14T19:08:03Z", "author": {"login": "NathanQingyangXu"}, "path": "design/working/circular-fetching.adoc", "diffHunk": "@@ -0,0 +1,208 @@\n+= Circular fetching\n+\n+[IMPORTANT]\n+====\n+We need to make sure that any association is only join-fetched once.  E.g.\n+\n+```\n+from LineItem l\n+    join fetch l.order o\n+    join fetch l.order o2\n+```\n+\n+This should be illegal.  It is possible to handle it specially, but that would be very complicated.\n+\n+`FromClauseIndex#findJoinFetch(NavigablePath parentPath, String fetchableName)` - if this does not return null we\n+know that the association is already join fetched and we should throw and exception\n+====\n+\n+== one-to-one\n+\n+```\n+@Entity\n+class Root {\n+    ...\n+\n+    @OneToOne(mappedBy=\"root1\")\n+    Leaf leaf1;\n+\n+    @OneToOne(mappedBy=\"root2\")\n+    Leaf leaf2;\n+}\n+\n+@Entity\n+class Leaf {\n+    ...\n+\n+    @OneToOne\n+    @JoinColumn(name=\"root_id_1\")\n+    Root root1;\n+\n+    @OneToOne\n+    @JoinColumn(name=\"root_id_2\")\n+    Root root2;\n+}\n+```\n+\n+\n+Given this model, we have the following mappings from modelPart to \"identifying columns\":\n+\n+* `Root#leaf1` -> `leaf.root_id_1`\n+* `Root#leaf2` -> `leaf.root_id_2`\n+* `Leaf#root1` -> `leaf.root_id_1`\n+* `Leaf#root2` -> `leaf.root_id_2`\n+\n+So given a query like:\n+\n+```\n+from Root r\n+    join fetch r.leaf1 l\n+    join fetch l.root1\n+    join fetch l.root2\n+```\n+\n+`l.root1` is circular whereas `l.root2` is not.  We'd know this by looking at the \"identifying columns\".\n+\n+Specifically, `l.root1` is considered circular **not** because it refers back to `Root(r)` but because it maps to the\n+same column(s) as its parent: `leaf.root_id_1`\n+\n+\n+// we need to be able to ultimately be able to resolve the \"identifying columns\" for a given path.  E.g.\n+\n+```\n+interface DomainResultCreationState {\n+    ...\n+\n+    Fetchable resolveFetchable(NavigablePath navigablePath) {\n+        // the path passed in here would be `pathToParent` (i.e. `Root(r).leaf1(l)`)\n+        // we'd used that to determine the lhs's identifying columns via\n+        // `Fetchable#getIdentifyingColumnExpressions` and check them against the\n+        // identifying columns for the Fetchable we are processing\n+    }\n+}\n+```\n+\n+\n+\n+== many-to-one\n+\n+```\n+@Entity\n+@Table(name=\"orders\")\n+class Order {\n+    ...\n+\n+    @OneToMany(mappedBy=\"order\")\n+    List<LineItem> lineItems;\n+}\n+\n+@Entity\n+@Table(name=\"lines\")\n+class LineItem {\n+    ...\n+\n+    @ManyToOne\n+    @JoinColumn(name=\"order_id\")\n+    Order order;\n+}\n+```\n+\n+Given this model, we have the following mappings from modelPart to \"identifying columns\":\n+\n+* `LineItem#order` -> `lines.order_id`\n+* `Order#lineItems#{element}` -> `lines.order_id`\n+\n+\n+Once we find a circularity we should build the `BiDirectionalFetch` reference pointing to the\n+Initializer for the \"parent parent path\".  See `RowProcessingState#.resolveInitializer`\n+\n+\n+\n+\n+Hibernate needs to handle circularity in a fetch-graph.  E.g.:\n+\n+```\n+select o\n+from Order o\n+    join fetch o.lineItems l\n+    join fetch l.order o2\n+    join fetch o2.lineItems\n+```\n+\n+Here, the join fetch of `l.order` is circular, meaning we do not want to render a join in the SQL for it\n+because it is already part of the from-clause via `Order o`.\n+\n+Recognizing circularity needs to happen in a number of mapping scenarios and I believe the conditions vary\n+depending on the type of mapping involved (one-to-one, many-to-one, many-to-many).  Ideally we can find commonality\n+and handle these conditions uniformly.\n+\n+\n+== with embeddables\n+\n+```\n+@Entity\n+@Table(name=\"root\")\n+class RootEntity {\n+    ...\n+\n+    @Embedded\n+    IntermediateComponent intermediateComponent;\n+}\n+\n+@Embeddable\n+class IntermediateComponent {\n+    ...\n+\n+\t@OneToMany( mappedBy = \"rootEntity\" )\n+\tSet<LeafEntity> leaves\n+}\n+\n+@Entity\n+@Table(name=\"leaf\")\n+class LeafEntity {\n+    ...\n+\n+\t@ManyToOne\n+\t@JoinColumn(name=\"root_id)\n+    RootEntity rootEntity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4479e5517f971e394ea628a2be3e5cb6eeb32109"}, "originalPosition": 167}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67f77efa919bf5ac775d9478a3636fdf778633f9", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/67f77efa919bf5ac775d9478a3636fdf778633f9", "committedDate": "2020-02-17T18:07:00Z", "message": "AttributeOverride add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4887356ca4db859f20f33152f6448f09896ed0f", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/c4887356ca4db859f20f33152f6448f09896ed0f", "committedDate": "2020-02-17T18:07:00Z", "message": "Move more tests to o.h.orm.test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb5fe2645a0860123bf0aa1cd7706fbf209d681a", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/cb5fe2645a0860123bf0aa1cd7706fbf209d681a", "committedDate": "2020-02-17T18:07:00Z", "message": "Code Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c806a5a169de24c141635781e146f018941331b", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8c806a5a169de24c141635781e146f018941331b", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue with TableReference resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f750cdc5540d250787ce707e14e012ad449df29", "author": {"user": {"login": "sebersole", "name": "Steve Ebersole"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/4f750cdc5540d250787ce707e14e012ad449df29", "committedDate": "2020-02-17T18:07:00Z", "message": "initial work on circular fetch detection across embeddables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b5a700eb9b8089a2c7dd1805c10e77a7aa3e18", "author": {"user": {"login": "sebersole", "name": "Steve Ebersole"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/00b5a700eb9b8089a2c7dd1805c10e77a7aa3e18", "committedDate": "2020-02-17T18:07:00Z", "message": "continued work on circular fetch detection.  still need to work through the cases involving embeddables \"in between\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3222b52ab22297a9c92ac8aad62767d0f1dbba9a", "author": {"user": {"login": "sebersole", "name": "Steve Ebersole"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/3222b52ab22297a9c92ac8aad62767d0f1dbba9a", "committedDate": "2020-02-17T18:07:00Z", "message": "continued work on circular fetch detection.  still need to work through the cases involving embeddables \"in between\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16d81eb4bf6277dda016819ab34c0d8ddd27e96e", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/16d81eb4bf6277dda016819ab34c0d8ddd27e96e", "committedDate": "2020-02-17T18:07:00Z", "message": "Refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c16e7cfe9336d20ed08ed02c2ef610848734414", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8c16e7cfe9336d20ed08ed02c2ef610848734414", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue with AbstractEntityPersister and the creation of the RootTableGroup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd28b5448251b33b9de2fdfb3b091ee2f4bef0aa", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/bd28b5448251b33b9de2fdfb3b091ee2f4bef0aa", "committedDate": "2020-02-17T18:07:00Z", "message": "EntityCollectionPart#generateFetch() add TableGroupJoin to EntityCollectionPartTableGroup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2afd4c8123eeae28c77ce7129d10408263d17242", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/2afd4c8123eeae28c77ce7129d10408263d17242", "committedDate": "2020-02-17T18:07:00Z", "message": "Avoid EntityFetchJoinedImpl visiting the EntityIdentifierMapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3b2a1537be15771379790ab4f4fa1dae7c435f7", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/f3b2a1537be15771379790ab4f4fa1dae7c435f7", "committedDate": "2020-02-17T18:07:00Z", "message": "Implemented SingularAssociationAttributeMapping circular fetch detection for ToOne with JoinTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4330599c29c665a3384c350473f19f5eb49971e", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/a4330599c29c665a3384c350473f19f5eb49971e", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix SingularAssociationAttributeMapping identifyingColumnsTableExpression and inverseIdentifyingColumnsTableExpression values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c377e9208fd194ce8e42049e73b860caf0994fd", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8c377e9208fd194ce8e42049e73b860caf0994fd", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue with @ElementColletion of Embeddables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d34353e2a3367d75fc83bfee7b447d4752f08274", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/d34353e2a3367d75fc83bfee7b447d4752f08274", "committedDate": "2020-02-17T18:07:00Z", "message": "Revert \"EntityCollectionPart#generateFetch() add TableGroupJoin to EntityCollectionPartTableGroup\"\n\nThis reverts commit f5351addb8155bd85fbd38f5b989ef0a260bcf3f."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9633345dbb4c6094198e042d5d5c12dfb4db3438", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/9633345dbb4c6094198e042d5d5c12dfb4db3438", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue determining fetchablePath and fetchParent for PluralAttributes in LoaderSelectBuilder#createFetchableConsumer() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de3be2492830c80ad90a43dd986b488f8a3e6ed", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/7de3be2492830c80ad90a43dd986b488f8a3e6ed", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix NPE in SingularAssociationAttributeMapping#resolveCircularFetch(...) method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "484589c5b4d940bbb728d8081c79b92ad9e829fd", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/484589c5b4d940bbb728d8081c79b92ad9e829fd", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix BiDirectionalFetchImpl CircularFetchAssembler#assemble for collection initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d13abf528cde5e67e16835bdb6e71d42260d441", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/7d13abf528cde5e67e16835bdb6e71d42260d441", "committedDate": "2020-02-17T18:07:00Z", "message": "Add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efb07506f260186d75e74e63be208425cecf162e", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/efb07506f260186d75e74e63be208425cecf162e", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cfbed73baf82dc02cb640975efc12f4e70cd816", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/6cfbed73baf82dc02cb640975efc12f4e70cd816", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue with hql and where clause with Embeddable is null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "529726f59aea8be5cd1c95accaad5a0eff3bc501", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/529726f59aea8be5cd1c95accaad5a0eff3bc501", "committedDate": "2020-02-17T18:07:00Z", "message": "Remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d7c4f98e34a1d5ef0449446637cb508a3013efe", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/9d7c4f98e34a1d5ef0449446637cb508a3013efe", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix compilation error after rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d77adbfc133e861dfe83875128a4c2a38014fd53", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/d77adbfc133e861dfe83875128a4c2a38014fd53", "committedDate": "2020-02-17T18:07:00Z", "message": "Add FailureExpcted to EmbeddedTest for @Parent annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c355ecee08484d640382aa07fb83f2f2dba35235", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/c355ecee08484d640382aa07fb83f2f2dba35235", "committedDate": "2020-02-17T18:07:00Z", "message": "Fix issue with FromClauseIndex#findFetchedJoinByPath for hql 'from entity1 e1 join fetch e1.entity2 e2 join fetch e2.entity3' not resolving entity3 fetch join during EntityResultImpl creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8defa9619e81d483618805746ac60535274faae0", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8defa9619e81d483618805746ac60535274faae0", "committedDate": "2020-02-18T16:33:03Z", "message": "Remove NavigablePath#hashCode field"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4479e5517f971e394ea628a2be3e5cb6eeb32109", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/4479e5517f971e394ea628a2be3e5cb6eeb32109", "committedDate": "2020-02-14T12:08:42Z", "message": "Fix issue with FromClauseIndex#findFetchedJoinByPath for hql 'from entity1 e1 join fetch e1.entity2 e2 join fetch e2.entity3' not resolving entity3 fetch join during EntityResultImpl creation"}, "afterCommit": {"oid": "8defa9619e81d483618805746ac60535274faae0", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8defa9619e81d483618805746ac60535274faae0", "committedDate": "2020-02-18T16:33:03Z", "message": "Remove NavigablePath#hashCode field"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3145, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}