{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODM0ODE0", "number": 3457, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowMDoxMlrOENBL4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNDo1OVrOENBRjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDg2MzcwOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowMDoxMlrOGvd9_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDo1NzoxMlrOGxXoIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg==", "bodyText": "Do we allow the returned value to be mutable? If not, returning Collections.emptyList() would be more efficient and less confusing. The same suggestion applies for the later empty collection returned. Minor compared to the issue solved in this PR.", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r452427262", "createdAt": "2020-07-09T19:00:12Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3ODk4Nw==", "bodyText": "we method return type is an array", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r453178987", "createdAt": "2020-07-11T09:59:25Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NjEwNQ==", "bodyText": "my fault. we might use ArrayHelper.EMPTY_STRING_ARRAY, though not a big deal.", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r453196105", "createdAt": "2020-07-11T13:39:49Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwMjc2OA==", "bodyText": "done and thanks a lot for the review :)", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r453202768", "createdAt": "2020-07-11T14:56:57Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxOTM3OQ==", "bodyText": "If we're nitpickin for optimisations, I might add that it's even faster to remove the if check  ;)", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r454419379", "createdAt": "2020-07-14T14:55:49Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg=="}, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyMDUxMg==", "bodyText": "I'm joking, but let me clarify why: it's because I would not expect the deleted list to ever be empty, so the check is redundant.", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r454420512", "createdAt": "2020-07-14T14:57:12Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {\n+\t\t\treturn new String[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNzI2Mg=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDg3ODIzOnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNDo1OVrOGveHcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwOTo1Njo0OVrOGwL1xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyOTY4Mg==", "bodyText": "Is there possibility that deletes is null here? Then a NPE would be thrown.", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r452429682", "createdAt": "2020-07-09T19:04:59Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3ODgyMA==", "bodyText": "solved thanks @NathanQingyangXu", "url": "https://github.com/hibernate/hibernate-orm/pull/3457#discussion_r453178820", "createdAt": "2020-07-11T09:56:49Z", "author": {"login": "dreab8"}, "path": "hibernate-core/src/main/java/org/hibernate/hql/spi/id/inline/AbstractInlineIdsDeleteHandlerImpl.java", "diffHunk": "@@ -42,6 +43,9 @@ public AbstractInlineIdsDeleteHandlerImpl(\n \n \t@Override\n \tpublic String[] getSqlStatements() {\n+\t\tif ( deletes.isEmpty() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyOTY4Mg=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4214, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}