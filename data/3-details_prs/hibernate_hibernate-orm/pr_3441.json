{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MDc1OTU3", "number": 3441, "title": "HHH-14077  CVE-2019-14900 SQL injection issue using JPA Criteria API", "bodyText": "https://hibernate.atlassian.net/browse/HHH-14077", "createdAt": "2020-06-19T12:32:35Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3441", "merged": true, "mergeCommit": {"oid": "8bd63116d07260b616b25b4bddf68e2ae5bee14e"}, "closed": true, "closedAt": "2020-06-23T15:48:53Z", "author": {"login": "dreab8"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsxa14gH2gAyNDM3MDc1OTU3OmM1OGE0ZTRkNzZiYjRkY2EzMmZmNGY2M2E3Njc1M2MxNDVlMDI5OWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuHeC0gFqTQzNTkxODk5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c58a4e4d76bb4dca32ff4f63a76753c145e0299b", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/c58a4e4d76bb4dca32ff4f63a76753c145e0299b", "committedDate": "2020-06-19T11:33:25Z", "message": "HHH-14077 Add test for issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTkwMTMw", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#pullrequestreview-434190130", "createdAt": "2020-06-19T16:02:49Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjE4NDE5", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#pullrequestreview-434218419", "createdAt": "2020-06-19T16:51:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MTozMFrOGmbXfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MTozMFrOGmbXfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzQ1NQ==", "bodyText": "Any difference between\nString.format( Locale.ROOT, \"%s\", inlineLiteral );\n\nand\ninlineLiteral\n\nA little bit curious for I think this might be one of my knowledge gaps", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#discussion_r442947455", "createdAt": "2020-06-19T16:51:30Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/sql/internal/JdbcLiteralFormatterCharacterData.java", "diffHunk": "@@ -34,12 +37,15 @@ public JdbcLiteralFormatterCharacterData(JavaTypeDescriptor javaTypeDescriptor,\n \tpublic String toJdbcLiteral(Object value, Dialect dialect, SharedSessionContractImplementor session) {\n \t\tfinal String literalValue = unwrap( value, String.class, session );\n \n+\t\tfinal String inlineLiteral = dialect.inlineLiteral( literalValue );\n+\n \t\tif ( isNationalized ) {\n \t\t\t// is there a standardized form for n-string literals?  This is the SQL Server syntax for sure\n-\t\t\treturn String.format( Locale.ROOT, \"n'%s'\", literalValue );\n+\t\t\treturn String.format( Locale.ROOT, NATIONALIZED_FORMAT, inlineLiteral );\n+\n \t\t}\n \t\telse {\n-\t\t\treturn String.format( Locale.ROOT, \"'%s'\", literalValue );\n+\t\t\treturn String.format( Locale.ROOT, FORMAT, inlineLiteral );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Mjg5MjEx", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#pullrequestreview-434289211", "createdAt": "2020-06-19T19:07:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTowNzowNlrOGmevrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTowNzowNlrOGmevrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAwMjc5Ng==", "bodyText": "We can simplify the above without the usage of String.format as well. String.format is pretty slow!", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#discussion_r443002796", "createdAt": "2020-06-19T19:07:06Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/sql/internal/JdbcLiteralFormatterCharacterData.java", "diffHunk": "@@ -34,12 +36,14 @@ public JdbcLiteralFormatterCharacterData(JavaTypeDescriptor javaTypeDescriptor,\n \tpublic String toJdbcLiteral(Object value, Dialect dialect, SharedSessionContractImplementor session) {\n \t\tfinal String literalValue = unwrap( value, String.class, session );\n \n+\t\tfinal String inlineLiteral = dialect.inlineLiteral( literalValue );\n+\n \t\tif ( isNationalized ) {\n \t\t\t// is there a standardized form for n-string literals?  This is the SQL Server syntax for sure\n-\t\t\treturn String.format( Locale.ROOT, \"n'%s'\", literalValue );\n-\t\t}\n-\t\telse {\n-\t\t\treturn String.format( Locale.ROOT, \"'%s'\", literalValue );\n+\t\t\treturn String.format( Locale.ROOT, NATIONALIZED_FORMAT, inlineLiteral );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjkwMTYx", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#pullrequestreview-434290161", "createdAt": "2020-06-19T19:09:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTowOTowNlrOGmeyZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTowOTowNlrOGmeyZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAwMzQ5NQ==", "bodyText": "I just wanna double check n'%s' was discarded as previously intentionally? Seems a little bit weird by appending n only.", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#discussion_r443003495", "createdAt": "2020-06-19T19:09:06Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/type/descriptor/sql/internal/JdbcLiteralFormatterCharacterData.java", "diffHunk": "@@ -19,6 +19,8 @@\n  * @author Steve Ebersole\n  */\n public class JdbcLiteralFormatterCharacterData extends BasicJdbcLiteralFormatter {\n+\tpublic static final String NATIONALIZED_FORMAT = \"n%s\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfa9a9e25cc3516e2b45d37c889b5f6083968046", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/bfa9a9e25cc3516e2b45d37c889b5f6083968046", "committedDate": "2020-06-23T10:56:29Z", "message": "HHH-14077 CVE-2019-14900 SQL injection issue using JPA Criteria API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749c83a29a2f767f49e347561de8ad2452adca68", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/749c83a29a2f767f49e347561de8ad2452adca68", "committedDate": "2020-06-23T10:56:29Z", "message": "HHH-14077 PostgreSQL, skip testLiteralProjectionAndGroupBy (PostgreSQL does not support literals in group by statement)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "749c83a29a2f767f49e347561de8ad2452adca68", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/749c83a29a2f767f49e347561de8ad2452adca68", "committedDate": "2020-06-23T10:56:29Z", "message": "HHH-14077 PostgreSQL, skip testLiteralProjectionAndGroupBy (PostgreSQL does not support literals in group by statement)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTE4OTkz", "url": "https://github.com/hibernate/hibernate-orm/pull/3441#pullrequestreview-435918993", "createdAt": "2020-06-23T15:48:45Z", "commit": {"oid": "749c83a29a2f767f49e347561de8ad2452adca68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2965, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}