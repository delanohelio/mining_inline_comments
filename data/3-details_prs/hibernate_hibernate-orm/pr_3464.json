{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzE4MDI2", "number": 3464, "title": "HHH-14108 - PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature", "bodyText": "https://hibernate.atlassian.net/browse/HHH-14108", "createdAt": "2020-07-15T20:31:35Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3464", "merged": true, "mergeCommit": {"oid": "673d3600b874a6a4ed7fbf88602b40976f8dfdc0"}, "closed": true, "closedAt": "2020-07-16T15:52:27Z", "author": {"login": "dreab8"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1QtmAgBqjM1NTAyMzgxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1fXvBgFqTQ0OTg1NDU4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDU1NDcx", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#pullrequestreview-449455471", "createdAt": "2020-07-16T01:56:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1Njo0OFrOGyXUFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1Njo0OFrOGyXUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2Mzk1OA==", "bodyText": "It might be considerable approach to put enhancementAsProxyEnabled to left of && for its performance cost is lower and we might end up with performance gain due to short-circuiting.", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455463958", "createdAt": "2020-07-16T01:56:48Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1666,50 +1663,46 @@ protected void instanceAlreadyLoaded(\n \t\t\t);\n \t\t}\n \n-\t\tif ( persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled ) {\n-\t\t\tif ( \"merge\".equals( session.getLoadQueryInfluencers().getInternalFetchProfile() ) ) {\n-\t\t\t\tassert this instanceof CascadeEntityLoader;\n-\t\t\t\t// we are processing a merge and have found an existing \"managed copy\" in the\n-\t\t\t\t// session - we need to check if this copy is an enhanced-proxy and, if so,\n-\t\t\t\t// perform the hydration just as if it were \"not yet loaded\"\n-\t\t\t\tfinal PersistentAttributeInterceptable interceptable = (PersistentAttributeInterceptable) object;\n-\t\t\t\tfinal PersistentAttributeInterceptor interceptor = interceptable.$$_hibernate_getInterceptor();\n-\t\t\t\tif ( interceptor instanceof EnhancementAsProxyLazinessInterceptor ) {\n-\t\t\t\t\thydrateEntityState(\n-\t\t\t\t\t\t\trs,\n-\t\t\t\t\t\t\ti,\n-\t\t\t\t\t\t\tpersister,\n-\t\t\t\t\t\t\tgetEntityAliases()[i].getRowIdAlias(),\n-\t\t\t\t\t\t\tkey,\n-\t\t\t\t\t\t\thydratedObjects,\n-\t\t\t\t\t\t\tsession,\n-\t\t\t\t\t\t\tgetInstanceClass(\n-\t\t\t\t\t\t\t\t\trs,\n-\t\t\t\t\t\t\t\t\ti,\n-\t\t\t\t\t\t\t\t\tpersister,\n-\t\t\t\t\t\t\t\t\tkey.getIdentifier(),\n-\t\t\t\t\t\t\t\t\tsession\n-\t\t\t\t\t\t\t),\n-\t\t\t\t\t\t\tobject,\n-\t\t\t\t\t\t\trequestedLockMode\n-\t\t\t\t\t);\n+\t\tif (persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDU1ODQx", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#pullrequestreview-449455841", "createdAt": "2020-07-16T01:58:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1ODowOFrOGyXVWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTo1ODowOFrOGyXVWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NDI4Mw==", "bodyText": "It is a pattern to get rid of space char uses previously advised. Is that a new format pattern to advocate then?", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455464283", "createdAt": "2020-07-16T01:58:08Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1610,7 +1607,7 @@ private void checkVersion(\n \t\t\telse {\n \t\t\t\t//If the object is already loaded, return the loaded one\n \t\t\t\tobject = session.getEntityUsingInterceptor( key );\n-\t\t\t\tif ( object != null ) {\n+\t\t\t\tif (object != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NzA5MjQy", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#pullrequestreview-449709242", "createdAt": "2020-07-16T10:11:59Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDoxMjowMFrOGykWzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDoxMjowMFrOGykWzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3NzY0Nw==", "bodyText": "Looks like the body of the test is exactly the same in both subclasses. Could be moved to the parent class to make this more clear?", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455677647", "createdAt": "2020-07-16T10:12:00Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/test/java/org/hibernate/test/bytecode/enhancement/lazy/proxy/batch/DynamicBatchingTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Hibernate, Relational Persistence for Idiomatic Java\n+ *\n+ * License: GNU Lesser General Public License (LGPL), version 2.1 or later.\n+ * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.\n+ */\n+package org.hibernate.test.bytecode.enhancement.lazy.proxy.batch;\n+\n+import org.hibernate.Hibernate;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.cfg.AvailableSettings;\n+import org.hibernate.loader.BatchFetchStyle;\n+import org.hibernate.stat.spi.StatisticsImplementor;\n+\n+import org.hibernate.testing.TestForIssue;\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * @author Andrea Boriero\n+ */\n+@TestForIssue(jiraKey = \"HHH-14108\")\n+public class DynamicBatchingTest extends AbstractBatchingTest {\n+\n+\t@Override\n+\tprotected void configureStandardServiceRegistryBuilder(StandardServiceRegistryBuilder ssrb) {\n+\t\tsuper.configureStandardServiceRegistryBuilder( ssrb );\n+\t\tssrb.applySetting( AvailableSettings.BATCH_FETCH_STYLE, BatchFetchStyle.DYNAMIC.toString() );\n+\t}\n+\n+\t@Test\n+\tpublic void testLoadParent() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fda9b0136cab2380c749f587dedbb692efe71b3", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/1fda9b0136cab2380c749f587dedbb692efe71b3", "committedDate": "2020-07-16T11:42:24Z", "message": "HHH-14108 Add test for issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/3642fdcda8e7f4eec067648340c0e029713418c7", "committedDate": "2020-07-16T11:42:24Z", "message": "HHH-14108 PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7", "author": {"user": {"login": "dreab8", "name": "Andrea Boriero"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/3642fdcda8e7f4eec067648340c0e029713418c7", "committedDate": "2020-07-16T11:42:24Z", "message": "HHH-14108 PADDED and DYNAMIC Batch loading strategies not compatible with the Enhanced Proxy feature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5ODQ0MTI0", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#pullrequestreview-449844124", "createdAt": "2020-07-16T13:25:21Z", "commit": {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5ODU0NTg0", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#pullrequestreview-449854584", "createdAt": "2020-07-16T13:37:03Z", "commit": {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzozNzowM1rOGyrSqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzozNzowM1rOGyrSqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5MTI3Mg==", "bodyText": "This looks a bit puzzling. Do you know why it was limited to \"merge\" fetch profiles?\nNow you're expanding the set of operations to all, but the test just wants the load. I see we only use this for \"merge\" and \"refresh\" BTW... I suppose there's not  something special about \"refresh\" that we need to take into account during this load opertion?", "url": "https://github.com/hibernate/hibernate-orm/pull/3464#discussion_r455791272", "createdAt": "2020-07-16T13:37:03Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/main/java/org/hibernate/loader/Loader.java", "diffHunk": "@@ -1666,38 +1663,34 @@ protected void instanceAlreadyLoaded(\n \t\t\t);\n \t\t}\n \n-\t\tif ( persister.getBytecodeEnhancementMetadata().isEnhancedForLazyLoading() && enhancementAsProxyEnabled ) {\n-\t\t\tif ( \"merge\".equals( session.getLoadQueryInfluencers().getInternalFetchProfile() ) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3642fdcda8e7f4eec067648340c0e029713418c7"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2994, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}