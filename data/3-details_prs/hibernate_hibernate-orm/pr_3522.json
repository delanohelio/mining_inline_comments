{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjM2MTQ0", "number": 3522, "title": "HHH-11877 Wrap CompoundPredicate's expression list", "bodyText": "https://hibernate.atlassian.net/browse/HHH-11877\nThe issue can be summarized as following:\nSuppose we have an entity class Foo that contains a boolean field bar, the following criteria building will produce invalid SQL:\ncq.select( foo ).where( cb.and( cb.and(), foo.get( Foo_.bar ) ) );\n\nwhereas the following is working fine:\ncq.select( foo ).where( foo.get( Foo_.bar ) );\n\nThe root cause is internally in CriteriaBuilderImpl#wrap() method we fixed boolean type Path to ensure creating SQL snippet like Foo_.bar = 1 rather than Foo_.bar (which will trigger invalid SQL). But we didn't go deeper than root level and this PR fixed the loophole to fix non-root level boolean type Path as well.", "createdAt": "2020-08-25T14:17:43Z", "url": "https://github.com/hibernate/hibernate-orm/pull/3522", "merged": true, "mergeCommit": {"oid": "90be61210c189dc7799f81a7a3a4dbea57280174"}, "closed": true, "closedAt": "2020-08-31T14:17:33Z", "author": {"login": "NathanQingyangXu"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCZXADABqjM2OTA4MTM1ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdETBdDgFqTQ3ODYyNzA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDQ3Mjk4", "url": "https://github.com/hibernate/hibernate-orm/pull/3522#pullrequestreview-478447298", "createdAt": "2020-08-31T09:13:44Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOToxMzo0NVrOHJw4aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwOToxMzo0NVrOHJw4aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAwMDEwNQ==", "bodyText": "IMO we should instead call wrap in CompoundPredicate when adding elements.", "url": "https://github.com/hibernate/hibernate-orm/pull/3522#discussion_r480000105", "createdAt": "2020-08-31T09:13:45Z", "author": {"login": "beikov"}, "path": "hibernate-core/src/main/java/org/hibernate/query/criteria/internal/CriteriaBuilderImpl.java", "diffHunk": "@@ -255,6 +255,12 @@ public Order desc(Expression<?> x) {\n \n \tpublic Predicate wrap(Expression<Boolean> expression) {\n \t\tif ( Predicate.class.isInstance( expression ) ) {\n+\t\t\tif ( CompoundPredicate.class.isInstance( expression ) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NTgxNDMy", "url": "https://github.com/hibernate/hibernate-orm/pull/3522#pullrequestreview-478581432", "createdAt": "2020-08-31T12:45:24Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjo0NToyNFrOHJ3TEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjo0NToyNFrOHJ3TEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwNTIzNQ==", "bodyText": "Maybe it's better to do the wrapping in applyExpressions as that is the only code where expressions are added to the list.", "url": "https://github.com/hibernate/hibernate-orm/pull/3522#discussion_r480105235", "createdAt": "2020-08-31T12:45:24Z", "author": {"login": "beikov"}, "path": "hibernate-core/src/main/java/org/hibernate/query/criteria/internal/predicate/CompoundPredicate.java", "diffHunk": "@@ -125,6 +125,13 @@ public Predicate not() {\n \t\treturn new NegatedPredicateWrapper( this );\n \t}\n \n+\tpublic void wrap() {\n+\t\tfinal CriteriaBuilderImpl criteriaBuilder = criteriaBuilder();\n+\t\tfor ( int i = 0, size = expressions.size(); i < size; i++ ) {\n+\t\t\texpressions.set( i, criteriaBuilder.wrap( expressions.get( i ) ) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa5b6d6e58985bb6637aec2300c41b7d2c4e035", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8aa5b6d6e58985bb6637aec2300c41b7d2c4e035", "committedDate": "2020-08-31T13:21:26Z", "message": "HHH-11877 wrap CompoundPredicate's expression list"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8aa5b6d6e58985bb6637aec2300c41b7d2c4e035", "author": {"user": {"login": "NathanQingyangXu", "name": "Nathan Xu"}}, "url": "https://github.com/hibernate/hibernate-orm/commit/8aa5b6d6e58985bb6637aec2300c41b7d2c4e035", "committedDate": "2020-08-31T13:21:26Z", "message": "HHH-11877 wrap CompoundPredicate's expression list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NjI3MDk4", "url": "https://github.com/hibernate/hibernate-orm/pull/3522#pullrequestreview-478627098", "createdAt": "2020-08-31T13:42:43Z", "commit": {"oid": "8aa5b6d6e58985bb6637aec2300c41b7d2c4e035"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2886, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}