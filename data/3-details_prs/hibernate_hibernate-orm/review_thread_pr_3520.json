{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMTE2NzEy", "number": 3520, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxNToyNVrOEfjcYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNTozNzo0MVrOEgnF9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTIyMDE3OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxNToyNVrOHL5Xsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODowMDoxMFrOHL687Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNjMzOQ==", "bodyText": "btw, there is a related ticket for the above `float' issue: #2855", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r482236339", "createdAt": "2020-09-02T17:15:25Z", "author": {"login": "NathanQingyangXu"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.NUMERIC, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.DOUBLE, \"double\" );\n \t\tregisterColumnType( Types.FLOAT, \"float\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1Nzg4MA==", "bodyText": "The more I see issues like this, the more I think the problem isn't in the Dialects, it's in the stupid schema validation that doesn't realize that float and real and double are all the same thing, and that numeric and decimal are the same thing. We could easily fix this whole class of idiotic bugs in one swoop by making the schema validator/update tools non-stupid.", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r482257880", "createdAt": "2020-09-02T17:52:41Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.NUMERIC, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.DOUBLE, \"double\" );\n \t\tregisterColumnType( Types.FLOAT, \"float\" );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNjMzOQ=="}, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1OTYwMQ==", "bodyText": "AbstractSchemaValidator.validateColumnType() is the culprit here.", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r482259601", "createdAt": "2020-09-02T17:55:47Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.NUMERIC, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.DOUBLE, \"double\" );\n \t\tregisterColumnType( Types.FLOAT, \"float\" );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNjMzOQ=="}, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2MjI1Mw==", "bodyText": "And Table.validateColumns(), I suppose, except that that method doesn't seem to be called anywhere.", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r482262253", "createdAt": "2020-09-02T18:00:10Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.NUMERIC, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n \t\tregisterColumnType( Types.DOUBLE, \"double\" );\n \t\tregisterColumnType( Types.FLOAT, \"float\" );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNjMzOQ=="}, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjMwMzg4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNTozNzo0MVrOHNirOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxNjozNTozNlrOHNi9xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTY1OA==", "bodyText": "I'm confused. Does this mean a part of #3405 was not necessary at all?\nOr do we have the same problem as here: #3519 (comment)?", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r483961658", "createdAt": "2020-09-05T15:37:41Z", "author": {"login": "famod"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2NjQwNg==", "bodyText": "Well that was the result of the long discussion we just had, wasn't it? I mean, honestly I found it pretty hard to understand what he was saying, but after much back and forth it seems to me we agreed that the workaround wasn't required at all from .200 on.", "url": "https://github.com/hibernate/hibernate-orm/pull/3520#discussion_r483966406", "createdAt": "2020-09-05T16:35:36Z", "author": {"login": "gavinking"}, "path": "hibernate-core/src/main/java/org/hibernate/dialect/H2Dialect.java", "diffHunk": "@@ -122,7 +122,7 @@ public H2Dialect() {\n \t\tregisterColumnType( Types.BIT, \"boolean\" );\n \t\tregisterColumnType( Types.CHAR, \"char($l)\" );\n \t\tregisterColumnType( Types.DATE, \"date\" );\n-\t\tregisterColumnType( Types.DECIMAL, buildId >= 201 ? \"numeric($p,$s)\" : \"decimal($p,$s)\" );\n+\t\tregisterColumnType( Types.DECIMAL, \"decimal($p,$s)\" );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTY1OA=="}, "originalCommit": {"oid": "0142cebf9c7f543eb24fb063b2156eb0b657976b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4161, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}