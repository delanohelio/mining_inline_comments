{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjM3ODU5", "number": 3645, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0MTo0MlrOE5mk1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0NzozMVrOE5muFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODM2MzA5OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/persister/entity/AbstractEntityPersister.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0MTo0MlrOH0KKqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo1NDoxNlrOH0vR9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1NDU3MA==", "bodyText": "This looks a bit scary, but after reading through it it seems all it does is a union Set of the indexes of mutable properties + the ids of the named attributes.\nDid I read that correctly? Maybe we could add an implementation comment?", "url": "https://github.com/hibernate/hibernate-orm/pull/3645#discussion_r524454570", "createdAt": "2020-11-16T17:41:42Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/main/java/org/hibernate/persister/entity/AbstractEntityPersister.java", "diffHunk": "@@ -2261,6 +2259,44 @@ public boolean isDefinedOnSubclass(int i) {\n \t\treturn Arrays.copyOf( fields, counter );\n \t}\n \n+\t@Override\n+\tpublic int[] resolveDirtyAttributeIndexes(String[] attributeNames) {\n+\t\tfinal int[] mutablePropertiesIndexes = entityMetamodel.getMutablePropertiesIndexes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA2MjY0NQ==", "bodyText": "I will adapt the implementation a bit as it is not 100% correct yet. Working on it atm.", "url": "https://github.com/hibernate/hibernate-orm/pull/3645#discussion_r525062645", "createdAt": "2020-11-17T10:54:16Z", "author": {"login": "beikov"}, "path": "hibernate-core/src/main/java/org/hibernate/persister/entity/AbstractEntityPersister.java", "diffHunk": "@@ -2261,6 +2259,44 @@ public boolean isDefinedOnSubclass(int i) {\n \t\treturn Arrays.copyOf( fields, counter );\n \t}\n \n+\t@Override\n+\tpublic int[] resolveDirtyAttributeIndexes(String[] attributeNames) {\n+\t\tfinal int[] mutablePropertiesIndexes = entityMetamodel.getMutablePropertiesIndexes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1NDU3MA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODM4Njc4OnYy", "diffSide": "RIGHT", "path": "hibernate-core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0NzozMVrOH0KZMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDo1Mzo0MFrOH0vQgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODI5MA==", "bodyText": "You think we could use BitSet(s) to track such things?  Probably not worth our time here, but I'd like to take that in consideration in ORM 6.", "url": "https://github.com/hibernate/hibernate-orm/pull/3645#discussion_r524458290", "createdAt": "2020-11-16T17:47:31Z", "author": {"login": "Sanne"}, "path": "hibernate-core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java", "diffHunk": "@@ -97,7 +97,7 @@\n \n \tprivate final Map<String, Integer> propertyIndexes = new HashMap<>();\n \tprivate final boolean hasCollections;\n-\tprivate final boolean hasMutableProperties;\n+\tprivate final int[] mutablePropertiesIndexes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA2MjI3Mw==", "bodyText": "Yeah, a BitSet is a good candidate for something like that.", "url": "https://github.com/hibernate/hibernate-orm/pull/3645#discussion_r525062273", "createdAt": "2020-11-17T10:53:40Z", "author": {"login": "beikov"}, "path": "hibernate-core/src/main/java/org/hibernate/tuple/entity/EntityMetamodel.java", "diffHunk": "@@ -97,7 +97,7 @@\n \n \tprivate final Map<String, Integer> propertyIndexes = new HashMap<>();\n \tprivate final boolean hasCollections;\n-\tprivate final boolean hasMutableProperties;\n+\tprivate final int[] mutablePropertiesIndexes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODI5MA=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4108, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}