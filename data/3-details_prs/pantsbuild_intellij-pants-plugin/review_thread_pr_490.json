{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDE4ODgy", "number": 490, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowMzo0NVrODdx3GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyNTo0OFrODdyQEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTUyMjE3OnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowMzo0NVrOFmk5Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyMDoyN1rOFmlX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NDY2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2\n          \n          \n            \n              // Link to regular expression checking this: https://regex101.com/r/SUZCl6/2", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r375994663", "createdAt": "2020-02-06T18:03:45Z", "author": {"login": "cosmicexplorer"}, "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.model;\n+\n+import com.twitter.intellij.pants.PantsException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class PantsVersion {\n+\n+  private int major;\n+  private int minor;\n+  private int patch;\n+  private PantsPatchVersionKind kind;\n+\n+  // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMjU1OQ==", "bodyText": "Btw, fantastic move to link to regex101.com -- thanks for thinking about this! This is exactly how we make regex a little more comprehensible.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376002559", "createdAt": "2020-02-06T18:20:27Z", "author": {"login": "cosmicexplorer"}, "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.model;\n+\n+import com.twitter.intellij.pants.PantsException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class PantsVersion {\n+\n+  private int major;\n+  private int minor;\n+  private int patch;\n+  private PantsPatchVersionKind kind;\n+\n+  // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NDY2Mw=="}, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTU1NjIxOnYy", "diffSide": "RIGHT", "path": "tests/com/twitter/intellij/pants/util/PantsUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoxNTo0NlrOFmlPGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDo1NTo0OFrOFm5eoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMDI4MQ==", "bodyText": "I might also add a test for a version like 1.24.0rc1-git2481dab2-md59a1c1708 as well, since we see that in our internal pants repo. I am pretty sure that the parsing mechanism you've developed here is only going to capture the relevant numbers, but in the case that we modify the parsing in the future, it might be good to have a complete example?", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376000281", "createdAt": "2020-02-06T18:15:46Z", "author": {"login": "cosmicexplorer"}, "path": "tests/com/twitter/intellij/pants/util/PantsUtilTest.java", "diffHunk": "@@ -40,17 +31,19 @@ public void testIsPantsProjectFile() {\n   }\n \n   public void testIsCompatibleVersion() {\n-    assertTrue(PantsUtil.isCompatibleVersion(\"2.2.3\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.4.4\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4rc0\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4.dev0\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.3\", \"1.2.3\"));\n-\n-    assertFalse(PantsUtil.isCompatibleVersion(\"1.2.0rc122\", \"1.2.3\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"2.34.43\", \"2.34.44\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"2.33.44\", \"2.34.44\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"1.34.44\", \"2.34.44\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"2.2.3\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.4.4\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4rc0\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4.dev0\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3+git12345678\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3-git12345678\", \"1.2.3\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMzMTkzNw==", "bodyText": "Added! Thanks", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376331937", "createdAt": "2020-02-07T10:55:48Z", "author": {"login": "blorente"}, "path": "tests/com/twitter/intellij/pants/util/PantsUtilTest.java", "diffHunk": "@@ -40,17 +31,19 @@ public void testIsPantsProjectFile() {\n   }\n \n   public void testIsCompatibleVersion() {\n-    assertTrue(PantsUtil.isCompatibleVersion(\"2.2.3\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.4.4\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4rc0\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.4.dev0\", \"1.2.3\"));\n-    assertTrue(PantsUtil.isCompatibleVersion(\"1.2.3\", \"1.2.3\"));\n-\n-    assertFalse(PantsUtil.isCompatibleVersion(\"1.2.0rc122\", \"1.2.3\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"2.34.43\", \"2.34.44\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"2.33.44\", \"2.34.44\"));\n-    assertFalse(PantsUtil.isCompatibleVersion(\"1.34.44\", \"2.34.44\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"2.2.3\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.4.4\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4rc0\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.4.dev0\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3+git12345678\", \"1.2.3\"));\n+    assertTrue(PantsUtil.isCompatiblePantsVersion(\"1.2.3-git12345678\", \"1.2.3\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMDI4MQ=="}, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTU1ODcyOnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoxNjozN1rOFmlQvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoxNjozN1rOFmlQvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMDcwMw==", "bodyText": "Good change!! Thank you for fixing up naming hygiene here!", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376000703", "createdAt": "2020-02-06T18:16:37Z", "author": {"login": "cosmicexplorer"}, "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -214,16 +211,17 @@ public static boolean isScalaRelatedTestRunConfiguration(RunConfiguration rc) {\n     return workingDir.map(file -> file.findChild(PantsConstants.PANTS_INI));\n   }\n \n-  public static boolean isCompatiblePantsVersion(String projectPath, String minVersion) {\n+  public static boolean isCompatibleProjectPantsVersion(String projectPath, String minVersion) {\n     return PantsUtil.findPantsExecutable(projectPath)\n       .flatMap(exec -> PantsOptions.getPantsOptions(exec.getPath()).get(\"pants_version\"))\n-      .map(version -> PantsUtil.isCompatibleVersion(version, minVersion))\n+      .map(version -> PantsUtil.isCompatiblePantsVersion(version, minVersion))\n       .orElse(false);\n   }\n \n-  public static boolean isCompatibleVersion(String current, String minimum) {\n-    String currentVersion = current.replaceAll(\"rc.+\", \"\").trim();\n-    return versionCompare(currentVersion, minimum) >= 0;\n+  public static boolean isCompatiblePantsVersion(String current, String minimum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTU4MDU1OnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyMzo1OVrOFmlelg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyMzo1OVrOFmlelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNDI0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String PANTS_VERSION_FORMAT = \"(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(rc\\\\d+|\\\\.dev\\\\d+)?\";\n          \n          \n            \n              private static final String PANTS_VERSION_FORMAT = \"^(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(rc\\\\d+|\\\\.dev\\\\d+)?\";", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376004246", "createdAt": "2020-02-06T18:23:59Z", "author": {"login": "cosmicexplorer"}, "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.model;\n+\n+import com.twitter.intellij.pants.PantsException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class PantsVersion {\n+\n+  private int major;\n+  private int minor;\n+  private int patch;\n+  private PantsPatchVersionKind kind;\n+\n+  // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2\n+  private static final String PANTS_VERSION_FORMAT = \"(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(rc\\\\d+|\\\\.dev\\\\d+)?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTU4NjEwOnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODoyNTo0OFrOFmliIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDo1NjoxNVrOFm5fWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNTE1NA==", "bodyText": "Is there a reason we're using Pattern.MULTILINE here? I believe that would convert the above ^ into start-of-line instead of start-of-input, see: https://stackoverflow.com/a/6143347/2518889.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376005154", "createdAt": "2020-02-06T18:25:48Z", "author": {"login": "cosmicexplorer"}, "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.model;\n+\n+import com.twitter.intellij.pants.PantsException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class PantsVersion {\n+\n+  private int major;\n+  private int minor;\n+  private int patch;\n+  private PantsPatchVersionKind kind;\n+\n+  // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2\n+  private static final String PANTS_VERSION_FORMAT = \"(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(rc\\\\d+|\\\\.dev\\\\d+)?\";\n+  final Pattern pants_version_pattern = Pattern.compile(PANTS_VERSION_FORMAT, Pattern.MULTILINE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMzMjEyMg==", "bodyText": "Changed, thanks! I like the ^ a lot, btw :) Nice catch.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/490#discussion_r376332122", "createdAt": "2020-02-07T10:56:15Z", "author": {"login": "blorente"}, "path": "common/com/twitter/intellij/pants/model/PantsVersion.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.model;\n+\n+import com.twitter.intellij.pants.PantsException;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class PantsVersion {\n+\n+  private int major;\n+  private int minor;\n+  private int patch;\n+  private PantsPatchVersionKind kind;\n+\n+  // Link to regular expression cehcking this: https://regex101.com/r/SUZCl6/2\n+  private static final String PANTS_VERSION_FORMAT = \"(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(rc\\\\d+|\\\\.dev\\\\d+)?\";\n+  final Pattern pants_version_pattern = Pattern.compile(PANTS_VERSION_FORMAT, Pattern.MULTILINE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwNTE1NA=="}, "originalCommit": {"oid": "e7614e521201ae3da894edefba86fcf5b96ae5d9"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2036, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}