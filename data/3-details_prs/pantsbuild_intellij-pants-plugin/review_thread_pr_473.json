{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDY2MTk1", "number": 473, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo1MDoyMlrODW_m0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo1MDoyMlrODW_m0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NDM3Mzk1OnYy", "diffSide": "RIGHT", "path": "src/com/twitter/intellij/pants/index/PantsAddressesIndex.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo1MDoyMlrOFcEbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo1MDoyMlrOFcEbOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3Njk1NA==", "bodyText": "Thanks for the doc!", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/473#discussion_r364976954", "createdAt": "2020-01-09T21:50:22Z", "author": {"login": "wisechengyi"}, "path": "src/com/twitter/intellij/pants/index/PantsAddressesIndex.java", "diffHunk": "@@ -0,0 +1,114 @@\n+// Copyright 2016 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.index;\n+\n+import com.intellij.openapi.fileTypes.UnknownFileType;\n+import com.intellij.openapi.util.io.FileUtil;\n+import com.intellij.openapi.vfs.VirtualFile;\n+import com.intellij.psi.PsiFile;\n+import com.intellij.util.indexing.DataIndexer;\n+import com.intellij.util.indexing.FileBasedIndex;\n+import com.intellij.util.indexing.FileContent;\n+import com.intellij.util.indexing.ID;\n+import com.intellij.util.indexing.ScalarIndexExtension;\n+import com.intellij.util.io.EnumeratorStringDescriptor;\n+import com.intellij.util.io.KeyDescriptor;\n+import com.twitter.intellij.pants.model.PantsTargetAddress;\n+import com.twitter.intellij.pants.util.PantsPsiUtil;\n+import com.twitter.intellij.pants.util.PantsUtil;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.io.File;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public class PantsAddressesIndex extends ScalarIndexExtension<String> {\n+  public static final ID<String, Void> NAME = ID.create(\"PantsAddressesIndex\");\n+\n+  public static Collection<String> getAddresses(@NotNull PsiFile file) {\n+    // We need to make sure that the files really belong to the project.\n+    // As stated in http://www.jetbrains.org/intellij/sdk/docs/basics/indexing_and_psi_stubs/file_based_indexes.html#accessing-a-file-based-index\n+    // it \"may also contain additional keys not currently found in the project.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13332313c95e9b1a682873c19766680fe02ea8c2"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2031, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}