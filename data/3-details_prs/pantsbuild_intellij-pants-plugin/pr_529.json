{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzU2Mzkz", "number": 529, "title": "Generate source jars on demand for internal dependencies", "bodyText": "The resulting workflow is:\n\nUser navigates to class file without sources.\nIntellij opens editor with decompiled file stub and a yellow bar on top of that editor\nThe bar shows: \"Decompile to Java\", \"Choose Sources...\" and a newly added option \"Import Sources * from Pants\".\nAfter clicking on new option, if the jar the .class file is in is located under bloop-jars we do the following\nextract target name from it by naming convention\nask pants for source files in this target (filemap)\nresolve source root based on package or heuristics for given source\npack all sources into jar (-sources.jar) that is created right next to the jar with classes\nnew jar is attached as sources for all libraries that contain this .class file", "createdAt": "2020-05-12T14:17:06Z", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/529", "merged": true, "mergeCommit": {"oid": "c435edad6fa55d502b86e472ff2427351eded7b3"}, "closed": true, "closedAt": "2020-06-02T15:42:45Z", "author": {"login": "lukaszwawrzyk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgk9aNgH2gAyNDE2NzU2MzkzOmFkYmYxM2ZkYTkyNGFkZmRiZGUwYzBiYWEzMGE1YjdiMmMyMzIzYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnQDn3AH2gAyNDE2NzU2MzkzOmU2Y2VmYTk4MGVhNDkyZmY0NjI0N2M3OGFmODNhNzk2NDlkZGI0YzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "adbf13fda924adfdbde0c0baa30a5b7b2c2323bd", "author": {"user": {"login": "lukaszwawrzyk", "name": "\u0141ukasz Wawrzyk"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/adbf13fda924adfdbde0c0baa30a5b7b2c2323bd", "committedDate": "2020-05-12T14:15:19Z", "message": "Generate source jars for internal dependencies on demand"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91a41ac7239ce68389e0ef6b48d4d27b9e41d01d", "author": {"user": {"login": "lukaszwawrzyk", "name": "\u0141ukasz Wawrzyk"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/91a41ac7239ce68389e0ef6b48d4d27b9e41d01d", "committedDate": "2020-05-18T12:50:49Z", "message": "Support libraries.json"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd48bd4304196f6191b4af7f0f537a7df1dc25a2", "author": {"user": {"login": "lukaszwawrzyk", "name": "\u0141ukasz Wawrzyk"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/dd48bd4304196f6191b4af7f0f537a7df1dc25a2", "committedDate": "2020-05-18T12:47:27Z", "message": "Support libraries.json"}, "afterCommit": {"oid": "91a41ac7239ce68389e0ef6b48d4d27b9e41d01d", "author": {"user": {"login": "lukaszwawrzyk", "name": "\u0141ukasz Wawrzyk"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/91a41ac7239ce68389e0ef6b48d4d27b9e41d01d", "committedDate": "2020-05-18T12:50:49Z", "message": "Support libraries.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTMwNTg4", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/529#pullrequestreview-420130588", "createdAt": "2020-05-28T13:54:07Z", "commit": {"oid": "91a41ac7239ce68389e0ef6b48d4d27b9e41d01d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo1NDowN1rOGb2M3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo1NDowN1rOGb2M3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg1Mjc2Ng==", "bodyText": "Should this be logged?\nDoes it make sense for the callers of ensureInitialized to continue if this fails?", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/529#discussion_r431852766", "createdAt": "2020-05-28T13:54:07Z", "author": {"login": "Duhemm"}, "path": "src/com/twitter/intellij/pants/bsp/JarMappings.java", "diffHunk": "@@ -0,0 +1,126 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.bsp;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.reflect.TypeToken;\n+import com.intellij.openapi.components.ServiceManager;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.vfs.LocalFileSystem;\n+import com.intellij.openapi.vfs.VirtualFile;\n+import com.intellij.openapi.vfs.VirtualFileManager;\n+import com.intellij.openapi.vfs.newvfs.BulkFileListener;\n+import com.intellij.openapi.vfs.newvfs.events.VFileContentChangeEvent;\n+import com.intellij.openapi.vfs.newvfs.events.VFileEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.lang.reflect.Type;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class JarMappings {\n+  private static final String SOURCES_JAR_SUFFIX = \"-sources.jar\";\n+\n+  public static JarMappings getInstance(Project project) {\n+    return ServiceManager.getService(project, JarMappings.class);\n+  }\n+\n+  public JarMappings(Project project) {\n+    this.project = project;\n+\n+    project.getMessageBus().connect().subscribe(VirtualFileManager.VFS_CHANGES, new BulkFileListener() {\n+      @Override\n+      public void after(@NotNull List<? extends VFileEvent> events) {\n+        events.forEach(event -> {\n+          if (event instanceof VFileContentChangeEvent &&\n+              event.getFile() != null &&\n+              event.getFile().equals(librariesFile())) {\n+            librariesFileIsUpToDate = false;\n+          }\n+        });\n+      }\n+    });\n+  }\n+\n+  private final Project project;\n+\n+  private Map<String, String> libraryJarToLibrarySourceJar = new HashMap<>();\n+  private boolean librariesFileIsUpToDate = false;\n+\n+  private synchronized void ensureInitialized() {\n+    try {\n+      if (!librariesFileIsUpToDate) {\n+        VirtualFile file = librariesFile();\n+        String content = new String(file.contentsToByteArray());\n+        Type mapType = new TypeToken<Map<String, String>>() {}.getType();\n+        libraryJarToLibrarySourceJar = new Gson().fromJson(content, mapType);\n+        librariesFileIsUpToDate = true;\n+      }\n+    }\n+    catch (Exception e) {\n+      librariesFileIsUpToDate = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91a41ac7239ce68389e0ef6b48d4d27b9e41d01d"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6cefa980ea492ff46247c78af83a79649ddb4c4", "author": {"user": {"login": "lukaszwawrzyk", "name": "\u0141ukasz Wawrzyk"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/e6cefa980ea492ff46247c78af83a79649ddb4c4", "committedDate": "2020-06-02T07:51:34Z", "message": "Tweak error handling"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1979, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}