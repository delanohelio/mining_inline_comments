{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MTMyNzc0", "number": 594, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNDoyMzoyM1rOFJifzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0MToxN1rOFOs3Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTQ2NzAxOnYy", "diffSide": "RIGHT", "path": "src/com/twitter/intellij/pants/service/project/PantsResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNDoyMzoyM1rOIL6lzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMTo1ODowMlrOIMFUzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2NTE5Nw==", "bodyText": "+1", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r549365197", "createdAt": "2020-12-28T14:23:23Z", "author": {"login": "tpasternak"}, "path": "src/com/twitter/intellij/pants/service/project/PantsResolver.java", "diffHunk": "@@ -93,6 +100,30 @@ public void resolve(\n     }\n   }\n \n+  public void resolvePythonEnvironment(\n+    ProjectData projectData,\n+    List<String> selectedTargets,\n+    ProcessAdapter processAdapter\n+  ) {\n+    PythonSetup pythonSetup = myProjectInfo.getPythonSetup();\n+    boolean needsPython = myProjectInfo.getTargets().values().stream().anyMatch(t -> t.isPythonTarget());\n+    if (needsPython && pythonSetup != null) {\n+      PythonVenvBuilder.forProjectPath(myExecutor.getBuildRoot().toString(), processAdapter).ifPresent(builder -> {\n+        String target = mainTargetName(selectedTargets);\n+        Path venvDir = Paths.get(projectData.getIdeProjectFileDirectoryPath(), \"venv\");\n+        PythonInterpreterInfo python = builder.build(target, venvDir);\n+        String environmentName = \"Python virtual environment from venv_builder\";\n+        pythonSetup.getInterpreters().put(environmentName, python);\n+        pythonSetup.setDefaultInterpreter(environmentName);\n+      });\n+    }\n+  }\n+\n+  private String mainTargetName(List<String> selectedTargets){\n+    //FIXME can there be more than one target?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0a99a5816893c209544802b50c9f5cbd146ba6d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0MTA3MA==", "bodyText": "The venv_builder tool supports only one target selector (which, however, can be as general as ::), so I think this way of selecting the \"main\" target is an acceptable compromise for now.\nP.S. This problem is fixed in pull request #598.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r549541070", "createdAt": "2020-12-29T01:58:02Z", "author": {"login": "odisseus"}, "path": "src/com/twitter/intellij/pants/service/project/PantsResolver.java", "diffHunk": "@@ -93,6 +100,30 @@ public void resolve(\n     }\n   }\n \n+  public void resolvePythonEnvironment(\n+    ProjectData projectData,\n+    List<String> selectedTargets,\n+    ProcessAdapter processAdapter\n+  ) {\n+    PythonSetup pythonSetup = myProjectInfo.getPythonSetup();\n+    boolean needsPython = myProjectInfo.getTargets().values().stream().anyMatch(t -> t.isPythonTarget());\n+    if (needsPython && pythonSetup != null) {\n+      PythonVenvBuilder.forProjectPath(myExecutor.getBuildRoot().toString(), processAdapter).ifPresent(builder -> {\n+        String target = mainTargetName(selectedTargets);\n+        Path venvDir = Paths.get(projectData.getIdeProjectFileDirectoryPath(), \"venv\");\n+        PythonInterpreterInfo python = builder.build(target, venvDir);\n+        String environmentName = \"Python virtual environment from venv_builder\";\n+        pythonSetup.getInterpreters().put(environmentName, python);\n+        pythonSetup.setDefaultInterpreter(environmentName);\n+      });\n+    }\n+  }\n+\n+  private String mainTargetName(List<String> selectedTargets){\n+    //FIXME can there be more than one target?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2NTE5Nw=="}, "originalCommit": {"oid": "d0a99a5816893c209544802b50c9f5cbd146ba6d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTAwNjcyOnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxMjoxMzowM1rOITiCVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QwNzozNzowNlrOIa6Frg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM1MTUxMA==", "bodyText": "I think we could use com.twitter.intellij.pants.bsp.PantsTargetAddress class here instead of String for selector\n(and it could be moved from bsp package)", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r557351510", "createdAt": "2021-01-14T12:13:03Z", "author": {"login": "tpasternak"}, "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -421,6 +422,54 @@ public static GeneralCommandLine defaultCommandLine(@NotNull File pantsExecutabl\n     }\n   }\n \n+  public static Collection<String> listMatchingTargets(@NotNull String projectPath, String selector) throws PantsException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fdf5dd13218ffb9478ebea37ef936f468d59a64"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTA4NTYxNA==", "bodyText": "What is the conceptual difference between com.twitter.intellij.pants.bsp.PantsTargetAddress and com.twitter.intellij.pants.model.PantsTargetAddress?", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r565085614", "createdAt": "2021-01-27T07:37:06Z", "author": {"login": "odisseus"}, "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -421,6 +422,54 @@ public static GeneralCommandLine defaultCommandLine(@NotNull File pantsExecutabl\n     }\n   }\n \n+  public static Collection<String> listMatchingTargets(@NotNull String projectPath, String selector) throws PantsException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM1MTUxMA=="}, "originalCommit": {"oid": "0fdf5dd13218ffb9478ebea37ef936f468d59a64"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTAxMjE1OnYy", "diffSide": "RIGHT", "path": "src/com/twitter/intellij/pants/service/project/PythonVenvBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxMjoxNDo1MFrOITiFsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNTozMzoyNVrOITqGbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM1MjM2OQ==", "bodyText": "Shouldn't the target name be configurable?", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r557352369", "createdAt": "2021-01-14T12:14:50Z", "author": {"login": "tpasternak"}, "path": "src/com/twitter/intellij/pants/service/project/PythonVenvBuilder.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.service.project;\n+\n+import com.intellij.execution.ExecutionException;\n+import com.intellij.execution.configurations.GeneralCommandLine;\n+import com.intellij.execution.process.ProcessAdapter;\n+import com.intellij.execution.process.ProcessOutput;\n+import com.intellij.openapi.diagnostic.Logger;\n+import com.twitter.intellij.pants.service.project.model.PythonInterpreterInfo;\n+import com.twitter.intellij.pants.util.PantsUtil;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+public class PythonVenvBuilder {\n+\n+  protected static final Logger LOG = Logger.getInstance(PythonVenvBuilder.class);\n+\n+  private final String projectPath;\n+  private final ProcessAdapter processAdapter;\n+\n+  private PythonVenvBuilder(String projectPath, ProcessAdapter processAdapter) {\n+    this.projectPath = projectPath;\n+    this.processAdapter = processAdapter;\n+  }\n+\n+  public static Optional<PythonVenvBuilder> forProjectPath(String projectPath, ProcessAdapter processAdapter){\n+    Collection<String> allTargets = PantsUtil.listMatchingTargets(projectPath, \"entsec/venv_builder:venv_builder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fdf5dd13218ffb9478ebea37ef936f468d59a64"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ4MzYzMQ==", "bodyText": "The target name is always the same. If your project doesn't have this exact target, you probably can't use the venv_builder tool anyway.  Therefore, I think it is permissible to hardcode this target name.\nHowever, the tool itself doesn't seem to contain any special logic. In the future, we might want to get that tool released to the public, or perhaps create a similar one.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r557483631", "createdAt": "2021-01-14T15:33:25Z", "author": {"login": "odisseus"}, "path": "src/com/twitter/intellij/pants/service/project/PythonVenvBuilder.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.service.project;\n+\n+import com.intellij.execution.ExecutionException;\n+import com.intellij.execution.configurations.GeneralCommandLine;\n+import com.intellij.execution.process.ProcessAdapter;\n+import com.intellij.execution.process.ProcessOutput;\n+import com.intellij.openapi.diagnostic.Logger;\n+import com.twitter.intellij.pants.service.project.model.PythonInterpreterInfo;\n+import com.twitter.intellij.pants.util.PantsUtil;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+public class PythonVenvBuilder {\n+\n+  protected static final Logger LOG = Logger.getInstance(PythonVenvBuilder.class);\n+\n+  private final String projectPath;\n+  private final ProcessAdapter processAdapter;\n+\n+  private PythonVenvBuilder(String projectPath, ProcessAdapter processAdapter) {\n+    this.projectPath = projectPath;\n+    this.processAdapter = processAdapter;\n+  }\n+\n+  public static Optional<PythonVenvBuilder> forProjectPath(String projectPath, ProcessAdapter processAdapter){\n+    Collection<String> allTargets = PantsUtil.listMatchingTargets(projectPath, \"entsec/venv_builder:venv_builder\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzM1MjM2OQ=="}, "originalCommit": {"oid": "0fdf5dd13218ffb9478ebea37ef936f468d59a64"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwOTU5Mzc1OnYy", "diffSide": "RIGHT", "path": "src/com/twitter/intellij/pants/service/project/PythonVenvBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0MToxN1rOITnpZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNDo0MToxN1rOITnpZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzQ0MzQzMQ==", "bodyText": "Again, this should be configurable", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/594#discussion_r557443431", "createdAt": "2021-01-14T14:41:17Z", "author": {"login": "tpasternak"}, "path": "src/com/twitter/intellij/pants/service/project/PythonVenvBuilder.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.service.project;\n+\n+import com.intellij.execution.ExecutionException;\n+import com.intellij.execution.configurations.GeneralCommandLine;\n+import com.intellij.execution.process.ProcessAdapter;\n+import com.intellij.execution.process.ProcessOutput;\n+import com.intellij.openapi.diagnostic.Logger;\n+import com.twitter.intellij.pants.service.project.model.PythonInterpreterInfo;\n+import com.twitter.intellij.pants.util.PantsUtil;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+public class PythonVenvBuilder {\n+\n+  protected static final Logger LOG = Logger.getInstance(PythonVenvBuilder.class);\n+\n+  private final String projectPath;\n+  private final ProcessAdapter processAdapter;\n+\n+  private PythonVenvBuilder(String projectPath, ProcessAdapter processAdapter) {\n+    this.projectPath = projectPath;\n+    this.processAdapter = processAdapter;\n+  }\n+\n+  public static Optional<PythonVenvBuilder> forProjectPath(String projectPath, ProcessAdapter processAdapter){\n+    Collection<String> allTargets = PantsUtil.listMatchingTargets(projectPath, \"entsec/venv_builder:venv_builder\");\n+    if(!allTargets.isEmpty())\n+      return Optional.of(new PythonVenvBuilder(projectPath, processAdapter));\n+    else\n+      return Optional.empty();\n+  }\n+\n+  public PythonInterpreterInfo build(String target, Path venvDir) {\n+    LOG.info(String.format(\"Invoking the .venv builder with target %s at %s\", target, venvDir));\n+    try {\n+      GeneralCommandLine command = buildAndRunVenvBuilder(target, venvDir);\n+      final ProcessOutput processOutput = getProcessOutput(command);\n+      if(processOutput.checkSuccess(LOG)) {\n+        PythonInterpreterInfo result = new PythonInterpreterInfo();\n+        result.setBinary(venvDir.resolve(\"bin/python\").toString());\n+        result.setChroot(venvDir.toString());\n+        return result;\n+      }\n+      else {\n+        throw new RuntimeException(String.format(\"Failed to create a Python virtual environment in %s\", venvDir));\n+      }\n+    } catch(ExecutionException ee) {\n+      throw new RuntimeException(\"An error occurred while running the .venv builder\", ee);\n+    }\n+  }\n+\n+  private GeneralCommandLine buildAndRunVenvBuilder(String target, Path venvDir) {\n+    //TODO Use PantsTaskManager.executeTasks?\n+    final GeneralCommandLine commandLine = PantsUtil.defaultCommandLine(projectPath)\n+      .withEnvironment(\"PANTS_CONCURRENT\", \"true\");\n+    commandLine.addParameters(\"run\", \"entsec/venv_builder:venv_builder\", \"--\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fdf5dd13218ffb9478ebea37ef936f468d59a64"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2027, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}