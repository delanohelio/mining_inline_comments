{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDAxMDM0", "number": 492, "title": "Fix CI", "bodyText": "closes #491", "createdAt": "2020-02-07T13:02:16Z", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492", "merged": true, "mergeCommit": {"oid": "d095b8bb0ca8479988614a50507772726b23c5f1"}, "closed": true, "closedAt": "2020-02-12T17:34:07Z", "author": {"login": "mzarnowski"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcB-4uogH2gAyMzcyNDAxMDM0OjRkYjhhZTJmZGVlNGY2Yjc4ZmU5ZTQ3OWY1MzA4MWZmM2I1ZmY5ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDp281gFqTM1NzY0OTUwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4db8ae2fdee4f6b78fe9e479f53081ff3b5ff9fa", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/4db8ae2fdee4f6b78fe9e479f53081ff3b5ff9fa", "committedDate": "2020-02-07T12:56:05Z", "message": "Log content of a collection if element not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb713827b35ad854264db4070788ac0a315e662a", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/bb713827b35ad854264db4070788ac0a315e662a", "committedDate": "2020-02-10T08:04:50Z", "message": "Don't use hardcoded names for module run config test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41367d5e7fa1705a4cf9539ac4ab3fbfc239cf13", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/41367d5e7fa1705a4cf9539ac4ab3fbfc239cf13", "committedDate": "2020-02-10T08:32:14Z", "message": "Don't use hardcoded names for method run config test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef091a7fbc753fc1388f58e978be6c0f9733d83", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/3ef091a7fbc753fc1388f58e978be6c0f9733d83", "committedDate": "2020-02-10T08:59:28Z", "message": "Don't use hardcoded dependencies in class run config test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42962273ef6cb1b08b0b506057ff20c41a700998", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/42962273ef6cb1b08b0b506057ff20c41a700998", "committedDate": "2020-02-07T13:41:29Z", "message": "Don't expect removed test-cases to be present"}, "afterCommit": {"oid": "3ef091a7fbc753fc1388f58e978be6c0f9733d83", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/3ef091a7fbc753fc1388f58e978be6c0f9733d83", "committedDate": "2020-02-10T08:59:28Z", "message": "Don't use hardcoded dependencies in class run config test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTM3Mjc3", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#pullrequestreview-355937277", "createdAt": "2020-02-10T13:33:20Z", "commit": {"oid": "1811ac35e58ee624eac1a50a5b2feec9f803d14e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozMzoyMVrOFnmIpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzozMzoyMVrOFnmIpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2MzU5MA==", "bodyText": "The method name is actually self-descripting :)", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#discussion_r377063590", "createdAt": "2020-02-10T13:33:21Z", "author": {"login": "tpasternak"}, "path": "tests/com/twitter/intellij/pants/integration/TargetFileCompletionIntegrationTest.java", "diffHunk": "@@ -90,6 +93,10 @@ private void completionTest(String stringToComplete, String[] expected) {\n     String fullStringToComplete = \"\\n\\n\" + stringToComplete;\n     // should be only tested with pants versions above 1.24.0\n     if (PantsUtil.isCompatiblePantsVersion(myProjectRoot.getPath(), \"1.24.0\")) {\n+      // invalidate caches", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1811ac35e58ee624eac1a50a5b2feec9f803d14e"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1811ac35e58ee624eac1a50a5b2feec9f803d14e", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/1811ac35e58ee624eac1a50a5b2feec9f803d14e", "committedDate": "2020-02-10T13:25:52Z", "message": "Invalidate caches related to completions"}, "afterCommit": {"oid": "f6969a2d888d2c64ca705db41bf5df880438de51", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/f6969a2d888d2c64ca705db41bf5df880438de51", "committedDate": "2020-02-11T13:22:45Z", "message": "Invalidate caches related to completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcefd34ae63e873b0662f9d23a6013365c1a5d10", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/dcefd34ae63e873b0662f9d23a6013365c1a5d10", "committedDate": "2020-02-11T16:28:00Z", "message": "Invalidate caches related to completions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6969a2d888d2c64ca705db41bf5df880438de51", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/f6969a2d888d2c64ca705db41bf5df880438de51", "committedDate": "2020-02-11T13:22:45Z", "message": "Invalidate caches related to completions"}, "afterCommit": {"oid": "dcefd34ae63e873b0662f9d23a6013365c1a5d10", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/dcefd34ae63e873b0662f9d23a6013365c1a5d10", "committedDate": "2020-02-11T16:28:00Z", "message": "Invalidate caches related to completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1", "committedDate": "2020-02-11T18:30:43Z", "message": "Don't use hardcoded values in the test case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39b7cf6e078000325b5fb27b43ad07a4535d56ad", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/39b7cf6e078000325b5fb27b43ad07a4535d56ad", "committedDate": "2020-02-11T17:44:36Z", "message": "Don't use hardcoded values in the test case"}, "afterCommit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1", "author": {"user": {"login": "mzarnowski", "name": "Marek \u017barnowski"}}, "url": "https://github.com/pantsbuild/intellij-pants-plugin/commit/a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1", "committedDate": "2020-02-11T18:30:43Z", "message": "Don't use hardcoded values in the test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDE4MzU1", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#pullrequestreview-357018355", "createdAt": "2020-02-11T21:43:35Z", "commit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0MzozNlrOFoaP7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0ODowNFrOFoaYZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxNzQyMg==", "bodyText": "can inline\nCollections.singletonList(\"test\")", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#discussion_r377917422", "createdAt": "2020-02-11T21:43:36Z", "author": {"login": "wisechengyi"}, "path": "tests/com/twitter/intellij/pants/execution/OSSPantsJvmRunConfigurationIntegrationTest.java", "diffHunk": "@@ -20,48 +20,41 @@\n import com.intellij.psi.PsiElement;\n import com.intellij.psi.PsiMethod;\n import com.intellij.psi.PsiPackage;\n-import com.intellij.psi.search.GlobalSearchScope;\n import com.intellij.testFramework.MapDataContext;\n import com.twitter.intellij.pants.PantsManager;\n+import com.twitter.intellij.pants.util.ProjectTestJvms;\n import com.twitter.intellij.pants.service.task.PantsTaskManager;\n import com.twitter.intellij.pants.settings.PantsExecutionSettings;\n import com.twitter.intellij.pants.testFramework.OSSPantsIntegrationTest;\n import com.twitter.intellij.pants.util.PantsUtil;\n import org.jetbrains.annotations.NotNull;\n+import org.junit.Assert;\n \n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n \n public class OSSPantsJvmRunConfigurationIntegrationTest extends OSSPantsIntegrationTest {\n   public void testClassRunConfiguration() throws Throwable {\n     doImport(\"testprojects/tests/java/org/pantsbuild/testproject/testjvms\");\n \n-    String classReference = \"org.pantsbuild.testproject.testjvms.TestSix\";\n-\n-    PsiClass testClass = JavaPsiFacade.getInstance(myProject).findClass(classReference, GlobalSearchScope.allScope(myProject));\n-    assertNotNull(testClass);\n+    PsiClass testClass = ProjectTestJvms.anyTestClass(myProject, getProjectPath());\n \n     ExternalSystemRunConfiguration esc = getExternalSystemRunConfiguration(testClass);\n \n     // Make sure task name is `test` goal.\n-    assertEquals(Collections.singletonList(\"test\"), esc.getSettings().getTaskNames());\n+    String testTask = \"test\";\n+    assertEquals(Collections.singletonList(testTask), esc.getSettings().getTaskNames());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxOTQ2Ng==", "bodyText": "Do you think it'd be possible to wrap this around\nif (PantsUtil.isCompatiblePantsVersion(getProjectPath(), \"1.25.0\")) { \n...\n} \nelse {\n// testprojects/tests/java/org/pantsbuild/testproject/testjvms:base\n// testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight\n// testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight-test-platform\n}", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#discussion_r377919466", "createdAt": "2020-02-11T21:47:51Z", "author": {"login": "wisechengyi"}, "path": "tests/com/twitter/intellij/pants/execution/OSSPantsJvmRunConfigurationIntegrationTest.java", "diffHunk": "@@ -20,48 +20,41 @@\n import com.intellij.psi.PsiElement;\n import com.intellij.psi.PsiMethod;\n import com.intellij.psi.PsiPackage;\n-import com.intellij.psi.search.GlobalSearchScope;\n import com.intellij.testFramework.MapDataContext;\n import com.twitter.intellij.pants.PantsManager;\n+import com.twitter.intellij.pants.util.ProjectTestJvms;\n import com.twitter.intellij.pants.service.task.PantsTaskManager;\n import com.twitter.intellij.pants.settings.PantsExecutionSettings;\n import com.twitter.intellij.pants.testFramework.OSSPantsIntegrationTest;\n import com.twitter.intellij.pants.util.PantsUtil;\n import org.jetbrains.annotations.NotNull;\n+import org.junit.Assert;\n \n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n \n public class OSSPantsJvmRunConfigurationIntegrationTest extends OSSPantsIntegrationTest {\n   public void testClassRunConfiguration() throws Throwable {\n     doImport(\"testprojects/tests/java/org/pantsbuild/testproject/testjvms\");\n \n-    String classReference = \"org.pantsbuild.testproject.testjvms.TestSix\";\n-\n-    PsiClass testClass = JavaPsiFacade.getInstance(myProject).findClass(classReference, GlobalSearchScope.allScope(myProject));\n-    assertNotNull(testClass);\n+    PsiClass testClass = ProjectTestJvms.anyTestClass(myProject, getProjectPath());\n \n     ExternalSystemRunConfiguration esc = getExternalSystemRunConfiguration(testClass);\n \n     // Make sure task name is `test` goal.\n-    assertEquals(Collections.singletonList(\"test\"), esc.getSettings().getTaskNames());\n+    String testTask = \"test\";\n+    assertEquals(Collections.singletonList(testTask), esc.getSettings().getTaskNames());\n \n     List<String> configScriptParameters = PantsUtil.parseCmdParameters(Optional.ofNullable(esc.getSettings().getScriptParameters()));\n-\n-    List<String> expectedConfigScriptParameters = Arrays.asList(\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight-test-platform\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:six\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:seven\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:base\",\n-      \"--test-junit-test=\" + classReference\n-    );\n-    assertEquals(expectedConfigScriptParameters, configScriptParameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxOTU4OQ==", "bodyText": "same here", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#discussion_r377919589", "createdAt": "2020-02-11T21:48:04Z", "author": {"login": "wisechengyi"}, "path": "tests/com/twitter/intellij/pants/execution/OSSPantsJvmRunConfigurationIntegrationTest.java", "diffHunk": "@@ -76,34 +69,21 @@ public void testClassRunConfiguration() throws Throwable {\n \n     String debuggerSetup = \"dummy_debugger_setup\";\n \n-    GeneralCommandLine finalDebugCommandline = getFinalCommandline(esc, debuggerSetup, taskManagerClass);\n+    List<String> debugParameters = Arrays.asList(\"--no-test-junit-timeouts\", \"--jvm-test-junit-options=\" + debuggerSetup, \"test\");\n+    List<String> expectedDebugParameters = Stream.of(debugParameters, configScriptParameters)\n+      .flatMap(Collection::stream)\n+      .collect(Collectors.toList());\n \n-    List<String> expectedFinalDebugCommandlineParameters = Arrays.asList(\n-      \"--no-test-junit-timeouts\",\n-      \"--jvm-test-junit-options=\" + debuggerSetup,\n-      \"test\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight-test-platform\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:six\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:seven\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:base\",\n-      \"--test-junit-test=\" + classReference\n-    );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NjQ5NTAw", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#pullrequestreview-357649500", "createdAt": "2020-02-12T17:33:50Z", "commit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMzo1MFrOFo3_Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMzo1MFrOFo3_Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNDYzMA==", "bodyText": "I see. I guess that works, too. Thanks!\nMy original thought was to keep the existing mechanism, and assert on different targets based on the pants version in the pantsbuild/pants repo.", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/492#discussion_r378404630", "createdAt": "2020-02-12T17:33:50Z", "author": {"login": "wisechengyi"}, "path": "tests/com/twitter/intellij/pants/execution/OSSPantsJvmRunConfigurationIntegrationTest.java", "diffHunk": "@@ -20,48 +20,41 @@\n import com.intellij.psi.PsiElement;\n import com.intellij.psi.PsiMethod;\n import com.intellij.psi.PsiPackage;\n-import com.intellij.psi.search.GlobalSearchScope;\n import com.intellij.testFramework.MapDataContext;\n import com.twitter.intellij.pants.PantsManager;\n+import com.twitter.intellij.pants.util.ProjectTestJvms;\n import com.twitter.intellij.pants.service.task.PantsTaskManager;\n import com.twitter.intellij.pants.settings.PantsExecutionSettings;\n import com.twitter.intellij.pants.testFramework.OSSPantsIntegrationTest;\n import com.twitter.intellij.pants.util.PantsUtil;\n import org.jetbrains.annotations.NotNull;\n+import org.junit.Assert;\n \n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n \n \n public class OSSPantsJvmRunConfigurationIntegrationTest extends OSSPantsIntegrationTest {\n   public void testClassRunConfiguration() throws Throwable {\n     doImport(\"testprojects/tests/java/org/pantsbuild/testproject/testjvms\");\n \n-    String classReference = \"org.pantsbuild.testproject.testjvms.TestSix\";\n-\n-    PsiClass testClass = JavaPsiFacade.getInstance(myProject).findClass(classReference, GlobalSearchScope.allScope(myProject));\n-    assertNotNull(testClass);\n+    PsiClass testClass = ProjectTestJvms.anyTestClass(myProject, getProjectPath());\n \n     ExternalSystemRunConfiguration esc = getExternalSystemRunConfiguration(testClass);\n \n     // Make sure task name is `test` goal.\n-    assertEquals(Collections.singletonList(\"test\"), esc.getSettings().getTaskNames());\n+    String testTask = \"test\";\n+    assertEquals(Collections.singletonList(testTask), esc.getSettings().getTaskNames());\n \n     List<String> configScriptParameters = PantsUtil.parseCmdParameters(Optional.ofNullable(esc.getSettings().getScriptParameters()));\n-\n-    List<String> expectedConfigScriptParameters = Arrays.asList(\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight-test-platform\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:six\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:seven\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:eight\",\n-      \"testprojects/tests/java/org/pantsbuild/testproject/testjvms:base\",\n-      \"--test-junit-test=\" + classReference\n-    );\n-    assertEquals(expectedConfigScriptParameters, configScriptParameters);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxOTQ2Ng=="}, "originalCommit": {"oid": "a9d73e59402f1ee7bfa99c0c7c6b8974f76c27b1"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1949, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}