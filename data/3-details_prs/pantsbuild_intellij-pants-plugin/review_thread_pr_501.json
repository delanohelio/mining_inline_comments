{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MzUyNTgx", "number": 501, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMjo1MjozNVrODnc_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjowMTo1N1rODn4xmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjk2MTcyOnYy", "diffSide": "RIGHT", "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMjo1MjozNVrOF1dUvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MTo0OVrOF1_Cpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU5OTI5Mw==", "bodyText": "Maybe let's rename it if it's not always \"later\"", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/501#discussion_r391599293", "createdAt": "2020-03-12T12:52:35Z", "author": {"login": "tpasternak"}, "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -979,4 +980,15 @@ public static void invalidatePluginCaches() {\n   public static List<String> parseCmdParameters(Optional<String> cmdArgsLine) {\n     return cmdArgsLine.map(ParametersListUtil::parse).orElse(ContainerUtil.newArrayList());\n   }\n+\n+  public static void invokeLater(Runnable task) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56948f9072a7470b4bdd06a9f0465684e4cdc24"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MTcxOQ==", "bodyText": "Renamed to invokeLaterIfNeeded to maintain compatibility with the underlying idea method", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/501#discussion_r392151719", "createdAt": "2020-03-13T10:41:49Z", "author": {"login": "mzarnowski"}, "path": "common/com/twitter/intellij/pants/util/PantsUtil.java", "diffHunk": "@@ -979,4 +980,15 @@ public static void invalidatePluginCaches() {\n   public static List<String> parseCmdParameters(Optional<String> cmdArgsLine) {\n     return cmdArgsLine.map(ParametersListUtil::parse).orElse(ContainerUtil.newArrayList());\n   }\n+\n+  public static void invokeLater(Runnable task) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU5OTI5Mw=="}, "originalCommit": {"oid": "b56948f9072a7470b4bdd06a9f0465684e4cdc24"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTUxMjU2OnYy", "diffSide": "RIGHT", "path": "src/com/twitter/intellij/pants/components/impl/PantsActionConfigurationCustomizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjowMTo1N1rOF2JW6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjowMjozM1rOF2JYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMDc0NQ==", "bodyText": "Can we register actions in plugin.xml?", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/501#discussion_r392320745", "createdAt": "2020-03-13T16:01:57Z", "author": {"login": "tpasternak"}, "path": "src/com/twitter/intellij/pants/components/impl/PantsActionConfigurationCustomizer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.components.impl;\n+\n+import com.intellij.openapi.actionSystem.ActionManager;\n+import com.intellij.openapi.actionSystem.AnAction;\n+import com.intellij.openapi.actionSystem.IdeActions;\n+import com.intellij.openapi.actionSystem.impl.ActionConfigurationCustomizer;\n+import com.twitter.intellij.pants.compiler.actions.PantsCompileAllTargetsAction;\n+import com.twitter.intellij.pants.compiler.actions.PantsCompileAllTargetsInModuleAction;\n+import com.twitter.intellij.pants.compiler.actions.PantsRebuildAction;\n+import com.twitter.intellij.pants.ui.PantsOverrideAction;\n+import com.twitter.intellij.pants.util.PantsConstants;\n+import icons.PantsIcons;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Optional;\n+\n+final class PantsActionConfigurationCustomizer implements ActionConfigurationCustomizer {\n+  private static final String PANTS_REBUILD_ACTION_NAME = IdeActions.ACTION_COMPILE_PROJECT + \"Pants\";\n+  private static final String PANTS_COMPILE_MODULE_ACTION_NAME = IdeActions.ACTION_MAKE_MODULE + \"Pants\";\n+  private static final String PANTS_COMPILE_PROJECT_ACTION_NAME = PantsConstants.ACTION_MAKE_PROJECT_ID + \"Pants\";\n+\n+  @Override\n+  public void customize(@NotNull ActionManager manager) {\n+    //  Registers the rebuild action to Pants rebuild action.\n+    //  Registers Make module action to 'Make all targets in module' action.\n+    //  Disables compile action\n+\n+    AnAction pantsCompileAllTargetAction = new PantsOverrideAction(\n+      PantsConstants.ACTION_MAKE_PROJECT_DESCRIPTION,\n+      new PantsCompileAllTargetsAction(),\n+      manager.getAction(PantsConstants.ACTION_MAKE_PROJECT_ID),\n+      PantsIcons.Icon\n+    );\n+\n+    AnAction pantsMakeModuleAction = new PantsOverrideAction(\n+      new PantsCompileAllTargetsInModuleAction(Optional.empty()),\n+      manager.getAction(PANTS_COMPILE_MODULE_ACTION_NAME)\n+    );\n+\n+    AnAction pantsRebuildAction = new PantsOverrideAction(\n+      PantsConstants.REBUILD_PROJECT_DESCRIPTION,\n+      new PantsRebuildAction(),\n+      manager.getAction(PANTS_REBUILD_ACTION_NAME)\n+    );\n+\n+    manager.registerAction(PANTS_COMPILE_PROJECT_ACTION_NAME, pantsCompileAllTargetAction);\n+    manager.registerAction(PANTS_COMPILE_MODULE_ACTION_NAME, pantsMakeModuleAction);\n+    manager.registerAction(PANTS_REBUILD_ACTION_NAME, pantsRebuildAction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e4f99b282a3b08834ad7a99d02366837935590"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMTA5OA==", "bodyText": "Nvm, it was moved from the other place, it's not a part of this PR", "url": "https://github.com/pantsbuild/intellij-pants-plugin/pull/501#discussion_r392321098", "createdAt": "2020-03-13T16:02:33Z", "author": {"login": "tpasternak"}, "path": "src/com/twitter/intellij/pants/components/impl/PantsActionConfigurationCustomizer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n+// Licensed under the Apache License, Version 2.0 (see LICENSE).\n+\n+package com.twitter.intellij.pants.components.impl;\n+\n+import com.intellij.openapi.actionSystem.ActionManager;\n+import com.intellij.openapi.actionSystem.AnAction;\n+import com.intellij.openapi.actionSystem.IdeActions;\n+import com.intellij.openapi.actionSystem.impl.ActionConfigurationCustomizer;\n+import com.twitter.intellij.pants.compiler.actions.PantsCompileAllTargetsAction;\n+import com.twitter.intellij.pants.compiler.actions.PantsCompileAllTargetsInModuleAction;\n+import com.twitter.intellij.pants.compiler.actions.PantsRebuildAction;\n+import com.twitter.intellij.pants.ui.PantsOverrideAction;\n+import com.twitter.intellij.pants.util.PantsConstants;\n+import icons.PantsIcons;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Optional;\n+\n+final class PantsActionConfigurationCustomizer implements ActionConfigurationCustomizer {\n+  private static final String PANTS_REBUILD_ACTION_NAME = IdeActions.ACTION_COMPILE_PROJECT + \"Pants\";\n+  private static final String PANTS_COMPILE_MODULE_ACTION_NAME = IdeActions.ACTION_MAKE_MODULE + \"Pants\";\n+  private static final String PANTS_COMPILE_PROJECT_ACTION_NAME = PantsConstants.ACTION_MAKE_PROJECT_ID + \"Pants\";\n+\n+  @Override\n+  public void customize(@NotNull ActionManager manager) {\n+    //  Registers the rebuild action to Pants rebuild action.\n+    //  Registers Make module action to 'Make all targets in module' action.\n+    //  Disables compile action\n+\n+    AnAction pantsCompileAllTargetAction = new PantsOverrideAction(\n+      PantsConstants.ACTION_MAKE_PROJECT_DESCRIPTION,\n+      new PantsCompileAllTargetsAction(),\n+      manager.getAction(PantsConstants.ACTION_MAKE_PROJECT_ID),\n+      PantsIcons.Icon\n+    );\n+\n+    AnAction pantsMakeModuleAction = new PantsOverrideAction(\n+      new PantsCompileAllTargetsInModuleAction(Optional.empty()),\n+      manager.getAction(PANTS_COMPILE_MODULE_ACTION_NAME)\n+    );\n+\n+    AnAction pantsRebuildAction = new PantsOverrideAction(\n+      PantsConstants.REBUILD_PROJECT_DESCRIPTION,\n+      new PantsRebuildAction(),\n+      manager.getAction(PANTS_REBUILD_ACTION_NAME)\n+    );\n+\n+    manager.registerAction(PANTS_COMPILE_PROJECT_ACTION_NAME, pantsCompileAllTargetAction);\n+    manager.registerAction(PANTS_COMPILE_MODULE_ACTION_NAME, pantsMakeModuleAction);\n+    manager.registerAction(PANTS_REBUILD_ACTION_NAME, pantsRebuildAction);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMDc0NQ=="}, "originalCommit": {"oid": "20e4f99b282a3b08834ad7a99d02366837935590"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2041, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}