{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMTI0MTYz", "number": 122, "title": "Modify user store meta type endpoint", "bodyText": "Purpose\nResolves wso2/product-is#7877", "createdAt": "2020-03-23T02:38:43Z", "url": "https://github.com/wso2/identity-api-server/pull/122", "merged": true, "mergeCommit": {"oid": "06624f26f4e3269878421fdd4ea890f7bd5bd617"}, "closed": true, "closedAt": "2020-03-25T09:07:23Z", "author": {"login": "AnuradhaSK"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQMobCgH2gAyMzkyMTI0MTYzOjQ0ZmM3YWJhY2VlMTljY2YxNWFlMDAyNDc0NTRlNDhlODAwOTk3ZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRDx5wgFqTM4MDk2MzEyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44fc7abacee19ccf15ae00247454e48e800997fb", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/44fc7abacee19ccf15ae00247454e48e800997fb", "committedDate": "2020-03-22T16:51:53Z", "message": "Modify user store meta endpoint to give metadata of particular userstore type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTI1MDk4", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-379125098", "createdAt": "2020-03-23T04:22:26Z", "commit": {"oid": "44fc7abacee19ccf15ae00247454e48e800997fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDoyMjoyNlrOF52ieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDoyMjoyNlrOF52ieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNjcxNA==", "bodyText": "why were the pagination + sorting params removed?", "url": "https://github.com/wso2/identity-api-server/pull/122#discussion_r396206714", "createdAt": "2020-03-23T04:22:26Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -238,35 +238,24 @@ public UserStoreConfigurationsRes getUserStoreByDomainId(String domainId) {\n     }\n \n     /**\n-     * Retrieve the meta of configured user store type.\n+     * Retrieve the meta of user store type.\n      *\n      * @param typeId the user store type id.\n-     * @param limit  items per page.\n-     * @param offset to specify the offset param.\n-     * @param filter to specify the filtering capabilities.\n-     * @param sort   to specify the sorting order.\n      * @return MetaUserStoreType.\n      */\n \n-    public List<MetaUserStoreType> getUserStoreManagerProperties(String typeId, Integer limit, Integer offset,\n-                                                                 String filter, String sort) {\n-\n-        handleNotImplementedBehaviour(limit, offset, filter, sort);\n+    public MetaUserStoreType getUserStoreManagerProperties(String typeId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc7abacee19ccf15ae00247454e48e800997fb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTI1NjQw", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-379125640", "createdAt": "2020-03-23T04:24:44Z", "commit": {"oid": "44fc7abacee19ccf15ae00247454e48e800997fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDoyNDo0NFrOF52kNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNDoyNDo0NFrOF52kNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNzE1OQ==", "bodyText": "can classNames become null here? if so we need to add a null check.", "url": "https://github.com/wso2/identity-api-server/pull/122#discussion_r396207159", "createdAt": "2020-03-23T04:24:44Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -238,35 +238,24 @@ public UserStoreConfigurationsRes getUserStoreByDomainId(String domainId) {\n     }\n \n     /**\n-     * Retrieve the meta of configured user store type.\n+     * Retrieve the meta of user store type.\n      *\n      * @param typeId the user store type id.\n-     * @param limit  items per page.\n-     * @param offset to specify the offset param.\n-     * @param filter to specify the filtering capabilities.\n-     * @param sort   to specify the sorting order.\n      * @return MetaUserStoreType.\n      */\n \n-    public List<MetaUserStoreType> getUserStoreManagerProperties(String typeId, Integer limit, Integer offset,\n-                                                                 String filter, String sort) {\n-\n-        handleNotImplementedBehaviour(limit, offset, filter, sort);\n+    public MetaUserStoreType getUserStoreManagerProperties(String typeId) {\n \n         UserStoreConfigService userStoreConfigService = UserStoreConfigServiceHolder.getUserStoreConfigService();\n+        Set<String> classNames;\n         try {\n-            UserStoreDTO[] userStoreDTOS = userStoreConfigService.getUserStores();\n-            if (userStoreDTOS.length == 0) {\n-                throw handleException(Response.Status.NOT_FOUND, UserStoreConstants.ErrorMessage.ERROR_CODE_NOT_FOUND);\n-            }\n-            List<UserStoreDTO> userStoresByTypeNameList = new ArrayList<>();\n-            for (UserStoreDTO userStoreDTO : userStoreDTOS) {\n-                if (Objects.equals(getUserStoreType(base64URLDecodeId(typeId)), userStoreDTO.getClassName())) {\n-                    userStoresByTypeNameList.add(userStoreDTO);\n-                }\n+            classNames = userStoreConfigService.getAvailableUserStoreClasses();\n+            if (classNames.contains(getUserStoreType(base64URLDecodeId(typeId)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc7abacee19ccf15ae00247454e48e800997fb"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f145414e186a1a82b6bc5e4cdd984d641d680ca8", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/f145414e186a1a82b6bc5e4cdd984d641d680ca8", "committedDate": "2020-03-23T16:26:03Z", "message": "Add null check on classNames set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1858735d552af847784bd640d2346186216cbb6f", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/1858735d552af847784bd640d2346186216cbb6f", "committedDate": "2020-03-25T06:21:11Z", "message": "Change swagger definition in /userstores/meta/types/{type-id}"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODg1Nzk2", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-380885796", "createdAt": "2020-03-25T06:34:23Z", "commit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNDoyM1rOF7Np3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNDoyM1rOF7Np3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDAxNQ==", "bodyText": "shall we use CollectionUtils.isNotEmpty(classNames) here?", "url": "https://github.com/wso2/identity-api-server/pull/122#discussion_r397634015", "createdAt": "2020-03-25T06:34:23Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -238,35 +238,24 @@ public UserStoreConfigurationsRes getUserStoreByDomainId(String domainId) {\n     }\n \n     /**\n-     * Retrieve the meta of configured user store type.\n+     * Retrieve the meta of user store type.\n      *\n      * @param typeId the user store type id.\n-     * @param limit  items per page.\n-     * @param offset to specify the offset param.\n-     * @param filter to specify the filtering capabilities.\n-     * @param sort   to specify the sorting order.\n      * @return MetaUserStoreType.\n      */\n \n-    public List<MetaUserStoreType> getUserStoreManagerProperties(String typeId, Integer limit, Integer offset,\n-                                                                 String filter, String sort) {\n-\n-        handleNotImplementedBehaviour(limit, offset, filter, sort);\n+    public MetaUserStoreType getUserStoreManagerProperties(String typeId) {\n \n         UserStoreConfigService userStoreConfigService = UserStoreConfigServiceHolder.getUserStoreConfigService();\n+        Set<String> classNames;\n         try {\n-            UserStoreDTO[] userStoreDTOS = userStoreConfigService.getUserStores();\n-            if (userStoreDTOS.length == 0) {\n-                throw handleException(Response.Status.NOT_FOUND, UserStoreConstants.ErrorMessage.ERROR_CODE_NOT_FOUND);\n-            }\n-            List<UserStoreDTO> userStoresByTypeNameList = new ArrayList<>();\n-            for (UserStoreDTO userStoreDTO : userStoreDTOS) {\n-                if (Objects.equals(getUserStoreType(base64URLDecodeId(typeId)), userStoreDTO.getClassName())) {\n-                    userStoresByTypeNameList.add(userStoreDTO);\n-                }\n+            classNames = userStoreConfigService.getAvailableUserStoreClasses();\n+            if (!classNames.isEmpty() && classNames.contains(getUserStoreType(base64URLDecodeId(typeId)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODg2MDI0", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-380886024", "createdAt": "2020-03-25T06:35:08Z", "commit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNTowOFrOF7Nqqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNTowOFrOF7Nqqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDIxOA==", "bodyText": "check whether properties is null before calling its methods", "url": "https://github.com/wso2/identity-api-server/pull/122#discussion_r397634218", "createdAt": "2020-03-25T06:35:08Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -483,32 +472,26 @@ private void addUserstoreProperties(UserStoreDTO userStoreDTO, UserStoreListResp\n     }\n \n     /**\n-     * Construct the configured user store type's meta.\n+     * Construct the user store type's meta.\n      *\n-     * @param userStoreDTOS the list of {@link UserStoreDTO}.\n      * @param typeId        the type id of the user store.\n      * @return MetaUserStoreType.\n      */\n-    private List<MetaUserStoreType> buildUserStoreMetaResponse(List<UserStoreDTO> userStoreDTOS, String typeId) {\n-\n-        List<MetaUserStoreType> metaUserStoreTypes = new ArrayList<>();\n-        for (UserStoreDTO userStoreDTO : userStoreDTOS) {\n-            Properties properties = UserStoreManagerRegistry.getUserStoreProperties(userStoreDTO.getClassName());\n-            MetaUserStoreType metaUserStore = new MetaUserStoreType();\n-            UserStorePropertiesRes userStorePropertiesRes = new UserStorePropertiesRes();\n-            userStorePropertiesRes.mandatory(buildPropertiesRes(properties.getMandatoryProperties()));\n-            userStorePropertiesRes.optional(buildPropertiesRes(properties.getOptionalProperties()));\n-            userStorePropertiesRes.advanced(buildPropertiesRes(properties.getAdvancedProperties()));\n-            metaUserStore.setProperties(userStorePropertiesRes);\n-            metaUserStore.setTypeId(typeId);\n-            metaUserStore.setName(userStoreDTO.getDomainId());\n-            metaUserStore.setDescription(userStoreDTO.getDescription());\n-            metaUserStore.setTypeName(base64URLDecodeId(typeId));\n-            metaUserStore.setClassName(getUserStoreType(base64URLDecodeId(typeId)));\n-            metaUserStoreTypes.add(metaUserStore);\n-\n-        }\n-        return metaUserStoreTypes;\n+    private MetaUserStoreType buildUserStoreMetaResponse(String typeId) {\n+\n+        Properties properties = UserStoreManagerRegistry.getUserStoreProperties(\n+                getUserStoreType(base64URLDecodeId(typeId)));\n+        MetaUserStoreType metaUserStore = new MetaUserStoreType();\n+        UserStorePropertiesRes userStorePropertiesRes = new UserStorePropertiesRes();\n+        userStorePropertiesRes.mandatory(buildPropertiesRes(properties.getMandatoryProperties()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODg2MzA5", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-380886309", "createdAt": "2020-03-25T06:36:06Z", "commit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNjowNlrOF7Nrmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjozNjowNlrOF7Nrmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDQ1OA==", "bodyText": "shall we call base64URLDecodeId(typeId) once , assign it to a variable and re-use line line 491 and 492", "url": "https://github.com/wso2/identity-api-server/pull/122#discussion_r397634458", "createdAt": "2020-03-25T06:36:06Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -483,32 +472,26 @@ private void addUserstoreProperties(UserStoreDTO userStoreDTO, UserStoreListResp\n     }\n \n     /**\n-     * Construct the configured user store type's meta.\n+     * Construct the user store type's meta.\n      *\n-     * @param userStoreDTOS the list of {@link UserStoreDTO}.\n      * @param typeId        the type id of the user store.\n      * @return MetaUserStoreType.\n      */\n-    private List<MetaUserStoreType> buildUserStoreMetaResponse(List<UserStoreDTO> userStoreDTOS, String typeId) {\n-\n-        List<MetaUserStoreType> metaUserStoreTypes = new ArrayList<>();\n-        for (UserStoreDTO userStoreDTO : userStoreDTOS) {\n-            Properties properties = UserStoreManagerRegistry.getUserStoreProperties(userStoreDTO.getClassName());\n-            MetaUserStoreType metaUserStore = new MetaUserStoreType();\n-            UserStorePropertiesRes userStorePropertiesRes = new UserStorePropertiesRes();\n-            userStorePropertiesRes.mandatory(buildPropertiesRes(properties.getMandatoryProperties()));\n-            userStorePropertiesRes.optional(buildPropertiesRes(properties.getOptionalProperties()));\n-            userStorePropertiesRes.advanced(buildPropertiesRes(properties.getAdvancedProperties()));\n-            metaUserStore.setProperties(userStorePropertiesRes);\n-            metaUserStore.setTypeId(typeId);\n-            metaUserStore.setName(userStoreDTO.getDomainId());\n-            metaUserStore.setDescription(userStoreDTO.getDescription());\n-            metaUserStore.setTypeName(base64URLDecodeId(typeId));\n-            metaUserStore.setClassName(getUserStoreType(base64URLDecodeId(typeId)));\n-            metaUserStoreTypes.add(metaUserStore);\n-\n-        }\n-        return metaUserStoreTypes;\n+    private MetaUserStoreType buildUserStoreMetaResponse(String typeId) {\n+\n+        Properties properties = UserStoreManagerRegistry.getUserStoreProperties(\n+                getUserStoreType(base64URLDecodeId(typeId)));\n+        MetaUserStoreType metaUserStore = new MetaUserStoreType();\n+        UserStorePropertiesRes userStorePropertiesRes = new UserStorePropertiesRes();\n+        userStorePropertiesRes.mandatory(buildPropertiesRes(properties.getMandatoryProperties()));\n+        userStorePropertiesRes.optional(buildPropertiesRes(properties.getOptionalProperties()));\n+        userStorePropertiesRes.advanced(buildPropertiesRes(properties.getAdvancedProperties()));\n+        metaUserStore.setProperties(userStorePropertiesRes);\n+        metaUserStore.setTypeId(typeId);\n+        metaUserStore.setTypeName(base64URLDecodeId(typeId));\n+        metaUserStore.setClassName(getUserStoreType(base64URLDecodeId(typeId)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1858735d552af847784bd640d2346186216cbb6f"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22314815863e0cfd7d96fc976fd0084f6a288512", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/22314815863e0cfd7d96fc976fd0084f6a288512", "committedDate": "2020-03-25T06:56:33Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fa36469ffa00f5a83148cb234ff672e6e601afa", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/5fa36469ffa00f5a83148cb234ff672e6e601afa", "committedDate": "2020-03-25T07:06:19Z", "message": "Modify line length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269ccf92237870ba60eae27433529d234c0cfb6c", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/269ccf92237870ba60eae27433529d234c0cfb6c", "committedDate": "2020-03-25T07:57:20Z", "message": "Add self attribute to AvailableUserStoreClassesRes model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b7b1a9406d0d300bd1ae6da49bd018b310edd87", "author": {"user": {"login": "AnuradhaSK", "name": "Anuradha Karunarathna"}}, "url": "https://github.com/wso2/identity-api-server/commit/8b7b1a9406d0d300bd1ae6da49bd018b310edd87", "committedDate": "2020-03-25T08:14:56Z", "message": "Format code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTYzMTI4", "url": "https://github.com/wso2/identity-api-server/pull/122#pullrequestreview-380963128", "createdAt": "2020-03-25T09:07:01Z", "commit": {"oid": "8b7b1a9406d0d300bd1ae6da49bd018b310edd87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1432, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}