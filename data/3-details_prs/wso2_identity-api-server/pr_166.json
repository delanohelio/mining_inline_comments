{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzcxNDk5", "number": 166, "title": "Add new API to retrieve Primary Userstore configs", "bodyText": "", "createdAt": "2020-05-15T04:38:35Z", "url": "https://github.com/wso2/identity-api-server/pull/166", "merged": true, "mergeCommit": {"oid": "25f3a59272d7d6b7c8ddc016ead155b8b473ac55"}, "closed": true, "closedAt": "2020-05-18T10:42:43Z", "author": {"login": "emswbandara"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchaf3LgH2gAyNDE4MzcxNDk5OjQxNDk5ZGU4N2JhZmQyNDU3YjM3OGM1ZDFiNWM1ODc5MTMzMzQ5YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcicu96gFqTQxMzQzNzc2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "41499de87bafd2457b378c5d1b5c5879133349ae", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2/identity-api-server/commit/41499de87bafd2457b378c5d1b5c5879133349ae", "committedDate": "2020-05-15T04:37:55Z", "message": "Add new API to retrieve Primary Userstore configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTI2MTky", "url": "https://github.com/wso2/identity-api-server/pull/166#pullrequestreview-413126192", "createdAt": "2020-05-17T04:31:38Z", "commit": {"oid": "41499de87bafd2457b378c5d1b5c5879133349ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOGWeKuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOGWeKuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxNjEyMA==", "bodyText": "As the primary user store, config does not change during the run time shall we keep this in a static variable? build on in that variable is null?", "url": "https://github.com/wso2/identity-api-server/pull/166#discussion_r426216120", "createdAt": "2020-05-17T04:31:38Z", "author": {"login": "thanujalk"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -200,6 +206,40 @@ public UserStoreResponse editUserStore(String domainId, UserStoreReq userStoreRe\n         }\n     }\n \n+    /**\n+     * Retrieve primary user store.\n+     *\n+     * @return UserStoreConfigurationsRes.\n+     */\n+    public UserStoreConfigurationsRes getPrimaryUserStore() {\n+\n+        RealmService realmService = UserStoreConfigServiceHolder.getInstance().getRealmService();\n+        RealmConfiguration realmConfiguration = realmService.getBootstrapRealmConfiguration();\n+        if (realmConfiguration == null) {\n+            throw handleException(Response.Status.INTERNAL_SERVER_ERROR, UserStoreConstants.ErrorMessage.\n+                    ERROR_CODE_ERROR_RETRIEVING_PRIMARY_USERSTORE);\n+        }\n+        List<AddUserStorePropertiesRes> propertiesTobeAdd = new ArrayList<>();\n+        UserStoreConfigurationsRes userStoreConfigurations = new UserStoreConfigurationsRes();\n+        userStoreConfigurations.setClassName(realmConfiguration.getUserStoreClass());\n+        userStoreConfigurations.setDescription(realmConfiguration.getDescription());\n+        userStoreConfigurations.setName(UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME);\n+        userStoreConfigurations.setTypeId(base64URLEncodeId(Objects.requireNonNull\n+                (getUserStoreTypeName(realmConfiguration.getUserStoreClass()))));\n+        userStoreConfigurations.setTypeName(getUserStoreTypeName(realmConfiguration.getUserStoreClass()));\n+        Map<String, String> userstoreProps = realmConfiguration.getUserStoreProperties();\n+        if (MapUtils.isNotEmpty(userstoreProps)) {\n+            for (String propKey : userstoreProps.keySet()) {\n+                AddUserStorePropertiesRes userStorePropertiesRes = new AddUserStorePropertiesRes();\n+                userStorePropertiesRes.setName(propKey);\n+                userStorePropertiesRes.setValue(userstoreProps.get(propKey));\n+                propertiesTobeAdd.add(userStorePropertiesRes);\n+            }\n+        }\n+        userStoreConfigurations.setProperties(propertiesTobeAdd);\n+        return userStoreConfigurations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41499de87bafd2457b378c5d1b5c5879133349ae"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTI2MjEz", "url": "https://github.com/wso2/identity-api-server/pull/166#pullrequestreview-413126213", "createdAt": "2020-05-17T04:32:10Z", "commit": {"oid": "41499de87bafd2457b378c5d1b5c5879133349ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d5dbb15744d1f917e9e668af96b3ceed07b91d5", "author": {"user": {"login": "emswbandara", "name": "Sathya Bandara"}}, "url": "https://github.com/wso2/identity-api-server/commit/1d5dbb15744d1f917e9e668af96b3ceed07b91d5", "committedDate": "2020-05-18T09:45:37Z", "message": "Add static variable to store primary configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDM3NzY3", "url": "https://github.com/wso2/identity-api-server/pull/166#pullrequestreview-413437767", "createdAt": "2020-05-18T09:48:09Z", "commit": {"oid": "1d5dbb15744d1f917e9e668af96b3ceed07b91d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1364, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}