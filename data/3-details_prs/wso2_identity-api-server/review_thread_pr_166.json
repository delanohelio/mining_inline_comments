{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzcxNDk5", "number": 166, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOD9In-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOD9In-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDMxMDM0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOGWeKuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QwNDozMTozOFrOGWeKuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxNjEyMA==", "bodyText": "As the primary user store, config does not change during the run time shall we keep this in a static variable? build on in that variable is null?", "url": "https://github.com/wso2/identity-api-server/pull/166#discussion_r426216120", "createdAt": "2020-05-17T04:31:38Z", "author": {"login": "thanujalk"}, "path": "components/org.wso2.carbon.identity.api.server.userstore/org.wso2.carbon.identity.api.server.userstore.v1/src/main/java/org/wso2/carbon/identity/api/server/userstore/v1/core/ServerUserStoreService.java", "diffHunk": "@@ -200,6 +206,40 @@ public UserStoreResponse editUserStore(String domainId, UserStoreReq userStoreRe\n         }\n     }\n \n+    /**\n+     * Retrieve primary user store.\n+     *\n+     * @return UserStoreConfigurationsRes.\n+     */\n+    public UserStoreConfigurationsRes getPrimaryUserStore() {\n+\n+        RealmService realmService = UserStoreConfigServiceHolder.getInstance().getRealmService();\n+        RealmConfiguration realmConfiguration = realmService.getBootstrapRealmConfiguration();\n+        if (realmConfiguration == null) {\n+            throw handleException(Response.Status.INTERNAL_SERVER_ERROR, UserStoreConstants.ErrorMessage.\n+                    ERROR_CODE_ERROR_RETRIEVING_PRIMARY_USERSTORE);\n+        }\n+        List<AddUserStorePropertiesRes> propertiesTobeAdd = new ArrayList<>();\n+        UserStoreConfigurationsRes userStoreConfigurations = new UserStoreConfigurationsRes();\n+        userStoreConfigurations.setClassName(realmConfiguration.getUserStoreClass());\n+        userStoreConfigurations.setDescription(realmConfiguration.getDescription());\n+        userStoreConfigurations.setName(UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME);\n+        userStoreConfigurations.setTypeId(base64URLEncodeId(Objects.requireNonNull\n+                (getUserStoreTypeName(realmConfiguration.getUserStoreClass()))));\n+        userStoreConfigurations.setTypeName(getUserStoreTypeName(realmConfiguration.getUserStoreClass()));\n+        Map<String, String> userstoreProps = realmConfiguration.getUserStoreProperties();\n+        if (MapUtils.isNotEmpty(userstoreProps)) {\n+            for (String propKey : userstoreProps.keySet()) {\n+                AddUserStorePropertiesRes userStorePropertiesRes = new AddUserStorePropertiesRes();\n+                userStorePropertiesRes.setName(propKey);\n+                userStorePropertiesRes.setValue(userstoreProps.get(propKey));\n+                propertiesTobeAdd.add(userStorePropertiesRes);\n+            }\n+        }\n+        userStoreConfigurations.setProperties(propertiesTobeAdd);\n+        return userStoreConfigurations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41499de87bafd2457b378c5d1b5c5879133349ae"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1484, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}