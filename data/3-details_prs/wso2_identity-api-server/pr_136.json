{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzYzMjIy", "number": 136, "title": "Add services attribute for IdP template listing", "bodyText": "Purpose\nFix for issue : wso2/product-is#8020", "createdAt": "2020-04-07T16:07:06Z", "url": "https://github.com/wso2/identity-api-server/pull/136", "merged": true, "mergeCommit": {"oid": "5b465feae1d8c03e4d1ef22dc93d3c7edc98aa7b"}, "closed": true, "closedAt": "2020-04-10T09:05:32Z", "author": {"login": "mevan-karu"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVfL14gFqTM4OTYyNzAzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWNWKDgFqTM5MTM0NTU5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjI3MDM5", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389627039", "createdAt": "2020-04-08T03:18:28Z", "commit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoxODoyOFrOGCdlhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoxODoyOFrOGCdlhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNTA3OA==", "bodyText": "use standard comment format. add space after // and add fullstop at the end.", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405235078", "createdAt": "2020-04-08T03:18:28Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "diffHunk": "@@ -66,7 +66,11 @@\n     // IdP template property keys\n     public static final String PROP_CATEGORY = \"category\";\n     public static final String PROP_DISPLAY_ORDER = \"displayOrder\";\n+    public static final String PROP_SERVICES = \"services\";\n \n+    //IdP template services", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjI3MzY2", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389627366", "createdAt": "2020-04-08T03:19:36Z", "commit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoxOTozNlrOGCdm3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoxOTozNlrOGCdm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNTQyMQ==", "bodyText": "check whether idpTemplate.getPropertiesMap().get(PROP_SERVICES) is not null before splitting", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405235421", "createdAt": "2020-04-08T03:19:36Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -951,6 +954,10 @@ private IdentityProviderTemplateListResponse createIDPTemplateListResponse(\n                     idpTemplateListItem.setDisplayOrder(\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n+                if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {\n+                    idpTemplateListItem.setServices(Arrays.asList(\n+                            idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjI3Nzg3", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389627787", "createdAt": "2020-04-08T03:21:09Z", "commit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoyMToxMFrOGCdoWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMzoyMToxMFrOGCdoWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNTgwMw==", "bodyText": "here also services can be an array. Let's change it to be the same as IdentityProviderTemplateListItem", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405235803", "createdAt": "2020-04-08T03:21:10Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/resources/idp.yaml", "diffHunk": "@@ -2388,3 +2392,6 @@ components:\n       required:\n         - name\n         - idp\n+    Service:\n+      type: string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f57d02c564d03038b32a2f8d136da0e022b959ae", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/f57d02c564d03038b32a2f8d136da0e022b959ae", "committedDate": "2020-04-07T16:06:37Z", "message": "Add services attribute for IdP template listing"}, "afterCommit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/ed774550c6fec90046c6a5219ce605db74ef642d", "committedDate": "2020-04-08T04:37:54Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjYxNzUy", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389661752", "createdAt": "2020-04-08T05:30:29Z", "commit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozMDoyOVrOGCfg2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozMDoyOVrOGCfg2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjY0OQ==", "bodyText": "formatting issue . double spaces after", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405266649", "createdAt": "2020-04-08T05:30:29Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,42 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);\n+            properties.put(PROP_SERVICES, servicesString);\n+        }\n+        return properties;\n+    }\n+\n+    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjYyMjA4", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389662208", "createdAt": "2020-04-08T05:31:59Z", "commit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozMTo1OVrOGCfiNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozMTo1OVrOGCfiNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Njk5Nw==", "bodyText": "We can use CollectionUtils.isNotEmpty which checks for both null and empty.", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405266997", "createdAt": "2020-04-08T05:31:59Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,42 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);\n+            properties.put(PROP_SERVICES, servicesString);\n+        }\n+        return properties;\n+    }\n+\n+    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n+\n+        ArrayList<String> services = new ArrayList<>();\n+        if ((idp.getProvisioning().getOutboundConnectors() != null)\n+                && (!idp.getProvisioning().getOutboundConnectors().getConnectors().isEmpty())) {\n+            services.add(SERV_PROVISIONING);\n+        }\n+        if ((idp.getFederatedAuthenticators().getAuthenticators() != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/ed774550c6fec90046c6a5219ce605db74ef642d", "committedDate": "2020-04-08T04:37:54Z", "message": "Add services attribute for IdP template listing"}, "afterCommit": {"oid": "629d651aca5425a1afcb760b479ceac0e23e4692", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/629d651aca5425a1afcb760b479ceac0e23e4692", "committedDate": "2020-04-08T05:36:56Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "629d651aca5425a1afcb760b479ceac0e23e4692", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/629d651aca5425a1afcb760b479ceac0e23e4692", "committedDate": "2020-04-08T05:36:56Z", "message": "Add services attribute for IdP template listing"}, "afterCommit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/772b0def51e4c7db8045c3cc11b58e11990cac4b", "committedDate": "2020-04-08T05:40:52Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzAxMTQw", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389701140", "createdAt": "2020-04-08T07:03:11Z", "commit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzowMzoxMVrOGChl6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzowMzoxMVrOGChl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMDcxMw==", "bodyText": "shall we combine the nested if condition with &&", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405300713", "createdAt": "2020-04-08T07:03:11Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -951,6 +954,12 @@ private IdentityProviderTemplateListResponse createIDPTemplateListResponse(\n                     idpTemplateListItem.setDisplayOrder(\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n+                if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzAxNjYw", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-389701660", "createdAt": "2020-04-08T07:04:04Z", "commit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzowNDowNFrOGChnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzowNDowNFrOGChnoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMTE1Mw==", "bodyText": "formatting issue", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405301153", "createdAt": "2020-04-08T07:04:04Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,40 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/772b0def51e4c7db8045c3cc11b58e11990cac4b", "committedDate": "2020-04-08T05:40:52Z", "message": "Add services attribute for IdP template listing"}, "afterCommit": {"oid": "8f946b43ca944b9e954af99263784fb5ff327a5d", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/8f946b43ca944b9e954af99263784fb5ff327a5d", "committedDate": "2020-04-10T06:33:33Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80c4c3908cdcc939d6d27ece92cedd1c5f3d8dbc", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/80c4c3908cdcc939d6d27ece92cedd1c5f3d8dbc", "committedDate": "2020-04-10T08:28:35Z", "message": "Merge branch 'master' into product_is_issue_8020"}, "afterCommit": {"oid": "8f946b43ca944b9e954af99263784fb5ff327a5d", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/8f946b43ca944b9e954af99263784fb5ff327a5d", "committedDate": "2020-04-10T06:33:33Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ed107988f2e63530fef3b9859177b11901deb63", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/8ed107988f2e63530fef3b9859177b11901deb63", "committedDate": "2020-04-10T08:54:05Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f946b43ca944b9e954af99263784fb5ff327a5d", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/8f946b43ca944b9e954af99263784fb5ff327a5d", "committedDate": "2020-04-10T06:33:33Z", "message": "Add services attribute for IdP template listing"}, "afterCommit": {"oid": "8ed107988f2e63530fef3b9859177b11901deb63", "author": {"user": {"login": "mevan-karu", "name": "Mevan Karunanayake"}}, "url": "https://github.com/wso2/identity-api-server/commit/8ed107988f2e63530fef3b9859177b11901deb63", "committedDate": "2020-04-10T08:54:05Z", "message": "Add services attribute for IdP template listing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzQ1NTky", "url": "https://github.com/wso2/identity-api-server/pull/136#pullrequestreview-391345592", "createdAt": "2020-04-10T09:05:23Z", "commit": {"oid": "8ed107988f2e63530fef3b9859177b11901deb63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1341, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}