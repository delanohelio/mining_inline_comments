{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzM3NTg0", "number": 162, "title": "Enable tenant qualified urls for server APIs", "bodyText": "Purpose\n\nFix : wso2/product-is#8246\nEnabled the tenant qualified URLs in server APIs.", "createdAt": "2020-05-04T04:56:15Z", "url": "https://github.com/wso2/identity-api-server/pull/162", "merged": true, "mergeCommit": {"oid": "0ad96819e3d8ea811795952b6a4d86afaa8814c3"}, "closed": true, "closedAt": "2020-05-06T11:29:19Z", "author": {"login": "ShanChathusanda93"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd5jEpgFqTQwNDczMzE4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9g92hgFqTQ2NDE2NTI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzMzMTgy", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-404733182", "createdAt": "2020-05-04T06:32:47Z", "commit": {"oid": "bb8589077919751452702187fa0140669515e5ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjozMjo0N1rOGP0BJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNjozMjo0N1rOGP0BJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIzNDA4Nw==", "bodyText": "I think we have to break the flow. If we cannot build the URL.\nCheck whether you can throw an APIError from here", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419234087", "createdAt": "2020-05-04T06:32:47Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -73,9 +76,20 @@ public static String getUsernameFromContext() {\n      */\n     public static URI buildURIForBody(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, true, true);\n+        String url = \"\";\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            String context = SERVER_API_PATH_COMPONENT + endpoint;\n+            try {\n+                url = ServiceURLBuilder.create().addPath(context).build().getRelativePublicURL();\n+            } catch (URLBuilderException e) {\n+                LOG.error(\"Server encountered an error while building the location URL in tenant qualified scheme.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8589077919751452702187fa0140669515e5ff"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTIzNjg2", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-404923686", "createdAt": "2020-05-04T12:03:23Z", "commit": {"oid": "bb8589077919751452702187fa0140669515e5ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjowMzoyM1rOGP9SCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjowMzoyM1rOGP9SCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4NTg2Ng==", "bodyText": "Here also need to do the same as above suggested by @mefarazath. Throw a relevant expectation from here and handle it where this API is consumed.", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419385866", "createdAt": "2020-05-04T12:03:23Z", "author": {"login": "ashensw"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,21 +102,36 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n+        String url;\n+        URI loc = null;\n+\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                // Creating the context path from the endpoint which needs to be added to build the absolute public url.\n+                String context = SERVER_API_PATH_COMPONENT + endpoint;\n+                url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+                loc = URI.create(url);\n+            } catch (URLBuilderException e) {\n+                LOG.error(\"Server encountered an error while building the location URL in tenant qualified scheme.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8589077919751452702187fa0140669515e5ff"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb8589077919751452702187fa0140669515e5ff", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/bb8589077919751452702187fa0140669515e5ff", "committedDate": "2020-05-04T04:52:20Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/064800d646e9676f3d3ba6d8ed4b5394f6c277af", "committedDate": "2020-05-04T13:53:28Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDI2MzQ3", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-405026347", "createdAt": "2020-05-04T14:13:10Z", "commit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMzoxMFrOGQCRBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMzoxMFrOGQCRBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzUyNA==", "bodyText": "We don't need to log here. It will be handled by the layer which catches the APIError", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419467524", "createdAt": "2020-05-04T14:13:10Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,24 +109,63 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n+        String url;\n+        URI loc = null;\n+\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                // Creating the context path from the endpoint which needs to be added to build the absolute public url.\n+                String context = SERVER_API_PATH_COMPONENT + endpoint;\n+                url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+                loc = URI.create(url);\n+            } catch (URLBuilderException e) {\n+                String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";\n+                LOG.error(errorDescription);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDI2NTA3", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-405026507", "createdAt": "2020-05-04T14:13:21Z", "commit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMzoyMVrOGQCReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDoxMzoyMVrOGQCReg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NzY0Mg==", "bodyText": "We don't need to log here. It will be handled by the layer which catches the APIError", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419467642", "createdAt": "2020-05-04T14:13:21Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -73,9 +81,22 @@ public static String getUsernameFromContext() {\n      */\n     public static URI buildURIForBody(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, true, true);\n+        String url = \"\";\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            String context = SERVER_API_PATH_COMPONENT + endpoint;\n+            try {\n+                url = ServiceURLBuilder.create().addPath(context).build().getRelativePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";\n+                LOG.error(errorDescription);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDYyNzg0", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-405062784", "createdAt": "2020-05-04T14:51:25Z", "commit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1MToyNVrOGQD-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1MToyNVrOGQD-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NTY1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";\n          \n          \n            \n                            String errorDescription = \"Server encountered an error while building location URL.\";", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419495659", "createdAt": "2020-05-04T14:51:25Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,24 +109,63 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n+        String url;\n+        URI loc = null;\n+\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                // Creating the context path from the endpoint which needs to be added to build the absolute public url.\n+                String context = SERVER_API_PATH_COMPONENT + endpoint;\n+                url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+                loc = URI.create(url);\n+            } catch (URLBuilderException e) {\n+                String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDYzNTIy", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-405063522", "createdAt": "2020-05-04T14:52:13Z", "commit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1MjoxM1rOGQEBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1MjoxM1rOGQEBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NjI2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";\n          \n          \n            \n                            String errorDescription = \"Server encountered an error while building location URL.\";", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r419496269", "createdAt": "2020-05-04T14:52:13Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -73,9 +81,22 @@ public static String getUsernameFromContext() {\n      */\n     public static URI buildURIForBody(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, true, true);\n+        String url = \"\";\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            String context = SERVER_API_PATH_COMPONENT + endpoint;\n+            try {\n+                url = ServiceURLBuilder.create().addPath(context).build().getRelativePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorDescription = \"Server encountered an error while building URLs in tenant qualified mode.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "064800d646e9676f3d3ba6d8ed4b5394f6c277af", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/064800d646e9676f3d3ba6d8ed4b5394f6c277af", "committedDate": "2020-05-04T13:53:28Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "196f14420cd4e5f8fa9497f8c0ce4249eb6edeec", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/196f14420cd4e5f8fa9497f8c0ce4249eb6edeec", "committedDate": "2020-05-04T17:01:13Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "196f14420cd4e5f8fa9497f8c0ce4249eb6edeec", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/196f14420cd4e5f8fa9497f8c0ce4249eb6edeec", "committedDate": "2020-05-04T17:01:13Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "78897dbf273e71235e6783333f14e82041dd6710", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/78897dbf273e71235e6783333f14e82041dd6710", "committedDate": "2020-05-06T03:54:42Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78897dbf273e71235e6783333f14e82041dd6710", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/78897dbf273e71235e6783333f14e82041dd6710", "committedDate": "2020-05-06T03:54:42Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/758d574751dadbb033f26e0a2d983a12a8c1f6cb", "committedDate": "2020-05-06T03:57:23Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzE4MDg5", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-406318089", "createdAt": "2020-05-06T05:51:00Z", "commit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNTo1MTowMFrOGRE1xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNTo1MTowMFrOGRE1xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1ODI3OA==", "bodyText": "Better to explain why we need this method.\nie. in tenant qualified mode ServiceURLBuilder appends the tenant domain as a path param automatically. But in not tenant qualified mode it doesn't. So we need to append the tenant domain manually in the path", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r420558278", "createdAt": "2020-05-06T05:51:00Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,24 +97,56 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n-                }\n-            }\n+        URI loc;\n+        String context = getContext(endpoint);\n+\n+        try {\n+            String url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+            loc = URI.create(url);\n+        } catch (URLBuilderException e) {\n+            String errorDescription = \"Server encountered an error while building URL for response header.\";\n+            throw buildInternalServerError(e, errorDescription);\n         }\n         return loc;\n     }\n+\n+    /**\n+     * This method builds the API context by checking whether the tenant qualified url is enabled or not.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzE4Mjcy", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-406318272", "createdAt": "2020-05-06T05:51:36Z", "commit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNTo1MTozNlrOGRE2aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNTo1MTozNlrOGRE2aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1ODQ0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This method is used to build the internal server error when the URL build is failed.\n          \n          \n            \n                 * Builds APIError to be thrown the URL building fails.", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r420558443", "createdAt": "2020-05-06T05:51:36Z", "author": {"login": "mefarazath"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,24 +97,56 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n-                }\n-            }\n+        URI loc;\n+        String context = getContext(endpoint);\n+\n+        try {\n+            String url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+            loc = URI.create(url);\n+        } catch (URLBuilderException e) {\n+            String errorDescription = \"Server encountered an error while building URL for response header.\";\n+            throw buildInternalServerError(e, errorDescription);\n         }\n         return loc;\n     }\n+\n+    /**\n+     * This method builds the API context by checking whether the tenant qualified url is enabled or not.\n+     *\n+     * @param endpoint Relative endpoint path.\n+     * @return Context of the API.\n+     */\n+    private static String getContext(String endpoint) {\n+\n+        String context;\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            context = SERVER_API_PATH_COMPONENT + endpoint;\n+        } else {\n+            context = String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) +\n+                    SERVER_API_PATH_COMPONENT + endpoint;\n+        }\n+        return context;\n+    }\n+\n+    /**\n+     * This method is used to build the internal server error when the URL build is failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb"}, "originalPosition": 101}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "758d574751dadbb033f26e0a2d983a12a8c1f6cb", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/758d574751dadbb033f26e0a2d983a12a8c1f6cb", "committedDate": "2020-05-06T03:57:23Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "251e318fc1aa0e5634ba53379f6a85e65d4e0019", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/251e318fc1aa0e5634ba53379f6a85e65d4e0019", "committedDate": "2020-05-06T06:15:54Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "251e318fc1aa0e5634ba53379f6a85e65d4e0019", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/251e318fc1aa0e5634ba53379f6a85e65d4e0019", "committedDate": "2020-05-06T06:15:54Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "f0ed2158de70b890ff5474cf59caab37d4f6d888", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/f0ed2158de70b890ff5474cf59caab37d4f6d888", "committedDate": "2020-05-06T07:27:53Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzgzNDgy", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-406383482", "createdAt": "2020-05-06T08:03:15Z", "commit": {"oid": "f0ed2158de70b890ff5474cf59caab37d4f6d888"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODowMzoxNVrOGRID1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODowMzoxNVrOGRID1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMTAyOQ==", "bodyText": "Shall we mention this will return a relative URL?", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r420611029", "createdAt": "2020-05-06T08:03:15Z", "author": {"login": "ashensw"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -73,9 +76,15 @@ public static String getUsernameFromContext() {\n      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ed2158de70b890ff5474cf59caab37d4f6d888"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "560b3293af7b25c8dc5f1aa6e0b24c8473dc059a", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/560b3293af7b25c8dc5f1aa6e0b24c8473dc059a", "committedDate": "2020-05-06T09:58:27Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0ed2158de70b890ff5474cf59caab37d4f6d888", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/f0ed2158de70b890ff5474cf59caab37d4f6d888", "committedDate": "2020-05-06T07:27:53Z", "message": "Enable tenant qualified urls for server APIs"}, "afterCommit": {"oid": "560b3293af7b25c8dc5f1aa6e0b24c8473dc059a", "author": {"user": {"login": "ShanChathusanda93", "name": "Shan Chathusanda Jayathilaka"}}, "url": "https://github.com/wso2/identity-api-server/commit/560b3293af7b25c8dc5f1aa6e0b24c8473dc059a", "committedDate": "2020-05-06T09:58:27Z", "message": "Enable tenant qualified urls for server APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDcwMTEw", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-406470110", "createdAt": "2020-05-06T10:06:02Z", "commit": {"oid": "560b3293af7b25c8dc5f1aa6e0b24c8473dc059a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTY1Mjk4", "url": "https://github.com/wso2/identity-api-server/pull/162#pullrequestreview-464165298", "createdAt": "2020-08-10T11:58:29Z", "commit": {"oid": "560b3293af7b25c8dc5f1aa6e0b24c8473dc059a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo1ODoyOVrOG-Lkbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo1ODoyOVrOG-Lkbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1NDQ0Ng==", "bodyText": "Shall we fix the formatting errors here?", "url": "https://github.com/wso2/identity-api-server/pull/162#discussion_r467854446", "createdAt": "2020-08-10T11:58:29Z", "author": {"login": "somindatommy"}, "path": "components/org.wso2.carbon.identity.api.server.common/src/main/java/org/wso2/carbon/identity/api/server/common/ContextLoader.java", "diffHunk": "@@ -88,24 +97,58 @@ public static URI buildURIForBody(String endpoint) {\n      */\n     public static URI buildURIForHeader(String endpoint) {\n \n-        String tenantQualifiedRelativePath =\n-                String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) + SERVER_API_PATH_COMPONENT;\n-        String url = IdentityUtil.getEndpointURIPath(tenantQualifiedRelativePath + endpoint, false, true);\n-\n-        URI loc = URI.create(url);\n-        if (!loc.isAbsolute()) {\n-            Message currentMessage = PhaseInterceptorChain.getCurrentMessage();\n-            if (currentMessage != null) {\n-                UriInfo ui = new UriInfoImpl(currentMessage.getExchange().getInMessage(), null);\n-                try {\n-                    return new URI(ui.getBaseUri().getScheme(), ui.getBaseUri().getAuthority(), url, null, null);\n-                } catch (URISyntaxException e) {\n-                    LOG.error(\"Server encountered an error while building the location URL with scheme: \" +\n-                            ui.getBaseUri().getScheme() + \", authority: \" + ui.getBaseUri().getAuthority() +\n-                            \", url: \" + url, e);\n-                }\n-            }\n+        URI loc;\n+        String context = getContext(endpoint);\n+\n+        try {\n+            String url = ServiceURLBuilder.create().addPath(context).build().getAbsolutePublicURL();\n+            loc = URI.create(url);\n+        } catch (URLBuilderException e) {\n+            String errorDescription = \"Server encountered an error while building URL for response header.\";\n+            throw buildInternalServerError(e, errorDescription);\n         }\n         return loc;\n     }\n+\n+    /**\n+     * Builds the API context on whether the tenant qualified url is enabled or not. In tenant qualified mode the\n+     * ServiceURLBuilder appends the tenant domain to the URI as a path param automatically. But\n+     * in non tenant qualified mode we need to append the tenant domain to the path manually.\n+     *\n+     * @param endpoint Relative endpoint path.\n+     * @return Context of the API.\n+     */\n+    private static String getContext(String endpoint) {\n+\n+        String context;\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            context = SERVER_API_PATH_COMPONENT + endpoint;\n+        } else {\n+            context = String.format(TENANT_CONTEXT_PATH_COMPONENT, getTenantDomainFromContext()) +\n+                    SERVER_API_PATH_COMPONENT + endpoint;\n+        }\n+        return context;\n+    }\n+\n+    /**\n+     * Builds APIError to be thrown if the URL building fails.\n+     *\n+     * @param e Exception occurred while building the URL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "560b3293af7b25c8dc5f1aa6e0b24c8473dc059a"}, "originalPosition": 110}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1359, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}