{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTI0MzY1", "number": 147, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNToyMzo1OVrODyV6Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNToyMzo1OVrODyV6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTE0MzcwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNToyMzo1OVrOGGVCQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjowMzozOFrOGGVzhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4OTI4Mg==", "bodyText": "Can we have this combination as a constant... so when adding and searching we have the same order.", "url": "https://github.com/wso2/identity-api-server/pull/147#discussion_r409289282", "createdAt": "2020-04-16T05:23:59Z", "author": {"login": "thanujalk"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -909,7 +902,29 @@ private Condition buildSearchCondition(SearchCondition searchCondition) {\n         if (!(searchCondition.getStatement() == null)) {\n             PrimitiveStatement primitiveStatement = searchCondition.getStatement();\n \n-            if (Constants.SEARCH_KEYS.contains(primitiveStatement.getProperty())) {\n+            if (Constants.SEARCH_KEY_NAME.equals(primitiveStatement.getProperty())) {\n+                return new PrimitiveCondition(\n+                        Constants.SEARCH_KEY_NAME_INTERNAL, getPrimitiveOperatorFromOdata(primitiveStatement\n+                        .getCondition()), primitiveStatement.getValue());\n+            } else if (Constants.SEARCH_KEY_SERVICES.equals(primitiveStatement.getProperty()) &&\n+                    getPrimitiveOperatorFromOdata(primitiveStatement.getCondition()) == EQUALS) {\n+                Condition servicesAttrKeyCondition = new PrimitiveCondition(Constants.ATTR_KEY, EQUALS, Constants\n+                        .SEARCH_KEY_SERVICES);\n+                Condition servicesAttrValueCondition = new PrimitiveCondition(Constants.ATTR_VALUE, EQUALS,\n+                        primitiveStatement.getValue());\n+                Condition servicesCondition = new ComplexCondition(getComplexOperatorFromOdata(ConditionType.AND),\n+                        Arrays.asList(servicesAttrKeyCondition, servicesAttrValueCondition));\n+\n+                Condition servicesCombinedAttrKeyCondition = new PrimitiveCondition(Constants.ATTR_KEY, EQUALS,\n+                        Constants.SEARCH_KEY_SERVICES);\n+                Condition servicesCombinedAttrValueCondition = new PrimitiveCondition(Constants.ATTR_VALUE, EQUALS,\n+                        SERV_PROVISIONING + \",\" + SERV_AUTHENTICATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e0384b3cd0dd7bab9175fe2c418ea08e4402125"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwMTg5Mw==", "bodyText": "added a constant.. but however when adding, we are adding them to a list and calling String.join..\nhttps://github.com/wso2/identity-api-server/blob/master/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java#L1182", "url": "https://github.com/wso2/identity-api-server/pull/147#discussion_r409301893", "createdAt": "2020-04-16T06:03:38Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -909,7 +902,29 @@ private Condition buildSearchCondition(SearchCondition searchCondition) {\n         if (!(searchCondition.getStatement() == null)) {\n             PrimitiveStatement primitiveStatement = searchCondition.getStatement();\n \n-            if (Constants.SEARCH_KEYS.contains(primitiveStatement.getProperty())) {\n+            if (Constants.SEARCH_KEY_NAME.equals(primitiveStatement.getProperty())) {\n+                return new PrimitiveCondition(\n+                        Constants.SEARCH_KEY_NAME_INTERNAL, getPrimitiveOperatorFromOdata(primitiveStatement\n+                        .getCondition()), primitiveStatement.getValue());\n+            } else if (Constants.SEARCH_KEY_SERVICES.equals(primitiveStatement.getProperty()) &&\n+                    getPrimitiveOperatorFromOdata(primitiveStatement.getCondition()) == EQUALS) {\n+                Condition servicesAttrKeyCondition = new PrimitiveCondition(Constants.ATTR_KEY, EQUALS, Constants\n+                        .SEARCH_KEY_SERVICES);\n+                Condition servicesAttrValueCondition = new PrimitiveCondition(Constants.ATTR_VALUE, EQUALS,\n+                        primitiveStatement.getValue());\n+                Condition servicesCondition = new ComplexCondition(getComplexOperatorFromOdata(ConditionType.AND),\n+                        Arrays.asList(servicesAttrKeyCondition, servicesAttrValueCondition));\n+\n+                Condition servicesCombinedAttrKeyCondition = new PrimitiveCondition(Constants.ATTR_KEY, EQUALS,\n+                        Constants.SEARCH_KEY_SERVICES);\n+                Condition servicesCombinedAttrValueCondition = new PrimitiveCondition(Constants.ATTR_VALUE, EQUALS,\n+                        SERV_PROVISIONING + \",\" + SERV_AUTHENTICATION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI4OTI4Mg=="}, "originalCommit": {"oid": "9e0384b3cd0dd7bab9175fe2c418ea08e4402125"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1468, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}