{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NDY5NjAw", "number": 188, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjozODoyMFrOEPahcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozNDozMFrOEVX-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTk4NjQyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjozODoyMFrOGzHI3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjozODoyMFrOGzHI3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0NzUxOA==", "bodyText": "inline lines 115 and 116", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456247518", "createdAt": "2020-07-17T06:38:20Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java", "diffHunk": "@@ -110,4 +106,15 @@ public void setTemplateManager(TemplateManager templateManager) {\n \n         ApplicationManagementServiceHolder.templateManager = templateManager;\n     }\n+\n+    public CORSManagementService getCorsManagementService() {\n+\n+        return corsManagementService;\n+    }\n+\n+    public void setCorsManagementService(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTk5MTU4OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0MDoyMlrOGzHLzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0MDoyMlrOGzHLzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0ODI3MQ==", "bodyText": "no need to log here.. handleException will log the exception IINM", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456248271", "createdAt": "2020-07-17T06:40:22Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -69,30 +95,40 @@ public static InboundAuthenticationRequestConfig putOAuthInbound(ServiceProvider\n                 String updatedClientId = appToUpdate.getOauthConsumerKey();\n                 return createInboundAuthRequestConfig(updatedClientId);\n             } else {\n+                // Create a new application.\n                 return createOAuthInbound(application.getApplicationName(), oidcConfigModel);\n             }\n \n-        } catch (IdentityOAuthAdminException e) {\n-            throw handleOAuthException(e);\n+        } catch (IdentityOAuthAdminException | CORSManagementServiceException e) {\n+            if (e instanceof IdentityOAuthAdminException) {\n+                // If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n+                // update has failed. Therefore rollback the update on CORS origins.\n+                try {\n+                    ApplicationManagementServiceHolder.getInstance()\n+                            .getCorsManagementService().setApplicationCORSOrigins(tenantDomain,\n+                            String.valueOf(application.getApplicationID()), existingCORSOrigins);\n+                } catch (CORSManagementServiceException corsManagementServiceException) {\n+                    log.error(\"Failed to update the CORS origins on rollback.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTk5ODE0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0MzowMlrOGzHPzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0MzowMlrOGzHPzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0OTI5NQ==", "bodyText": "shall we remove unncessary new lines to be consistent of previously defined error enums", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456249295", "createdAt": "2020-07-17T06:43:02Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,49 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +\n+                \"error while retrieving the server configs.\"),\n+\n+        //TODO: What should be the error prefix?\n+        /**\n+         * Unable to retrieve CORS origins.\n+         */\n+        ERROR_CODE_CORS_CONFIG_RETRIEVE(\"RST-65001\",\n+                \"Unable to retrieve CORS configuration.\",\n+                \"Server encountered an error while retrieving the CORS configuration.\"),\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjAwNzI2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0NjoyNlrOGzHVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0NjoyNlrOGzHVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDY3MA==", "bodyText": "add license header", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456250670", "createdAt": "2020-07-17T06:46:26Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.wso2.carbon.identity.api.server.configs.v1.function;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjAwODUwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0Njo1MlrOGzHV7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0Njo1MlrOGzHV7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDg2Mg==", "bodyText": "add license header", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456250862", "createdAt": "2020-07-17T06:46:52Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.wso2.carbon.identity.api.server.configs.v1.function;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjAxMDgyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/resources/configs.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0Nzo0NVrOGzHXVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo0Nzo0NVrOGzHXVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MTIyMw==", "bodyText": "why was this changed?", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456251223", "createdAt": "2020-07-17T06:47:45Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/resources/configs.yaml", "diffHunk": "@@ -14,7 +14,7 @@ security:\n   - OAuth2: []\n   - BasicAuth: []\n paths:\n-  /configs:\n+  /configs/:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjU4ODE5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwOTo1MDozMlrOGzM1lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwOTo1MDozMlrOGzM1lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MDg4NQ==", "bodyText": "better to use a multi-line comment here.", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456340885", "createdAt": "2020-07-17T09:50:32Z", "author": {"login": "dewniMW"}, "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -69,30 +95,39 @@ public static InboundAuthenticationRequestConfig putOAuthInbound(ServiceProvider\n                 String updatedClientId = appToUpdate.getOauthConsumerKey();\n                 return createInboundAuthRequestConfig(updatedClientId);\n             } else {\n+                // Create a new application.\n                 return createOAuthInbound(application.getApplicationName(), oidcConfigModel);\n             }\n \n-        } catch (IdentityOAuthAdminException e) {\n-            throw handleOAuthException(e);\n+        } catch (IdentityOAuthAdminException | CORSManagementServiceException e) {\n+            if (e instanceof IdentityOAuthAdminException) {\n+                // If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n+                // update has failed. Therefore rollback the update on CORS origins.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e164d6e1af7c476ca265c9a7865d15a76e3ecd0f"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODQ4Mjk0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozNDozMFrOG8FyNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTozNDozMFrOG8FyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MjUxOA==", "bodyText": "Shall we add a constant for \"oauth2\"?", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r465662518", "createdAt": "2020-08-05T11:34:30Z", "author": {"login": "ashensw"}, "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -131,22 +169,68 @@ public static OpenIDConnectConfiguration getOAuthConfiguration(InboundAuthentica\n             OAuthConsumerAppDTO oauthApp =\n                     ApplicationManagementServiceHolder.getInstance().getOAuthAdminService().getOAuthApplicationData\n                             (clientId);\n-            return new OAuthConsumerAppToApiModel().apply(oauthApp);\n \n-        } catch (IdentityOAuthAdminException e) {\n+            OpenIDConnectConfiguration openIDConnectConfiguration = new OAuthConsumerAppToApiModel().apply(oauthApp);\n+\n+            // Set CORS origins as allowed domains.\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            String applicationResourceId = ApplicationManagementServiceHolder.getInstance()\n+                    .getApplicationManagementService()\n+                    .getServiceProviderByClientId(clientId, \"oauth2\", tenantDomain).getApplicationResourceId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "143eeb50f46c2a7da30f4b416e7573a11f6f61eb"}, "originalPosition": 147}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1491, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}