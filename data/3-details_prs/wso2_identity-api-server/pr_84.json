{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODg4MDgx", "number": 84, "title": "Add OIDC Scope REST API", "bodyText": "Purpose\nRelated to wso2/product-is#7130\nDepends on wso2-extensions/identity-inbound-auth-oauth#1302\nGoals\n\nDescribe the solutions that this feature/fix will introduce to resolve the problems described above\n\nApproach\n\nDescribe how you are implementing the solutions. Include an animated GIF or screenshot if the change affects the UI (email documentation@wso2.com to review all UI text). Include a link to a Markdown file or Google doc if the feature write-up is too long to paste here.\n\nUser stories\n\nSummary of user stories addressed by this change>\n\nRelease note\n\nBrief description of the new feature or bug fix as it will appear in the release notes\n\nDocumentation\n\nLink(s) to product documentation that addresses the changes of this PR. If no doc impact, enter \u201cN/A\u201d plus brief explanation of why there\u2019s no doc impact\n\nTraining\n\nLink to the PR for changes to the training content in https://github.com/wso2/WSO2-Training, if applicable\n\nCertification\n\nType \u201cSent\u201d when you have provided new/updated certification questions, plus four answers for each question (correct answer highlighted in bold), based on this change. Certification questions/answers should be sent to certification@wso2.com and NOT pasted in this PR. If there is no impact on certification exams, type \u201cN/A\u201d and explain why.\n\nMarketing\n\nLink to drafts of marketing content that will describe and promote this feature, including product page changes, technical articles, blog posts, videos, etc., if applicable\n\nAutomation tests\n\nUnit tests\n\nCode coverage information\n\n\nIntegration tests\n\nDetails about the test cases and coverage\n\n\n\nSecurity checks\n\nFollowed secure coding standards in http://wso2.com/technical-reports/wso2-secure-engineering-guidelines? yes/no\nRan FindSecurityBugs plugin and verified report? yes/no\nConfirmed that this PR doesn't commit any keys, passwords, tokens, usernames, or other secrets? yes/no\n\nSamples\n\nProvide high-level details about the samples related to this feature\n\nRelated PRs\n\nList any other related PRs\n\nMigrations (if applicable)\n\nDescribe migration steps and platforms on which migration has been tested\n\nTest environment\n\nList all JDK versions, operating systems, databases, and browser/versions on which this feature/fix was tested\n\nLearning\n\nDescribe the research phase and any blog posts, patterns, libraries, or add-ons you used to solve the problem.", "createdAt": "2020-01-28T08:37:56Z", "url": "https://github.com/wso2/identity-api-server/pull/84", "merged": true, "mergeCommit": {"oid": "7dc84526c412f35cf0c1dddbe66712bc8184fd32"}, "closed": true, "closedAt": "2020-01-31T04:19:32Z", "author": {"login": "sarubi"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbxKpxtAH2gAyMzY3ODg4MDgxOjYzZGRlMDU0MDdkYWU4ZDRmYjljZmVjZGEzN2YwNzEzODVlOTEzZmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_nTKPgFqTM1MTI4NjE2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63dde05407dae8d4fb9cfecda37f071385e913fd", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/63dde05407dae8d4fb9cfecda37f071385e913fd", "committedDate": "2019-12-17T07:01:54Z", "message": "initial commit on oidc scope management rest apis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba6278fe05342b1e4ccb5e26f1d5d335e660d24a", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/ba6278fe05342b1e4ccb5e26f1d5d335e660d24a", "committedDate": "2019-12-18T06:41:40Z", "message": "adding common packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eefa6177e886a6fa7bc30177dc24ff51719256a", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/7eefa6177e886a6fa7bc30177dc24ff51719256a", "committedDate": "2020-01-16T18:49:30Z", "message": "add OIDC scope rest endpoint implementation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51220dd39da5840ad7958cef8ffedf4299211c3c", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/51220dd39da5840ad7958cef8ffedf4299211c3c", "committedDate": "2020-01-17T08:08:24Z", "message": "add java doc comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dbc1a1442e000558915ce424ddce1063e0f83a5", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/5dbc1a1442e000558915ce424ddce1063e0f83a5", "committedDate": "2020-01-24T09:58:46Z", "message": "Fix the issue in claim defined in oidc-scope-management.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e468949beaf6c0a464988312c0da7be349fa7cf", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/0e468949beaf6c0a464988312c0da7be349fa7cf", "committedDate": "2020-01-29T04:01:49Z", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into HEAD"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "200e3813950629bcc18e3d83b3ec38fb4f0c6de8", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/200e3813950629bcc18e3d83b3ec38fb4f0c6de8", "committedDate": "2020-01-28T08:34:24Z", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into HEAD"}, "afterCommit": {"oid": "0e468949beaf6c0a464988312c0da7be349fa7cf", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/0e468949beaf6c0a464988312c0da7be349fa7cf", "committedDate": "2020-01-29T04:01:49Z", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into HEAD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccb9b11c3365fc70c243ede2f69a6b17142adeca", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/ccb9b11c3365fc70c243ede2f69a6b17142adeca", "committedDate": "2020-01-29T08:25:42Z", "message": "update the oauth2 version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "626cbb9b0bb39154172c47edf650a1baa579f843", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/626cbb9b0bb39154172c47edf650a1baa579f843", "committedDate": "2020-01-29T08:27:13Z", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into OIDC-Scope-Mgt-2020"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/71c90f110fd64f1ecaeca46c540ba87e127b112d", "committedDate": "2020-01-29T08:33:55Z", "message": "update pom version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5OTUxMDY3", "url": "https://github.com/wso2/identity-api-server/pull/84#pullrequestreview-349951067", "createdAt": "2020-01-29T09:07:10Z", "commit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowNzoxMFrOFjBC5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowNzoxMFrOFjBC5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2MTYwNA==", "bodyText": "Add new line", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372261604", "createdAt": "2020-01-29T09:07:10Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/pom.xml", "diffHunk": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~ WSO2 Inc. licenses this file to you under the Apache License,\n+  ~ Version 2.0 (the \"License\"); you may not use this file except\n+  ~ in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <groupId>org.wso2.carbon.identity.server.api</groupId>\n+        <artifactId>org.wso2.carbon.identity.api.server.oidc.scope.management</artifactId>\n+        <relativePath>../pom.xml</relativePath>\n+        <version>1.0.62-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+    <artifactId>org.wso2.carbon.identity.api.server.oidc.scope.management.common</artifactId>\n+    <packaging>jar</packaging>\n+    <name>WSO2 Identity Server - OIDC Scope Management Rest API Common</name>\n+    <description>WSO2 Identity Server - OIDC Scope Management Rest API Common</description>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>1.8</source>\n+                    <target>1.8</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-web</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.wso2.carbon.identity.inbound.auth.oauth2</groupId>\n+            <artifactId>org.wso2.carbon.identity.oauth</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+    </dependencies>\n+</project>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5OTUxMjkz", "url": "https://github.com/wso2/identity-api-server/pull/84#pullrequestreview-349951293", "createdAt": "2020-01-29T09:07:37Z", "commit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOTowNzozN1rOFjBDrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwOToyMjo1OFrOFjBe9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2MTgwNA==", "bodyText": "License year 2020.", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372261804", "createdAt": "2020-01-29T09:07:37Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/pom.xml", "diffHunk": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2MjI5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ERROR_CONFLICT_REQUEST(\"41004\", \"Scope is already exists.\");\n          \n          \n            \n                    ERROR_CONFLICT_REQUEST(\"41004\", \"Scope already exists.\");", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372262292", "createdAt": "2020-01-29T09:08:43Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.common;\n+\n+/**\n+ * Contains all the OIDC Scope Management Service related constants.\n+ */\n+public class OidcScopeConstants {\n+\n+    public static final String OIDC_SCOPE_API_PATH_COMPONENT = \"/oidc/scopes\";\n+    public static final String PATH_SEPERATOR = \"/\";\n+\n+    /**\n+     * Enum for OIDC scope management service related errors.\n+     */\n+    public enum ErrorMessage {\n+\n+        INVALID_REQUEST(\"60001\", \"Invalid Request.\"),\n+        ERROR_CONFLICT_REQUEST(\"41004\", \"Scope is already exists.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NjU3OQ==", "bodyText": "License", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372266579", "createdAt": "2020-01-29T09:18:18Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.common;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NzgxOQ==", "bodyText": "License", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372267819", "createdAt": "2020-01-29T09:21:03Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2ODY2NA==", "bodyText": "Unnecessary new line", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372268664", "createdAt": "2020-01-29T09:22:44Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.common.OidcScopeConstants;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.Scope;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.ScopeUpdateRequest;\n+import org.wso2.carbon.identity.oauth.IdentityOAuthAdminException;\n+import org.wso2.carbon.identity.oauth.dto.ScopeDTO;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import static org.wso2.carbon.identity.api.server.oidc.scope.management.common.OIDCScopeManagementServiceHolder.getOAuthAdminService;\n+\n+/**\n+ * OIDC scope management APIs are processed in this class.\n+ */\n+public class OidcScopeManagementService {\n+\n+    private static final Log LOG = LogFactory.getLog(OidcScopeManagementService.class);\n+\n+    /**\n+     * Add an OIDC scope.\n+     *\n+     * @param scopeObject Scope.\n+     * @return Return location URI of created scope.\n+     */\n+    public String addScope(Scope scopeObject) {\n+\n+        try {\n+            List<String> claimList = scopeObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(scopeObject.getName(), scopeObject.getDisplayName(),\n+                    scopeObject.getDescription(), claimArray);\n+            getOAuthAdminService().addScope(scopeDTO);\n+            return scopeDTO.getName();\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while adding OIDC scope: \" + scopeObject.getName());\n+        }\n+    }\n+\n+    /**\n+     * Delete an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     */\n+    public void deleteScope(String id) {\n+\n+        try {\n+            getOAuthAdminService().deleteScope(id);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while deleting OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Get an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     * @return Return scope details.\n+     */\n+    public Scope getScope(String id) {\n+\n+        try {\n+            ScopeDTO scopeDTO = getOAuthAdminService().getScope(id);\n+            return convertScopeDTOObjectToScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while retrieving OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * List all available OIDC scopes.\n+     *\n+     * @return List of scopes.\n+     */\n+    public List<Scope> getScopes() {\n+\n+        try {\n+            ScopeDTO[] scopes = getOAuthAdminService().getScopes();\n+            return buildScopeList(scopes);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while listing OIDC scopes.\");\n+        }\n+\n+    }\n+\n+    /**\n+     * Update an existing scope.\n+     *\n+     * @param id                Scope name.\n+     * @param scopeUpdateObject Updated scope object.\n+     */\n+    public void updateScope(String id, ScopeUpdateRequest scopeUpdateObject) {\n+\n+        try {\n+            List<String> claimList = scopeUpdateObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(id, scopeUpdateObject.getDisplayName(),\n+                    scopeUpdateObject.getDescription(), claimArray);\n+            getOAuthAdminService().updateScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while updating OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Build scope list.\n+     *\n+     * @param scopeDTOS ScopeDTOs.\n+     * @return Return list of scope.\n+     */\n+    private List<Scope> buildScopeList(ScopeDTO[] scopeDTOS) {\n+\n+        List<Scope> scopeList = new ArrayList<>();\n+\n+        for (int i = 0; i < scopeDTOS.length; i++) {\n+            scopeList.add(convertScopeDTOObjectToScope(scopeDTOS[i]));\n+        }\n+        return scopeList;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2ODc5MA==", "bodyText": "Unnecessary new line", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372268790", "createdAt": "2020-01-29T09:22:58Z", "author": {"login": "madurangasiriwardena"}, "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.common.OidcScopeConstants;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.Scope;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.ScopeUpdateRequest;\n+import org.wso2.carbon.identity.oauth.IdentityOAuthAdminException;\n+import org.wso2.carbon.identity.oauth.dto.ScopeDTO;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import static org.wso2.carbon.identity.api.server.oidc.scope.management.common.OIDCScopeManagementServiceHolder.getOAuthAdminService;\n+\n+/**\n+ * OIDC scope management APIs are processed in this class.\n+ */\n+public class OidcScopeManagementService {\n+\n+    private static final Log LOG = LogFactory.getLog(OidcScopeManagementService.class);\n+\n+    /**\n+     * Add an OIDC scope.\n+     *\n+     * @param scopeObject Scope.\n+     * @return Return location URI of created scope.\n+     */\n+    public String addScope(Scope scopeObject) {\n+\n+        try {\n+            List<String> claimList = scopeObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(scopeObject.getName(), scopeObject.getDisplayName(),\n+                    scopeObject.getDescription(), claimArray);\n+            getOAuthAdminService().addScope(scopeDTO);\n+            return scopeDTO.getName();\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while adding OIDC scope: \" + scopeObject.getName());\n+        }\n+    }\n+\n+    /**\n+     * Delete an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     */\n+    public void deleteScope(String id) {\n+\n+        try {\n+            getOAuthAdminService().deleteScope(id);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while deleting OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Get an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     * @return Return scope details.\n+     */\n+    public Scope getScope(String id) {\n+\n+        try {\n+            ScopeDTO scopeDTO = getOAuthAdminService().getScope(id);\n+            return convertScopeDTOObjectToScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while retrieving OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * List all available OIDC scopes.\n+     *\n+     * @return List of scopes.\n+     */\n+    public List<Scope> getScopes() {\n+\n+        try {\n+            ScopeDTO[] scopes = getOAuthAdminService().getScopes();\n+            return buildScopeList(scopes);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while listing OIDC scopes.\");\n+        }\n+\n+    }\n+\n+    /**\n+     * Update an existing scope.\n+     *\n+     * @param id                Scope name.\n+     * @param scopeUpdateObject Updated scope object.\n+     */\n+    public void updateScope(String id, ScopeUpdateRequest scopeUpdateObject) {\n+\n+        try {\n+            List<String> claimList = scopeUpdateObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(id, scopeUpdateObject.getDisplayName(),\n+                    scopeUpdateObject.getDescription(), claimArray);\n+            getOAuthAdminService().updateScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while updating OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Build scope list.\n+     *\n+     * @param scopeDTOS ScopeDTOs.\n+     * @return Return list of scope.\n+     */\n+    private List<Scope> buildScopeList(ScopeDTO[] scopeDTOS) {\n+\n+        List<Scope> scopeList = new ArrayList<>();\n+\n+        for (int i = 0; i < scopeDTOS.length; i++) {\n+            scopeList.add(convertScopeDTOObjectToScope(scopeDTOS[i]));\n+        }\n+        return scopeList;\n+\n+    }\n+\n+    /**\n+     * Convert ScopeDTO to Scope object.\n+     *\n+     * @param scopeDTO ScopeDTO.\n+     * @return Converted Scope.\n+     */\n+    private Scope convertScopeDTOObjectToScope(ScopeDTO scopeDTO) {\n+\n+        Scope scope = new Scope();\n+        scope.setName(scopeDTO.getName());\n+        scope.setDisplayName(scopeDTO.getDisplayName());\n+        scope.setDescription(scopeDTO.getDescription());\n+        scope.setClaims(Arrays.asList(scopeDTO.getClaim()));\n+        return scope;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d"}, "originalPosition": 144}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/identity-api-server/commit/6db02db9624629ea5eaae766d84ff5c742e5cf51", "committedDate": "2020-01-29T15:09:48Z", "message": "Fix licenses issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMjg2MTYw", "url": "https://github.com/wso2/identity-api-server/pull/84#pullrequestreview-351286160", "createdAt": "2020-01-31T04:19:23Z", "commit": {"oid": "6db02db9624629ea5eaae766d84ff5c742e5cf51"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1406, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}