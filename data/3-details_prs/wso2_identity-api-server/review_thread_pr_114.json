{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDQyMDU5", "number": 114, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1ODoxMlrODm7nDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxNTowN1rODntz7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTQ5MTMyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1ODoxMlrOF0ogvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1ODoxMlrOF0ogvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNDAxNA==", "bodyText": "if its a certificate it will be an object. so we need to do something similar to https://github.com/wso2/identity-api-server/blob/master/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java#L1136-L1141", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r390734014", "createdAt": "2020-03-11T03:58:12Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1953,6 +1953,12 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n                     case Constants.HOME_REALM_PATH:\n                         idpToUpdate.setHomeRealmId(value);\n                         break;\n+                    case Constants.ALIAS:\n+                        idpToUpdate.setAlias(value);\n+                        break;\n+                    case Constants.CERTIFICATE:\n+                        idpToUpdate.setCertificate(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4758e308e4121d8fa0a940b0076fe797d002c404"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjI4MjA2OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNToxNlrOF1WxmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo0NzoxMFrOF1bWog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MTk5Mg==", "bodyText": "let's add ArrayUtils.isnotEmpty(idpToUpdate.getCertificateInfoArray()) here before iterating", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r391491992", "createdAt": "2020-03-12T09:25:16Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,53 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.contains(Constants.CERTIFICATE)) {\n+                    List<String> certificates = new ArrayList<>();\n+                    for (CertificateInfo certInfo : idpToUpdate.getCertificateInfoArray()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8382cd79bb7b201e3bf5e9c66077c0b748be4bde"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2NzAxMA==", "bodyText": "Fixed d8c03ce", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r391567010", "createdAt": "2020-03-12T11:47:10Z", "author": {"login": "GANGANI"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,53 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.contains(Constants.CERTIFICATE)) {\n+                    List<String> certificates = new ArrayList<>();\n+                    for (CertificateInfo certInfo : idpToUpdate.getCertificateInfoArray()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MTk5Mg=="}, "originalCommit": {"oid": "8382cd79bb7b201e3bf5e9c66077c0b748be4bde"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjMwMTk5OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTozMToxMFrOF1W-Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo0Njo1OFrOF1bWTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NTIwNw==", "bodyText": "if we do contains here, it will allow invalid paths as well. Its better to define a regex for this and do a regex match.\ne.g. you can use a regex similar to 'certificate/certificates/\\d+'", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r391495207", "createdAt": "2020-03-12T09:31:10Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,53 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.contains(Constants.CERTIFICATE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8382cd79bb7b201e3bf5e9c66077c0b748be4bde"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2NjkyNw==", "bodyText": "Fixed d8c03ce", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r391566927", "createdAt": "2020-03-12T11:46:58Z", "author": {"login": "GANGANI"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,53 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.contains(Constants.CERTIFICATE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NTIwNw=="}, "originalCommit": {"oid": "8382cd79bb7b201e3bf5e9c66077c0b748be4bde"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjc3OTQyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo1NDoyMFrOF1bjiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMzo1Nzo1N1rOF1299g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3MDMxMg==", "bodyText": "lets verify whether 0 < index <= idpToUpdate.getCertificateInfoArray().length as well.", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r391570312", "createdAt": "2020-03-12T11:54:20Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,54 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.matches(\"/certificate/certificates/[0-9]+\")) {\n+                    List<String> certificates = new ArrayList<>();\n+                    int index = Integer.parseInt(path.split(\"/\")[3]);\n+                    if (ArrayUtils.isNotEmpty(idpToUpdate.getCertificateInfoArray())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8c03ce82b78b02cebb6f87be8ce9e77c1973a80"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxOTQ0Ng==", "bodyText": "Fixed caa5f02", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r392019446", "createdAt": "2020-03-13T03:57:57Z", "author": {"login": "GANGANI"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1931,31 +1931,54 @@ private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpT\n             // We support only 'REPLACE' patch operation.\n             if (operation == Patch.OperationEnum.REPLACE) {\n                 String value = patch.getValue();\n-                switch (path) {\n-                    case Constants.NAME_PATH:\n-                        idpToUpdate.setIdentityProviderName(value);\n-                        break;\n-                    case Constants.DESCRIPTION_PATH:\n-                        idpToUpdate.setIdentityProviderDescription(value);\n-                        break;\n-                    case Constants.IMAGE_PATH:\n-                        idpToUpdate.setImageUrl(value);\n-                        break;\n-                    case Constants.IS_PRIMARY_PATH:\n-                        idpToUpdate.setPrimary(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_ENABLED_PATH:\n-                        idpToUpdate.setEnable(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.IS_FEDERATION_HUB_PATH:\n-                        idpToUpdate.setFederationHub(Boolean.parseBoolean(value));\n-                        break;\n-                    case Constants.HOME_REALM_PATH:\n-                        idpToUpdate.setHomeRealmId(value);\n-                        break;\n-                    default:\n-                        throw handleException(Response.Status.BAD_REQUEST, Constants.ErrorMessage\n-                                .ERROR_CODE_INVALID_INPUT, null);\n+                if (path.matches(\"/certificate/certificates/[0-9]+\")) {\n+                    List<String> certificates = new ArrayList<>();\n+                    int index = Integer.parseInt(path.split(\"/\")[3]);\n+                    if (ArrayUtils.isNotEmpty(idpToUpdate.getCertificateInfoArray())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU3MDMxMg=="}, "originalCommit": {"oid": "d8c03ce82b78b02cebb6f87be8ce9e77c1973a80"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTcxMzQ0OnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxMjo1OFrOF130_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxMjo1OFrOF130_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzMzUzMg==", "bodyText": "do we use this constant anywhere? if not, let's remove it", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r392033532", "createdAt": "2020-03-13T05:12:58Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "diffHunk": "@@ -40,6 +41,9 @@\n     public static final String IS_ENABLED_PATH = \"/isEnabled\";\n     public static final String IS_FEDERATION_HUB_PATH = \"/isFederationHub\";\n     public static final String HOME_REALM_PATH = \"/homeRealmIdentifier\";\n+    public static final String ALIAS = \"/alias\";\n+    public static final String CERTIFICATE_JWKSURI = \"/certificate/jwksUri\";\n+    public static final String CERTIFICATE = \"/certificate/certificates\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa5f02e2d13533499f8730c7d67af32843f80a5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTcxNDAyOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxMzozMlrOF131XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxMzozMlrOF131XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzMzYyOQ==", "bodyText": "move this constant to under  Patch operation paths.", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r392033629", "createdAt": "2020-03-13T05:13:32Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "diffHunk": "@@ -28,6 +28,7 @@\n     public static final String META_DATA_SAML = \"meta_data_saml\";\n     public static final String SELECT_MODE = \"SelectMode\";\n     public static final String SELECT_MODE_METADATA = \"Metadata File Configuration\";\n+    public static final String CERTIFICATE_PATH_REGEX = \"/certificate/certificates/[0-9]+\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa5f02e2d13533499f8730c7d67af32843f80a5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTcxNjMwOnYy", "diffSide": "RIGHT", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxNTowN1rOF132og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNToxNTowN1rOF132og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzMzk1NA==", "bodyText": "do we need to define a default value for index?", "url": "https://github.com/wso2/identity-api-server/pull/114#discussion_r392033954", "createdAt": "2020-03-13T05:15:07Z", "author": {"login": "emswbandara"}, "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1922,6 +1922,7 @@ private OutboundConnector createOutboundConnector(String connectorId, IdentityPr\n      */\n     private void processPatchRequest(List<Patch> patchRequest, IdentityProvider idpToUpdate) {\n \n+        int index = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa5f02e2d13533499f8730c7d67af32843f80a5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1525, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}