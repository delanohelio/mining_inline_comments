{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTAxMjEy", "number": 2322, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo0MjozMlrOEbrUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMTo0MVrOEd2Law==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDU2NjczOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/CommcareRequestGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo0MjozMlrOHFvt5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo0MjozMlrOHFvt5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4NjcyNw==", "bodyText": "It's best practice to treat these map objects as immutable to ensure that params don't leak between requests as is done here", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r475786727", "createdAt": "2020-08-24T17:42:32Z", "author": {"login": "ctsims"}, "path": "app/src/org/commcare/network/CommcareRequestGenerator.java", "diffHunk": "@@ -226,17 +233,19 @@ private static String getDigest() {\n \r\n     @Override\r\n     public Response<ResponseBody> simpleGet(String uri) throws IOException {\r\n-        return simpleGet(uri, new HashMap());\r\n+        return simpleGet(uri, new HashMap<>(), new HashMap<>());\r\n     }\r\n \r\n     @Override\r\n-    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams) throws IOException {\r\n+    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams, Map<String, String> httpHeaders) throws IOException {\r\n+        HashMap<String, String> headers = getHeaders(\"\");\r\n+        headers.putAll(httpHeaders);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDU3NjkxOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/RequestStats.kt", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzo0NTozNFrOHFv0MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozNzo0MVrOHGbRPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMzNg==", "bodyText": "This is going to make the SharedPreferences object enormous, right? With potentially thousands of entries?\nI don't think that's a best practice for how we use these buckets. It could affect their perforamnce for what we expected to be very fast I/O lookups, and it will be hard for us to do things like migrate them. I think it would be better to store this data in its own db tables like we do for a few other models like the geocoder entity cache", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r475788336", "createdAt": "2020-08-24T17:45:34Z", "author": {"login": "ctsims"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgyNTY0OA==", "bodyText": "This is going to make the SharedPreferences object enormous, right? With potentially thousands of entries?\n\nNot really, we are not making an entry here per resource but per install workflow which gets erased on a successful run.  Furthermore, for multiple failed runs of a install workflow, we only ever maintain the time of the first failed attempt to get the time since first failed attempt. So there can only be at max 6 entries each corresponding to each of the install workflow from InstallRequestSource", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r475825648", "createdAt": "2020-08-24T18:52:26Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMzNg=="}, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5MTk3OQ==", "bodyText": "We had a big problem with the other update status collector object blowing up like crazy, so I still think that if we are going to keep some number of these records, we should make sure that number is a fixed LIFO queue (Even if it's fixed at some reasonably large size like 100), rather than letting it grow indefinitely.\nI'd also say based on  previous challenges that the mechanism that keeps it fixed should also be upfront (when the new item is added) rather than relying on event based removal, even if event based removal is still present (and keeps the list small in normal operation).", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r475891979", "createdAt": "2020-08-24T21:01:48Z", "author": {"login": "ctsims"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMzNg=="}, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM3NzYxNA==", "bodyText": "@ctsims Would not the check for the first attempt here automatically gurantees that there is only ever one entry in preference per Install workflow restricting the max number of these prefs to the # of enum entries here.  I do agree with your concerns regarding the updateStas blow up, though this change will only add 6 preferences for time being. So Just emphasizing further to ensure that we are on same page on the impact this change can potentially cause.", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r476377614", "createdAt": "2020-08-25T11:33:39Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMzNg=="}, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMDI4Ng==", "bodyText": "I see, I totally misread this code. I thought it was one bucket per Install Attempt per Source (max of 6 buckets per Install attempt), not just one bucket per source for a max of 6 buckets total.\nThanks for clarifying, you can close this out in that case.", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r476500286", "createdAt": "2020-08-25T14:37:41Z", "author": {"login": "ctsims"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4ODMzNg=="}, "originalCommit": {"oid": "46dabc4b2a34aa06134c18135d974223ef792f11"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDU0NDUzOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/AppUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjozMjoxM1rOHIOKEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjo0MDowMFrOHIObPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4MjYxMA==", "bodyText": "Curious how is it different from BuildConfig.VERSION_NAME", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478382610", "createdAt": "2020-08-27T12:32:13Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/AppUtils.java", "diffHunk": "@@ -177,6 +177,13 @@ public static String getCurrentVersionString() {\n         return Localization.get(application.getString(R.string.app_version_string), new String[]{pi.versionName, String.valueOf(pi.versionCode), ccv, buildNumber, buildDate, profileVersion});\n     }\n \n+    public static String getCommCareVersion() throws PackageManager.NameNotFoundException {\n+        CommCareApplication application = CommCareApplication.instance();\n+        PackageManager pm = application.getPackageManager();\n+        PackageInfo pi = pm.getPackageInfo(application.getPackageName(), 0);\n+        return pi.versionName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4NzAwNw==", "bodyText": "ahh I should definitely be using BuildConfig.VERSION_NAME here. thanks for flagging.", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478387007", "createdAt": "2020-08-27T12:40:00Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/AppUtils.java", "diffHunk": "@@ -177,6 +177,13 @@ public static String getCurrentVersionString() {\n         return Localization.get(application.getString(R.string.app_version_string), new String[]{pi.versionName, String.valueOf(pi.versionCode), ccv, buildNumber, buildDate, profileVersion});\n     }\n \n+    public static String getCommCareVersion() throws PackageManager.NameNotFoundException {\n+        CommCareApplication application = CommCareApplication.instance();\n+        PackageManager pm = application.getPackageManager();\n+        PackageInfo pi = pm.getPackageInfo(application.getPackageName(), 0);\n+        return pi.versionName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4MjYxMA=="}, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDkzODkxOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/mediadownload/MissingMediaDownloadHelper.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDowNTo0MVrOHIR_FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoyMToxNlrOHISrag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NTMzMw==", "bodyText": "Also wondering why we removed suspend here?", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478445333", "createdAt": "2020-08-27T14:05:41Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/mediadownload/MissingMediaDownloadHelper.kt", "diffHunk": "@@ -171,7 +177,7 @@ object MissingMediaDownloadHelper : TableStateListener {\n     }\n \n \n-    private suspend fun downloadMissingMediaResource(uri: String): MissingMediaDownloadResult {\n+    private fun downloadMissingMediaResource(uri: String): MissingMediaDownloadResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1NjY4Mg==", "bodyText": "suspend is only required when we launch a corountine from this method or this method calls another suspend functions. So it didn't serve any purpose to declare this method as suspend", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478456682", "createdAt": "2020-08-27T14:21:16Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/mediadownload/MissingMediaDownloadHelper.kt", "diffHunk": "@@ -171,7 +177,7 @@ object MissingMediaDownloadHelper : TableStateListener {\n     }\n \n \n-    private suspend fun downloadMissingMediaResource(uri: String): MissingMediaDownloadResult {\n+    private fun downloadMissingMediaResource(uri: String): MissingMediaDownloadResult {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0NTMzMw=="}, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDk2MjcyOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/CommcareRequestGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxMDo0N1rOHISNzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoyMzo1NVrOHISyzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0OTEwMA==", "bodyText": "Earlier, we were using getHeaders(\"\") and now we're using getHeaders(null) which means now we'd not be having X_COMMCAREHQ_LAST_SYNC_TOKEN in the headers(Although it would be sent with empty value earlier). Is this expected?", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478449100", "createdAt": "2020-08-27T14:10:47Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/network/CommcareRequestGenerator.java", "diffHunk": "@@ -226,17 +242,19 @@ private static String getDigest() {\n \r\n     @Override\r\n     public Response<ResponseBody> simpleGet(String uri) throws IOException {\r\n-        return simpleGet(uri, new HashMap());\r\n+        return simpleGet(uri, new HashMap<>(), new HashMap<>());\r\n     }\r\n \r\n     @Override\r\n-    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams) throws IOException {\r\n+    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams, Map<String, String> httpHeaders) throws IOException {\r\n+        HashMap<String, String> headers = new HashMap<>(getHeaders(null));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1ODU3NA==", "bodyText": "yes, I don't think it serves any purpose to have X_COMMCAREHQ_LAST_SYNC_TOKEN as empty in headers.", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478458574", "createdAt": "2020-08-27T14:23:55Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/network/CommcareRequestGenerator.java", "diffHunk": "@@ -226,17 +242,19 @@ private static String getDigest() {\n \r\n     @Override\r\n     public Response<ResponseBody> simpleGet(String uri) throws IOException {\r\n-        return simpleGet(uri, new HashMap());\r\n+        return simpleGet(uri, new HashMap<>(), new HashMap<>());\r\n     }\r\n \r\n     @Override\r\n-    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams) throws IOException {\r\n+    public Response<ResponseBody> simpleGet(String uri, Map<String, String> httpParams, Map<String, String> httpHeaders) throws IOException {\r\n+        HashMap<String, String> headers = new HashMap<>(getHeaders(null));\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0OTEwMA=="}, "originalCommit": {"oid": "5d5d5ad334b5d49b4f9df4d91304118c34a0f730"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTE0NDQ2OnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/RequestStats.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDo0OTo0MlrOHIT-XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDo0OTo0MlrOHIT-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3NzkxNg==", "bodyText": "nit: we can move -1 to a constant", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478477916", "createdAt": "2020-08-27T14:49:42Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/network/RequestStats.kt", "diffHunk": "@@ -0,0 +1,73 @@\n+package org.commcare.network\n+\n+import org.commcare.CommCareApp\n+import org.commcare.CommCareApplication\n+import org.commcare.resources.model.InstallRequestSource\n+import org.commcare.utils.SyncDetailCalculations.getDaysBetweenJavaDatetimes\n+import org.commcare.utils.TimeProvider\n+import java.util.*\n+\n+/**\n+ *  Used to keep track of metrics like time since last suceess for various resource install requests\n+ *  Any resource install workflows from [InstallRequestSource] should [register] before starting and\n+ *  [markSuccess] on a successful run\n+ */\n+object RequestStats {\n+\n+    @JvmStatic\n+    fun register(installRequestSource: InstallRequestSource) {\n+        register(CommCareApplication.instance().currentApp, installRequestSource)\n+    }\n+\n+    @JvmStatic\n+    fun register(app: CommCareApp, installRequestSource: InstallRequestSource) {\n+        val firstAttempt = getFirstRequestAttempt(app, installRequestSource);\n+        if (firstAttempt == -1L) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce804477231844805bf5bd545aabf223ad3cb5b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTE1MTc0OnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/update/UpdateHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDo1MToxOFrOHIUDFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo0Mzo1OVrOHJQ57g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3OTEyNA==", "bodyText": "Should we call markSuccess here?", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478479124", "createdAt": "2020-08-27T14:51:18Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/update/UpdateHelper.java", "diffHunk": "@@ -81,11 +83,11 @@ public static UpdateHelper getNewInstance(boolean autoUpdate, UpdateProgressList\n     }\n \n     // Main UpdateHelper function for staging updates\n-    public ResultAndError<AppInstallStatus> update(String profileRef) {\n-        setupUpdate(profileRef);\n+    public ResultAndError<AppInstallStatus> update(String profileRef, InstallRequestSource installRequestSource) {\n+        setupUpdate(profileRef, installRequestSource);\n \n         try {\n-            return new ResultAndError<>(stageUpdate(profileRef));\n+            return new ResultAndError<>(stageUpdate(profileRef, installRequestSource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce804477231844805bf5bd545aabf223ad3cb5b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3OTc3NQ==", "bodyText": "Ohh nvm, it's getting set from UpdateTask. Perhaps, it'd be good to move the call to register outside as well?", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r478479775", "createdAt": "2020-08-27T14:52:12Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/update/UpdateHelper.java", "diffHunk": "@@ -81,11 +83,11 @@ public static UpdateHelper getNewInstance(boolean autoUpdate, UpdateProgressList\n     }\n \n     // Main UpdateHelper function for staging updates\n-    public ResultAndError<AppInstallStatus> update(String profileRef) {\n-        setupUpdate(profileRef);\n+    public ResultAndError<AppInstallStatus> update(String profileRef, InstallRequestSource installRequestSource) {\n+        setupUpdate(profileRef, installRequestSource);\n \n         try {\n-            return new ResultAndError<>(stageUpdate(profileRef));\n+            return new ResultAndError<>(stageUpdate(profileRef, installRequestSource));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3OTEyNA=="}, "originalCommit": {"oid": "9ce804477231844805bf5bd545aabf223ad3cb5b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NjIwNg==", "bodyText": "Good point, calling both register and markSuccess inside now", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r479476206", "createdAt": "2020-08-28T18:43:59Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/update/UpdateHelper.java", "diffHunk": "@@ -81,11 +83,11 @@ public static UpdateHelper getNewInstance(boolean autoUpdate, UpdateProgressList\n     }\n \n     // Main UpdateHelper function for staging updates\n-    public ResultAndError<AppInstallStatus> update(String profileRef) {\n-        setupUpdate(profileRef);\n+    public ResultAndError<AppInstallStatus> update(String profileRef, InstallRequestSource installRequestSource) {\n+        setupUpdate(profileRef, installRequestSource);\n \n         try {\n-            return new ResultAndError<>(stageUpdate(profileRef));\n+            return new ResultAndError<>(stageUpdate(profileRef, installRequestSource));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3OTEyNA=="}, "originalCommit": {"oid": "9ce804477231844805bf5bd545aabf223ad3cb5b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzMxODE5OnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/mediadownload/MissingMediaDownloadHelper.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMTo0MVrOHJQTJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyMTo0MVrOHJQTJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NjI3OA==", "bodyText": "was changed to support running on main thread for unit tests.", "url": "https://github.com/dimagi/commcare-android/pull/2322#discussion_r479466278", "createdAt": "2020-08-28T18:21:41Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/mediadownload/MissingMediaDownloadHelper.kt", "diffHunk": "@@ -147,14 +153,14 @@ object MissingMediaDownloadHelper : TableStateListener {\n      * Downloads a resource with it's location represented by {@param mediaUri}\n      */\n     @JvmStatic\n-    fun requestMediaDownload(mediaUri: String, missingMediaDownloadListener: MissingMediaDownloadListener) {\n+    fun requestMediaDownload(mediaUri: String, defaultDispatcher: CoroutineDispatcher,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfcf2cc969aee309aac45888abf783d81f280f1"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3312, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}