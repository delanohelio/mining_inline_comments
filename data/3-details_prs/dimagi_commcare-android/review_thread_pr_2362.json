{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjIyMTMy", "number": 2362, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxOTo0MVrOEogIOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxOTo0MVrOEogIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTA0ODg5OnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/androidTests/MenuTests.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxOTo0MVrOHZoW3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozMToyMVrOHZouBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzNzY2Mg==", "bodyText": "we can't check for toast messages as an indication of success ?", "url": "https://github.com/dimagi/commcare-android/pull/2362#discussion_r496637662", "createdAt": "2020-09-29T11:19:41Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/MenuTests.kt", "diffHunk": "@@ -0,0 +1,206 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.assertion.ViewAssertions.doesNotExist\n+import androidx.test.espresso.assertion.ViewAssertions.matches\n+import androidx.test.espresso.intent.Intents\n+import androidx.test.espresso.intent.matcher.IntentMatchers\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.activities.*\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.hamcrest.Matchers.startsWith\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class MenuTests: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"settings_sheet_tests.ccz\"\n+        const val APP_NAME = \"App for Settings Sheet\"\n+\n+        val homeMenuItems = arrayOf(\"Update App\",\n+                \"Saved Forms\",\n+                \"Change Language\",\n+                \"About CommCare\",\n+                \"Advanced\",\n+                \"Settings\")\n+\n+        val advancedOptions = arrayOf(\"Wifi Direct\",\n+                \"Manage SD\",\n+                \"Report Problem\",\n+                \"Force Log Submission\",\n+                \"Validate Media\",\n+                \"Connection Test\",\n+                \"Recovery Mode\",\n+                \"Clear User Data\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"settings.test\",\"123\")\n+    }\n+\n+    @Test\n+    fun testHomeScreenOptions() {\n+        InstrumentationUtility.openOptionsMenu()\n+        checkStringExists(homeMenuItems)\n+        InstrumentationUtility.rotateLeft()\n+        checkStringExists(homeMenuItems)\n+        InstrumentationUtility.rotatePortrait()\n+\n+        // Clicking just after rotating doesn't work for some reason, so waiting here for a moment.\n+        InstrumentationUtility.sleep(2)\n+\n+        onView(withText(homeMenuItems[0]))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(UpdateActivity::class.java.name))\n+        onView(withText(\"App is up to date\"))\n+                .check(matches(isDisplayed()))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[1]))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(FormRecordListActivity::class.java.name))\n+        onView(withText(startsWith(\"Filter By:\")))\n+                .perform(click())\n+        checkStringExists(arrayOf(\n+                \"Filter By: All Completed Forms\",\n+                \"Filter By: Only Submitted Forms\",\n+                \"Filter By: Only Unsent Forms\",\n+                \"Only Incomplete Forms\",\n+                \"Filter: Quarantined Forms\"))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[2]))\n+                .perform(click())\n+        // Confirm we see 2 choices\n+        onView(withId(R.id.choices_list_view))\n+                .check(matches(CustomMatchers.matchListSize(2)))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[3]))\n+                .perform(click())\n+        onView(withText(\"About CommCare\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"OK\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[4]))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Advanced\")))\n+        checkStringExists(advancedOptions)\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[5]))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Settings\")))\n+        checkStringExists(arrayOf(\n+                \"Auto Update Frequency\",\n+                \"Set Print Template\",\n+                \"Grid Menus Enabled\",\n+                \"Fuzzy Search Matches\",\n+                \"Opt Out of Analytics\"))\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun testAdvancedActions() {\n+        openAdvancedOption(0)\n+        onView(withText(\"Do you want to send, receive, or submit forms?\"))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.negative_button))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(CommCareWiFiDirectActivity::class.java.name))\n+        InstrumentationUtility.gotoHome()\n+\n+        openAdvancedOption(1)\n+        val formDumpConfirmation = \"Do not use this feature unless you have been trained to do so. Do you wish to proceed?\"\n+        onView(withText(formDumpConfirmation))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.negative_button))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Advanced\")))\n+        onView(withText(advancedOptions[1]))\n+                .perform(click())\n+        onView(withText(formDumpConfirmation))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.positive_button))\n+                .perform(click())\n+        onView(withText(startsWith(\"Dump Forms\")))\n+                .check(matches(isDisplayed()))\n+        onView(withText(startsWith(\"Submit Forms\")))\n+                .check(matches(isDisplayed()))\n+        Espresso.pressBack()\n+        onView(withText(formDumpConfirmation))\n+                .check(doesNotExist())\n+        InstrumentationUtility.gotoHome()\n+\n+        openAdvancedOption(4)\n+        Intents.intended(IntentMatchers.hasComponent(CommCareVerificationActivity::class.java.name))\n+        onView(withId(R.id.home_gridview_buttons))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c7827c4a6eb2456e295fdba18533df9035a183f"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0MzU5MA==", "bodyText": "No, unfortunately we can't with espresso.", "url": "https://github.com/dimagi/commcare-android/pull/2362#discussion_r496643590", "createdAt": "2020-09-29T11:31:21Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/MenuTests.kt", "diffHunk": "@@ -0,0 +1,206 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.assertion.ViewAssertions.doesNotExist\n+import androidx.test.espresso.assertion.ViewAssertions.matches\n+import androidx.test.espresso.intent.Intents\n+import androidx.test.espresso.intent.matcher.IntentMatchers\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.activities.*\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.hamcrest.Matchers.startsWith\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class MenuTests: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"settings_sheet_tests.ccz\"\n+        const val APP_NAME = \"App for Settings Sheet\"\n+\n+        val homeMenuItems = arrayOf(\"Update App\",\n+                \"Saved Forms\",\n+                \"Change Language\",\n+                \"About CommCare\",\n+                \"Advanced\",\n+                \"Settings\")\n+\n+        val advancedOptions = arrayOf(\"Wifi Direct\",\n+                \"Manage SD\",\n+                \"Report Problem\",\n+                \"Force Log Submission\",\n+                \"Validate Media\",\n+                \"Connection Test\",\n+                \"Recovery Mode\",\n+                \"Clear User Data\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"settings.test\",\"123\")\n+    }\n+\n+    @Test\n+    fun testHomeScreenOptions() {\n+        InstrumentationUtility.openOptionsMenu()\n+        checkStringExists(homeMenuItems)\n+        InstrumentationUtility.rotateLeft()\n+        checkStringExists(homeMenuItems)\n+        InstrumentationUtility.rotatePortrait()\n+\n+        // Clicking just after rotating doesn't work for some reason, so waiting here for a moment.\n+        InstrumentationUtility.sleep(2)\n+\n+        onView(withText(homeMenuItems[0]))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(UpdateActivity::class.java.name))\n+        onView(withText(\"App is up to date\"))\n+                .check(matches(isDisplayed()))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[1]))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(FormRecordListActivity::class.java.name))\n+        onView(withText(startsWith(\"Filter By:\")))\n+                .perform(click())\n+        checkStringExists(arrayOf(\n+                \"Filter By: All Completed Forms\",\n+                \"Filter By: Only Submitted Forms\",\n+                \"Filter By: Only Unsent Forms\",\n+                \"Only Incomplete Forms\",\n+                \"Filter: Quarantined Forms\"))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[2]))\n+                .perform(click())\n+        // Confirm we see 2 choices\n+        onView(withId(R.id.choices_list_view))\n+                .check(matches(CustomMatchers.matchListSize(2)))\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[3]))\n+                .perform(click())\n+        onView(withText(\"About CommCare\"))\n+                .check(matches(isDisplayed()))\n+        onView(withText(\"OK\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[4]))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Advanced\")))\n+        checkStringExists(advancedOptions)\n+        InstrumentationUtility.gotoHome()\n+\n+        InstrumentationUtility.openOptionsMenu()\n+        onView(withText(homeMenuItems[5]))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Settings\")))\n+        checkStringExists(arrayOf(\n+                \"Auto Update Frequency\",\n+                \"Set Print Template\",\n+                \"Grid Menus Enabled\",\n+                \"Fuzzy Search Matches\",\n+                \"Opt Out of Analytics\"))\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun testAdvancedActions() {\n+        openAdvancedOption(0)\n+        onView(withText(\"Do you want to send, receive, or submit forms?\"))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.negative_button))\n+                .perform(click())\n+        Intents.intended(IntentMatchers.hasComponent(CommCareWiFiDirectActivity::class.java.name))\n+        InstrumentationUtility.gotoHome()\n+\n+        openAdvancedOption(1)\n+        val formDumpConfirmation = \"Do not use this feature unless you have been trained to do so. Do you wish to proceed?\"\n+        onView(withText(formDumpConfirmation))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.negative_button))\n+                .perform(click())\n+        onView(withResourceName(\"action_bar_title\"))\n+                .check(matches(withText(\"CommCare > Advanced\")))\n+        onView(withText(advancedOptions[1]))\n+                .perform(click())\n+        onView(withText(formDumpConfirmation))\n+                .check(matches(isDisplayed()))\n+        onView(withId(R.id.positive_button))\n+                .perform(click())\n+        onView(withText(startsWith(\"Dump Forms\")))\n+                .check(matches(isDisplayed()))\n+        onView(withText(startsWith(\"Submit Forms\")))\n+                .check(matches(isDisplayed()))\n+        Espresso.pressBack()\n+        onView(withText(formDumpConfirmation))\n+                .check(doesNotExist())\n+        InstrumentationUtility.gotoHome()\n+\n+        openAdvancedOption(4)\n+        Intents.intended(IntentMatchers.hasComponent(CommCareVerificationActivity::class.java.name))\n+        onView(withId(R.id.home_gridview_buttons))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzNzY2Mg=="}, "originalCommit": {"oid": "8c7827c4a6eb2456e295fdba18533df9035a183f"}, "originalPosition": 161}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3169, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}