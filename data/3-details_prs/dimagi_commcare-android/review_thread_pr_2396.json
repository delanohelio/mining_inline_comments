{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTU1OTAx", "number": 2396, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoxOTo1OFrOEzqgUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoyNTo1OVrOEzqkuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjA5MjMyOnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoxOTo1OFrOHrCiww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoxOTo1OFrOHrCiww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5MjQ4Mw==", "bodyText": "nit: if we are using position as input to openModule, we should put a comment here specifiying the text of module we want to open for better readability or move the value 12 in a constant whose name indicates what module this position is for.", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514892483", "createdAt": "2020-10-30T06:19:58Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)\n+    }\n+\n+    private fun enableFormQuarantine() {\n+        InstrumentationUtility.gotoHome()\n+        InstrumentationUtility.selectOptionItem(withText(\"Advanced\"))\n+        onView(withText(\"Enable Manual Form Quarantine\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun test_A_Quarantine() {\n+        InstrumentationUtility.openModule(12)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19543378bb8be61d6ce1f182fafc1ba21660bfe1"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjA5NzcxOnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoyMzowOFrOHrCl7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoyMzowOFrOHrCl7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5MzI5NA==", "bodyText": "we should add an additional step that just checks that you can't quarantine without this call.", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514893294", "createdAt": "2020-10-30T06:23:08Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)\n+    }\n+\n+    private fun enableFormQuarantine() {\n+        InstrumentationUtility.gotoHome()\n+        InstrumentationUtility.selectOptionItem(withText(\"Advanced\"))\n+        onView(withText(\"Enable Manual Form Quarantine\"))\n+                .perform(click())\n+        InstrumentationUtility.gotoHome()\n+    }\n+\n+    @Test\n+    fun test_A_Quarantine() {\n+        InstrumentationUtility.openModule(12)\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+        InstrumentationUtility.openModule(12)\n+        onView(withId(R.id.nav_btn_finish))\n+                .perform(click())\n+\n+        // Go to saved forms and quarantine them\n+        InstrumentationUtility.selectOptionItem(withText(\"Saved Forms\"))\n+\n+        // Quarantine first form.\n+        onView(CustomMatchers.find(\n+                allOf(withText(\"Display Form\")),\n+                1\n+        )).perform(longClick())\n+        // Unsent forms should not be delete-able\n+        withText(\"Delete Record\").doesNotExist()\n+        onView(withText(\"Scan Record Integrity\"))\n+                .perform(click())\n+        onView(withText(\"QUARANTINE FORM\"))\n+                .perform(click())\n+\n+        // After quarantining one form we'll have to re-enable quarantine setting.\n+        enableFormQuarantine()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19543378bb8be61d6ce1f182fafc1ba21660bfe1"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjEwMzYwOnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoyNTo1OVrOHrCpLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNjoyNTo1OVrOHrCpLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg5NDEyNw==", "bodyText": "Need to suppress below Android 10", "url": "https://github.com/dimagi/commcare-android/pull/2396#discussion_r514894127", "createdAt": "2020-10-30T06:25:59Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/ManualQuarantineTest.kt", "diffHunk": "@@ -0,0 +1,126 @@\n+package org.commcare.androidTests\n+\n+import android.os.Build\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.action.ViewActions.longClick\n+import androidx.test.espresso.matcher.ViewMatchers.withId\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.filters.SdkSuppress\n+import org.commcare.dalvik.R\n+import org.commcare.utils.CustomMatchers\n+import org.commcare.utils.InstrumentationUtility\n+import org.commcare.utils.doesNotExist\n+import org.commcare.utils.isDisplayed\n+import org.hamcrest.Matchers.allOf\n+import org.junit.Before\n+import org.junit.FixMethodOrder\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.MethodSorters\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+@SdkSuppress(maxSdkVersion = Build.VERSION_CODES.Q)\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+class ManualQuarantineTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"ccqa.ccz\"\n+        const val APP_NAME = \"Basic Tests\"\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"test\", \"1234\")\n+        // Enable quarantine\n+        enableFormQuarantine()\n+        InstrumentationUtility.changeWifi(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19543378bb8be61d6ce1f182fafc1ba21660bfe1"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3208, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}