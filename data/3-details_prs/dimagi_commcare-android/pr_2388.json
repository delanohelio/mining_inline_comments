{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MjcxOTk5", "number": 2388, "title": "Add Tiles test", "bodyText": "#2341", "createdAt": "2020-10-22T12:58:40Z", "url": "https://github.com/dimagi/commcare-android/pull/2388", "merged": true, "mergeCommit": {"oid": "c29348c0c827178f7c54f5aa6a18f720f8661e6b"}, "closed": true, "closedAt": "2020-10-28T08:58:00Z", "author": {"login": "ShivamPokhriyal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVB4IyAH2gAyNTA4MjcxOTk5OmVhM2I4MTY2N2Q4ZDU1YTM1NWU3MWZkNGY1NTAyOWQ4ZjJiZTA1NGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW4-FeAFqTUxODQwMzc5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea3b81667d8d55a355e71fd4f55029d8f2be054f", "author": {"user": {"login": "ShivamPokhriyal", "name": "Shivam Pokhriyal"}}, "url": "https://github.com/dimagi/commcare-android/commit/ea3b81667d8d55a355e71fd4f55029d8f2be054f", "committedDate": "2020-10-22T13:20:52Z", "message": "Add structure for tiles test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "956844b49c5de5741662b3fc9336ce70ff887348", "author": {"user": {"login": "ShivamPokhriyal", "name": "Shivam Pokhriyal"}}, "url": "https://github.com/dimagi/commcare-android/commit/956844b49c5de5741662b3fc9336ce70ff887348", "committedDate": "2020-10-22T12:58:03Z", "message": "Add structure for tiles test"}, "afterCommit": {"oid": "ea3b81667d8d55a355e71fd4f55029d8f2be054f", "author": {"user": {"login": "ShivamPokhriyal", "name": "Shivam Pokhriyal"}}, "url": "https://github.com/dimagi/commcare-android/commit/ea3b81667d8d55a355e71fd4f55029d8f2be054f", "committedDate": "2020-10-22T13:20:52Z", "message": "Add structure for tiles test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919", "author": {"user": {"login": "ShivamPokhriyal", "name": "Shivam Pokhriyal"}}, "url": "https://github.com/dimagi/commcare-android/commit/0b12d7611ec80f061957727553622b1c2cab7919", "committedDate": "2020-10-23T04:14:49Z", "message": "Fix Failed resolution of: Lkotlin/collections/ArraysKt;"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDQwNzE0", "url": "https://github.com/dimagi/commcare-android/pull/2388#pullrequestreview-515440714", "createdAt": "2020-10-23T08:15:01Z", "commit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoxNTowMlrOHnDb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo0ODowN1rOHnEpEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxMjc4Ng==", "bodyText": "Does these make more sense as the Matcher Extension rather than an array extension ? For eg. defining a isArrayDisplayed(items: array) as a matcher extension. I think so because the primary purpose of these methods is to match the text in arrays and I would classify these methods to be part of Matcher rather than Array, but would like to know if there is a particular benefit of keeping them as Array extensions ?", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510712786", "createdAt": "2020-10-23T08:15:02Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/utils/Array+Extension.kt", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.commcare.utils\n+\n+import androidx.test.espresso.matcher.ViewMatchers.withText\n+\n+fun Array<String>.areDisplayed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNDA3NA==", "bodyText": "Wondering if these methods should be based on the text of the module/form rather than position ? It's more clear to anyone reading code that way.", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510714074", "createdAt": "2020-10-23T08:17:13Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNjM1NA==", "bodyText": "Step missing", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510716354", "createdAt": "2020-10-23T08:21:13Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)\n+\n+        caseDetails.areDisplayed()\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        withId(R.id.com_tile_holder_btn_open).doesNotExist()\n+        withText(\"Sex F\").doesNotExist()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+        onView(withText(\"Placeholder\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyNjkwNg==", "bodyText": "Missing ?", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510726906", "createdAt": "2020-10-23T08:39:08Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)\n+\n+        caseDetails.areDisplayed()\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        withId(R.id.com_tile_holder_btn_open).doesNotExist()\n+        withText(\"Sex F\").doesNotExist()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        withText(\"Sally Ride\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDropDown() {\n+        InstrumentationUtility.openModule(3)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // Close expanded list using the same button\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Use back button to close the expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+        Espresso.pressBack()\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Confirm on pressing back we're in EntitySelectActivity\n+        Espresso.pressBack()\n+        val application = InstrumentationRegistry.getInstrumentation().targetContext.applicationContext\n+                as CommCareInstrumentationTestApplication\n+        var activity = application.currentActivity\n+        InstrumentationUtility.assert(activity is EntitySelectActivity, \"Current Activity is ${activity.localClassName}\")\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Go to form screen\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        caseDetails.areDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        //Close expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyODE2MA==", "bodyText": "Missing ?", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510728160", "createdAt": "2020-10-23T08:41:12Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)\n+\n+        caseDetails.areDisplayed()\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        withId(R.id.com_tile_holder_btn_open).doesNotExist()\n+        withText(\"Sex F\").doesNotExist()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        withText(\"Sally Ride\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDropDown() {\n+        InstrumentationUtility.openModule(3)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // Close expanded list using the same button\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Use back button to close the expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+        Espresso.pressBack()\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Confirm on pressing back we're in EntitySelectActivity\n+        Espresso.pressBack()\n+        val application = InstrumentationRegistry.getInstrumentation().targetContext.applicationContext\n+                as CommCareInstrumentationTestApplication\n+        var activity = application.currentActivity\n+        InstrumentationUtility.assert(activity is EntitySelectActivity, \"Current Activity is ${activity.localClassName}\")\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Go to form screen\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        caseDetails.areDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        //Close expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDetail() {\n+        InstrumentationUtility.openModule(1)\n+\n+        // Clicking this opens all the case details including the expanded ones.\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // And we don't see the expand button\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        // Open form\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        // We can still see the case details.\n+        caseDetails.areDisplayed()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyOTkzNA==", "bodyText": "Step missing", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510729934", "createdAt": "2020-10-23T08:44:06Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)\n+\n+        caseDetails.areDisplayed()\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        withId(R.id.com_tile_holder_btn_open).doesNotExist()\n+        withText(\"Sex F\").doesNotExist()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        withText(\"Sally Ride\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDropDown() {\n+        InstrumentationUtility.openModule(3)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // Close expanded list using the same button\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Use back button to close the expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+        Espresso.pressBack()\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Confirm on pressing back we're in EntitySelectActivity\n+        Espresso.pressBack()\n+        val application = InstrumentationRegistry.getInstrumentation().targetContext.applicationContext\n+                as CommCareInstrumentationTestApplication\n+        var activity = application.currentActivity\n+        InstrumentationUtility.assert(activity is EntitySelectActivity, \"Current Activity is ${activity.localClassName}\")\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Go to form screen\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        caseDetails.areDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        //Close expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDetail() {\n+        InstrumentationUtility.openModule(1)\n+\n+        // Clicking this opens all the case details including the expanded ones.\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // And we don't see the expand button\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        // Open form\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        // We can still see the case details.\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_noDetail_noInline() {\n+        InstrumentationUtility.openModule(2)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        // go to form and you can still see the case details.\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDczMjU2Mw==", "bodyText": "This and that are not present", "url": "https://github.com/dimagi/commcare-android/pull/2388#discussion_r510732563", "createdAt": "2020-10-23T08:48:07Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/androidTests/TilesTest.kt", "diffHunk": "@@ -0,0 +1,183 @@\n+package org.commcare.androidTests\n+\n+import androidx.test.espresso.Espresso\n+import androidx.test.espresso.Espresso.onView\n+import androidx.test.espresso.action.ViewActions.click\n+import androidx.test.espresso.matcher.ViewMatchers.*\n+import androidx.test.ext.junit.runners.AndroidJUnit4\n+import androidx.test.filters.LargeTest\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.EntitySelectActivity\n+import org.commcare.dalvik.R\n+import org.commcare.utils.*\n+import org.junit.Before\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+\n+@RunWith(AndroidJUnit4::class)\n+@LargeTest\n+class TilesTest: BaseTest() {\n+\n+    companion object {\n+        const val CCZ_NAME = \"tiles.ccz\"\n+        const val APP_NAME = \"Case Tile Tests\"\n+        var caseDetails = arrayOf(\"Sex F\", \"Date: 01/07/17\")\n+        var caseDetailsExpanded = caseDetails + arrayOf(\"Secret\")\n+    }\n+\n+    @Before\n+    fun setup() {\n+        installApp(APP_NAME, CCZ_NAME)\n+        InstrumentationUtility.login(\"tile.test\", \"123\")\n+    }\n+\n+    @Test\n+    fun testNoTile() {\n+        InstrumentationUtility.openModule(0)\n+\n+        caseDetails.areDisplayed()\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        withId(R.id.com_tile_holder_btn_open).doesNotExist()\n+        withText(\"Sex F\").doesNotExist()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        withText(\"Sally Ride\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDropDown() {\n+        InstrumentationUtility.openModule(3)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // Close expanded list using the same button\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Use back button to close the expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+        Espresso.pressBack()\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+\n+        // Confirm on pressing back we're in EntitySelectActivity\n+        Espresso.pressBack()\n+        val application = InstrumentationRegistry.getInstrumentation().targetContext.applicationContext\n+                as CommCareInstrumentationTestApplication\n+        var activity = application.currentActivity\n+        InstrumentationUtility.assert(activity is EntitySelectActivity, \"Current Activity is ${activity.localClassName}\")\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isDisplayed()\n+\n+        // Go to form screen\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        withText(\"Inside\").isDisplayed()\n+        caseDetails.areDisplayed()\n+\n+        // Expand tile\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        //Close expanded list\n+        onView(withId(R.id.com_tile_holder_btn_open))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_withDetail() {\n+        InstrumentationUtility.openModule(1)\n+\n+        // Clicking this opens all the case details including the expanded ones.\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetailsExpanded.areDisplayed()\n+\n+        // And we don't see the expand button\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        onView(withText(\"Continue\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        // Open form\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        // We can still see the case details.\n+        caseDetails.areDisplayed()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+    }\n+\n+    @Test\n+    fun testPersistentTile_noDetail_noInline() {\n+        InstrumentationUtility.openModule(2)\n+\n+        onView(withText(\"Sally Ride\"))\n+                .perform(click())\n+        caseDetails.areDisplayed()\n+        withText(\"Placeholder\").isDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+\n+        // go to form and you can still see the case details.\n+        onView(withText(\"Placeholder\"))\n+                .perform(click())\n+\n+        caseDetails.areDisplayed()\n+        withText(\"Secret\").doesNotExist()\n+        withId(R.id.com_tile_holder_btn_open).isNotDisplayed()\n+    }\n+\n+    @Test\n+    fun testBreadcrumb() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b12d7611ec80f061957727553622b1c2cab7919"}, "originalPosition": 164}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f0153737dd25ff9fb054a61ffc9487d2fd6f3ff", "author": {"user": {"login": "ShivamPokhriyal", "name": "Shivam Pokhriyal"}}, "url": "https://github.com/dimagi/commcare-android/commit/7f0153737dd25ff9fb054a61ffc9487d2fd6f3ff", "committedDate": "2020-10-28T07:58:34Z", "message": "PR suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NDAzNzkx", "url": "https://github.com/dimagi/commcare-android/pull/2388#pullrequestreview-518403791", "createdAt": "2020-10-28T08:06:04Z", "commit": {"oid": "7f0153737dd25ff9fb054a61ffc9487d2fd6f3ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1982, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}