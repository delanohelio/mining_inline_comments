{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjU3ODI2", "number": 2251, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMjo0MVrOEAY8Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjowMDozMVrOEAehiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODQ0MDc5OnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/RemoteDataPullResponse.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNzoyMjo0MVrOGboueg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDo1Mzo1NVrOGbv4fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMTk5NA==", "bodyText": "This line should be enough to resolve the issue, so let me know if the other changes doesn't make much sense.", "url": "https://github.com/dimagi/commcare-android/pull/2251#discussion_r431631994", "createdAt": "2020-05-28T07:22:41Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/network/RemoteDataPullResponse.java", "diffHunk": "@@ -51,15 +61,12 @@ protected RemoteDataPullResponse(DataPullTask task,\n      */\n     public BitCache writeResponseToCache(Context c) throws IOException {\n         BitCache cache = null;\n-        try {\n-            final long dataSizeGuess = ModernHttpRequester.getContentLength(response);\n-\n+        try (InputStream input = getInputStream()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae184582f4984e7eeb6767eff8927dee4dcdd2b7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0NDcwNQ==", "bodyText": "Got it. yeah I do think globalizing variables for no reason should be avoided. Also HttpUtils.parseUserVisibleError only gets called for a specific response code 406 in old code , so that behaviour must be retained.", "url": "https://github.com/dimagi/commcare-android/pull/2251#discussion_r431744705", "createdAt": "2020-05-28T10:44:59Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/network/RemoteDataPullResponse.java", "diffHunk": "@@ -51,15 +61,12 @@ protected RemoteDataPullResponse(DataPullTask task,\n      */\n     public BitCache writeResponseToCache(Context c) throws IOException {\n         BitCache cache = null;\n-        try {\n-            final long dataSizeGuess = ModernHttpRequester.getContentLength(response);\n-\n+        try (InputStream input = getInputStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMTk5NA=="}, "originalCommit": {"oid": "ae184582f4984e7eeb6767eff8927dee4dcdd2b7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc0OTI0Nw==", "bodyText": "Cool! Will revert.", "url": "https://github.com/dimagi/commcare-android/pull/2251#discussion_r431749247", "createdAt": "2020-05-28T10:53:55Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/network/RemoteDataPullResponse.java", "diffHunk": "@@ -51,15 +61,12 @@ protected RemoteDataPullResponse(DataPullTask task,\n      */\n     public BitCache writeResponseToCache(Context c) throws IOException {\n         BitCache cache = null;\n-        try {\n-            final long dataSizeGuess = ModernHttpRequester.getContentLength(response);\n-\n+        try (InputStream input = getInputStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMTk5NA=="}, "originalCommit": {"oid": "ae184582f4984e7eeb6767eff8927dee4dcdd2b7"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTM1NTYxOnYy", "diffSide": "RIGHT", "path": "app/src/org/commcare/network/DataPullResponseFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjowMDozMVrOGbx6NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyOTo0NlrOGby2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4MjQ1Mg==", "bodyText": "is this still relevant ?", "url": "https://github.com/dimagi/commcare-android/pull/2251#discussion_r431782452", "createdAt": "2020-05-28T12:00:31Z", "author": {"login": "shubham1g5"}, "path": "app/src/org/commcare/network/DataPullResponseFactory.java", "diffHunk": "@@ -21,7 +22,7 @@ public RemoteDataPullResponse makeDataPullRequest(DataPullTask task,\n                                                       CommcareRequestEndpoints requestor,\n                                                       String server,\n                                                       boolean includeSyncToken) throws IOException {\n-        Response response = requestor.makeCaseFetchRequest(server, includeSyncToken);\n+        Response<ResponseBody> response = requestor.makeCaseFetchRequest(server, includeSyncToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d852e1ba021c8db56cd33e3c3f9eceb9226cbf4b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5Nzg4Nw==", "bodyText": "Yeah, RemoteDataPullResponse constructor expects a generic type.", "url": "https://github.com/dimagi/commcare-android/pull/2251#discussion_r431797887", "createdAt": "2020-05-28T12:29:46Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/src/org/commcare/network/DataPullResponseFactory.java", "diffHunk": "@@ -21,7 +22,7 @@ public RemoteDataPullResponse makeDataPullRequest(DataPullTask task,\n                                                       CommcareRequestEndpoints requestor,\n                                                       String server,\n                                                       boolean includeSyncToken) throws IOException {\n-        Response response = requestor.makeCaseFetchRequest(server, includeSyncToken);\n+        Response<ResponseBody> response = requestor.makeCaseFetchRequest(server, includeSyncToken);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4MjQ1Mg=="}, "originalCommit": {"oid": "d852e1ba021c8db56cd33e3c3f9eceb9226cbf4b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3269, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}