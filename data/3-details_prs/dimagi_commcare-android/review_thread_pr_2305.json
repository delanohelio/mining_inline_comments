{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjI2MTMw", "number": 2305, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNToxNFrOEU5DnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowOToxN1rOEU5JBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQxNzg4OnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNToxNFrOG7VopQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNToxNFrOG7VopQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3MzYzNw==", "bodyText": "nit: CommCareIdlingResource  -> ProgressIdlingResource", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464873637", "createdAt": "2020-08-04T08:05:14Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQzMTc0OnYy", "diffSide": "RIGHT", "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowOToxN1rOG7VxSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOToyODo1NlrOG7Ym8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTg1MA==", "bodyText": "so effectlvely what we are trying to do is we are marking the resource as Idle a sec after the progress dialog has been removed. What's the behaviour if we don't add this at all ? The app never goes to Idle or takes more time to do so ?", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464875850", "createdAt": "2020-08-04T08:09:17Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {\n+\n+    companion object {\n+        const val timeoutMs = 1000L\n+    }\n+\n+    lateinit var resourceCallback: IdlingResource.ResourceCallback\n+    var isIdle = false\n+    val handler = Handler(Looper.getMainLooper())\n+\n+    override fun getName(): String {\n+        return CommCareIdlingResource::class.java.name\n+    }\n+\n+    override fun isIdleNow(): Boolean {\n+        val activity = getCommCareActivity() ?: return true\n+        if (!(activity.currentProgressDialog != null && activity.currentProgressDialog.isAdded)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NTU2Mg==", "bodyText": "The app would take 1 more sec before going to idle.", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464885562", "createdAt": "2020-08-04T08:26:40Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {\n+\n+    companion object {\n+        const val timeoutMs = 1000L\n+    }\n+\n+    lateinit var resourceCallback: IdlingResource.ResourceCallback\n+    var isIdle = false\n+    val handler = Handler(Looper.getMainLooper())\n+\n+    override fun getName(): String {\n+        return CommCareIdlingResource::class.java.name\n+    }\n+\n+    override fun isIdleNow(): Boolean {\n+        val activity = getCommCareActivity() ?: return true\n+        if (!(activity.currentProgressDialog != null && activity.currentProgressDialog.isAdded)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTg1MA=="}, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg5NzA0NQ==", "bodyText": "got it. thanks!", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464897045", "createdAt": "2020-08-04T08:45:43Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {\n+\n+    companion object {\n+        const val timeoutMs = 1000L\n+    }\n+\n+    lateinit var resourceCallback: IdlingResource.ResourceCallback\n+    var isIdle = false\n+    val handler = Handler(Looper.getMainLooper())\n+\n+    override fun getName(): String {\n+        return CommCareIdlingResource::class.java.name\n+    }\n+\n+    override fun isIdleNow(): Boolean {\n+        val activity = getCommCareActivity() ?: return true\n+        if (!(activity.currentProgressDialog != null && activity.currentProgressDialog.isAdded)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTg1MA=="}, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg5Nzc4MQ==", "bodyText": "might be worth adding that as comment either in the class javadoc or inline comment as that's the crux of why we need this class.", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464897781", "createdAt": "2020-08-04T08:46:52Z", "author": {"login": "shubham1g5"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {\n+\n+    companion object {\n+        const val timeoutMs = 1000L\n+    }\n+\n+    lateinit var resourceCallback: IdlingResource.ResourceCallback\n+    var isIdle = false\n+    val handler = Handler(Looper.getMainLooper())\n+\n+    override fun getName(): String {\n+        return CommCareIdlingResource::class.java.name\n+    }\n+\n+    override fun isIdleNow(): Boolean {\n+        val activity = getCommCareActivity() ?: return true\n+        if (!(activity.currentProgressDialog != null && activity.currentProgressDialog.isAdded)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTg1MA=="}, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkyMjM1Mw==", "bodyText": "Ooops Sorry I missed this comment before merging.\nBTW, I've already added docs here https://github.com/dimagi/commcare-android/pull/2305/files#diff-b30c4312c3ff1a1c9e97d4a741c20500R10-R20", "url": "https://github.com/dimagi/commcare-android/pull/2305#discussion_r464922353", "createdAt": "2020-08-04T09:28:56Z", "author": {"login": "ShivamPokhriyal"}, "path": "app/instrumentation-tests/src/org/commcare/utils/CommCareIdlingResource.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.commcare.utils\n+\n+import android.os.Handler\n+import android.os.Looper\n+import androidx.test.espresso.IdlingResource\n+import androidx.test.platform.app.InstrumentationRegistry\n+import org.commcare.CommCareInstrumentationTestApplication\n+import org.commcare.activities.CommCareActivity\n+\n+/**\n+ * An implementation of idling resource useful for monitoring idleness of progress dialogs.\n+ *\n+ * It has an additional idleness constraint that the progress dialog must not be shown for a set\n+ * period of time before we declare the resource idle.\n+ *\n+ * Useful for cases where we make multiple network calls in succession where each response triggers\n+ * another request until loading is complete.\n+ * So the app will be like Not-Idle(Progress bar showing) -> Idle(Progress bar closed) -> Not-Idle -> Idle...\n+ * And we don't want to report idle when this happens.\n+ */\n+class CommCareIdlingResource: IdlingResource {\n+\n+    companion object {\n+        const val timeoutMs = 1000L\n+    }\n+\n+    lateinit var resourceCallback: IdlingResource.ResourceCallback\n+    var isIdle = false\n+    val handler = Handler(Looper.getMainLooper())\n+\n+    override fun getName(): String {\n+        return CommCareIdlingResource::class.java.name\n+    }\n+\n+    override fun isIdleNow(): Boolean {\n+        val activity = getCommCareActivity() ?: return true\n+        if (!(activity.currentProgressDialog != null && activity.currentProgressDialog.isAdded)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTg1MA=="}, "originalCommit": {"oid": "ccb8a4e254c235d02e958310c67873fe4935e42a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3301, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}