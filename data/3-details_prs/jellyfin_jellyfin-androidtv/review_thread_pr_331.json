{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjgwNTI4", "number": 331, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo1NDo0MVrODfQYgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo1Njo1MlrODfQbnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTAwODY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/UriExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo1NDo0MVrOFo2muA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTozMzo0NlrOFo71qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MjAwOA==", "bodyText": "Seems like this could be used to replace this method or perhaps be made to share some common code given that it returns a String and this returns a Uri.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/331#discussion_r378382008", "createdAt": "2020-02-12T16:54:41Z", "author": {"login": "thornbill"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/UriExtensions.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.jellyfin.androidtv.util\n+\n+import android.content.ContentResolver\n+import android.net.Uri\n+import androidx.annotation.AnyRes\n+import org.jellyfin.androidtv.TvApp\n+\n+/**\n+ * Get the uri for a given resource\n+ */\n+fun uriFromResourceId(@AnyRes resid: Int): Uri {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f1fa1e1507ff065a906cad7fe7f3f08b5e23641"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2Nzc1Mw==", "bodyText": "Good one, I changed the method in the ImageUtils class to properly specify the path (it was missing the \"resource type name\") and used that one. I tested it and it still works for the other usages as well.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/331#discussion_r378467753", "createdAt": "2020-02-12T19:33:46Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/UriExtensions.kt", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.jellyfin.androidtv.util\n+\n+import android.content.ContentResolver\n+import android.net.Uri\n+import androidx.annotation.AnyRes\n+import org.jellyfin.androidtv.TvApp\n+\n+/**\n+ * Get the uri for a given resource\n+ */\n+fun uriFromResourceId(@AnyRes resid: Int): Uri {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MjAwOA=="}, "originalCommit": {"oid": "3f1fa1e1507ff065a906cad7fe7f3f08b5e23641"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTAxNjYwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/NumberExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjo1Njo1MlrOFo2r_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTozMjozM1rOFo7zUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MzM1Nw==", "bodyText": "This seems to be doing the same thing as this method.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/331#discussion_r378383357", "createdAt": "2020-02-12T16:56:52Z", "author": {"login": "thornbill"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/NumberExtensions.kt", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.jellyfin.androidtv.util\n+\n+import org.jellyfin.androidtv.TvApp\n+\n+/**\n+ * Current (pixel) value as display pixels\n+ */\n+val Int.dp: Int", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f1fa1e1507ff065a906cad7fe7f3f08b5e23641"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NzE1NQ==", "bodyText": "I actually introduced this change in another PR (1e1d83b#diff-3d7ec439941e8f132c864ebd3a25191e). I didn't know we already had a method to do this calculation.\nThis variant uses a Kotlin extension function so we can write 7.dp and it will convert the integer into pixels (for my emulator it would return 14). I think it looks better than Utils.convertDpToPixel(context, 7).\nIt's not really possible to use the extension function in the Java classes so I changed the extension function to use the Utils class instead.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/331#discussion_r378467155", "createdAt": "2020-02-12T19:32:33Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/NumberExtensions.kt", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.jellyfin.androidtv.util\n+\n+import org.jellyfin.androidtv.TvApp\n+\n+/**\n+ * Current (pixel) value as display pixels\n+ */\n+val Int.dp: Int", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MzM1Nw=="}, "originalCommit": {"oid": "3f1fa1e1507ff065a906cad7fe7f3f08b5e23641"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1012, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}