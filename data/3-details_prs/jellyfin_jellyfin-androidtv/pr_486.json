{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDkxNDA5", "number": 486, "title": "add settings to remap tv remote buttons", "bodyText": "The settings show the keyCode right now, that is not very descriptive but I did not find anything that would make it clearer which button is assigned. Also I'm not sure about the naming and texts of the preferences since english is not my native language.\nI'm not an expert in android development so any feedback and criticism is welcome!", "createdAt": "2020-05-27T20:15:37Z", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486", "merged": true, "mergeCommit": {"oid": "8af8ff187704b108d86cbea1c5456f8e502ecbfe"}, "closed": true, "closedAt": "2020-06-02T08:53:21Z", "author": {"login": "Froghut"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclfCJegH2gAyNDI0MDkxNDA5OjJhMTJjMjVjZTdhNGM1Mzc2MTRlZDBmNjAwNDQ2ZTY5YzU1NWQyZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnQ7n2AFqTQyMjQ3MzM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a12c25ce7a4c537614ed0f600446e69c555d2d7", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2a12c25ce7a4c537614ed0f600446e69c555d2d7", "committedDate": "2020-05-27T20:10:41Z", "message": "add settings to remap tv remote buttons, implemented are audio language button and subtitle language button\nalso add logic for handling audio language button"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7dd9988c5a2db05bd2d39945ce1ea154bb5279f", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/b7dd9988c5a2db05bd2d39945ce1ea154bb5279f", "committedDate": "2020-05-27T20:15:48Z", "message": "fix wrong indent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b534d9c24b6f2fc2b51d89fe986fc93e989ae8f", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/6b534d9c24b6f2fc2b51d89fe986fc93e989ae8f", "committedDate": "2020-05-27T20:26:43Z", "message": "add missing code documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/418106128e2d1daf53a4ebad88479946198e56da", "committedDate": "2020-05-28T07:53:17Z", "message": "add punctuation to KDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1bf9a219835d67562ae54ef58cc718f4cc1da57", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f1bf9a219835d67562ae54ef58cc718f4cc1da57", "committedDate": "2020-05-30T12:57:50Z", "message": "improve button remapping preference dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f12bb4b241913d4087d50c1be19c0ad777ac021", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/2f12bb4b241913d4087d50c1be19c0ad777ac021", "committedDate": "2020-05-30T12:59:39Z", "message": "cleanup + comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b68e0a946f6ca10fc45919cf79f16983f37909e", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/3b68e0a946f6ca10fc45919cf79f16983f37909e", "committedDate": "2020-05-30T14:12:55Z", "message": "use SummaryProvider for ButtonRemapPreference and auto close dialog on Save/Reset click"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/54a76e555a3a15695e58202759da7c74cbc5231d", "committedDate": "2020-05-30T15:15:51Z", "message": "use syntactic binding and fix complex code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMzI3NjI1", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#pullrequestreview-420327625", "createdAt": "2020-05-28T17:16:38Z", "commit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxNjozOFrOGb_Ayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODo1NjoyOVrOGc00UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NzEzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Default keycode for audio language switch button on a tv remote\n          \n          \n            \n            \t * Shortcut used for changing the audio track", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431997130", "createdAt": "2020-05-28T17:16:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NzIxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Default keycode for subtitle language switch button on a tv remote\n          \n          \n            \n            \t * Shortcut used for changing the subtitle track", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431997215", "createdAt": "2020-05-28T17:16:50Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n+\n+\t/**\n+\t * Default keycode for subtitle language switch button on a tv remote", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODA4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n          \n          \n            \n            \tvar shortcutAudioTrack by intPreference(\"shortcut_audio_track\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431998085", "createdAt": "2020-05-28T17:18:19Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODQ2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tvar subtitleLanguageButtonKeyCode by intPreference(\"subtitle_language_button_keycode\", KeyEvent.KEYCODE_CAPTIONS)\n          \n          \n            \n            \tvar shortcutSubtitleTrack by intPreference(\"shortcut_subtitle_track\", KeyEvent.KEYCODE_CAPTIONS)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r431998461", "createdAt": "2020-05-28T17:18:59Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/UserPreferences.kt", "diffHunk": "@@ -145,6 +146,16 @@ class UserPreferences(context: Context) : SharedPreferenceStore(PreferenceManage\n \t */\n \tvar liveTvVideoPlayer by enumPreference(\"live_tv_video_player\", PreferredVideoPlayer.AUTO)\n \n+\t/**\n+\t * Default keycode for audio language switch button on a tv remote\n+\t */\n+\tvar audioLanguageButtonKeyCode by intPreference(\"audio_language_button_keycode\", KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK)\n+\n+\t/**\n+\t * Default keycode for subtitle language switch button on a tv remote\n+\t */\n+\tvar subtitleLanguageButtonKeyCode by intPreference(\"subtitle_language_button_keycode\", KeyEvent.KEYCODE_CAPTIONS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMTA4MQ==", "bodyText": "You should use strings, Android Studio should be able to do that for you.\n(also applies for the other strings in this file)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432001081", "createdAt": "2020-05-28T17:23:16Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/xml/preferences.xml", "diffHunk": "@@ -156,6 +156,25 @@\n             android:title=\"@string/lbl_direct_stream_live\" />\n     </PreferenceCategory>\n \n+    <PreferenceCategory\n+        android:key=\"button_remapping\"\n+        android:title=\"Button Remapping\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "418106128e2d1daf53a4ebad88479946198e56da"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDU2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n          \n          \n            \n            \t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n          \n          \n            \n            \t\t\tKeyEvent.KEYCODE_ENTER\n          \n          \n            \n            \t\t)\n          \n      \n    \n    \n  \n\nAdded enter button (otherwise the buttons can't be used) and add the closing parenthese on a separate line", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432864568", "createdAt": "2020-05-30T15:38:48Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDY0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n          \n          \n            \n            \t\t\tcontainer, false)\n          \n          \n            \n            \t\treturn view\n          \n          \n            \n            \t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432864643", "createdAt": "2020-05-30T15:39:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODA5Ng==", "bodyText": "Use a more clear name like \"fragment\"", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878096", "createdAt": "2020-05-30T18:48:43Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/UserPreferencesFragment.kt", "diffHunk": "@@ -28,6 +22,16 @@ class UserPreferencesFragment : LeanbackSettingsFragmentCompat() {\n \t\tstartPreferenceFragment(InnerUserPreferencesFragment())\n \t}\n \n+\toverride fun onPreferenceDisplayDialog(caller: PreferenceFragmentCompat, pref: Preference?): Boolean {\n+\t\tif (pref is ButtonRemapPreference) {\n+\t\t\tval f = ButtonRemapDialogFragment.newInstance(pref.key)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODEzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n          \n          \n            \n            \t\treturn a!!.getInt(index, -1)\n          \n          \n            \n            \toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n          \n          \n            \n            \t\treturn a.getInt(index, -1)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878135", "createdAt": "2020-05-30T18:49:15Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODE2OQ==", "bodyText": "Should use a string resource", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878169", "createdAt": "2020-05-30T18:49:39Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\treturn provideSummary(preference.getKeyCode())\n+\t}\n+\n+\tfun provideSummary(keyCode: Int): CharSequence {\n+\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t} else {\n+\t\t\tkeyCodeString = \"Unknown ($keyCodeString)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODI3NQ==", "bodyText": "We don't prefix our property names with m. We try to stick to the official Kotlin Coding Conventions as possible.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878275", "createdAt": "2020-05-30T18:50:49Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODMyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tval preference = preference\n          \n      \n    \n    \n  \n\nNo need for this", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878325", "createdAt": "2020-05-30T18:51:45Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODM2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n          \n          \n            \n            \t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n          \n          \n            \n            \toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878362", "createdAt": "2020-05-30T18:52:16Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODM5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tval theme = R.style.PreferenceThemeOverlayLeanback\n          \n          \n            \n            \t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n          \n          \n            \n            \t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878395", "createdAt": "2020-05-30T18:52:30Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODQ3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfun newInstance(key: String?): ButtonRemapDialogFragment {\n          \n          \n            \n            \t\tfun newInstance(key: String): ButtonRemapDialogFragment {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878474", "createdAt": "2020-05-30T18:53:35Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(mDialogTitle)) {\n+\t\t\tdecor_title.text = mDialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(mDialogMessage)) {\n+\t\t\tmessage.visibility = View.VISIBLE\n+\t\t\tmessage.text = mDialogMessage\n+\t\t}\n+\n+\t\tbuttonSave.setOnClickListener { _ ->\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonSave.isEnabled = false\n+\t\tbuttonSave.setOnKeyListener(mCheckKeys)\n+\n+\t\tbuttonReset.setOnClickListener { _ ->\n+\t\t\t// TODO: refactor this once the new preference workflow is here\n+\t\t\twhen (preference.key) {\n+\t\t\t\t\"audio_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK\n+\t\t\t\t\"subtitle_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_CAPTIONS\n+\t\t\t}\n+\n+\t\t\tsetKeyCodeText()\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonReset.setOnKeyListener(mCheckKeys)\n+\t\tbuttonReset.requestFocus()\n+\n+\t\tsetKeyCodeText()\n+\t}\n+\n+\tprivate fun setKeyCodeText() {\n+\t\ttextViewKeyCode.text = ButtonRemapSummaryProvider.instance!!.provideSummary(mKeyCode)\n+\t}\n+\n+\tcompanion object {\n+\t\tprivate const val SAVE_STATE_TITLE = \"ButtonRemapDialog.title\"\n+\t\tprivate const val SAVE_STATE_MESSAGE = \"ButtonRemapDialog.message\"\n+\t\tprivate const val SAVE_STATE_KEYCODE = \"ButtonRemapDialog.keycode\"\n+\n+\t\t/**\n+\t\t * Creates a new ButtonRemapDialogFragment instance.\n+\t\t *\n+\t\t * @param key the preference key\n+\t\t * @return the new ButtonRemapDialogFragment instance\n+\t\t */\n+\t\tfun newInstance(key: String?): ButtonRemapDialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODUyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tval args = Bundle(1)\n          \n          \n            \n            \t\t\targs.putString(ARG_KEY, key)\n          \n          \n            \n            \t\t\tval fragment = ButtonRemapDialogFragment()\n          \n          \n            \n            \t\t\tfragment.arguments = args\n          \n          \n            \n            \t\t\treturn fragment\n          \n          \n            \n            \t\t\treturn ButtonRemapDialogFragment().apply {\n          \n          \n            \n            \t\t\t\targuments = Bundle().apply {\n          \n          \n            \n            \t\t\t\t\tputString(ARG_KEY, key)\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878520", "createdAt": "2020-05-30T18:54:30Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.content.Context\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import android.widget.TextView\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+import java.util.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var mDialogTitle: CharSequence? = null\n+\tprivate var mDialogMessage: CharSequence? = null\n+\tprivate var mKeyCode: Int = 0\n+\tprivate var mOriginalKeyCode: Int = 0\n+\tprivate var mIgnoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT)\n+\tprivate var mCheckKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (mIgnoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tmKeyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = mKeyCode != mOriginalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tval preference = preference\n+\t\t\tmDialogTitle = preference.dialogTitle\n+\t\t\tmDialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tmDialogTitle = preference.getDialogTitle()\n+\t\t\t\tmDialogMessage = preference.getDialogMessage()\n+\t\t\t\tmKeyCode = preference.getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tmDialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tmDialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tmKeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\tmOriginalKeyCode = mKeyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, mDialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, mDialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, mKeyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,\n+\t\t\t\t\t\t\t  savedInstanceState: Bundle?): View? {\n+\t\tval theme = R.style.PreferenceThemeOverlayLeanback\n+\t\tval styledContext: Context = ContextThemeWrapper(activity, theme)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\tval view: View = styledInflater.inflate(R.layout.button_remap_preference,\n+\t\t\tcontainer, false)\n+\t\treturn view\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(mDialogTitle)) {\n+\t\t\tdecor_title.text = mDialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(mDialogMessage)) {\n+\t\t\tmessage.visibility = View.VISIBLE\n+\t\t\tmessage.text = mDialogMessage\n+\t\t}\n+\n+\t\tbuttonSave.setOnClickListener { _ ->\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonSave.isEnabled = false\n+\t\tbuttonSave.setOnKeyListener(mCheckKeys)\n+\n+\t\tbuttonReset.setOnClickListener { _ ->\n+\t\t\t// TODO: refactor this once the new preference workflow is here\n+\t\t\twhen (preference.key) {\n+\t\t\t\t\"audio_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK\n+\t\t\t\t\"subtitle_language_button_keycode\" -> mKeyCode = KeyEvent.KEYCODE_CAPTIONS\n+\t\t\t}\n+\n+\t\t\tsetKeyCodeText()\n+\t\t\t(preference as ButtonRemapPreference).setKeyCode(mKeyCode)\n+\t\t\tparentFragmentManager.popBackStack()\n+\t\t}\n+\t\tbuttonReset.setOnKeyListener(mCheckKeys)\n+\t\tbuttonReset.requestFocus()\n+\n+\t\tsetKeyCodeText()\n+\t}\n+\n+\tprivate fun setKeyCodeText() {\n+\t\ttextViewKeyCode.text = ButtonRemapSummaryProvider.instance!!.provideSummary(mKeyCode)\n+\t}\n+\n+\tcompanion object {\n+\t\tprivate const val SAVE_STATE_TITLE = \"ButtonRemapDialog.title\"\n+\t\tprivate const val SAVE_STATE_MESSAGE = \"ButtonRemapDialog.message\"\n+\t\tprivate const val SAVE_STATE_KEYCODE = \"ButtonRemapDialog.keycode\"\n+\n+\t\t/**\n+\t\t * Creates a new ButtonRemapDialogFragment instance.\n+\t\t *\n+\t\t * @param key the preference key\n+\t\t * @return the new ButtonRemapDialogFragment instance\n+\t\t */\n+\t\tfun newInstance(key: String?): ButtonRemapDialogFragment {\n+\t\t\tval args = Bundle(1)\n+\t\t\targs.putString(ARG_KEY, key)\n+\t\t\tval fragment = ButtonRemapDialogFragment()\n+\t\t\tfragment.arguments = args\n+\t\t\treturn fragment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODYzNQ==", "bodyText": "Make this an inner class (add it inside the ButtonRemapPreference class)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n          \n          \n            \n            private class ButtonRemapSummaryProvider() : SummaryProvider<ButtonRemapPreference> {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878635", "createdAt": "2020-05-30T18:55:48Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3ODY3Mg==", "bodyText": "Don't use a singleton for this", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r432878672", "createdAt": "2020-05-30T18:56:29Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray?, index: Int): Any {\n+\t\treturn a!!.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+}\n+\n+class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\treturn provideSummary(preference.getKeyCode())\n+\t}\n+\n+\tfun provideSummary(keyCode: Int): CharSequence {\n+\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t} else {\n+\t\t\tkeyCodeString = \"Unknown ($keyCodeString)\"\n+\t\t}\n+\t\treturn keyCodeString\n+\t}\n+\n+\tcompanion object {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a76e555a3a15695e58202759da7c74cbc5231d"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90744726121d9a35983e8a787fedea90edf8698d", "author": {"user": {"login": "Froghut", "name": null}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/90744726121d9a35983e8a787fedea90edf8698d", "committedDate": "2020-05-31T16:20:53Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Niels van Velzen <nielsvanvelzen@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d59dc5fd2bbb38fba0e76e6bb0ce92ecb05dcded", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d59dc5fd2bbb38fba0e76e6bb0ce92ecb05dcded", "committedDate": "2020-05-31T16:35:55Z", "message": "fix variable names, use proper naming conventions\nimprove naming of preference keys + texts\nconvert strings to resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/de6fbf32a51307aaa061939c770913d298de53bd", "committedDate": "2020-05-31T16:39:52Z", "message": "make SummaryProvider usable from the dialog again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODUzMDIw", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#pullrequestreview-421853020", "createdAt": "2020-06-01T13:43:37Z", "commit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzo0MzozN1rOGdK92w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzo1MzoxNlrOGdLSuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTU2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tfun setKeyCode(mKeyCode: Int) {\n          \n          \n            \n            \tfun setKeyCode(keyCode: Int) {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433241563", "createdAt": "2020-06-01T13:43:37Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTkxNA==", "bodyText": "a is really ambiguous, should be called something more clear", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433241914", "createdAt": "2020-06-01T13:44:17Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MjA1NA==", "bodyText": "Move the init block to the top of the class", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433242054", "createdAt": "2020-06-01T13:44:32Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MzQyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n          \n          \n            \n            \t\t\t\tkeyCodeString = keyCodeString\n          \n          \n            \n            \t\t\t\t\t.removePrefix(\"KEYCODE_\")\n          \n          \n            \n            \t\t\t\t\t.toLowerCase()\n          \n          \n            \n            \t\t\t\t\t.capitalize()", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433243421", "createdAt": "2020-06-01T13:47:01Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MzgzNQ==", "bodyText": "Use string formatting for the code;\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tkeyCodeString = \"${context.getString(R.string.lbl_unknown_key)} ($keyCodeString)\"\n          \n          \n            \n            \t\t\t\tkeyCodeString = context.getString(R.string.lbl_unknown_key, keyCodeString)\n          \n      \n    \n    \n  \n\n(don't forget to update the string itself)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433243835", "createdAt": "2020-06-01T13:47:45Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n+\t\t\t\tkeyCodeString = keyCodeString.split(\"_\").drop(1).joinToString(\" \") { e -> e.toLowerCase(Locale.getDefault()).capitalize() }\n+\t\t\t} else {\n+\t\t\t\tkeyCodeString = \"${context.getString(R.string.lbl_unknown_key)} ($keyCodeString)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NDYxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n          \n          \n            \n            \t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {\n          \n          \n            \n            \t\t\tval keyCodeString = KeyEvent.keyCodeToString(keyCode)\n          \n          \n            \n            \t\t\treturn if (keyCodeString.startsWith(\"KEYCODE\")) {\n          \n      \n    \n    \n  \n\nRemove the keyCodeString =  parts within the if and else blocks. Remove the return statement after the else block.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433244614", "createdAt": "2020-06-01T13:49:07Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapPreference.kt", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import android.content.Context\n+import android.content.res.TypedArray\n+import android.util.AttributeSet\n+import android.view.KeyEvent\n+import androidx.preference.DialogPreference\n+import androidx.preference.Preference.SummaryProvider\n+import org.jellyfin.androidtv.R\n+import java.util.*\n+\n+class ButtonRemapPreference(\n+\tcontext: Context,\n+\tattrs: AttributeSet? = null\n+) : DialogPreference(context, attrs) {\n+\n+\t/**\n+\t * Saves a KeyCode in this preference.\n+\t *\n+\t * @param mKeyCode the KeyCode to save\n+\t */\n+\tfun setKeyCode(mKeyCode: Int) {\n+\t\tpersistInt(mKeyCode)\n+\t}\n+\n+\t/**\n+\t * Returns the saved KeyCode preference.\n+\t *\n+\t * @return the saved KeyCode\n+\t */\n+\tfun getKeyCode(): Int {\n+\t\treturn getPersistedInt(-1)\n+\t}\n+\n+\toverride fun onSetInitialValue(defaultValue: Any?) {\n+\t\tif (defaultValue != null)\n+\t\t\tpersistInt(defaultValue as Int)\n+\t}\n+\n+\toverride fun onGetDefaultValue(a: TypedArray, index: Int): Any {\n+\t\treturn a.getInt(index, -1)\n+\t}\n+\n+\tinit {\n+\t\t// Explicitly set the layout or it will crash\n+\t\tdialogLayoutResource = R.layout.button_remap_preference\n+\t\tsummaryProvider = ButtonRemapSummaryProvider.instance\n+\t}\n+\n+\tinternal class ButtonRemapSummaryProvider private constructor() : SummaryProvider<ButtonRemapPreference> {\n+\t\toverride fun provideSummary(preference: ButtonRemapPreference): CharSequence {\n+\t\t\treturn provideSummary(preference.context, preference.getKeyCode())\n+\t\t}\n+\n+\t\tfun provideSummary(context: Context, keyCode: Int): CharSequence {\n+\t\t\tvar keyCodeString = KeyEvent.keyCodeToString(keyCode)\n+\t\t\tif (keyCodeString.startsWith(\"KEYCODE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NTIxNQ==", "bodyText": "Missing a string resource", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433245215", "createdAt": "2020-06-01T13:50:12Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/layout/button_remap_preference.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:id=\"@+id/main_frame\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?android:attr/windowBackground\"\n+    android:elevation=\"@dimen/lb_preference_decor_elevation\"\n+    android:orientation=\"vertical\"\n+    android:transitionGroup=\"false\">\n+\n+    <FrameLayout\n+        android:id=\"@+id/decor_title_container\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"?attr/defaultBrandColor\"\n+        android:elevation=\"@dimen/lb_preference_decor_title_container_elevation\"\n+        android:transitionGroup=\"false\"\n+        >\n+        <TextView\n+            android:id=\"@+id/decor_title\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            style=\"?android:attr/titleTextStyle\" />\n+    </FrameLayout>\n+\n+    <TextView\n+        android:id=\"@android:id/message\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        android:visibility=\"gone\" />\n+\n+    <TextView\n+        android:id=\"@+id/textViewKeyCode\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"horizontal\"\n+\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\">\n+\n+            <Button\n+                android:id=\"@+id/buttonSave\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Save\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NTI1Ng==", "bodyText": "Missing a string resource", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433245256", "createdAt": "2020-06-01T13:50:15Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/layout/button_remap_preference.xml", "diffHunk": "@@ -0,0 +1,72 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:id=\"@+id/main_frame\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?android:attr/windowBackground\"\n+    android:elevation=\"@dimen/lb_preference_decor_elevation\"\n+    android:orientation=\"vertical\"\n+    android:transitionGroup=\"false\">\n+\n+    <FrameLayout\n+        android:id=\"@+id/decor_title_container\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:background=\"?attr/defaultBrandColor\"\n+        android:elevation=\"@dimen/lb_preference_decor_title_container_elevation\"\n+        android:transitionGroup=\"false\"\n+        >\n+        <TextView\n+            android:id=\"@+id/decor_title\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            style=\"?android:attr/titleTextStyle\" />\n+    </FrameLayout>\n+\n+    <TextView\n+        android:id=\"@android:id/message\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        android:visibility=\"gone\" />\n+\n+    <TextView\n+        android:id=\"@+id/textViewKeyCode\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        style=\"?android:attr/subtitleTextStyle\"\n+        />\n+\n+    <androidx.constraintlayout.widget.ConstraintLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"horizontal\"\n+\n+            app:layout_constraintBottom_toBottomOf=\"parent\"\n+            app:layout_constraintEnd_toEndOf=\"parent\">\n+\n+            <Button\n+                android:id=\"@+id/buttonSave\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Save\" />\n+\n+            <Button\n+                android:id=\"@+id/buttonReset\"\n+                style=\"@style/Widget.AppCompat.Button.ButtonBar.AlertDialog\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_weight=\"1\"\n+                android:text=\"Reset\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NjE1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n          \n          \n            \n            \t\t\trequireView().buttonSave.isEnabled = this.keyCode != originalKeyCode", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246158", "createdAt": "2020-06-01T13:52:00Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0Njg0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!TextUtils.isEmpty(dialogTitle)) {\n          \n          \n            \n            \t\tif (dialogTitle.isNotBlank()) {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246840", "createdAt": "2020-06-01T13:53:10Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tdialogTitle = preference.dialogTitle\n+\t\t\tdialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tdialogTitle = preference.getDialogTitle()\n+\t\t\t\tdialogMessage = preference.getDialogMessage()\n+\t\t\t\tkeyCode = (preference as ButtonRemapPreference).getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tdialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tkeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\toriginalKeyCode = keyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, dialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, dialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, keyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\n+\t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(dialogTitle)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NjkwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (!TextUtils.isEmpty(dialogMessage)) {\n          \n          \n            \n            \t\tif (dialogMessage.isNotBlank()) {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#discussion_r433246907", "createdAt": "2020-06-01T13:53:16Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/preferences/ui/ButtonRemapDialogFragment.kt", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.jellyfin.androidtv.preferences.ui\n+\n+import org.jellyfin.androidtv.R\n+import android.os.Bundle\n+import android.text.TextUtils\n+import android.view.*\n+import android.widget.Button\n+import androidx.leanback.preference.LeanbackPreferenceDialogFragmentCompat\n+import kotlinx.android.synthetic.main.button_remap_preference.*\n+\n+class ButtonRemapDialogFragment : LeanbackPreferenceDialogFragmentCompat() {\n+\tprivate var dialogTitle: CharSequence? = null\n+\tprivate var dialogMessage: CharSequence? = null\n+\tprivate var keyCode: Int = 0\n+\tprivate var originalKeyCode: Int = 0\n+\tprivate var ignoreKeys = listOf(\n+\t\t\tKeyEvent.KEYCODE_BACK,\n+\t\t\tKeyEvent.KEYCODE_HOME,\n+\t\t\tKeyEvent.KEYCODE_APP_SWITCH,\n+\t\t\tKeyEvent.KEYCODE_DPAD_CENTER,\n+\t\t\tKeyEvent.KEYCODE_DPAD_UP,\n+\t\t\tKeyEvent.KEYCODE_DPAD_DOWN,\n+\t\t\tKeyEvent.KEYCODE_DPAD_LEFT,\n+\t\t\tKeyEvent.KEYCODE_DPAD_RIGHT,\n+\t\t\tKeyEvent.KEYCODE_ENTER\n+\t\t)\n+\tprivate var checkKeys: View.OnKeyListener = View.OnKeyListener { _, keyCode, _ ->\n+\t\t// ignore navigation buttons\n+\t\tif (ignoreKeys.contains(keyCode))\n+\t\t\tfalse\n+\t\telse {\n+\t\t\tthis.keyCode = keyCode\n+\t\t\tsetKeyCodeText()\n+\t\t\trequireView().findViewById<Button>(R.id.buttonSave).isEnabled = this.keyCode != originalKeyCode\n+\t\t\ttrue\n+\t\t}\n+\t}\n+\n+\toverride fun onCreate(savedInstanceState: Bundle?) {\n+\t\tsuper.onCreate(savedInstanceState)\n+\t\tif (savedInstanceState == null) {\n+\t\t\tdialogTitle = preference.dialogTitle\n+\t\t\tdialogMessage = preference.dialogMessage\n+\t\t\tif (preference is ButtonRemapPreference) {\n+\t\t\t\tdialogTitle = preference.getDialogTitle()\n+\t\t\t\tdialogMessage = preference.getDialogMessage()\n+\t\t\t\tkeyCode = (preference as ButtonRemapPreference).getKeyCode()\n+\t\t\t} else {\n+\t\t\t\tthrow IllegalArgumentException(\"Preference must be a ButtonRemapPreference\")\n+\t\t\t}\n+\t\t} else {\n+\t\t\tdialogTitle = savedInstanceState.getCharSequence(SAVE_STATE_TITLE)\n+\t\t\tdialogMessage = savedInstanceState.getCharSequence(SAVE_STATE_MESSAGE)\n+\t\t\tkeyCode = savedInstanceState.getInt(SAVE_STATE_KEYCODE)\n+\t\t}\n+\t\toriginalKeyCode = keyCode\n+\t}\n+\n+\toverride fun onSaveInstanceState(outState: Bundle) {\n+\t\tsuper.onSaveInstanceState(outState)\n+\t\toutState.putCharSequence(SAVE_STATE_TITLE, dialogTitle)\n+\t\toutState.putCharSequence(SAVE_STATE_MESSAGE, dialogMessage)\n+\t\toutState.putInt(SAVE_STATE_KEYCODE, keyCode)\n+\t}\n+\n+\toverride fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\n+\t\tval styledContext = ContextThemeWrapper(activity, R.style.PreferenceThemeOverlayLeanback)\n+\t\tval styledInflater = inflater.cloneInContext(styledContext)\n+\t\treturn styledInflater.inflate(R.layout.button_remap_preference, container, false)\n+\t}\n+\n+\toverride fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+\t\tsuper.onViewCreated(view, savedInstanceState)\n+\t\tif (!TextUtils.isEmpty(dialogTitle)) {\n+\t\t\tdecor_title.text = dialogTitle\n+\t\t}\n+\t\tif (!TextUtils.isEmpty(dialogMessage)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de6fbf32a51307aaa061939c770913d298de53bd"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3383f9bd4809b5957521dda55161ea68301299b3", "author": {"user": {"login": "Froghut", "name": null}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/3383f9bd4809b5957521dda55161ea68301299b3", "committedDate": "2020-06-01T14:19:23Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Niels van Velzen <nielsvanvelzen@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ecc55e4b28ff58909eb7aa7e288c56956d7a6bf", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/1ecc55e4b28ff58909eb7aa7e288c56956d7a6bf", "committedDate": "2020-06-01T14:37:23Z", "message": "make more strings use resources\ncode cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95c9faee1b465269dc586fe6c4f5580cd75c4be2", "author": {"user": null}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/95c9faee1b465269dc586fe6c4f5580cd75c4be2", "committedDate": "2020-06-01T19:37:31Z", "message": "make ButtonRemapSummaryProvider capitalize each word again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDczMzg0", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/486#pullrequestreview-422473384", "createdAt": "2020-06-02T08:52:44Z", "commit": {"oid": "95c9faee1b465269dc586fe6c4f5580cd75c4be2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4344, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}