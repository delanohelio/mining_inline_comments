{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTA5ODAx", "number": 336, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTo0M1rODfm5_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyODozM1rODfq7-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDY5ODg1OnYy", "diffSide": "RIGHT", "path": "app/src/main/res/layout/badge_watched.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTo0M1rOFpaJWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTo0M1rOFpaJWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NDMxMg==", "bodyText": "The text alignment doesn't do anything because the view is as wide as the text", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378964312", "createdAt": "2020-02-13T16:15:43Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/layout/badge_watched.xml", "diffHunk": "@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    android:textAlignment=\"center\"\n+    tools:layout_height=\"32dp\"\n+    tools:layout_width=\"32dp\">\n+\n+    <ImageView\n+        android:id=\"@+id/badge_background\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:src=\"@drawable/circle_accent\"\n+        android:visibility=\"gone\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintLeft_toLeftOf=\"parent\"\n+        app:layout_constraintRight_toRightOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        tools:visibility=\"visible\"/>\n+\n+    <TextView\n+        android:id=\"@+id/badge_counter\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:foregroundGravity=\"center\"\n+        android:gravity=\"center\"\n+        android:textAlignment=\"center\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDY5OTk0OnYy", "diffSide": "RIGHT", "path": "app/src/main/res/layout/badge_watched.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTo1N1rOFpaJ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNTo1N1rOFpaJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NDQ3Nw==", "bodyText": "Doesn't do much", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378964477", "createdAt": "2020-02-13T16:15:57Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/layout/badge_watched.xml", "diffHunk": "@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n+    android:textAlignment=\"center\"\n+    tools:layout_height=\"32dp\"\n+    tools:layout_width=\"32dp\">\n+\n+    <ImageView\n+        android:id=\"@+id/badge_background\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:src=\"@drawable/circle_accent\"\n+        android:visibility=\"gone\"\n+        app:layout_constraintBottom_toBottomOf=\"parent\"\n+        app:layout_constraintLeft_toLeftOf=\"parent\"\n+        app:layout_constraintRight_toRightOf=\"parent\"\n+        app:layout_constraintTop_toTopOf=\"parent\"\n+        tools:visibility=\"visible\"/>\n+\n+    <TextView\n+        android:id=\"@+id/badge_counter\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:foregroundGravity=\"center\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcwMzMwOnYy", "diffSide": "RIGHT", "path": "app/src/main/res/layout/badge_watched.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNjo1MlrOFpaMHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxNjo1MlrOFpaMHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NTAyMA==", "bodyText": "Because everything is literally stacked on top of each other it might be better to use a FrameLayout. Makes rendering a bit faster too.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378965020", "createdAt": "2020-02-13T16:16:52Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/res/layout/badge_watched.xml", "diffHunk": "@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcwODM2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxODowN1rOFpaPPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxODowN1rOFpaPPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NTgyMQ==", "bodyText": "This function accepts a nullable but when called always supplies a non-null item.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378965821", "createdAt": "2020-02-13T16:18:07Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import androidx.constraintlayout.widget.ConstraintLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+class WatchedBadge(context: Context) : ConstraintLayout(context) {\n+\tprivate var item: PlayableItem? = null\n+\n+\tprivate val changeListener: () -> Unit = {\n+\t\tsetItemData(item)\n+\t}\n+\n+\tinit {\n+\t\tval inflater = LayoutInflater.from(context)\n+\t\tinflater.inflate(R.layout.badge_watched, this)\n+\t}\n+\n+\tconstructor(context: Context, item: PlayableItem) : this(context) {\n+\t\tthis.item = item\n+\t\tsetItemData(item)\n+\t}\n+\n+\tfun setWatched() {\n+\t\tbadge_background.visibility = View.VISIBLE\n+\t\tbadge_watched_tick.visibility = View.VISIBLE\n+\t\tbadge_counter.visibility = View.GONE\n+\t}\n+\n+\tfun setRemainingCount(count: Int) {\n+\t\tbadge_background.visibility = View.VISIBLE\n+\t\tbadge_watched_tick.visibility = View.GONE\n+\t\tbadge_counter.visibility = View.VISIBLE\n+\t\tbadge_counter.text = count.toString()\n+\t}\n+\n+\tfun clear() {\n+\t\tbadge_background.visibility = View.GONE\n+\t\tbadge_watched_tick.visibility = View.GONE\n+\t\tbadge_counter.visibility = View.GONE\n+\t}\n+\n+\tprivate fun setItemData(item: PlayableItem?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDcxNDY0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxOTo0OVrOFpaTOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo0NzozOFrOFpdgBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Njg0MQ==", "bodyText": "Might be a bit late but i'd swap the parameter so you specify the location first and the content second", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378966841", "createdAt": "2020-02-13T16:19:49Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -42,6 +44,9 @@ class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClic\n \t\t\tisFocusableInTouchMode = true\n \t\t\tsetMainImageDimensions(100.dp, 150.dp)\n \t\t\tmainImageDrawable = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\t\tif (baseItem is PlayableItem)\n+\t\t\t\tsetBadge(WatchedBadge(context, baseItem), MultiBadgeImageCardView.BadgeLocation.TOP_RIGHT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MzU3Ng==", "bodyText": "I think the current order is more \"readable\", like set badge watched badge to the top right, but that isn't a strong preference.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r378973576", "createdAt": "2020-02-13T16:30:07Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -42,6 +44,9 @@ class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClic\n \t\t\tisFocusableInTouchMode = true\n \t\t\tsetMainImageDimensions(100.dp, 150.dp)\n \t\t\tmainImageDrawable = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\t\tif (baseItem is PlayableItem)\n+\t\t\t\tsetBadge(WatchedBadge(context, baseItem), MultiBadgeImageCardView.BadgeLocation.TOP_RIGHT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Njg0MQ=="}, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAxOTI3MA==", "bodyText": "It's funny because I think it's more readable if you say \"At the top right, I want to show the watched badge\". It's not a big issue so you can leave it.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379019270", "createdAt": "2020-02-13T17:47:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -42,6 +44,9 @@ class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClic\n \t\t\tisFocusableInTouchMode = true\n \t\t\tsetMainImageDimensions(100.dp, 150.dp)\n \t\t\tmainImageDrawable = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\t\tif (baseItem is PlayableItem)\n+\t\t\t\tsetBadge(WatchedBadge(context, baseItem), MultiBadgeImageCardView.BadgeLocation.TOP_RIGHT)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2Njg0MQ=="}, "originalCommit": {"oid": "5b66041fb29119356b093e304e4ee174e66810dc"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTA1MDEyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo1MTozNlrOFpdoMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo1MTozNlrOFpdoMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAyMTM2Mg==", "bodyText": "If you specify the primary constructor as (context: Context, private var item: PlayableItem? = null) it will be a class property with a value of null by default.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379021362", "createdAt": "2020-02-13T17:51:36Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+class WatchedBadge(context: Context) : FrameLayout(context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f552ecb412adef166bbbaa20a46da52c95a76a04"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTA1MTE1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo1MTo1MVrOFpdozA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo1MTo1MVrOFpdozA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAyMTUxNg==", "bodyText": "item?.let(::setItemData)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379021516", "createdAt": "2020-02-13T17:51:51Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+class WatchedBadge(context: Context) : FrameLayout(context) {\n+\tprivate var item: PlayableItem? = null\n+\n+\tprivate val changeListener: () -> Unit = {\n+\t\tif (item != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f552ecb412adef166bbbaa20a46da52c95a76a04"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTA1NDU5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo1Mjo1OVrOFpdrFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyODo1MlrOFpezfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAyMjEwMw==", "bodyText": "You can add a line here like item?.let(::setItemData) to update if you go for the primary constructor change. Could remove the secondary constructor entirely in that case.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379022103", "createdAt": "2020-02-13T17:52:59Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+class WatchedBadge(context: Context) : FrameLayout(context) {\n+\tprivate var item: PlayableItem? = null\n+\n+\tprivate val changeListener: () -> Unit = {\n+\t\tif (item != null) {\n+\t\t\tsetItemData(item!!)\n+\t\t}\n+\t}\n+\n+\tinit {\n+\t\tval inflater = LayoutInflater.from(context)\n+\t\tinflater.inflate(R.layout.badge_watched, this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f552ecb412adef166bbbaa20a46da52c95a76a04"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MDYzNw==", "bodyText": "We still need one which takes only context as tools allegedly require them, but flipping them is a good idea.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379040637", "createdAt": "2020-02-13T18:28:52Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+class WatchedBadge(context: Context) : FrameLayout(context) {\n+\tprivate var item: PlayableItem? = null\n+\n+\tprivate val changeListener: () -> Unit = {\n+\t\tif (item != null) {\n+\t\t\tsetItemData(item!!)\n+\t\t}\n+\t}\n+\n+\tinit {\n+\t\tval inflater = LayoutInflater.from(context)\n+\t\tinflater.inflate(R.layout.badge_watched, this)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAyMjEwMw=="}, "originalCommit": {"oid": "f552ecb412adef166bbbaa20a46da52c95a76a04"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM1NDQ2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/FavoriteBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyNzoxMlrOFpgqxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyNzoxMlrOFpgqxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MTE3NA==", "bodyText": "This constructor shouldn't be necessary because  the item parameter has a default value", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379071174", "createdAt": "2020-02-13T19:27:12Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/FavoriteBadge.kt", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.View\n+import android.widget.ImageView\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+class FavoriteBadge(context: Context, val item: BaseItem? = null) : ImageView(context) {\n+\tprivate val changeListener: () -> Unit = {\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tinit {\n+\t\tsetImageDrawable(context.getDrawable(R.drawable.ic_heart_red))\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tconstructor(context: Context) : this(context, null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6372394e6ac80f347f3b78421a452370e01c0eca"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM1NTg2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyNzozN1rOFpgrmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyNzozN1rOFpgrmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MTM4NA==", "bodyText": "This constructor shouldn't be necessary because the item parameter has a default value", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379071384", "createdAt": "2020-02-13T19:27:37Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+\n+class WatchedBadge(context: Context, val item: PlayableItem? = null) : FrameLayout(context) {\n+\tprivate val changeListener: () -> Unit = {\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tinit {\n+\t\tval inflater = LayoutInflater.from(context)\n+\t\tinflater.inflate(R.layout.badge_watched, this)\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tconstructor(context: Context) : this(context, null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6372394e6ac80f347f3b78421a452370e01c0eca"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM1OTMxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyODozM1rOFpgtww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyODozM1rOFpgtww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MTkzOQ==", "bodyText": "I don't think this would happen fast but if the count is higher than 99 we should probably display 99+ so the text won't overflow.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/336#discussion_r379071939", "createdAt": "2020-02-13T19:28:33Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/WatchedBadge.kt", "diffHunk": "@@ -0,0 +1,57 @@\n+package org.jellyfin.androidtv.ui\n+\n+import android.content.Context\n+import android.view.LayoutInflater\n+import android.view.View\n+import android.widget.FrameLayout\n+import kotlinx.android.synthetic.main.badge_watched.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.itemtypes.PlayableItem\n+\n+\n+class WatchedBadge(context: Context, val item: PlayableItem? = null) : FrameLayout(context) {\n+\tprivate val changeListener: () -> Unit = {\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tinit {\n+\t\tval inflater = LayoutInflater.from(context)\n+\t\tinflater.inflate(R.layout.badge_watched, this)\n+\t\titem?.let(::setItemData)\n+\t}\n+\n+\tconstructor(context: Context) : this(context, null)\n+\n+\tfun setWatched() {\n+\t\tbadge_background.visibility = View.VISIBLE\n+\t\tbadge_watched_tick.visibility = View.VISIBLE\n+\t\tbadge_counter.visibility = View.GONE\n+\t}\n+\n+\tfun setRemainingCount(count: Int) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6372394e6ac80f347f3b78421a452370e01c0eca"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1019, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}