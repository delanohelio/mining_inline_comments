{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDA4MDU4", "number": 616, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOTowNjoxOVrOE2cqNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Nzo1OVrOE21ShA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTI4MTE5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQwOTowNjoxOVrOHvP_Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMjowOToyOFrOHvaybA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMwNzA2Mw==", "bodyText": "Can we use playbackControlsTimeStyle here?\nhttps://cs.android.com/androidx/platform/frameworks/support/+/androidx-master-dev:leanback/leanback/src/main/res/layout/lb_playback_transport_controls_row.xml;l=113", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519307063", "createdAt": "2020-11-08T09:06:19Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -59,6 +70,67 @@\n         initActions(context);\n     }\n \n+    @Override\n+    protected PlaybackRowPresenter onCreateRowPresenter() {\n+        final AbstractDetailsDescriptionPresenter detailsPresenter =\n+                new AbstractDetailsDescriptionPresenter() {\n+                    @Override\n+                    protected void onBindDescription(ViewHolder\n+                                                             viewHolder, Object obj) {\n+                        PlaybackTransportControlGlue glue = (PlaybackTransportControlGlue) obj;\n+                        viewHolder.getTitle().setText(glue.getTitle());\n+                        viewHolder.getSubtitle().setText(glue.getSubtitle());\n+                    }\n+                };\n+\n+        PlaybackTransportRowPresenter rowPresenter = new PlaybackTransportRowPresenter() {\n+            @Override\n+            protected RowPresenter.ViewHolder createRowViewHolder(ViewGroup parent) {\n+                RowPresenter.ViewHolder vh = super.createRowViewHolder(parent);\n+                Context context = getContext();\n+\n+                if (context != null) {\n+                    mEndsText = new TextView(context);\n+                    mEndsText.setTextAppearance(context, R.style.PlaybackControlsText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a964d53225e7669772303de4428c567f8c4d39"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ4NDAxMg==", "bodyText": "Apparently, yes. I did not know that. Although it's not using the attr but instead the style the attr value points to.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519484012", "createdAt": "2020-11-08T22:09:28Z", "author": {"login": "MrChip53"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -59,6 +70,67 @@\n         initActions(context);\n     }\n \n+    @Override\n+    protected PlaybackRowPresenter onCreateRowPresenter() {\n+        final AbstractDetailsDescriptionPresenter detailsPresenter =\n+                new AbstractDetailsDescriptionPresenter() {\n+                    @Override\n+                    protected void onBindDescription(ViewHolder\n+                                                             viewHolder, Object obj) {\n+                        PlaybackTransportControlGlue glue = (PlaybackTransportControlGlue) obj;\n+                        viewHolder.getTitle().setText(glue.getTitle());\n+                        viewHolder.getSubtitle().setText(glue.getSubtitle());\n+                    }\n+                };\n+\n+        PlaybackTransportRowPresenter rowPresenter = new PlaybackTransportRowPresenter() {\n+            @Override\n+            protected RowPresenter.ViewHolder createRowViewHolder(ViewGroup parent) {\n+                RowPresenter.ViewHolder vh = super.createRowViewHolder(parent);\n+                Context context = getContext();\n+\n+                if (context != null) {\n+                    mEndsText = new TextView(context);\n+                    mEndsText.setTextAppearance(context, R.style.PlaybackControlsText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMwNzA2Mw=="}, "originalCommit": {"oid": "f8a964d53225e7669772303de4428c567f8c4d39"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTI5NDM1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Mzo1NlrOHv1T_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDoxNzozNVrOHwLIlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxODU4OA==", "bodyText": "I think the implementation of this method could be added to the existing updatePlayState method.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519918588", "createdAt": "2020-11-09T15:53:56Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -197,6 +273,15 @@ public void onCustomActionClicked(Action action, View view) {\n         }\n     }\n \n+    public void setEndTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3NTExMw==", "bodyText": "I was thinking to leave it as is so if we want to call it somewhere else we don't need duplicate code.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r520275113", "createdAt": "2020-11-10T04:13:44Z", "author": {"login": "MrChip53"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -197,6 +273,15 @@ public void onCustomActionClicked(Action action, View view) {\n         }\n     }\n \n+    public void setEndTime() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxODU4OA=="}, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI3NjExNg==", "bodyText": "Actually do you mean the function call or the contents of the function itself? Do we want the setEndTime function to be private? For now I will make it private and create the handler inside the Glue class so the TextView can't be modified externally.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r520276116", "createdAt": "2020-11-10T04:17:35Z", "author": {"login": "MrChip53"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -197,6 +273,15 @@ public void onCustomActionClicked(Action action, View view) {\n         }\n     }\n \n+    public void setEndTime() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxODU4OA=="}, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTMwMTgxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1NTowNVrOHv1Ykg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo1MjoyN1rOHwLrew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxOTc2Mg==", "bodyText": "These null checks are unnecessary", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519919762", "createdAt": "2020-11-09T15:55:05Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -197,6 +273,15 @@ public void onCustomActionClicked(Action action, View view) {\n         }\n     }\n \n+    public void setEndTime() {\n+        long msLeft = playerAdapter.getDuration() - playerAdapter.getCurrentPosition();\n+        Calendar ends = Calendar.getInstance();\n+        ends.setTimeInMillis(ends.getTimeInMillis() + msLeft);\n+        Context context = getContext();\n+        if (context != null && mEndsText != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NTA1MQ==", "bodyText": "mEndsText does need to be null checked as it appears the play state gets updated before we hook into the view holder function", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r520285051", "createdAt": "2020-11-10T04:52:27Z", "author": {"login": "MrChip53"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -197,6 +273,15 @@ public void onCustomActionClicked(Action action, View view) {\n         }\n     }\n \n+    public void setEndTime() {\n+        long msLeft = playerAdapter.getDuration() - playerAdapter.getCurrentPosition();\n+        Calendar ends = Calendar.getInstance();\n+        ends.setTimeInMillis(ends.getTimeInMillis() + msLeft);\n+        Context context = getContext();\n+        if (context != null && mEndsText != null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxOTc2Mg=="}, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTMwOTUwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1NjozMlrOHv1dEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1NjozMlrOHv1dEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyMDkxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                //Custom views\n          \n          \n            \n                // Injected views", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519920912", "createdAt": "2020-11-09T15:56:32Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -51,6 +62,9 @@\n     private ArrayObjectAdapter primaryActionsAdapter;\n     private ArrayObjectAdapter secondaryActionsAdapter;\n \n+    //Custom views", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTMxNjUyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Nzo1OVrOHv1hQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Nzo1OVrOHv1hQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyMTk4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Context context = getContext();\n          \n          \n            \n                            Context context = parent.getContext();\n          \n      \n    \n    \n  \n\nThat one should always be not-null", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/616#discussion_r519921986", "createdAt": "2020-11-09T15:57:59Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/ui/playback/overlay/CustomPlaybackTransportControlGlue.java", "diffHunk": "@@ -59,6 +73,68 @@\n         initActions(context);\n     }\n \n+    @Override\n+    protected PlaybackRowPresenter onCreateRowPresenter() {\n+        final AbstractDetailsDescriptionPresenter detailsPresenter =\n+                new AbstractDetailsDescriptionPresenter() {\n+                    @Override\n+                    protected void onBindDescription(ViewHolder\n+                                                             viewHolder, Object obj) {\n+                        PlaybackTransportControlGlue glue = (PlaybackTransportControlGlue) obj;\n+                        viewHolder.getTitle().setText(glue.getTitle());\n+                        viewHolder.getSubtitle().setText(glue.getSubtitle());\n+                    }\n+                };\n+\n+        PlaybackTransportRowPresenter rowPresenter = new PlaybackTransportRowPresenter() {\n+            @Override\n+            protected RowPresenter.ViewHolder createRowViewHolder(ViewGroup parent) {\n+                RowPresenter.ViewHolder vh = super.createRowViewHolder(parent);\n+                Context context = getContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69094ffe4cb56a77e51f5902009520bdfbe74519"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 982, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}