{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDM3MjQz", "number": 424, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDowOTozOFrODwtOQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1NVrODwuYKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzk5MTcxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDowOTozOFrOGD2seg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDowOTozOFrOGD2seg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTAzNA==", "bodyText": "I think we have an enum somewhere for item types that you can use.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695034", "createdAt": "2020-04-10T10:09:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzk5MjQ4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoxMDowMlrOGD2s8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoxMDowMlrOGD2s8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTE1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n          \n          \n            \n            \tGetItemsAsync(query, object : Response<ItemsResult>() {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695154", "createdAt": "2020-04-10T10:10:02Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzk5MzgzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoxMDo0N1rOGD2twg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDo1MTowMVrOGD3cig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTM2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception?) {\n          \n      \n    \n    \n  \n\nMaybe even\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception) {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695362", "createdAt": "2020-04-10T10:10:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n+\t\toverride fun onResponse(response: ItemsResult?) {\n+\t\t\tcontinuation.resume(response?.items?.map {it.liftToNewFormat() as Episode }?.toList())\n+\t\t}\n+\n+\t\toverride fun onError(exception: java.lang.Exception?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNzMzOA==", "bodyText": "There can be null as exception, I'll just drop the java.lang", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406707338", "createdAt": "2020-04-10T10:51:01Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n+\t\toverride fun onResponse(response: ItemsResult?) {\n+\t\t\tcontinuation.resume(response?.items?.map {it.liftToNewFormat() as Episode }?.toList())\n+\t\t}\n+\n+\t\toverride fun onError(exception: java.lang.Exception?) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTM2Mg=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAwNTA4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoxNjoyNFrOGD20UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoxNjoyNFrOGD20UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NzA0MA==", "bodyText": "Assuming this will display month & day too I'd suggest renaming \"year\" to \"premiere\" or something similar to avoid confusion.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406697040", "createdAt": "2020-04-10T10:16:24Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAxNTU4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyMToxNFrOGD26Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDo1NDowOVrOGD3f4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5ODU4Mw==", "bodyText": "I can't post it as code suggestion because of the deleted lines but try to use the not-null assertion operator as little as possible. Same applies for the other places you made the same change.\nitem.officialRating?.let { rating -> \n    viewHolder.officialRating.text = rating\n    viewHolder.officialRating.visibility = View.VISIBLE\n} ?: run {\n    viewHolder.officialRating.visibility = View.GONE\n}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406698583", "createdAt": "2020-04-10T10:21:14Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)\n+\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\t// rating\n+\t\tif (item is Ratable) {\n \t\t\tif (item.officialRating != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwODE5NA==", "bodyText": "Will do", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406708194", "createdAt": "2020-04-10T10:54:09Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)\n+\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\t// rating\n+\t\tif (item is Ratable) {\n \t\t\tif (item.officialRating != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5ODU4Mw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAyODY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/GoToItemAction.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyNzo0MlrOGD3B3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyNzo0MlrOGD3B3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDUwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {\n          \n          \n            \n            class GoToItemAction(private val context: Context, label: String, private val targetId: String) : Action {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700509", "createdAt": "2020-04-10T10:27:42Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/GoToItemAction.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.view.View\n+import androidx.lifecycle.MutableLiveData\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.details.DetailsActivity\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzMTg2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyOToxOFrOGD3DxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyOToxOFrOGD3DxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDk5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n          \n          \n            \n            \t\t\t\tepisode.seasonId?.let {\n          \n          \n            \n            \t\t\t\t\tGoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it)\n          \n          \n            \n            \t\t\t\t},", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700997", "createdAt": "2020-04-10T10:29:18Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzMjUxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyOTozOFrOGD3EIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyOTozOFrOGD3EIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTA4OQ==", "bodyText": "Same as the previous one, use multiple lines", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406701089", "createdAt": "2020-04-10T10:29:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzOTU1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzoxN1rOGD3IOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzoxN1rOGD3IOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjEzOQ==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702139", "createdAt": "2020-04-10T10:33:17Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzOTY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzoyMlrOGD3ITQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTowNDowOFrOGD3qRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702157", "createdAt": "2020-04-10T10:33:22Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjUxOA==", "bodyText": "Btw, why not the full cast?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702518", "createdAt": "2020-04-10T10:34:21Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzQ4Mg==", "bodyText": "That was the behaviour of the old screen, I don't have a preference on it", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406703482", "createdAt": "2020-04-10T10:37:43Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNjE4Ng==", "bodyText": "Let's just show the full cast", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406706186", "createdAt": "2020-04-10T10:46:52Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwOTY3Mw==", "bodyText": "Hm, it seems like we're not sent a cast, but I now implemented it in a way that guest stars are in one row if there are any, and remaining cast in a second one", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406709673", "createdAt": "2020-04-10T10:59:34Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcxMDg1NQ==", "bodyText": "Turns out we would be if it were implemented. Changed it to have two rows, one for Guest Stars and one for the normal cast without them.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406710855", "createdAt": "2020-04-10T11:04:08Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzOTc1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzoyN1rOGD3IXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzoyN1rOGD3IXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE3Mg==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702172", "createdAt": "2020-04-10T10:33:27Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDAzOTk2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzozMlrOGD3Ieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozMzozMlrOGD3Ieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjIwMg==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702202", "createdAt": "2020-04-10T10:33:32Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDA0NTA3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNTozNFrOGD3LKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNTozNFrOGD3LKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjg5MA==", "bodyText": "I'd rather have chapters as second row (after the details). Users already went to the season/series to open this episode so seeing other episodes isn't that important for them.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702890", "createdAt": "2020-04-10T10:35:34Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }\n+\n+\toverride suspend fun onCreateAdapters(rowSelector: ClassPresenterSelector, rowAdapter: ArrayObjectAdapter) {\n+\t\tsuper.onCreateAdapters(rowSelector, rowAdapter)\n+\n+\t\tloadAdditionalInformation()\n+\n+\t\t// Add rows\n+\t\trowAdapter.apply {\n+\t\t\tadd(detailRow)\n+\t\t\taddIfNotEmpty(moreFromThisSeason)\n+\t\t\taddIfNotEmpty(guestStars)\n+\t\t\taddIfNotEmpty(chaptersRow)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDE4MDY2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1MFrOGD4ZvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1MFrOGD4ZvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAwNA==", "bodyText": "You can use some of the ?.let magic here too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723004", "createdAt": "2020-04-10T11:47:50Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n-\t\t\t\tviewHolder.year.text = item.productionYear.toString()\n-\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n+\t\t\t\tviewHolder.premiereDate.text = item.productionYear.toString()\n+\t\t\t\tviewHolder.premiereDate.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDE4MDkwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1NVrOGD4Z2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1NVrOGD4Z2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAzMg==", "bodyText": "You can use some of the ?.let magic here too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723032", "createdAt": "2020-04-10T11:47:55Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1063, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}