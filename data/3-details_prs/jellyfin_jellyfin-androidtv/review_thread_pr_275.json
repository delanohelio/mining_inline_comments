{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NjI1OTI1", "number": 275, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToxMzoyOFrODalZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyOTo0MFrODandDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjAyMjM4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/Episode.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToxMzoyOFrOFhnrAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyMDo1OVrOFhqu7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5NzMxNA==", "bodyText": "Might be worth splitting the user specific data to a separate class. Something like \"Episode\" and \"UserEpisode\". This way we can (in the future) cache episode data in the app when switching users.\nNot necessary though", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370797314", "createdAt": "2020-01-24T19:13:28Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/Episode.kt", "diffHunk": "@@ -7,5 +7,7 @@ data class Episode (\n \t//TODO: Chapters: ArrayList<ChapterInfoDto>\n \tval communityRating: Double,\n \tval name: String,\n-\tval description: String\n+\tval description: String,\n+\tval canResume: Boolean,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyMjI4NQ==", "bodyText": "Right, we need to very much rethink the whole model though, should we do this here, via Issue or Matrix?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370822285", "createdAt": "2020-01-24T20:12:41Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/Episode.kt", "diffHunk": "@@ -7,5 +7,7 @@ data class Episode (\n \t//TODO: Chapters: ArrayList<ChapterInfoDto>\n \tval communityRating: Double,\n \tval name: String,\n-\tval description: String\n+\tval description: String,\n+\tval canResume: Boolean,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5NzMxNA=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNTA0Nw==", "bodyText": "Probably in the issue or a new PR", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370825047", "createdAt": "2020-01-24T20:20:04Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/Episode.kt", "diffHunk": "@@ -7,5 +7,7 @@ data class Episode (\n \t//TODO: Chapters: ArrayList<ChapterInfoDto>\n \tval communityRating: Double,\n \tval name: String,\n-\tval description: String\n+\tval description: String,\n+\tval canResume: Boolean,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5NzMxNA=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzQ3MA==", "bodyText": "Okay, let's move this to a new PR", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370847470", "createdAt": "2020-01-24T21:20:59Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/Episode.kt", "diffHunk": "@@ -7,5 +7,7 @@ data class Episode (\n \t//TODO: Chapters: ArrayList<ChapterInfoDto>\n \tval communityRating: Double,\n \tval name: String,\n-\tval description: String\n+\tval description: String,\n+\tval canResume: Boolean,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5NzMxNA=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjAzNjYyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToxODoxNlrOFhnzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoxNDoyMlrOFhpPEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5OTQ2Ng==", "bodyText": "val actualPlaybackPositionInMillis by lazy {\n    playbackPositionTicks / 10000 - TvApp.getApplication().resumePreroll\n}\nThe \"by\" syntax will move the setter & getter to a separate implementation. The \"lazy\" function will run the expression when the value of the property is first requested.\nThis would replace the set in the \"init\" function\nReference: https://kotlinlang.org/docs/reference/delegated-properties.html", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370799466", "createdAt": "2020-01-24T19:18:16Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyMjkyOA==", "bodyText": "Ah, nice. Done.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370822928", "createdAt": "2020-01-24T20:14:22Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5OTQ2Ng=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA0MTM2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToxOTo1MlrOFhn2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyMjoxMVrOFhpajA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMDE5Mw==", "bodyText": "override fun onClick() = GlobalScope.launch(Dispatchers.Main) {\n\tLog.i(LOG_TAG, \"Resume Clicked!\")\n\tplayItemWithID(itemID, actualPlaybackPositionInMillis, false)\n}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370800193", "createdAt": "2020-01-24T19:19:52Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long\n+\n+\tinit {\n+\t\tthis.actualPlaybackPositionInMillis = playbackPositionTicks / 10000 - TvApp.getApplication().resumePreroll\n+\t\tthis.label1 = context.getString(R.string.lbl_resume_from, TimeUtils.formatMillis(actualPlaybackPositionInMillis))\n+\t}\n+\n+\toverride fun onClick() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxODcxMA==", "bodyText": "Hmm, like this it complains that the Return Type is a Job, so it seems like we would also need to adjust the base class. Shall we do this?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370818710", "createdAt": "2020-01-24T20:03:00Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long\n+\n+\tinit {\n+\t\tthis.actualPlaybackPositionInMillis = playbackPositionTicks / 10000 - TvApp.getApplication().resumePreroll\n+\t\tthis.label1 = context.getString(R.string.lbl_resume_from, TimeUtils.formatMillis(actualPlaybackPositionInMillis))\n+\t}\n+\n+\toverride fun onClick() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMDE5Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNTI5NQ==", "bodyText": "Oh in that case we can do 2 things:\nEnd the expression with Unit (the void type of Kotlin) or don't change it.\n(I'd say just leave it for now)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370825295", "createdAt": "2020-01-24T20:20:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long\n+\n+\tinit {\n+\t\tthis.actualPlaybackPositionInMillis = playbackPositionTicks / 10000 - TvApp.getApplication().resumePreroll\n+\t\tthis.label1 = context.getString(R.string.lbl_resume_from, TimeUtils.formatMillis(actualPlaybackPositionInMillis))\n+\t}\n+\n+\toverride fun onClick() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMDE5Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNTg2OA==", "bodyText": "Okay, thanks. Will leave it.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370825868", "createdAt": "2020-01-24T20:22:11Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/ResumeAction.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.drm.DrmStore\n+import android.util.Log\n+import androidx.core.content.ContextCompat.startActivity\n+import kotlinx.android.synthetic.main.text_under_button.view.*\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.TimeUtils\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"ResumeAction\"\n+\n+class ResumeAction(context: Context, val playbackPositionTicks: Long, val itemID: String) : PlaybackAction(ActionID.RESUME.id, context) {\n+\tval actualPlaybackPositionInMillis: Long\n+\n+\tinit {\n+\t\tthis.actualPlaybackPositionInMillis = playbackPositionTicks / 10000 - TvApp.getApplication().resumePreroll\n+\t\tthis.label1 = context.getString(R.string.lbl_resume_from, TimeUtils.formatMillis(actualPlaybackPositionInMillis))\n+\t}\n+\n+\toverride fun onClick() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMDE5Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA1NjQxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlaybackAction.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToyNToxOFrOFhn_tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOToyNToxOFrOFhn_tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMjYxMw==", "bodyText": "Should probably add an extension function to PlaybackHelper for coroutines instead of callback here (just like for the API).", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370802613", "createdAt": "2020-01-24T19:25:18Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlaybackAction.kt", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.util.Log\n+import androidx.core.content.ContextCompat\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.playback.MediaManager\n+import org.jellyfin.androidtv.util.apiclient.PlaybackHelper\n+import org.jellyfin.androidtv.util.apiclient.getItem\n+import org.jellyfin.apiclient.interaction.Response\n+import org.jellyfin.apiclient.model.dto.BaseItemDto\n+import org.jellyfin.apiclient.model.dto.BaseItemType\n+\n+private const val LOG_TAG = \"PlaybackAction\"\n+\n+abstract class PlaybackAction(id: Long, context: Context) : BaseAction(id, context) {\n+\t// TODO: This is super fucked, but at least it works for now until we clean up more messes.\n+\tprotected suspend fun playItemWithID(id: String, pos: Long, shuffle: Boolean) = withContext(Dispatchers.IO) {\n+\t\tval baseItem = TvApp.getApplication().apiClient.getItem(id)\n+\t\tif (baseItem == null) {\n+\t\t\tLog.e(LOG_TAG, \"Failed to get a base item for the given ID\")\n+\t\t\treturn@withContext\n+\t\t}\n+\t\tplay(baseItem, pos, shuffle)\n+\t}\n+\n+\tprivate fun play(item: BaseItemDto, pos: Long, shuffle: Boolean) {\n+\t\tPlaybackHelper.getItemsToPlay(item, pos == 0L && item.baseItemType == BaseItemType.Movie, shuffle, object : Response<List<BaseItemDto>>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA4MTk3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlayFromBeginningAction.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozNDoyOFrOFhoQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyMjowNlrOFhpaeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNjc5NQ==", "bodyText": "Why is this called label is that a google thingy or our thingy?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370806795", "createdAt": "2020-01-24T19:34:28Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlayFromBeginningAction.kt", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.util.Log\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+\n+private const val LOG_TAG = \"PlayFromBeginningAction\"\n+\n+class PlayFromBeginningAction(context: Context, val itemID: String) : PlaybackAction(ActionID.PLAY_FROM_BEGINNING.id, context) {\n+\tinit {\n+\t    label1 = context.getString(R.string.lbl_play)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNzEwOA==", "bodyText": "That's a Google thing sadly, I dislike the name as well.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370817108", "createdAt": "2020-01-24T19:58:59Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlayFromBeginningAction.kt", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.util.Log\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+\n+private const val LOG_TAG = \"PlayFromBeginningAction\"\n+\n+class PlayFromBeginningAction(context: Context, val itemID: String) : PlaybackAction(ActionID.PLAY_FROM_BEGINNING.id, context) {\n+\tinit {\n+\t    label1 = context.getString(R.string.lbl_play)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNjc5NQ=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNTg0OQ==", "bodyText": "The should've called it \"title\" and \"subtitle\" or something. We can't do anything about it though", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370825849", "createdAt": "2020-01-24T20:22:06Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/PlayFromBeginningAction.kt", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.util.Log\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+\n+private const val LOG_TAG = \"PlayFromBeginningAction\"\n+\n+class PlayFromBeginningAction(context: Context, val itemID: String) : PlaybackAction(ActionID.PLAY_FROM_BEGINNING.id, context) {\n+\tinit {\n+\t    label1 = context.getString(R.string.lbl_play)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNjc5NQ=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA4NzIyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozNjoyOFrOFhoTYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTo1NzoyNVrOFho1sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNzY1MA==", "bodyText": "Maybe add a typecheck if it actually is a BaseAction (just to be sure)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370807650", "createdAt": "2020-01-24T19:36:28Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNjQzMg==", "bodyText": "Will do", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370816432", "createdAt": "2020-01-24T19:57:25Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNzY1MA=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA5MDM5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozNzo0MFrOFhoVag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTo1NTo0MFrOFhoydg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODE3MA==", "bodyText": "I'm now thinking it might be nicer to use \"episode\" instead of \"data\". Looks more clear when using the actual data.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370808170", "createdAt": "2020-01-24T19:37:40Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -8,9 +8,14 @@ import kotlinx.coroutines.Dispatchers\n import kotlinx.coroutines.GlobalScope\n import kotlinx.coroutines.launch\n import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.BaseAction\n+import org.jellyfin.androidtv.details.actions.PlayFromBeginningAction\n+import org.jellyfin.androidtv.details.actions.ResumeAction\n import org.jellyfin.androidtv.model.itemtypes.Episode\n import org.jellyfin.apiclient.model.dto.ImageOptions\n \n+private const val LOG_TAG = \"EpisodeDetailsFragment\"\n+\n class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNTYwNg==", "bodyText": "Will do", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370815606", "createdAt": "2020-01-24T19:55:40Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -8,9 +8,14 @@ import kotlinx.coroutines.Dispatchers\n import kotlinx.coroutines.GlobalScope\n import kotlinx.coroutines.launch\n import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.BaseAction\n+import org.jellyfin.androidtv.details.actions.PlayFromBeginningAction\n+import org.jellyfin.androidtv.details.actions.ResumeAction\n import org.jellyfin.androidtv.model.itemtypes.Episode\n import org.jellyfin.apiclient.model.dto.ImageOptions\n \n+private const val LOG_TAG = \"EpisodeDetailsFragment\"\n+\n class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODE3MA=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA5MzAzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozODo0MFrOFhoW_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyMzowN1rOFhpbyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODU3Mw==", "bodyText": "I think an ArrayObjectAdapter works better so we don't need to add the integers for ordering (just make sure everything is added in the same place)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370808573", "createdAt": "2020-01-24T19:38:40Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction\n+\t\t\t\taction.onClick()\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODcxMA==", "bodyText": "Also, using the .apply or .also function is possible here too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370808710", "createdAt": "2020-01-24T19:39:02Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction\n+\t\t\t\taction.onClick()\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODU3Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxOTQ4MA==", "bodyText": "The documentation recommended it, but for now it doesn't make much of a difference. Should I still change it to ArrayObjectAdapter?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370819480", "createdAt": "2020-01-24T20:04:59Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction\n+\t\t\t\taction.onClick()\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODU3Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNjE4Ng==", "bodyText": "I think the docs recommend it because they are expecting the actions to be added/removed from various places. But we're doing it in a single place so a normal adapter should work fine.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370826186", "createdAt": "2020-01-24T20:23:07Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction\n+\t\t\t\taction.onClick()\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODU3Mw=="}, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjA5NTM3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozOTo0MFrOFhoYZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTozOTo0MFrOFhoYZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODkzMw==", "bodyText": "Btw, I'm ignoring the hardcoded strings for now but they need to be addressed at some point", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370808933", "createdAt": "2020-01-24T19:39:40Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -33,23 +38,37 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \t\t\t// Attach your media item details presenter to the row presenter:\n \t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n \n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n+\n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tval action = it as BaseAction\n+\t\t\t\taction.onClick()\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()\n+\t\tif (data.canResume) actionsAdapter.set(0, ResumeAction(context!!, data.playbackPositionTicks, data.id))\n+\t\tactionsAdapter.set(1, PlayFromBeginningAction(context!!, data.id))\n+\t\tactionsAdapter.set(2, Action(1, \"Set Watched\"))\n+\t\tactionsAdapter.set(3, Action(1, \"Add Favorite\"))\n+\t\tactionsAdapter.set(4, Action(1, \"Add to Queue\"))\n+\t\tactionsAdapter.set(5, Action(1, \"Go to Series\"))\n+\t\tactionsAdapter.set(6, Action(1, \"Delete\"))\n+\n+\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").also {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ccded6a3602582c40227a64ac63f79e865005"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM0Nzk5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/PlaybackHelperExtensions.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyNTowOVrOFhq1OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyNTowOVrOFhq1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0OTA4MQ==", "bodyText": "Should probably move this out of the apiclient package", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370849081", "createdAt": "2020-01-24T21:25:09Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/PlaybackHelperExtensions.kt", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.jellyfin.androidtv.util.apiclient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b176e1f632438a7b37f34527df6c6eff7eca7986"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM1OTgyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMToyOTo0MFrOFhq8Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNToxM1rOFhrD_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDgzMA==", "bodyText": ".apply could be added directly after creating the instance.\nval actionsAdapter = ArrayObjectAdapter().apply{ /*code */ }", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370850830", "createdAt": "2020-01-24T21:29:40Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -24,32 +29,53 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \n \tprivate suspend fun buildDetails() {\n \n-\t\tLog.i(\"EpisodeDetailsFragment\", data.name)\n+\t\tLog.i(\"EpisodeDetailsFragment\", episode.name)\n \n-\t\tval primaryImageUrl = TvApp.getApplication().apiClient.GetImageUrl(data.id, ImageOptions())\n+\t\tval primaryImageUrl = TvApp.getApplication().apiClient.GetImageUrl(episode.id, ImageOptions())\n \t\tval primaryImageBitmap = getImageFromURL(primaryImageUrl)\n \n \t\tval selector = ClassPresenterSelector().apply {\n \t\t\t// Attach your media item details presenter to the row presenter:\n-\t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n+\t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = episode.name, subtitle = \"TODO\", body = episode.description)\n+\n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n \n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tif (it is BaseAction) {\n+\t\t\t\t\tval action = it as BaseAction\n+\t\t\t\t\taction.onClick()\n+\t\t\t\t} else {\n+\t\t\t\t\tLog.e(LOG_TAG, \"The clicked Action did not derive from BaseAction, this is unsupported!\")\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()\n+\t\tactionsAdapter.apply {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b176e1f632438a7b37f34527df6c6eff7eca7986"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mjg2MQ==", "bodyText": "Okay, will change it and remove the SparseArrayObjectAdapter", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/275#discussion_r370852861", "createdAt": "2020-01-24T21:35:13Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -24,32 +29,53 @@ class EpisodeDetailsFragment(private val data: Episode) : BaseDetailsFragment()\n \n \tprivate suspend fun buildDetails() {\n \n-\t\tLog.i(\"EpisodeDetailsFragment\", data.name)\n+\t\tLog.i(\"EpisodeDetailsFragment\", episode.name)\n \n-\t\tval primaryImageUrl = TvApp.getApplication().apiClient.GetImageUrl(data.id, ImageOptions())\n+\t\tval primaryImageUrl = TvApp.getApplication().apiClient.GetImageUrl(episode.id, ImageOptions())\n \t\tval primaryImageBitmap = getImageFromURL(primaryImageUrl)\n \n \t\tval selector = ClassPresenterSelector().apply {\n \t\t\t// Attach your media item details presenter to the row presenter:\n-\t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = data.name, subtitle = \"TODO\", body = data.description)\n+\t\t\tval detailsDescriptionPresenter = DetailsDescriptionPresenter(title = episode.name, subtitle = \"TODO\", body = episode.description)\n+\n+\t\t\tval overviewRowPresenter = FullWidthDetailsOverviewRowPresenter(\n+\t\t\t\tdetailsDescriptionPresenter,\n+\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() })\n \n+\t\t\toverviewRowPresenter.onActionClickedListener = OnActionClickedListener {\n+\t\t\t\tif (it is BaseAction) {\n+\t\t\t\t\tval action = it as BaseAction\n+\t\t\t\t\taction.onClick()\n+\t\t\t\t} else {\n+\t\t\t\t\tLog.e(LOG_TAG, \"The clicked Action did not derive from BaseAction, this is unsupported!\")\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\taddClassPresenter(DetailsOverviewRow::class.java,\n-\t\t\t\tFullWidthDetailsOverviewRowPresenter(\n-\t\t\t\t\tdetailsDescriptionPresenter,\n-\t\t\t\t\tprimaryImageBitmap?.let { DetailsOverviewLogoPresenter() }))\n+\t\t\taddClassPresenter(DetailsOverviewRow::class.java, overviewRowPresenter)\n \n \n \t\t\taddClassPresenter(ListRow::class.java, ListRowPresenter())\n \t\t}\n \t\trowsAdapter = ArrayObjectAdapter(selector)\n \n-\t\tval detailsOverview = DetailsOverviewRow(\"Media Item Details\").apply {\n-\t\t\timageDrawable = BitmapDrawable(resources, primaryImageBitmap)\n-\t\t\t// Add images and action buttons to the details view\n-\t\t\taddAction(Action(1, \"Continue from 12:10\"))\n-\t\t\taddAction(Action(2, \"Play from Beginning\"))\n+\t\tval actionsAdapter = SparseArrayObjectAdapter()\n+\t\tactionsAdapter.apply {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDgzMA=="}, "originalCommit": {"oid": "b176e1f632438a7b37f34527df6c6eff7eca7986"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1123, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}