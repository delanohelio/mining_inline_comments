{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NzI2Nzk0", "number": 397, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMjo1MFrODn1I1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1ODoyOVrODvcW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDkxNjY5OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/FirstMatchMultiExternalTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMjo1MFrOF2DbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzoyMjo1MFrOF2DbZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIyMzU4OA==", "bodyText": "This name is looooong", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r392223588", "createdAt": "2020-03-13T13:22:50Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/FirstMatchMultiExternalTrailerLifter.kt", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.jellyfin.androidtv.model.trailers.lifter\n+\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.util.*\n+\n+class FirstMatchMultiExternalTrailerLifter : ExternalTrailerLifter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2553c16bd3a3b642278e1f0cbbf7d71174f70cc0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzkyMTQ2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMToxNlrOF-mA1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMToxNlrOF-mA1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3ODgzOA==", "bodyText": "When a class (or function for that matter) gets multiple parameters the code might look a bit messy. A way to prevent this is by putting each parameter on it's own line:\nclass YouTubeTrailerPresenter(\n\tprivate val context: Context,\n\tprivate val imageHeight: Int,\n\tprivate val safeBrandingCompliance: Boolean\n) : Presenter(), IItemClickListener {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401178838", "createdAt": "2020-03-31T20:01:16Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.util.Log\n+import android.view.ViewGroup\n+import android.widget.ImageView\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import com.bumptech.glide.Glide\n+import com.bumptech.glide.load.resource.drawable.GlideDrawable\n+import com.bumptech.glide.request.RequestListener\n+import com.bumptech.glide.request.target.Target\n+import kotlinx.android.synthetic.main.multi_badge_image_card_view.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.YouTubeTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+class YouTubeTrailerPresenter(private val context: Context, private val imageHeight: Int, private val safeBrandingCompliance: Boolean) : Presenter(), IItemClickListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzkyODIyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMzoxNVrOF-mFEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMzoxNVrOF-mFEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3OTkyMg==", "bodyText": "IIRC you can use .get() instead of the listener when using a coroutine (GlobalScope.launch thingy...) If you want to catch the errors just use try {} catch {}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401179922", "createdAt": "2020-03-31T20:03:15Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "diffHunk": "@@ -30,11 +39,29 @@ class YouTubeTrailerPresenter(private val context: Context, private val imageHei\n \t\t\tcontentText = context.getString(R.string.brand_youtube)\n \t\t}\n \n-\t\t// TODO: Kick off loading of thumbnail here\n-\t}\n+\t\tif (!safeBrandingCompliance) {\n+\t\t\tGlide.with(context).load(trailer.thumbnailURL).listener(object : RequestListener<String, GlideDrawable> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk0MjU4OnYy", "diffSide": "RIGHT", "path": "app/src/test/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeLifterUnsupportedURLsTest.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNzowNlrOF-mNuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowNzowNlrOF-mNuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MjEzNw==", "bodyText": "Formatting looks weird for this whole statement", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401182137", "createdAt": "2020-03-31T20:07:06Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/test/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeLifterUnsupportedURLsTest.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.jellyfin.androidtv.model.trailers.lifter\n+\n+import org.jellyfin.apiclient.model.entities.MediaUrl\n+import org.junit.Assert\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.junit.runners.Parameterized\n+\n+\n+@RunWith(Parameterized::class)\n+class YouTubeLifterUnsupportedURLsTest(private val testURL: String) {\n+\tprivate val lifter = YouTubeExternalTrailerLifter()\n+\n+\t@Test\n+\tfun shouldIgnore() {\n+\t\tAssert.assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk0NzQwOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowODoyN1rOF-mQyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMToyOTo1NlrOGAt5kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MjkyMQ==", "bodyText": "I'm not really sure what this regex does, strip subdomains?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401182921", "createdAt": "2020-03-31T20:08:27Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NDU2OA==", "bodyText": "That was the idea. Should I write test cases for it as well?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401264568", "createdAt": "2020-03-31T23:02:12Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MjkyMQ=="}, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNzY4Nw==", "bodyText": "You can probably do it without the regex", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401417687", "createdAt": "2020-04-01T07:46:18Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MjkyMQ=="}, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwNTIwMw==", "bodyText": "Got rid of it", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r403405203", "createdAt": "2020-04-04T01:29:56Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MjkyMQ=="}, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk0OTQ2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowOTowMlrOF-mR_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0ODowNFrOF-0pVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MzIzMA==", "bodyText": "I've once read that the URI class is preferred above URL because URL will make DNS queries but I can't find a proper source for it right now.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401183230", "createdAt": "2020-03-31T20:09:02Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")\n \n-\tprotected fun getDomain(uri: Uri): String? = uri.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }\n+\tprotected fun getDomain(url: URL): String? {\n+\t\treturn url.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1OTM2Mw==", "bodyText": "That would be really unexpected, but idk. Maybe I should try to wireshark the emulator.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401259363", "createdAt": "2020-03-31T22:47:04Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")\n \n-\tprotected fun getDomain(uri: Uri): String? = uri.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }\n+\tprotected fun getDomain(url: URL): String? {\n+\t\treturn url.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MzIzMA=="}, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxODU4MQ==", "bodyText": "Using the Android URI class will give you some additional methods like getting a query parameter too (to replace the v=xxx regex):\nhttps://developer.android.com/reference/android/net/Uri", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401418581", "createdAt": "2020-04-01T07:48:04Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/ExternalTrailerLifter.kt", "diffHunk": "@@ -1,15 +1,28 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n \n abstract class ExternalTrailerLifter {\n \tprivate val domainRegex = Regex(\"\"\"^(.*\\.|)(.+\\...+)$\"\"\")\n \n-\tprotected fun getDomain(uri: Uri): String? = uri.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }\n+\tprotected fun getDomain(url: URL): String? {\n+\t\treturn url.host?.let { host -> domainRegex.find(host)?.groups?.get(2)?.value }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4MzIzMA=="}, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk1ODgxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeExternalTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMTozOVrOF-mXuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMTozOVrOF-mXuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NDY5Nw==", "bodyText": "An YouTube id is always 11 characters so you can make the regex more strict", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401184697", "createdAt": "2020-03-31T20:11:39Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeExternalTrailerLifter.kt", "diffHunk": "@@ -1,21 +1,58 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n+import android.util.Log\n import org.jellyfin.androidtv.model.trailers.external.YouTubeTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.URL\n \n class YouTubeExternalTrailerLifter : ExternalTrailerLifter() {\n+\tprivate val LOG_TAG = \"YouTubeLifter\"\n+\n \tprivate val youtubeDomains = arrayListOf(\"youtube.com\", \"youtu.be\")\n \n-\tprivate fun isYoutubeUrl(uri: Uri) = youtubeDomains.contains(getDomain(uri))\n-\tprivate fun isYoutubeUrl(url: MediaUrl) = isYoutubeUrl(Uri.parse(url.url))\n+\tprivate fun isYoutubeUrl(url: URL) = youtubeDomains.contains(getDomain(url))\n+\n+\tprivate val videoParameterRegex = Regex(\"v=([a-zA-Z0-9]+)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk2MDk4OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeExternalTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMjoxNVrOF-mZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMjoxNVrOF-mZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTAyOA==", "bodyText": "I'd say use the last 11 characters from the path in the case a url looks like youtu.be/sample/[id]", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r401185028", "createdAt": "2020-03-31T20:12:15Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/YouTubeExternalTrailerLifter.kt", "diffHunk": "@@ -1,21 +1,58 @@\n package org.jellyfin.androidtv.model.trailers.lifter\n \n-import android.net.Uri\n+import android.util.Log\n import org.jellyfin.androidtv.model.trailers.external.YouTubeTrailer\n import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.URL\n \n class YouTubeExternalTrailerLifter : ExternalTrailerLifter() {\n+\tprivate val LOG_TAG = \"YouTubeLifter\"\n+\n \tprivate val youtubeDomains = arrayListOf(\"youtube.com\", \"youtu.be\")\n \n-\tprivate fun isYoutubeUrl(uri: Uri) = youtubeDomains.contains(getDomain(uri))\n-\tprivate fun isYoutubeUrl(url: MediaUrl) = isYoutubeUrl(Uri.parse(url.url))\n+\tprivate fun isYoutubeUrl(url: URL) = youtubeDomains.contains(getDomain(url))\n+\n+\tprivate val videoParameterRegex = Regex(\"v=([a-zA-Z0-9]+)\")\n \n \toverride fun canLift(url: MediaUrl): Boolean {\n-\t\treturn isYoutubeUrl(url)\n+\t\tval converted = mediaUrlToUrl(url)\n+\t\treturn converted != null && isYoutubeUrl(converted)\n \t}\n \n-\toverride fun lift(url: MediaUrl): YouTubeTrailer {\n-\t\treturn YouTubeTrailer(url.name, url.url, \"\")\n+\toverride fun lift(url: MediaUrl): YouTubeTrailer? {\n+\t\tif (!canLift(url)) {\n+\t\t\t Log.e(LOG_TAG, \"URL ${url.url} is not supported\")\n+\t\t\treturn null\n+\t\t}\n+\n+\t\tval convertedURL = mediaUrlToUrl(url)!!\n+\n+\t\tval videoKey = when (getDomain(convertedURL)!!) {\n+\t\t\t\"youtube.com\" -> {\n+\t\t\t\tval matchGroups = videoParameterRegex.find(convertedURL.query)?.groups\n+\t\t\t\tif (matchGroups == null || matchGroups.size != 2) {\n+\t\t\t\t\tLog.e(LOG_TAG, \"URL $convertedURL is not supported\")\n+\t\t\t\t\treturn null\n+\t\t\t\t} else {\n+\t\t\t\t\tmatchGroups[1]!!.value\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t\"youtu.be\" -> {\n+\t\t\t\tconvertedURL.path.subSequence(1, convertedURL.path.length)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7e9a6a96fd2157f964fa9fe5f930ea7f3742e4"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDY4NTk2OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/BaseTrailerLifter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0Mjo1NVrOGB29Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0Mjo1NVrOGB29Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwMjEyMg==", "bodyText": "This catch statement should probably only catch MalformedURLException. Additional logging here might be nice to have.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404602122", "createdAt": "2020-04-07T07:42:55Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/trailers/lifter/BaseTrailerLifter.kt", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.jellyfin.androidtv.model.trailers.lifter\n+\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.apiclient.model.entities.MediaUrl\n+import java.net.MalformedURLException\n+import java.net.URL\n+\n+abstract class BaseTrailerLifter {\n+\tprotected fun mediaUrlToUrl(mediaUrl: MediaUrl) = try {\n+\t\tURL(mediaUrl.url)\n+\t} catch (ex: MalformedURLException) {\n+\t\ttry {\n+\t\t\tURL(\"https://\" + mediaUrl.url)\n+\t\t} catch (ex: Exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDY5MjgxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0NDo0MlrOGB3BGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0NDo0MlrOGB3BGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwMzE2Mg==", "bodyText": "Alignment of these parameters looks off, probably because context is not on it's own line.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404603162", "createdAt": "2020-04-07T07:44:42Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.view.ViewGroup\n+import androidx.appcompat.view.ContextThemeWrapper\n+import com.bumptech.glide.Glide\n+import kotlinx.android.synthetic.main.multi_badge_image_card_view.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.trailers.external.YouTubeTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+\n+class YouTubeTrailerPresenter(private val context: Context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDY5Njc3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0NTo0OFrOGB3DgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo0NTo0OFrOGB3DgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwMzc3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride val description\n          \n          \n            \n            \t\tget() = context.getString(R.string.domain_youtube)\n          \n          \n            \n            \toverride val description = context.getString(R.string.domain_youtube)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404603777", "createdAt": "2020-04-07T07:45:48Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/YouTubeTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.view.ViewGroup\n+import androidx.appcompat.view.ContextThemeWrapper\n+import com.bumptech.glide.Glide\n+import kotlinx.android.synthetic.main.multi_badge_image_card_view.view.*\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.model.trailers.external.YouTubeTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+\n+class YouTubeTrailerPresenter(private val context: Context,\n+\t\t\t\t\t\t\t  imageHeight: Int\n+) : ExternalTrailerPresenter(context, imageHeight) {\n+\n+\toverride val description\n+\t\tget() = context.getString(R.string.domain_youtube)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDczNDk1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1NjoyNFrOGB3bsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1NjoyNFrOGB3bsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwOTk3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected open val thumbnail\n          \n          \n            \n            \t\tget() = context.getDrawable(R.drawable.tile_chapter)\n          \n          \n            \n            \tprotected open val thumbnail = context.getDrawable(R.drawable.tile_chapter)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404609970", "createdAt": "2020-04-07T07:56:24Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.view.ViewGroup\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+open class ExternalTrailerPresenter(private val context: Context, private val imageHeight: Int) : Presenter(), IItemClickListener {\n+\tprotected open val thumbnail\n+\t\tget() = context.getDrawable(R.drawable.tile_chapter)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDczNjMyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1Njo0N1rOGB3cmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1Njo0N1rOGB3cmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxMDIwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected open val description: String?\n          \n          \n            \n            \t\tget() = null\n          \n          \n            \n            \tprotected open val description: String? = null", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404610200", "createdAt": "2020-04-07T07:56:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.view.ViewGroup\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+open class ExternalTrailerPresenter(private val context: Context, private val imageHeight: Int) : Presenter(), IItemClickListener {\n+\tprotected open val thumbnail\n+\t\tget() = context.getDrawable(R.drawable.tile_chapter)\n+\n+\tprotected open val description: String?\n+\t\tget() = null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDc0MjgxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1ODoyOVrOGB3gtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxODowOVrOGB8z2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxMTI1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \toverride fun onUnbindViewHolder(viewHolder: ViewHolder) {\n          \n          \n            \n            \t\t// do nothing\n          \n          \n            \n            \t}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404611252", "createdAt": "2020-04-07T07:58:29Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.view.ViewGroup\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+open class ExternalTrailerPresenter(private val context: Context, private val imageHeight: Int) : Presenter(), IItemClickListener {\n+\tprotected open val thumbnail\n+\t\tget() = context.getDrawable(R.drawable.tile_chapter)\n+\n+\tprotected open val description: String?\n+\t\tget() = null\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(MultiBadgeImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval trailer = item as ExternalTrailer\n+\n+\t\t(viewHolder.view as MultiBadgeImageCardView).apply {\n+\t\t\tisFocusable = true\n+\t\t\tisFocusableInTouchMode = true\n+\t\t\tsetMainImageDimensions((ImageUtils.ASPECT_RATIO_16_9 * imageHeight).toInt(), imageHeight)\n+\t\t\tmainImageDrawable = thumbnail\n+\t\t\ttitleText = trailer.name\n+\t\t\tcontentText = description\n+\t\t}\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder) {\n+\t\t// do nothing\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY4OTA1OA==", "bodyText": "This has to be implemented as it is an abstract function", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404689058", "createdAt": "2020-04-07T10:02:55Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.view.ViewGroup\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+open class ExternalTrailerPresenter(private val context: Context, private val imageHeight: Int) : Presenter(), IItemClickListener {\n+\tprotected open val thumbnail\n+\t\tget() = context.getDrawable(R.drawable.tile_chapter)\n+\n+\tprotected open val description: String?\n+\t\tget() = null\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(MultiBadgeImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval trailer = item as ExternalTrailer\n+\n+\t\t(viewHolder.view as MultiBadgeImageCardView).apply {\n+\t\t\tisFocusable = true\n+\t\t\tisFocusableInTouchMode = true\n+\t\t\tsetMainImageDimensions((ImageUtils.ASPECT_RATIO_16_9 * imageHeight).toInt(), imageHeight)\n+\t\t\tmainImageDrawable = thumbnail\n+\t\t\ttitleText = trailer.name\n+\t\t\tcontentText = description\n+\t\t}\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder) {\n+\t\t// do nothing\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxMTI1Mg=="}, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5ODA3Mg==", "bodyText": "Right, I wasn't 100% sure about it", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/397#discussion_r404698072", "createdAt": "2020-04-07T10:18:09Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/trailers/ExternalTrailerPresenter.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+package org.jellyfin.androidtv.details.trailers\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.net.Uri\n+import android.view.ViewGroup\n+import android.widget.Toast\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.Presenter\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.trailers.external.ExternalTrailer\n+import org.jellyfin.androidtv.ui.MultiBadgeImageCardView\n+import org.jellyfin.androidtv.util.ImageUtils\n+\n+open class ExternalTrailerPresenter(private val context: Context, private val imageHeight: Int) : Presenter(), IItemClickListener {\n+\tprotected open val thumbnail\n+\t\tget() = context.getDrawable(R.drawable.tile_chapter)\n+\n+\tprotected open val description: String?\n+\t\tget() = null\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(MultiBadgeImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval trailer = item as ExternalTrailer\n+\n+\t\t(viewHolder.view as MultiBadgeImageCardView).apply {\n+\t\t\tisFocusable = true\n+\t\t\tisFocusableInTouchMode = true\n+\t\t\tsetMainImageDimensions((ImageUtils.ASPECT_RATIO_16_9 * imageHeight).toInt(), imageHeight)\n+\t\t\tmainImageDrawable = thumbnail\n+\t\t\ttitleText = trailer.name\n+\t\t\tcontentText = description\n+\t\t}\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder) {\n+\t\t// do nothing\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxMTI1Mg=="}, "originalCommit": {"oid": "b153f02239f74801aa23c3e1d415b7389d0b9533"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1053, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}