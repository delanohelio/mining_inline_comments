{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzM1Nzk2", "number": 321, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowMTozOVrODeOiMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMDo0NTowNVrODePH2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDIyMDAzOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ChapterInfo.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowMTozOVrOFnROEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMTowOTowOVrOFnSDaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDkxNA==", "bodyText": "Can't you get the image from the data inside ChapterInfoDto?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376720914", "createdAt": "2020-02-08T17:01:39Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ChapterInfo.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.jellyfin.androidtv.model.itemtypes\n+\n+import org.jellyfin.apiclient.model.dto.ChapterInfoDto\n+import org.jellyfin.apiclient.model.entities.ImageType\n+\n+class ChapterInfo(originalChapterInfoDto: ChapterInfoDto, val baseItem: BaseItem, index: Int) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyODIzNQ==", "bodyText": "Sadly not. A ChapterInfoDto doesn't contain the ID of the item it belongs to, and the index is also required by the server, inquiring with tag is not enough :/", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376728235", "createdAt": "2020-02-08T19:17:13Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ChapterInfo.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.jellyfin.androidtv.model.itemtypes\n+\n+import org.jellyfin.apiclient.model.dto.ChapterInfoDto\n+import org.jellyfin.apiclient.model.entities.ImageType\n+\n+class ChapterInfo(originalChapterInfoDto: ChapterInfoDto, val baseItem: BaseItem, index: Int) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDkxNA=="}, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczMzI0Mw==", "bodyText": "Oh that's unfortunate. Can't do anything about it though :(", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376733243", "createdAt": "2020-02-08T20:44:19Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ChapterInfo.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.jellyfin.androidtv.model.itemtypes\n+\n+import org.jellyfin.apiclient.model.dto.ChapterInfoDto\n+import org.jellyfin.apiclient.model.entities.ImageType\n+\n+class ChapterInfo(originalChapterInfoDto: ChapterInfoDto, val baseItem: BaseItem, index: Int) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDkxNA=="}, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDU2OA==", "bodyText": "Yeh, bummed me out as well that this old API is sabotaging us here. At least it's clean on the lifted ones", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376734568", "createdAt": "2020-02-08T21:09:09Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ChapterInfo.kt", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.jellyfin.androidtv.model.itemtypes\n+\n+import org.jellyfin.apiclient.model.dto.ChapterInfoDto\n+import org.jellyfin.apiclient.model.entities.ImageType\n+\n+class ChapterInfo(originalChapterInfoDto: ChapterInfoDto, val baseItem: BaseItem, index: Int) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMDkxNA=="}, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDIyMjQ1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowNzozM1rOFnRPUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowNzozM1rOFnRPUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMTIzMw==", "bodyText": "Add the index option as nullable to the constructor", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376721233", "createdAt": "2020-02-08T17:07:33Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "diffHunk": "@@ -15,14 +16,28 @@ class ImageCollection(original: BaseItemDto) {\n \tval backdrops = original.backdropImageTags.map { Image(original.id, ImageType.Backdrop, it) }.toList()\n \n \tclass Image(private val itemId: String, private val type: ImageType, private val tag: String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDIyMjg3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowODozMFrOFnRPhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowODozMFrOFnRPhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMTI4Nw==", "bodyText": "Just add the index here:\nif(imageIndex != null) it.index = imageIndex\nMight even be possible to do it without  the if statement (I think null is the default value)", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376721287", "createdAt": "2020-02-08T17:08:30Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "diffHunk": "@@ -15,14 +16,28 @@ class ImageCollection(original: BaseItemDto) {\n \tval backdrops = original.backdropImageTags.map { Image(original.id, ImageType.Backdrop, it) }.toList()\n \n \tclass Image(private val itemId: String, private val type: ImageType, private val tag: String) {\n+\t\tvar index = 0\n+\n \t\tval url: String by lazy {\n+\t\t\tif (type == ImageType.Chapter)\n+\t\t\t\tTvApp.getApplication().apiClient.GetImageUrl(itemId, ImageOptions().also {\n+\t\t\t\t\tit.imageType = type\n+\t\t\t\t\tit.tag = tag\n+\t\t\t\t\tit.imageIndex = index\n+\t\t\t\t})\n+\t\t\telse\n \t\t\tTvApp.getApplication().apiClient.GetImageUrl(itemId, ImageOptions().also {\n \t\t\t\tit.imageType = type\n \t\t\t\tit.tag = tag", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDIyMzA3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowODo0N1rOFnRPoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNzowODo0N1rOFnRPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcyMTMxMw==", "bodyText": "Remove this constructor in favor of the other one I mentioned", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376721313", "createdAt": "2020-02-08T17:08:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "diffHunk": "@@ -15,14 +16,28 @@ class ImageCollection(original: BaseItemDto) {\n \tval backdrops = original.backdropImageTags.map { Image(original.id, ImageType.Backdrop, it) }.toList()\n \n \tclass Image(private val itemId: String, private val type: ImageType, private val tag: String) {\n+\t\tvar index = 0\n+\n \t\tval url: String by lazy {\n+\t\t\tif (type == ImageType.Chapter)\n+\t\t\t\tTvApp.getApplication().apiClient.GetImageUrl(itemId, ImageOptions().also {\n+\t\t\t\t\tit.imageType = type\n+\t\t\t\t\tit.tag = tag\n+\t\t\t\t\tit.imageIndex = index\n+\t\t\t\t})\n+\t\t\telse\n \t\t\tTvApp.getApplication().apiClient.GetImageUrl(itemId, ImageOptions().also {\n \t\t\t\tit.imageType = type\n \t\t\t\tit.tag = tag\n \t\t\t})\n \t\t}\n \n+\t\tconstructor(itemId: String, type: ImageType, tag: String, index: Int) : this(itemId, type, tag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3723541e1cecc279eac76d21bc9bc78734f1d5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDMxNjQyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMDo0NTowNVrOFnR-VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMDo0NTowNVrOFnR-VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczMzI2OQ==", "bodyText": "You can remove the if statement as the default value if imageIndex is null", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/321#discussion_r376733269", "createdAt": "2020-02-08T20:45:05Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/ImageCollection.kt", "diffHunk": "@@ -14,15 +15,18 @@ class ImageCollection(original: BaseItemDto) {\n \tval logo = original.imageTags[ImageType.Logo]?.let { Image(original.id, ImageType.Logo, it) }\n \tval backdrops = original.backdropImageTags.map { Image(original.id, ImageType.Backdrop, it) }.toList()\n \n-\tclass Image(private val itemId: String, private val type: ImageType, private val tag: String) {\n+\tclass Image(private val itemId: String, private val type: ImageType, private val tag: String, private val index: Int? = null) {\n+\n \t\tval url: String by lazy {\n \t\t\tTvApp.getApplication().apiClient.GetImageUrl(itemId, ImageOptions().also {\n \t\t\t\tit.imageType = type\n \t\t\t\tit.tag = tag\n+\t\t\t\tif (index != null) it.imageIndex = index", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "877e28f5987a0c539c0a571de4f39ff92cd7fbe9"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1003, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}