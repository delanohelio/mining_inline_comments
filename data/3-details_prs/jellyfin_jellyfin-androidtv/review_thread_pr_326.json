{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODYwNzE5", "number": 326, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxMTo1N1rODeSqRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTo0MTozNFrODeTJIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDg5NjA1OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/LiftedItems.kt", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxMTo1N1rOFnWg4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyMzoxOVrOFnXDzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzY1MA==", "bodyText": "I'd hardcode this in the function that uses it", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376807650", "createdAt": "2020-02-09T19:11:57Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/LiftedItems.kt", "diffHunk": "@@ -2,9 +2,12 @@ package org.jellyfin.androidtv.model.itemtypes\n \n import org.jellyfin.apiclient.model.dto.BaseItemDto\n import org.jellyfin.apiclient.model.dto.BaseItemType\n+import org.jellyfin.apiclient.model.querying.ItemFields\n import java.util.*\n import kotlin.properties.Delegates\n \n+val FieldsRequiredForLift = arrayOf(ItemFields.DateCreated, ItemFields.MediaSources, ItemFields.MediaStreams, ItemFields.People)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjA3Ng==", "bodyText": "We might need this in multiple places though and it may need to be updated once we implement more item types, which is why I put it locally close to where the classes are defined.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816076", "createdAt": "2020-02-09T21:16:24Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/LiftedItems.kt", "diffHunk": "@@ -2,9 +2,12 @@ package org.jellyfin.androidtv.model.itemtypes\n \n import org.jellyfin.apiclient.model.dto.BaseItemDto\n import org.jellyfin.apiclient.model.dto.BaseItemType\n+import org.jellyfin.apiclient.model.querying.ItemFields\n import java.util.*\n import kotlin.properties.Delegates\n \n+val FieldsRequiredForLift = arrayOf(ItemFields.DateCreated, ItemFields.MediaSources, ItemFields.MediaStreams, ItemFields.People)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzY1MA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjM2NQ==", "bodyText": "Fair enough, can you change it to use the proper naming convention?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816365", "createdAt": "2020-02-09T21:20:35Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/LiftedItems.kt", "diffHunk": "@@ -2,9 +2,12 @@ package org.jellyfin.androidtv.model.itemtypes\n \n import org.jellyfin.apiclient.model.dto.BaseItemDto\n import org.jellyfin.apiclient.model.dto.BaseItemType\n+import org.jellyfin.apiclient.model.querying.ItemFields\n import java.util.*\n import kotlin.properties.Delegates\n \n+val FieldsRequiredForLift = arrayOf(ItemFields.DateCreated, ItemFields.MediaSources, ItemFields.MediaStreams, ItemFields.People)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzY1MA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjU4OA==", "bodyText": "Sure, will do", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816588", "createdAt": "2020-02-09T21:23:19Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/model/itemtypes/LiftedItems.kt", "diffHunk": "@@ -2,9 +2,12 @@ package org.jellyfin.androidtv.model.itemtypes\n \n import org.jellyfin.apiclient.model.dto.BaseItemDto\n import org.jellyfin.apiclient.model.dto.BaseItemType\n+import org.jellyfin.apiclient.model.querying.ItemFields\n import java.util.*\n import kotlin.properties.Delegates\n \n+val FieldsRequiredForLift = arrayOf(ItemFields.DateCreated, ItemFields.MediaSources, ItemFields.MediaStreams, ItemFields.People)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzY1MA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDg5NjgyOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxMzo1MVrOFnWhRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyMjowMVrOFnXDcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzc1MA==", "bodyText": "I'd add the limit as parameter with 10 as default value\nMaybe increase it to 25 or something too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376807750", "createdAt": "2020-02-09T19:13:51Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -45,10 +48,26 @@ suspend fun ApiClient.markUnplayed(itemId: String, userId: String) : UserItemDat\n \t})\n }\n \n-\n suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFavorite: Boolean) : UserItemDataDto? = suspendCoroutine { continuation ->\n \tUpdateFavoriteStatusAsync(itemId, userId, isFavorite, object : Response<UserItemDataDto>() {\n \t\toverride fun onResponse(response: UserItemDataDto?) { continuation.resume(response!!) }\n \t\toverride fun onError(exception: Exception?) { continuation.resume(null) }\n \t})\n }\n+\n+suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n+\tval query = SimilarItemsQuery()\n+\tquery.setUserId(TvApp.getApplication().currentUser.id)\n+\tquery.setId(item.id)\n+\tquery.setLimit(10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjQ5Nw==", "bodyText": "Sure, can do that", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816497", "createdAt": "2020-02-09T21:22:01Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -45,10 +48,26 @@ suspend fun ApiClient.markUnplayed(itemId: String, userId: String) : UserItemDat\n \t})\n }\n \n-\n suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFavorite: Boolean) : UserItemDataDto? = suspendCoroutine { continuation ->\n \tUpdateFavoriteStatusAsync(itemId, userId, isFavorite, object : Response<UserItemDataDto>() {\n \t\toverride fun onResponse(response: UserItemDataDto?) { continuation.resume(response!!) }\n \t\toverride fun onError(exception: Exception?) { continuation.resume(null) }\n \t})\n }\n+\n+suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n+\tval query = SimilarItemsQuery()\n+\tquery.setUserId(TvApp.getApplication().currentUser.id)\n+\tquery.setId(item.id)\n+\tquery.setLimit(10)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzc1MA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDg5NzAxOnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxNDoxOVrOFnWhXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyMjowOFrOFnXDfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzc3NA==", "bodyText": "You can use .apply or .also here", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376807774", "createdAt": "2020-02-09T19:14:19Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -45,10 +48,26 @@ suspend fun ApiClient.markUnplayed(itemId: String, userId: String) : UserItemDat\n \t})\n }\n \n-\n suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFavorite: Boolean) : UserItemDataDto? = suspendCoroutine { continuation ->\n \tUpdateFavoriteStatusAsync(itemId, userId, isFavorite, object : Response<UserItemDataDto>() {\n \t\toverride fun onResponse(response: UserItemDataDto?) { continuation.resume(response!!) }\n \t\toverride fun onError(exception: Exception?) { continuation.resume(null) }\n \t})\n }\n+\n+suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n+\tval query = SimilarItemsQuery()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjUwOQ==", "bodyText": "Will do", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816509", "createdAt": "2020-02-09T21:22:08Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -45,10 +48,26 @@ suspend fun ApiClient.markUnplayed(itemId: String, userId: String) : UserItemDat\n \t})\n }\n \n-\n suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFavorite: Boolean) : UserItemDataDto? = suspendCoroutine { continuation ->\n \tUpdateFavoriteStatusAsync(itemId, userId, isFavorite, object : Response<UserItemDataDto>() {\n \t\toverride fun onResponse(response: UserItemDataDto?) { continuation.resume(response!!) }\n \t\toverride fun onError(exception: Exception?) { continuation.resume(null) }\n \t})\n }\n+\n+suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n+\tval query = SimilarItemsQuery()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzc3NA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDg5NzM3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxNTozOFrOFnWhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMToyNjoxM1rOFnXEtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA==", "bodyText": "Maybe add an expected type to the getSimilarItems so it won't respond with data you don't need", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376807830", "createdAt": "2020-02-09T19:15:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjM5Nw==", "bodyText": "Hmm, we could use generics and then integrate the filter into the method, but I'm not sure there how we would allow multiple types to pass.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816397", "createdAt": "2020-02-09T21:20:52Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjUxOA==", "bodyText": "Doesn't the query class support setting a type?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816518", "createdAt": "2020-02-09T21:22:15Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjcxOA==", "bodyText": "I don't think so", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816718", "createdAt": "2020-02-09T21:24:42Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjcyNQ==", "bodyText": "Nope it does not support that.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816725", "createdAt": "2020-02-09T21:24:49Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjgyMw==", "bodyText": "In that case just one-line it like this:\nval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)?.filter { it is Movie }", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816823", "createdAt": "2020-02-09T21:26:13Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/MovieDetailsFragment.kt", "diffHunk": "@@ -66,6 +68,14 @@ class MovieDetailsFragment(item: Movie) : BaseDetailsFragment<Movie>(item) {\n \t\t\titem.cast.forEach(it::add)\n \t\t}\n \n+\t\tval similarItems = TvApp.getApplication().apiClient.getSimilarItems(item)\n+\t\tval similarMovies = similarItems?.filter { it is Movie }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzgzMA=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDg5Nzg3OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxOToxNjoyNlrOFnWh3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTozMToxM1rOFnXGOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzkwMQ==", "bodyText": "This doesn't do anything...", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376807901", "createdAt": "2020-02-09T19:16:26Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jellyfin.androidtv.details\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.graphics.drawable.BitmapDrawable\n+import android.view.ViewGroup\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.ImageCardView\n+import androidx.leanback.widget.Presenter\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+private const val LOG_TAG = \"ItemPosterPresenter\"\n+\n+class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClickListener {\n+\n+\toverride suspend fun onItemClicked(item: Any?) {\n+\t\trequireNotNull(item)\n+\t\tval baseItem = item as BaseItem\n+\t\tval intent = Intent(context, DetailsActivity::class.java)\n+\t\tintent.putExtra(\"id\", baseItem.id)\n+\n+\t\tcontext.startActivity(intent)\n+\t}\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(ImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval baseItem = item as BaseItem\n+\t\tval cardView = viewHolder.view as ImageCardView\n+\n+\t\tcardView.titleText = baseItem.name\n+\t\tcardView.contentText = baseItem.description\n+\t\tcardView.isFocusable = true\n+\t\tcardView.isFocusableInTouchMode = true\n+\t\tcardView.setMainImageDimensions(200, 300)\n+\t\tcardView.mainImage = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\tif (baseItem.images.primary != null) {\n+\t\t\tGlobalScope.launch(Dispatchers.Main) {\n+\t\t\t\tcardView.mainImage = BitmapDrawable(baseItem.images.primary.getBitmap(TvApp.getApplication()))\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNjQyMw==", "bodyText": "True", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376816423", "createdAt": "2020-02-09T21:21:02Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jellyfin.androidtv.details\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.graphics.drawable.BitmapDrawable\n+import android.view.ViewGroup\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.ImageCardView\n+import androidx.leanback.widget.Presenter\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+private const val LOG_TAG = \"ItemPosterPresenter\"\n+\n+class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClickListener {\n+\n+\toverride suspend fun onItemClicked(item: Any?) {\n+\t\trequireNotNull(item)\n+\t\tval baseItem = item as BaseItem\n+\t\tval intent = Intent(context, DetailsActivity::class.java)\n+\t\tintent.putExtra(\"id\", baseItem.id)\n+\n+\t\tcontext.startActivity(intent)\n+\t}\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(ImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval baseItem = item as BaseItem\n+\t\tval cardView = viewHolder.view as ImageCardView\n+\n+\t\tcardView.titleText = baseItem.name\n+\t\tcardView.contentText = baseItem.description\n+\t\tcardView.isFocusable = true\n+\t\tcardView.isFocusableInTouchMode = true\n+\t\tcardView.setMainImageDimensions(200, 300)\n+\t\tcardView.mainImage = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\tif (baseItem.images.primary != null) {\n+\t\t\tGlobalScope.launch(Dispatchers.Main) {\n+\t\t\t\tcardView.mainImage = BitmapDrawable(baseItem.images.primary.getBitmap(TvApp.getApplication()))\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder?) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzkwMQ=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNzIxMQ==", "bodyText": "I would btw like to keep it for the TODO it contains", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376817211", "createdAt": "2020-02-09T21:31:13Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/ItemPosterPresenter.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.jellyfin.androidtv.details\n+\n+import android.content.Context\n+import android.content.Intent\n+import android.graphics.drawable.BitmapDrawable\n+import android.view.ViewGroup\n+import androidx.appcompat.view.ContextThemeWrapper\n+import androidx.leanback.widget.ImageCardView\n+import androidx.leanback.widget.Presenter\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.GlobalScope\n+import kotlinx.coroutines.launch\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.base.IItemClickListener\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+private const val LOG_TAG = \"ItemPosterPresenter\"\n+\n+class ItemPosterPresenter(private val context: Context) : Presenter(), IItemClickListener {\n+\n+\toverride suspend fun onItemClicked(item: Any?) {\n+\t\trequireNotNull(item)\n+\t\tval baseItem = item as BaseItem\n+\t\tval intent = Intent(context, DetailsActivity::class.java)\n+\t\tintent.putExtra(\"id\", baseItem.id)\n+\n+\t\tcontext.startActivity(intent)\n+\t}\n+\n+\toverride fun onCreateViewHolder(parent: ViewGroup?): ViewHolder {\n+\t\treturn ViewHolder(ImageCardView(ContextThemeWrapper(parent!!.context, R.style.MarqueeImageCardViewTheme)))\n+\t}\n+\n+\toverride fun onBindViewHolder(viewHolder: ViewHolder, item: Any) {\n+\t\tval baseItem = item as BaseItem\n+\t\tval cardView = viewHolder.view as ImageCardView\n+\n+\t\tcardView.titleText = baseItem.name\n+\t\tcardView.contentText = baseItem.description\n+\t\tcardView.isFocusable = true\n+\t\tcardView.isFocusableInTouchMode = true\n+\t\tcardView.setMainImageDimensions(200, 300)\n+\t\tcardView.mainImage = TvApp.getApplication().getDrawableCompat(R.drawable.tile_port_video)\n+\n+\t\tif (baseItem.images.primary != null) {\n+\t\t\tGlobalScope.launch(Dispatchers.Main) {\n+\t\t\t\tcardView.mainImage = BitmapDrawable(baseItem.images.primary.getBitmap(TvApp.getApplication()))\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\toverride fun onUnbindViewHolder(viewHolder: ViewHolder?) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwNzkwMQ=="}, "originalCommit": {"oid": "0c715a0d196c526a9db68f48f2dd37ad01fadb48"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDk3NTA0OnYy", "diffSide": "RIGHT", "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTo0MTozNFrOFnXJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTo0NTowNlrOFnXKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODAxOA==", "bodyText": "I think this sets the value of query.limit to query.limit", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376818018", "createdAt": "2020-02-09T21:41:34Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -55,12 +55,14 @@ suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFav\n \t})\n }\n \n-suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n-\tval query = SimilarItemsQuery()\n-\tquery.setUserId(TvApp.getApplication().currentUser.id)\n-\tquery.setId(item.id)\n-\tquery.setLimit(10)\n-\tquery.fields = FieldsRequiredForLift\n+suspend fun ApiClient.getSimilarItems(item: BaseItem, limit: Int = 25): List<BaseItem>? = suspendCoroutine { continuation ->\n+\tval query = SimilarItemsQuery().apply {\n+\t\tid = item.id\n+\t\tuserId = TvApp.getApplication().currentUser.id\n+\t\tthis.limit = limit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ce36161d22727246b80103495c85f3672b622ac"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODIyNw==", "bodyText": "IntelliJ syntax highlighting highlighted the other limit, I'll check with the debugger, just to be sure", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376818227", "createdAt": "2020-02-09T21:43:56Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -55,12 +55,14 @@ suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFav\n \t})\n }\n \n-suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n-\tval query = SimilarItemsQuery()\n-\tquery.setUserId(TvApp.getApplication().currentUser.id)\n-\tquery.setId(item.id)\n-\tquery.setLimit(10)\n-\tquery.fields = FieldsRequiredForLift\n+suspend fun ApiClient.getSimilarItems(item: BaseItem, limit: Int = 25): List<BaseItem>? = suspendCoroutine { continuation ->\n+\tval query = SimilarItemsQuery().apply {\n+\t\tid = item.id\n+\t\tuserId = TvApp.getApplication().currentUser.id\n+\t\tthis.limit = limit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODAxOA=="}, "originalCommit": {"oid": "1ce36161d22727246b80103495c85f3672b622ac"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODI5Mw==", "bodyText": "Works", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/326#discussion_r376818293", "createdAt": "2020-02-09T21:45:06Z", "author": {"login": "AndreasGB"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -55,12 +55,14 @@ suspend fun ApiClient.updateFavoriteStatus(itemId: String, userId: String, isFav\n \t})\n }\n \n-suspend fun ApiClient.getSimilarItems(item: BaseItem): List<BaseItem>? = suspendCoroutine {continuation ->\n-\tval query = SimilarItemsQuery()\n-\tquery.setUserId(TvApp.getApplication().currentUser.id)\n-\tquery.setId(item.id)\n-\tquery.setLimit(10)\n-\tquery.fields = FieldsRequiredForLift\n+suspend fun ApiClient.getSimilarItems(item: BaseItem, limit: Int = 25): List<BaseItem>? = suspendCoroutine { continuation ->\n+\tval query = SimilarItemsQuery().apply {\n+\t\tid = item.id\n+\t\tuserId = TvApp.getApplication().currentUser.id\n+\t\tthis.limit = limit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODAxOA=="}, "originalCommit": {"oid": "1ce36161d22727246b80103495c85f3672b622ac"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1006, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}