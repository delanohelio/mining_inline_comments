{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDM3MjQz", "number": 424, "title": "Implementing EpisodeDetailsFragment", "bodyText": "This draft PR is created early to coordinate work on implementing the new details screens to avoid duplication of work.\nFeatures needed for this Fragment:\n\n Labellable GoToItemAction (For Go to Series and Go to Season)\n More from this Season Row\n Letting the fragment define the backdrop and primary image\n Hiding unavailable Ratings (Score and recommended viewer age)\n\nIf any of these are needed for a different Fragment as well, please tell me and I will implement them first.", "createdAt": "2020-04-09T13:52:44Z", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424", "merged": true, "mergeCommit": {"oid": "3fb9279d10c45b0d8924a37ea70645c5b5e90c65"}, "closed": true, "closedAt": "2020-04-10T12:14:30Z", "author": {"login": "AndreasGB"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV8tiUAH2gAyNDAxNDM3MjQzOmZkY2QzMTU5ZTQ0MzYzNTFkMjEwYTkxM2UxOThiMjdlNTk5M2JiOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWP3LuAFqTM5MTQwNzA5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fdcd3159e4436351d210a913e198b27e5993bb96", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/fdcd3159e4436351d210a913e198b27e5993bb96", "committedDate": "2020-04-09T13:42:32Z", "message": "Add unadapted EpisodeDetailsFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6616acc4e8cef8e9e6a7efc90e14bb54c9d15c02", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/6616acc4e8cef8e9e6a7efc90e14bb54c9d15c02", "committedDate": "2020-04-09T15:52:31Z", "message": "Make DetailsOverviewRow primary image and backdrop configurable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68d454d76580fb0b1ebf2b103bb9d52288b7db9f", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/68d454d76580fb0b1ebf2b103bb9d52288b7db9f", "committedDate": "2020-04-09T15:53:29Z", "message": "Adapt EpisodeDetailsFragment to new configurable DetailsOverviewRow\n\nThis is done in a second commit to make the other one cherrypickable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d8a00df87d69dfb8d46a1ff5c6d7660a90414f", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/87d8a00df87d69dfb8d46a1ff5c6d7660a90414f", "committedDate": "2020-04-09T16:29:51Z", "message": "Add GoToItem Action and fix crash on clicking secondary action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04aa60cdc15933c565c70b5c2fef4a8405095712", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/04aa60cdc15933c565c70b5c2fef4a8405095712", "committedDate": "2020-04-09T17:23:43Z", "message": "Refactor GoToItem Action to also accept raw IDs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e006352aca751beb6608fa321cdc73f58fdfbe2d", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/e006352aca751beb6608fa321cdc73f58fdfbe2d", "committedDate": "2020-04-09T18:18:12Z", "message": "Add parent primary and backdrops to Image Collection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a28c832600d1748a774aaff70b89c1b30e56133", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/4a28c832600d1748a774aaff70b89c1b30e56133", "committedDate": "2020-04-09T18:19:12Z", "message": "Add Series and Season Actions as well as proper images to EpisodeDetailsFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98492fbe54b982662ae3861018754d24616543c2", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/98492fbe54b982662ae3861018754d24616543c2", "committedDate": "2020-04-10T00:25:48Z", "message": "Add \"More from this Season\" + guest stars to EpisodeDetailsFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90d98ecbaa93ece327a2f0c08e2092d24e39c92", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/a90d98ecbaa93ece327a2f0c08e2092d24e39c92", "committedDate": "2020-04-10T09:36:36Z", "message": "Introduce Ratable Interface and use it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/07dadc5c8af38c9cb725ac0977aa72c5b46eb17f", "committedDate": "2020-04-10T09:42:26Z", "message": "Beautify DetailsOverviewRow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzcwNjIy", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#pullrequestreview-391370622", "createdAt": "2020-04-10T10:09:38Z", "commit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDowOTozOFrOGD2seg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNTozNFrOGD3LKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTAzNA==", "bodyText": "I think we have an enum somewhere for item types that you can use.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695034", "createdAt": "2020-04-10T10:09:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTE1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n          \n          \n            \n            \tGetItemsAsync(query, object : Response<ItemsResult>() {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695154", "createdAt": "2020-04-10T10:10:02Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NTM2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception?) {\n          \n      \n    \n    \n  \n\nMaybe even\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\toverride fun onError(exception: java.lang.Exception?) {\n          \n          \n            \n            \t\toverride fun onError(exception: Exception) {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406695362", "createdAt": "2020-04-10T10:10:47Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/util/apiclient/ApiClientExtensions.kt", "diffHunk": "@@ -110,3 +112,26 @@ suspend fun ApiClient.getLocalTrailers(item: BaseItem): List<LocalTrailer>? = su\n \t\t}\n \t})\n }\n+\n+suspend fun ApiClient.getEpisodesOfSeason(episode: Episode): List<Episode>? = if (episode.seasonId != null) getEpisodesOfSeason(episode.seasonId) else null\n+\n+private suspend fun ApiClient.getEpisodesOfSeason(seasonId: String): List<Episode>? = suspendCoroutine {\n+\tcontinuation ->\n+\tval query = StdItemQuery()\n+\tquery.parentId = seasonId\n+\tquery.includeItemTypes = arrayOf(\"Episode\")\n+\tquery.startIndex = 0\n+\tquery.fields = FIELDS_REQUIRED_FOR_LIFT\n+\tquery.userId = this.currentUserId\n+\n+\tthis.GetItemsAsync(query, object : Response<ItemsResult>() {\n+\t\toverride fun onResponse(response: ItemsResult?) {\n+\t\t\tcontinuation.resume(response?.items?.map {it.liftToNewFormat() as Episode }?.toList())\n+\t\t}\n+\n+\t\toverride fun onError(exception: java.lang.Exception?) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NzA0MA==", "bodyText": "Assuming this will display month & day too I'd suggest renaming \"year\" to \"premiere\" or something similar to avoid confusion.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406697040", "createdAt": "2020-04-10T10:16:24Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5ODU4Mw==", "bodyText": "I can't post it as code suggestion because of the deleted lines but try to use the not-null assertion operator as little as possible. Same applies for the other places you made the same change.\nitem.officialRating?.let { rating -> \n    viewHolder.officialRating.text = rating\n    viewHolder.officialRating.visibility = View.VISIBLE\n} ?: run {\n    viewHolder.officialRating.visibility = View.GONE\n}", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406698583", "createdAt": "2020-04-10T10:21:14Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n \t\t\t\tviewHolder.year.text = item.productionYear.toString()\n \t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n \t\t\t}\n+\t\t}\n \n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {\n+\t\t\t\tval format = DateFormat.getDateFormat(context)\n+\t\t\t\tviewHolder.year.text = format.format(item.premiereDate)\n+\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\t// rating\n+\t\tif (item is Ratable) {\n \t\t\tif (item.officialRating != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDUwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {\n          \n          \n            \n            class GoToItemAction(private val context: Context, label: String, private val targetId: String) : Action {", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700509", "createdAt": "2020-04-10T10:27:42Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/actions/GoToItemAction.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.jellyfin.androidtv.details.actions\n+\n+import android.content.Context\n+import android.view.View\n+import androidx.lifecycle.MutableLiveData\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.details.DetailsActivity\n+import org.jellyfin.androidtv.model.itemtypes.BaseItem\n+\n+class GoToItemAction(private val context: Context, label: String,private val targetId: String) : Action {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDk5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n          \n          \n            \n            \t\t\t\tepisode.seasonId?.let {\n          \n          \n            \n            \t\t\t\t\tGoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it)\n          \n          \n            \n            \t\t\t\t},", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406700997", "createdAt": "2020-04-10T10:29:18Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTA4OQ==", "bodyText": "Same as the previous one, use multiple lines", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406701089", "createdAt": "2020-04-10T10:29:38Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjEzOQ==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702139", "createdAt": "2020-04-10T10:33:17Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702157", "createdAt": "2020-04-10T10:33:22Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE3Mg==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702172", "createdAt": "2020-04-10T10:33:27Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjIwMg==", "bodyText": "Hardcoded string", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702202", "createdAt": "2020-04-10T10:33:32Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjUxOA==", "bodyText": "Btw, why not the full cast?", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702518", "createdAt": "2020-04-10T10:34:21Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE1Nw=="}, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjg5MA==", "bodyText": "I'd rather have chapters as second row (after the details). Users already went to the season/series to open this episode so seeing other episodes isn't that important for them.", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406702890", "createdAt": "2020-04-10T10:35:34Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/EpisodeDetailsFragment.kt", "diffHunk": "@@ -0,0 +1,78 @@\n+package org.jellyfin.androidtv.details\n+\n+import androidx.leanback.widget.ArrayObjectAdapter\n+import androidx.leanback.widget.ClassPresenterSelector\n+import androidx.lifecycle.MutableLiveData\n+import kotlinx.coroutines.Dispatchers\n+import kotlinx.coroutines.async\n+import kotlinx.coroutines.awaitAll\n+import kotlinx.coroutines.withContext\n+import org.jellyfin.androidtv.R\n+import org.jellyfin.androidtv.TvApp\n+import org.jellyfin.androidtv.details.actions.*\n+import org.jellyfin.androidtv.model.itemtypes.Episode\n+import org.jellyfin.androidtv.presentation.InfoCardPresenter\n+import org.jellyfin.androidtv.util.ImageUtils\n+import org.jellyfin.androidtv.util.addIfNotEmpty\n+import org.jellyfin.androidtv.util.apiclient.getEpisodesOfSeason\n+import org.jellyfin.androidtv.util.dp\n+import org.jellyfin.apiclient.model.entities.PersonType\n+\n+class EpisodeDetailsFragment(private val episode: Episode) : BaseDetailsFragment<Episode>(episode) {\n+\t// Action definitions\n+\tprivate val actions by lazy {\n+\t\tval item = MutableLiveData(episode)\n+\n+\t\tlistOf(\n+\t\t\tResumeAction(context!!, item),\n+\t\t\tPlayFromBeginningAction(context!!, item),\n+\t\t\tToggleWatchedAction(context!!, item),\n+\t\t\tToggleFavoriteAction(context!!, item),\n+\n+\t\t\t// \"More\" button\n+\t\t\tSecondariesPopupAction(context!!, listOfNotNull(\n+\t\t\t\tepisode.seasonId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_season), it) },\n+\t\t\t\tepisode.seriesId?.let {GoToItemAction(context!!, context!!.getString(R.string.lbl_goto_series), it) },\n+\t\t\t\tDeleteAction(context!!, item) { activity?.finish() }\n+\t\t\t))\n+\t\t)\n+\t}\n+\n+\t// Row definitions\n+\tprivate val detailRow by lazy {\n+\t\tval primary = episode.images.parentPrimary ?: episode.seasonPrimaryImage ?: episode.seriesPrimaryImage ?: episode.images.primary\n+\t\tval backdrops = episode.images.parentBackdrops ?: episode.images.backdrops\n+\t\tDetailsOverviewRow(episode, actions, primary, backdrops)\n+\t}\n+\tprivate val moreFromThisSeason by lazy { createListRow(\"More from this Season\", emptyList(), ItemPresenter(context!!, (ImageUtils.ASPECT_RATIO_16_9 * 140.dp).toInt(), 140.dp, true)) }\n+\tprivate val guestStars by lazy { createListRow(\"Guest Stars\", episode.cast.filter { it.type == PersonType.GuestStar }, PersonPresenter(context!!)) }\n+\tprivate val chaptersRow by lazy { createListRow(\"Chapters\", episode.chapters, ChapterInfoPresenter(context!!)) }\n+\tprivate val streamInfoRow by lazy { createListRow(\"Media info\", episode.mediaInfo.streams, InfoCardPresenter()) }\n+\n+\toverride suspend fun onCreateAdapters(rowSelector: ClassPresenterSelector, rowAdapter: ArrayObjectAdapter) {\n+\t\tsuper.onCreateAdapters(rowSelector, rowAdapter)\n+\n+\t\tloadAdditionalInformation()\n+\n+\t\t// Add rows\n+\t\trowAdapter.apply {\n+\t\t\tadd(detailRow)\n+\t\t\taddIfNotEmpty(moreFromThisSeason)\n+\t\t\taddIfNotEmpty(guestStars)\n+\t\t\taddIfNotEmpty(chaptersRow)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07dadc5c8af38c9cb725ac0977aa72c5b46eb17f"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/f813ea50d2af40c40b91609f2468776c786164b6", "committedDate": "2020-04-10T11:05:56Z", "message": "Address Code Review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDAyMzI4", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#pullrequestreview-391402328", "createdAt": "2020-04-10T11:47:50Z", "commit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1MFrOGD4ZvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMTo0Nzo1NVrOGD4Z2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAwNA==", "bodyText": "You can use some of the ?.let magic here too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723004", "createdAt": "2020-04-10T11:47:50Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {\n-\t\t\t\tviewHolder.year.text = item.productionYear.toString()\n-\t\t\t\tviewHolder.year.visibility = View.VISIBLE\n-\t\t\t} else {\n-\t\t\t\tviewHolder.year.visibility = View.GONE\n+\t\t\t\tviewHolder.premiereDate.text = item.productionYear.toString()\n+\t\t\t\tviewHolder.premiereDate.visibility = View.VISIBLE\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (item is Episode) {\n+\t\t\tif (item.premiereDate != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyMzAzMg==", "bodyText": "You can use some of the ?.let magic here too", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#discussion_r406723032", "createdAt": "2020-04-10T11:47:55Z", "author": {"login": "nielsvanvelzen"}, "path": "app/src/main/java/org/jellyfin/androidtv/details/DetailsOverviewPresenter.kt", "diffHunk": "@@ -119,34 +122,36 @@ class DetailsOverviewPresenter : RowPresenter() {\n \t\t\tviewHolder.subtitle.visibility = View.GONE\n \t\t}\n \n-\t\t// rating\n-\t\tif (item is Movie) { //todo move those properties to baseitem or something\n+\t\tif (item is Movie) {\n \t\t\tif (item.productionYear != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f813ea50d2af40c40b91609f2468776c786164b6"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9a04e5a89d5cb6df25158ae19663588870b89db", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/d9a04e5a89d5cb6df25158ae19663588870b89db", "committedDate": "2020-04-10T11:48:27Z", "message": "Unified Cast row in EpisodeDetailsFragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3cbda9e975df090fc01cd396678edf61f051ce1", "author": {"user": {"login": "AndreasGB", "name": "Andreas"}}, "url": "https://github.com/jellyfin/jellyfin-androidtv/commit/c3cbda9e975df090fc01cd396678edf61f051ce1", "committedDate": "2020-04-10T11:59:41Z", "message": "Address code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDA3MDk5", "url": "https://github.com/jellyfin/jellyfin-androidtv/pull/424#pullrequestreview-391407099", "createdAt": "2020-04-10T12:01:16Z", "commit": {"oid": "c3cbda9e975df090fc01cd396678edf61f051ce1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4304, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}