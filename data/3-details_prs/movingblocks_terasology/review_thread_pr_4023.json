{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzIxOTEz", "number": 4023, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMzo0MjowN1rOEBlUeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMzo0MjowN1rOEBlUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDk1NDgyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/logic/SkeletonRenderer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMzo0MjowN1rOGdhCVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDoxMDoxNVrOGdhaOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwMzE1Ng==", "bodyText": "Since this is in the rendering path, the new caught my eye and I started wondering if there's a way to do this without that heap allocation.\nIf I'm reading this correctly, the projection matrix doesn't change that often, right? And even if it did change every frame, we should plan for rendering a lot more than one skeleton per frame.\nThis idea sounds a little sketchy but maybe it's worth something: add a transposedProjectionMatrix accessor to the camera. that way these things that need the transposed-version can get it without each doing their own transposition of it.", "url": "https://github.com/MovingBlocks/Terasology/pull/4023#discussion_r433603156", "createdAt": "2020-06-02T03:42:07Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/rendering/logic/SkeletonRenderer.java", "diffHunk": "@@ -248,7 +248,7 @@ public void renderOpaque() {\n             skeletalMesh.material.setFloat(\"blockLight\", 1.0f, true);\n             skeletalMesh.material.setFloat3(\"colorOffset\", skeletalMesh.color.rf(), skeletalMesh.color.gf(), skeletalMesh.color.bf(), true);\n \n-            skeletalMesh.material.setMatrix4(\"projectionMatrix\", worldRenderer.getActiveCamera().getProjectionMatrix());\n+            skeletalMesh.material.setMatrix4(\"projectionMatrix\", new org.joml.Matrix4f(worldRenderer.getActiveCamera().getProjectionMatrix()).transpose());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92f4d4d6c6d474ec6f1815579f2227db8bd9ce82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwOTI3Mg==", "bodyText": "there is another transpose in the perspective camera that needs to be undone. just waiting a bit to get to that point. at that point we can undo all these transposes. I preemptively flipped them at the material so we can swap them afterwards.\nreturn new Matrix4f().perspective(fovY,aspectRatio,zNear,zFar).transpose();", "url": "https://github.com/MovingBlocks/Terasology/pull/4023#discussion_r433609272", "createdAt": "2020-06-02T04:10:15Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/rendering/logic/SkeletonRenderer.java", "diffHunk": "@@ -248,7 +248,7 @@ public void renderOpaque() {\n             skeletalMesh.material.setFloat(\"blockLight\", 1.0f, true);\n             skeletalMesh.material.setFloat3(\"colorOffset\", skeletalMesh.color.rf(), skeletalMesh.color.gf(), skeletalMesh.color.bf(), true);\n \n-            skeletalMesh.material.setMatrix4(\"projectionMatrix\", worldRenderer.getActiveCamera().getProjectionMatrix());\n+            skeletalMesh.material.setMatrix4(\"projectionMatrix\", new org.joml.Matrix4f(worldRenderer.getActiveCamera().getProjectionMatrix()).transpose());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYwMzE1Ng=="}, "originalCommit": {"oid": "92f4d4d6c6d474ec6f1815579f2227db8bd9ce82"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 515, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}