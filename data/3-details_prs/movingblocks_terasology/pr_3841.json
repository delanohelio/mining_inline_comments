{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTUxOTgx", "number": 3841, "title": "feat: improve 'playerHeight' command", "bodyText": "Contains\nAttempt to fix #2535 .\nThe character's jump speed,movement speed,interaction range and step height are a function of the player's height.I acquired the functions through play testing and graph plotters.\nEarlier, a change in the player's height was made through a change in the his position through teleportation.This is probably what caused the player to sink through blocks at dwarf heights.This pull request, on the other hand just changes the eye height of the player.\n\n Increase/Decrease jump speed according to size. Giants should be able to jump higher and dwarfs lower.\n Giants should take longer strides, increase runFactor?\n Unable to pick up blocks off ground when height > 10. Bug!\n Physics bug: Eye height translates gazeMountPoint to a value more than expected.\n Trickier: Enable giants to be able to automatically climb up (no jump) blocks of smaller elevation.\n Height too small, makes you fall through blocks.\n\"Increase/Decrease damage from fall. (30m giant should not die of a 15m fall). Define function/proportionality constant same as above.\"->this sub issue is dealt by a pull request in the health module\n\nHow to test\nJust change the player's height and his capabilities should increase or decrease accordingly.\nOutstanding before merging\n\n Potions should use a AffectHeightComponent instead of affecting the PlayerConfig settings. These should override the Default (config) values and should be serialized to the world save.", "createdAt": "2020-03-03T13:30:36Z", "url": "https://github.com/MovingBlocks/Terasology/pull/3841", "merged": true, "mergeCommit": {"oid": "f7d3de0b58d9de1f802981def10748f7035be31d"}, "closed": true, "closedAt": "2020-04-19T11:18:18Z", "author": {"login": "godfather2"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ72CCgH2gAyMzgyOTUxOTgxOjUyMTJiYWQ4M2YxNDM3ZDQ5NWNkNzdhMmNmODI2YzNkODRmZjE0Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZIYkgAH2gAyMzgyOTUxOTgxOjNhY2QzODc3ZDQ4MWQ0OTE0MmEzYzEyMWYxOTkyM2YwM2Q0Zjk2ZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/5212bad83f1437d495cd77a2cf826c3d84ff14cd", "committedDate": "2020-03-03T05:54:49Z", "message": "implements height change extras and fixes bugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzU1MTg4", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-378355188", "createdAt": "2020-03-20T10:05:21Z", "commit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDowNToyMVrOF5Ntzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDowNTo1MVrOF5Nu3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNzg3MQ==", "bodyText": "See: https://github.com/MovingBlocks/Terasology/wiki/Common-Style-Points#starred-imports", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r395537871", "createdAt": "2020-03-20T10:05:21Z", "author": {"login": "syntaxi"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -18,12 +18,8 @@\n import org.terasology.entitySystem.entity.EntityManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.terasology.logic.characters.CharacterImpulseEvent;\n+import org.terasology.logic.characters.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzODE0Mw==", "bodyText": "See: https://github.com/MovingBlocks/Terasology/wiki/Common-Style-Points#descriptive-variable-names", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r395538143", "createdAt": "2020-03-20T10:05:51Z", "author": {"login": "syntaxi"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjE1NTM2", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-384215536", "createdAt": "2020-03-30T20:44:07Z", "commit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo0NDowN1rOF97egA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1MjoyM1rOF97wAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MTkyMA==", "bodyText": "Indeed, please use a descriptive name here. What is this function doing? What to the numbers mean?", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400481920", "createdAt": "2020-03-30T20:44:07Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzODE0Mw=="}, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MjgzOQ==", "bodyText": "What's the reason to cast between float and doubles here? Wouldn't the following work?\nprivate double calculateSomething(double p) {\n    return pow(p, 0.6) * 0.78;\n}\nI guess this could even be inlined.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400482839", "createdAt": "2020-03-30T20:45:55Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){\n+        double p = (double)parameter;\n+        return (float) pow(p,0.6) * 0.78f ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MzE4MA==", "bodyText": "Same here, please use a better name for the method.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400483180", "createdAt": "2020-03-30T20:46:31Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){\n+        double p = (double)parameter;\n+        return (float) pow(p,0.6) * 0.78f ;\n+    }\n+\n+    private float function2(float parameter){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NDE5OQ==", "bodyText": "This can be replaced by a reference to clientComp which is retrieved in the first line of this try-catch block.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        EntityRef player = client.getComponent(ClientComponent.class).character;\n          \n          \n            \n                        EntityRef player = clientComp.character;", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400484199", "createdAt": "2020-03-30T20:48:25Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){\n+        double p = (double)parameter;\n+        return (float) pow(p,0.6) * 0.78f ;\n+    }\n+\n+    private float function2(float parameter){\n+       return 0.15f + (0.64f * parameter) - (0.006f * parameter * parameter);\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp=clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = client.getComponent(ClientComponent.class).character;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NDc5Ng==", "bodyText": "What constant is calculated based off the height (amount)? Is it the eye level or something like that?", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400484796", "createdAt": "2020-03-30T20:49:22Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){\n+        double p = (double)parameter;\n+        return (float) pow(p,0.6) * 0.78f ;\n+    }\n+\n+    private float function2(float parameter){\n+       return 0.15f + (0.64f * parameter) - (0.006f * parameter * parameter);\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp=clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = client.getComponent(ClientComponent.class).character;\n+            GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+            float ratio = amount / 1.6f;\n+            float constant= function1(amount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NjQwMA==", "bodyText": "If function2 computes the run factor (whatever that is) you could call it getRunFactor instead.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r400486400", "createdAt": "2020-03-30T20:52:23Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +231,44 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float function1(float parameter){\n+        double p = (double)parameter;\n+        return (float) pow(p,0.6) * 0.78f ;\n+    }\n+\n+    private float function2(float parameter){\n+       return 0.15f + (0.64f * parameter) - (0.006f * parameter * parameter);\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp=clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = client.getComponent(ClientComponent.class).character;\n+            GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+            float ratio = amount / 1.6f;\n+            float constant= function1(amount);\n+\n+            if (move != null && gazeMountPointComponent != null) {\n                 float prevHeight = move.height;\n+\n                 move.height = amount;\n+                gazeMountPointComponent.translate.y = amount;\n+                move.jumpSpeed = 12 * constant;\n+                move.stepHeight = 0.35f * ratio;\n+                move.distanceBetweenFootsteps = ratio;\n+                move.runFactor = function2(amount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5212bad83f1437d495cd77a2cf826c3d84ff14cd"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f94718fa1643fd18991bb1f478d2f0c57ff2e8b1", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f94718fa1643fd18991bb1f478d2f0c57ff2e8b1", "committedDate": "2020-04-02T05:57:55Z", "message": "Expanded star import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f8f9833ab999d4f519842c8d009a87b5214b53", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/26f8f9833ab999d4f519842c8d009a87b5214b53", "committedDate": "2020-04-02T06:00:00Z", "message": "Update engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java\n\nCo-Authored-By: Tobias Nett <skaldarnar@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e21cc6b3ab6b65411594e49a24aeebe744db54a", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/1e21cc6b3ab6b65411594e49a24aeebe744db54a", "committedDate": "2020-04-02T06:43:25Z", "message": "Assigned more meaningful names and cleaned up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301", "committedDate": "2020-04-02T07:04:18Z", "message": "Fixed small mistake"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTU4OTMz", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-386558933", "createdAt": "2020-04-02T15:47:31Z", "commit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0NzozMVrOF_xqIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNjo1NjoyN1rOF_0hnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxODIxMA==", "bodyText": "The member height is public in CharacterMovementComponent, so there should be no need for this getter method.\nSee CharacterMovementComponent.java#L39", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402418210", "createdAt": "2020-04-02T15:47:31Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/characters/CharacterMovementComponent.java", "diffHunk": "@@ -91,6 +91,8 @@ public Vector3f getVelocity() {\n         return velocity;\n     }\n \n+    public float getPlayerHeight(){ return height; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyMjc1NQ==", "bodyText": "I believe 1.6f is the default height of the player? Ideally, we don't have to copy around these magic numbers and loose track of where they came from.\nThe best shot could be to define constants in CharacterMovementComponent which can be reused here.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402422755", "createdAt": "2020-04-02T15:53:39Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,48 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 9.36f ;\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 3.9f ;\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return 0.15f + (0.64f * amount) - (0.006f * amount * amount);\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = clientComp.character;\n+            GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+            float ratio = amount / 1.6f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyODA2MA==", "bodyText": "Height has a limitation of @Range(min = 0, max = 5) in CharacterMovementComponent, that should probably also be checked here...", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402428060", "createdAt": "2020-04-02T16:00:51Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,48 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 9.36f ;\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 3.9f ;\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return 0.15f + (0.64f * amount) - (0.006f * amount * amount);\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1MjM3NA==", "bodyText": "The default jumpSpeed seems to be 10 (and that's the maximum at the same time o.O ). thus, I would assume that setting the player height to the default should result in the default jump speed, but substituting amount by 1.6 yiels a value ~12.4 (\u226010).\nThis is how the jump speed is adjusted according to this function, for amount in the interval from 0 to 5:\n\nsee Wolfram Alpha\nsee CharacterMovementComponent.java#L53-L54", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402452374", "createdAt": "2020-04-02T16:36:52Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,48 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 9.36f ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ1NTkxMw==", "bodyText": "The run factor seems to be a value in the range from 0 to 10, with 1.5 being the default.\nAgain, calculating the new run factor with the default height of 1.6 yields a value of 1.15864 (\u22601.5).\nThis is how the run factor scales with the given function for amount between 0 and 5. The curve looks almost linear, to be hones:\n\nsee Wolfram Alpha", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402455913", "createdAt": "2020-04-02T16:42:16Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,48 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 9.36f ;\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 3.9f ;\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return 0.15f + (0.64f * amount) - (0.006f * amount * amount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2NTE4MQ==", "bodyText": "The default interaction range seems to be 5 (see CharacterComponent.java#L37). With this formula the interaction range for height of 1.6 is 5.17055 (\u2260 5).\nThis is what the plot looks like:\n\nsee Wolfram Alpha", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r402465181", "createdAt": "2020-04-02T16:56:27Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,48 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 9.36f ;\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return (float) pow(d,0.6) * 3.9f ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b915eff7bfc6b30a5ae9a1bbf41f66a9bc3b301"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87596cf7deffa6cd8a93d3b5221d35d6d54a8c9e", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/87596cf7deffa6cd8a93d3b5221d35d6d54a8c9e", "committedDate": "2020-04-04T07:27:25Z", "message": "Got rid of unnecessary getter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "851d6b66eba64fa6000a7f92118aef06c05d2a7c", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/851d6b66eba64fa6000a7f92118aef06c05d2a7c", "committedDate": "2020-04-04T16:39:52Z", "message": "Made necessary changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8d3ed2baba237f5a9a417eb277e02740949e7d", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/fa8d3ed2baba237f5a9a417eb277e02740949e7d", "committedDate": "2020-04-04T16:43:06Z", "message": "Changed the height range"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944bc1ea00d812eca22b6234a956d580f4b11000", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/944bc1ea00d812eca22b6234a956d580f4b11000", "committedDate": "2020-04-04T17:36:35Z", "message": "corrected small mistake"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE5NTk3", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-387719597", "createdAt": "2020-04-04T17:43:54Z", "commit": {"oid": "fa8d3ed2baba237f5a9a417eb277e02740949e7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzo0Mzo1NFrOGAzdaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxODoxNToyMFrOGAzq5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5NjI5Ng==", "bodyText": "This does not take the default values, but the current values for the CharacterMovementComponent.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r403496296", "createdAt": "2020-04-04T17:43:54Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,52 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.55) * 8.45f);\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.6) * 3.9f);\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return Math.round(5.5f + (6.4f * amount) - (0.06f * amount * amount)) / 10f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = clientComp.character;\n+            GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+            float defaultHeight = move.height;\n+            float defaultStepHeight = move.stepHeight;\n+            float defaultFootSteps = move.distanceBetweenFootsteps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa8d3ed2baba237f5a9a417eb277e02740949e7d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5ODQ2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getJumpSpeed(float amount){\n          \n          \n            \n                    double d = (double)amount;\n          \n          \n            \n                    return Math.round(pow(d,0.55) * 8.45f);\n          \n          \n            \n                }\n          \n          \n            \n                private float getJumpSpeed(float height) {\n          \n          \n            \n                    return Math.round(Math.pow(height/DEFAULT_HEIGHT, 0.55f) * DEFAULT_JUMP_SPEED);\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r403498469", "createdAt": "2020-04-04T18:04:45Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,52 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.55) * 8.45f);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944bc1ea00d812eca22b6234a956d580f4b11000"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5ODc0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getInteractionRange(float amount){\n          \n          \n            \n                    double d = (double)amount;\n          \n          \n            \n                    return Math.round(pow(d,0.6) * 3.9f);\n          \n          \n            \n                }\n          \n          \n            \n                private float getInteractionRange(float height){\n          \n          \n            \n                    return Math.round(pow(height/DEFAULT_HEIGHT, 0.6) * DEFAULT_INTERACTION_RANGE);\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r403498746", "createdAt": "2020-04-04T18:06:44Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,52 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.55) * 8.45f);\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.6) * 3.9f);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944bc1ea00d812eca22b6234a956d580f4b11000"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5OTU5Nw==", "bodyText": "Maybe use a similar formular to the ones you use above? Is there any reason this should be quadratic?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getRunFactor(float amount){\n          \n          \n            \n                   return Math.round(5.5f + (6.4f * amount) - (0.06f * amount * amount)) / 10f;\n          \n          \n            \n                }\n          \n          \n            \n                private float getRunFactor(float height){\n          \n          \n            \n                   return Math.round(Math.pow(height/DEFAULT_HEIGHT, 0.5) * DEFAULT_RUN_FACTOR);;\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r403499597", "createdAt": "2020-04-04T18:14:05Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,52 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.55) * 8.45f);\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.6) * 3.9f);\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return Math.round(5.5f + (6.4f * amount) - (0.06f * amount * amount)) / 10f;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944bc1ea00d812eca22b6234a956d580f4b11000"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5OTc1MQ==", "bodyText": "These should not be re-defined here. When the default values in CharacterMovementComponent are changed these will be outdated, and will likely cause some weird behavior and bugs.\nInstead, CharacterMovementComponent should expose\n    public  static final float DEFAULT_HEIGHT = 1.6f;\n    public  static final float DEFAULT_JUMP_SPEED = 10.f;", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r403499751", "createdAt": "2020-04-04T18:15:20Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,22 +236,52 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.55) * 8.45f);\n+    }\n+    \n+    private float getInteractionRange(float amount){\n+        double d = (double)amount;\n+        return Math.round(pow(d,0.6) * 3.9f);\n+    }\n+\n+    private float getRunFactor(float amount){\n+       return Math.round(5.5f + (6.4f * amount) - (0.06f * amount * amount)) / 10f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n         try {\n             ClientComponent clientComp = client.getComponent(ClientComponent.class);\n             CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n+            CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+            EntityRef player = clientComp.character;\n+            GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+            float defaultHeight = 1.6f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944bc1ea00d812eca22b6234a956d580f4b11000"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de2a0b0df45386c5488b9ac8be37ff2a2c165b4", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/9de2a0b0df45386c5488b9ac8be37ff2a2c165b4", "committedDate": "2020-04-04T18:24:35Z", "message": "Update MovementDebugCommands.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f29f7847f0329b75c3d55f14ce8c83d1c2d2b3cd", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f29f7847f0329b75c3d55f14ce8c83d1c2d2b3cd", "committedDate": "2020-04-18T20:17:31Z", "message": "Cleaned up formulae"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141", "author": {"user": {"login": "godfather2", "name": "Prince"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/0b002b9752840b6ad026fafbda909f418dd9d141", "committedDate": "2020-04-18T20:20:03Z", "message": "Corrected the default height and height range"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTkwNTcx", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-395990571", "createdAt": "2020-04-19T08:22:40Z", "commit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwODoyMjo0MFrOGH0RVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDoxNzo0MFrOGH1jgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTYyMQ==", "bodyText": "Why did you change the default height here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public float height = 1.8f;\n          \n          \n            \n                public float height = 1.6f;", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410849621", "createdAt": "2020-04-19T08:22:40Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/characters/CharacterMovementComponent.java", "diffHunk": "@@ -35,8 +35,8 @@\n public final class CharacterMovementComponent implements Component {\n \n     // Collision settings\n-    @Range(min = 0, max = 5)\n-    public float height = 1.6f;\n+    @Range(min = 1, max = 25)\n+    public float height = 1.8f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2NTM4OA==", "bodyText": "Now I saw that the values in CharacterMovementComponent are not the same as the ones in player.prefab. That should not be a problem as you are loading the default values from the prefab anyways. Thus, I would like to keep this default value as it is.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410865388", "createdAt": "2020-04-19T09:48:24Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/characters/CharacterMovementComponent.java", "diffHunk": "@@ -35,8 +35,8 @@\n public final class CharacterMovementComponent implements Component {\n \n     // Collision settings\n-    @Range(min = 0, max = 5)\n-    public float height = 1.6f;\n+    @Range(min = 1, max = 25)\n+    public float height = 1.8f;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0OTYyMQ=="}, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2NTcxMg==", "bodyText": "Unfortunately, we cannot assume that the default value for the interaction range is always 5 as it may be changed by a prefab (see default jump speed). Thus, this method should also get the default value to multiply with:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getInteractionRange(float ratio) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.62f) * 5f;\n          \n          \n            \n                }\n          \n          \n            \n                private float getInteractionRange(float ratio, float defaultValue) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.62f) * defaultValue;\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410865712", "createdAt": "2020-04-19T09:50:01Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2NTc5NQ==", "bodyText": "Same applies here for the run factor:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getRunFactor(float ratio) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.68f) * 1.5f;\n          \n          \n            \n                }\n          \n          \n            \n                private float getRunFactor(float ratio, float defaultValue) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.68f) * defaultValue;\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410865795", "createdAt": "2020-04-19T09:50:24Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2ODA2NA==", "bodyText": "The default jump speed for the player is set in the prefab to 12, thus calculating with 10 here sets the default values off (sorry for not catching this earlier). I like the fact the we have a constant value here to ensure that the player can always jump some minimum height.\nWhen deriving this from the default jump speed I would also increase the influence of the constant and reduce the influence of the first part:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private float getJumpSpeed(float ratio) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n          \n          \n            \n                }\n          \n          \n            \n                private float getJumpSpeed(float ratio, float defaultValue) {\n          \n          \n            \n                    return (float) Math.pow(ratio, 0.74f) * 0.4f * defaultValue + 0.6f * defaultValue;\n          \n          \n            \n                }", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410868064", "createdAt": "2020-04-19T10:02:07Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2OTM0MQ==", "bodyText": "As we'll need both the default movement component and the default character component later I'll fetch both here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n          \n          \n            \n                            CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);\n          \n          \n            \n            \n          \n          \n            \n                            Prefab playerDefaults = Assets.getPrefab(\"engine:player\").get();\n          \n          \n            \n                            CharacterMovementComponent moveDefault = playerDefaults.getComponent(CharacterMovementComponent.class);\n          \n          \n            \n                            CharacterComponent characterDefault = playerDefaults.getComponent(CharacterComponent.class)", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410869341", "createdAt": "2020-04-19T10:09:46Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+                Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n+                CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3MDEzNw==", "bodyText": "Ideally we'll need a lot more null checks here (for all the components). I'll refactor that part after this PR is merged, though.", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410870137", "createdAt": "2020-04-19T10:14:19Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+                Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n+                CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);\n+\n+                if (move != null && gazeMountPointComponent != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3MDMzMg==", "bodyText": "Inline with the method changes above we'll need to pass the default values over now:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                move.jumpSpeed = getJumpSpeed(ratio);\n          \n          \n            \n                                move.stepHeight = moveDefault.stepHeight * ratio;\n          \n          \n            \n                                move.distanceBetweenFootsteps = moveDefault.distanceBetweenFootsteps * ratio;\n          \n          \n            \n                                move.runFactor = getRunFactor(ratio);\n          \n          \n            \n                                charComp.interactionRange = getInteractionRange(ratio);\n          \n          \n            \n                                move.jumpSpeed = getJumpSpeed(ratio, moveDefault.jumpSpeed);\n          \n          \n            \n                                move.stepHeight = ratio * moveDefault.stepHeight;\n          \n          \n            \n                                move.distanceBetweenFootsteps = ratio * moveDefault.distanceBetweenFootsteps;\n          \n          \n            \n                                move.runFactor = getRunFactor(ratio, moveDefault.runFactor);\n          \n          \n            \n                                charComp.interactionRange = getInteractionRange(ratio, characterDefault.interactionRange);", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410870332", "createdAt": "2020-04-19T10:15:30Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+                Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n+                CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);\n+\n+                if (move != null && gazeMountPointComponent != null) {\n+                    float prevHeight = move.height;\n+                    float defaultEyeHeight = config.getPlayer().getEyeHeight();\n+                    float foreHeadSize = moveDefault.height - defaultEyeHeight;\n+                    float ratio = amount / moveDefault.height;\n+\n+                    move.height = amount;\n+                    move.jumpSpeed = getJumpSpeed(ratio);\n+                    move.stepHeight = moveDefault.stepHeight * ratio;\n+                    move.distanceBetweenFootsteps = moveDefault.distanceBetweenFootsteps * ratio;\n+                    move.runFactor = getRunFactor(ratio);\n+                    charComp.interactionRange = getInteractionRange(ratio);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3MDUzNw==", "bodyText": "As this is the same code as for the playerEyeHeight command I would refactor this later on to use a common\nupdateGazeMountPointHeight(player, amount - foreHeadSize);", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410870537", "createdAt": "2020-04-19T10:16:48Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+                Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n+                CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);\n+\n+                if (move != null && gazeMountPointComponent != null) {\n+                    float prevHeight = move.height;\n+                    float defaultEyeHeight = config.getPlayer().getEyeHeight();\n+                    float foreHeadSize = moveDefault.height - defaultEyeHeight;\n+                    float ratio = amount / moveDefault.height;\n+\n+                    move.height = amount;\n+                    move.jumpSpeed = getJumpSpeed(ratio);\n+                    move.stepHeight = moveDefault.stepHeight * ratio;\n+                    move.distanceBetweenFootsteps = moveDefault.distanceBetweenFootsteps * ratio;\n+                    move.runFactor = getRunFactor(ratio);\n+                    charComp.interactionRange = getInteractionRange(ratio);\n+                    gazeMountPointComponent.translate.y = amount - foreHeadSize;\n+                    Location.removeChild(player, gazeMountPointComponent.gazeEntity);\n+                    Location.attachChild(player, gazeMountPointComponent.gazeEntity, gazeMountPointComponent.translate, new Quat4f(Quat4f.IDENTITY));\n+\n+                    player.saveComponent(gazeMountPointComponent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3MDY1Ng==", "bodyText": "If we did proper null checks this try-catch block should not be necessary (in general, catching a NPE is always a code smell as you could have done a null-check before).", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410870656", "createdAt": "2020-04-19T10:17:40Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,59 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio) {\n+        return (float) Math.pow(ratio, 0.74f) * 6f + 4f;\n+    }\n+\n+    private float getInteractionRange(float ratio) {\n+        return (float) Math.pow(ratio, 0.62f) * 5f;\n+    }\n+\n+    private float getRunFactor(float ratio) {\n+        return (float) Math.pow(ratio, 0.68f) * 1.5f;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+                Optional<Prefab> prefab = Assets.get(new ResourceUrn(\"engine:player\"), Prefab.class);\n+                CharacterMovementComponent moveDefault = prefab.get().getComponent(CharacterMovementComponent.class);\n+\n+                if (move != null && gazeMountPointComponent != null) {\n+                    float prevHeight = move.height;\n+                    float defaultEyeHeight = config.getPlayer().getEyeHeight();\n+                    float foreHeadSize = moveDefault.height - defaultEyeHeight;\n+                    float ratio = amount / moveDefault.height;\n+\n+                    move.height = amount;\n+                    move.jumpSpeed = getJumpSpeed(ratio);\n+                    move.stepHeight = moveDefault.stepHeight * ratio;\n+                    move.distanceBetweenFootsteps = moveDefault.distanceBetweenFootsteps * ratio;\n+                    move.runFactor = getRunFactor(ratio);\n+                    charComp.interactionRange = getInteractionRange(ratio);\n+                    gazeMountPointComponent.translate.y = amount - foreHeadSize;\n+                    Location.removeChild(player, gazeMountPointComponent.gazeEntity);\n+                    Location.attachChild(player, gazeMountPointComponent.gazeEntity, gazeMountPointComponent.translate, new Quat4f(Quat4f.IDENTITY));\n+\n+                    player.saveComponent(gazeMountPointComponent);\n+                    clientComp.character.saveComponent(move);\n+\n+                    return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+                }\n+                return \"\";\n+            } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b002b9752840b6ad026fafbda909f418dd9d141"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb8015cb7a2c0eb669c880100dcb808fdfb111cf", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/cb8015cb7a2c0eb669c880100dcb808fdfb111cf", "committedDate": "2020-04-19T10:18:31Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDAzNzUx", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#pullrequestreview-396003751", "createdAt": "2020-04-19T10:59:55Z", "commit": {"oid": "cb8015cb7a2c0eb669c880100dcb808fdfb111cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDo1OTo1NVrOGH2AGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDo1OTo1NVrOGH2AGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3Nzk3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            CharacterComponent characterDefault = playerDefaults.getComponent(CharacterComponent.class)\n          \n          \n            \n                            CharacterComponent characterDefault = playerDefaults.getComponent(CharacterComponent.class);", "url": "https://github.com/MovingBlocks/Terasology/pull/3841#discussion_r410877976", "createdAt": "2020-04-19T10:59:55Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/logic/debug/MovementDebugCommands.java", "diffHunk": "@@ -233,28 +238,61 @@ public String stepHeight(@Sender EntityRef client, @CommandParam(\"height\") float\n         return \"\";\n     }\n \n+    private float getJumpSpeed(float ratio, float defaultValue) {\n+        return (float) Math.pow(ratio, 0.74f) * 0.4f * defaultValue + 0.6f * defaultValue;\n+    }\n+\n+    private float getInteractionRange(float ratio, float defaultValue) {\n+        return (float) Math.pow(ratio, 0.62f) * defaultValue;\n+    }\n+\n+    private float getRunFactor(float ratio, float defaultValue) {\n+        return (float) Math.pow(ratio, 0.68f) * defaultValue;\n+    }\n+\n     @Command(shortDescription = \"Sets the height of the player\", runOnServer = true,\n             requiredPermission = PermissionManager.CHEAT_PERMISSION)\n     public String playerHeight(@Sender EntityRef client, @CommandParam(\"height\") float amount) {\n-        try {\n-            ClientComponent clientComp = client.getComponent(ClientComponent.class);\n-            CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n-            if (move != null) {\n-                float prevHeight = move.height;\n-                move.height = amount;\n-                clientComp.character.saveComponent(move);\n-                LocationComponent loc = client.getComponent(LocationComponent.class);\n-                Vector3f currentPosition = loc.getWorldPosition();\n-                clientComp.character\n-                        .send(new CharacterTeleportEvent(new Vector3f(currentPosition.getX(), currentPosition.getY() + (amount - prevHeight) / 2, currentPosition.getZ())));\n-                physics.removeCharacterCollider(clientComp.character);\n-                physics.getCharacterCollider(clientComp.character);\n-                return \"Height of player set to \" + amount + \" (was \" + prevHeight + \")\";\n+        if (amount >= 1 && amount <= 25) {\n+            try {\n+                ClientComponent clientComp = client.getComponent(ClientComponent.class);\n+                CharacterMovementComponent move = clientComp.character.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent charComp = clientComp.character.getComponent(CharacterComponent.class);\n+                EntityRef player = clientComp.character;\n+                GazeMountPointComponent gazeMountPointComponent = player.getComponent(GazeMountPointComponent.class);\n+\n+                Prefab playerDefaults = Assets.getPrefab(\"engine:player\").get();\n+                CharacterMovementComponent moveDefault = playerDefaults.getComponent(CharacterMovementComponent.class);\n+                CharacterComponent characterDefault = playerDefaults.getComponent(CharacterComponent.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb8015cb7a2c0eb669c880100dcb808fdfb111cf"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3acd3877d481d49142a3c121f19923f03d4f96f1", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/3acd3877d481d49142a3c121f19923f03d4f96f1", "committedDate": "2020-04-19T11:00:16Z", "message": "added missed ';'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1694, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}