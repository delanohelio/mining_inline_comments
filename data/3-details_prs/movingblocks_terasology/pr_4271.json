{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDk1Njkx", "number": 4271, "title": "feat(discord-rpc): improve the system", "bodyText": "Contains\nThis improvement aims to fix bugs in the system.\nAnd, it improves communication between the game and Discord RPC to provide full access to its features.\n\nSource: Discord Developer Documentation\nCurrently, the system supports state that can be changed dynamically using DiscordRPCSubSystem#setState.\nAnd, details is also supported but its value is fixed as Name: PlayerName. It can't be changed.\nThis PR is going to implement other features such as partySize, partyMax, etc...\nDiscussion Points\n\n\nTurning the default to be dynamic to have different details from different gameplay such as Currently in JoshariasSurvival, etc...\n\n\nSince the engine has a networking infrastructure I'm thinking that we can implement the secrets (join and spectate)\nin a way to provide the modules the ability to receive events like DiscordAskToJoinEvent and DiscordSpectateEvent.\nInstead of each module dealing with it in a raw way.\n\n\nComment about what do you think of the points above? \ud83e\udd14\nBugs\n\nGame detection is broken\nThe game assumes the player is in the lobby while in reality, the player is in-game.\nNot thread-safe\nThe Discord RPC connection is being handled in a separate thread to avoid conflicts with the game.\nThe system isn't thread-safe which might result in unexpected behavior.\n\nHow to test\n\nFetch the PR commits\ngit fetch origin pull/4271/head:<localBranchName>\nCheckout to the PR's branch\ngit checkout <localBranchName>\nRun the game and make sure you have Discord Rich Presence turned on.\nJoin a game to trigger your game state from In Lobby to In Game\n\nNOTE:\nIn terms of unit testing, I'm not sure how I would implement it for this system. \ud83d\ude05\nOutstanding before merging\n\n Fix: Game detection is broken (solved by #4274)\n Fix: Not thread-safe (47bae74)\n Feat: Ability to change details (48d1502)\n Feat: Implement party size\n Feat: Implement secrets\n Test the RPC\n\n\n Single Player\n\n\n\n\n Multiplayer", "createdAt": "2020-11-24T13:55:03Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4271", "merged": true, "mergeCommit": {"oid": "f454f38f1c03e61aaa269487ca1fabad26e40392"}, "closed": true, "closedAt": "2021-03-05T22:52:31Z", "author": {"login": "iHDeveloper"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf9GHzgBqjQwMzc3MzQzNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeAR9eHgFqTYwNTY1ODE0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cbe17bcbb0e96c05dd3147e794db7c04e2a8d3f", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/7cbe17bcbb0e96c05dd3147e794db7c04e2a8d3f", "committedDate": "2020-11-25T11:57:34Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}, "afterCommit": {"oid": "4214950a252f2a2170737d0f687e5a6aacd08e93", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/4214950a252f2a2170737d0f687e5a6aacd08e93", "committedDate": "2020-11-25T11:59:22Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4214950a252f2a2170737d0f687e5a6aacd08e93", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/4214950a252f2a2170737d0f687e5a6aacd08e93", "committedDate": "2020-11-25T11:59:22Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}, "afterCommit": {"oid": "df87bc76478cbf9fbaa7b19d8d1ea5c5b90eef62", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/df87bc76478cbf9fbaa7b19d8d1ea5c5b90eef62", "committedDate": "2020-11-26T16:18:25Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df87bc76478cbf9fbaa7b19d8d1ea5c5b90eef62", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/df87bc76478cbf9fbaa7b19d8d1ea5c5b90eef62", "committedDate": "2020-11-26T16:18:25Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}, "afterCommit": {"oid": "acb8b98789a2baeab99440d828c3417b3ecb8d10", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/acb8b98789a2baeab99440d828c3417b3ecb8d10", "committedDate": "2020-12-01T16:30:58Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acb8b98789a2baeab99440d828c3417b3ecb8d10", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/acb8b98789a2baeab99440d828c3417b3ecb8d10", "committedDate": "2020-12-01T16:30:58Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}, "afterCommit": {"oid": "84a4b5d2103a66bf4e127f8656c263af7de47757", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/84a4b5d2103a66bf4e127f8656c263af7de47757", "committedDate": "2020-12-01T16:32:12Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84a4b5d2103a66bf4e127f8656c263af7de47757", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/84a4b5d2103a66bf4e127f8656c263af7de47757", "committedDate": "2020-12-01T16:32:12Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}, "afterCommit": {"oid": "dbd33242bfdcc02b08be15bd3b9a44fd0065dae4", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/dbd33242bfdcc02b08be15bd3b9a44fd0065dae4", "committedDate": "2020-12-01T16:51:13Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dbd33242bfdcc02b08be15bd3b9a44fd0065dae4", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/dbd33242bfdcc02b08be15bd3b9a44fd0065dae4", "committedDate": "2020-12-01T16:51:13Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}, "afterCommit": {"oid": "47bae742f7fdb5466bd0bfc66ee01d7275efa3d6", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/47bae742f7fdb5466bd0bfc66ee01d7275efa3d6", "committedDate": "2020-12-01T16:54:20Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTQ5NDMw", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#pullrequestreview-542149430", "createdAt": "2020-12-01T17:47:15Z", "commit": {"oid": "47bae742f7fdb5466bd0bfc66ee01d7275efa3d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo0NzoxNVrOH84pNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzo0NzoxNVrOH84pNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwNDY2MA==", "bodyText": "Maybe better to use java.util.Timer?\nIt can run task every fixed rate (i saw Thread.sleep(5000) in code below)", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#discussion_r533604660", "createdAt": "2020-12-01T17:47:15Z", "author": {"login": "DarkWeird"}, "path": "subsystems/DiscordRPC/src/main/java/org/terasology/engine/subsystem/discordrpc/DiscordRPCThread.java", "diffHunk": "@@ -0,0 +1,250 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.engine.subsystem.discordrpc;\n+\n+import com.jagrosh.discordipc.IPCClient;\n+import com.jagrosh.discordipc.IPCListener;\n+import com.jagrosh.discordipc.entities.RichPresence;\n+import com.jagrosh.discordipc.exceptions.NoDiscordClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class DiscordRPCThread implements IPCListener, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(DiscordRPCThread.class);\n+    private static final long DISCORD_APP_CLIENT_ID = 515274721080639504L;\n+    private static final String DISCORD_APP_DEFAULT_IMAGE = \"ss_6\";\n+    private static final int MAX_RECONNECT_TRIES = 5;\n+\n+    private final Thread thread;\n+    private final IPCClient ipcClient;\n+    private final DiscordRPCBuffer buffer;\n+    private RichPresence lastRichPresence;\n+\n+    private int tries;\n+\n+    private boolean enabled;\n+    private boolean waiting;\n+    private boolean connectedBefore;\n+    private boolean connected;\n+    private boolean autoReconnect;\n+\n+    public DiscordRPCThread() {\n+        thread = new Thread(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47bae742f7fdb5466bd0bfc66ee01d7275efa3d6"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48d150275fd721a20443937ed1d9d8f8c1b31e95", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/48d150275fd721a20443937ed1d9d8f8c1b31e95", "committedDate": "2020-12-10T07:35:13Z", "message": "feat: Ability to change details of the game\n\nUsed to set the gameplay name (e.g. Josharias Survival, Metal Renegades, etc...)\nIt will show on discord in this format \"Game: <name>\"\n\n- Improve the buffer change trigger and handler\n- Ability to change details in the buffer\n- Apply the new format for the rich presence\n-- Details -> \"Game: <name>\"\n-- Party State -> \"Playing Solo\" / \"Playing Online\" / \"Hosting\"\n\n- Fix: Triggering `Thread#setEnabled` with keeping the connection alive\n- Fix: No safe shutdown to the RPC thread"}, "afterCommit": {"oid": "b36ecafc6a8e7f4eb9f7fc350b2ebad6ada45a44", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/b36ecafc6a8e7f4eb9f7fc350b2ebad6ada45a44", "committedDate": "2021-01-07T00:53:01Z", "message": "- feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b36ecafc6a8e7f4eb9f7fc350b2ebad6ada45a44", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/b36ecafc6a8e7f4eb9f7fc350b2ebad6ada45a44", "committedDate": "2021-01-07T00:53:01Z", "message": "- feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}, "afterCommit": {"oid": "e02c616222aaf69c5f52c51774e9732a4d6ed85e", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e02c616222aaf69c5f52c51774e9732a4d6ed85e", "committedDate": "2021-01-07T00:56:11Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e02c616222aaf69c5f52c51774e9732a4d6ed85e", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e02c616222aaf69c5f52c51774e9732a4d6ed85e", "committedDate": "2021-01-07T00:56:11Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}, "afterCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e3b8063267dd0eb608e1f447e8fd18100e4fb5f2", "committedDate": "2021-01-07T00:59:18Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODg4NDE5", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#pullrequestreview-564888419", "createdAt": "2021-01-10T18:24:14Z", "commit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxODoyNDoxNFrOIQ6XSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxODozMToyM1rOIQ6aoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNDM2Mw==", "bodyText": "What kind of scans does this include?\n@keturn to the rescue? \ud83d\ude43", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#discussion_r554604363", "createdAt": "2021-01-10T18:24:14Z", "author": {"login": "skaldarnar"}, "path": ".idea/checkstyle-idea.xml", "diffHunk": "@@ -10,7 +10,7 @@\n         <entry key=\"location-1\" value=\"BUNDLED:(bundled):Google Checks\" />\n         <entry key=\"location-2\" value=\"PROJECT_RELATIVE:$PROJECT_DIR$/config/metrics/checkstyle/checkstyle.xml:Terasology\" />\n         <entry key=\"property-2.samedir\" value=\"config/metrics/checkstyle\" />\n-        <entry key=\"scan-before-checkin\" value=\"false\" />\n+        <entry key=\"scan-before-checkin\" value=\"true\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNDc0MQ==", "bodyText": "Since we log the start of initializing as INFO, should we also load the success when the thread was started (analog to the case where the integration is disabled).", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#discussion_r554604741", "createdAt": "2021-01-10T18:27:04Z", "author": {"login": "skaldarnar"}, "path": "subsystems/DiscordRPC/src/main/java/org/terasology/engine/subsystem/discordrpc/DiscordRPCSubSystem.java", "diffHunk": "@@ -38,281 +31,136 @@\n  * Subsystem that manages Discord RPC in the game client, such as status or connection.\n  * This subsystem can be enhanced further to improve game presentation in rich presence.\n  *\n+ * It communicates with the thread safely using thread-safe shared buffer.\n+ *\n  * @see EngineSubsystem\n  */\n-public class DiscordRPCSubSystem implements EngineSubsystem, IPCListener, Runnable, PropertyChangeListener {\n-\n+public final class DiscordRPCSubSystem implements EngineSubsystem, PropertyChangeListener {\n     private static final Logger logger = LoggerFactory.getLogger(DiscordRPCSubSystem.class);\n-    private static final long DISCORD_APP_CLIENT_ID = 515274721080639504L;\n-    private static final String DISCORD_APP_LARGE_IMAGE = \"ss_6\";\n-    private static final int RECONNECT_TRIES = 5;\n     private static DiscordRPCSubSystem instance;\n \n-    private IPCClient ipcClient;\n-    private boolean ready;\n-    private boolean autoReconnect;\n-    private Thread reconnectThread;\n-    private RichPresence lastRichPresence;\n-    private boolean reconnecting;\n-    private int reconnectTries = 1;\n-    private boolean connectedBefore;\n     private Config config;\n-    private String lastState;\n-    private boolean dontTryAgain;\n-    private boolean enabled;\n+    private DiscordRPCThread thread;\n \n     public DiscordRPCSubSystem() throws IllegalStateException {\n         if (instance != null) {\n             throw new IllegalStateException(\"More then one instance in the DiscordRPC\");\n         }\n-        lastRichPresence = null;\n-        ipcClient = new IPCClient(DISCORD_APP_CLIENT_ID);\n-        ipcClient.setListener(this);\n-        autoReconnect = true;\n-        reconnectThread = new Thread(this);\n-        reconnectThread.setName(\"DISCORD-RPC-RECONNECT\");\n-        reconnectThread.start();\n-        instance = this;\n-        enabled = false;\n-        dontTryAgain = true;\n-    }\n \n-    public void sendRichPresence(RichPresence richPresence) {\n-        this.lastRichPresence = richPresence;\n-        if (!ready || lastRichPresence == null || !enabled) {\n-            return;\n-        }\n-        ipcClient.sendRichPresence(lastRichPresence);\n+        instance = this;\n     }\n \n     @Override\n-    public void onReady(IPCClient client) {\n-        if (reconnecting) {\n-            logger.info(\"Discord RPC >> Reconnected!\");\n-            reconnectTries = 1;\n-        } else {\n-            logger.info(\"Discord RPC >> Connected!\");\n-            connectedBefore = true;\n-        }\n-        this.ipcClient = client;\n-        if (!ready) {\n-            ready = true;\n-        }\n-        if (lastRichPresence == null) {\n-            RichPresence.Builder builder = new RichPresence.Builder();\n-            builder.setLargeImage(DISCORD_APP_LARGE_IMAGE);\n-            lastRichPresence = builder.build();\n-        }\n-        client.sendRichPresence(lastRichPresence);\n-    }\n+    public void initialise(GameEngine engine, Context rootContext) {\n+        logger.info(\"Initializing...\");\n \n-    @Override\n-    public void onDisconnect(IPCClient client, Throwable t) {\n-        if (ready) {\n-            ready = false;\n+        thread = new DiscordRPCThread();\n+        thread.getBuffer().setState(\"In Main Menu\");\n+\n+        config = rootContext.get(Config.class);\n+\n+        if (config.getPlayer().isDiscordPresence()) {\n+            thread.enable();\n+        } else {\n+            logger.info(\"Discord RPC is disabled! No connection is being made during initialization.\");\n+            thread.disable();\n         }\n-        logger.info(\"Discord RPC >> Disconnected!\");\n+        thread.start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNTAwMQ==", "bodyText": "Is this a random number or something assigned to us in some way?", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#discussion_r554605001", "createdAt": "2021-01-10T18:29:18Z", "author": {"login": "skaldarnar"}, "path": "subsystems/DiscordRPC/src/main/java/org/terasology/engine/subsystem/discordrpc/DiscordRPCThread.java", "diffHunk": "@@ -0,0 +1,284 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.engine.subsystem.discordrpc;\n+\n+import com.jagrosh.discordipc.IPCClient;\n+import com.jagrosh.discordipc.IPCListener;\n+import com.jagrosh.discordipc.entities.RichPresence;\n+import com.jagrosh.discordipc.exceptions.NoDiscordClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class DiscordRPCThread implements IPCListener, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(DiscordRPCThread.class);\n+    private static final long DISCORD_APP_CLIENT_ID = 515274721080639504L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNTIxNg==", "bodyText": "How much will this actually log on the INFO level? I'm cautious when I see logger.info in combination with loops or frequently called methods as this might spam the log.", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#discussion_r554605216", "createdAt": "2021-01-10T18:31:23Z", "author": {"login": "skaldarnar"}, "path": "subsystems/DiscordRPC/src/main/java/org/terasology/engine/subsystem/discordrpc/DiscordRPCThread.java", "diffHunk": "@@ -0,0 +1,284 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.engine.subsystem.discordrpc;\n+\n+import com.jagrosh.discordipc.IPCClient;\n+import com.jagrosh.discordipc.IPCListener;\n+import com.jagrosh.discordipc.entities.RichPresence;\n+import com.jagrosh.discordipc.exceptions.NoDiscordClientException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class DiscordRPCThread implements IPCListener, Runnable {\n+    private static final Logger logger = LoggerFactory.getLogger(DiscordRPCThread.class);\n+    private static final long DISCORD_APP_CLIENT_ID = 515274721080639504L;\n+    private static final String DISCORD_APP_DEFAULT_IMAGE = \"ss_6\";\n+    private static final int MAX_RECONNECT_TRIES = 5;\n+\n+    private final Thread thread;\n+    private final IPCClient ipcClient;\n+    private final DiscordRPCBuffer buffer;\n+    private RichPresence lastRichPresence;\n+\n+    private int tries;\n+\n+    private boolean enabled;\n+    private boolean waiting;\n+    private boolean connectedBefore;\n+    private boolean connected;\n+    private boolean autoReconnect;\n+\n+    public DiscordRPCThread() {\n+        thread = new Thread(this);\n+        thread.setName(\"DISCORD-RPC-THREAD\");\n+\n+        ipcClient = new IPCClient(DISCORD_APP_CLIENT_ID);\n+        ipcClient.setListener(this);\n+\n+        buffer = new DiscordRPCBuffer();\n+\n+        lastRichPresence = null;\n+\n+        tries = 0;\n+\n+        enabled = false;\n+        waiting = false;\n+        connectedBefore = false;\n+        connected = false;\n+        autoReconnect = false;\n+    }\n+\n+    public void start() {\n+        thread.start();\n+    }\n+\n+    public synchronized void stop() {\n+        synchronized (thread) {\n+            thread.interrupt();\n+        }\n+    }\n+\n+    public synchronized void discover() {\n+        if (enabled && connected) {\n+            return;\n+        }\n+\n+        reset(true);\n+\n+        connectedBefore = true;\n+    }\n+\n+    public synchronized void enable() {\n+        if (enabled) {\n+            return;\n+        }\n+\n+        enabled = true;\n+        autoReconnect = true;\n+\n+        if (waiting && thread.isAlive()) {\n+            synchronized (thread) {\n+                thread.notify();\n+            }\n+        }\n+    }\n+\n+    public synchronized void disable() {\n+        disable(false);\n+    }\n+\n+    public synchronized void disable(boolean keepConnectionAlive) {\n+        if (!enabled) {\n+            return;\n+        }\n+\n+        enabled = false;\n+\n+        reset(!keepConnectionAlive);\n+        if (!keepConnectionAlive) {\n+            autoReconnect = false;\n+        }\n+\n+        if (waiting && thread.isAlive()) {\n+            synchronized (thread) {\n+                thread.notify();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onReady(IPCClient ignored) {\n+        if (connectedBefore) {\n+            logger.info(\"Re-connected to Discord RPC!\");\n+        } else {\n+            logger.info(\"Connected to Discord RPC!\");\n+        }\n+\n+        connectedBefore = true;\n+        connected = true;\n+    }\n+\n+    @Override\n+    public void onDisconnect(IPCClient client, Throwable t) {\n+        connected = false;\n+        logger.info(\"Discord RPC lost connection: Disconnected!\");\n+    }\n+\n+    @Override\n+    public void run() {\n+        while (true) {\n+            logger.info(\"Waiting for auto-connecting...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e959d674722f460da07629cd10f9b8f7c539b9", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/d8e959d674722f460da07629cd10f9b8f7c539b9", "committedDate": "2021-02-18T16:10:13Z", "message": "chore(idea): ignore discord plugin settings\n\nIt's user-specific file. It shouldn't be shared since each user has its own settings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8077d800d780c02803d9c0db06d043cd69ab054", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f8077d800d780c02803d9c0db06d043cd69ab054", "committedDate": "2021-02-18T16:10:21Z", "message": "feat(discord): change main menu state\n\nChange main menu state from \"In Lobby\" to \"In Main Menu\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc6ec621b5a8cb3f6d26020474578d4374a1e49", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/4dc6ec621b5a8cb3f6d26020474578d4374a1e49", "committedDate": "2021-02-18T16:10:21Z", "message": "feat(discord): rewrite + make it thread-safe\n\nThe rewrite was necessary to be able to achieve the system to be thread-safe.\nIt gave the opportunity to organise how the subsystem works.\n\nThis also ensures the subsystem is easy to:\n- Implement new features!\n- Fix bugs without breaking stuff\n\n- Separated the thread into its own class\n- Subsystem manages the communication with the thread\n- Re-organized the system\n- Fix: disable discord-ipc library logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129e8993eaa7b930b6bd29de411b7d4123630d84", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/129e8993eaa7b930b6bd29de411b7d4123630d84", "committedDate": "2021-02-18T16:10:21Z", "message": "feat(discord): Ability to change details of the game\n\nUsed to set the gameplay name (e.g. Josharias Survival, Metal Renegades, etc...)\nIt will show on discord in this format \"Game: <name>\"\n\n- Improve the buffer change trigger and handler\n- Ability to change details in the buffer\n- Apply the new format for the rich presence\n-- Details -> \"Game: <name>\"\n-- Party State -> \"Playing Solo\" / \"Playing Online\" / \"Hosting\"\n\n- Fix: Triggering `Thread#setEnabled` with keeping the connection alive\n- Fix: No safe shutdown to the RPC thread"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc1c1587ad9787a61bc0b336524ea164a43127f3", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/dc1c1587ad9787a61bc0b336524ea164a43127f3", "committedDate": "2021-02-18T16:10:21Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3b8063267dd0eb608e1f447e8fd18100e4fb5f2", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e3b8063267dd0eb608e1f447e8fd18100e4fb5f2", "committedDate": "2021-01-07T00:59:18Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}, "afterCommit": {"oid": "dc1c1587ad9787a61bc0b336524ea164a43127f3", "author": {"user": {"login": "iHDeveloper", "name": "iHDeveloper"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/dc1c1587ad9787a61bc0b336524ea164a43127f3", "committedDate": "2021-02-18T16:10:21Z", "message": "feat(discord): Implement party size\n\n- fix: can't hide start timestamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54784a089efc595116241c9662bd216e1266ef37", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/54784a089efc595116241c9662bd216e1266ef37", "committedDate": "2021-03-05T21:42:32Z", "message": "Merge branch 'develop' into discord-rpc/improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd8605420a4abb535e9da858d720793287abf2d", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/7fd8605420a4abb535e9da858d720793287abf2d", "committedDate": "2021-03-05T22:23:44Z", "message": "Merge branch 'develop' into discord-rpc/improvement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NjU4MTQ3", "url": "https://github.com/MovingBlocks/Terasology/pull/4271#pullrequestreview-605658147", "createdAt": "2021-03-05T22:23:55Z", "commit": {"oid": "7fd8605420a4abb535e9da858d720793287abf2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1321, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}