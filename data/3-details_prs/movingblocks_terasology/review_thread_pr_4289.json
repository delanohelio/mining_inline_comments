{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDcwMDkx", "number": 4289, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODowMVrOFCMdYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTowNTowM1rOFJmYDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODQ1NjAwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODowMVrOIBNdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODowMVrOIBNdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MDAxOA==", "bodyText": "FQN of class not needed more (import was removed)", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r538140018", "createdAt": "2020-12-08T08:38:01Z", "author": {"login": "DarkWeird"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "diffHunk": "@@ -114,37 +117,41 @@ private MeshAnimationData loadAnimation(GLTF gltf, GLTFAnimation animation, List\n \n             switch (channel.getTarget().getPath()) {\n                 case TRANSLATION: {\n-                    List<Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());\n+                    List<org.joml.Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());\n \n-                    channelReaders.add(new BufferChannelReader<>(times, data, sampler.getInterpolation()::interpolate, x -> x.getPosition(bone)));\n+                    channelReaders.add(new BufferChannelReader<>(times, data, sampler.getInterpolation()::interpolate\n+                        , x -> x.getPosition(bone)));\n                     break;\n                 }\n                 case ROTATION: {\n-                    List<Quat4f> data = getQuat4fs(gltf, loadedBuffers, sampler.getOutput());\n-                    channelReaders.add(new BufferChannelReader<>(times, data, sampler.getInterpolation()::interpolate, x -> x.getRotation(bone)));\n+                    List<Quaternionf> data = getQuat4fs(gltf, loadedBuffers, sampler.getOutput());\n+                    channelReaders.add(new BufferChannelReader<>(times, data, sampler.getInterpolation()::interpolate\n+                        , x -> x.getRotation(bone)));\n                     break;\n                 }\n                 case SCALE: {\n-                    List<Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());\n-                    channelReaders.add(new BufferChannelReader<>(times, data, sampler.getInterpolation()::interpolate, x -> x.getBoneScale(bone)));\n+                    List<org.joml.Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb31626b285947ef894a16f0b6d30dcefd0b5a3"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODQ1NjIxOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODowNFrOIBNdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODowNFrOIBNdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MDA1NA==", "bodyText": "FQN of class not needed more (import was removed)", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r538140054", "createdAt": "2020-12-08T08:38:04Z", "author": {"login": "DarkWeird"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "diffHunk": "@@ -114,37 +117,41 @@ private MeshAnimationData loadAnimation(GLTF gltf, GLTFAnimation animation, List\n \n             switch (channel.getTarget().getPath()) {\n                 case TRANSLATION: {\n-                    List<Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());\n+                    List<org.joml.Vector3f> data = getVector3fs(gltf, loadedBuffers, sampler.getOutput());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb31626b285947ef894a16f0b6d30dcefd0b5a3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODQ1NjYxOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODoxM1rOIBNd3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODoxM1rOIBNd3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MDEyNw==", "bodyText": "FQN of class not needed more (import was removed)", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r538140127", "createdAt": "2020-12-08T08:38:13Z", "author": {"login": "DarkWeird"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFAnimationFormat.java", "diffHunk": "@@ -163,20 +170,20 @@ private TFloatList getFloats(GLTF gltf, List<byte[]> loadedBuffers, int accessor\n         return floats;\n     }\n \n-    private List<Vector3f> getVector3fs(GLTF gltf, List<byte[]> loadedBuffers, int accessorIndex) throws IOException {\n+    private List<org.joml.Vector3f> getVector3fs(GLTF gltf, List<byte[]> loadedBuffers, int accessorIndex) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb31626b285947ef894a16f0b6d30dcefd0b5a3"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODQ1ODkxOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODo0NlrOIBNfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODozODo0NlrOIBNfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0MDQ4OQ==", "bodyText": "FQN of class not needed more (import was removed)", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r538140489", "createdAt": "2020-12-08T08:38:46Z", "author": {"login": "DarkWeird"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "diffHunk": "@@ -249,7 +272,7 @@ protected void checkVersionSupported(ResourceUrn urn, GLTF gltf) throws IOExcept\n             if (Strings.isNullOrEmpty(boneName)) {\n                 boneName = \"bone_\" + i;\n             }\n-            Bone bone = new Bone(i, boneName, new Matrix4f(rotation, position, scale.x));\n+            Bone bone = new Bone(i, boneName, new org.joml.Matrix4f().translationRotateScale(position, rotation, scale));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb31626b285947ef894a16f0b6d30dcefd0b5a3"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDM0MjY1OnYy", "diffSide": "LEFT", "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNDozMzoxMFrOIE1OIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxOTowMzoyMlrOIMzbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA==", "bodyText": "This seems like those two matrices should be different... why do we joml-migrate both to a plain new matrix?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r541937184", "createdAt": "2020-12-13T14:33:10Z", "author": {"login": "jdrueckert"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgyMDkxOQ==", "bodyText": "Matricies in JOML are always Identity.", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r548820919", "createdAt": "2020-12-25T07:15:42Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA=="}, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkxMzQ4OA==", "bodyText": "yes, but Matrix4f() wasn't, was it?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r548913488", "createdAt": "2020-12-25T21:29:20Z", "author": {"login": "jdrueckert"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA=="}, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0NDQ0OQ==", "bodyText": "Should relativeTransform be initialized like this: https://github.com/MovingBlocks/Terasology/pull/4289/files#diff-e9569d94bd09dbdf5fdb02d9bfd5d2b781df1f55e0d32adba9620ba7156e4366R115\nnew Matrix4f().m00(0).m11(0).m22(0).m33(0);", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549044449", "createdAt": "2020-12-26T23:59:38Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA=="}, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwOTYyOQ==", "bodyText": "it needs to be a zero matrix. umm I don't think there is a way to declare an empty matrix in joml.", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549409629", "createdAt": "2020-12-28T16:36:56Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA=="}, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI5NjQxNw==", "bodyText": "The initial value is overwritten in the constructor anyways, so this is no problem.", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r550296417", "createdAt": "2020-12-30T19:03:22Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -31,7 +30,7 @@\n     private String name;\n     private int index;\n     private Matrix4f relativeTransform = new Matrix4f();\n-    private Matrix4f inverseBindMatrix = new Matrix4f(Matrix4f.IDENTITY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzE4NA=="}, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDM0NTkyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNDozNToyMVrOIE1PkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNDozNToyMVrOIE1PkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzNzU1Mg==", "bodyText": "what about this? still needed or can be removed?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r541937552", "createdAt": "2020-12-13T14:35:21Z", "author": {"login": "jdrueckert"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "diffHunk": "@@ -293,7 +316,7 @@ protected void checkVersionSupported(ResourceUrn urn, GLTF gltf) throws IOExcept\n                     values.get(i + 8), values.get(i + 9), values.get(i + 10), values.get(i + 11),\n                     values.get(i + 12), values.get(i + 13), values.get(i + 14), values.get(i + 15)\n             );\n-            mat.transpose();\n+//            mat.transpose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8297a82b5728bc9f4bb1425acba2bc8d888ddf5"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMxODAzOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/logic/SkeletonRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxNTo1OFrOIL5T6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxNTo1OFrOIL5T6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NDIzNA==", "bodyText": "No need to use a Stream here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ((OpenGLSkeletalMesh) skeletalMesh.mesh).render(Arrays.stream(boneTransforms).collect(Collectors.toList()));\n          \n          \n            \n                        ((OpenGLSkeletalMesh) skeletalMesh.mesh).render(Arrays.asList(boneTransforms));", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549344234", "createdAt": "2020-12-28T13:15:58Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/logic/SkeletonRenderer.java", "diffHunk": "@@ -288,20 +288,16 @@ public void renderOpaque() {\n                 if (boneLocation != null) {\n                     Matrix4f boneTransform = new Matrix4f();\n                     boneLocation.getRelativeTransform(boneTransform, entity);\n-                    boneTransform.mul(JomlUtil.from(bone.getInverseBindMatrix()).transpose());\n-                    boneTransforms[bone.getIndex()] = boneTransform;\n+                    boneTransform.mul(bone.getInverseBindMatrix());\n+                    boneTransforms[bone.getIndex()] = boneTransform.transpose();\n                 } else {\n                     logger.warn(\"Unable to resolve bone \\\"{}\\\"\", bone.getName());\n                     boneTransforms[bone.getIndex()] = new Matrix4f();\n \n                 }\n             }\n             ((OpenGLSkeletalMesh) skeletalMesh.mesh).setScaleTranslate(skeletalMesh.scale, skeletalMesh.translate);\n-            ((OpenGLSkeletalMesh) skeletalMesh.mesh).render(Arrays.stream(boneTransforms).map(k -> {\n-                org.terasology.math.geom.Matrix4f t = JomlUtil.from(k);\n-                t.transpose();\n-                return t;\n-            }).collect(Collectors.toList()));\n+            ((OpenGLSkeletalMesh) skeletalMesh.mesh).render(Arrays.stream(boneTransforms).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMyMzA1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/model/GLTFInterpolation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxODowMlrOIL5Wng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxODowMlrOIL5Wng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NDkyNg==", "bodyText": "remove commented code and apply formatter.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        a.lerp(b,t,out);\n          \n          \n            \n            //            out.x = a.x + t * (b.x - a.x);\n          \n          \n            \n            //            out.y = a.y + t * (b.y - a.y);\n          \n          \n            \n            //            out.z = a.z + t * (b.z - a.z);\n          \n          \n            \n                        a.lerp(b, t, out);", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549344926", "createdAt": "2020-12-28T13:18:02Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/model/GLTFInterpolation.java", "diffHunk": "@@ -30,15 +30,17 @@\n     LINEAR {\n         @Override\n         public void interpolate(Vector3f a, Vector3f b, float t, Vector3f out) {\n-            out.x = a.x + t * (b.x - a.x);\n-            out.y = a.y + t * (b.y - a.y);\n-            out.z = a.z + t * (b.z - a.z);\n+            a.lerp(b,t,out);\n+//            out.x = a.x + t * (b.x - a.x);\n+//            out.y = a.y + t * (b.y - a.y);\n+//            out.z = a.z + t * (b.z - a.z);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMyMzg5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/model/GLTFInterpolation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxODoxOVrOIL5XDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxODoxOVrOIL5XDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NTAzOA==", "bodyText": "remove commented code\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            //            out.set(BaseQuat4f.interpolate(a, b, t));", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549345038", "createdAt": "2020-12-28T13:18:19Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/model/GLTFInterpolation.java", "diffHunk": "@@ -30,15 +30,17 @@\n     LINEAR {\n         @Override\n         public void interpolate(Vector3f a, Vector3f b, float t, Vector3f out) {\n-            out.x = a.x + t * (b.x - a.x);\n-            out.y = a.y + t * (b.y - a.y);\n-            out.z = a.z + t * (b.z - a.z);\n+            a.lerp(b,t,out);\n+//            out.x = a.x + t * (b.x - a.x);\n+//            out.y = a.y + t * (b.y - a.y);\n+//            out.z = a.z + t * (b.z - a.z);\n \n         }\n \n         @Override\n-        public void interpolate(Quat4f a, Quat4f b, float t, Quat4f out) {\n-            out.set(BaseQuat4f.interpolate(a, b, t));\n+        public void interpolate(Quaternionf a, Quaternionf b, float t, Quaternionf out) {\n+            a.slerp(b, t, out);\n+//            out.set(BaseQuat4f.interpolate(a, b, t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMyNzI1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Vector3fDeserializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxOTo1N1rOIL5Y7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoxOTo1N1rOIL5Y7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NTUxNw==", "bodyText": "Ehm, what is this deserializer used for?\nI would assume we keep all de- and encoding logic for the TeraMath data types and add new ones for the JOML types (if needed). Are we sure this should be changed?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549345517", "createdAt": "2020-12-28T13:19:57Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Vector3fDeserializer.java", "diffHunk": "@@ -21,7 +21,7 @@\n import com.google.gson.JsonParseException;\n import gnu.trove.list.TFloatList;\n import gnu.trove.list.array.TFloatArrayList;\n-import org.terasology.math.geom.Vector3f;\n+import org.joml.Vector3f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMyODE5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Quat4fDeserializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyMDoyM1rOIL5ZaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyMDoyM1rOIL5ZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NTY0MA==", "bodyText": "Same here, should we keep the old deserializer for teramath types?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549345640", "createdAt": "2020-12-28T13:20:23Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Quat4fDeserializer.java", "diffHunk": "@@ -21,21 +21,21 @@\n import com.google.gson.JsonParseException;\n import gnu.trove.list.TFloatList;\n import gnu.trove.list.array.TFloatArrayList;\n-import org.terasology.math.geom.Quat4f;\n+import org.joml.Quaternionf;\n \n import java.lang.reflect.Type;\n \n /**\n  * Json deserializer for an Quat4f.\n  */\n-public class Quat4fDeserializer implements JsonDeserializer<Quat4f> {\n+public class Quat4fDeserializer implements JsonDeserializer<Quaternionf> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTMyOTA3OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Matrix4fDeserializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyMDo1NFrOIL5Z7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyMDo1NFrOIL5Z7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NTc3Mg==", "bodyText": "Same here, should we keep the old deserializer for teramath types?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549345772", "createdAt": "2020-12-28T13:20:54Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/deserializers/Matrix4fDeserializer.java", "diffHunk": "@@ -21,7 +21,7 @@\n import com.google.gson.JsonParseException;\n import gnu.trove.list.TFloatList;\n import gnu.trove.list.array.TFloatArrayList;\n-import org.terasology.math.geom.Matrix4f;\n+import org.joml.Matrix4f;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTM0NDA4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFMeshFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNzozNVrOIL5h9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNzozNVrOIL5h9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NzgyOA==", "bodyText": "Why do we create a new matrix object here and set transform? Isn't this equivalent to just\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            transform.set(new Matrix4f().translationRotateScale(position,rotation, scale));\n          \n          \n            \n                            transform.translationRotateScale(position,rotation, scale);", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549347828", "createdAt": "2020-12-28T13:27:35Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFMeshFormat.java", "diffHunk": "@@ -131,19 +131,19 @@ private Matrix4f getMatrix(GLTF gltf, int nodeIndex) {\n                 if (node.getScale() != null) {\n                     scale.set(node.getScale());\n                 }\n-                transform.set(new Matrix4f(rotation, position, 1.0f));\n-\n-                transform.set(0, 0, scale.getX() * transform.get(0, 0));\n-                transform.set(0, 1, scale.getX() * transform.get(0, 1));\n-                transform.set(0, 2, scale.getX() * transform.get(0, 2));\n-\n-                transform.set(1, 0, scale.getY() * transform.get(1, 0));\n-                transform.set(1, 1, scale.getY() * transform.get(1, 1));\n-                transform.set(1, 2, scale.getY() * transform.get(1, 2));\n-\n-                transform.set(2, 0, scale.getZ() * transform.get(2, 0));\n-                transform.set(2, 1, scale.getZ() * transform.get(2, 1));\n-                transform.set(2, 2, scale.getZ() * transform.get(2, 2));\n+                transform.set(new Matrix4f().translationRotateScale(position,rotation, scale));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTM0NDQyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFMeshFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNzo1MFrOIL5iLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNzo1MFrOIL5iLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0Nzg4NA==", "bodyText": "remove commented code\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            //                transform.set(0, 0, scale.getX() * transform.get(0, 0));\n          \n          \n            \n            //                transform.set(0, 1, scale.getX() * transform.get(0, 1));\n          \n          \n            \n            //                transform.set(0, 2, scale.getX() * transform.get(0, 2));\n          \n          \n            \n            //\n          \n          \n            \n            //                transform.set(1, 0, scale.getY() * transform.get(1, 0));\n          \n          \n            \n            //                transform.set(1, 1, scale.getY() * transform.get(1, 1));\n          \n          \n            \n            //                transform.set(1, 2, scale.getY() * transform.get(1, 2));\n          \n          \n            \n            //\n          \n          \n            \n            //                transform.set(2, 0, scale.getZ() * transform.get(2, 0));\n          \n          \n            \n            //                transform.set(2, 1, scale.getZ() * transform.get(2, 1));\n          \n          \n            \n            //                transform.set(2, 2, scale.getZ() * transform.get(2, 2));", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549347884", "createdAt": "2020-12-28T13:27:50Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFMeshFormat.java", "diffHunk": "@@ -131,19 +131,19 @@ private Matrix4f getMatrix(GLTF gltf, int nodeIndex) {\n                 if (node.getScale() != null) {\n                     scale.set(node.getScale());\n                 }\n-                transform.set(new Matrix4f(rotation, position, 1.0f));\n-\n-                transform.set(0, 0, scale.getX() * transform.get(0, 0));\n-                transform.set(0, 1, scale.getX() * transform.get(0, 1));\n-                transform.set(0, 2, scale.getX() * transform.get(0, 2));\n-\n-                transform.set(1, 0, scale.getY() * transform.get(1, 0));\n-                transform.set(1, 1, scale.getY() * transform.get(1, 1));\n-                transform.set(1, 2, scale.getY() * transform.get(1, 2));\n-\n-                transform.set(2, 0, scale.getZ() * transform.get(2, 0));\n-                transform.set(2, 1, scale.getZ() * transform.get(2, 1));\n-                transform.set(2, 2, scale.getZ() * transform.get(2, 2));\n+                transform.set(new Matrix4f().translationRotateScale(position,rotation, scale));\n+\n+//                transform.set(0, 0, scale.getX() * transform.get(0, 0));\n+//                transform.set(0, 1, scale.getX() * transform.get(0, 1));\n+//                transform.set(0, 2, scale.getX() * transform.get(0, 2));\n+//\n+//                transform.set(1, 0, scale.getY() * transform.get(1, 0));\n+//                transform.set(1, 1, scale.getY() * transform.get(1, 1));\n+//                transform.set(1, 2, scale.getY() * transform.get(1, 2));\n+//\n+//                transform.set(2, 0, scale.getZ() * transform.get(2, 0));\n+//                transform.set(2, 1, scale.getZ() * transform.get(2, 1));\n+//                transform.set(2, 2, scale.getZ() * transform.get(2, 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTM0OTE1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyOTo0N1rOIL5krg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyOTo0N1rOIL5krg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0ODUyNg==", "bodyText": "I'm not sure whether we should change the deserializers for the old types in place, or phase them out more gracefully. Are they used anywhere else, or just here for the glTF format?", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549348526", "createdAt": "2020-12-28T13:29:47Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/gltf/GLTFCommonFormat.java", "diffHunk": "@@ -65,7 +88,7 @@\n             .registerTypeAdapter(TIntList.class, new TIntListDeserializer())\n             .registerTypeAdapter(TFloatList.class, new TFloatListDeserializer())\n             .registerTypeAdapter(Matrix4f.class, new Matrix4fDeserializer())\n-            .registerTypeAdapter(Quat4f.class, new Quat4fDeserializer())\n+            .registerTypeAdapter(Quaternionf.class, new Quat4fDeserializer())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTM1NDE0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzozMjoxNlrOIL5nXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzozMjoxNlrOIL5nXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0OTIxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Quaternionf result = new Quaternionf();\n          \n          \n            \n                    relativeTransform.getNormalizedRotation(result);\n          \n          \n            \n                    return result;\n          \n          \n            \n                    return relativeTransform.getNormalizedRotation(new Quaternionf());", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549349215", "createdAt": "2020-12-28T13:32:16Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -92,32 +91,18 @@ public void addChild(Bone child) {\n \n     public Vector3f getLocalPosition() {\n         Vector3f result = new Vector3f();\n-        relativeTransform.transformPoint(result);\n+        relativeTransform.transformPosition(result);\n         return result;\n     }\n \n-    public Quat4f getLocalRotation() {\n-        Vector3f scale = getLocalScale();\n-        Matrix4f descaled = new Matrix4f(relativeTransform);\n-        descaled.m00 /= scale.x;\n-        descaled.m10 /= scale.x;\n-        descaled.m20 /= scale.x;\n-        descaled.m01 /= scale.y;\n-        descaled.m11 /= scale.y;\n-        descaled.m21 /= scale.y;\n-        descaled.m02 /= scale.z;\n-        descaled.m12 /= scale.z;\n-        descaled.m22 /= scale.z;\n-        Quat4f result = new Quat4f(Quat4f.IDENTITY);\n-        result.set(descaled);\n+    public Quaternionf getLocalRotation() {\n+        Quaternionf result = new Quaternionf();\n+        relativeTransform.getNormalizedRotation(result);\n         return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22cc7def2404187c1ee27cf795687644023e8ebb"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjEwMjUyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTowNTowM1rOIMAFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTowNTowM1rOIMAFkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NTI0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Quaternionf result = new Quaternionf();", "url": "https://github.com/MovingBlocks/Terasology/pull/4289#discussion_r549455248", "createdAt": "2020-12-28T19:05:03Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/assets/skeletalmesh/Bone.java", "diffHunk": "@@ -97,8 +97,7 @@ public Vector3f getLocalPosition() {\n \n     public Quaternionf getLocalRotation() {\n         Quaternionf result = new Quaternionf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b40dde28709ea4d92baa7e2f7eb5b9f62c5ff33e"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 294, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}