{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDIzNzEw", "number": 4063, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNVrOERJr6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MToyMVrOERJsRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDE5OTQ1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNVrOG1tQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNVrOG1tQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTI5NQ==", "bodyText": "Thanks to @4Denthusiast for pointing this out in #4094\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());\n          \n          \n            \n                    return Math.max(0, (baseValue + modifiers.sum()) * product(multipliers) + postModifiers.sum());", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969295", "createdAt": "2020-07-22T17:41:05Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n+     * </pre>\n+     *\n+     * <emph>The result value is guaranteed to be non-negative!</emph>\n+     */\n     public float getResultValue() {\n-        // For now, add all modifiers and multiply by all multipliers. Negative modifiers cap to zero, but negative\n-        // multipliers remain.\n-\n-        float result = baseValue;\n-        TFloatIterator modifierIter = modifiers.iterator();\n-        while (modifierIter.hasNext()) {\n-            result += modifierIter.next();\n-        }\n-        result = Math.max(0, result);\n-\n-        TFloatIterator multiplierIter = multipliers.iterator();\n-        while (multiplierIter.hasNext()) {\n-            result *= multiplierIter.next();\n-        }\n-\n-        final TFloatIterator postModifierIter = postModifiers.iterator();\n-        while (postModifierIter.hasNext()) {\n-            result += postModifierIter.next();\n-        }\n-        return result;\n+        //TODO(skaldarnar): Based on a discussion in https://github.com/MovingBlocks/Terasology/pull/4063 we may want\n+        // to lift the guarantee/restriction that the result value needs to be non-negative. Systems are still free to\n+        // apply this restriction if needed.\n+        return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDIwMDM5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MToyMVrOG1tRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MToyMVrOG1tRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTQ0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n          \n          \n            \n                 * result = max(0, (<baseValue> + \u03a3 <modifier>) * \u03a0 <multiplier> + \u03a3 <postModifier>)", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969448", "createdAt": "2020-07-22T17:41:21Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 311, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}