{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDIzNzEw", "number": 4063, "title": "doc: Add docs and contracts for AbstractValueModifiableEvent", "bodyText": "This PR follows from Terasology/ClimateConditions#17 (comment) (thanks to @ktksan).\nThe lack of documentation makes it hard to spot quirky or unexpected behavior. In this particular case, I'd like to start a discussion to change the implementation.\nCurrently the result value is computed as\nresult = max(0, <baseValue> + \u03a3 <modifier>) * \u03a0 <multiplier> + \u03a3 <postModifier>\n\nwhich is counter-intuitive for many reasons (and I don't know why Marcin implemented it this way).\nAt first I thought that capping the value to be positive holds for the result value in general, but that's not true - only the first set of modifiers is guaranteed to result in a value greater or equal to zero, both multipliers and post-modifiers can move the result to negative numbers.\nOptions\n\nEnsure that the result value is always non-negative. This can be achieved in different ways and it needs to be clearly documented how the value is computed.\nresult = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\nresult = max(0, max(0, max(0, <baseValue> + \u03a3 <modifier>) * \u03a0 <multiplier>) + \u03a3 <postModifier>)\n...\n\n\nSimplify the computation without any restrictions to domain or range. All modifiers and multipliers can be zero or negative, and the result is just computed as\nresult = <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>\n\nAny system using the result value is responsible to cap it if necessary.\n\nProposal\nI'd propose to go for Option 2 - Simplify to make the usage more intuitive and fail-safe. However, I don't know whether there are any implications. However, if any system relies on the fact that the result is capped to be non-negative that's a bug even right now... \ud83d\ude44", "createdAt": "2020-07-02T10:25:02Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4063", "merged": true, "mergeCommit": {"oid": "1e1f5c2ec616ebe1f4a517e6367bf104e483efef"}, "closed": true, "closedAt": "2020-07-27T22:48:58Z", "author": {"login": "skaldarnar"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc23fmMgBqjM1Njc2NjA0Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4FqvXgFqTQ1NDk3NjczNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0d35b54c156e553568a58683e22d318a25bc07f", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/a0d35b54c156e553568a58683e22d318a25bc07f", "committedDate": "2020-07-02T10:11:36Z", "message": "doc: Add docs and contracts for AbstractValueModifiableEvent"}, "afterCommit": {"oid": "36bb89510f7a593ed6ecebdf41e36cb312cd09be", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/36bb89510f7a593ed6ecebdf41e36cb312cd09be", "committedDate": "2020-07-20T20:16:51Z", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a04ce1b972acba40f1148538cc2f4b212abb625d", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/a04ce1b972acba40f1148538cc2f4b212abb625d", "committedDate": "2020-07-20T20:17:56Z", "message": "doc(ValueModifiableEvent): Add docs and contracts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/3ddfff104e6a858460ba414d417bde9a6c1f5faf", "committedDate": "2020-07-20T20:18:28Z", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36bb89510f7a593ed6ecebdf41e36cb312cd09be", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/36bb89510f7a593ed6ecebdf41e36cb312cd09be", "committedDate": "2020-07-20T20:16:51Z", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees"}, "afterCommit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/3ddfff104e6a858460ba414d417bde9a6c1f5faf", "committedDate": "2020-07-20T20:18:28Z", "message": "fix(AbstractValueModifiableEvent): simplify calculation of result value, document guarantees"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQzMTEw", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#pullrequestreview-453543110", "createdAt": "2020-07-22T17:41:05Z", "commit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNVrOG1tQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNVrOG1tQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTI5NQ==", "bodyText": "Thanks to @4Denthusiast for pointing this out in #4094\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());\n          \n          \n            \n                    return Math.max(0, (baseValue + modifiers.sum()) * product(multipliers) + postModifiers.sum());", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969295", "createdAt": "2020-07-22T17:41:05Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n+     * </pre>\n+     *\n+     * <emph>The result value is guaranteed to be non-negative!</emph>\n+     */\n     public float getResultValue() {\n-        // For now, add all modifiers and multiply by all multipliers. Negative modifiers cap to zero, but negative\n-        // multipliers remain.\n-\n-        float result = baseValue;\n-        TFloatIterator modifierIter = modifiers.iterator();\n-        while (modifierIter.hasNext()) {\n-            result += modifierIter.next();\n-        }\n-        result = Math.max(0, result);\n-\n-        TFloatIterator multiplierIter = multipliers.iterator();\n-        while (multiplierIter.hasNext()) {\n-            result *= multiplierIter.next();\n-        }\n-\n-        final TFloatIterator postModifierIter = postModifiers.iterator();\n-        while (postModifierIter.hasNext()) {\n-            result += postModifierIter.next();\n-        }\n-        return result;\n+        //TODO(skaldarnar): Based on a discussion in https://github.com/MovingBlocks/Terasology/pull/4063 we may want\n+        // to lift the guarantee/restriction that the result value needs to be non-negative. Systems are still free to\n+        // apply this restriction if needed.\n+        return Math.max(0, baseValue + modifiers.sum() * product(multipliers) + postModifiers.sum());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTQzMjc5", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#pullrequestreview-453543279", "createdAt": "2020-07-22T17:41:21Z", "commit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MToyMVrOG1tRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MToyMVrOG1tRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTQ0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)\n          \n          \n            \n                 * result = max(0, (<baseValue> + \u03a3 <modifier>) * \u03a0 <multiplier> + \u03a3 <postModifier>)", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#discussion_r458969448", "createdAt": "2020-07-22T17:41:21Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/entitySystem/event/AbstractValueModifiableEvent.java", "diffHunk": "@@ -44,31 +47,33 @@ public void add(float amount) {\n         modifiers.add(amount);\n     }\n \n+    /**\n+     * @deprecated please use {@link #postAdd(float)} instead.\n+     */\n+    @Deprecated\n     public void addPostMultiply(float amount) {\n+        postAdd(amount);\n+    }\n+\n+    public void postAdd(float amount) {\n         postModifiers.add(amount);\n     }\n \n+    /**\n+     * Calculates the result value from the base value and given modifiers and multipliers.\n+     * <p>\n+     * The value is calculated based on the following formula:\n+     * <pre>\n+     * result = max(0, <baseValue> + \u03a3 <modifier> * \u03a0 <multiplier> + \u03a3 <postModifier>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddfff104e6a858460ba414d417bde9a6c1f5faf"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fd27b861921f043ea5e2683f6a01de983a59e18", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/0fd27b861921f043ea5e2683f6a01de983a59e18", "committedDate": "2020-07-22T17:41:46Z", "message": "fix: correct precedence in computing result value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTc2NzM1", "url": "https://github.com/MovingBlocks/Terasology/pull/4063#pullrequestreview-454976735", "createdAt": "2020-07-24T15:22:03Z", "commit": {"oid": "0fd27b861921f043ea5e2683f6a01de983a59e18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1361, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}