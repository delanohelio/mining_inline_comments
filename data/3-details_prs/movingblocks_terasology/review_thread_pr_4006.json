{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDYwNzY2", "number": 4006, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODozODozMVrOEBIYWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOToxMToyOFrOEBIfKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjIxMzM5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODozODozMVrOGc0vBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxODozODozMVrOGc0vBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3NzMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A factory to create new <emph>block items</emph> for a {@link BlockFamily}.\n          \n          \n            \n             * A factory to create new <em>block items</em> for a {@link BlockFamily}.", "url": "https://github.com/MovingBlocks/Terasology/pull/4006#discussion_r432877319", "createdAt": "2020-05-30T18:38:31Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemFactory.java", "diffHunk": "@@ -15,68 +15,81 @@\n  */\n package org.terasology.world.block.items;\n \n+import com.google.common.base.Preconditions;\n+import com.google.common.primitives.Ints;\n import org.terasology.entitySystem.Component;\n+import org.terasology.entitySystem.ComponentContainer;\n import org.terasology.entitySystem.entity.EntityBuilder;\n import org.terasology.entitySystem.entity.EntityManager;\n import org.terasology.entitySystem.entity.EntityRef;\n-import org.terasology.entitySystem.prefab.Prefab;\n import org.terasology.logic.common.DisplayNameComponent;\n+import org.terasology.logic.common.RetainComponentsComponent;\n import org.terasology.logic.inventory.ItemComponent;\n import org.terasology.rendering.logic.LightComponent;\n import org.terasology.world.block.family.BlockFamily;\n \n+import java.util.Collections;\n import java.util.Optional;\n+import java.util.Set;\n \n /**\n+ * A factory to create new <emph>block items</emph> for a {@link BlockFamily}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24cdaf9a1a0a579b31e0623a187ab7a8e062b74"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjIzMDgzOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOToxMToyOFrOGc04Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOToxMToyOFrOGc04Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg3OTY1NQ==", "bodyText": "I feel like there should be a shorter form of that conversion. Oh, here we go:\nhttps://guava.dev/releases/snapshot/api/docs/com/google/common/primitives/SignedBytes.html#saturatedCast-long-\nsignedBytes.saturatedCast(quantity)", "url": "https://github.com/MovingBlocks/Terasology/pull/4006#discussion_r432879655", "createdAt": "2020-05-30T19:11:28Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemFactory.java", "diffHunk": "@@ -85,37 +98,145 @@ public EntityRef newInstance(BlockFamily blockFamily, int quantity) {\n         return builder.build();\n     }\n \n+    /**\n+     * Create a new block item for the given {@link BlockFamily}, with {@code blockEntity} as reference entity to retain\n+     * components from.\n+     * <p>\n+     * The item quantity defaults to 1.\n+     * <p>\n+     * Use {@link #newBuilder(BlockFamily, EntityRef, int)} if you want to modify the block item entity's properties\n+     * before it gets created.\n+     *\n+     * @param blockFamily block family to create the block item builder for\n+     * @param blockEntity reference block entity to retain components from\n+     * @return the block item entity\n+     */\n     public EntityRef newInstance(BlockFamily blockFamily, EntityRef blockEntity) {\n         if (blockFamily == null) {\n             return EntityRef.NULL;\n         }\n \n+        return createBuilder(blockFamily, blockEntity, (byte) 1).build();\n+    }\n+\n+    /**\n+     * Create a new block item builder for the given {@link BlockFamily} and item quantity.\n+     * <p>\n+     * Attempts to resolve the corresponding block prefab to retrieve a list of potential components to add.\n+     * <p>\n+     * Use this method if you want to modify the block item entity's properties before it gets created.\n+     *\n+     * @param blockFamily block family to create the block item builder for\n+     * @param quantity item quantity (see {@link ItemComponent#stackCount}); constrained to [0...128)\n+     * @return a pre-populated entity builder for a block item entity\n+     */\n+    public EntityBuilder newBuilder(BlockFamily blockFamily, int quantity) {\n+        final ComponentContainer components =\n+                blockFamily.getArchetypeBlock().getPrefab()\n+                        .map(p -> ((ComponentContainer) p))\n+                        .orElse(EntityRef.NULL);\n+\n+        return createBuilder(blockFamily, components, (byte) Ints.constrainToRange(quantity, 0, Byte.MAX_VALUE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24cdaf9a1a0a579b31e0623a187ab7a8e062b74"}, "originalPosition": 160}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 486, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}