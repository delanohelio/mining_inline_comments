{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTYxNDU0", "number": 4008, "title": "Update Groovy Wrapper, make Java 8 warning milder, and add `groovyw module init`", "bodyText": "Bit of a rush trying to fit all this in available time, so could probably use a quick round of cleanup / polish. Did remember to use the fancy commit naming at least! In short:\n\nFixes #3975 (maybe?) by making the Java 8 check more mild. Still tied to Java 8 specifically but suggests 9-11 will be OK and just try 8 if anything seems weird\nFurther improves @keturn's great effort in getting the Groovy Wrapper working with Gradle 6.4 (see MovingBlocks/groovy-wrapper#4 and the one commit I added), now formally released as the Groovy Wrapper v2.0.0\nAdds groovyw module init or maybe more interestingly groovyw module init iota|omega which will fetch a named module set based on the Index, or default to just CoreSampleGameplay.\n\nNot sure if the default is really worth it since it is the exact same as groovyw module get CoreSampleGameplay but I couldn't think of what else to make it do \ud83e\udd14 Probably defaulting to Iota is too much? Yet it doesn't do much else. Would be nice if it was just groovyw init and/or did more stuff\n\n\n\nHaven't tested on different systems yet, so that'd be nice. To test:\n\nMake sure if in a workspace with no source modules that a warning gets printed in red, and if using something newer than Java 8 that a different but milder note gets logged\nMake sure that the groovyw command will execute even on a clean system (no cached Gradle wrapper files - first update required gradlew to run at least once before groovyw)\nSee if groovyw module init or groovyw module init iota does its thing. Or even Omega but that may take a little while!\n\nThanks bunches to @keturn for sorting out the Groovy Wrapper issue in the first place, I just made it more formal.\nOn a related note the game handles the total lack of modules decently. Found one small UI thing that could be improved, will submit issue tomorrow\nOutstanding: Update docs to mention the init task and the need to run something to get modules before starting dev work (at least in most cases)\nCurious: Since I'm often short on time I often end up producing low quality code when I do manage to throw something together. If it is in need of relatively simple (but possibly slightly time consuming due to completeness) refactoring for quality reasons, would it be fair to immediately submit a quick GFI issue to get that handled later / give some junior types an opening to do something relatively easy? \ud83e\udd14", "createdAt": "2020-05-31T04:56:35Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4008", "merged": true, "mergeCommit": {"oid": "c08bc73bef7f18ce6db715eb2d2b4bd5651b251e"}, "closed": true, "closedAt": "2020-06-03T04:03:21Z", "author": {"login": "Cervator"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmoz53AFqTQyMTQ3NjU3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcngkgfABqjM0MDAyMTk1MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDc2NTcy", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#pullrequestreview-421476572", "createdAt": "2020-05-31T09:23:56Z", "commit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOToyMzo1NlrOGc3yPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowNzowN1rOGc3_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzI5Mg==", "bodyText": "If it is only a milder message, why still printing it out as Styel.FailureHeader - how about an orange/yellow warning instead?\nAlso, I'm not sure we actually still need this. We can set the source and target language level, and I think compiling with Gradle will spit out any errors in that regard..\nSee https://docs.gradle.org/current/userguide/java_plugin.html#sec:java-extension\n// Set the expected module Java level (can use a higher Java to run, but should not use features from a higher Java)\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432927292", "createdAt": "2020-05-31T09:23:56Z", "author": {"login": "skaldarnar"}, "path": "build.gradle", "diffHunk": "@@ -64,7 +64,7 @@ import static org.gradle.internal.logging.text.StyledTextOutput.Style\n // Check for Java 8\n if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n     def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n-    out.withStyle(Style.FailureHeader).println(\"WARNING: You're compiling with a JDK newer than Java 8, this may not be fully supported for Terasology, consider adjusting your JAVA_HOME accordingly\")\n+    out.withStyle(Style.FailureHeader).println(\"NOTE: You're compiling with a JDK newer than 8. While we believe Java 9-11 to be safe to use, newer versions than that may cause issues. If you encounter any oddities try to see if they persist with Java 8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkxNQ==", "bodyText": "I'd like to vote for more concise logging messages:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n          \n          \n            \n                            println \"[init] Checkout default module distribution\"\n          \n      \n    \n    \n  \n\nMore details should appear in groovyw usage.\nAlso, why did you choose to go for get and not recurse for CoreSampleGameplay. In the end, this is for developers, and we have convenience to keep modules up-to-date: groovyw module update-all", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432929915", "createdAt": "2020-05-31T09:57:43Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Doing an init of a given module distro: \" + targetModuleDistro\n          \n          \n            \n                            println \"[init] Checkout module distribution: '$targetModuleDistro'\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432929935", "createdAt": "2020-05-31T09:57:55Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDE3MQ==", "bodyText": "If something goes wrong, this prints a very verobse message (imho)\n\nDistro URL https://raw.githubusercontent.com/Terasology/Index/master/distros/jota/gradle.properties does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\n\nI would slim this down and split it up a bit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n          \n          \n            \n                                println \"[init] Invalid distribution name: '$targetModuleDistro'\"\n          \n          \n            \n                                println \"[init]     See https://github.com/Terasology/Index/tree/master/distros for available distributions\n          \n      \n    \n    \n  \n\nAs follow-up improvement, we could just fetch the list of supported distros dynamically:\n\n[init] Invalid distribution name: \"jota\"\n[init]     Available distributions: [awt, iota, omega]", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930171", "createdAt": "2020-05-31T10:01:04Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDQ5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"\n          \n          \n            \n                                println \"[init] ERROR: Distribution does not contain key: '$moduleSnippet'\"\n          \n      \n    \n    \n  \n\nPossibly also add where to report errors or target PRs against:\n                    println \"[init]     Report an issue: https://github.com/Terasology/Index/issues\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930496", "createdAt": "2020-05-31T10:05:01Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n+                    break\n+                }\n+                String distroContent = new URL(targetDistroURL).text\n+                String moduleSnippet = \"extraModules=\"\n+                int someIndex = distroContent.indexOf(moduleSnippet)\n+                if (someIndex != -1) {\n+                    moduleLine = distroContent.substring((someIndex + moduleSnippet.length()), distroContent.indexOf(\"\\n\", someIndex))\n+                    common.retrieve(moduleLine.split(\",\"), false)\n+                } else {\n+                    println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDYzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Too many arguments! Init only does a single given module distro. Use `get` or `recurse` for multiple arbitrary modules. See `groovyw usage`\"\n          \n          \n            \n                            println \"[init] Too many arguments! Usage: 'grooyw module init [distribution]'\"\n          \n          \n            \n                            println \"[init]     See `groovyw usage` for more information.\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930633", "createdAt": "2020-05-31T10:07:07Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n+                    break\n+                }\n+                String distroContent = new URL(targetDistroURL).text\n+                String moduleSnippet = \"extraModules=\"\n+                int someIndex = distroContent.indexOf(moduleSnippet)\n+                if (someIndex != -1) {\n+                    moduleLine = distroContent.substring((someIndex + moduleSnippet.length()), distroContent.indexOf(\"\\n\", someIndex))\n+                    common.retrieve(moduleLine.split(\",\"), false)\n+                } else {\n+                    println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"\n+                }\n+            } else {\n+                println \"Too many arguments! Init only does a single given module distro. Use `get` or `recurse` for multiple arbitrary modules. See `groovyw usage`\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTIzOTIy", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#pullrequestreview-421523922", "createdAt": "2020-05-31T20:08:56Z", "commit": {"oid": "412dba32773b8cedaf63e0f120767da155f6d4c0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMDowODo1NlrOGc6-3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMDowODo1NlrOGc6-3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTY3OA==", "bodyText": "Aren't Java 1.8 and Java 9 != JavaVersion.VERSION_11? \ud83e\uddd0 Did you test that with Java 8 and 9?", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432979678", "createdAt": "2020-05-31T20:08:56Z", "author": {"login": "skaldarnar"}, "path": "build.gradle", "diffHunk": "@@ -62,9 +62,9 @@ import org.gradle.internal.logging.text.StyledTextOutputFactory\n import static org.gradle.internal.logging.text.StyledTextOutput.Style\n \n // Check for Java 8\n-if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n+if(JavaVersion.current() != JavaVersion.VERSION_11){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412dba32773b8cedaf63e0f120767da155f6d4c0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "902aff82a18e2d38fa4a5dd458f24e85facf9537", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/902aff82a18e2d38fa4a5dd458f24e85facf9537", "committedDate": "2020-06-03T03:03:52Z", "message": "chore: Update to Groovy Wrapper 2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "951c3d932cbe7e384ef856408b72bcbe11dedb33", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/951c3d932cbe7e384ef856408b72bcbe11dedb33", "committedDate": "2020-06-03T03:03:52Z", "message": "chore: Update warning for Java > 8 to be milder, at least for the 9-11 range"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d41c179087f9be22554cfe1b995388541dc387bb", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/d41c179087f9be22554cfe1b995388541dc387bb", "committedDate": "2020-06-03T03:03:52Z", "message": "feat: New Groovy utility command to grab named sets of source modules plus tell user if they have no source modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5ae9889324d340ddcc29134afaf1a01b12613d", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/0d5ae9889324d340ddcc29134afaf1a01b12613d", "committedDate": "2020-06-03T03:03:52Z", "message": "chore: Delete obsolete IntelliJ bat file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c08bc73bef7f18ce6db715eb2d2b4bd5651b251e", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/c08bc73bef7f18ce6db715eb2d2b4bd5651b251e", "committedDate": "2020-06-03T03:03:52Z", "message": "chore: Improve logging\n\nchore: Improve logging further\n\nFix logic and also ignore Sonar linting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "159a731b191a3ddbfed01c0d7a00ac5f655a0016", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/159a731b191a3ddbfed01c0d7a00ac5f655a0016", "committedDate": "2020-06-03T02:20:29Z", "message": "chore: Improve logging further"}, "afterCommit": {"oid": "c08bc73bef7f18ce6db715eb2d2b4bd5651b251e", "author": {"user": {"login": "Cervator", "name": "Rasmus Praestholm"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/c08bc73bef7f18ce6db715eb2d2b4bd5651b251e", "committedDate": "2020-06-03T03:03:52Z", "message": "chore: Improve logging\n\nchore: Improve logging further\n\nFix logic and also ignore Sonar linting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1625, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}