{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzU0MTc4", "number": 4235, "title": "feature(autoconfig): migrate SystemConfig", "bodyText": "Contains\nMigration SystemConfig to AutoConfig\nMust merge with (Terasology/ModuleTestingEnvironment#28)\nHow to test\n\nstart game\nchange system settings\nrestart game(with exit from game)\nShould works fine, without warnings about configs and settings must changed after restart.", "createdAt": "2020-11-06T13:48:25Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4235", "merged": true, "mergeCommit": {"oid": "717605a16d3015a43029678282358a2491521e88"}, "closed": true, "closedAt": "2021-03-09T20:34:08Z", "author": {"login": "DarkWeird"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaKmOSAFqTUyNTY0OTEzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeBixbAAFqTYwNzk0OTc0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQ5MTM5", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-525649139", "createdAt": "2020-11-07T12:15:24Z", "commit": {"oid": "b7cd86bc95416aa3b2316a30dbde9d58af2b37f7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjoxNToyNVrOHvHt4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMjoxNzo0N1rOHvHukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3MTU1NA==", "bodyText": "Where do these default values come from?", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r519171554", "createdAt": "2020-11-07T12:15:25Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/config/SystemConfig.java", "diffHunk": "@@ -16,99 +16,63 @@\n \n package org.terasology.config;\n \n+import org.terasology.config.flexible.AutoConfig;\n+import org.terasology.config.flexible.Setting;\n+import org.terasology.config.flexible.constraints.NumberRangeConstraint;\n+\n import java.util.Locale;\n import java.util.Locale.Category;\n \n-public class SystemConfig {\n+import static org.terasology.config.flexible.SettingArgument.constraint;\n+import static org.terasology.config.flexible.SettingArgument.defaultValue;\n+import static org.terasology.config.flexible.SettingArgument.type;\n+\n+public class SystemConfig extends AutoConfig {\n     public static final String SAVED_GAMES_ENABLED_PROPERTY = \"org.terasology.savedGamesEnabled\";\n     public static final String PERMISSIVE_SECURITY_ENABLED_PROPERTY = \"org.terasology.permissiveSecurityEnabled\";\n \n-    private long dayNightLengthInMs;\n-    private int maxThreads;\n-    private int maxSecondsBetweenSaves;\n-    private int maxUnloadedChunksPercentageTillSave;\n-    private boolean debugEnabled;\n-    private boolean monitoringEnabled;\n-    private boolean writeSaveGamesEnabled;\n-    private long chunkGenerationFailTimeoutInMs;\n-    private String locale;\n-\n-    public long getDayNightLengthInMs() {\n-        return dayNightLengthInMs;\n-    }\n-\n-    public void setDayNightLengthInMs(long dayNightLengthInMs) {\n-        this.dayNightLengthInMs = dayNightLengthInMs;\n-    }\n-\n-    public int getMaxThreads() {\n-        return maxThreads;\n-    }\n-\n-    public void setMaxThreads(int maxThreads) {\n-        this.maxThreads = maxThreads;\n-    }\n-\n-    public int getMaxSecondsBetweenSaves() {\n-        return maxSecondsBetweenSaves;\n-    }\n-\n-    public void setMaxSecondsBetweenSaves(int maxSecondsBetweenSaves) {\n-        this.maxSecondsBetweenSaves = maxSecondsBetweenSaves;\n-    }\n-\n-    public int getMaxUnloadedChunksPercentageTillSave() {\n-        return maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public void setMaxUnloadedChunksPercentageTillSave(int maxUnloadedChunksPercentageTillSave) {\n-        this.maxUnloadedChunksPercentageTillSave = maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public boolean isDebugEnabled() {\n-        return debugEnabled;\n-    }\n-\n-    public void setDebugEnabled(boolean debugEnabled) {\n-        this.debugEnabled = debugEnabled;\n-    }\n-\n-    public boolean isMonitoringEnabled() {\n-        return monitoringEnabled;\n-    }\n-\n-    public void setMonitoringEnabled(boolean monitoringEnabled) {\n-        this.monitoringEnabled = monitoringEnabled;\n-    }\n-\n-    public boolean isWriteSaveGamesEnabled() {\n-        String property = System.getProperty(SAVED_GAMES_ENABLED_PROPERTY);\n-        if (property != null) {\n-            return Boolean.parseBoolean(property);\n-        }\n-        return writeSaveGamesEnabled;\n-    }\n-\n-    public void setWriteSaveGamesEnabled(boolean writeSaveGamesEnabled) {\n-        this.writeSaveGamesEnabled = writeSaveGamesEnabled;\n-    }\n-\n-    public long getChunkGenerationFailTimeoutInMs() {\n-        return chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public void setChunkGenerationFailTimeoutInMs(long chunkGenerationFailTimeoutInMs) {\n-        this.chunkGenerationFailTimeoutInMs = chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public Locale getLocale() {\n-        if (locale == null) {\n-            setLocale(Locale.getDefault(Category.DISPLAY));\n-        }\n-        return Locale.forLanguageTag(locale);\n-    }\n-\n-    public void setLocale(Locale locale) {\n-        this.locale = locale.toLanguageTag();\n-    }\n+    public final Setting<Long> dayNightLengthInMs = setting(\n+            type(Long.class),\n+            defaultValue(1800000L),\n+            constraint(new NumberRangeConstraint<>(0L, Long.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxThreads = setting(\n+            type(Integer.class),\n+            defaultValue(Runtime.getRuntime().availableProcessors() - 1),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7cd86bc95416aa3b2316a30dbde9d58af2b37f7"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3MTYyOA==", "bodyText": "If this is about percentage, shouldn't the range constraint be [0...100]?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n          \n          \n            \n                        constraint(new NumberRangeConstraint<>(0, 100, false, false))", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r519171628", "createdAt": "2020-11-07T12:16:25Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/config/SystemConfig.java", "diffHunk": "@@ -16,99 +16,63 @@\n \n package org.terasology.config;\n \n+import org.terasology.config.flexible.AutoConfig;\n+import org.terasology.config.flexible.Setting;\n+import org.terasology.config.flexible.constraints.NumberRangeConstraint;\n+\n import java.util.Locale;\n import java.util.Locale.Category;\n \n-public class SystemConfig {\n+import static org.terasology.config.flexible.SettingArgument.constraint;\n+import static org.terasology.config.flexible.SettingArgument.defaultValue;\n+import static org.terasology.config.flexible.SettingArgument.type;\n+\n+public class SystemConfig extends AutoConfig {\n     public static final String SAVED_GAMES_ENABLED_PROPERTY = \"org.terasology.savedGamesEnabled\";\n     public static final String PERMISSIVE_SECURITY_ENABLED_PROPERTY = \"org.terasology.permissiveSecurityEnabled\";\n \n-    private long dayNightLengthInMs;\n-    private int maxThreads;\n-    private int maxSecondsBetweenSaves;\n-    private int maxUnloadedChunksPercentageTillSave;\n-    private boolean debugEnabled;\n-    private boolean monitoringEnabled;\n-    private boolean writeSaveGamesEnabled;\n-    private long chunkGenerationFailTimeoutInMs;\n-    private String locale;\n-\n-    public long getDayNightLengthInMs() {\n-        return dayNightLengthInMs;\n-    }\n-\n-    public void setDayNightLengthInMs(long dayNightLengthInMs) {\n-        this.dayNightLengthInMs = dayNightLengthInMs;\n-    }\n-\n-    public int getMaxThreads() {\n-        return maxThreads;\n-    }\n-\n-    public void setMaxThreads(int maxThreads) {\n-        this.maxThreads = maxThreads;\n-    }\n-\n-    public int getMaxSecondsBetweenSaves() {\n-        return maxSecondsBetweenSaves;\n-    }\n-\n-    public void setMaxSecondsBetweenSaves(int maxSecondsBetweenSaves) {\n-        this.maxSecondsBetweenSaves = maxSecondsBetweenSaves;\n-    }\n-\n-    public int getMaxUnloadedChunksPercentageTillSave() {\n-        return maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public void setMaxUnloadedChunksPercentageTillSave(int maxUnloadedChunksPercentageTillSave) {\n-        this.maxUnloadedChunksPercentageTillSave = maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public boolean isDebugEnabled() {\n-        return debugEnabled;\n-    }\n-\n-    public void setDebugEnabled(boolean debugEnabled) {\n-        this.debugEnabled = debugEnabled;\n-    }\n-\n-    public boolean isMonitoringEnabled() {\n-        return monitoringEnabled;\n-    }\n-\n-    public void setMonitoringEnabled(boolean monitoringEnabled) {\n-        this.monitoringEnabled = monitoringEnabled;\n-    }\n-\n-    public boolean isWriteSaveGamesEnabled() {\n-        String property = System.getProperty(SAVED_GAMES_ENABLED_PROPERTY);\n-        if (property != null) {\n-            return Boolean.parseBoolean(property);\n-        }\n-        return writeSaveGamesEnabled;\n-    }\n-\n-    public void setWriteSaveGamesEnabled(boolean writeSaveGamesEnabled) {\n-        this.writeSaveGamesEnabled = writeSaveGamesEnabled;\n-    }\n-\n-    public long getChunkGenerationFailTimeoutInMs() {\n-        return chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public void setChunkGenerationFailTimeoutInMs(long chunkGenerationFailTimeoutInMs) {\n-        this.chunkGenerationFailTimeoutInMs = chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public Locale getLocale() {\n-        if (locale == null) {\n-            setLocale(Locale.getDefault(Category.DISPLAY));\n-        }\n-        return Locale.forLanguageTag(locale);\n-    }\n-\n-    public void setLocale(Locale locale) {\n-        this.locale = locale.toLanguageTag();\n-    }\n+    public final Setting<Long> dayNightLengthInMs = setting(\n+            type(Long.class),\n+            defaultValue(1800000L),\n+            constraint(new NumberRangeConstraint<>(0L, Long.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxThreads = setting(\n+            type(Integer.class),\n+            defaultValue(Runtime.getRuntime().availableProcessors() - 1),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxSecondsBetweenSaves = setting(\n+            type(Integer.class),\n+            defaultValue(60),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxUnloadedChunksPercentageTillSave = setting(\n+            type(Integer.class),\n+            defaultValue(40),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7cd86bc95416aa3b2316a30dbde9d58af2b37f7"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE3MTczMA==", "bodyText": "I think this should be false - normal players should not see the debug info by default. (Assuming this is about the in-game debug view...)", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r519171730", "createdAt": "2020-11-07T12:17:47Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/config/SystemConfig.java", "diffHunk": "@@ -16,99 +16,63 @@\n \n package org.terasology.config;\n \n+import org.terasology.config.flexible.AutoConfig;\n+import org.terasology.config.flexible.Setting;\n+import org.terasology.config.flexible.constraints.NumberRangeConstraint;\n+\n import java.util.Locale;\n import java.util.Locale.Category;\n \n-public class SystemConfig {\n+import static org.terasology.config.flexible.SettingArgument.constraint;\n+import static org.terasology.config.flexible.SettingArgument.defaultValue;\n+import static org.terasology.config.flexible.SettingArgument.type;\n+\n+public class SystemConfig extends AutoConfig {\n     public static final String SAVED_GAMES_ENABLED_PROPERTY = \"org.terasology.savedGamesEnabled\";\n     public static final String PERMISSIVE_SECURITY_ENABLED_PROPERTY = \"org.terasology.permissiveSecurityEnabled\";\n \n-    private long dayNightLengthInMs;\n-    private int maxThreads;\n-    private int maxSecondsBetweenSaves;\n-    private int maxUnloadedChunksPercentageTillSave;\n-    private boolean debugEnabled;\n-    private boolean monitoringEnabled;\n-    private boolean writeSaveGamesEnabled;\n-    private long chunkGenerationFailTimeoutInMs;\n-    private String locale;\n-\n-    public long getDayNightLengthInMs() {\n-        return dayNightLengthInMs;\n-    }\n-\n-    public void setDayNightLengthInMs(long dayNightLengthInMs) {\n-        this.dayNightLengthInMs = dayNightLengthInMs;\n-    }\n-\n-    public int getMaxThreads() {\n-        return maxThreads;\n-    }\n-\n-    public void setMaxThreads(int maxThreads) {\n-        this.maxThreads = maxThreads;\n-    }\n-\n-    public int getMaxSecondsBetweenSaves() {\n-        return maxSecondsBetweenSaves;\n-    }\n-\n-    public void setMaxSecondsBetweenSaves(int maxSecondsBetweenSaves) {\n-        this.maxSecondsBetweenSaves = maxSecondsBetweenSaves;\n-    }\n-\n-    public int getMaxUnloadedChunksPercentageTillSave() {\n-        return maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public void setMaxUnloadedChunksPercentageTillSave(int maxUnloadedChunksPercentageTillSave) {\n-        this.maxUnloadedChunksPercentageTillSave = maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public boolean isDebugEnabled() {\n-        return debugEnabled;\n-    }\n-\n-    public void setDebugEnabled(boolean debugEnabled) {\n-        this.debugEnabled = debugEnabled;\n-    }\n-\n-    public boolean isMonitoringEnabled() {\n-        return monitoringEnabled;\n-    }\n-\n-    public void setMonitoringEnabled(boolean monitoringEnabled) {\n-        this.monitoringEnabled = monitoringEnabled;\n-    }\n-\n-    public boolean isWriteSaveGamesEnabled() {\n-        String property = System.getProperty(SAVED_GAMES_ENABLED_PROPERTY);\n-        if (property != null) {\n-            return Boolean.parseBoolean(property);\n-        }\n-        return writeSaveGamesEnabled;\n-    }\n-\n-    public void setWriteSaveGamesEnabled(boolean writeSaveGamesEnabled) {\n-        this.writeSaveGamesEnabled = writeSaveGamesEnabled;\n-    }\n-\n-    public long getChunkGenerationFailTimeoutInMs() {\n-        return chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public void setChunkGenerationFailTimeoutInMs(long chunkGenerationFailTimeoutInMs) {\n-        this.chunkGenerationFailTimeoutInMs = chunkGenerationFailTimeoutInMs;\n-    }\n-\n-    public Locale getLocale() {\n-        if (locale == null) {\n-            setLocale(Locale.getDefault(Category.DISPLAY));\n-        }\n-        return Locale.forLanguageTag(locale);\n-    }\n-\n-    public void setLocale(Locale locale) {\n-        this.locale = locale.toLanguageTag();\n-    }\n+    public final Setting<Long> dayNightLengthInMs = setting(\n+            type(Long.class),\n+            defaultValue(1800000L),\n+            constraint(new NumberRangeConstraint<>(0L, Long.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxThreads = setting(\n+            type(Integer.class),\n+            defaultValue(Runtime.getRuntime().availableProcessors() - 1),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxSecondsBetweenSaves = setting(\n+            type(Integer.class),\n+            defaultValue(60),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Integer> maxUnloadedChunksPercentageTillSave = setting(\n+            type(Integer.class),\n+            defaultValue(40),\n+            constraint(new NumberRangeConstraint<>(0, Integer.MAX_VALUE, false, false))\n+    );\n+    public final Setting<Boolean> debugEnabled = setting(\n+            type(Boolean.class),\n+            defaultValue(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7cd86bc95416aa3b2316a30dbde9d58af2b37f7"}, "originalPosition": 130}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjYzODcy", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-525663872", "createdAt": "2020-11-07T16:21:30Z", "commit": {"oid": "82b994c8d1dec73a31b59fe04cbd65af9d58d8bf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNjoyMTozMVrOHvJCFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxNjoyMTozMVrOHvJCFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE5MzExMA==", "bodyText": "I don't know how important the overriding of this setting is, but if this is something we encounter frequently it might be worth looking into adding an overriding feature into AutoConfig or the setting UI. For now we might get away with setting this as the default value of the Setting, but we'll need expert opinion on how this case should be handled.", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r519193110", "createdAt": "2020-11-07T16:21:31Z", "author": {"login": "eviltak"}, "path": "engine/src/main/java/org/terasology/config/SystemConfig.java", "diffHunk": "@@ -16,99 +16,63 @@\n \n package org.terasology.config;\n \n+import org.terasology.config.flexible.AutoConfig;\n+import org.terasology.config.flexible.Setting;\n+import org.terasology.config.flexible.constraints.NumberRangeConstraint;\n+\n import java.util.Locale;\n import java.util.Locale.Category;\n \n-public class SystemConfig {\n+import static org.terasology.config.flexible.SettingArgument.constraint;\n+import static org.terasology.config.flexible.SettingArgument.defaultValue;\n+import static org.terasology.config.flexible.SettingArgument.type;\n+\n+public class SystemConfig extends AutoConfig {\n     public static final String SAVED_GAMES_ENABLED_PROPERTY = \"org.terasology.savedGamesEnabled\";\n     public static final String PERMISSIVE_SECURITY_ENABLED_PROPERTY = \"org.terasology.permissiveSecurityEnabled\";\n \n-    private long dayNightLengthInMs;\n-    private int maxThreads;\n-    private int maxSecondsBetweenSaves;\n-    private int maxUnloadedChunksPercentageTillSave;\n-    private boolean debugEnabled;\n-    private boolean monitoringEnabled;\n-    private boolean writeSaveGamesEnabled;\n-    private long chunkGenerationFailTimeoutInMs;\n-    private String locale;\n-\n-    public long getDayNightLengthInMs() {\n-        return dayNightLengthInMs;\n-    }\n-\n-    public void setDayNightLengthInMs(long dayNightLengthInMs) {\n-        this.dayNightLengthInMs = dayNightLengthInMs;\n-    }\n-\n-    public int getMaxThreads() {\n-        return maxThreads;\n-    }\n-\n-    public void setMaxThreads(int maxThreads) {\n-        this.maxThreads = maxThreads;\n-    }\n-\n-    public int getMaxSecondsBetweenSaves() {\n-        return maxSecondsBetweenSaves;\n-    }\n-\n-    public void setMaxSecondsBetweenSaves(int maxSecondsBetweenSaves) {\n-        this.maxSecondsBetweenSaves = maxSecondsBetweenSaves;\n-    }\n-\n-    public int getMaxUnloadedChunksPercentageTillSave() {\n-        return maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public void setMaxUnloadedChunksPercentageTillSave(int maxUnloadedChunksPercentageTillSave) {\n-        this.maxUnloadedChunksPercentageTillSave = maxUnloadedChunksPercentageTillSave;\n-    }\n-\n-    public boolean isDebugEnabled() {\n-        return debugEnabled;\n-    }\n-\n-    public void setDebugEnabled(boolean debugEnabled) {\n-        this.debugEnabled = debugEnabled;\n-    }\n-\n-    public boolean isMonitoringEnabled() {\n-        return monitoringEnabled;\n-    }\n-\n-    public void setMonitoringEnabled(boolean monitoringEnabled) {\n-        this.monitoringEnabled = monitoringEnabled;\n-    }\n-\n-    public boolean isWriteSaveGamesEnabled() {\n-        String property = System.getProperty(SAVED_GAMES_ENABLED_PROPERTY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82b994c8d1dec73a31b59fe04cbd65af9d58d8bf"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6af4441c2f34ce22ffa91959bf799a76a7dc79a", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f6af4441c2f34ce22ffa91959bf799a76a7dc79a", "committedDate": "2021-02-14T02:02:07Z", "message": "feature(autoconfig): migrate SystemConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273528850e847ee0281a14cfbea8216909e3da78", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/273528850e847ee0281a14cfbea8216909e3da78", "committedDate": "2021-02-14T02:02:10Z", "message": "feature(autoconfig): add LocaleTypeHandler to AutoConfigManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f55c867e037ff85c73c2e3623eb0cbf8471c5a22", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f55c867e037ff85c73c2e3623eb0cbf8471c5a22", "committedDate": "2021-02-14T02:02:10Z", "message": "Update engine/src/main/java/org/terasology/config/SystemConfig.java\n\nCo-authored-by: Tobias Nett <skaldarnar@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "951b81d718650192260742957ff24dbc948ebd5e", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/951b81d718650192260742957ff24dbc948ebd5e", "committedDate": "2021-02-14T02:02:10Z", "message": "feature(autoconfig): add systemProperty values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf5652aa86b9a675e49872381c4670e0e48b87a9", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/cf5652aa86b9a675e49872381c4670e0e48b87a9", "committedDate": "2021-02-14T02:02:10Z", "message": "feature(autoconfig): add systemProperty values tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f2aab126e32c28ac3ce3904fcde4b1fde05091", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/b8f2aab126e32c28ac3ce3904fcde4b1fde05091", "committedDate": "2021-02-14T02:02:10Z", "message": "fix(autoconfig): set default value for debug - false"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71206085e9d596b7257de7ce8a59672a0cfbc1a4", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/71206085e9d596b7257de7ce8a59672a0cfbc1a4", "committedDate": "2021-02-14T02:02:10Z", "message": "chore(autoconfig): reformat SystemConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee897c8a2d3a9314c392420911ee4b3a3369205d", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/ee897c8a2d3a9314c392420911ee4b3a3369205d", "committedDate": "2020-11-09T21:04:52Z", "message": "Merge branch 'develop' into feature/auto-system-config"}, "afterCommit": {"oid": "71206085e9d596b7257de7ce8a59672a0cfbc1a4", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/71206085e9d596b7257de7ce8a59672a0cfbc1a4", "committedDate": "2021-02-14T02:02:10Z", "message": "chore(autoconfig): reformat SystemConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMDEwNDcx", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-590010471", "createdAt": "2021-02-14T02:46:49Z", "commit": {"oid": "71206085e9d596b7257de7ce8a59672a0cfbc1a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQwMjo0Njo0OVrOIlElYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNFQwMjo0Njo0OVrOIlElYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTc0MzMzMQ==", "bodyText": "isn't this a valid settings change. what are you trying to test?", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r575743331", "createdAt": "2021-02-14T02:46:49Z", "author": {"login": "pollend"}, "path": "engine-tests/src/test/java/org/terasology/config/flexible/internal/SettingImplTest.java", "diffHunk": "@@ -37,40 +24,81 @@\n     private static final SimpleUri SETTING_ID = new SimpleUri(\"engine-tests:TestSetting\");\n \n     @Nested\n-    public class SetValue {\n+    class SetValue {\n         private Setting<Integer> setting;\n \n         private int eventResult;\n \n         @BeforeEach\n         public void setUp() {\n             setting = new SettingImpl<>(\n-                TypeInfo.of(Integer.class), 50,\n+                    TypeInfo.of(Integer.class), 50,\n                     new NumberRangeConstraint<>(0, 100, false, false),\n-                    \"\", \"\");\n+                    \"\", \"\", null, null);\n \n             eventResult = -1;\n \n             setting.subscribe((setting1, oldValue) -> eventResult = setting1.get());\n         }\n \n         @Test\n-        public void testSetsValue() {\n+        void testSetsValue() {\n             assertTrue(setting.set(25));\n \n             assertEquals(25, eventResult);\n         }\n \n         @Test\n-        public void testDoesNotSetValue() {\n+        void testDoesNotSetValue() {\n             assertFalse(setting.set(101));\n \n             assertEquals(-1, eventResult);\n         }\n     }\n \n     @Nested\n-    public class Subscribers {\n+    class SystemProperty {\n+        private static final String TEST_CONFIG_SYSTEM_PROPERTY = \"foo.bar.config.value\";\n+        private static final int TEST_CONFIG_SYSTEM_PROPERTY_VALUE = 75;\n+\n+        private Setting<Integer> setting;\n+\n+        private int eventResult;\n+\n+        @BeforeEach\n+        public void setUp() {\n+            setting = new SettingImpl<>(\n+                    TypeInfo.of(Integer.class), 50,\n+                    new NumberRangeConstraint<>(0, 100, false, false),\n+                    \"\", \"\", TEST_CONFIG_SYSTEM_PROPERTY, Integer::valueOf);\n+\n+            eventResult = -1;\n+\n+            setting.subscribe((setting1, oldValue) -> eventResult = setting1.get());\n+        }\n+\n+        @Test\n+        void testSystemPropertyValue() {\n+            System.setProperty(TEST_CONFIG_SYSTEM_PROPERTY, String.valueOf(TEST_CONFIG_SYSTEM_PROPERTY_VALUE));\n+            assertEquals(75, setting.get());\n+        }\n+\n+        @Test\n+        void testSystemPropertyValueNotPresent() {\n+            System.getProperties().remove(TEST_CONFIG_SYSTEM_PROPERTY);\n+            assertEquals(50, setting.get());\n+        }\n+\n+        @Test\n+        void testDoesNotSetValue() {\n+            assertFalse(setting.set(25));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71206085e9d596b7257de7ce8a59672a0cfbc1a4"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82f01bb682596c12566e9f05897af071b7b3693", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e82f01bb682596c12566e9f05897af071b7b3693", "committedDate": "2021-02-16T08:41:06Z", "message": "Merge branch 'develop' into feature/auto-system-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/385c6b58d78f4489bd1b06233c1d3b0e4b223341", "committedDate": "2021-02-16T08:51:05Z", "message": "fix(auto-system-config): fix test `testDoesNotSetValue`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDA2MDkx", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-591406091", "createdAt": "2021-02-16T16:32:20Z", "commit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNjozMjoyMFrOImPBFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNjozNjo0MlrOImPNfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk2MjgzNw==", "bodyText": "nitpick (non-blocking): To me converter often implies that the conversion can work in both directions, and that it can be between arbitrary types. In this case (converting from String -> T) I'd call it a decoder function (the dual function T -> String would be the encoder).", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r576962837", "createdAt": "2021-02-16T16:32:20Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/config/flexible/internal/SettingBuilder.java", "diffHunk": "@@ -66,8 +55,16 @@\n     SettingBuilder<T> description(String description);\n \n     /**\n-     * Builds the {@link Setting} with the components that have already been specified and\n-     * returns it.\n+     * Specfies the system property of the {@link Setting} being created.\n+     *\n+     * @param systemProperty This system property which will rewrite value.\n+     * @param converter converter for systemProperty: String -> T", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk2NjAxNQ==", "bodyText": "thought Should we have a (private) method to check whether this setting is a system property? This might make the semantics of this method a bit more obvious:\nif (isSystemProperty()) {\n  return getSystemPropertyValue();\n} else {\n\treturn value;\n}\nIs it intended that we return the value in case the system property converter yielded a null value here?", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r576966015", "createdAt": "2021-02-16T16:36:42Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/config/flexible/internal/SettingImpl.java", "diffHunk": "@@ -137,13 +143,23 @@ public T getDefaultValue() {\n \n     @Override\n     public T get() {\n+        T systemPropertyValue = getSystemPropertyValue();\n+        if (systemPropertyValue != null) {\n+            return systemPropertyValue;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDU2NzIy", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-591456722", "createdAt": "2021-02-16T17:25:33Z", "commit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNzoyNTozM1rOImRZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQxNzozNDozMVrOImRyDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzAwMTc2Nw==", "bodyText": "Since Locale is a SDK class, can we add this type handler by default to every type handler library (and hence move it into one of the initialization methods in TypeHandlerLibrary)?", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r577001767", "createdAt": "2021-02-16T17:25:33Z", "author": {"login": "eviltak"}, "path": "engine/src/main/java/org/terasology/config/flexible/AutoConfigManager.java", "diffHunk": "@@ -48,6 +50,7 @@\n \n     public AutoConfigManager(TypeHandlerLibrary typeHandlerLibrary) {\n         this.typeHandlerLibrary = typeHandlerLibrary;\n+        typeHandlerLibrary.addTypeHandler(Locale.class, new LocaleTypeHandler());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzAwODE0Mg==", "bodyText": "Similar to above -- since Locale is a SDK class, it might be better to move this to a subpackage in org.terasology.persistence.typeHandling.", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r577008142", "createdAt": "2021-02-16T17:34:31Z", "author": {"login": "eviltak"}, "path": "engine/src/main/java/org/terasology/config/flexible/typehandling/LocaleTypeHandler.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.config.flexible.typehandling;\n+\n+import org.terasology.persistence.typeHandling.StringRepresentationTypeHandler;\n+\n+import java.util.Locale;\n+\n+/**\n+ * Locale type handler for {@link org.terasology.config.SystemConfig#locale}\n+ */\n+public class LocaleTypeHandler extends StringRepresentationTypeHandler<Locale> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385c6b58d78f4489bd1b06233c1d3b0e4b223341"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7663427a1e5ae2155eac6e6c0aee474b179d53ca", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/7663427a1e5ae2155eac6e6c0aee474b179d53ca", "committedDate": "2021-02-17T07:33:11Z", "message": "refactor(system-config): move LocaleTypeHandler to THL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17dd34dbf9a005577c6b0b547bdbc5f7d4e55c3c", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/17dd34dbf9a005577c6b0b547bdbc5f7d4e55c3c", "committedDate": "2021-02-17T08:38:38Z", "message": "refactor(system-config): replace systemProperty DSL field with override DSL field for AutoConfig's Settings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNDEyMTIz", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-592412123", "createdAt": "2021-02-17T16:53:42Z", "commit": {"oid": "17dd34dbf9a005577c6b0b547bdbc5f7d4e55c3c"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xN1QxNjo1Mzo0MlrOInAufw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xN1QxNjo1Mzo0MlrOInAufw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Nzc3NzI3OQ==", "bodyText": "Spelling: of instead of f", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#discussion_r577777279", "createdAt": "2021-02-17T16:53:42Z", "author": {"login": "eviltak"}, "path": "engine/src/main/java/org/terasology/config/flexible/internal/SettingBuilder.java", "diffHunk": "@@ -55,13 +56,11 @@\n     SettingBuilder<T> description(String description);\n \n     /**\n-     * Specfies the system property of the {@link Setting} being created.\n-     *\n-     * @param systemProperty This system property which will rewrite value.\n-     * @param converter converter for systemProperty: String -> T\n-     * @return The builder object.\n+     * Specfies the override f the {@link Setting} being created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17dd34dbf9a005577c6b0b547bdbc5f7d4e55c3c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95d076b8bee9a5dcaaa35a33c32446cc46a714f", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/d95d076b8bee9a5dcaaa35a33c32446cc46a714f", "committedDate": "2021-02-26T06:54:53Z", "message": "Merge branch 'develop' into feature/auto-system-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d13359cb10f810dda53cad627c9321f2e45abc", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f7d13359cb10f810dda53cad627c9321f2e45abc", "committedDate": "2021-02-26T11:37:57Z", "message": "refactor(system-config): fix tests, update SystemConfig to last AutoConfig state.(translations)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42caa355787d488542a3a396a61e153d27c98509", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/42caa355787d488542a3a396a61e153d27c98509", "committedDate": "2021-02-26T11:41:59Z", "message": "chore(system-config): remove system config entry from default.cfg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c0c08f6e694a92ec1c339118dc66e8596612ff1", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/4c0c08f6e694a92ec1c339118dc66e8596612ff1", "committedDate": "2021-02-26T12:01:28Z", "message": "docs(system-config): fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8c7cb7281f1bc084c3809eb21d72a54eab1fa08", "author": {"user": {"login": "DarkWeird", "name": "Nail Khanipov"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/b8c7cb7281f1bc084c3809eb21d72a54eab1fa08", "committedDate": "2021-03-01T08:34:54Z", "message": "Merge branch 'develop' into feature/auto-system-config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1ODA2MDgz", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-605806083", "createdAt": "2021-03-07T03:33:44Z", "commit": {"oid": "b8c7cb7281f1bc084c3809eb21d72a54eab1fa08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27cd22c92cfdf227c4ff6c093cbe68539d82ea4c", "author": {"user": {"login": "jdrueckert", "name": null}}, "url": "https://github.com/MovingBlocks/Terasology/commit/27cd22c92cfdf227c4ff6c093cbe68539d82ea4c", "committedDate": "2021-03-09T19:07:00Z", "message": "Merge branch 'develop' into feature/auto-system-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6c5b549546b991d34ac9cf58826235c284bd13", "author": {"user": {"login": "jdrueckert", "name": null}}, "url": "https://github.com/MovingBlocks/Terasology/commit/8b6c5b549546b991d34ac9cf58826235c284bd13", "committedDate": "2021-03-09T20:05:47Z", "message": "Merge branch 'develop' into feature/auto-system-config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3OTQ5NzQ3", "url": "https://github.com/MovingBlocks/Terasology/pull/4235#pullrequestreview-607949747", "createdAt": "2021-03-09T20:33:04Z", "commit": {"oid": "8b6c5b549546b991d34ac9cf58826235c284bd13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1285, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}