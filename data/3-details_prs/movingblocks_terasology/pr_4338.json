{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1ODU0MzY5", "number": 4338, "title": "feat: Add BlockAreaTypeHandler for serilization", "bodyText": "This adds BlockArea as a type handler to serialize and deserialize BlockAreas from components.", "createdAt": "2020-12-27T20:36:16Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4338", "merged": true, "mergeCommit": {"oid": "c9f5c0e461c6dddabb16fd56c18072b1619980c1"}, "closed": true, "closedAt": "2020-12-31T14:46:38Z", "author": {"login": "pollend"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqXpMeAH2gAyNTQ1ODU0MzY5OjkxYjBlOWUzYjExNGE1NDIzN2NiY2MyZDU2MWIwMGJjMTg4MThkYjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrlDU7AFqTU2MDQwMDYzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/91b0e9e3b114a54237cbcc2d561b00bc18818db5", "committedDate": "2020-12-27T20:34:52Z", "message": "feature -- add BlockArea Type Handler for serilization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MTU5NTU0", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#pullrequestreview-559159554", "createdAt": "2020-12-28T14:08:42Z", "commit": {"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNDowODo0MlrOIL6Ttw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNDoxMjoyNlrOIL6YCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MDU2Nw==", "bodyText": "So - was this actually never working? \ud83d\ude44", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549360567", "createdAt": "2020-12-28T14:08:42Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/RectanglefTypeHandler.java", "diffHunk": "@@ -33,7 +33,7 @@ protected PersistedData serializeNonNull(Rectanglef value, PersistedDataSerializ\n             PersistedDataMap map = data.getAsValueMap();\n \n             PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n-            PersistedDataArray maxDataArr = map.get(MIN_FIELD).getAsArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MTUyOQ==", "bodyText": "As you are using 'setSize(...)` you don't need to do any computation here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new BlockArea(\n          \n          \n            \n                                    minArr.get(0), minArr.get(1)).setSize(\n          \n          \n            \n                                    minArr.get(0) + sizeArr.get(0),\n          \n          \n            \n                                    minArr.get(1) + sizeArr.get(1)));\n          \n          \n            \n                                new BlockArea(minArr.get(0), minArr.get(1))\n          \n          \n            \n                                \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549361529", "createdAt": "2020-12-28T14:12:02Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreaTypeHandler.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.persistence.typeHandling.mathTypes;\n+\n+import com.google.common.collect.Maps;\n+import gnu.trove.list.TIntList;\n+import org.terasology.persistence.typeHandling.PersistedData;\n+import org.terasology.persistence.typeHandling.PersistedDataArray;\n+import org.terasology.persistence.typeHandling.PersistedDataMap;\n+import org.terasology.persistence.typeHandling.PersistedDataSerializer;\n+import org.terasology.persistence.typeHandling.TypeHandler;\n+import org.terasology.world.block.BlockArea;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class BlockAreaTypeHandler extends TypeHandler<BlockArea> {\n+    private static final String MIN_FIELD = \"min\";\n+    private static final String MAX_FIELD = \"max\";\n+    private static final String SIZE_FIELD = \"size\";\n+\n+    @Override\n+    protected PersistedData serializeNonNull(BlockArea value, PersistedDataSerializer serializer) {\n+        Map<String, PersistedData> map = Maps.newLinkedHashMap();\n+        map.put(MIN_FIELD, serializer.serialize(value.minX(), value.minY()));\n+        map.put(MAX_FIELD, serializer.serialize(value.maxX(), value.maxY()));\n+        return serializer.serialize(map);\n+    }\n+\n+    @Override\n+    public Optional<BlockArea> deserialize(PersistedData data) {\n+        if (!data.isNull() && data.isValueMap()) {\n+            PersistedDataMap map = data.getAsValueMap();\n+\n+            PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n+            TIntList minArr = minDataArr.getAsIntegerArray();\n+            if (map.has(SIZE_FIELD)) {\n+                PersistedDataArray sizedataArray = map.get(SIZE_FIELD).getAsArray();\n+                TIntList sizeArr = sizedataArray.getAsIntegerArray();\n+                return Optional.of(\n+                    new BlockArea(\n+                        minArr.get(0), minArr.get(1)).setSize(\n+                        minArr.get(0) + sizeArr.get(0),\n+                        minArr.get(1) + sizeArr.get(1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MTY3Mg==", "bodyText": "Same here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new BlockArea(\n          \n          \n            \n                                    minArr.get(0), minArr.get(1)).setSize(\n          \n          \n            \n                                    minArr.get(0) + sizeArr.get(0),\n          \n          \n            \n                                    minArr.get(1) + sizeArr.get(1)));\n          \n          \n            \n                                new BlockArea(minArr.get(0), minArr.get(1))\n          \n          \n            \n                                \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549361672", "createdAt": "2020-12-28T14:12:26Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreacTypeHandler.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.persistence.typeHandling.mathTypes;\n+\n+import com.google.common.collect.Maps;\n+import gnu.trove.list.TIntList;\n+import org.terasology.persistence.typeHandling.PersistedData;\n+import org.terasology.persistence.typeHandling.PersistedDataArray;\n+import org.terasology.persistence.typeHandling.PersistedDataMap;\n+import org.terasology.persistence.typeHandling.PersistedDataSerializer;\n+import org.terasology.persistence.typeHandling.TypeHandler;\n+import org.terasology.world.block.BlockArea;\n+import org.terasology.world.block.BlockAreac;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class BlockAreacTypeHandler extends TypeHandler<BlockAreac> {\n+    private static final String MIN_FIELD = \"min\";\n+    private static final String MAX_FIELD = \"max\";\n+    private static final String SIZE_FIELD = \"size\";\n+\n+    @Override\n+    protected PersistedData serializeNonNull(BlockAreac value, PersistedDataSerializer serializer) {\n+        Map<String, PersistedData> map = Maps.newLinkedHashMap();\n+        map.put(MIN_FIELD, serializer.serialize(value.minX(), value.minY()));\n+        map.put(MAX_FIELD, serializer.serialize(value.maxX(), value.maxY()));\n+        return serializer.serialize(map);\n+    }\n+\n+    @Override\n+    public Optional<BlockAreac> deserialize(PersistedData data) {\n+        if (!data.isNull() && data.isValueMap()) {\n+            PersistedDataMap map = data.getAsValueMap();\n+\n+            PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n+            TIntList minArr = minDataArr.getAsIntegerArray();\n+            if (map.has(SIZE_FIELD)) {\n+                PersistedDataArray sizedataArray = map.get(SIZE_FIELD).getAsArray();\n+                TIntList sizeArr = sizedataArray.getAsIntegerArray();\n+                return Optional.of(\n+                    new BlockArea(\n+                        minArr.get(0), minArr.get(1)).setSize(\n+                        minArr.get(0) + sizeArr.get(0),\n+                        minArr.get(1) + sizeArr.get(1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42dadcc9b4e0b5f411a634e48826eaa001c79afb", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/42dadcc9b4e0b5f411a634e48826eaa001c79afb", "committedDate": "2020-12-28T20:39:00Z", "message": "Update engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreaTypeHandler.java\n\nCo-authored-by: Tobias Nett <skaldarnar@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f9aa6479656c8b603b1d8c810e829f7d427f9a", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/f8f9aa6479656c8b603b1d8c810e829f7d427f9a", "committedDate": "2020-12-28T20:39:05Z", "message": "Update engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreacTypeHandler.java\n\nCo-authored-by: Tobias Nett <skaldarnar@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ddedcffe900dd9a23c4736bd1869737148631db", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/4ddedcffe900dd9a23c4736bd1869737148631db", "committedDate": "2020-12-28T20:39:12Z", "message": "Merge branch 'develop' into feature/add-block-area-typehandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bb03d9efcddfbdc24ac73068a4e257fecfc3623", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/9bb03d9efcddfbdc24ac73068a4e257fecfc3623", "committedDate": "2020-12-31T03:28:10Z", "message": "Merge branch 'develop' into feature/add-block-area-typehandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a016af6470fc5816e0a3d6be7c8a027ab99b0893", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/a016af6470fc5816e0a3d6be7c8a027ab99b0893", "committedDate": "2020-12-31T14:29:37Z", "message": "Merge branch 'develop' into feature/add-block-area-typehandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNDAwNjMx", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#pullrequestreview-560400631", "createdAt": "2020-12-31T14:46:06Z", "commit": {"oid": "a016af6470fc5816e0a3d6be7c8a027ab99b0893"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1229, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}