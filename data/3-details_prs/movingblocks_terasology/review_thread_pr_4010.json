{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjE4MjI1", "number": 4010, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowNjowNFrOEBVv5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxMToyNVrOEBV1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODQwMzU3OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/family/CeilingSupportingHorizontalFamily.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowNjowNFrOGdIKzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzoxNDo1OVrOGdKB8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NTcyNw==", "bodyText": "Instead of declaring mainSide and then mutating the value you could do the check first and just do a single-time assignment:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (upsideDownPlacement) {\n          \n          \n            \n                        mainSide = Side.BOTTOM;\n          \n          \n            \n                    }\n          \n          \n            \n                    final Side mainSide = upsideDownPlacement ? Side.BOTTOM : Side.TOP;", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433195727", "createdAt": "2020-06-01T12:06:04Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/CeilingSupportingHorizontalFamily.java", "diffHunk": "@@ -122,13 +122,16 @@ private Block transformBlock(\n \n     @Override\n     public Block getBlockForPlacement(BlockPlacementData data) {\n-        Side blockDirection = Side.inDirection(-data.viewingDirection.x(), 0, -data.viewingDirection.z());\n+        Side mainSide = Side.TOP;\n \n-        if (data.attachmentSide == Side.BOTTOM) {\n-            return blocks.get(ExtendedSide.getExtendedSideFor(Side.BOTTOM, blockDirection));\n-        } else {\n-            return blocks.get(ExtendedSide.getExtendedSideFor(Side.TOP, blockDirection));\n+        boolean upsideDownPlacement = data.attachmentSide == Side.BOTTOM\n+                || data.attachmentSide != Side.TOP && data.relativeAttachmentPosition.y() > 0.5;\n+        if (upsideDownPlacement) {\n+            mainSide = Side.BOTTOM;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNjIyNg==", "bodyText": "Yes, much better.", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433226226", "createdAt": "2020-06-01T13:14:59Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/CeilingSupportingHorizontalFamily.java", "diffHunk": "@@ -122,13 +122,16 @@ private Block transformBlock(\n \n     @Override\n     public Block getBlockForPlacement(BlockPlacementData data) {\n-        Side blockDirection = Side.inDirection(-data.viewingDirection.x(), 0, -data.viewingDirection.z());\n+        Side mainSide = Side.TOP;\n \n-        if (data.attachmentSide == Side.BOTTOM) {\n-            return blocks.get(ExtendedSide.getExtendedSideFor(Side.BOTTOM, blockDirection));\n-        } else {\n-            return blocks.get(ExtendedSide.getExtendedSideFor(Side.TOP, blockDirection));\n+        boolean upsideDownPlacement = data.attachmentSide == Side.BOTTOM\n+                || data.attachmentSide != Side.TOP && data.relativeAttachmentPosition.y() > 0.5;\n+        if (upsideDownPlacement) {\n+            mainSide = Side.BOTTOM;\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NTcyNw=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODQwMzczOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/family/CeilingSupportingHorizontalFamily.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowNjowOVrOGdIK5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowNjowOVrOGdIK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NTc0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Side mainSide = Side.TOP;", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433195749", "createdAt": "2020-06-01T12:06:09Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/CeilingSupportingHorizontalFamily.java", "diffHunk": "@@ -122,13 +122,16 @@ private Block transformBlock(\n \n     @Override\n     public Block getBlockForPlacement(BlockPlacementData data) {\n-        Side blockDirection = Side.inDirection(-data.viewingDirection.x(), 0, -data.viewingDirection.z());\n+        Side mainSide = Side.TOP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODQwOTM5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowODoyMFrOGdIOWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzoxNTozMFrOGdKDBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NjYzMg==", "bodyText": "This assumes a cubic block, right? I'm totally fine with that, but maybe we should mention that in the doc comment?", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433196632", "createdAt": "2020-06-01T12:08:20Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -112,6 +121,28 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         }\n     }\n \n+    /**\n+     * Returns the position at which the block side was hit, relative to the side.\n+     * <p/>\n+     * Example: The front side was hit right in the center.\n+     * The result will be (0.5, 0.5), representing the relative hit position on the side's surface.\n+     * @param hitPosition the hit position\n+     * @param blockPosition the block position relative to its center (block (0, 0, 0) has block position (0.5, 0.5, 0.5))\n+     * @return the 2D hit position relative to the side that was hit\n+     */\n+    private Vector2f getSideHitPosition(Vector3f hitPosition, Vector3f blockPosition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNjUwMg==", "bodyText": "I added some explanation.", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433226502", "createdAt": "2020-06-01T13:15:30Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -112,6 +121,28 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         }\n     }\n \n+    /**\n+     * Returns the position at which the block side was hit, relative to the side.\n+     * <p/>\n+     * Example: The front side was hit right in the center.\n+     * The result will be (0.5, 0.5), representing the relative hit position on the side's surface.\n+     * @param hitPosition the hit position\n+     * @param blockPosition the block position relative to its center (block (0, 0, 0) has block position (0.5, 0.5, 0.5))\n+     * @return the 2D hit position relative to the side that was hit\n+     */\n+    private Vector2f getSideHitPosition(Vector3f hitPosition, Vector3f blockPosition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NjYzMg=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODQxMjQ2OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjowOTozOVrOGdIQRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMDo1M1rOGdMoqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NzEyNg==", "bodyText": "I'm wondering whether we have convenience for that in TeraMath....", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433197126", "createdAt": "2020-06-01T12:09:39Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -112,6 +121,28 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         }\n     }\n \n+    /**\n+     * Returns the position at which the block side was hit, relative to the side.\n+     * <p/>\n+     * Example: The front side was hit right in the center.\n+     * The result will be (0.5, 0.5), representing the relative hit position on the side's surface.\n+     * @param hitPosition the hit position\n+     * @param blockPosition the block position relative to its center (block (0, 0, 0) has block position (0.5, 0.5, 0.5))\n+     * @return the 2D hit position relative to the side that was hit\n+     */\n+    private Vector2f getSideHitPosition(Vector3f hitPosition, Vector3f blockPosition) {\n+        float epsilon = 0.0001f;\n+        Vector3f relativeHitPosition = new Vector3f(hitPosition).sub(blockPosition);\n+\n+        if (Math.abs(relativeHitPosition.x) > 0.5f - epsilon) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyODQyNw==", "bodyText": "I don't know, feels rather specific.\nYou mean a convenience for \"testing if the absolute of a value is bigger than some value, considering some delta\"?\nThere are no utility functions in TeraMath using the absolute functions, so I'm pretty sure it's not in there.\nAlso, I'm not sure how to name this, in case I wanted to move it to TeraMath. Any ideas?", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433228427", "createdAt": "2020-06-01T13:19:04Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -112,6 +121,28 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         }\n     }\n \n+    /**\n+     * Returns the position at which the block side was hit, relative to the side.\n+     * <p/>\n+     * Example: The front side was hit right in the center.\n+     * The result will be (0.5, 0.5), representing the relative hit position on the side's surface.\n+     * @param hitPosition the hit position\n+     * @param blockPosition the block position relative to its center (block (0, 0, 0) has block position (0.5, 0.5, 0.5))\n+     * @return the 2D hit position relative to the side that was hit\n+     */\n+    private Vector2f getSideHitPosition(Vector3f hitPosition, Vector3f blockPosition) {\n+        float epsilon = 0.0001f;\n+        Vector3f relativeHitPosition = new Vector3f(hitPosition).sub(blockPosition);\n+\n+        if (Math.abs(relativeHitPosition.x) > 0.5f - epsilon) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NzEyNg=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI2ODkwNw==", "bodyText": "Not necessarily with the Math.abs but the comparison of floating point numbers with some \u03b5", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433268907", "createdAt": "2020-06-01T14:30:53Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -112,6 +121,28 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         }\n     }\n \n+    /**\n+     * Returns the position at which the block side was hit, relative to the side.\n+     * <p/>\n+     * Example: The front side was hit right in the center.\n+     * The result will be (0.5, 0.5), representing the relative hit position on the side's surface.\n+     * @param hitPosition the hit position\n+     * @param blockPosition the block position relative to its center (block (0, 0, 0) has block position (0.5, 0.5, 0.5))\n+     * @return the 2D hit position relative to the side that was hit\n+     */\n+    private Vector2f getSideHitPosition(Vector3f hitPosition, Vector3f blockPosition) {\n+        float epsilon = 0.0001f;\n+        Vector3f relativeHitPosition = new Vector3f(hitPosition).sub(blockPosition);\n+\n+        if (Math.abs(relativeHitPosition.x) > 0.5f - epsilon) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5NzEyNg=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODQxNzYyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMjoxMToyNVrOGdITPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNDozMzo1OVrOGdMv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5Nzg4Nw==", "bodyText": "What about moving the null check into getSideHitPosition?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Vector2f relativePlacementPosition;\n          \n          \n            \n                    if (targetPosition != null) {\n          \n          \n            \n                        relativePlacementPosition = getSideHitPosition(event.getHitPosition(), targetPosition);\n          \n          \n            \n                    } else {\n          \n          \n            \n                        relativePlacementPosition = new Vector2f();\n          \n          \n            \n                    }\n          \n          \n            \n                    Vector2f relativePlacementPosition = getSideHitPosition(event.getHitPosition(), targetPosition);", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433197887", "createdAt": "2020-06-01T12:11:25Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -90,8 +91,16 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         Vector3i placementPos = new Vector3i(targetBlock);\n         placementPos.add(surfaceSide.getVector3i());\n \n+        Vector3f targetPosition = event.getTargetLocation();\n+        Vector2f relativePlacementPosition;\n+        if (targetPosition != null) {\n+            relativePlacementPosition = getSideHitPosition(event.getHitPosition(), targetPosition);\n+        } else {\n+            relativePlacementPosition = new Vector2f();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzMDU4MQ==", "bodyText": "I don't like this one.\nMy method wants a vector to work with, nobody should pass it null.\nIt is true however, that I'm cluttering up the higher level method, so I moved the null check into another private method, working on the event. I think it makes more sense that way and I hope you'll like that solution too.", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433230581", "createdAt": "2020-06-01T13:23:23Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -90,8 +91,16 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         Vector3i placementPos = new Vector3i(targetBlock);\n         placementPos.add(surfaceSide.getVector3i());\n \n+        Vector3f targetPosition = event.getTargetLocation();\n+        Vector2f relativePlacementPosition;\n+        if (targetPosition != null) {\n+            relativePlacementPosition = getSideHitPosition(event.getHitPosition(), targetPosition);\n+        } else {\n+            relativePlacementPosition = new Vector2f();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5Nzg4Nw=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3MDc2Mg==", "bodyText": "I surely do \ud83d\udc4d", "url": "https://github.com/MovingBlocks/Terasology/pull/4010#discussion_r433270762", "createdAt": "2020-06-01T14:33:59Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -90,8 +91,16 @@ public void onPlaceBlock(ActivateEvent event, EntityRef item) {\n         Vector3i placementPos = new Vector3i(targetBlock);\n         placementPos.add(surfaceSide.getVector3i());\n \n+        Vector3f targetPosition = event.getTargetLocation();\n+        Vector2f relativePlacementPosition;\n+        if (targetPosition != null) {\n+            relativePlacementPosition = getSideHitPosition(event.getHitPosition(), targetPosition);\n+        } else {\n+            relativePlacementPosition = new Vector2f();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5Nzg4Nw=="}, "originalCommit": {"oid": "ea5883f823e6ea2c9583d1e14102541cdbc33269"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 497, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}