{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MjM2NzU0", "number": 4148, "title": "fix(performance): optimize ModuleEnvironmentSandbox.getSubTypeIdentifier", "bodyText": "Always use the class's fully-qualified Java class name as its type identifier, as ReflectionsSandbox does.\nThe previous implementation led to calling loadClass on all of Component's subclasses every time the serializer asked for this type identifier. We encountered scalability problems with that in #4126.\nHow to test\nThis changes identifiers used by serializers for pretty much everything, which could be a big deal!\nThose are used for networking and save games.\nSo while it could break everything, if some things seem to be working, I don't have ideas of particular edge cases to test for.\nIdeas welcome here.", "createdAt": "2020-09-13T20:38:10Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4148", "merged": true, "mergeCommit": {"oid": "eff0c0551dfd7221a77a3a8a1fec4812979a8006"}, "closed": true, "closedAt": "2020-09-19T17:39:00Z", "author": {"login": "keturn"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIjlEqAH2gAyNDg2MjM2NzU0OmMzNWY1YzM3Njc0N2JkNDZhZWMyZWY5NmYxY2QxOTgxYmQxNDk2MmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIq3PngFqTQ4NzM5NzMzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c35f5c376747bd46aec2ef96f1cd1981bd14962a", "author": {"user": {"login": "keturn", "name": "Kevin Turner"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/c35f5c376747bd46aec2ef96f1cd1981bd14962a", "committedDate": "2020-09-13T19:15:48Z", "message": "fix(performance): optimize ModuleEnvironmentSandbox.getSubTypeIdentifier\n\nAlways use the class's fully-qualified Java class name as its type identifier, as ReflectionsSandbox does.\n\nThe previous implementation led to calling loadClass on *all* of Component's subclasses every time the serializer asked for this type identifier. We encountered scalability problems with that in #4126."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7890da9a395e9a80e728209be219dd7c72fbf4e1", "author": {"user": {"login": "keturn", "name": "Kevin Turner"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/7890da9a395e9a80e728209be219dd7c72fbf4e1", "committedDate": "2020-09-14T02:39:33Z", "message": "chore: move common getSubTypeIdentifier implementation to interface default\n\nremove the test, because the default implementation is too mundane."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3Mzk3MzM4", "url": "https://github.com/MovingBlocks/Terasology/pull/4148#pullrequestreview-487397338", "createdAt": "2020-09-14T03:44:59Z", "commit": {"oid": "7890da9a395e9a80e728209be219dd7c72fbf4e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMzo0NDo1OVrOHRC7eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMzo0NDo1OVrOHRC7eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYzNTgzMw==", "bodyText": "I think there are no longer any implementations of this that use baseType at all.\nShould we change the interface and remove that parameter entirely?\nIf so, is this still a subtypeIdentifier, or is it just its Identifier?", "url": "https://github.com/MovingBlocks/Terasology/pull/4148#discussion_r487635833", "createdAt": "2020-09-14T03:44:59Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/reflection/SerializationSandbox.java", "diffHunk": "@@ -46,7 +33,9 @@\n      * @param <T>      The base type whose subtype needs to be identified.\n      * @return The unique identifier for {@code subType}.\n      */\n-    <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType);\n+    default <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType) {\n+        return subType.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7890da9a395e9a80e728209be219dd7c72fbf4e1"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1446, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}