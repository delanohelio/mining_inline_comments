{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MjM2NzU0", "number": 4148, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMzo0NDo1OVrOEi88PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMzo0NDo1OVrOEi88PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDg1NTAwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/reflection/SerializationSandbox.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMzo0NDo1OVrOHRC7eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNDozOTowMFrOHRDoPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYzNTgzMw==", "bodyText": "I think there are no longer any implementations of this that use baseType at all.\nShould we change the interface and remove that parameter entirely?\nIf so, is this still a subtypeIdentifier, or is it just its Identifier?", "url": "https://github.com/MovingBlocks/Terasology/pull/4148#discussion_r487635833", "createdAt": "2020-09-14T03:44:59Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/reflection/SerializationSandbox.java", "diffHunk": "@@ -46,7 +33,9 @@\n      * @param <T>      The base type whose subtype needs to be identified.\n      * @return The unique identifier for {@code subType}.\n      */\n-    <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType);\n+    default <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType) {\n+        return subType.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7890da9a395e9a80e728209be219dd7c72fbf4e1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY0NzI5NA==", "bodyText": "Probably just keep simplifying, if we need something like this in the future we could put it back in. Might still be good to hear from @eviltak\nAdditionally serialization and/or the whole ECS likely would majorly change when reintegrated as libraries anyway, so we don't have to aim for perfection right now", "url": "https://github.com/MovingBlocks/Terasology/pull/4148#discussion_r487647294", "createdAt": "2020-09-14T04:39:00Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/reflection/SerializationSandbox.java", "diffHunk": "@@ -46,7 +33,9 @@\n      * @param <T>      The base type whose subtype needs to be identified.\n      * @return The unique identifier for {@code subType}.\n      */\n-    <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType);\n+    default <T> String getSubTypeIdentifier(Class<? extends T> subType, Class<T> baseType) {\n+        return subType.getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYzNTgzMw=="}, "originalCommit": {"oid": "7890da9a395e9a80e728209be219dd7c72fbf4e1"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}