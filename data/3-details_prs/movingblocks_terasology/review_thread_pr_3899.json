{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTMzNDUy", "number": 3899, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxODo0MVrOD0hkiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoyNToxMFrOD0hqng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDAyNTY5OnYy", "diffSide": "RIGHT", "path": "engine-tests/src/test/java/org/terasology/world/EntityAwareWorldProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxODo0MVrOGJgSbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxODo0MVrOGJgSbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxOTM3NQ==", "bodyText": "I love this test name \ud83d\udc4d", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412619375", "createdAt": "2020-04-22T02:18:41Z", "author": {"login": "Cervator"}, "path": "engine-tests/src/test/java/org/terasology/world/EntityAwareWorldProviderTest.java", "diffHunk": "@@ -269,6 +269,16 @@ public void testEntityBecomesTemporaryWhenChangedFromAKeepActiveBlock() {\n         assertFalse(blockEntity.isActive());\n     }\n \n+    @Test\n+    public void testEntityBecomesTemporaryWhenChangedFromAKeepActiveBlockJoml() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDAzMjI1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoyMToxOVrOGJgV9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNTowMzoxMFrOGJjeyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMDI3OA==", "bodyText": "Should we consider (in general) adding default interface implementations when adding new methods like this? That could avoid having to update some things in modulespace. In this case I'm not sure it makes sense as I only see one non-engine usage over in FlexiblePathfinding.", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412620278", "createdAt": "2020-04-22T02:21:19Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "diffHunk": "@@ -29,19 +31,49 @@\n     /**\n      * An active block is in a chunk that is available and fully generated.\n      *\n-     * @param pos\n+     * @param pos The position\n      * @return Whether the given block is active\n+     * @deprecated This is scheduled for removal in an upcoming version\n+     *             method will be replaced with JOML implementation {@link #isBlockRelevant(Vector3ic)}.\n      */\n+    @Deprecated\n     boolean isBlockRelevant(Vector3i pos);\n \n+    /**\n+     *\n+     * @param pos The position\n+     * @return Whether the given block is active\n+     */\n+    boolean isBlockRelevant(Vector3ic pos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3MTY4OA==", "bodyText": "It can't hurt at the moment but a lot of this is temporary and all the old methods are going to go away anyways. It can't hurt to implement it even if the use case is limited.", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412671688", "createdAt": "2020-04-22T05:03:10Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "diffHunk": "@@ -29,19 +31,49 @@\n     /**\n      * An active block is in a chunk that is available and fully generated.\n      *\n-     * @param pos\n+     * @param pos The position\n      * @return Whether the given block is active\n+     * @deprecated This is scheduled for removal in an upcoming version\n+     *             method will be replaced with JOML implementation {@link #isBlockRelevant(Vector3ic)}.\n      */\n+    @Deprecated\n     boolean isBlockRelevant(Vector3i pos);\n \n+    /**\n+     *\n+     * @param pos The position\n+     * @return Whether the given block is active\n+     */\n+    boolean isBlockRelevant(Vector3ic pos);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMDI3OA=="}, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDAzNDU4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoyMjoxMVrOGJgXNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODoyODo0OVrOGOfGVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMDU5Nw==", "bodyText": "Some sort of descriptor for the method itself here please :-) Looks like the old method has one, can just copy it forward.", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412620597", "createdAt": "2020-04-22T02:22:11Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "diffHunk": "@@ -29,19 +31,49 @@\n     /**\n      * An active block is in a chunk that is available and fully generated.\n      *\n-     * @param pos\n+     * @param pos The position\n      * @return Whether the given block is active\n+     * @deprecated This is scheduled for removal in an upcoming version\n+     *             method will be replaced with JOML implementation {@link #isBlockRelevant(Vector3ic)}.\n      */\n+    @Deprecated\n     boolean isBlockRelevant(Vector3i pos);\n \n+    /**\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0Mjc3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *\n          \n          \n            \n                 * An active block is in a chunk that is available and fully generated.", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r417842775", "createdAt": "2020-04-30T08:28:49Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/WorldProvider.java", "diffHunk": "@@ -29,19 +31,49 @@\n     /**\n      * An active block is in a chunk that is available and fully generated.\n      *\n-     * @param pos\n+     * @param pos The position\n      * @return Whether the given block is active\n+     * @deprecated This is scheduled for removal in an upcoming version\n+     *             method will be replaced with JOML implementation {@link #isBlockRelevant(Vector3ic)}.\n      */\n+    @Deprecated\n     boolean isBlockRelevant(Vector3i pos);\n \n+    /**\n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMDU5Nw=="}, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDA0MTI2OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/internal/WorldProviderWrapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoyNToxMFrOGJgbFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjo0NToxN1rOGJg0iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMTU5MA==", "bodyText": "Explicit package like this makes me sad - can we avoid it via imports or is something in the way of that?", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412621590", "createdAt": "2020-04-22T02:25:10Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/world/internal/WorldProviderWrapper.java", "diffHunk": "@@ -44,26 +46,51 @@ public boolean isBlockRelevant(Vector3i pos) {\n         return core.isBlockRelevant(pos.x, pos.y, pos.z);\n     }\n \n+    @Override\n+    public boolean isBlockRelevant(Vector3ic pos) {\n+        return core.isBlockRelevant(pos.x(), pos.y(), pos.z());\n+    }\n+\n     @Override\n     public boolean isBlockRelevant(Vector3f pos) {\n         return isBlockRelevant(new Vector3i(pos, RoundingMode.HALF_UP));\n     }\n \n+    @Override\n+    public boolean isBlockRelevant(Vector3fc pos) {\n+        return isBlockRelevant(new org.joml.Vector3i(pos, org.joml.RoundingMode.HALF_UP));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyODEwNA==", "bodyText": "nope, Vector3i conflicts with Vector3i from termath.  I expect this to be temporary until we get to the point of removing all the old methods. we can use an alias but that somehow feels worse.", "url": "https://github.com/MovingBlocks/Terasology/pull/3899#discussion_r412628104", "createdAt": "2020-04-22T02:45:17Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/world/internal/WorldProviderWrapper.java", "diffHunk": "@@ -44,26 +46,51 @@ public boolean isBlockRelevant(Vector3i pos) {\n         return core.isBlockRelevant(pos.x, pos.y, pos.z);\n     }\n \n+    @Override\n+    public boolean isBlockRelevant(Vector3ic pos) {\n+        return core.isBlockRelevant(pos.x(), pos.y(), pos.z());\n+    }\n+\n     @Override\n     public boolean isBlockRelevant(Vector3f pos) {\n         return isBlockRelevant(new Vector3i(pos, RoundingMode.HALF_UP));\n     }\n \n+    @Override\n+    public boolean isBlockRelevant(Vector3fc pos) {\n+        return isBlockRelevant(new org.joml.Vector3i(pos, org.joml.RoundingMode.HALF_UP));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMTU5MA=="}, "originalCommit": {"oid": "2f4abaa4a4a0be4702da89ed143580d8ee0d096e"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 575, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}