{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzAxMzUx", "number": 3987, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMTozMDo1N1rOD_WrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjo1NzowOFrOEAmFBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzU4Mzk3OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMTozMDo1N1rOGZ-IDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOToyNjozMlrOGcDXCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA==", "bodyText": "This is currently not null safe, I'm not sure if it has to be though.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r429885454", "createdAt": "2020-05-25T11:30:57Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4Njg0Nw==", "bodyText": "Good question. I'm tending to doing null-checks here to ensure that all values are non-null whenever something on usage side accesses them. I suspect that nobody will ever to a null-check there....\nCan use Guava's Preconditions here.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r431986847", "createdAt": "2020-05-28T16:59:56Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NTQwNg==", "bodyText": "The question is how we are going to react when null is being passed. Default to position zero? The client side doesn't have to worry about null checks here, because new Vector3i(null) would fail and crash on creation.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r431995406", "createdAt": "2020-05-28T17:13:31Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0NTQzOQ==", "bodyText": "I think that Preconditions.checkNotNull() will throw a NPE if the check fails.\nI'd say it's good enough for now, and I don't expect us to run into serious problems. At least debugging NPEs is quite a relaxing exercise \ud83d\ude05", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432045439", "createdAt": "2020-05-28T18:43:52Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA0ODEzMg==", "bodyText": "NPE from Preconditions better then NPE from long call chain. You  can determinate which variable is null. At least", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432048132", "createdAt": "2020-05-28T18:48:41Z", "author": {"login": "DarkWeird"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2ODM2MQ==", "bodyText": "I agree. Done.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432068361", "createdAt": "2020-05-28T19:26:32Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;\n+    public final Side attachmentSide;\n+    public final Vector3fc viewingDirection;\n+    public final Vector2fc relativeAttachmentPosition;\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection) {\n+        this(blockPosition, attachmentSide, viewingDirection, new Vector2f());\n+    }\n+\n+    /**\n+     * @param blockPosition     The block position, at which the block is going to be placed at.\n+     * @param attachmentSide    The side of the block which this block is being attached to, e.g. Top if the block is being placed on the ground\n+     * @param relativeAttachmentPosition The position on the block surface that the user aimed at when placing the block. A value between (0, 0) and (1, 1).\n+     */\n+    public BlockPlacementData(Vector3ic blockPosition, Side attachmentSide, Vector3fc viewingDirection, Vector2fc relativeAttachmentPosition) {\n+        this.blockPosition = new Vector3i(blockPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NTQ1NA=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDU5MzMzOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjo1NzowOFrOGb-SMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTowODo1MFrOGcGzGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw==", "bodyText": "These public members should probably also have doc comments to explain what they are. Basically what you've used for the parameter descriptions.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r431985203", "createdAt": "2020-05-28T16:57:08Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NzU3OA==", "bodyText": "will be done.\n\nAlso, this will break some modules that define block families, right?\n\nIf defining block families is a thing, they would need to be updated, yes.\nI will check how many Omega modules are affected.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r431997578", "createdAt": "2020-05-28T17:17:30Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1Nzg3Nw==", "bodyText": "here is the list of modules that need to be fixed:\nSample\nMarcinScIncubator\nMultiBlock\nTutorialAssetSystem\nMachines\nMinesweeper\n\nIf you confirm the current API change, I'll roll out the fixes tomorrow.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432057877", "createdAt": "2020-05-28T19:06:12Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyMDg1OQ==", "bodyText": "MarcinScIncubator still is a thing? \ud83e\udd14 Thought we archived it?\n@kBlaszczyk could you provide PRs for updating those modules (if not already happened), please \ud83d\ude43", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432120859", "createdAt": "2020-05-28T21:00:59Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyMTU5Mw==", "bodyText": "\"Thanks\" to the way GitHub leaves redirects in place to moved repos it'll probably be easily possible to not realize something got archived ... :-) Just still works. Or in this case breaks.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432121593", "createdAt": "2020-05-28T21:02:36Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNDY5Nw==", "bodyText": "@skaldarnar yes, will do.", "url": "https://github.com/MovingBlocks/Terasology/pull/3987#discussion_r432124697", "createdAt": "2020-05-28T21:08:50Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/world/block/family/BlockPlacementData.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.block.family;\n+\n+import org.joml.Vector2f;\n+import org.joml.Vector2fc;\n+import org.joml.Vector3f;\n+import org.joml.Vector3fc;\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.Side;\n+\n+/**\n+ * BlockPlacementData represents data that is useful for determining the orientation of new block.\n+ * The data is supposed to be derived from the players state when placing the block.\n+ * BlockPlacementData is immutable.\n+ */\n+public class BlockPlacementData {\n+\n+    public final Vector3ic blockPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NTIwMw=="}, "originalCommit": {"oid": "dfad910a54e81cb97e33b83fc41e7d8b639a59e8"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 462, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}