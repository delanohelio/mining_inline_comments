{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMjM2NzM5", "number": 3970, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoxOTozOFrOD_KKVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOToyNzoxNVrOD_OCCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzMzY0OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoxOTozOFrOGZro1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjozMjowMVrOGZv9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjU1MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429582550", "createdAt": "2020-05-23T22:19:38Z", "author": {"login": "skaldarnar"}, "path": "build.gradle", "diffHunk": "@@ -90,7 +87,9 @@ repositories {\n \n     // MovingBlocks Artifactory instance for libs not readily available elsewhere plus our own libs\n     maven {\n+        name \"Terasology Artifactory\"\n         url \"http://artifactory.terasology.org/artifactory/virtual-repo-live\"\n+        allowInsecureProtocol true  // \ud83d\ude31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MzQwOQ==", "bodyText": "Thanks for that - hopefully it'll be temporary and we can use a shiny new instance of something rather than the poor old Artifactory sometime soon ;-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429653409", "createdAt": "2020-05-24T16:32:01Z", "author": {"login": "Cervator"}, "path": "build.gradle", "diffHunk": "@@ -90,7 +87,9 @@ repositories {\n \n     // MovingBlocks Artifactory instance for libs not readily available elsewhere plus our own libs\n     maven {\n+        name \"Terasology Artifactory\"\n         url \"http://artifactory.terasology.org/artifactory/virtual-repo-live\"\n+        allowInsecureProtocol true  // \ud83d\ude31", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjU1MA=="}, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzNDQ1OnYy", "diffSide": "RIGHT", "path": "config/gradle/publish.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoyMTo1NlrOGZrpQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoyMTo1NlrOGZrpQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjY1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    allowInsecureProtocol true\n          \n          \n            \n                                    allowInsecureProtocol true // \ud83d\ude31", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429582659", "createdAt": "2020-05-23T22:21:56Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -20,7 +36,8 @@ publishing {\n                     if (rootProject.hasProperty(\"publishRepo\")) {\n                         // This first option is good for local testing, you can set a full explicit target repo in gradle.properties\n                         url = \"http://artifactory.terasology.org/artifactory/$publishRepo\"\n-                        println \"Changing PUBLISH repoKey set via Gradle property to $publishRepo\"\n+                        allowInsecureProtocol true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzNDcyOnYy", "diffSide": "RIGHT", "path": "config/gradle/publish.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoyMjoyOFrOGZrpZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo0MzowM1rOGZwBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjY5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\");\n          \n          \n            \n                return gitBranch != null && gitBranch.equals(\"master\");", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429582694", "createdAt": "2020-05-23T22:22:28Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -56,7 +74,7 @@ publishing {\n     }\n }\n \n-def isMaster(gitBranch) {\n+static def isMaster(gitBranch) {\n     return gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mzg4OA==", "bodyText": "this is cheating, you can't suggest changes to lines that aren't changed in the diff \ud83d\ude06", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429583888", "createdAt": "2020-05-23T22:45:19Z", "author": {"login": "keturn"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -56,7 +74,7 @@ publishing {\n     }\n }\n \n-def isMaster(gitBranch) {\n+static def isMaster(gitBranch) {\n     return gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjY5NA=="}, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDMwNQ==", "bodyText": "I will fully own up to just kinda rushing past some of these bits anyway. That was one of those \"Hmm, this one improvement should help and can't take that long\" followed by a later and later evening ...", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429654305", "createdAt": "2020-05-24T16:43:03Z", "author": {"login": "Cervator"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -56,7 +74,7 @@ publishing {\n     }\n }\n \n-def isMaster(gitBranch) {\n+static def isMaster(gitBranch) {\n     return gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MjY5NA=="}, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzNTE4OnYy", "diffSide": "RIGHT", "path": "config/groovy/module.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoyMzoyMVrOGZrppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo0NDo0MVrOGZwBhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mjc1Ng==", "bodyText": "I think terasology.github.io got moved to MovingBlocks/ModuleSite ... \ud83e\udd14\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"terasology.github.io\", \"out\", \"build\"]\n          \n          \n            \n                def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"out\", \"build\"]", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429582756", "createdAt": "2020-05-23T22:23:21Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/module.groovy", "diffHunk": "@@ -1,7 +1,23 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n import groovy.json.JsonSlurper\n \n class module {\n-    def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"terasology.github.io\"]\n+    def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"terasology.github.io\", \"out\", \"build\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDQwNQ==", "bodyText": "Yep, and the goal was to move the Index repo too, just sort of stalled out on progress there for a while. Hopefully can rejuvenate that approach soon \u2122\ufe0f", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429654405", "createdAt": "2020-05-24T16:44:41Z", "author": {"login": "Cervator"}, "path": "config/groovy/module.groovy", "diffHunk": "@@ -1,7 +1,23 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n import groovy.json.JsonSlurper\n \n class module {\n-    def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"terasology.github.io\"]\n+    def excludedItems = [\"engine\", \"BuilderSampleGameplay\", \"Index\", \"terasology.github.io\", \"out\", \"build\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mjc1Ng=="}, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzNTg1OnYy", "diffSide": "RIGHT", "path": "config/groovy/module.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjoyNTowMlrOGZrqAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjo0Mjo1OFrOGZrtsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mjg0OA==", "bodyText": "Did a spare \"not\" sneak in here?\nLooking at this, I'd like to go over this and allow for module.json as alternative to .txt...", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429582848", "createdAt": "2020-05-23T22:25:02Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/module.groovy", "diffHunk": "@@ -79,6 +95,10 @@ class module {\n \n     def refreshGradle(File targetDir) {\n         // Copy in the template build.gradle for modules\n+        if (!new File(targetDir, \"module.txt\").exists()) {\n+            println \"$targetDir has no module.txt, it must not want a fresh build.gradle\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mzc5NA==", "bodyText": "If not module.txt, then no new build.gradle.\nI don't see a different number of \"not\"s than I intended.\nAre there directories without modules.txt we do want to refresh as gradle subprojects?\nWhat I was trying to do was address the situation where something was making stray directories in there that weren't actually populated with module sources, and then they'd get gradle files, and then the gradle files would do the whole Y U NO HAVE MODULE.TXT yelling thing.", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429583794", "createdAt": "2020-05-23T22:42:58Z", "author": {"login": "keturn"}, "path": "config/groovy/module.groovy", "diffHunk": "@@ -79,6 +95,10 @@ class module {\n \n     def refreshGradle(File targetDir) {\n         // Copy in the template build.gradle for modules\n+        if (!new File(targetDir, \"module.txt\").exists()) {\n+            println \"$targetDir has no module.txt, it must not want a fresh build.gradle\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4Mjg0OA=="}, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTUzODMyOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/nui/internal/LwjglCanvasRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjozMTowOFrOGZrrUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QyMjozMTowOFrOGZrrUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU4MzE4NQ==", "bodyText": "Using Optional::get surrounded by try-catch is an anti-pattern to me. Instead, use Optional::orElseThrow:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        this.textureMat = Assets.getMaterial(\"engine:UITexture\").get();\n          \n          \n            \n                    } catch (java.util.NoSuchElementException noSuch) {\n          \n          \n            \n                        // Some extra attention to how this is reported, because this is often the first asset we try to load.\n          \n          \n            \n                        throw new RuntimeException(\"Failing to find engine textures\", noSuch);\n          \n          \n            \n                    }\n          \n          \n            \n                    this.textureMat = \n          \n          \n            \n                        Assets.getMaterial(\"engine:UITexture\")\n          \n          \n            \n                            .orElseThrow(e -> throw new RuntimeException(\"Failing to find engine textures\", e));", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429583185", "createdAt": "2020-05-23T22:31:08Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/rendering/nui/internal/LwjglCanvasRenderer.java", "diffHunk": "@@ -113,7 +113,12 @@\n \n     public LwjglCanvasRenderer(Context context) {\n         // TODO use context to get assets instead of static methods\n-        this.textureMat = Assets.getMaterial(\"engine:UITexture\").get();\n+        try {\n+            this.textureMat = Assets.getMaterial(\"engine:UITexture\").get();\n+        } catch (java.util.NoSuchElementException noSuch) {\n+            // Some extra attention to how this is reported, because this is often the first asset we try to load.\n+            throw new RuntimeException(\"Failing to find engine textures\", noSuch);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00effbea0e0b310633e430a088ff0c28f8069e14"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTk2Njk2OnYy", "diffSide": "RIGHT", "path": "engine-tests/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNDowMDoxOFrOGZvIXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNDowMDoxOFrOGZvIXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzOTc3NA==", "bodyText": "This is must be api, otherwise junit5 tests in module cannot work.", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429639774", "createdAt": "2020-05-24T14:00:18Z", "author": {"login": "DarkWeird"}, "path": "engine-tests/build.gradle", "diffHunk": "@@ -55,21 +56,21 @@ dependencies {\n     implementation group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'\n     implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '2.6.1'\n     implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'\n-    runtime group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.21'\n+    runtimeOnly group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.21'\n     implementation group: 'org.reflections', name: 'reflections', version: '0.9.10'\n \n     // Test lib dependencies\n-    compile(\"org.junit.jupiter:junit-jupiter-api:5.5.2\")\n-    compile(\"org.junit.jupiter:junit-jupiter-params:5.5.2\")\n-    compile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.2.0'\n+    implementation(\"org.junit.jupiter:junit-jupiter-api:5.5.2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTk3MTI2OnYy", "diffSide": "RIGHT", "path": "engine/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNDowNjo1NVrOGZvK0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOTo0MTozNFrOGZw4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MDQwMQ==", "bodyText": "you can reduce lines by fold api and implementation  by libs.\napi contains implementation (checked on jupiter deps in engine-tests)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429640401", "createdAt": "2020-05-24T14:06:55Z", "author": {"login": "DarkWeird"}, "path": "engine/build.gradle", "diffHunk": "@@ -71,18 +91,18 @@ configurations.all {\n // Primary dependencies definition\n dependencies {\n     // White list packages {@see ExternalApiWhiteList class}\n-    apiElements group: 'com.google.guava', name: 'guava', version: '23.0'\n-    apiElements group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n-    apiElements group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n-    apiElements group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n-    apiElements(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.8.0') {\n+    api group: 'com.google.guava', name: 'guava', version: '23.0'\n+    api group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n+    api group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n+    api group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n+    api(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.9.0') {\n         exclude group: 'org.slf4j', module: 'slf4j-simple'\n     }\n-    apiElements group: 'org.joml', name: 'joml', version: '1.9.24'\n-    apiElements group: 'java3d', name: 'vecmath', version: '1.3.1'\n+    api group: 'org.joml', name: 'joml', version: '1.9.24'\n+    api group: 'java3d', name: 'vecmath', version: '1.3.1'\n     // Light and Shadow use it\n-    apiElements group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n-    apiElements group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'\n+    api group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n+    api group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NTI0Mg==", "bodyText": "So this allows us to get rid of the duplication? Like having Guava both apiElements and implementation just so it'll both work in engine + in modules? We only need api then?", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429655242", "createdAt": "2020-05-24T16:56:03Z", "author": {"login": "Cervator"}, "path": "engine/build.gradle", "diffHunk": "@@ -71,18 +91,18 @@ configurations.all {\n // Primary dependencies definition\n dependencies {\n     // White list packages {@see ExternalApiWhiteList class}\n-    apiElements group: 'com.google.guava', name: 'guava', version: '23.0'\n-    apiElements group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n-    apiElements group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n-    apiElements group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n-    apiElements(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.8.0') {\n+    api group: 'com.google.guava', name: 'guava', version: '23.0'\n+    api group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n+    api group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n+    api group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n+    api(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.9.0') {\n         exclude group: 'org.slf4j', module: 'slf4j-simple'\n     }\n-    apiElements group: 'org.joml', name: 'joml', version: '1.9.24'\n-    apiElements group: 'java3d', name: 'vecmath', version: '1.3.1'\n+    api group: 'org.joml', name: 'joml', version: '1.9.24'\n+    api group: 'java3d', name: 'vecmath', version: '1.3.1'\n     // Light and Shadow use it\n-    apiElements group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n-    apiElements group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'\n+    api group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n+    api group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MDQwMQ=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2ODQwMg==", "bodyText": "Yep, DRY !\napiElements is deep technical configuration.. near gradle's internal.\nI did't find it rather :)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429668402", "createdAt": "2020-05-24T19:41:34Z", "author": {"login": "DarkWeird"}, "path": "engine/build.gradle", "diffHunk": "@@ -71,18 +91,18 @@ configurations.all {\n // Primary dependencies definition\n dependencies {\n     // White list packages {@see ExternalApiWhiteList class}\n-    apiElements group: 'com.google.guava', name: 'guava', version: '23.0'\n-    apiElements group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n-    apiElements group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n-    apiElements group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n-    apiElements(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.8.0') {\n+    api group: 'com.google.guava', name: 'guava', version: '23.0'\n+    api group: 'com.google.code.gson', name: 'gson', version: '2.6.2'\n+    api group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'\n+    api group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: LwjglVersion\n+    api(group: 'com.snowplowanalytics', name: 'snowplow-java-tracker', version: '0.9.0') {\n         exclude group: 'org.slf4j', module: 'slf4j-simple'\n     }\n-    apiElements group: 'org.joml', name: 'joml', version: '1.9.24'\n-    apiElements group: 'java3d', name: 'vecmath', version: '1.3.1'\n+    api group: 'org.joml', name: 'joml', version: '1.9.24'\n+    api group: 'java3d', name: 'vecmath', version: '1.3.1'\n     // Light and Shadow use it\n-    apiElements group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n-    apiElements group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'\n+    api group: 'com.miglayout', name: 'miglayout-core', version: '5.0'\n+    api group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MDQwMQ=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA3MDI3OnYy", "diffSide": "RIGHT", "path": "config/gradle/common.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo0MDozMlrOGZwATA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDo1MTo1OFrOGZxOfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDA5Mg==", "bodyText": "This looks fancy, what do? Attaches a descriptor of some sort rather than bother with optional debug logging?", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429654092", "createdAt": "2020-05-24T16:40:32Z", "author": {"login": "Cervator"}, "path": "config/gradle/common.gradle", "diffHunk": "@@ -36,20 +52,23 @@ repositories {\n         def repoViaEnv = System.getenv()[\"RESOLUTION_REPO\"]\n         if (rootProject.hasProperty(\"alternativeResolutionRepo\")) {\n             // If the user supplies an alternative repo via gradle.properties then use that\n-            // println \"Changing RESOLUTION repo set via gradle.properties to $alternativeResolutionRepo\"\n+            name \"from alternativeResolutionRepo property\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NDExMA==", "bodyText": "That's the idea. Though I confess I'm not sure where it shows up.", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429674110", "createdAt": "2020-05-24T20:51:58Z", "author": {"login": "keturn"}, "path": "config/gradle/common.gradle", "diffHunk": "@@ -36,20 +52,23 @@ repositories {\n         def repoViaEnv = System.getenv()[\"RESOLUTION_REPO\"]\n         if (rootProject.hasProperty(\"alternativeResolutionRepo\")) {\n             // If the user supplies an alternative repo via gradle.properties then use that\n-            // println \"Changing RESOLUTION repo set via gradle.properties to $alternativeResolutionRepo\"\n+            name \"from alternativeResolutionRepo property\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDA5Mg=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA3MTEyOnYy", "diffSide": "RIGHT", "path": "config/gradle/common.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo0MTo0OVrOGZwAtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDo1MzoxNlrOGZxO-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDE5Nw==", "bodyText": "This one we have less control over fixing, alas ;-) But maybe they'll fix it themselves sometime, might be hard to notice (just throwing https in there didn't make my browser sparkle with joy just now)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429654197", "createdAt": "2020-05-24T16:41:49Z", "author": {"login": "Cervator"}, "path": "config/gradle/common.gradle", "diffHunk": "@@ -36,20 +52,23 @@ repositories {\n         def repoViaEnv = System.getenv()[\"RESOLUTION_REPO\"]\n         if (rootProject.hasProperty(\"alternativeResolutionRepo\")) {\n             // If the user supplies an alternative repo via gradle.properties then use that\n-            // println \"Changing RESOLUTION repo set via gradle.properties to $alternativeResolutionRepo\"\n+            name \"from alternativeResolutionRepo property\"\n             url alternativeResolutionRepo\n         } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-            // println \"Changing RESOLUTION repoKey set via env var to $repoViaEnv\"\n+            name \"from \\$RESOLUTION_REPO\"\n             url = repoViaEnv\n         } else {\n             // Our default is the main virtual repo containing everything except repos for testing Artifactory itself\n+            name \"Terasology Artifactory\"\n             url \"http://artifactory.terasology.org/artifactory/virtual-repo-live\"\n+            allowInsecureProtocol true  // \ud83d\ude31\n         }\n     }\n \n-    // snowplow for telemetry\n     maven {\n+        name \"snowplow (pre-0.9)\"\n         url \"http://maven.snplow.com/releases\"\n+        allowInsecureProtocol true  // \ud83d\ude31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NDIzMg==", "bodyText": "for their recent release, they've started publishing them on one of the big third-party repository services. Should be able to drop this soon, but when my build was still pulling in engine-3.2.1.jar or whatever it was it made problems if it couldn't find the snowplow for that jar.", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429674232", "createdAt": "2020-05-24T20:53:16Z", "author": {"login": "keturn"}, "path": "config/gradle/common.gradle", "diffHunk": "@@ -36,20 +52,23 @@ repositories {\n         def repoViaEnv = System.getenv()[\"RESOLUTION_REPO\"]\n         if (rootProject.hasProperty(\"alternativeResolutionRepo\")) {\n             // If the user supplies an alternative repo via gradle.properties then use that\n-            // println \"Changing RESOLUTION repo set via gradle.properties to $alternativeResolutionRepo\"\n+            name \"from alternativeResolutionRepo property\"\n             url alternativeResolutionRepo\n         } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-            // println \"Changing RESOLUTION repoKey set via env var to $repoViaEnv\"\n+            name \"from \\$RESOLUTION_REPO\"\n             url = repoViaEnv\n         } else {\n             // Our default is the main virtual repo containing everything except repos for testing Artifactory itself\n+            name \"Terasology Artifactory\"\n             url \"http://artifactory.terasology.org/artifactory/virtual-repo-live\"\n+            allowInsecureProtocol true  // \ud83d\ude31\n         }\n     }\n \n-    // snowplow for telemetry\n     maven {\n+        name \"snowplow (pre-0.9)\"\n         url \"http://maven.snplow.com/releases\"\n+        allowInsecureProtocol true  // \ud83d\ude31", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDE5Nw=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA3NjM1OnYy", "diffSide": "RIGHT", "path": "engine-tests/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo1MTozNlrOGZwDaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOTo0MzowN1rOGZw4vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDg4OA==", "bodyText": "engine-tests isn't really a library, but I guess this brings in something useful?", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429654888", "createdAt": "2020-05-24T16:51:36Z", "author": {"login": "Cervator"}, "path": "engine-tests/build.gradle", "diffHunk": "@@ -2,6 +2,7 @@\n \n // Grab all the common stuff like plugins to use, artifact repositories, code analysis config\n apply from: \"$rootDir/config/gradle/publish.gradle\"\n+apply plugin: \"java-library\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2ODU0Mg==", "bodyText": "It is library, while we use it and use it as dependencies in module. main part at least", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429668542", "createdAt": "2020-05-24T19:43:07Z", "author": {"login": "DarkWeird"}, "path": "engine-tests/build.gradle", "diffHunk": "@@ -2,6 +2,7 @@\n \n // Grab all the common stuff like plugins to use, artifact repositories, code analysis config\n apply from: \"$rootDir/config/gradle/publish.gradle\"\n+apply plugin: \"java-library\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDg4OA=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA4MDYyOnYy", "diffSide": "RIGHT", "path": "facades/PC/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo1OToxNFrOGZwFoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjo1OToxNFrOGZwFoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NTQ1Nw==", "bodyText": "If you bump this 4.0.0 to 4.1.0 it'll be in sync with the duplicate dependency in the engine (caused trouble for me on an IntelliJ pre 2020.1). Separate story to actually fix there being two.\nCould probably even just centralize a variable holding the version so it can't drift. Could leave a TODO on such a var to remove it when we resolve whatever needed the dep in engine instead of facade one day. I think it is because there's a button in the UI to open the CrashReporter as a milder \"Issue Reporter\" meaning the act of opening the CR happens from the engine rather than the facade", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429655457", "createdAt": "2020-05-24T16:59:14Z", "author": {"login": "Cervator"}, "path": "facades/PC/build.gradle", "diffHunk": "@@ -62,7 +85,7 @@ dependencies {\n \n         implementation project(':libs:CrashReporter:cr-terasology')\n     } else {\n-        println \"*** Setting a CrashReporter binary dependency, not present as source\"\n+        logger.debug(\"*** Setting a CrashReporter binary dependency, not present as source\")\n         implementation group: 'org.terasology.crashreporter', name: 'cr-terasology', version: '4.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjE2MzExOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/rendering/nui/internal/LwjglCanvasRenderer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOToxODoxMlrOGZww-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOToxODoxMlrOGZww-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjU1Mw==", "bodyText": "Trivial but: two lines instead of three here? Can probably combine the first two and still have the .orElseThrow flow nicely?", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429666553", "createdAt": "2020-05-24T19:18:12Z", "author": {"login": "Cervator"}, "path": "engine/src/main/java/org/terasology/rendering/nui/internal/LwjglCanvasRenderer.java", "diffHunk": "@@ -113,7 +113,9 @@\n \n     public LwjglCanvasRenderer(Context context) {\n         // TODO use context to get assets instead of static methods\n-        this.textureMat = Assets.getMaterial(\"engine:UITexture\").get();\n+        this.textureMat = ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjE2MzcwOnYy", "diffSide": "RIGHT", "path": "facades/PC/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOToxOTo1M1rOGZwxTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMToxNzo1MVrOGZxXKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjYzNw==", "bodyText": "I'm guessing this is new with the application plugin, but if so shouldn't it replace the game task? Or maybe they can be used in different cases with one doing something more advanced than another\nAlso as a reminder there's a new exec task in here, so might want to rebase to grab it :-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429666637", "createdAt": "2020-05-24T19:19:53Z", "author": {"login": "Cervator"}, "path": "facades/PC/build.gradle", "diffHunk": "@@ -86,6 +109,17 @@ configurations {\n     }\n }\n \n+run {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NDY3Ng==", "bodyText": "yep, it's a task provided by application. and yes, the game* tasks could probably be based off that instead and probably save some of the default configuration. This part is sitting on an awkward \"what is in scope for this PR?\" line, as I didn't want to get in to all the existing JavaExec tasks.\nthere's a case to be made that I should leave that run addition out of this PR and leave it for that day.", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429674676", "createdAt": "2020-05-24T20:58:45Z", "author": {"login": "keturn"}, "path": "facades/PC/build.gradle", "diffHunk": "@@ -86,6 +109,17 @@ configurations {\n     }\n }\n \n+run {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjYzNw=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NjMzMQ==", "bodyText": "Okay no worries then, keep it simple and we'll just continue to iterate :-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429676331", "createdAt": "2020-05-24T21:17:51Z", "author": {"login": "Cervator"}, "path": "facades/PC/build.gradle", "diffHunk": "@@ -86,6 +109,17 @@ configurations {\n     }\n }\n \n+run {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjYzNw=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjE2Nzc5OnYy", "diffSide": "RIGHT", "path": "modules/subprojects.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxOToyNzoxNVrOGZwzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMToxODoxN1rOGZxXTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NzE3OA==", "bodyText": "Trivial, but may want to either use lots of asterisks or none for both logging statements :-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429667178", "createdAt": "2020-05-24T19:27:15Z", "author": {"login": "Cervator"}, "path": "modules/subprojects.gradle", "diffHunk": "@@ -1,16 +1,33 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n // This magically allows subdirs in this subproject to themselves become sub-subprojects in a proper tree structure\n new File(rootDir, 'modules').eachDir { possibleSubprojectDir ->\n-    def subprojectName = 'modules:' + possibleSubprojectDir.name\n-    //println \"Gradle is reviewing module $subprojectName for inclusion as a sub-project\"\n+    def subprojectName = ':modules:' + possibleSubprojectDir.name\n     File buildFile = new File(possibleSubprojectDir, \"build.gradle\")\n-    if (buildFile.exists()) {\n-        println \"Module $subprojectName has a build file so counting it complete and including it\"\n-        include subprojectName\n-        def subprojectPath = ':' + subprojectName\n-        def subproject = project(subprojectPath)\n-        subproject.projectDir = possibleSubprojectDir\n-    } else {\n-        println \"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\"\n+    File moduleTxt = new File(possibleSubprojectDir, \"module.txt\")\n+    if (!buildFile.exists()) {\n+        logger.warn(\"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NDc1OQ==", "bodyText": "***** I DON'T KNOW HOW IMPORTANT THE ASTERISKS ARE MAYBE JENKINS IS COUNTING THEM OR SOMETHING", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429674759", "createdAt": "2020-05-24T20:59:41Z", "author": {"login": "keturn"}, "path": "modules/subprojects.gradle", "diffHunk": "@@ -1,16 +1,33 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n // This magically allows subdirs in this subproject to themselves become sub-subprojects in a proper tree structure\n new File(rootDir, 'modules').eachDir { possibleSubprojectDir ->\n-    def subprojectName = 'modules:' + possibleSubprojectDir.name\n-    //println \"Gradle is reviewing module $subprojectName for inclusion as a sub-project\"\n+    def subprojectName = ':modules:' + possibleSubprojectDir.name\n     File buildFile = new File(possibleSubprojectDir, \"build.gradle\")\n-    if (buildFile.exists()) {\n-        println \"Module $subprojectName has a build file so counting it complete and including it\"\n-        include subprojectName\n-        def subprojectPath = ':' + subprojectName\n-        def subproject = project(subprojectPath)\n-        subproject.projectDir = possibleSubprojectDir\n-    } else {\n-        println \"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\"\n+    File moduleTxt = new File(possibleSubprojectDir, \"module.txt\")\n+    if (!buildFile.exists()) {\n+        logger.warn(\"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NzE3OA=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NjM2NA==", "bodyText": "Haha nope, just me trying to spot my logging once upon a time when implementing it originally", "url": "https://github.com/MovingBlocks/Terasology/pull/3970#discussion_r429676364", "createdAt": "2020-05-24T21:18:17Z", "author": {"login": "Cervator"}, "path": "modules/subprojects.gradle", "diffHunk": "@@ -1,16 +1,33 @@\n+/*\n+ * Copyright 2020 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n // This magically allows subdirs in this subproject to themselves become sub-subprojects in a proper tree structure\n new File(rootDir, 'modules').eachDir { possibleSubprojectDir ->\n-    def subprojectName = 'modules:' + possibleSubprojectDir.name\n-    //println \"Gradle is reviewing module $subprojectName for inclusion as a sub-project\"\n+    def subprojectName = ':modules:' + possibleSubprojectDir.name\n     File buildFile = new File(possibleSubprojectDir, \"build.gradle\")\n-    if (buildFile.exists()) {\n-        println \"Module $subprojectName has a build file so counting it complete and including it\"\n-        include subprojectName\n-        def subprojectPath = ':' + subprojectName\n-        def subproject = project(subprojectPath)\n-        subproject.projectDir = possibleSubprojectDir\n-    } else {\n-        println \"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\"\n+    File moduleTxt = new File(possibleSubprojectDir, \"module.txt\")\n+    if (!buildFile.exists()) {\n+        logger.warn(\"***** WARNING: Found a module without a build.gradle, corrupt dir? NOT including $subprojectName *****\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NzE3OA=="}, "originalCommit": {"oid": "fbaf5f4807050f8545b4dfc88430b5f0c1d7ab81"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 448, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}