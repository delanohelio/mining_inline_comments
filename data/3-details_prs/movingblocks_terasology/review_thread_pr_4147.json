{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MDA3MTQ3", "number": 4147, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMDowMzowMFrOEizjdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQwNDowNzoxMVrOGidxWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTMxNzAyOnYy", "diffSide": "RIGHT", "path": "engine/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMDowMzowMFrOHQ3MZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMDowMzowMFrOHQ3MZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MzU1Nw==", "bodyText": "There's a new major version of JNA 5.x out since October 2018, but the 4.5 series is sufficient to provide the Resource API and I thought I could get away with doing less testing if I stuck to the same major version.\nManually keeping versions in sync between here and facade's build.gradle is a bother. Perhaps after clearing the jna-in-jopenvr obstacle we can revisit this and see if we can avoid that duplication.", "url": "https://github.com/MovingBlocks/Terasology/pull/4147#discussion_r487443557", "createdAt": "2020-09-12T20:03:00Z", "author": {"login": "keturn"}, "path": "engine/build.gradle", "diffHunk": "@@ -96,7 +96,7 @@ dependencies {\n     api group: 'org.codehaus.plexus', name: 'plexus-utils', version: '1.5.6'\n \n     // Java magic\n-    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '4.2.2'\n+    implementation group: 'net.java.dev.jna', name: 'jna-platform', version: '4.5.2'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06441b40719af2aa1c369a9e30595d0efab670a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTMxNzc3OnYy", "diffSide": "RIGHT", "path": "facades/PC/src/main/java/org/terasology/engine/Terasology.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMDowNDoyNVrOHQ3MvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMDowNDoyNVrOHQ3MvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0MzY0NA==", "bodyText": "Placeholder error handling, do something better here.", "url": "https://github.com/MovingBlocks/Terasology/pull/4147#discussion_r487443644", "createdAt": "2020-09-12T20:04:25Z", "author": {"login": "keturn"}, "path": "facades/PC/src/main/java/org/terasology/engine/Terasology.java", "diffHunk": "@@ -477,4 +470,26 @@ private static int getLastNumber(String str) {\n         return Integer.parseInt(str.substring(positionOfLastDigit));\n     }\n \n+    private static void setMemoryLimit(long maxMegabytes) {\n+        // Memory-limiting techniques are highly platform-specific.\n+        if (Platform.isLinux()) {\n+            final LibC.Rlimit dataLimit = new LibC.Rlimit();\n+            long maxBytes = maxMegabytes * 1024 * 1024;\n+            dataLimit.rlim_cur = maxBytes;\n+            dataLimit.rlim_max = maxBytes;\n+            // Under Linux \u2265 4.7, we can limit the maximum size of the process's data segment, which includes its\n+            // heap. Note we cannot directly limit its resident set size, see setrlimit(3).\n+            LibC.INSTANCE.setrlimit(LibC.RLIMIT_DATA, dataLimit);\n+        }\n+    }\n+\n+    private static void adjustOutOfMemoryScore(int adjustment) {\n+        Path procFile = Paths.get(\"/proc\", \"self\", \"oom_score_adj\");\n+        try {\n+            Files.write(procFile, String.valueOf(adjustment).getBytes(),\n+                    StandardOpenOption.WRITE, StandardOpenOption.TRUNCATE_EXISTING);\n+        } catch (IOException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06441b40719af2aa1c369a9e30595d0efab670a"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDM4NzkyNDc0OnYy", "diffSide": "RIGHT", "path": "facades/PC/build.gradle.kts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQwNDowNjo0OFrOKRTFqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQwNDowNjo0OFrOKRTFqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTIyNzE3OA==", "bodyText": "FIXME: these are supposed to be test dependencies!", "url": "https://github.com/MovingBlocks/Terasology/pull/4147#discussion_r689227178", "createdAt": "2021-08-16T04:06:48Z", "author": {"login": "keturn"}, "path": "facades/PC/build.gradle.kts", "diffHunk": "@@ -68,6 +69,16 @@ dependencies {\n \n     // TODO: Consider whether we can move the CR dependency back here from the engine, where it is referenced from the main menu\n     implementation(group = \"org.terasology.crashreporter\", name = \"cr-terasology\", version = \"4.1.0\")\n+\n+    implementation(platform(\"org.junit:junit-bom:5.7.1\")) {\n+        // junit-bom will set version numbers for the other org.junit dependencies.\n+    }\n+    implementation(\"org.junit.jupiter:junit-jupiter-api\")\n+    implementation(\"org.junit.jupiter:junit-jupiter-params\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185a64ea406ae7d5518f65576aa7db0d8ec8362b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDM4NzkyNTM3OnYy", "diffSide": "RIGHT", "path": "facades/PC/src/main/java/org/terasology/engine/DataSizeConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQwNDowNzoxMVrOKRTF_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xNlQwNDowNzoxMVrOKRTF_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTIyNzI2MA==", "bodyText": "FIXME: docstring", "url": "https://github.com/MovingBlocks/Terasology/pull/4147#discussion_r689227260", "createdAt": "2021-08-16T04:07:11Z", "author": {"login": "keturn"}, "path": "facades/PC/src/main/java/org/terasology/engine/DataSizeConverter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright 2021 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.engine;\n+\n+import picocli.CommandLine;\n+\n+import java.math.BigDecimal;\n+import java.util.Locale;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class DataSizeConverter implements CommandLine.ITypeConverter<Long> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185a64ea406ae7d5518f65576aa7db0d8ec8362b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 364, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}