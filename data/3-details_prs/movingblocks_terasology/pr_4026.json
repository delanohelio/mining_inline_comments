{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTc1MDIw", "number": 4026, "title": "feat(JOML): Migrate MeshRenderer", "bodyText": "#3950 broke compatibility with #3865 this is a simplification that focuses on just the MeshRenderer.\nshould be enough to verify by breaking blocks in the world. physics objects use the MeshRender and anything incorrect should be fairly noticeable. Carts, Items dropped, are a couple other objects that can be used to verify.  Testing this in an omega workspace and verifying it with a couple different modules should be sufficient.", "createdAt": "2020-06-03T05:41:15Z", "url": "https://github.com/MovingBlocks/Terasology/pull/4026", "merged": true, "mergeCommit": {"oid": "7df2c345badc749d7043293922e79e6206fd2351"}, "closed": true, "closedAt": "2020-08-08T22:22:29Z", "author": {"login": "pollend"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcniyDFAH2gAyNDI2OTc1MDIwOjAzMDBjZTUyYzRmNDJlODczNTdlODk2NDc1NzM3NjA1MWM2NDhlN2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6gnMsAH2gAyNDI2OTc1MDIwOjgwODdlOWYwOGMwY2UxNjA0MTM3Zjk0MDNiZjJhYWRiYzMzNjliNTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0300ce52c4f42e87357e8964757376051c648e7e", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/0300ce52c4f42e87357e8964757376051c648e7e", "committedDate": "2020-06-03T05:40:34Z", "message": "feat(JOML): Migrate MeshRenderer\n\nhttps://github.com/MovingBlocks/Terasology/pull/3950 broke compatibility with https://github.com/MovingBlocks/Terasology/pull/3865 this is a simplification of that focuses on just the MeshRenderer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTcyNzAx", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#pullrequestreview-428172701", "createdAt": "2020-06-10T15:26:21Z", "commit": {"oid": "0300ce52c4f42e87357e8964757376051c648e7e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNToyNjoyMVrOGh6VtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTozMjo0NVrOGh6nqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMjAyMQ==", "bodyText": "Calling identity() here is unnecessary, since translationRotateScale() sets the matrix's state rather than transforming it.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                matrixCameraSpace.identity().translationRotateScale(offsetFromCamera, worldRot, worldScale);\n          \n          \n            \n                                matrixCameraSpace.translationRotateScale(offsetFromCamera, worldRot, worldScale);", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438212021", "createdAt": "2020-06-10T15:26:21Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -191,23 +195,23 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                     MeshComponent meshComp = entity.getComponent(MeshComponent.class);\n                     LocationComponent location = entity.getComponent(LocationComponent.class);\n \n-                    if (isHidden(entity, meshComp) || location == null || Float.isNaN(location.getWorldPosition().x)|| meshComp.mesh == null || !isRelevant(entity, location.getWorldPosition())) {\n+                    if (isHidden(entity, meshComp) || location == null || Float.isNaN(location.getWorldPosition().x) || meshComp.mesh == null || !isRelevant(entity, JomlUtil.from(location.getWorldPosition()))) {\n                         continue;\n                     }\n                     if (meshComp.mesh.isDisposed()) {\n                         logger.error(\"Attempted to render disposed mesh\");\n                         continue;\n                     }\n \n-                    location.getWorldRotation(worldRot);\n-                    location.getWorldPosition(worldPos);\n+                    worldRot.set(JomlUtil.from(location.getWorldRotation()));\n+                    worldPos.set(JomlUtil.from(location.getWorldPosition()));\n                     float worldScale = location.getWorldScale();\n \n-                    Transform toWorldSpace = new Transform(worldPos, worldRot, worldScale);\n+                    Transform toWorldSpace = new Transform(JomlUtil.from(worldPos), JomlUtil.from(worldRot), worldScale);\n+\n+                    Vector3f offsetFromCamera = worldPos.sub(cameraPosition, new Vector3f());\n+                    matrixCameraSpace.identity().translationRotateScale(offsetFromCamera, worldRot, worldScale);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0300ce52c4f42e87357e8964757376051c648e7e"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzk0MA==", "bodyText": "Matrix4f#normal() should be used instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);\n          \n          \n            \n                                    modelViewMatrix.normal(normalMatrix).get(tempMatrixBuffer33);", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438213940", "createdAt": "2020-06-10T15:28:58Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -219,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);\n+                        modelViewMatrix.get(tempMatrixBuffer44);\n+                        modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0300ce52c4f42e87357e8964757376051c648e7e"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxNjYxOA==", "bodyText": "Not your change, but I just want to say, that I find it odd that we are using buffers to set some matrices and Matrix4f objects for others. I'd favor consistently passing the matrix.", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438216618", "createdAt": "2020-06-10T15:32:45Z", "author": {"login": "kBlaszczyk"}, "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -219,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);\n+                        modelViewMatrix.get(tempMatrixBuffer44);\n+                        modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);\n \n                         material.setMatrix4(\"projectionMatrix\", new org.joml.Matrix4f(worldRenderer.getActiveCamera().getProjectionMatrix()).transpose(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0300ce52c4f42e87357e8964757376051c648e7e"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0515c03620cfbc1fafdbdbe1bf91def75e3e73", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/aa0515c03620cfbc1fafdbdbe1bf91def75e3e73", "committedDate": "2020-07-14T18:06:52Z", "message": "Merge remote-tracking branch 'upstream/develop' into feature/joml_MeshRenderer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c818a0e41cfdfcf335cf5eff4b05e58305aa4be", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/1c818a0e41cfdfcf335cf5eff4b05e58305aa4be", "committedDate": "2020-07-14T18:19:26Z", "message": "tweak meshRenderer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0042399945e689a5fa475ec52a6c64ea48a1099", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/e0042399945e689a5fa475ec52a6c64ea48a1099", "committedDate": "2020-07-14T18:21:21Z", "message": "remove discord xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjM0ODMx", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#pullrequestreview-453234831", "createdAt": "2020-07-22T11:39:21Z", "commit": {"oid": "e0042399945e689a5fa475ec52a6c64ea48a1099"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTozOToyMlrOG1elXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTozOToyMlrOG1elXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyODc5Ng==", "bodyText": "Why is there a transpose inserted here? This seems to be actually changing the logic.", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r458728796", "createdAt": "2020-07-22T11:39:22Z", "author": {"login": "4Denthusiast"}, "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -218,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0042399945e689a5fa475ec52a6c64ea48a1099"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjgwNTcz", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#pullrequestreview-453280573", "createdAt": "2020-07-22T12:45:47Z", "commit": {"oid": "e0042399945e689a5fa475ec52a6c64ea48a1099"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8087e9f08c0ce1604137f9403bf2aadbc3369b51", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/8087e9f08c0ce1604137f9403bf2aadbc3369b51", "committedDate": "2020-08-01T03:53:28Z", "message": "Merge remote-tracking branch 'upstream/develop' into feature/joml_MeshRenderer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1656, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}