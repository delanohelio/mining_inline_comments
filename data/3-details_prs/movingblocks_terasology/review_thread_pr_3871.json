{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDQ2MTkw", "number": 3871, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMDozOVrODtRDmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowMjowM1rODta3JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzkxOTYzOnYy", "diffSide": "RIGHT", "path": "config/gradle/publish.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDowMDozOVrOF-l_ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMjo1MzoxM1rOF-vEGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3ODUzMQ==", "bodyText": "I'm wondering whether we should start to scope the properties in the gradle builds, similar to what most plugins to. This would become terasology.publishRepo then...", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401178531", "createdAt": "2020-03-31T20:00:39Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyNzEzMQ==", "bodyText": "Had not thought about that before. Even in a plain build file, rather than a plugin? I've been curious if some of our logic might go better in a plugin, where it would make all kinds of sense, since then you'd probably use neato little blocks to configure it.", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401327131", "createdAt": "2020-04-01T02:53:13Z", "author": {"login": "Cervator"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3ODUzMQ=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk2MzMxOnYy", "diffSide": "RIGHT", "path": "config/gradle/publish.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMjo1MlrOF-maWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzozNDozNVrOF-vrAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTM2OQ==", "bodyText": "The whole logic in here boils down to just this, doesn't it?\nif (isMaster(maybeGitBranch) && !shouldBypassModuleRelease()) {\n\tdeducedPublishRepo += \"-release-local\"\n} else {\n\tdeducedPublishRepo += \"-snapshot-local\"\n}\nI think with the two additional functions this code is really readable, and the nesting is reduced.\ndef isMaster(gitBranch) {\n  return gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\");\n}\n\ndef shouldBypassModuleRelease() {\n  return project.hasProperty(\"bypassModuleReleaseManagement\") && \n\tbypassModuleReleaseManagement == \"true\";\n}", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401185369", "createdAt": "2020-03-31T20:12:52Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {\n+                        // This first option is good for local testing, you can set a full explicit target repo in gradle.properties\n                         url = \"http://artifactory.terasology.org/artifactory/$publishRepo\"\n-                        println \"Changing PUBLISH repoKey set via property to $publishRepo\"\n-                    } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-                        url = \"http://artifactory.terasology.org/artifactory/$repoViaEnv\"\n-                        println \"Changing PUBLISH repoKey set via env var to $repoViaEnv\"\n+                        println \"Changing PUBLISH repoKey set via Gradle property to $publishRepo\"\n                     } else {\n-                        url = 'http://artifactory.terasology.org/artifactory/terasology-snapshot-local'\n-                        println \"PUBLISH repoKey is terasology-snapshot-local (default value)\"\n+                        // In this case we are going to fletch the publish repo together from a few things\n+                        // First if we have an override from the environment to use a different target publish org\n+                        String deducedPublishRepo = System.getenv()[\"PUBLISH_ORG\"]\n+                        if (deducedPublishRepo == null || deducedPublishRepo == \"\") {\n+                            // If not then default\n+                            deducedPublishRepo = \"terasology\"\n+                        }\n+                        String releaseRepoFragment = \"-release-local\"\n+                        String snapshotRepoFragment = \"-snapshot-local\"\n+\n+                        // Secondly we're going to find out if we're doing a release or a snapshot - this gets a little more complicated\n+                        String gitBranch = System.getenv()[\"BRANCH_NAME\"]\n+                        if (gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\")) {\n+                            // Okay we're in an environment where a branch name is set to 'master' so we might be doing a release\n+                            // This is the funny part. Modules aren't ready globally to accept master branch == release, so check a prop that defaults to bypass\n+                            if (project.hasProperty(\"bypassModuleReleaseManagement\")) {\n+                                if (bypassModuleReleaseManagement == \"true\") {\n+                                    println \"Release management not enabled for \" + project.name + \", using snapshot repo despite building 'master' branch\"\n+                                    deducedPublishRepo += snapshotRepoFragment\n+                                } else {\n+                                    println \"Release management *is* enabled for \" + project.name + \", using release repo since building 'master' branch\"\n+                                    deducedPublishRepo += releaseRepoFragment\n+                                }\n+                            } else {\n+                                println \"We're working on a 'master' branch with defaults so using the release publish repo\"\n+                                deducedPublishRepo += releaseRepoFragment\n+                            }\n+                        } else {\n+                            // No master branch so we for sure are just doing snapshots\n+                            println \"We're not working with a branch name set that's 'master' so assuming we're publishing snapshots\"\n+                            deducedPublishRepo += \"-snapshot-local\"\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NjI4MQ==", "bodyText": "This would loose a couple of console lines, but overall the structure in the build file is more comprehensible imho.", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401186281", "createdAt": "2020-03-31T20:14:21Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {\n+                        // This first option is good for local testing, you can set a full explicit target repo in gradle.properties\n                         url = \"http://artifactory.terasology.org/artifactory/$publishRepo\"\n-                        println \"Changing PUBLISH repoKey set via property to $publishRepo\"\n-                    } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-                        url = \"http://artifactory.terasology.org/artifactory/$repoViaEnv\"\n-                        println \"Changing PUBLISH repoKey set via env var to $repoViaEnv\"\n+                        println \"Changing PUBLISH repoKey set via Gradle property to $publishRepo\"\n                     } else {\n-                        url = 'http://artifactory.terasology.org/artifactory/terasology-snapshot-local'\n-                        println \"PUBLISH repoKey is terasology-snapshot-local (default value)\"\n+                        // In this case we are going to fletch the publish repo together from a few things\n+                        // First if we have an override from the environment to use a different target publish org\n+                        String deducedPublishRepo = System.getenv()[\"PUBLISH_ORG\"]\n+                        if (deducedPublishRepo == null || deducedPublishRepo == \"\") {\n+                            // If not then default\n+                            deducedPublishRepo = \"terasology\"\n+                        }\n+                        String releaseRepoFragment = \"-release-local\"\n+                        String snapshotRepoFragment = \"-snapshot-local\"\n+\n+                        // Secondly we're going to find out if we're doing a release or a snapshot - this gets a little more complicated\n+                        String gitBranch = System.getenv()[\"BRANCH_NAME\"]\n+                        if (gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\")) {\n+                            // Okay we're in an environment where a branch name is set to 'master' so we might be doing a release\n+                            // This is the funny part. Modules aren't ready globally to accept master branch == release, so check a prop that defaults to bypass\n+                            if (project.hasProperty(\"bypassModuleReleaseManagement\")) {\n+                                if (bypassModuleReleaseManagement == \"true\") {\n+                                    println \"Release management not enabled for \" + project.name + \", using snapshot repo despite building 'master' branch\"\n+                                    deducedPublishRepo += snapshotRepoFragment\n+                                } else {\n+                                    println \"Release management *is* enabled for \" + project.name + \", using release repo since building 'master' branch\"\n+                                    deducedPublishRepo += releaseRepoFragment\n+                                }\n+                            } else {\n+                                println \"We're working on a 'master' branch with defaults so using the release publish repo\"\n+                                deducedPublishRepo += releaseRepoFragment\n+                            }\n+                        } else {\n+                            // No master branch so we for sure are just doing snapshots\n+                            println \"We're not working with a branch name set that's 'master' so assuming we're publishing snapshots\"\n+                            deducedPublishRepo += \"-snapshot-local\"\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTM2OQ=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzNzA5MQ==", "bodyText": "Thank you! I had even more logic madness in there while trying to find a solution that would cover all the scenarios, this was actually an already boiled down version, but closing in on 2 am was not letting me see clearly in shrinking it further. This is way cleaner! Don't need the logging now that it tests out fine :-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401337091", "createdAt": "2020-04-01T03:34:35Z", "author": {"login": "Cervator"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {\n+                        // This first option is good for local testing, you can set a full explicit target repo in gradle.properties\n                         url = \"http://artifactory.terasology.org/artifactory/$publishRepo\"\n-                        println \"Changing PUBLISH repoKey set via property to $publishRepo\"\n-                    } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-                        url = \"http://artifactory.terasology.org/artifactory/$repoViaEnv\"\n-                        println \"Changing PUBLISH repoKey set via env var to $repoViaEnv\"\n+                        println \"Changing PUBLISH repoKey set via Gradle property to $publishRepo\"\n                     } else {\n-                        url = 'http://artifactory.terasology.org/artifactory/terasology-snapshot-local'\n-                        println \"PUBLISH repoKey is terasology-snapshot-local (default value)\"\n+                        // In this case we are going to fletch the publish repo together from a few things\n+                        // First if we have an override from the environment to use a different target publish org\n+                        String deducedPublishRepo = System.getenv()[\"PUBLISH_ORG\"]\n+                        if (deducedPublishRepo == null || deducedPublishRepo == \"\") {\n+                            // If not then default\n+                            deducedPublishRepo = \"terasology\"\n+                        }\n+                        String releaseRepoFragment = \"-release-local\"\n+                        String snapshotRepoFragment = \"-snapshot-local\"\n+\n+                        // Secondly we're going to find out if we're doing a release or a snapshot - this gets a little more complicated\n+                        String gitBranch = System.getenv()[\"BRANCH_NAME\"]\n+                        if (gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\")) {\n+                            // Okay we're in an environment where a branch name is set to 'master' so we might be doing a release\n+                            // This is the funny part. Modules aren't ready globally to accept master branch == release, so check a prop that defaults to bypass\n+                            if (project.hasProperty(\"bypassModuleReleaseManagement\")) {\n+                                if (bypassModuleReleaseManagement == \"true\") {\n+                                    println \"Release management not enabled for \" + project.name + \", using snapshot repo despite building 'master' branch\"\n+                                    deducedPublishRepo += snapshotRepoFragment\n+                                } else {\n+                                    println \"Release management *is* enabled for \" + project.name + \", using release repo since building 'master' branch\"\n+                                    deducedPublishRepo += releaseRepoFragment\n+                                }\n+                            } else {\n+                                println \"We're working on a 'master' branch with defaults so using the release publish repo\"\n+                                deducedPublishRepo += releaseRepoFragment\n+                            }\n+                        } else {\n+                            // No master branch so we for sure are just doing snapshots\n+                            println \"We're not working with a branch name set that's 'master' so assuming we're publishing snapshots\"\n+                            deducedPublishRepo += \"-snapshot-local\"\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTM2OQ=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk2NTYzOnYy", "diffSide": "RIGHT", "path": "config/gradle/publish.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMzozMlrOF-mbyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxMzozMlrOF-mbyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4NTczNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        deducedPublishRepo += \"-snapshot-local\"\n          \n          \n            \n                                        deducedPublishRepo += snapshotRepoFragment", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401185736", "createdAt": "2020-03-31T20:13:32Z", "author": {"login": "skaldarnar"}, "path": "config/gradle/publish.gradle", "diffHunk": "@@ -17,16 +17,45 @@ publishing {\n                 maven {\n                     name = 'TerasologyOrg'\n \n-                    def repoViaEnv = System.getenv()[\"PUBLISH_REPO\"]\n                     if (rootProject.hasProperty(\"publishRepo\")) {\n+                        // This first option is good for local testing, you can set a full explicit target repo in gradle.properties\n                         url = \"http://artifactory.terasology.org/artifactory/$publishRepo\"\n-                        println \"Changing PUBLISH repoKey set via property to $publishRepo\"\n-                    } else if (repoViaEnv != null && repoViaEnv != \"\") {\n-                        url = \"http://artifactory.terasology.org/artifactory/$repoViaEnv\"\n-                        println \"Changing PUBLISH repoKey set via env var to $repoViaEnv\"\n+                        println \"Changing PUBLISH repoKey set via Gradle property to $publishRepo\"\n                     } else {\n-                        url = 'http://artifactory.terasology.org/artifactory/terasology-snapshot-local'\n-                        println \"PUBLISH repoKey is terasology-snapshot-local (default value)\"\n+                        // In this case we are going to fletch the publish repo together from a few things\n+                        // First if we have an override from the environment to use a different target publish org\n+                        String deducedPublishRepo = System.getenv()[\"PUBLISH_ORG\"]\n+                        if (deducedPublishRepo == null || deducedPublishRepo == \"\") {\n+                            // If not then default\n+                            deducedPublishRepo = \"terasology\"\n+                        }\n+                        String releaseRepoFragment = \"-release-local\"\n+                        String snapshotRepoFragment = \"-snapshot-local\"\n+\n+                        // Secondly we're going to find out if we're doing a release or a snapshot - this gets a little more complicated\n+                        String gitBranch = System.getenv()[\"BRANCH_NAME\"]\n+                        if (gitBranch != null && gitBranch != \"\" && gitBranch.equals(\"master\")) {\n+                            // Okay we're in an environment where a branch name is set to 'master' so we might be doing a release\n+                            // This is the funny part. Modules aren't ready globally to accept master branch == release, so check a prop that defaults to bypass\n+                            if (project.hasProperty(\"bypassModuleReleaseManagement\")) {\n+                                if (bypassModuleReleaseManagement == \"true\") {\n+                                    println \"Release management not enabled for \" + project.name + \", using snapshot repo despite building 'master' branch\"\n+                                    deducedPublishRepo += snapshotRepoFragment\n+                                } else {\n+                                    println \"Release management *is* enabled for \" + project.name + \", using release repo since building 'master' branch\"\n+                                    deducedPublishRepo += releaseRepoFragment\n+                                }\n+                            } else {\n+                                println \"We're working on a 'master' branch with defaults so using the release publish repo\"\n+                                deducedPublishRepo += releaseRepoFragment\n+                            }\n+                        } else {\n+                            // No master branch so we for sure are just doing snapshots\n+                            println \"We're not working with a branch name set that's 'master' so assuming we're publishing snapshots\"\n+                            deducedPublishRepo += \"-snapshot-local\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk4NDAzOnYy", "diffSide": "RIGHT", "path": "modules/BiomesAPI/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxODoyOFrOF-mnFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxODoyOFrOF-mnFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4ODYyOQ==", "bodyText": "Heavyly in favor of git tags, as most modules don't have complicated branching going on anyways. But you're right, should not be done in this PR, and needs some proper thoughtwork to figure out details and edge cases...", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401188629", "createdAt": "2020-03-31T20:18:28Z", "author": {"login": "skaldarnar"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -35,17 +25,25 @@ buildscript {\n     }\n }\n \n-// Handle some logic related to where what is\n-sourceSets {\n-    main.java.outputDir = new File(\"$buildDir/classes\")\n-    test.java.outputDir = new File(\"$buildDir/testClasses\")\n-}\n-JavaPluginConvention convention = project.getConvention().getPlugin(JavaPluginConvention.class);\n-SourceSet mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+import groovy.json.JsonSlurper\n+import org.reflections.Reflections\n+import org.reflections.util.FilterBuilder\n+import org.reflections.scanners.SubTypesScanner\n+import org.reflections.scanners.TypeAnnotationsScanner\n+import org.reflections.util.ConfigurationBuilder\n \n ext {\n     // Read environment variables, including variables passed by jenkins continuous integration server\n     env = System.getenv()\n+\n+    // This is a fun one ... when versions switched to dynamic -SNAPSHOT or not based on branch existing modules using `master` would suddenly try publishing releases\n+    // This won't work without additionally doing constant version bumps (perhaps via Git tags) - but too much work to switch around all modules at once\n+    // Complicating things more the use of publish.gradle to centralize logic means modules and engine bits are treated the same, yet we need to vary modules\n+    // Temporary workaround: default modules to bypass release management: master branch builds will still make snapshot builds for the snapshot repo\n+    // If a module actually wants release management simply include `\"isReleaseManaged\" : true` in module.txt - this is needed for the engine repo embedded modules\n+    // One option would be to slowly convert modulespace to default to a `develop` + `master` setup living in harmony with associated automation/github tweaks\n+    // Alternatively one more round of refactoring could switch to Git tags, a single `master` branch, and possible other things to help match snaps/PR builds somehow?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk5MDA0OnYy", "diffSide": "RIGHT", "path": "modules/BiomesAPI/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoxOTo1MFrOF-mqiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzowNjo0OFrOF-vREA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4OTUxMw==", "bodyText": "I don't like the fact that the generic module.txt now holds information specific to our build system. As it is not officially documented anywhere, I guess its not much of a deal. Nevertheless, I would like to get rid of it asap.", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401189513", "createdAt": "2020-03-31T20:19:50Z", "author": {"login": "skaldarnar"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -35,17 +25,25 @@ buildscript {\n     }\n }\n \n-// Handle some logic related to where what is\n-sourceSets {\n-    main.java.outputDir = new File(\"$buildDir/classes\")\n-    test.java.outputDir = new File(\"$buildDir/testClasses\")\n-}\n-JavaPluginConvention convention = project.getConvention().getPlugin(JavaPluginConvention.class);\n-SourceSet mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+import groovy.json.JsonSlurper\n+import org.reflections.Reflections\n+import org.reflections.util.FilterBuilder\n+import org.reflections.scanners.SubTypesScanner\n+import org.reflections.scanners.TypeAnnotationsScanner\n+import org.reflections.util.ConfigurationBuilder\n \n ext {\n     // Read environment variables, including variables passed by jenkins continuous integration server\n     env = System.getenv()\n+\n+    // This is a fun one ... when versions switched to dynamic -SNAPSHOT or not based on branch existing modules using `master` would suddenly try publishing releases\n+    // This won't work without additionally doing constant version bumps (perhaps via Git tags) - but too much work to switch around all modules at once\n+    // Complicating things more the use of publish.gradle to centralize logic means modules and engine bits are treated the same, yet we need to vary modules\n+    // Temporary workaround: default modules to bypass release management: master branch builds will still make snapshot builds for the snapshot repo\n+    // If a module actually wants release management simply include `\"isReleaseManaged\" : true` in module.txt - this is needed for the engine repo embedded modules", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzMDQ0OA==", "bodyText": "Yep, it is a workaround for sure. Lets me get through this big release without an even bigger overhaul. It can be an undocced feature likely never to be used in module land as we can hopefully finish improving things soon.", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401330448", "createdAt": "2020-04-01T03:06:48Z", "author": {"login": "Cervator"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -35,17 +25,25 @@ buildscript {\n     }\n }\n \n-// Handle some logic related to where what is\n-sourceSets {\n-    main.java.outputDir = new File(\"$buildDir/classes\")\n-    test.java.outputDir = new File(\"$buildDir/testClasses\")\n-}\n-JavaPluginConvention convention = project.getConvention().getPlugin(JavaPluginConvention.class);\n-SourceSet mainSourceSet = convention.getSourceSets().getByName(\"main\");\n+import groovy.json.JsonSlurper\n+import org.reflections.Reflections\n+import org.reflections.util.FilterBuilder\n+import org.reflections.scanners.SubTypesScanner\n+import org.reflections.scanners.TypeAnnotationsScanner\n+import org.reflections.util.ConfigurationBuilder\n \n ext {\n     // Read environment variables, including variables passed by jenkins continuous integration server\n     env = System.getenv()\n+\n+    // This is a fun one ... when versions switched to dynamic -SNAPSHOT or not based on branch existing modules using `master` would suddenly try publishing releases\n+    // This won't work without additionally doing constant version bumps (perhaps via Git tags) - but too much work to switch around all modules at once\n+    // Complicating things more the use of publish.gradle to centralize logic means modules and engine bits are treated the same, yet we need to vary modules\n+    // Temporary workaround: default modules to bypass release management: master branch builds will still make snapshot builds for the snapshot repo\n+    // If a module actually wants release management simply include `\"isReleaseManaged\" : true` in module.txt - this is needed for the engine repo embedded modules", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4OTUxMw=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk5MzEwOnYy", "diffSide": "RIGHT", "path": "modules/BiomesAPI/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyMDo0MFrOF-msXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzoxNDo0M1rOF-vYhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4OTk4Mw==", "bodyText": "Why no null check for the branch name here? Shouldn't this be a similar check to isMaster(...) as proposed above?", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401189983", "createdAt": "2020-03-31T20:20:40Z", "author": {"login": "skaldarnar"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzMjM1OQ==", "bodyText": "Mixture of \"way too deep into the rabbit warren, just want to finish!\" and from this spot actually being null safe since == rather than equals :-)\nWhy is the other place null checking and using String.equals ? Rabbit holes and 2 am coding ;-)", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401332359", "createdAt": "2020-04-01T03:14:43Z", "author": {"login": "Cervator"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE4OTk4Mw=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzk5OTg4OnYy", "diffSide": "RIGHT", "path": "modules/BiomesAPI/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyMjoyM1rOF-mweg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMzozNTozOVrOF-vr9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MTAzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401191034", "createdAt": "2020-03-31T20:22:23Z", "author": {"login": "skaldarnar"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMzNzMzNA==", "bodyText": "Applied this, thanks! Actually cleaned it up a bit more yet now that I can brain again.", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401337334", "createdAt": "2020-04-01T03:35:39Z", "author": {"login": "Cervator"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MTAzNA=="}, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAwMjE3OnYy", "diffSide": "RIGHT", "path": "modules/BiomesAPI/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyMzowMlrOF-mx4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyMzowMlrOF-mx4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MTM5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (!version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401191393", "createdAt": "2020-03-31T20:23:02Z", "author": {"login": "skaldarnar"}, "path": "modules/BiomesAPI/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {\n+        version -= \"-SNAPSHOT\"\n+        def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n+        out.withStyle(Style.FailureHeader).println(\"WARNING: Module \" + project.name + \" is explicitly versioned as a snapshot in module.txt, please remove '-SNAPSHOT'\")\n+    }\n+} else {\n+    if (!version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAwODQwOnYy", "diffSide": "RIGHT", "path": "modules/BuilderSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNDozNlrOF-m1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNDozNlrOF-m1lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MjM0Mw==", "bodyText": "see above (isMaster(...) check).", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192343", "createdAt": "2020-03-31T20:24:36Z", "author": {"login": "skaldarnar"}, "path": "modules/BuilderSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAwOTEzOnYy", "diffSide": "RIGHT", "path": "modules/BuilderSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNDo0OFrOF-m2Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNDo0OFrOF-m2Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MjQ1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192458", "createdAt": "2020-03-31T20:24:48Z", "author": {"login": "skaldarnar"}, "path": "modules/BuilderSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAwOTg2OnYy", "diffSide": "RIGHT", "path": "modules/BuilderSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTowMFrOF-m2ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTowMFrOF-m2ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MjU3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (!version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192571", "createdAt": "2020-03-31T20:25:00Z", "author": {"login": "skaldarnar"}, "path": "modules/BuilderSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {\n+        version -= \"-SNAPSHOT\"\n+        def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n+        out.withStyle(Style.FailureHeader).println(\"WARNING: Module \" + project.name + \" is explicitly versioned as a snapshot in module.txt, please remove '-SNAPSHOT'\")\n+    }\n+} else {\n+    if (!version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxMTA4OnYy", "diffSide": "RIGHT", "path": "modules/Core/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNToyNFrOF-m3Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNToyNFrOF-m3Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Mjc3MQ==", "bodyText": "see above", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192771", "createdAt": "2020-03-31T20:25:24Z", "author": {"login": "skaldarnar"}, "path": "modules/Core/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxMTYwOnYy", "diffSide": "RIGHT", "path": "modules/Core/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTozM1rOF-m3kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTozM1rOF-m3kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Mjg0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192848", "createdAt": "2020-03-31T20:25:33Z", "author": {"login": "skaldarnar"}, "path": "modules/Core/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxMjEzOnYy", "diffSide": "RIGHT", "path": "modules/Core/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTo0M1rOF-m35A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNTo0M1rOF-m35A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MjkzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (!version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401192932", "createdAt": "2020-03-31T20:25:43Z", "author": {"login": "skaldarnar"}, "path": "modules/Core/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {\n+        version -= \"-SNAPSHOT\"\n+        def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n+        out.withStyle(Style.FailureHeader).println(\"WARNING: Module \" + project.name + \" is explicitly versioned as a snapshot in module.txt, please remove '-SNAPSHOT'\")\n+    }\n+} else {\n+    if (!version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNDQxOnYy", "diffSide": "RIGHT", "path": "modules/CoreSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjoyNFrOF-m5XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjoyNFrOF-m5XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MzMwOQ==", "bodyText": "see above", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193309", "createdAt": "2020-03-31T20:26:24Z", "author": {"login": "skaldarnar"}, "path": "modules/CoreSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNTA2OnYy", "diffSide": "RIGHT", "path": "modules/CoreSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjozN1rOF-m5yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjozN1rOF-m5yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MzQxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193417", "createdAt": "2020-03-31T20:26:37Z", "author": {"login": "skaldarnar"}, "path": "modules/CoreSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNTY1OnYy", "diffSide": "RIGHT", "path": "modules/CoreSampleGameplay/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjo0NlrOF-m6Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjo0NlrOF-m6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MzUxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (!version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193511", "createdAt": "2020-03-31T20:26:46Z", "author": {"login": "skaldarnar"}, "path": "modules/CoreSampleGameplay/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {\n+        version -= \"-SNAPSHOT\"\n+        def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n+        out.withStyle(Style.FailureHeader).println(\"WARNING: Module \" + project.name + \" is explicitly versioned as a snapshot in module.txt, please remove '-SNAPSHOT'\")\n+    }\n+} else {\n+    if (!version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNjY0OnYy", "diffSide": "RIGHT", "path": "templates/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjo1NlrOF-m6sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNjo1NlrOF-m6sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MzY0OQ==", "bodyText": "see above", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193649", "createdAt": "2020-03-31T20:26:56Z", "author": {"login": "skaldarnar"}, "path": "templates/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNzE2OnYy", "diffSide": "RIGHT", "path": "templates/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNzowNVrOF-m6_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNzowNVrOF-m6_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5MzcyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193724", "createdAt": "2020-03-31T20:27:05Z", "author": {"login": "skaldarnar"}, "path": "templates/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODAxNzUzOnYy", "diffSide": "RIGHT", "path": "templates/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNzoxNFrOF-m7Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDoyNzoxNFrOF-m7Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5Mzc5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!version.contains(\"-SNAPSHOT\")) {\n          \n          \n            \n                if (!version.endsWith(\"-SNAPSHOT\")) {", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401193791", "createdAt": "2020-03-31T20:27:14Z", "author": {"login": "skaldarnar"}, "path": "templates/build.gradle", "diffHunk": "@@ -69,11 +67,44 @@ for (dependency in moduleConfig.dependencies) {\n // Gradle uses the magic version variable when creating the jar name (unless explicitly set somewhere else I guess)\n version = moduleConfig.version\n \n+import org.gradle.internal.logging.text.StyledTextOutputFactory\n+import static org.gradle.internal.logging.text.StyledTextOutput.Style\n+\n+// The only case in which we make module non-snapshots is if release management is enabled and BRANCH_NAME is \"master\"\n+if (moduleConfig.isReleaseManaged && env.BRANCH_NAME == \"master\") {\n+    // This is mildly awkward since we need to bypass by default, yet if release management is on (true) then we set the bypass to false ..\n+    ext.bypassModuleReleaseManagement = false\n+    if (version.contains(\"-SNAPSHOT\")) {\n+        version -= \"-SNAPSHOT\"\n+        def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n+        out.withStyle(Style.FailureHeader).println(\"WARNING: Module \" + project.name + \" is explicitly versioned as a snapshot in module.txt, please remove '-SNAPSHOT'\")\n+    }\n+} else {\n+    if (!version.contains(\"-SNAPSHOT\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1eb808bcf65ae03f59197310db1dc30350fd7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTUyNjEyOnYy", "diffSide": "RIGHT", "path": "facades/subprojects.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowMjowM1rOF-1HnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowMjowM1rOF-1HnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyNjMzMw==", "bodyText": "What about a general approach like this (in the future): https://medium.com/@ungesehn/use-gitignore-for-gradle-task-excludes-e5d011e99f71\n.settings should be gitignores regardless of where in the file tree...", "url": "https://github.com/MovingBlocks/Terasology/pull/3871#discussion_r401426333", "createdAt": "2020-04-01T08:02:03Z", "author": {"login": "skaldarnar"}, "path": "facades/subprojects.gradle", "diffHunk": "@@ -1,9 +1,13 @@\n // This magically allows subdirs in this subproject to themselves become sub-subprojects in a proper tree structure\n new File(rootDir, 'facades').eachDir { possibleSubprojectDir ->\n-    def subprojectName = 'facades:' + possibleSubprojectDir.name\n-    println \"Processing facade $subprojectName, including it as a sub-project\"\n-    include subprojectName\n-    def subprojectPath = ':' + subprojectName\n-    def subproject = project(subprojectPath)\n-    subproject.projectDir = possibleSubprojectDir\n+    if (!possibleSubprojectDir.name.startsWith(\".\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5b1bf569c1c79f454a7cf07abf9f36f97d848e9"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 562, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}