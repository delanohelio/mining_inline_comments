{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NTgwMTEw", "number": 4351, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzo0Njo0MFrOFKMaHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzo0Njo0MFrOFKMaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjMzMzczOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/world/block/entity/BlockEntitySystem.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzo0Njo0MFrOIM3Mhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMDo0NTo0N1rOIM9HIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1ODE1MA==", "bodyText": "This makes we wonder whether BlockComponent should just expose Vector3ic getPosition() for read-only access \ud83e\udd14", "url": "https://github.com/MovingBlocks/Terasology/pull/4351#discussion_r550358150", "createdAt": "2020-12-30T23:46:40Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/entity/BlockEntitySystem.java", "diffHunk": "@@ -88,12 +87,12 @@ public void doDestroy(DoDestroyEvent event, EntityRef entity, ActAsBlockComponen\n     @ReceiveEvent(priority = EventPriority.PRIORITY_LOW)\n     public void doDestroy(DoDestroyEvent event, EntityRef entity, BlockComponent blockComponent) {\n         commonDestroyed(event, entity, blockComponent.block);\n-        worldProvider.setBlock(blockComponent.position, blockManager.getBlock(BlockManager.AIR_ID));\n+        worldProvider.setBlock(blockComponent.getPosition(new Vector3i()), blockManager.getBlock(BlockManager.AIR_ID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7da40644ededd5f7bd544d60fd716fe9f9782510"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxMDUwMw==", "bodyText": "that's ideally what I would like to do.  There are 67 other places this would need to be changed in. we might not have to change that much since the methods they adapt into have been migrated. thats around 20 or so modules so I think maybe that might be better to just do right away. we've already converted around half so a good portion have been migrated over already to this other getPosition Method.", "url": "https://github.com/MovingBlocks/Terasology/pull/4351#discussion_r550410503", "createdAt": "2020-12-31T06:44:27Z", "author": {"login": "pollend"}, "path": "engine/src/main/java/org/terasology/world/block/entity/BlockEntitySystem.java", "diffHunk": "@@ -88,12 +87,12 @@ public void doDestroy(DoDestroyEvent event, EntityRef entity, ActAsBlockComponen\n     @ReceiveEvent(priority = EventPriority.PRIORITY_LOW)\n     public void doDestroy(DoDestroyEvent event, EntityRef entity, BlockComponent blockComponent) {\n         commonDestroyed(event, entity, blockComponent.block);\n-        worldProvider.setBlock(blockComponent.position, blockManager.getBlock(BlockManager.AIR_ID));\n+        worldProvider.setBlock(blockComponent.getPosition(new Vector3i()), blockManager.getBlock(BlockManager.AIR_ID));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1ODE1MA=="}, "originalCommit": {"oid": "7da40644ededd5f7bd544d60fd716fe9f9782510"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ1NTA3NQ==", "bodyText": "I wouldn't do it in this PR, but I might just make another PR for that today (after getting through some more JOML PRs \ud83d\ude43 )\nLGTM as is \ud83d\udc4d", "url": "https://github.com/MovingBlocks/Terasology/pull/4351#discussion_r550455075", "createdAt": "2020-12-31T10:45:47Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/world/block/entity/BlockEntitySystem.java", "diffHunk": "@@ -88,12 +87,12 @@ public void doDestroy(DoDestroyEvent event, EntityRef entity, ActAsBlockComponen\n     @ReceiveEvent(priority = EventPriority.PRIORITY_LOW)\n     public void doDestroy(DoDestroyEvent event, EntityRef entity, BlockComponent blockComponent) {\n         commonDestroyed(event, entity, blockComponent.block);\n-        worldProvider.setBlock(blockComponent.position, blockManager.getBlock(BlockManager.AIR_ID));\n+        worldProvider.setBlock(blockComponent.getPosition(new Vector3i()), blockManager.getBlock(BlockManager.AIR_ID));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1ODE1MA=="}, "originalCommit": {"oid": "7da40644ededd5f7bd544d60fd716fe9f9782510"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 221, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}