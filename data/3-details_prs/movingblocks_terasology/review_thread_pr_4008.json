{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTYxNDU0", "number": 4008, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOToyMzo1NlrOEBKvGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMDowODo1NlrOEBNEhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjU5OTI4OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOToyMzo1NlrOGc3yPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjo0Mjo1NlrOGc6A3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzI5Mg==", "bodyText": "If it is only a milder message, why still printing it out as Styel.FailureHeader - how about an orange/yellow warning instead?\nAlso, I'm not sure we actually still need this. We can set the source and target language level, and I think compiling with Gradle will spit out any errors in that regard..\nSee https://docs.gradle.org/current/userguide/java_plugin.html#sec:java-extension\n// Set the expected module Java level (can use a higher Java to run, but should not use features from a higher Java)\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432927292", "createdAt": "2020-05-31T09:23:56Z", "author": {"login": "skaldarnar"}, "path": "build.gradle", "diffHunk": "@@ -64,7 +64,7 @@ import static org.gradle.internal.logging.text.StyledTextOutput.Style\n // Check for Java 8\n if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n     def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n-    out.withStyle(Style.FailureHeader).println(\"WARNING: You're compiling with a JDK newer than Java 8, this may not be fully supported for Terasology, consider adjusting your JAVA_HOME accordingly\")\n+    out.withStyle(Style.FailureHeader).println(\"NOTE: You're compiling with a JDK newer than 8. While we believe Java 9-11 to be safe to use, newer versions than that may cause issues. If you encounter any oddities try to see if they persist with Java 8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1Njc4Nw==", "bodyText": "Yeah, we're setting that compatibility target in all the java projects. Sometimes through indirect reference to common.gradle, but it should still be true.\nThe one documented case of a java 11 failure we've found is that thing we had with Ubuntu's openjdk distribution the other day. If we do keep a warning like this (and I'm not sure we should; it will be a false positive for the many working java 11 builds), it should have a link to our troubleshooting page.", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432956787", "createdAt": "2020-05-31T15:15:49Z", "author": {"login": "keturn"}, "path": "build.gradle", "diffHunk": "@@ -64,7 +64,7 @@ import static org.gradle.internal.logging.text.StyledTextOutput.Style\n // Check for Java 8\n if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n     def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n-    out.withStyle(Style.FailureHeader).println(\"WARNING: You're compiling with a JDK newer than Java 8, this may not be fully supported for Terasology, consider adjusting your JAVA_HOME accordingly\")\n+    out.withStyle(Style.FailureHeader).println(\"NOTE: You're compiling with a JDK newer than 8. While we believe Java 9-11 to be safe to use, newer versions than that may cause issues. If you encounter any oddities try to see if they persist with Java 8\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzI5Mg=="}, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MzgwNg==", "bodyText": "Updated \ud83d\udc4d Screenie on Discord. Went with a Java > 11 warning", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432963806", "createdAt": "2020-05-31T16:42:56Z", "author": {"login": "Cervator"}, "path": "build.gradle", "diffHunk": "@@ -64,7 +64,7 @@ import static org.gradle.internal.logging.text.StyledTextOutput.Style\n // Check for Java 8\n if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n     def out = services.get(StyledTextOutputFactory).create(\"an-ouput\")\n-    out.withStyle(Style.FailureHeader).println(\"WARNING: You're compiling with a JDK newer than Java 8, this may not be fully supported for Terasology, consider adjusting your JAVA_HOME accordingly\")\n+    out.withStyle(Style.FailureHeader).println(\"NOTE: You're compiling with a JDK newer than 8. While we believe Java 9-11 to be safe to use, newer versions than that may cause issues. If you encounter any oddities try to see if they persist with Java 8\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyNzI5Mg=="}, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYxODI4OnYy", "diffSide": "RIGHT", "path": "config/groovy/util.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOTo1Nzo0M1rOGc38ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjo0Njo0NlrOGc6B5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkxNQ==", "bodyText": "I'd like to vote for more concise logging messages:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n          \n          \n            \n                            println \"[init] Checkout default module distribution\"\n          \n      \n    \n    \n  \n\nMore details should appear in groovyw usage.\nAlso, why did you choose to go for get and not recurse for CoreSampleGameplay. In the end, this is for developers, and we have convenience to keep modules up-to-date: groovyw module update-all", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432929915", "createdAt": "2020-05-31T09:57:43Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NDA2OA==", "bodyText": "Applied all the logging improvements, thanks for the suggestions! Those were drafts at best :)\nAs for get vs recurse I wanted to keep out unneeded source unless the dev wants it - really the docs could just say to use groovyw module get|recurse X as desired. groovy module init would otherwise be about the same as init iota?\nIn any case I'm still not sure what to really think about the default init vs just the distros", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432964068", "createdAt": "2020-05-31T16:46:46Z", "author": {"login": "Cervator"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkxNQ=="}, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYxODQ2OnYy", "diffSide": "RIGHT", "path": "config/groovy/util.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOTo1Nzo1NVrOGc38jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOTo1Nzo1NVrOGc38jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTkzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Doing an init of a given module distro: \" + targetModuleDistro\n          \n          \n            \n                            println \"[init] Checkout module distribution: '$targetModuleDistro'\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432929935", "createdAt": "2020-05-31T09:57:55Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYyMDA2OnYy", "diffSide": "RIGHT", "path": "config/groovy/util.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowMTowNFrOGc39ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowMTowNFrOGc39ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDE3MQ==", "bodyText": "If something goes wrong, this prints a very verobse message (imho)\n\nDistro URL https://raw.githubusercontent.com/Terasology/Index/master/distros/jota/gradle.properties does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\n\nI would slim this down and split it up a bit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n          \n          \n            \n                                println \"[init] Invalid distribution name: '$targetModuleDistro'\"\n          \n          \n            \n                                println \"[init]     See https://github.com/Terasology/Index/tree/master/distros for available distributions\n          \n      \n    \n    \n  \n\nAs follow-up improvement, we could just fetch the list of supported distros dynamically:\n\n[init] Invalid distribution name: \"jota\"\n[init]     Available distributions: [awt, iota, omega]", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930171", "createdAt": "2020-05-31T10:01:04Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYyMjM5OnYy", "diffSide": "RIGHT", "path": "config/groovy/util.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowNTowMVrOGc3-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowNTowMVrOGc3-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDQ5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"\n          \n          \n            \n                                println \"[init] ERROR: Distribution does not contain key: '$moduleSnippet'\"\n          \n      \n    \n    \n  \n\nPossibly also add where to report errors or target PRs against:\n                    println \"[init]     Report an issue: https://github.com/Terasology/Index/issues\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930496", "createdAt": "2020-05-31T10:05:01Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n+                    break\n+                }\n+                String distroContent = new URL(targetDistroURL).text\n+                String moduleSnippet = \"extraModules=\"\n+                int someIndex = distroContent.indexOf(moduleSnippet)\n+                if (someIndex != -1) {\n+                    moduleLine = distroContent.substring((someIndex + moduleSnippet.length()), distroContent.indexOf(\"\\n\", someIndex))\n+                    common.retrieve(moduleLine.split(\",\"), false)\n+                } else {\n+                    println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjYyMzM3OnYy", "diffSide": "RIGHT", "path": "config/groovy/util.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowNzowN1rOGc3_SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxMDowNzowN1rOGc3_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkzMDYzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            println \"Too many arguments! Init only does a single given module distro. Use `get` or `recurse` for multiple arbitrary modules. See `groovyw usage`\"\n          \n          \n            \n                            println \"[init] Too many arguments! Usage: 'grooyw module init [distribution]'\"\n          \n          \n            \n                            println \"[init]     See `groovyw usage` for more information.\"", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432930633", "createdAt": "2020-05-31T10:07:07Z", "author": {"login": "skaldarnar"}, "path": "config/groovy/util.groovy", "diffHunk": "@@ -220,6 +220,36 @@ switch (cleanerArgs[0]) {\n \n         break\n \n+        // Makes sure a workspace has one or more modules matching user input, most useful for grabbing whole \"module distros\"\n+        case \"init\":\n+            // TODO: Move most this code into module.groovy, leave an error here if you use it for something else\n+            if (cleanerArgs.length == 1) {\n+                println \"Doing a default module init - simply fetching CoreSampleGameplay without dependencies in source (same as `groovyw module get CoreSampleGameplay`)\"\n+                String[] targetMods = [\"CoreSampleGameplay\"]\n+                common.retrieve(targetMods, false)\n+            } else if (cleanerArgs.length == 2) {\n+                def targetModuleDistro = cleanerArgs[1]\n+                println \"Doing an init of a given module distro: \" + targetModuleDistro\n+                def targetDistroURL = \"https://raw.githubusercontent.com/Terasology/Index/master/distros/\" + targetModuleDistro + \"/gradle.properties\"\n+                if (!common.isUrlValid(targetDistroURL)) {\n+                    println \"Distro URL $targetDistroURL does not seem to be valid, typo? See https://github.com/Terasology/Index/tree/master/distros for available distros\"\n+                    break\n+                }\n+                String distroContent = new URL(targetDistroURL).text\n+                String moduleSnippet = \"extraModules=\"\n+                int someIndex = distroContent.indexOf(moduleSnippet)\n+                if (someIndex != -1) {\n+                    moduleLine = distroContent.substring((someIndex + moduleSnippet.length()), distroContent.indexOf(\"\\n\", someIndex))\n+                    common.retrieve(moduleLine.split(\",\"), false)\n+                } else {\n+                    println \"Found the distro definition, but it seemed invalid - did not contain snippet: $moduleSnippet\"\n+                }\n+            } else {\n+                println \"Too many arguments! Init only does a single given module distro. Use `get` or `recurse` for multiple arbitrary modules. See `groovyw usage`\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4adc50d7b8491ee6c50576db980b19ea6d0378cd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Njk4MTgzOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMDowODo1NlrOGc6-3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMDozNjoxMFrOGc7HpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTY3OA==", "bodyText": "Aren't Java 1.8 and Java 9 != JavaVersion.VERSION_11? \ud83e\uddd0 Did you test that with Java 8 and 9?", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432979678", "createdAt": "2020-05-31T20:08:56Z", "author": {"login": "skaldarnar"}, "path": "build.gradle", "diffHunk": "@@ -62,9 +62,9 @@ import org.gradle.internal.logging.text.StyledTextOutputFactory\n import static org.gradle.internal.logging.text.StyledTextOutput.Style\n \n // Check for Java 8\n-if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n+if(JavaVersion.current() != JavaVersion.VERSION_11){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412dba32773b8cedaf63e0f120767da155f6d4c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDI5MA==", "bodyText": "it's probably fine \u2014 maybe even better \u2014 to support 8 or 11, instead of 8\u201311.\n9 and 10 weren't long-term releases. 10 hasn't been maintained for a year and a half by this point.", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432980290", "createdAt": "2020-05-31T20:16:53Z", "author": {"login": "keturn"}, "path": "build.gradle", "diffHunk": "@@ -62,9 +62,9 @@ import org.gradle.internal.logging.text.StyledTextOutputFactory\n import static org.gradle.internal.logging.text.StyledTextOutput.Style\n \n // Check for Java 8\n-if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n+if(JavaVersion.current() != JavaVersion.VERSION_11){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTY3OA=="}, "originalCommit": {"oid": "412dba32773b8cedaf63e0f120767da155f6d4c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MTkyNA==", "bodyText": "Whoops, thought that was a > not a != good catch :-)\nWill fix and test with a few more versions, been aiming to try it on two other systems. Can adjust logging for 8 or 11. Would we want to outright warn people if they're on 9 or 10?", "url": "https://github.com/MovingBlocks/Terasology/pull/4008#discussion_r432981924", "createdAt": "2020-05-31T20:36:10Z", "author": {"login": "Cervator"}, "path": "build.gradle", "diffHunk": "@@ -62,9 +62,9 @@ import org.gradle.internal.logging.text.StyledTextOutputFactory\n import static org.gradle.internal.logging.text.StyledTextOutput.Style\n \n // Check for Java 8\n-if(JavaVersion.current() != JavaVersion.VERSION_1_8){\n+if(JavaVersion.current() != JavaVersion.VERSION_11){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTY3OA=="}, "originalCommit": {"oid": "412dba32773b8cedaf63e0f120767da155f6d4c0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 491, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}