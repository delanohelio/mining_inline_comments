{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMTIzMTY2", "number": 3918, "title": "feat: Particle System Gen./Aff. Registration", "bodyText": "This commit is a continuation from #3230. I removed Facade.groovy, resolved compile issues, conflicts and implemented tweaks from @eviltak.", "createdAt": "2020-04-30T04:28:23Z", "url": "https://github.com/MovingBlocks/Terasology/pull/3918", "merged": true, "mergeCommit": {"oid": "64266ff3b7e638b0cf5c6a73a464ab0178ffae1c"}, "closed": true, "closedAt": "2020-05-01T22:32:20Z", "author": {"login": "pollend"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcclVsugH2gAyNDExMTIzMTY2OjkyYTRkN2ZlMTcxYTQ0NzZkZDY5ZTdhY2ZiZjNlYTVlZWIxZDlkOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdFhtjAFqTQwNDMwMzc3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92a4d7fe171a4476dd69e7acfbf3ea5eeb1d9d9b", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/92a4d7fe171a4476dd69e7acfbf3ea5eeb1d9d9b", "committedDate": "2020-04-30T04:26:09Z", "message": "Tweaked and removed unused classes and resolved comments from @eviltak\n\ncommit e59df8debb9ee42d9c6fd1e3ea5774bbdf8db8c8\nAuthor: Max <maximborsch@gmail.com>\nDate:   Tue Jan 16 21:47:53 2018 -0500\n\n    PS Generator/Affector Annotation registration & refac.\n\ncommit ccd59051f735e393cb6ccc3c1611fff6e525ac3d\nAuthor: Max <maximborsch@gmail.com>\nDate:   Tue Jan 16 21:47:53 2018 -0500\n\n    PS Generator/Affector Annotation registration & refac.\n\ncommit f2c0c6c582e693e3a398147e9cf56f5d01ed787f\nAuthor: Max <maximborsch@gmail.com>\nDate:   Tue Jan 2 20:09:23 2018 -0500\n\n    Particle javadocs & gitignore fix\n\ncommit c658058c01bd32a9345a2e126eb99158ada9237e\nAuthor: Max <maximborsch@gmail.com>\nDate:   Tue Jan 2 13:35:51 2018 -0500\n\n    Particle System Javadocs\n\ncommit 732ed55f9278d121117bda1dc8167879db5a2be9\nAuthor: Max <maximborsch@gmail.com>\nDate:   Wed Dec 20 17:56:15 2017 -0500\n\n    facade.groovy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717bb9135244e2760bee7443dfe90c9500e6c517", "author": {"user": {"login": "pollend", "name": "Michael Pollind"}}, "url": "https://github.com/MovingBlocks/Terasology/commit/717bb9135244e2760bee7443dfe90c9500e6c517", "committedDate": "2020-04-30T20:33:53Z", "message": "fixed unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MzAzNzcy", "url": "https://github.com/MovingBlocks/Terasology/pull/3918#pullrequestreview-404303772", "createdAt": "2020-05-01T17:55:13Z", "commit": {"oid": "717bb9135244e2760bee7443dfe90c9500e6c517"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNzo1NToxM1rOGPQ6Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNzo1NToxM1rOGPQ6Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY1ODg2Mw==", "bodyText": "Is there any way to ensure that a specific class can only have two sub-classes? This code relies on the fact that a ParticleSystemFunction is either a GeneratorFunction  or a AffectorFunction ...", "url": "https://github.com/MovingBlocks/Terasology/pull/3918#discussion_r418658863", "createdAt": "2020-05-01T17:55:13Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/particles/updating/ParticleUpdaterImpl.java", "diffHunk": "@@ -107,9 +127,38 @@ public void update(final float delta) {\n     }\n \n     @Override\n-    public void configureEmitter(final ParticleEmitterComponent emitter,\n-                                 final BiMap<Class<Component>, AffectorFunction> registeredAffectorFunctions,\n-                                 final BiMap<Class<Component>, GeneratorFunction> registeredGeneratorFunctions) {\n+    public void initialize() {\n+        ModuleEnvironment environment = moduleManager.getEnvironment();\n+\n+        for (Class<?> type : environment.getTypesAnnotatedWith(RegisterParticleSystemFunction.class)) {\n+            RegisterParticleSystemFunction annotation = type.getAnnotation(RegisterParticleSystemFunction.class);\n+\n+            if (!ParticleSystemFunction.class.isAssignableFrom(type)) {\n+                logger.error(\"Cannot register particle system function {}, must be a subclass of ParticleSystemFunction\", type.getSimpleName());\n+            } else {\n+                try {\n+                    ParticleSystemFunction function = (ParticleSystemFunction) type.newInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "717bb9135244e2760bee7443dfe90c9500e6c517"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1496, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}