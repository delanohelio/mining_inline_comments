{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTQ2ODkw", "number": 4059, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyMjo0MFrOEHX13w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozMDoxN1rOEHZVXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2MTExOnYy", "diffSide": "RIGHT", "path": ".idea/misc.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyMjo0MFrOGms6wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyMjo0MFrOGms6wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTAwOA==", "bodyText": "@keturn we'll see more and more of these unrelated changes, right? Ultimate vs Community edition, as well as plugins installed in addition to the recommended ones will add to these files if I get it right... \ud83d\ude44", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235008", "createdAt": "2020-06-21T16:22:40Z", "author": {"login": "skaldarnar"}, "path": ".idea/misc.xml", "diffHunk": "@@ -12,5 +12,11 @@\n     </writeAnnotations>\n   </component>\n   <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n+  <component name=\"FrameworkDetectionExcludesConfiguration\">\n+    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\n+  </component>\n+  <component name=\"JavaScriptSettings\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2Mjk1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyNTozMFrOGms7qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNzowMzoyMFrOGmtHMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTI0Mw==", "bodyText": "Is there a specific reason for writing 1 << 8 instead of 256? Is the grid dimension required to be a power of 2?", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235243", "createdAt": "2020-06-21T16:25:30Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "diffHunk": "@@ -27,38 +27,50 @@\n public class PerlinNoise extends AbstractNoise implements Noise2D, Noise3D {\n \n     private final int[] noisePermutations;\n+    private final int permCount;\n \n     /**\n      * Init. a new generator with a given seed value.\n      *\n      * @param seed The seed value\n      */\n     public PerlinNoise(long seed) {\n+        this(seed, 1 << 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzODE5NQ==", "bodyText": "Ah nothing it think this is copypasta effects?\nAnyways fixing this", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443238195", "createdAt": "2020-06-21T17:03:20Z", "author": {"login": "sin3point14"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "diffHunk": "@@ -27,38 +27,50 @@\n public class PerlinNoise extends AbstractNoise implements Noise2D, Noise3D {\n \n     private final int[] noisePermutations;\n+    private final int permCount;\n \n     /**\n      * Init. a new generator with a given seed value.\n      *\n      * @param seed The seed value\n      */\n     public PerlinNoise(long seed) {\n+        this(seed, 1 << 8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTI0Mw=="}, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2NDQwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyODoxMVrOGms8aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNzoxMzo1NlrOGmtKCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTQzMw==", "bodyText": "Why do we floor two times here, or what exactly does floorMod do?", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235433", "createdAt": "2020-06-21T16:28:11Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "diffHunk": "@@ -71,9 +83,9 @@ public PerlinNoise(long seed) {\n      */\n     @Override\n     public float noise(float posX, float posY, float posZ) {\n-        int xInt = (int) TeraMath.fastFloor(posX) & 255;\n-        int yInt = (int) TeraMath.fastFloor(posY) & 255;\n-        int zInt = (int) TeraMath.fastFloor(posZ) & 255;\n+        int xInt = Math.floorMod((int) TeraMath.fastFloor(posX), permCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzODU2OQ==", "bodyText": "% doesn't handle negative numbers well, for those cases floorMod is needed and fastFloor converts a float to int while always reducing it, casting to int will give issues- (int)-7.65 == -7 while -8 is needed here", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443238569", "createdAt": "2020-06-21T17:08:44Z", "author": {"login": "sin3point14"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "diffHunk": "@@ -71,9 +83,9 @@ public PerlinNoise(long seed) {\n      */\n     @Override\n     public float noise(float posX, float posY, float posZ) {\n-        int xInt = (int) TeraMath.fastFloor(posX) & 255;\n-        int yInt = (int) TeraMath.fastFloor(posY) & 255;\n-        int zInt = (int) TeraMath.fastFloor(posZ) & 255;\n+        int xInt = Math.floorMod((int) TeraMath.fastFloor(posX), permCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTQzMw=="}, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzODkyMg==", "bodyText": "ok in the simplex implementation I found the better version to use here floorToInt, swapping it in", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443238922", "createdAt": "2020-06-21T17:13:56Z", "author": {"login": "sin3point14"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/PerlinNoise.java", "diffHunk": "@@ -71,9 +83,9 @@ public PerlinNoise(long seed) {\n      */\n     @Override\n     public float noise(float posX, float posY, float posZ) {\n-        int xInt = (int) TeraMath.fastFloor(posX) & 255;\n-        int yInt = (int) TeraMath.fastFloor(posY) & 255;\n-        int zInt = (int) TeraMath.fastFloor(posZ) & 255;\n+        int xInt = Math.floorMod((int) TeraMath.fastFloor(posX), permCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTQzMw=="}, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2NDg1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyOTowN1rOGms8pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyOTowN1rOGms8pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTQ5Mw==", "bodyText": "Typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public SimplexNoise(long seed, int girdDim) {\n          \n          \n            \n                public SimplexNoise(long seed, int gridDim) {", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235493", "createdAt": "2020-06-21T16:29:07Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "diffHunk": "@@ -62,42 +62,57 @@\n     private static final float F4 = ((float) Math.sqrt(5.0f) - 1.0f) / 4.0f;\n     private static final float G4 = (5.0f - (float) Math.sqrt(5.0f)) / 20.0f;\n \n-    private final short[] perm = new short[512];\n-    private final short[] permMod12 = new short[512];\n+    private final short[] perm;\n+    private final short[] permMod12;\n+    private final int permCount;\n \n     /**\n-     * Initialize permutations with a given seed\n+     * Multiply this with the gridDim provided and noise(x,x) will give tileable 1D noise which will tile\n+     * when x crosses a multiple of (this * gridDim)\n+     */\n+    public final float tileable1DMagicNumber = 0.5773502691896258f;\n+\n+    /**\n+     * Initialize permutations with a given seed and grid dimension.\n+     * Supports 1D tileable noise\n+     * @see SimplexNoise#tileable1DMagicNumber\n      *\n      * @param seed a seed value used for permutation shuffling\n+     * @param gridDim gridDim x gridDim will be the number of squares in the square grid formed after skewing the simplices belonging to once \"tile\"\n      */\n     public SimplexNoise(long seed) {\n+        this(seed, 8);\n+    }\n+\n+    public SimplexNoise(long seed, int girdDim) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2NTEzOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjoyOTozOFrOGms8xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNzowOToyNlrOGmtI2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTUyNw==", "bodyText": "Why does Perlin noise have a grid dimension of 1 << 8 and Simplex noise a grid dimension of 8?", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235527", "createdAt": "2020-06-21T16:29:38Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "diffHunk": "@@ -62,42 +62,57 @@\n     private static final float F4 = ((float) Math.sqrt(5.0f) - 1.0f) / 4.0f;\n     private static final float G4 = (5.0f - (float) Math.sqrt(5.0f)) / 20.0f;\n \n-    private final short[] perm = new short[512];\n-    private final short[] permMod12 = new short[512];\n+    private final short[] perm;\n+    private final short[] permMod12;\n+    private final int permCount;\n \n     /**\n-     * Initialize permutations with a given seed\n+     * Multiply this with the gridDim provided and noise(x,x) will give tileable 1D noise which will tile\n+     * when x crosses a multiple of (this * gridDim)\n+     */\n+    public final float tileable1DMagicNumber = 0.5773502691896258f;\n+\n+    /**\n+     * Initialize permutations with a given seed and grid dimension.\n+     * Supports 1D tileable noise\n+     * @see SimplexNoise#tileable1DMagicNumber\n      *\n      * @param seed a seed value used for permutation shuffling\n+     * @param gridDim gridDim x gridDim will be the number of squares in the square grid formed after skewing the simplices belonging to once \"tile\"\n      */\n     public SimplexNoise(long seed) {\n+        this(seed, 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzODYxNg==", "bodyText": "Oh this was a bad miss, fixing this rn thanks!", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443238616", "createdAt": "2020-06-21T17:09:26Z", "author": {"login": "sin3point14"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "diffHunk": "@@ -62,42 +62,57 @@\n     private static final float F4 = ((float) Math.sqrt(5.0f) - 1.0f) / 4.0f;\n     private static final float G4 = (5.0f - (float) Math.sqrt(5.0f)) / 20.0f;\n \n-    private final short[] perm = new short[512];\n-    private final short[] permMod12 = new short[512];\n+    private final short[] perm;\n+    private final short[] permMod12;\n+    private final int permCount;\n \n     /**\n-     * Initialize permutations with a given seed\n+     * Multiply this with the gridDim provided and noise(x,x) will give tileable 1D noise which will tile\n+     * when x crosses a multiple of (this * gridDim)\n+     */\n+    public final float tileable1DMagicNumber = 0.5773502691896258f;\n+\n+    /**\n+     * Initialize permutations with a given seed and grid dimension.\n+     * Supports 1D tileable noise\n+     * @see SimplexNoise#tileable1DMagicNumber\n      *\n      * @param seed a seed value used for permutation shuffling\n+     * @param gridDim gridDim x gridDim will be the number of squares in the square grid formed after skewing the simplices belonging to once \"tile\"\n      */\n     public SimplexNoise(long seed) {\n+        this(seed, 8);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTUyNw=="}, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTY2NjA1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxNjozMDo0OFrOGms9QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxODowNjoxNlrOGmtZhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTY0OQ==", "bodyText": "In the Perlin implementation you did some combination of floorMod and floor  - why is a simple modulo operation sufficient here, and why is it not sufficient in Perlin implementation?", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443235649", "createdAt": "2020-06-21T16:30:48Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "diffHunk": "@@ -154,8 +169,8 @@ public float noise(float xin, float yin) {\n         float y2 = y0 - 1.0f + 2.0f * G2;\n \n         // Work out the hashed gradient indices of the three simplex corners\n-        int ii = i & 255;\n-        int jj = j & 255;\n+        int ii = i % permCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0Mjg4NQ==", "bodyText": "oh I thought that here i, j are positive integers but on second look I can see that this is problematic, fixed this", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443242885", "createdAt": "2020-06-21T18:06:16Z", "author": {"login": "sin3point14"}, "path": "engine/src/main/java/org/terasology/utilities/procedural/SimplexNoise.java", "diffHunk": "@@ -154,8 +169,8 @@ public float noise(float xin, float yin) {\n         float y2 = y0 - 1.0f + 2.0f * G2;\n \n         // Work out the hashed gradient indices of the three simplex corners\n-        int ii = i & 255;\n-        int jj = j & 255;\n+        int ii = i % permCount;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIzNTY0OQ=="}, "originalCommit": {"oid": "38aced9bdffe71da3f83e3a6a50ec712436a40dd"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MTkwNTU3OnYy", "diffSide": "RIGHT", "path": ".idea/misc.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozMDoxN1rOGmu4sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQyMzozMDoxN1rOGmu4sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI2NzI0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <component name=\"FrameworkDetectionExcludesConfiguration\">\n          \n          \n            \n                <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\n          \n          \n            \n              </component>\n          \n          \n            \n              <component name=\"JavaScriptSettings\">\n          \n          \n            \n                <option name=\"languageLevel\" value=\"ES6\" />\n          \n          \n            \n              </component>", "url": "https://github.com/MovingBlocks/Terasology/pull/4059#discussion_r443267249", "createdAt": "2020-06-21T23:30:17Z", "author": {"login": "pollend"}, "path": ".idea/misc.xml", "diffHunk": "@@ -12,5 +12,11 @@\n     </writeAnnotations>\n   </component>\n   <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n+  <component name=\"FrameworkDetectionExcludesConfiguration\">\n+    <file type=\"web\" url=\"file://$PROJECT_DIR$\" />\n+  </component>\n+  <component name=\"JavaScriptSettings\">\n+    <option name=\"languageLevel\" value=\"ES6\" />\n+  </component>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0ffa140e15051004a1f74c31d160c962121517"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 309, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}