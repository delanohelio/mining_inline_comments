{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTY4NTc1", "number": 4016, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo1Njo1OFrOEBcKvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo1MzoxMFrOEBkYTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTQ1NTM1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/extensionTypes/ComponentClassTypeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo1Njo1OFrOGdSY5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo1Njo1OFrOGdSY5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2MzE3Mw==", "bodyText": "newline\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            }", "url": "https://github.com/MovingBlocks/Terasology/pull/4016#discussion_r433363173", "createdAt": "2020-06-01T16:56:58Z", "author": {"login": "jdrueckert"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/extensionTypes/ComponentClassTypeHandler.java", "diffHunk": "@@ -17,22 +17,23 @@\n \n import org.terasology.entitySystem.Component;\n import org.terasology.persistence.typeHandling.StringRepresentationTypeHandler;\n+import org.terasology.persistence.typeHandling.TypeHandlerContext;\n \n public class ComponentClassTypeHandler extends StringRepresentationTypeHandler<Class<? extends Component>> {\n \n+    TypeHandlerContext context;\n+\n+    public ComponentClassTypeHandler(final TypeHandlerContext context) {\n+        this.context = context;\n+    }\n+\n     @Override\n     public String getAsString(Class<? extends Component> item) {\n-        return item.getName();\n+        return context.getSandbox().getSubTypeIdentifier(item, Component.class);\n     }\n \n     @Override\n     public Class<? extends Component> getFromString(String representation) {\n-        try {\n-            final Class<? extends Component> clazz = Class.forName(representation).asSubclass(Component.class);\n-            return clazz;\n-        } catch (ClassNotFoundException e) {\n-            e.printStackTrace();\n-            return null;\n-        }\n+        return context.getSandbox().findSubTypeOf(representation, Component.class).orElse(null);\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "993e7164a9f22164b96a578086f8d48e285ed3c3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDgwMDc5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/extensionTypes/ComponentClassTypeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo1MzoxMFrOGdfjPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyNjoyOFrOGgEPyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3ODgxMw==", "bodyText": "This is the only thing in this PR that's not just a straight deletion. And it looks okay from here.\nIt does change the constructor, but presumably that's the sort of thing that you'd find out pretty fast as soon as you tried to compile against it.\nActually ... where is this class used? it's not in my workspace.", "url": "https://github.com/MovingBlocks/Terasology/pull/4016#discussion_r433578813", "createdAt": "2020-06-02T01:53:10Z", "author": {"login": "keturn"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/extensionTypes/ComponentClassTypeHandler.java", "diffHunk": "@@ -17,22 +17,23 @@\n \n import org.terasology.entitySystem.Component;\n import org.terasology.persistence.typeHandling.StringRepresentationTypeHandler;\n+import org.terasology.persistence.typeHandling.TypeHandlerContext;\n \n public class ComponentClassTypeHandler extends StringRepresentationTypeHandler<Class<? extends Component>> {\n \n+    TypeHandlerContext context;\n+\n+    public ComponentClassTypeHandler(final TypeHandlerContext context) {\n+        this.context = context;\n+    }\n+\n     @Override\n     public String getAsString(Class<? extends Component> item) {\n-        return item.getName();\n+        return context.getSandbox().getSubTypeIdentifier(item, Component.class);\n     }\n \n     @Override\n     public Class<? extends Component> getFromString(String representation) {\n-        try {\n-            final Class<? extends Component> clazz = Class.forName(representation).asSubclass(Component.class);\n-            return clazz;\n-        } catch (ClassNotFoundException e) {\n-            e.printStackTrace();\n-            return null;\n-        }\n+        return context.getSandbox().findSubTypeOf(representation, Component.class).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a20f22e15ed660e32d68538e833653a53e2c8a9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3NzE5Mw==", "bodyText": "Ah, this is actually some sneaky little code cleanup \ud83e\udd13\nThis class here existed, but was never used. However, there existed another inner class with exact same name (and purpose) in ComponentClassTypeHandlerFactory. As I don't like inner classes, I thought it would be better to have the correct code in this class, which is now used by the factory.\nSee https://github.com/MovingBlocks/Terasology/pull/4016/files#diff-7fd63f399c356366e5f1abab7dc34ebcL40-L57", "url": "https://github.com/MovingBlocks/Terasology/pull/4016#discussion_r436277193", "createdAt": "2020-06-06T15:26:28Z", "author": {"login": "skaldarnar"}, "path": "engine/src/main/java/org/terasology/persistence/typeHandling/extensionTypes/ComponentClassTypeHandler.java", "diffHunk": "@@ -17,22 +17,23 @@\n \n import org.terasology.entitySystem.Component;\n import org.terasology.persistence.typeHandling.StringRepresentationTypeHandler;\n+import org.terasology.persistence.typeHandling.TypeHandlerContext;\n \n public class ComponentClassTypeHandler extends StringRepresentationTypeHandler<Class<? extends Component>> {\n \n+    TypeHandlerContext context;\n+\n+    public ComponentClassTypeHandler(final TypeHandlerContext context) {\n+        this.context = context;\n+    }\n+\n     @Override\n     public String getAsString(Class<? extends Component> item) {\n-        return item.getName();\n+        return context.getSandbox().getSubTypeIdentifier(item, Component.class);\n     }\n \n     @Override\n     public Class<? extends Component> getFromString(String representation) {\n-        try {\n-            final Class<? extends Component> clazz = Class.forName(representation).asSubclass(Component.class);\n-            return clazz;\n-        } catch (ClassNotFoundException e) {\n-            e.printStackTrace();\n-            return null;\n-        }\n+        return context.getSandbox().findSubTypeOf(representation, Component.class).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3ODgxMw=="}, "originalCommit": {"oid": "0a20f22e15ed660e32d68538e833653a53e2c8a9"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 504, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}