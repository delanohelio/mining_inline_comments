{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDY3ODU0", "number": 250, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowNjozN1rOEK3iyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzowMzoxMVrOEK4xJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODMxMjQxOnYy", "diffSide": "RIGHT", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowNjozN1rOGsJ71Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowNzo0NVrOGsJ-Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1MzMwMQ==", "bodyText": "String::cast \u0442\u0443\u0442 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448953301", "createdAt": "2020-07-02T12:06:37Z", "author": {"login": "bokshitsky"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -90,9 +94,26 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n   }\n \n   private Map<String, Object> getTopicOverriddenConsumerProperties(String topicName) {\n+    findAnyMatchedKey(String.format(\n+        TOPIC_CONSUMER_INVALID_CONFIG_REGEXP_TEMPLATE, kafkaClusterName, topicName))\n+        .ifPresent(key -> {\n+          throw new IllegalArgumentException(\n+              String.format(\"Unused property found: '%s'\", key)\n+          );\n+        });\n     return getConfigAsMap(String.format(TOPIC_CONSUMER_CONFIG_TEMPLATE, kafkaClusterName, topicName));\n   }\n \n+  private Optional<String> findAnyMatchedKey(String pattern) {\n+    Pattern compiledPattern = Pattern.compile(pattern);\n+    return fileSettings.getProperties().keySet()\n+        .stream()\n+        .filter(String.class::isInstance)\n+        .map(key -> (String) key)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3321e99e2b0039374bbb31661fc61230b14296"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1MzkwMw==", "bodyText": "\u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u043d\u043e \u0442\u0430\u043c \u0432\u043d\u0443\u0442\u0440\u0438 \u043e\u043f\u044f\u0442\u044c \u0431\u0443\u0434\u0435\u0442 isInstance. \u0437\u0430\u0448\u043a\u0432\u0430\u0440\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448953903", "createdAt": "2020-07-02T12:07:45Z", "author": {"login": "alexeydubinin"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -90,9 +94,26 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n   }\n \n   private Map<String, Object> getTopicOverriddenConsumerProperties(String topicName) {\n+    findAnyMatchedKey(String.format(\n+        TOPIC_CONSUMER_INVALID_CONFIG_REGEXP_TEMPLATE, kafkaClusterName, topicName))\n+        .ifPresent(key -> {\n+          throw new IllegalArgumentException(\n+              String.format(\"Unused property found: '%s'\", key)\n+          );\n+        });\n     return getConfigAsMap(String.format(TOPIC_CONSUMER_CONFIG_TEMPLATE, kafkaClusterName, topicName));\n   }\n \n+  private Optional<String> findAnyMatchedKey(String pattern) {\n+    Pattern compiledPattern = Pattern.compile(pattern);\n+    return fileSettings.getProperties().keySet()\n+        .stream()\n+        .filter(String.class::isInstance)\n+        .map(key -> (String) key)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1MzMwMQ=="}, "originalCommit": {"oid": "1f3321e99e2b0039374bbb31661fc61230b14296"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODQ2NzA5OnYy", "diffSide": "RIGHT", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjo1MTo1M1rOGsLcOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjo1MzowMVrOGsLfKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3Nzk3Ng==", "bodyText": "checkNames \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448977976", "createdAt": "2020-07-02T12:51:53Z", "author": {"login": "bokshitsky"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -83,16 +88,45 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n           String.format(\"'%s' should not be larger then '%s'\", BACKOFF_MAX_INTERVAL_NAME, MAX_POLL_INTERVAL_MS_CONFIG)\n       );\n     }\n+    checkNames(allConsumerSettings);\n+  }\n+\n+  void checkNames(FileSettings allConsumerSettings) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3ODczMA==", "bodyText": "\u0432 defense \u0441\u043b\u0443\u0436\u0438\u043b \u0447\u0442\u043e\u043b\u0438, \u043e\u043a)", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448978730", "createdAt": "2020-07-02T12:53:01Z", "author": {"login": "alexeydubinin"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -83,16 +88,45 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n           String.format(\"'%s' should not be larger then '%s'\", BACKOFF_MAX_INTERVAL_NAME, MAX_POLL_INTERVAL_MS_CONFIG)\n       );\n     }\n+    checkNames(allConsumerSettings);\n+  }\n+\n+  void checkNames(FileSettings allConsumerSettings) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3Nzk3Ng=="}, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODQ2OTcwOnYy", "diffSide": "RIGHT", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjo1MjoyNlrOGsLdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjo1NToyNlrOGsLlDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3ODM3NA==", "bodyText": "\u0414\u0443\u043c\u0430\u044e, \u043b\u0443\u0447\u0448\u0435 \u0430\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0438 \u0432 \u043e\u0448\u0438\u0431\u043a\u0435 \u0438\u0445 \u0431\u0440\u043e\u0441\u0438\u0442\u044c, \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448978374", "createdAt": "2020-07-02T12:52:26Z", "author": {"login": "bokshitsky"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -83,16 +88,45 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n           String.format(\"'%s' should not be larger then '%s'\", BACKOFF_MAX_INTERVAL_NAME, MAX_POLL_INTERVAL_MS_CONFIG)\n       );\n     }\n+    checkNames(allConsumerSettings);\n+  }\n+\n+  void checkNames(FileSettings allConsumerSettings) {\n+    Set<String> supportedNames = ConsumerConfig.configNames();\n+    allConsumerSettings.getProperties().keySet().forEach(key -> {\n+      if (!supportedNames.contains(key)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4MDIzOQ==", "bodyText": "\u043e\u043a", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448980239", "createdAt": "2020-07-02T12:55:26Z", "author": {"login": "alexeydubinin"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/util/ConfigProvider.java", "diffHunk": "@@ -83,16 +88,45 @@ private void checkConfig(FileSettings nabConsumerSettings, FileSettings allConsu\n           String.format(\"'%s' should not be larger then '%s'\", BACKOFF_MAX_INTERVAL_NAME, MAX_POLL_INTERVAL_MS_CONFIG)\n       );\n     }\n+    checkNames(allConsumerSettings);\n+  }\n+\n+  void checkNames(FileSettings allConsumerSettings) {\n+    Set<String> supportedNames = ConsumerConfig.configNames();\n+    allConsumerSettings.getProperties().keySet().forEach(key -> {\n+      if (!supportedNames.contains(key)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3ODM3NA=="}, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODUxMzAzOnYy", "diffSide": "RIGHT", "path": "nab-kafka/src/test/java/ru/hh/nab/kafka/util/ConfigProviderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzowMzoxMVrOGsL4dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzowNDowNlrOGsL6hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTIwNg==", "bodyText": "\u0430 \u0442\u0435\u0441\u0442\u044b \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043e\u043e\u0431\u0449\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442?", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448985206", "createdAt": "2020-07-02T13:03:11Z", "author": {"login": "SCREEN88"}, "path": "nab-kafka/src/test/java/ru/hh/nab/kafka/util/ConfigProviderTest.java", "diffHunk": "@@ -70,6 +71,40 @@ public void shouldReturnOverriddenConsumerSettingForSpecificTopic() {\n     assertEquals(defaultValue, result.get(testKey));\n   }\n \n+  @Test\n+  public void shouldFailOnUnusedOverriddenConsumerSettingForSpecificTopic() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTczNQ==", "bodyText": "\u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442", "url": "https://github.com/hhru/nuts-and-bolts/pull/250#discussion_r448985735", "createdAt": "2020-07-02T13:04:06Z", "author": {"login": "alexeydubinin"}, "path": "nab-kafka/src/test/java/ru/hh/nab/kafka/util/ConfigProviderTest.java", "diffHunk": "@@ -70,6 +71,40 @@ public void shouldReturnOverriddenConsumerSettingForSpecificTopic() {\n     assertEquals(defaultValue, result.get(testKey));\n   }\n \n+  @Test\n+  public void shouldFailOnUnusedOverriddenConsumerSettingForSpecificTopic() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTIwNg=="}, "originalCommit": {"oid": "adea320f03d9c7a4cc6d596165c189a95d8e4500"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4248, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}