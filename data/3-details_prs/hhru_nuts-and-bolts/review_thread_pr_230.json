{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMjQ3Nzc3", "number": 230, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTo0NDozMlrODqTTlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozODo0NVrODsC-IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjgzMDkyOnYy", "diffSide": "RIGHT", "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTo0NDozMlrOF59mew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTo0NDozMlrOF59mew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMyMjQyNw==", "bodyText": "\u044d\u0442\u043e \u0433\u0434\u0435-\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0441\u0442\u043e\u043f\u0443\u0434\u043e\u0432\u043e \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043e\u0439", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r396322427", "createdAt": "2020-03-23T09:44:32Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext,\n+                       ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String AcceptErrors = requestContext.getHeaders().getFirst(\"X-HH-AcceptErrors\");\n+            if (AcceptErrors != null) {\n+                responseContext.getHeaders().replace(\"Content-Type\", List.of(AcceptErrors));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b27b946e0abf20c90c68068bcac60a6e8716dd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjgzNzI0OnYy", "diffSide": "RIGHT", "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTo0NjoyM1rOF59qnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo1NDowM1rOF6AH6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMyMzQ4Nw==", "bodyText": "\u044d\u0442\u043e \u043d\u0443 \u043b\u0438\u0431\u043e RequestHeaders, \u043b\u0438\u0431\u043e \u0440\u0430\u0437 \u0443\u0436 \u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u043c\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c jclient \u0438 nab, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0432 jclient-common-api \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c, \u0430 \u0432 \u0441\u0442\u0430\u0440\u0442\u0435\u0440 \u0431\u0430\u0445\u043d\u0443\u0442\u044c \u043e\u0442 jclient-common-api \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c. \u0438 \u043e\u0442\u0442\u0443\u0434\u0430 \u0431\u0440\u0430\u0442\u044c. \u0432 \u043d\u0430\u0431\u0435 \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0445\u0435\u0434\u0435\u0440 \u0442\u0430\u043a\u043e\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u043e outerTimeout - \u0435\u0433\u043e \u0442\u043e\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0442\u043e\u0433\u0434\u0430 \u0438\u0437 jclient'\u0430 \u0437\u0430\u0431\u0440\u0430\u0442\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r396323487", "createdAt": "2020-03-23T09:46:23Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext,\n+                       ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String AcceptErrors = requestContext.getHeaders().getFirst(\"X-HH-AcceptErrors\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b27b946e0abf20c90c68068bcac60a6e8716dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2Mzc1NQ==", "bodyText": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0439 \u0431\u0443\u043a\u0432\u044b", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r396363755", "createdAt": "2020-03-23T10:54:03Z", "author": {"login": "kincajou"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext,\n+                       ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String AcceptErrors = requestContext.getHeaders().getFirst(\"X-HH-AcceptErrors\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMyMzQ4Nw=="}, "originalCommit": {"oid": "f2b27b946e0abf20c90c68068bcac60a6e8716dd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzA4NTMwOnYy", "diffSide": "RIGHT", "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo1MzozNlrOF6AG7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo1MzozNlrOF6AG7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MzUwMw==", "bodyText": "\u043d\u0430 \u0433\u043b\u0430\u0437 \u0442\u0443\u0442 \u043d\u0435 \u043d\u0443\u0436\u0435\u043d \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0432\u0441\u0435 \u0432\u043b\u0435\u0437\u0435\u0442 \u0432 150", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r396363503", "createdAt": "2020-03-23T10:53:36Z", "author": {"login": "kincajou"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext,\n+                       ContainerResponseContext responseContext) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2b27b946e0abf20c90c68068bcac60a6e8716dd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTEyMzM5OnYy", "diffSide": "RIGHT", "path": "nab-starter/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNzo1NVrOF8vTJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozODoyM1rOF8vT8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzgyOQ==", "bodyText": "\u043d\u0435 \u043d\u0443\u0436\u0435\u043d scope", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r399233829", "createdAt": "2020-03-27T12:37:55Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/pom.xml", "diffHunk": "@@ -210,6 +210,12 @@\n             <version>3.1.6</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>ru.hh.jclient-common</groupId>\n+            <artifactId>jclient-common-api</artifactId>\n+            <version>${jclient.version}</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eed99b4478afc1ca542e90362e1cc9c41ede817"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDAzMw==", "bodyText": "\u0438 \u0435\u0449\u0435 \u0442\u0430\u043c \u0435\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430 outerTimeout - \u0435\u0435 \u0442\u043e\u0436\u0435 \u0434\u0430\u0432\u0430\u0439 \u0436\u0430\u0445\u043d\u0435\u043c \u0438\u0437 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0440\u0430\u0437 \u0443\u0436 \u043f\u043e\u0448\u043b\u043e", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r399234033", "createdAt": "2020-03-27T12:38:23Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/pom.xml", "diffHunk": "@@ -210,6 +210,12 @@\n             <version>3.1.6</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>ru.hh.jclient-common</groupId>\n+            <artifactId>jclient-common-api</artifactId>\n+            <version>${jclient.version}</version>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzgyOQ=="}, "originalCommit": {"oid": "6eed99b4478afc1ca542e90362e1cc9c41ede817"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTEyNjA4OnYy", "diffSide": "RIGHT", "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozODo0NVrOF8vUzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzoyNjoxNlrOF8w_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDI1Mg==", "bodyText": "\u0447\u0442\u043e \u0437\u0430 \u0437\u0430\u043f\u044f\u0442\u0430\u044f? \u043e\u0442\u043a\u0443\u0434\u0430, \u0434\u043b\u044f \u0447\u0435\u0433\u043e? \u044d\u0442\u043e \u043d\u0430\u0448 \u0445\u0435\u0434\u0435\u0440 \u0438 \u043c\u044b \u0432\u0441\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u0443\u0435\u043c", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r399234252", "createdAt": "2020-03-27T12:38:45Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static javax.ws.rs.core.HttpHeaders.CONTENT_TYPE;\n+import static ru.hh.jclient.common.HttpHeaderNames.X_HH_ACCEPT_ERRORS;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String acceptErrors = requestContext.getHeaders().getFirst(X_HH_ACCEPT_ERRORS);\n+            if (acceptErrors != null) {\n+                String[] mediatypes = acceptErrors.split(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eed99b4478afc1ca542e90362e1cc9c41ede817"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI1Mzc4Mg==", "bodyText": "\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0445\u044d\u0434\u0435\u0440\u0430 \u0442\u0443 \u0436\u0435 \u043b\u043e\u0433\u0438\u043a\u0443, \u0447\u0442\u043e \u0438 \u0434\u043b\u044f accept.\n\u0430 \u0442\u0430\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043b\u0435\u0442\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0434\u0438\u043f\u0442\u043f\u0439\u043f\u043e\u0432, \u0440\u0430\u0437\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u044f\u0442\u043e\u0439.\n\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0449\u0435\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u0432\u044b\u0445\u043e\u0434\u043e\u043c \u0432\u0438\u0436\u0443 \u0442\u0443\u043f\u043e \u0432\u0437\u044f\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0437 \u043c\u0435\u0434\u0438\u0430\u0442\u0430\u0439\u043f\u043e\u0432", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r399253782", "createdAt": "2020-03-27T13:13:25Z", "author": {"login": "Afftobus"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static javax.ws.rs.core.HttpHeaders.CONTENT_TYPE;\n+import static ru.hh.jclient.common.HttpHeaderNames.X_HH_ACCEPT_ERRORS;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String acceptErrors = requestContext.getHeaders().getFirst(X_HH_ACCEPT_ERRORS);\n+            if (acceptErrors != null) {\n+                String[] mediatypes = acceptErrors.split(\",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDI1Mg=="}, "originalCommit": {"oid": "6eed99b4478afc1ca542e90362e1cc9c41ede817"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2MTY3OA==", "bodyText": "\u0442\u0430\u043a \u043c\u043e\u0436\u0435\u0442 \u0442\u043e\u0433\u0434\u0430 \u0432\u0441\u0435 \u0438 \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c?)", "url": "https://github.com/hhru/nuts-and-bolts/pull/230#discussion_r399261678", "createdAt": "2020-03-27T13:26:16Z", "author": {"login": "dzharikhin"}, "path": "nab-starter/src/main/java/ru/hh/nab/starter/filters/ErrorAcceptFilter.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package ru.hh.nab.starter.filters;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.ext.Provider;\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static javax.ws.rs.core.HttpHeaders.CONTENT_TYPE;\n+import static ru.hh.jclient.common.HttpHeaderNames.X_HH_ACCEPT_ERRORS;\n+\n+@Provider\n+public class ErrorAcceptFilter implements ContainerResponseFilter {\n+    @Override\n+    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {\n+        if (responseContext.getStatus() >= 400) {\n+            String acceptErrors = requestContext.getHeaders().getFirst(X_HH_ACCEPT_ERRORS);\n+            if (acceptErrors != null) {\n+                String[] mediatypes = acceptErrors.split(\",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDI1Mg=="}, "originalCommit": {"oid": "6eed99b4478afc1ca542e90362e1cc9c41ede817"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}