{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzM4Njcw", "number": 225, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxNDoxN1rODad6EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxNjowOVrODad7rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDc5NTY5OnYy", "diffSide": "RIGHT", "path": "nab-testbase/src/main/java/ru/hh/nab/testbase/kafka/NabKafkaCommonTestConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxNDoxN1rOFhb7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowMzozMlrOFhc_1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNDgwMg==", "bodyText": "\u0442\u0443\u0442 \u0432\u043e\u0442 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043a\u043b\u044e\u0447 \u043a\u043e\u043d\u0444\u0438\u0433\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0444\u043a\u0438 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u0445 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u043c", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370604802", "createdAt": "2020-01-24T12:14:17Z", "author": {"login": "bokshitsky"}, "path": "nab-testbase/src/main/java/ru/hh/nab/testbase/kafka/NabKafkaCommonTestConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.testbase.kafka;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import ru.hh.kafka.test.TestKafka;\n+import static ru.hh.nab.testbase.NabTestConfig.createProperties;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+@Configuration\n+public class NabKafkaCommonTestConfig {\n+\n+  @Bean\n+  @Primary\n+  Properties serviceProperties(TestKafka testKafka) throws IOException {\n+    Properties serviceProperties = createProperties(\"service-test.properties\");\n+    serviceProperties.putAll(createProperties(\"kafka-test.properties\"));\n+    serviceProperties.setProperty(\"kafka.common.bootstrap.servers\", testKafka.getBootstrapServers());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyMjQyMA==", "bodyText": "\u0434\u0430\u0430\u0430, \u0442\u043e\u0447\u043d\u043e) \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370622420", "createdAt": "2020-01-24T13:03:32Z", "author": {"login": "vorobey92"}, "path": "nab-testbase/src/main/java/ru/hh/nab/testbase/kafka/NabKafkaCommonTestConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ru.hh.nab.testbase.kafka;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Primary;\n+import ru.hh.kafka.test.TestKafka;\n+import static ru.hh.nab.testbase.NabTestConfig.createProperties;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+@Configuration\n+public class NabKafkaCommonTestConfig {\n+\n+  @Bean\n+  @Primary\n+  Properties serviceProperties(TestKafka testKafka) throws IOException {\n+    Properties serviceProperties = createProperties(\"service-test.properties\");\n+    serviceProperties.putAll(createProperties(\"kafka-test.properties\"));\n+    serviceProperties.setProperty(\"kafka.common.bootstrap.servers\", testKafka.getBootstrapServers());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNDgwMg=="}, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDc5ODAwOnYy", "diffSide": "RIGHT", "path": "nab-tests/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxNToyNVrOFhb8ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxODoyNVrOFhcAMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNTE1Nw==", "bodyText": "\u0434\u0443\u043c\u0430\u044e, \u044d\u0442\u043e \u0432\u0441\u0451-\u0442\u0430\u043a\u0438 \u043d\u0430\u0434\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u043c \u0430\u0440\u0442\u0435\u0444\u0430\u043a\u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0432 \u0442\u0435\u0441\u0442\u044b \u043a\u0430\u0444\u043a\u0430 \u043f\u043e\u0434\u0440\u0443\u0431\u0430\u043b\u0430\u0441\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0443\u0436\u043d\u0430", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370605157", "createdAt": "2020-01-24T12:15:25Z", "author": {"login": "bokshitsky"}, "path": "nab-tests/pom.xml", "diffHunk": "@@ -49,6 +49,11 @@\n             <artifactId>nab-jclient</artifactId>\n             <version>${project.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>nab-kafka</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNjEzMA==", "bodyText": "\u0430, \u043f\u043e\u043d\u044f\u043b, \u044d\u0442\u043e \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u044b \u0447\u0438\u0441\u0442\u043e nab-\u0430", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370606130", "createdAt": "2020-01-24T12:18:25Z", "author": {"login": "bokshitsky"}, "path": "nab-tests/pom.xml", "diffHunk": "@@ -49,6 +49,11 @@\n             <artifactId>nab-jclient</artifactId>\n             <version>${project.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>${project.groupId}</groupId>\n+            <artifactId>nab-kafka</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNTE1Nw=="}, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDc5OTgxOnYy", "diffSide": "RIGHT", "path": "nab-tests/src/test/java/ru/hh/nab/kafka/KafkaTestConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjoxNjowOVrOFhb9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzowNzo1MFrOFhdGkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNTQxMA==", "bodyText": "\u0431\u0438\u043d objectMapper \u043d\u0435 \u043e\u0447 \u0445\u043e\u0440\u043e\u0448\u0430\u044f \u0438\u0434\u0435\u044f - \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0442\u0430\u043c \u0441 \u0447\u0435\u043c-\u0442\u043e \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432\u0430\u0442\u044c-\u043f\u0435\u0440\u0435\u0442\u0438\u0440\u0430\u0442\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370605410", "createdAt": "2020-01-24T12:16:09Z", "author": {"login": "bokshitsky"}, "path": "nab-tests/src/test/java/ru/hh/nab/kafka/KafkaTestConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package ru.hh.nab.kafka;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import ru.hh.nab.common.properties.FileSettings;\n+import ru.hh.nab.kafka.listener.DefaultListenerFactory;\n+import ru.hh.nab.kafka.listener.DeserializerSupplier;\n+import ru.hh.nab.kafka.listener.ListenerFactory;\n+import ru.hh.nab.kafka.publisher.PublisherFactory;\n+import ru.hh.nab.kafka.publisher.SerializerSupplier;\n+import ru.hh.nab.kafka.serialization.JacksonDeserializerSupplier;\n+import ru.hh.nab.kafka.serialization.JacksonSerializerSupplier;\n+import ru.hh.nab.kafka.util.ConfigProvider;\n+import ru.hh.nab.testbase.kafka.NabKafkaJsonTestConfig;\n+import java.util.Properties;\n+\n+@Configuration\n+@Import({NabKafkaJsonTestConfig.class})\n+public class KafkaTestConfig {\n+\n+  @Bean\n+  ObjectMapper objectMapper(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYyNDE0NA==", "bodyText": "\u041f\u043e\u043d\u0438\u043c\u0430\u044e, \u044d\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u043e\u0434\u043b\u043e\u0436\u0438\u0442\u044c  \u0435\u0433\u043e \u0432  KafkaTestUtils.startKafkaWithJsonMessages(objectMapper) \u0442\u0443\u0442 https://github.com/hhru/nuts-and-bolts/pull/225/files#diff-7691060374d2258795462fc0bf869c4bR12\n\u041d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0439-\u043d TestObjectMapperProvider. \u0427\u0442\u043e\u0431 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432 \u043d\u0435 \u0431\u044b\u043b\u043e.", "url": "https://github.com/hhru/nuts-and-bolts/pull/225#discussion_r370624144", "createdAt": "2020-01-24T13:07:50Z", "author": {"login": "vorobey92"}, "path": "nab-tests/src/test/java/ru/hh/nab/kafka/KafkaTestConfig.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package ru.hh.nab.kafka;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import ru.hh.nab.common.properties.FileSettings;\n+import ru.hh.nab.kafka.listener.DefaultListenerFactory;\n+import ru.hh.nab.kafka.listener.DeserializerSupplier;\n+import ru.hh.nab.kafka.listener.ListenerFactory;\n+import ru.hh.nab.kafka.publisher.PublisherFactory;\n+import ru.hh.nab.kafka.publisher.SerializerSupplier;\n+import ru.hh.nab.kafka.serialization.JacksonDeserializerSupplier;\n+import ru.hh.nab.kafka.serialization.JacksonSerializerSupplier;\n+import ru.hh.nab.kafka.util.ConfigProvider;\n+import ru.hh.nab.testbase.kafka.NabKafkaJsonTestConfig;\n+import java.util.Properties;\n+\n+@Configuration\n+@Import({NabKafkaJsonTestConfig.class})\n+public class KafkaTestConfig {\n+\n+  @Bean\n+  ObjectMapper objectMapper(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNTQxMA=="}, "originalCommit": {"oid": "182532d3a22ebc65b650330f9a9f3e3be84243c8"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4318, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}