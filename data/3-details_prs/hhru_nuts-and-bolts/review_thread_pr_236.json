{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMjczMDc1", "number": 236, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0MTowNVrODvkRIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0MTowNVrODvkRIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjAzODcyOnYy", "diffSide": "RIGHT", "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/producer/DefaultKafkaProducer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0MTowNVrOGCEGNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0MTowNVrOGCEGNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxNzQ2Mw==", "bodyText": "\u043c\u0431 \u0441\u0442\u043e\u0438\u0442 \u0437\u0430\u0432\u0435\u0441\u0442\u0438 \u043a\u0430\u043a\u043e\u0439-\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 singleThreadExecutor \u0432\u043d\u0443\u0442\u0440\u0438 DefaultKafkaProducer?\n\u0410 \u0442\u043e, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0431\u0440\u0430\u0442\u044c \u0442\u0440\u0435\u0434\u044b \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0435\u0434\u043f\u0443\u043b\u0430. \u041d\u0435 \u0434\u0443\u043c\u0430\u044e, \u0447\u0442\u043e \u044d\u0442\u043e \u0435\u0441\u0442\u044c \u0445\u043e\u0440\u043e\u0448\u043e.", "url": "https://github.com/hhru/nuts-and-bolts/pull/236#discussion_r404817463", "createdAt": "2020-04-07T13:41:05Z", "author": {"login": "vorobey92"}, "path": "nab-kafka/src/main/java/ru/hh/nab/kafka/producer/DefaultKafkaProducer.java", "diffHunk": "@@ -19,8 +20,8 @@ public DefaultKafkaProducer(KafkaTemplate<String, Object> kafkaTemplate) {\n \n   @SuppressWarnings(\"unchecked\")\n   public <T> CompletableFuture<KafkaSendResult<T>> sendMessage(String topicName, String key, T kafkaMessage) {\n-    return kafkaTemplate.send(topicName, key, kafkaMessage)\n-        .completable()\n+    return CompletableFuture.supplyAsync(() -> kafkaTemplate.send(topicName, key, kafkaMessage))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d638bfe0c88d60b7f9c654e15b6450da2efbc968"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4225, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}