{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MDYyNzI5", "number": 253, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowMjoyN1rOETpibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTowMTowNlrOETuBAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDM4OTU2OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjowMjoyN1rOG5gCsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNToxNVrOG5lbWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Njk5Mw==", "bodyText": "\u0412\u0441\u0435\u0433\u0434\u0430 \u0431\u044b\u043b \u043f\u0440\u043e\u0442\u0438\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u044d\u0442\u043e\u0439 \u0444\u0438\u0447\u0438 \u0441\u043f\u0440\u0438\u043d\u0433\u0430, \u044d\u0442\u043e \u0441\u043a\u043e\u0432\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443.\n\u0417\u0430\u0445\u043e\u0447\u0435\u0442 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043a\u0442\u043e-\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c 2 \u0431\u0438\u043d\u0430 DataSourceContextTransactionManagerImpl \u0438 DataSourceContextTransactionManagerProxy \u0438 \u043d\u0430\u0431 \u0432\u0437\u043e\u0440\u0432\u0451\u0442\u0441\u044f.\n\u0414\u043b\u044f \u0442\u0430\u043a\u0438\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u044f \u0431\u044b \u043b\u0438\u0431\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u043a\u043b\u0430\u0441\u0441 \u043e\u0431\u0451\u0440\u0442\u043a\u0443, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0449\u0438\u0439 Map'\u0443 \u043b\u0438\u0431\u043e \u0443\u0436 \u0435\u0441\u043b\u0438 \u0441\u043e\u0432\u0441\u0435\u043c \u0445\u043e\u0447\u0435\u0442\u0441\u044f \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0435 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440.", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462946993", "createdAt": "2020-07-30T12:02:27Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,55 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setDataSource(dataSource);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b7be685bbf772abcc2df8e3962dde777c4b9772"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MDM2NQ==", "bodyText": "\u043f\u043e\u0447\u0435\u043c\u0443 \u0432\u0437\u043e\u0440\u0432\u0435\u0442\u0441\u044f-\u0442\u043e?", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462970365", "createdAt": "2020-07-30T12:47:19Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,55 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setDataSource(dataSource);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Njk5Mw=="}, "originalCommit": {"oid": "7b7be685bbf772abcc2df8e3962dde777c4b9772"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NDU5NQ==", "bodyText": "\u041d\u0443 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u043c\u043e\u0436\u0435\u0442 \u043d\u0435 \u0432\u0437\u043e\u0440\u0432\u0451\u0442\u0441\u044f, \u043d\u043e \u0435\u0441\u043b\u0438 \u043c\u044b \u0432 \u0430\u0441\u043f\u0435\u043a\u0442\u0435 \u0437\u0430\u0445\u043e\u0442\u0438\u043c \u0441\u0434\u0435\u043b\u0430\u0442\u044c txManagers.values().forEach \u0442\u043e \u0437\u0430\u0434\u0435\u043d\u0435\u043c \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0441\u044f \u0438 \u043c\u043e\u0436\u0435\u043c \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0434-\u044d\u0444\u0444\u0435\u043a\u0442\u044b", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462974595", "createdAt": "2020-07-30T12:54:43Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,55 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setDataSource(dataSource);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Njk5Mw=="}, "originalCommit": {"oid": "7b7be685bbf772abcc2df8e3962dde777c4b9772"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNTU3MQ==", "bodyText": "@transactional \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0431\u0435\u0437 \u043a\u0432\u0430\u043b\u0438\u0444\u0430\u0435\u0440\u043e\u0432. \u0431\u0443\u0434\u0435\u0442 \u043a\u0430\u043a-\u0442\u043e \u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u0435\u0441\u043b\u0438 \u0442\u044b \u043c\u043e\u0436\u0435\u0448\u044c \u0432 transactional, \u043d\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0448\u044c \u0432 executeondatasource", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463015571", "createdAt": "2020-07-30T13:57:34Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,55 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setDataSource(dataSource);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Njk5Mw=="}, "originalCommit": {"oid": "7b7be685bbf772abcc2df8e3962dde777c4b9772"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNTIyNg==", "bodyText": "\u041e\u043a, \u0441\u043f\u0440\u0430\u0432\u0435\u0434\u043b\u0438\u0432\u043e", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463035226", "createdAt": "2020-07-30T14:25:15Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,55 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setDataSource(dataSource);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Njk5Mw=="}, "originalCommit": {"oid": "7b7be685bbf772abcc2df8e3962dde777c4b9772"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDUxODQ4OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo0MToyNlrOG5hQ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo0ODowN1rOG5hf4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NzAzNQ==", "bodyText": "\u0412 \u0434\u043e\u043a\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u0447\u0442\u043e \u043e\u043d \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e \u0434\u0435\u0444\u043e\u043b\u0442\u0443. \u0414\u0443\u043c\u0430\u044e \u043c\u043e\u0436\u043d\u043e \u0443\u0431\u0440\u0430\u0442\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462967035", "createdAt": "2020-07-30T12:41:26Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -30,9 +30,9 @@\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(dataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MDg0OA==", "bodyText": "\u044f \u0431\u044b \u043e\u0441\u0442\u0430\u0432\u0438\u043b - \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043d\u0430\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u043c\u044b\u0441\u043b\u0438 \u0447\u0442\u043e \u0442\u0430\u043c \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462970848", "createdAt": "2020-07-30T12:48:07Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -30,9 +30,9 @@\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource dataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(dataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NzAzNQ=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDU0NzA3OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/DataSourceContextTransactionManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMjo0OToxM1rOG5hiSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDoyNjo1N1rOG5lgmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MTQ2Nw==", "bodyText": "\u0410 \u0434\u0430\u0432\u0430\u0439 \u043b\u0443\u0447\u0448\u0435 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c HibernateTransactionManager", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462971467", "createdAt": "2020-07-30T12:49:13Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/DataSourceContextTransactionManager.java", "diffHunk": "@@ -19,6 +21,11 @@ public DataSourceContextTransactionManager(PlatformTransactionManager delegate)\n     this.delegate = delegate;\n   }\n \n+  //fuuuuuuck\n+  SessionFactory getSessionFactory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNjE2Mw==", "bodyText": "\u0442\u0430\u043a \u0435\u043c\u0443 \u0432\u0440\u043e\u0434\u0435 \u043d\u0435 \u043d\u0430\u0434\u043e) \u043e\u043d \u0442\u0438\u043f\u0430 \u043c\u043e\u0436\u0435\u0442 \u0432 \u043b\u044e\u0431\u043e\u0439)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463016163", "createdAt": "2020-07-30T13:58:26Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/DataSourceContextTransactionManager.java", "diffHunk": "@@ -19,6 +21,11 @@ public DataSourceContextTransactionManager(PlatformTransactionManager delegate)\n     this.delegate = delegate;\n   }\n \n+  //fuuuuuuck\n+  SessionFactory getSessionFactory() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MTQ2Nw=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNjU3MA==", "bodyText": "\u041d\u0443 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0436\u0435 \u043f\u043e \u0444\u0430\u043a\u0442\u0443, \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u044d\u0442\u043e \u043d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441. \u041c\u044b \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u044b\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u043c \u043e\u0442 \u044d\u0442\u043e\u0439 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438.", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463036570", "createdAt": "2020-07-30T14:26:57Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/DataSourceContextTransactionManager.java", "diffHunk": "@@ -19,6 +21,11 @@ public DataSourceContextTransactionManager(PlatformTransactionManager delegate)\n     this.delegate = delegate;\n   }\n \n+  //fuuuuuuck\n+  SessionFactory getSessionFactory() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3MTQ2Nw=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDU4NzgwOnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzowMDoxNVrOG5h7KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1NTo1NlrOG5m0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NzgzMg==", "bodyText": "\u0427\u0442\u043e \u0432\u0441\u0451-\u0442\u0430\u043a\u0438 \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0434 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435\u043c? \u0427\u0442\u043e \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0430\u0441\u0442\u0435\u0440 \u0438\u043b\u0438 \u0447\u0442\u043e \u0432 \u0441\u0435\u0440\u0441\u0438\u0441\u0430\u0445 \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u044b\u0432\u0430\u0442\u044c routingDataSource? \u0415\u0441\u043b\u0438 \u0432\u0442\u043e\u0440\u043e\u0435 \u0442\u043e \u0437\u0430\u0447\u0435\u043c?", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462977832", "createdAt": "2020-07-30T13:00:15Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNTYyNA==", "bodyText": "\u0435\u0441\u043b\u0438 \u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u0445 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e DS, \u0442\u043e \u0434\u0430, \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c. \u0435\u0441\u043b\u0438 \u043e\u0434\u0438\u043d - \u043d\u0435 \u043d\u0430\u0434\u043e", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463015624", "createdAt": "2020-07-30T13:57:38Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NzgzMg=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAzNzY1MA==", "bodyText": "\u0410 \u0437\u0430\u0447\u0435\u043c? \u041f\u0443\u0441\u0442\u044c \u043e\u0441\u0442\u0430\u0451\u0442\u0441\u044f routingDataSource, \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u043d\u0430\u0434\u043e \u043c\u0438\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0432\u0441\u0435 \u0443\u0436\u0435 \u043f\u0440\u0438\u0432\u044b\u043a\u043b\u0438", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463037650", "createdAt": "2020-07-30T14:28:30Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NzgzMg=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MTgyNA==", "bodyText": "\u0442\u0430\u043a \u0430 \u043a\u0442\u043e \u043f\u0440\u0438\u0432\u044b\u043a? \u0441\u0435\u0441\u0441\u0438\u044f, hhid, negotiations - \u0432\u0435\u0437\u0434\u0435 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f dataSource)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463041824", "createdAt": "2020-07-30T14:34:04Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NzgzMg=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1ODEyMQ==", "bodyText": "\u043e\u043a", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463058121", "createdAt": "2020-07-30T14:55:56Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NzgzMg=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDYyNTQ4OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzoxMDoyNlrOG5iSXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozNzozMVrOG5l_uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4Mzc3NQ==", "bodyText": "\u041d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u043c\u043d\u0435 \u044d\u0442\u043e\u0442 default. \u0423\u0436 \u043b\u0443\u0447\u0448\u0435 \u0432\u043e\u043e\u0431\u0449\u0435 \u0431\u0435\u0437 \u043d\u0435\u0433\u043e \u0447\u0435\u043c \u043f\u043e\u043b\u0430\u0433\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438.\n\u0410 \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b? \u0414\u043e\u043a\u0430 \u0434\u043b\u044f @ Transactional \u043f\u0438\u0448\u0435\u0442 \"matching the qualifier value (or the bean name)\"\n\u0415\u0441\u043b\u0438 \u0431\u0440\u0430\u0442\u044c \u0432 \u043f\u0440\u0438\u043c\u0435\u0440 negotiation \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u043a\u0432\u0430\u043b\u0438\u0444\u043a\u0430\u0442\u043e\u0440 @ Default \u0430 \u0434\u043b\u044f \u0430\u0440\u0445\u0438\u0432\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0441\u0442\u0438 \u0441\u0432\u043e\u0439.", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r462983775", "createdAt": "2020-07-30T13:10:26Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSource.java", "diffHunk": "@@ -25,4 +25,6 @@\n   boolean overrideByRequestScope() default false;\n \n   DataSourceCacheMode cacheMode() default DataSourceCacheMode.NORMAL;\n+\n+  String txManager() default \"transactionManager\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNjYxNg==", "bodyText": "\u041e\u0442\u043a\u0443\u0434\u0430 \u0443 \u0442\u0435\u0431\u044f \u043b\u044e\u0431\u043e\u0432\u044c \u043a \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043c?) \u043e\u043d\u0438 \u0436 \u043d\u0438\u0447\u0435\u043c \u043d\u0435 \u043b\u0443\u0447\u0448\u0435 \u0438\u043c\u0435\u043d)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463016616", "createdAt": "2020-07-30T13:59:06Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSource.java", "diffHunk": "@@ -25,4 +25,6 @@\n   boolean overrideByRequestScope() default false;\n \n   DataSourceCacheMode cacheMode() default DataSourceCacheMode.NORMAL;\n+\n+  String txManager() default \"transactionManager\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4Mzc3NQ=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAyMDMwNg==", "bodyText": "\u043c\u043d\u0435 \u0442\u043e\u0436\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 \u0441 \u043a\u0432\u0430\u043b\u0438\u0444\u0430\u0435\u0440\u0430\u043c\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0440\u0430\u0432\u044f\u0442\u0441\u044f. \u0418\u043b\u0438 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443 \u043f\u043e\u0434\u0441\u043e\u0432\u044b\u0432\u0430\u0442\u044c. \u0418\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u043e\u0449\u0435", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463020306", "createdAt": "2020-07-30T14:04:08Z", "author": {"login": "heruv1m"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSource.java", "diffHunk": "@@ -25,4 +25,6 @@\n   boolean overrideByRequestScope() default false;\n \n   DataSourceCacheMode cacheMode() default DataSourceCacheMode.NORMAL;\n+\n+  String txManager() default \"transactionManager\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4Mzc3NQ=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0NDUzOQ==", "bodyText": "+1 \u043a \u043f\u0440\u043e\u0449\u0435 \u0438\u0441\u043a\u0430\u0442\u044c. \u042d\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043e\u0438\u043d\u0442 \u043f\u0440\u043e \u043b\u044e\u0431\u043e\u0432\u044c \u043a \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f\u043c.\n\u0427\u0442\u043e \u043a\u0430\u0441\u0430\u0435\u0442\u0441\u044f Spring'\u0430 \u0442\u043e \u0443 \u043c\u0435\u043d\u044f \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043d\u0435\u043b\u044e\u0431\u043e\u0432\u044c \u043a \u0440\u0435\u0437\u043e\u043b\u0432\u0438\u043d\u0433\u0443 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0431\u0438\u043d\u0430:\n\n\u0421\u043e\u0432\u0441\u0435\u043c \u043d\u0435\u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e \u043a\u043e\u0433\u0434\u0430 \u0442\u044b \u043f\u043e\u043c\u0435\u043d\u044f\u043b \u0438\u043c\u044f \u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c \u0431\u044b \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0438 \u043f\u0440\u043e\u0435\u043a\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0441\u0442\u0430\u0440\u0442\u0443\u0435\u0442.\n\u041a\u043e\u0433\u0434\u0430 \u043c\u044b \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u0435\u043c \u043d\u0430\u0434 \u043d\u0430\u043c\u0438 \u0444\u0440\u043e\u043d\u0442\u0430\u043d\u044b \u0441\u043c\u0435\u044e\u0442\u0441\u044f: https://hhru.slack.com/archives/C06P8LGAZ/p1563371364148800?thread_ts=1563370651.145200&cid=C06P8LGAZ\n\u0427\u0442\u043e \u0441\u0438\u043b\u044c\u043d\u043e \u0445\u0443\u0436\u0435 \u044d\u0442\u043e \u043d\u0430\u0440\u0443\u0448\u0430\u0435\u0442 IoC:  \u0438\u043c\u044f \u0431\u0438\u043d\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e, \u044d\u0442\u043e \u043d\u0438\u0447\u0435\u043c \u043d\u0435 \u043b\u0443\u0447\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f new\n\n\u0427\u0442\u043e \u043a\u0430\u0441\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f: \u0442\u043e \u043c\u043d\u0435 \u0445\u043e\u0447\u0435\u0442\u0441\u044f \u0447\u0442\u043e\u0431\u044b \u0430\u0441\u043f\u0435\u043a\u0442 nab'\u0430 \u0440\u0430\u0437\u0440\u0443\u043b\u0438\u0432\u0430\u043b \u0434\u0435\u0444\u043e\u043b\u0442 \u0430 \u043d\u0435 \u0437\u0430\u0445\u0430\u0440\u0434\u043a\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430. \u0422\u044b \u0441\u0430\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u043b: \u043d\u0435\u043a\u0440\u0443\u0442\u043e \u043a\u043e\u0433\u0434\u0430 @ Transactional \u043c\u043e\u0436\u0435\u0442 \u0430 @ ExecuteInDataSource \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 :)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463044539", "createdAt": "2020-07-30T14:37:31Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSource.java", "diffHunk": "@@ -25,4 +25,6 @@\n   boolean overrideByRequestScope() default false;\n \n   DataSourceCacheMode cacheMode() default DataSourceCacheMode.NORMAL;\n+\n+  String txManager() default \"transactionManager\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4Mzc3NQ=="}, "originalCommit": {"oid": "6ce06f3a920178b26a15eaecf5d7cb39af003379"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDczMDIzOnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/TransactionalScope.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozNToyMFrOG5jSUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1NjowOFrOG5m1ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMDE0Ng==", "bodyText": "\u0414\u0430\u0432\u0430\u0439 \u0443\u0431\u0435\u0440\u0451\u043c \u0438 \u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0434\u0435\u0444\u043e\u043b\u0442\u044b.\n\u0422\u0435 \u0443 \u043a\u043e\u0433\u043e 2 \u0434\u0430\u0442\u0430\u0441\u043e\u0440\u0441\u0430 \u043f\u0443\u0441\u0442\u044c \u0441\u0432\u043e\u0438 \u043a\u043b\u0430\u0441\u0441\u044b \u043f\u0438\u0448\u0443\u0442.", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463000146", "createdAt": "2020-07-30T13:35:20Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/TransactionalScope.java", "diffHunk": "@@ -5,22 +5,22 @@\n \n public class TransactionalScope {\n \n-  @Transactional(readOnly = true)\n+  @Transactional(value = \"transactionManager\", readOnly = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNzYyMw==", "bodyText": "\u043d\u0435 \u043f\u043e\u043d\u044f\u043b \u043f\u0440\u043e \u0447\u0442\u043e \u0442\u044b", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463017623", "createdAt": "2020-07-30T14:00:12Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/TransactionalScope.java", "diffHunk": "@@ -5,22 +5,22 @@\n \n public class TransactionalScope {\n \n-  @Transactional(readOnly = true)\n+  @Transactional(value = \"transactionManager\", readOnly = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMDE0Ng=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0NjI0Mg==", "bodyText": "\u0423\u0434\u0430\u043b\u0438\u0442\u044c value \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463046242", "createdAt": "2020-07-30T14:39:54Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/TransactionalScope.java", "diffHunk": "@@ -5,22 +5,22 @@\n \n public class TransactionalScope {\n \n-  @Transactional(readOnly = true)\n+  @Transactional(value = \"transactionManager\", readOnly = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMDE0Ng=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1ODI3Nw==", "bodyText": "\u043d\u0443\u0443\u0443.. \u0434\u0430\u0432\u0430\u0439)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463058277", "createdAt": "2020-07-30T14:56:08Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/TransactionalScope.java", "diffHunk": "@@ -5,22 +5,22 @@\n \n public class TransactionalScope {\n \n-  @Transactional(readOnly = true)\n+  @Transactional(value = \"transactionManager\", readOnly = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMDE0Ng=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDc1MDc1OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSourceAspect.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo0MDoxMFrOG5je_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo0MDoxMFrOG5je_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMzM5MA==", "bodyText": "\u0414\u0443\u043c\u0430\u044e \u043d\u0430\u0434\u043e \u043f\u0440\u0438\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u043b\u0443\u0447\u0430\u0439 \u043a\u043e\u0433\u0434\u0430 txManager \u0432 \u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0438 null \u0438\u043b\u0438 \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430. \u042d\u0442\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0441 \u0432 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0431\u0438\u043d\u0430 \u0435\u0441\u043b\u0438 \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d transactionManager, \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e @ Transactional\n\u0415\u0441\u043b\u0438 \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438\u043b\u0438 null \u0438 \u0432 \u043c\u0430\u043f\u043a \u043e\u0434\u0438\u043d \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 - \u0431\u0435\u0440\u0451\u043c \u0435\u0433\u043e\n\u0418\u043d\u0430\u0447\u0435 exception", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463003390", "createdAt": "2020-07-30T13:40:10Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/transaction/ExecuteOnDataSourceAspect.java", "diffHunk": "@@ -27,13 +28,15 @@ public Object executeOnSpecialDataSource(final ProceedingJoinPoint pjp, final Ex\n         && TransactionSynchronizationManager.isSynchronizationActive()) {\n       return pjp.proceed();\n     }\n+    DataSourceContextTransactionManager transactionManager = txManagers.get(executeOnDataSource.txManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDc4NDI5OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo0ODowNlrOG5jz8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTo0MjozMFrOG5o1pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODc1Mg==", "bodyText": "\u0420\u0430\u043d\u044c\u0448\u0435 \u043d\u0430\u0431 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b transactionManager. \u0422\u0443\u043f\u0435\u0440\u044c \u0443 \u043d\u0430\u0441 \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0451\u0442 nab \u0430 \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u0432\u0435\u0440\u0431\u043e\u0437\u043d\u043e \u0438 \u043d\u0435\u0443\u0434\u043e\u0431\u043d\u043e. \u0427\u0442\u043e \u0435\u0441\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0438\u043d\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 BeanFactoryPostProcessor?", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463008752", "createdAt": "2020-07-30T13:48:06Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxNDE5OQ==", "bodyText": "\u0432 \u043d\u0430\u0431\u0435 \u043d\u0435\u0442 \u0446\u0435\u043b\u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e \u0431\u0430\u0437, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u0443\u0434\u043e\u0431\u043d\u043e. \u0432\u0441\u0435-\u0442\u0430\u043a\u0438 \u0443\u0434\u043e\u0431\u043d\u043e, \u044d\u0442\u043e \u043a\u043e\u0433\u0434\u0430 \u0443 \u0442\u0435\u0431\u044f \u043e\u0434\u043d\u0430 \u0431\u0430\u0437\u0430.\n\u043d\u043e \u0435\u0441\u0442\u044c \u0446\u0435\u043b\u044c \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0431\u0430\u0437\u0443 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043e\u0442\u0440\u044b\u0432\u0430\u043b\u043e\u0441\u044c", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463014199", "createdAt": "2020-07-30T13:55:50Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODc1Mg=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0ODQ1OQ==", "bodyText": "\u042d\u0442\u043e \u043d\u0435 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u0440\u0435\u0447\u0438\u0442 \u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043b. \"\u0447\u0442\u043e\u0431\u044b \u0431\u0430\u0437\u0443 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c\" \u043c\u043e\u0436\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443:\n\n\u041c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044f SecondRoutingDataSource, SecondTransactionManager, SecondSessionFactory\n\u0410 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u0432  SecondRoutingDataSource \u0430 SecondTransactionManager, SecondSessionFactory \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0431 \u0441\u043e\u0437\u0434\u0430\u043b \u0441\u0430\u043c", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463048459", "createdAt": "2020-07-30T14:42:52Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODc1Mg=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA3NDA0Nw==", "bodyText": "(2) - \u044d\u0442\u043e \u0443\u0436\u0435 \u043c\u0430\u0433\u0438\u044f. \u041a\u0442\u043e \u0442\u0430\u043c \u043c\u043d\u0435 \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043b, \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u043b, \u043a\u0430\u043a\u043e\u0435 \u0438\u043c\u044f \u043c\u043d\u0435 \u0432 transactional \u043f\u0438\u0441\u0430\u0442\u044c. \u043d\u0435, \u043d\u0435 \u0445\u043e\u0447\u0443.\n\u0445\u043e\u0447\u0435\u0448\u044c \u0432\u0442\u043e\u0440\u0443\u044e \u0431\u0430\u0437\u0443 - \u0443\u0436 3 \u0431\u0438\u043d\u0430 \u043e\u0441\u0438\u043b\u044c, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430. \u043f\u043b\u044e\u0441 \u0442\u0430\u043c \u0435\u0449\u0435 \u0432\u0441\u044f\u043a\u043e\u0435 \u0442\u0430\u043a\u043e\u0435 \u0435\u0441\u0442\u044c https://github.com/hhru/nuts-and-bolts/blob/master/nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java#L41-L42\n\u043e\u043d\u043e \u0442\u0435\u0431\u0435 \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043d\u0430\u0434\u043e \u0440\u0430\u0437 \u0443\u0436 \u0442\u044b \u0432\u0441\u0435 \u0434\u0435\u043b\u0430\u0435\u0448\u044c \u0441\u0430\u043c", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463074047", "createdAt": "2020-07-30T15:18:00Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODc1Mg=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA5MTExMQ==", "bodyText": "\u0421 \u0438\u043c\u0435\u043d\u0435\u043c \u0434\u0430, \u043d\u0435\u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e. \u041e\u043a.", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463091111", "createdAt": "2020-07-30T15:42:30Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwODc1Mg=="}, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MDc5MzQ5OnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo1MDoxMlrOG5j5mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo1MDoxMlrOG5j5mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAxMDIwMw==", "bodyText": "\u0414\u0443\u043c\u0430\u044e \u0432\u0441\u0435 sessionFactory \u0442\u043e\u0436\u0435 \u043d\u0430\u0434\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 BeanFactoryPostProcessor \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u043c\u0435\u043d\u044c\u0448\u0435 \u043a\u043e\u0434\u0430 \u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u0445", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463010203", "createdAt": "2020-07-30T13:50:12Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean\n-  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory, DataSource routingDataSource) {\n+  DataSourceContextTransactionManager transactionManager(SessionFactory sessionFactory) {\n     HibernateTransactionManager simpleTransactionManager = new HibernateTransactionManager(sessionFactory);\n-    simpleTransactionManager.setDataSource(routingDataSource);\n+    simpleTransactionManager.setAutodetectDataSource(true);\n     return new DataSourceContextTransactionManager(simpleTransactionManager);\n   }\n \n   @Bean\n-  ExecuteOnDataSourceAspect executeOnDataSourceAspect(DataSourceContextTransactionManager transactionManager, SessionFactory sessionFactory) {\n-    return new ExecuteOnDataSourceAspect(transactionManager, sessionFactory);\n+  ExecuteOnDataSourceAspect executeOnDataSourceAspect(ApplicationContext applicationContext) {\n+    var txManagers\n+      = Stream.of(applicationContext.getBeanNamesForType(DataSourceContextTransactionManager.class))\n+        .collect(toMap(Function.identity(), beanName -> applicationContext.getBean(beanName, DataSourceContextTransactionManager.class)));\n+    return new ExecuteOnDataSourceAspect(txManagers);\n   }\n \n   @Bean\n-  NabSessionFactoryBean sessionFactoryBean(DataSource routingDataSource, Properties hibernateProperties,\n+  NabSessionFactoryBean sessionFactory(DataSource dataSource, Properties hibernateProperties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810aec83f2b322c9ee5f98b5405dec1b78ae8489"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTEyMzIzOnYy", "diffSide": "RIGHT", "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTowMTowNlrOG5nEAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNTo0MzozMFrOG5o4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjAxNg==", "bodyText": "\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043c\u044b\u0441\u043b\u044c \u043f\u043e\u0442\u0435\u0440\u044f\u043b\u0430\u0441\u044c \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0445: \u0432\u043e\u0442 \u0442\u0443\u0442 \u044f @ Primary \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043d\u0430\u0432\u0435\u0441\u0438\u0442\u044c.\n\u0422\u043e\u0433\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0443\u0431\u0440\u0430\u0442\u044c transactionManager \u0438\u0437 TransactionalScope\n\u041f\u043b\u044e\u0441 \u043d\u0435 \u043d\u0430\u0434\u043e \u0431\u0443\u0434\u0435\u0442 \u0435\u0441\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u0430\u0442\u0430\u0441\u043e\u0440\u0441\u043e\u0432 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0434\u0435\u0444\u043e\u043b\u0442\u043e\u0432\u043e\u0433\u043e \u0432 \u043a\u0430\u0436\u0434\u043e\u043c @ transactional \u0434\u0435\u0444\u043e\u043b\u0442\u043e\u0432\u044b\u0439 TransactionManager", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463062016", "createdAt": "2020-07-30T15:01:06Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a17651f93eaf9529b6249384db68067460e61f1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2NDcyMQ==", "bodyText": "\u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 @ Default?", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463064721", "createdAt": "2020-07-30T15:04:54Z", "author": {"login": "dzharikhin"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjAxNg=="}, "originalCommit": {"oid": "9a17651f93eaf9529b6249384db68067460e61f1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA5MTgxNQ==", "bodyText": "\u041f\u0435\u0440\u0435\u043c\u0443\u0442\u0430\u043b, \u0441\u043e\u0440\u0438. \u0418\u043c\u0435\u043b \u0432\u0432\u0438\u0434\u0443 @ Primary. (@ Default \u0430\u043d\u0430\u043b\u043e\u0433 @ Primary \u0434\u043b\u044f CDI)", "url": "https://github.com/hhru/nuts-and-bolts/pull/253#discussion_r463091815", "createdAt": "2020-07-30T15:43:30Z", "author": {"login": "pvorlov"}, "path": "nab-hibernate/src/main/java/ru/hh/nab/hibernate/NabHibernateCommonConfig.java", "diffHunk": "@@ -6,43 +6,52 @@\n import org.hibernate.SessionFactory;\n import org.hibernate.boot.registry.BootstrapServiceRegistryBuilder;\n import org.hibernate.integrator.spi.Integrator;\n+import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.context.annotation.EnableAspectJAutoProxy;\n import org.springframework.orm.hibernate5.HibernateTransactionManager;\n \n import javax.sql.DataSource;\n import java.util.Properties;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n import ru.hh.nab.hibernate.transaction.DataSourceContextTransactionManager;\n import ru.hh.nab.hibernate.transaction.ExecuteOnDataSourceAspect;\n import ru.hh.nab.hibernate.transaction.TransactionalScope;\n \n+import static java.util.stream.Collectors.toMap;\n+\n @Configuration\n @EnableTransactionManagement(order = 0)\n @EnableAspectJAutoProxy\n public class NabHibernateCommonConfig {\n \n   @Bean", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA2MjAxNg=="}, "originalCommit": {"oid": "9a17651f93eaf9529b6249384db68067460e61f1"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4258, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}