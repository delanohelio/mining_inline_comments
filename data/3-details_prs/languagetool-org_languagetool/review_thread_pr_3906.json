{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NjMxMTMw", "number": 3906, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozOToxMlrOE8KHvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozOToyOVrOE8KINg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTE1ODM3OnYy", "diffSide": "RIGHT", "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozOToxMlrOH4HuRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjoxNDo1MVrOH4K4zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg==", "bodyText": "This method is unused in LT, so I can remove it instead of changing. Not sure if there are external callers though.", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528608836", "createdAt": "2020-11-23T10:39:12Z", "author": {"login": "donnerpeter"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1145,7 +1157,8 @@ protected void printSentenceInfo(AnalyzedSentence analyzedSentence) {\n \n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n-    return performCheck(analyzedSentences, sentences, allRules, paraMode, annotatedText, null, mode, level, true);\n+    List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxMDg4NQ==", "bodyText": "As LT can be used from Java directly via its API, we should expect public methods to be used. We can clean them up, but for that, we should first deprecate them and only remove them 2 releases later or so.", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528610885", "createdAt": "2020-11-23T10:42:38Z", "author": {"login": "danielnaber"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1145,7 +1157,8 @@ protected void printSentenceInfo(AnalyzedSentence analyzedSentence) {\n \n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n-    return performCheck(analyzedSentences, sentences, allRules, paraMode, annotatedText, null, mode, level, true);\n+    List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYyOTMxMw==", "bodyText": "This one is protected.\nSo, should I deprecate these methods?", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528629313", "createdAt": "2020-11-23T11:16:04Z", "author": {"login": "donnerpeter"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1145,7 +1157,8 @@ protected void printSentenceInfo(AnalyzedSentence analyzedSentence) {\n \n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n-    return performCheck(analyzedSentences, sentences, allRules, paraMode, annotatedText, null, mode, level, true);\n+    List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2MDY4Ng==", "bodyText": "So, should I deprecate these methods?\n\nYes", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528660686", "createdAt": "2020-11-23T12:14:51Z", "author": {"login": "danielnaber"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1145,7 +1157,8 @@ protected void printSentenceInfo(AnalyzedSentence analyzedSentence) {\n \n   protected List<RuleMatch> performCheck(List<AnalyzedSentence> analyzedSentences, List<String> sentences,\n                                          List<Rule> allRules, ParagraphHandling paraMode, AnnotatedText annotatedText, Mode mode, Level level) throws IOException {\n-    return performCheck(analyzedSentences, sentences, allRules, paraMode, annotatedText, null, mode, level, true);\n+    List<Rule> nonIgnored = allRules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwODgzNg=="}, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTE1OTU4OnYy", "diffSide": "RIGHT", "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDozOToyOVrOH4Hu_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMToyNzo1MVrOH4JXFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwOTAyMg==", "bodyText": "Another unused method, public", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528609022", "createdAt": "2020-11-23T10:39:29Z", "author": {"login": "donnerpeter"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1201,7 +1214,8 @@ private int processColumnChange(int columnCount, String sentence) {\n    */\n   public List<RuleMatch> checkAnalyzedSentence(ParagraphHandling paraMode,\n                                                List<Rule> rules, AnalyzedSentence analyzedSentence) throws IOException {\n-    return checkAnalyzedSentence(paraMode, rules, analyzedSentence, false);\n+    List<Rule> nonIgnored = rules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzNTY3MQ==", "bodyText": "Also documented as \"This is an internal method that's public only for technical reasons, please use one of the {@link #check(String)} methods instead\"", "url": "https://github.com/languagetool-org/languagetool/pull/3906#discussion_r528635671", "createdAt": "2020-11-23T11:27:51Z", "author": {"login": "donnerpeter"}, "path": "languagetool-core/src/main/java/org/languagetool/JLanguageTool.java", "diffHunk": "@@ -1201,7 +1214,8 @@ private int processColumnChange(int columnCount, String sentence) {\n    */\n   public List<RuleMatch> checkAnalyzedSentence(ParagraphHandling paraMode,\n                                                List<Rule> rules, AnalyzedSentence analyzedSentence) throws IOException {\n-    return checkAnalyzedSentence(paraMode, rules, analyzedSentence, false);\n+    List<Rule> nonIgnored = rules.stream().filter(r -> !ignoreRule(r)).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYwOTAyMg=="}, "originalCommit": {"oid": "a67d04ee31422baa172ad51b77be7ae33e375126"}, "originalPosition": 152}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3668, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}