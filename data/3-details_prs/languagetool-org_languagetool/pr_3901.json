{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjY1MTkz", "number": 3901, "title": "HunspellRule: calculate suggestions lazily", "bodyText": "This speeds up single-threaded German checking (without suggestion retrieval) by ~50%", "createdAt": "2020-11-20T12:11:18Z", "url": "https://github.com/languagetool-org/languagetool/pull/3901", "merged": true, "mergeCommit": {"oid": "054772c17bd6463f654e822d53a31f0b506e913b"}, "closed": true, "closedAt": "2020-11-25T16:22:55Z", "author": {"login": "donnerpeter"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeWP_8gH2gAyNTI0NjY1MTkzOjFiNzI3MDg5NTU3N2Q3YzA0MmZjZThmNGY4MTNjNTI3M2NlMDVmMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfqGIkAH2gAyNTI0NjY1MTkzOjRjNzcwYjI0ZmQzOTc3MWNhNDkzYzQ5YTlhZjliYzM1MTg1YzQ4MWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b7270895577d7c042fce8f4f813c5273ce05f24", "author": {"user": {"login": "donnerpeter", "name": "Peter Gromov"}}, "url": "https://github.com/languagetool-org/languagetool/commit/1b7270895577d7c042fce8f4f813c5273ce05f24", "committedDate": "2020-11-20T12:10:21Z", "message": "HunspellRule: calculate suggestions lazily"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDgyMjYz", "url": "https://github.com/languagetool-org/languagetool/pull/3901#pullrequestreview-537482263", "createdAt": "2020-11-24T13:19:17Z", "commit": {"oid": "1b7270895577d7c042fce8f4f813c5273ce05f24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxOToxN1rOH5Ac1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoxOToxN1rOH5Ac1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTUzODI2Mg==", "bodyText": "Do you know when this can happen? I wonder whether it makes sense to give out the error. in general, we tend to throw an exception instead.", "url": "https://github.com/languagetool-org/languagetool/pull/3901#discussion_r529538262", "createdAt": "2020-11-24T13:19:17Z", "author": {"login": "danielnaber"}, "path": "languagetool-core/src/main/java/org/languagetool/rules/spelling/hunspell/HunspellRule.java", "diffHunk": "@@ -181,59 +181,16 @@ protected boolean isQuotedCompound (AnalyzedSentence analyzedSentence, int idx,\n             messages.getString(\"desc_spelling_short\"));\n           ruleMatch.setType(RuleMatch.Type.UnknownWord);\n           if (userConfig == null || userConfig.getMaxSpellingSuggestions() == 0 || ruleMatches.size() <= userConfig.getMaxSpellingSuggestions()) {\n-            List<SuggestedReplacement> suggestions = SuggestedReplacement.convert(getSuggestions(cleanWord));\n-            if (word.endsWith(\".\")) {\n-              int pos = 1;\n-              for (String suggestion : getSuggestions(word)) {\n-                if (!suggestions.contains(suggestion)) {\n-                  suggestions.add(Math.min(pos, suggestions.size()), new SuggestedReplacement(suggestion.substring(0, suggestion.length()-1)));\n-                  pos += 2;  // we mix the lists, as we don't know which one is the better one\n+            ruleMatch.setLazySuggestedReplacements(() -> {\n+              try {\n+                synchronized (this) { // some getSuggestions overrides are thread-unsafe\n+                  return calcSuggestions(word, cleanWord);\n                 }\n+              } catch (IOException e) {\n+                logger.error(\"Error while calculating speller suggestions\", e);\n+                return Collections.singletonList(new SuggestedReplacement(\"Internal error: \" + e.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7270895577d7c042fce8f4f813c5273ce05f24"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c770b24fd39771ca493c49a9af9bc35185c481d", "author": {"user": {"login": "donnerpeter", "name": "Peter Gromov"}}, "url": "https://github.com/languagetool-org/languagetool/commit/4c770b24fd39771ca493c49a9af9bc35185c481d", "committedDate": "2020-11-24T13:51:36Z", "message": "hunspell/morfologik lazy suggestions: wrap IOExceptions instead of logging them"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2407, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}