{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1OTY0MTEz", "number": 4071, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDowNzo0NlrOFJfOpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDoxMDoyOFrOFJfRBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDkzMTU3OnYy", "diffSide": "RIGHT", "path": "languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDowNzo0NlrOIL2AYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDowNzo0NlrOIL2AYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5MDA4MA==", "bodyText": "In my experience, antipatterns don't handle multiple min=\"0\" very well. They tend to only work when all optional tokens are present or absent. Maybe try skip=\"1\" and an exception scope=\"next\" negate_pos=\"yes\" postag=\"PRP\" for example.", "url": "https://github.com/languagetool-org/languagetool/pull/4071#discussion_r549290080", "createdAt": "2020-12-28T10:07:46Z", "author": {"login": "udomai"}, "path": "languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml", "diffHunk": "@@ -15787,6 +15787,127 @@ USA\n     <!-- Grammar -->\n     <!-- ====================================================================== -->\n     <category id=\"GRAMMAR\" name=\"Grammar\" type=\"grammar\">\n+        <rule id=\"MAKE_PRP_VBZ\" name=\"makes me goes -> makes me go\" default=\"temp_off\">\n+            <antipattern>\n+                <token postag_regexp=\"yes\" postag=\"SENT_START|PCT|CC|WP|PRP\" />\n+                <token min=\"0\">as</token>\n+                <token postag=\"PRP\" />\n+                <token min=\"0\" max=\"2\" postag_regexp=\"yes\" postag=\"MD|RB\" />\n+                <token min=\"0\" inflected=\"yes\">do</token>\n+                <token>see</token>\n+                <token min=\"0\" postag=\"PCT\" />\n+                <token>it</token><!-- subject or expletive -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb1d9a09c04ba8e899dee03a010a99ac784b87f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDkzNzY0OnYy", "diffSide": "RIGHT", "path": "languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDoxMDoyOFrOIL2Dtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMDoxMDoyOFrOIL2Dtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5MDkzNA==", "bodyText": "Not to be nit-picky, but doesn't this inverted syntax focus \"follow\"? Maybe a passive construction would be clearer...\n\"The verb ... and the object ... should be followed by the bare infinitive ... .\"", "url": "https://github.com/languagetool-org/languagetool/pull/4071#discussion_r549290934", "createdAt": "2020-12-28T10:10:28Z", "author": {"login": "udomai"}, "path": "languagetool-language-modules/en/src/main/resources/org/languagetool/rules/en/grammar.xml", "diffHunk": "@@ -15787,6 +15787,127 @@ USA\n     <!-- Grammar -->\n     <!-- ====================================================================== -->\n     <category id=\"GRAMMAR\" name=\"Grammar\" type=\"grammar\">\n+        <rule id=\"MAKE_PRP_VBZ\" name=\"makes me goes -> makes me go\" default=\"temp_off\">\n+            <antipattern>\n+                <token postag_regexp=\"yes\" postag=\"SENT_START|PCT|CC|WP|PRP\" />\n+                <token min=\"0\">as</token>\n+                <token postag=\"PRP\" />\n+                <token min=\"0\" max=\"2\" postag_regexp=\"yes\" postag=\"MD|RB\" />\n+                <token min=\"0\" inflected=\"yes\">do</token>\n+                <token>see</token>\n+                <token min=\"0\" postag=\"PCT\" />\n+                <token>it</token><!-- subject or expletive -->\n+            </antipattern>\n+            <antipattern>\n+                <token postag_regexp=\"yes\" postag=\"SENT_START|PCT|CC|WP\" />\n+                <token postag=\"VBG\" />\n+            </antipattern>\n+            <antipattern>\n+                <token postag_regexp=\"yes\" postag=\"SENT_START|PCT|CC|WP\" />\n+                <token inflected=\"yes\">have</token>\n+            </antipattern>\n+            <antipattern>\n+                <token postag=\"VB.*\" postag_regexp=\"yes\" inflected=\"yes\" regexp=\"yes\">get|see</token>\n+                <token />\n+                <token postag=\"NNS\" />\n+            </antipattern>\n+            <antipattern>\n+                <token>her</token><!-- 'her' is ambiguously PRP$ -->\n+                <token postag=\"NNS\" />\n+            </antipattern>\n+            <antipattern>\n+                <token inflected=\"yes\">make</token>\n+                <token regexp=\"yes\">us|them</token>\n+                <token postag=\"NNS\" />\n+            </antipattern>\n+            <antipattern>\n+                <token>for</token><!-- when I ask for help it starts working -->\n+                <token>help</token>\n+            </antipattern>\n+            <antipattern>\n+                <token regexp=\"yes\">thanks|guys</token>\n+            </antipattern>\n+            <antipattern>\n+                <token postag=\"PRP\" />\n+                <token>does</token>\n+                <token postag=\"VB\" />\n+            </antipattern>\n+            <antipattern>\n+                <token postag=\"WP\"><exception regexp=\"yes\">which|that</exception></token>\n+                <token min=\"0\" max=\"3\" postag_regexp=\"yes\" postag=\"RB|VB|TO\" />\n+                <token />\n+            </antipattern>\n+\n+            <pattern>\n+                <token postag=\"VB.*\" postag_regexp=\"yes\" inflected=\"yes\" regexp=\"yes\">make|let|get|help|see|have\n+                    <!--<exception scope=\"previous\" postag=\"DT\" />-->\n+                </token>\n+                <token postag=\"PRP\" regexp=\"yes\">me|you|him|her|it|them|us</token>\n+                <!--<token min=\"0\">does</token>--> <!-- not sure how to greedily match -->\n+                <marker>\n+                    <token postag=\"VBZ\" case_sensitive=\"yes\" regexp=\"yes\">[a-z]+\n+                    <!--<token postag=\"VBZ\" regexp=\"yes\">-->\n+                        <exception postag=\"VB\" />\n+                        <!--<exception inflected=\"yes\">be</exception>-->\n+                        <exception regexp=\"yes\">is|isn</exception>\n+                    </token>\n+                </marker>\n+            </pattern>\n+            <message>The bare infinitive <suggestion><match no=\"3\" postag=\"VB\" /></suggestion> should follow the verb '\\1' and the object '\\2'.</message>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb1d9a09c04ba8e899dee03a010a99ac784b87f"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3652, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}