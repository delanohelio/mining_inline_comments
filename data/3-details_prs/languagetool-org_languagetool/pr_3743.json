{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTQ5OTM4", "number": 3743, "title": "parallelize PatternRuleTest to speed it up", "bodyText": "", "createdAt": "2020-10-22T09:29:46Z", "url": "https://github.com/languagetool-org/languagetool/pull/3743", "merged": true, "mergeCommit": {"oid": "e2541b33e296993bcb11d6268fc7060d0bd24e74"}, "closed": true, "closedAt": "2020-11-06T12:57:51Z", "author": {"login": "donnerpeter"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU-fM_gH2gAyNTA4MTQ5OTM4OmMzOWU5MDk4NjVkYzIzOWQzYjNmZmM4ZGM2ZjBkNGJlZTZkZjYzMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU-lNwgFqTUxNDUzNDEzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c39e909865dc239d3b3ffc8dc6f0d4bee6df630f", "author": {"user": {"login": "donnerpeter", "name": "Peter Gromov"}}, "url": "https://github.com/languagetool-org/languagetool/commit/c39e909865dc239d3b3ffc8dc6f0d4bee6df630f", "committedDate": "2020-10-22T09:23:55Z", "message": "parallelize PatternRuleTest to speed it up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NTM0MTMx", "url": "https://github.com/languagetool-org/languagetool/pull/3743#pullrequestreview-514534131", "createdAt": "2020-10-22T09:30:29Z", "commit": {"oid": "c39e909865dc239d3b3ffc8dc6f0d4bee6df630f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOTozMDoyOVrOHmY94w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOTozMDoyOVrOHmY94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAxNjk5NQ==", "bodyText": "For me, more threads don't result in better performance :(", "url": "https://github.com/languagetool-org/languagetool/pull/3743#discussion_r510016995", "createdAt": "2020-10-22T09:30:29Z", "author": {"login": "donnerpeter"}, "path": "languagetool-core/src/test/java/org/languagetool/rules/patterns/PatternRuleTest.java", "diffHunk": "@@ -290,19 +299,30 @@ private void testExamplesExist(List<AbstractPatternRule> rules) {\n         if (!correctionExists) {\n           String failure = \"Rule needs at least one <example> with a 'correction' attribute\"\n                   + \" or one <example> of type='correct'.\";\n-          ruleErrors.addError(new PatternRuleTestFailure(rule, failure));\n+          addError(rule, failure);\n         }\n       }\n     }\n   }\n \n-  public void testGrammarRulesFromXML(List<AbstractPatternRule> rules,\n-                                      JLanguageTool lt,\n-                                      JLanguageTool allRulesLt, Language lang) throws IOException {\n+  private void addError(AbstractPatternRule rule, String failure) {\n+    synchronized (ruleErrors) {\n+      ruleErrors.addError(new PatternRuleTestFailure(rule, failure));\n+    }\n+  }\n+\n+  private void testGrammarRulesFromXML(List<AbstractPatternRule> rules, JLanguageTool allRulesLt, Language lang) {\n     System.out.println(\"Checking example sentences of \" + rules.size() + \" rules for \" + lang + \"...\");\n+\n+    int threadCount = Math.max(1, Runtime.getRuntime().availableProcessors() / 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c39e909865dc239d3b3ffc8dc6f0d4bee6df630f"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2449, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}