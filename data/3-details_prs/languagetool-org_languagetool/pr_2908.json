{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTczNDMw", "number": 2908, "title": "Fix HunspellRuleTest on Windows", "bodyText": "Fixes #2202\nThe reason was: Scanner behavior is different with maven in Windows, and Scanner(File) had been replaced globally by Files.readAllLines.\nHowever, there are still failed tests on windows, but would be handled separately.", "createdAt": "2020-05-11T15:20:13Z", "url": "https://github.com/languagetool-org/languagetool/pull/2908", "merged": true, "mergeCommit": {"oid": "c9e39292d35b9051f7b9cb0d516ff7fdfbe9c728"}, "closed": true, "closedAt": "2020-05-12T09:37:07Z", "author": {"login": "asashour"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgRbXSAFqTQwOTI4MzA0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgghH4AH2gAyNDE2MTczNDMwOjFiYWViZTY5NWRmMzIyOWI0NmFhYTY4Zjc4MjkyYWMyZjM0YWIyMGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjgzMDQ5", "url": "https://github.com/languagetool-org/languagetool/pull/2908#pullrequestreview-409283049", "createdAt": "2020-05-11T15:28:57Z", "commit": {"oid": "018ed4f577081d1ad23bf6cc3cc05b0048fd128d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyODo1N1rOGTheTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyODo1N1rOGTheTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDU1OQ==", "bodyText": "I'm not sure if this is a good idea, the input file could be very large and would be loaded into memory this way (the same is true for other cases in HttpApiSentenceChecler)...", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423124559", "createdAt": "2020-05-11T15:28:57Z", "author": {"login": "danielnaber"}, "path": "languagetool-dev/src/main/java/org/languagetool/dev/httpchecker/HttpApiSentenceChecker.java", "diffHunk": "@@ -80,15 +80,8 @@ private String formatDuration(Duration duration) {\n     return String.format(\"%d:%02d:%02d\", absSeconds / 3600, (absSeconds % 3600) / 60, absSeconds % 60);\n   }\n \n-  private int countLines(File input) throws FileNotFoundException {\n-    int count = 0;\n-    try (Scanner sc = new Scanner(input)) {\n-      while (sc.hasNextLine()) {\n-        sc.nextLine();\n-        count++;\n-      }\n-    }\n-    return count;\n+  private int countLines(File input) throws IOException {\n+    return Files.readAllLines(input.toPath()).size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018ed4f577081d1ad23bf6cc3cc05b0048fd128d"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODMzNjQx", "url": "https://github.com/languagetool-org/languagetool/pull/2908#pullrequestreview-409833641", "createdAt": "2020-05-12T08:52:19Z", "commit": {"oid": "5eaf9a64758588ab86fc824341e850020b676390"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo1MjoxOVrOGT8t4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODo1MjozNVrOGT8umg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MDkxNQ==", "bodyText": "This should also use scanner to avoid reading everything into RAM.", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423570915", "createdAt": "2020-05-12T08:52:19Z", "author": {"login": "danielnaber"}, "path": "languagetool-dev/src/main/java/org/languagetool/dev/bigdata/TextIndexCreator.java", "diffHunk": "@@ -56,16 +57,13 @@ private void index(File outputDir, String[] inputFiles) throws IOException {\n   private void indexFile(IndexWriter indexWriter, String inputFile) throws IOException {\n     System.out.println(\"Indexing \" + inputFile);\n     int lineCount = 0;\n-    try (Scanner scanner = new Scanner(new File(inputFile))) {\n-      while (scanner.hasNextLine()) {\n-        String line = scanner.nextLine();\n-        Document doc = new Document();\n-        doc.add(new TextField(Lucene.FIELD_NAME, line, Field.Store.YES));\n-        doc.add(new TextField(Lucene.FIELD_NAME_LOWERCASE, line.toLowerCase(), Field.Store.YES));\n-        indexWriter.addDocument(doc);\n-        if (++lineCount % 10_000 == 0) {\n-          System.out.println(lineCount + \"...\");\n-        }\n+    for (String line : Files.readAllLines(Paths.get(inputFile))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eaf9a64758588ab86fc824341e850020b676390"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MTA5OA==", "bodyText": "This should also use scanner to avoid reading everything into RAM.", "url": "https://github.com/languagetool-org/languagetool/pull/2908#discussion_r423571098", "createdAt": "2020-05-12T08:52:35Z", "author": {"login": "danielnaber"}, "path": "languagetool-dev/src/main/java/org/languagetool/dev/diff/LightRuleMatchParser.java", "diffHunk": "@@ -54,18 +55,17 @@\n     ObjectMapper mapper = new ObjectMapper();\n     List<LightRuleMatch> ruleMatches = new ArrayList<>();\n     int lineCount = 1;\n-    try (Scanner scanner = new Scanner(inputFile)) {\n-      while (scanner.hasNextLine()) {\n-        String line = scanner.nextLine();\n+    for (String line : Files.readAllLines(inputFile.toPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eaf9a64758588ab86fc824341e850020b676390"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1baebe695df3229b46aaa68f78292ac2f34ab20f", "author": {"user": {"login": "asashour", "name": "Ahmed Ashour"}}, "url": "https://github.com/languagetool-org/languagetool/commit/1baebe695df3229b46aaa68f78292ac2f34ab20f", "committedDate": "2020-05-12T09:04:48Z", "message": "Fix HunspellRuleTest\n\nFixes #2202"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2355, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}