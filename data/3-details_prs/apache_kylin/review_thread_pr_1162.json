{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTQxOTMw", "number": 1162, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo0Mjo1MVrODojjDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo0Mjo1MVrODojjDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODUyMDQ2OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo0Mjo1MVrOF3LOiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoxNjozM1rOF3Lt2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTk0NA==", "bodyText": "I think \"debug\" level here is improper; This might be an attack, it's log level should be info or warn.", "url": "https://github.com/apache/kylin/pull/1162#discussion_r393399944", "createdAt": "2020-03-17T01:42:51Z", "author": {"login": "shaofengshi"}, "path": "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java", "diffHunk": "@@ -163,4 +163,34 @@ private void copyRemote(String localFile, String destDir) throws IOException {\n         }\n     }\n \n+    public static final String COMMAND_INJECT_REX = \"[ &`>|{}()$;\\\\-#~!+*\u201d\\\\\\\\]+\";\n+\n+    /**\n+     * <pre>\n+     * Check parameter for preventing command injection, replace illegal character into empty character.\n+     *\n+     * Note:\n+     * 1. Whitespace is also refused because parameter is a single word, should not contains it\n+     * 2. Some character may be illegal but still be accepted because commandParameter maybe a URI/path expression,\n+     *     you may check \"Character part\" in https://docs.oracle.com/javase/8/docs/api/java/net/URI.html,\n+     *     here is the character which is not banned.\n+     *\n+     *     1. dot .\n+     *     2. slash /\n+     *     3. colon :\n+     *     4. equal =\n+     *     5. ?\n+     *     6. @\n+     *     7. bracket []\n+     *     8. comma ,\n+     *     9. %\n+     * </pre>\n+     */\n+    public static String checkParameter(String commandParameter) {\n+        String repaired = commandParameter.replaceAll(COMMAND_INJECT_REX, \"\");\n+        if (repaired.length() != commandParameter.length()) {\n+            logger.debug(\"Detected illegal character in command {}, replace it to {}.\", commandParameter, repaired);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "279161397fae720ab1c049fd6f71233cec120d5d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwNzk2MQ==", "bodyText": "OK. The reason of I choose the debug level is for debug purpose, maybe the rare case if I mistake convert right command into some broken command.", "url": "https://github.com/apache/kylin/pull/1162#discussion_r393407961", "createdAt": "2020-03-17T02:16:33Z", "author": {"login": "hit-lacus"}, "path": "core-common/src/main/java/org/apache/kylin/common/util/CliCommandExecutor.java", "diffHunk": "@@ -163,4 +163,34 @@ private void copyRemote(String localFile, String destDir) throws IOException {\n         }\n     }\n \n+    public static final String COMMAND_INJECT_REX = \"[ &`>|{}()$;\\\\-#~!+*\u201d\\\\\\\\]+\";\n+\n+    /**\n+     * <pre>\n+     * Check parameter for preventing command injection, replace illegal character into empty character.\n+     *\n+     * Note:\n+     * 1. Whitespace is also refused because parameter is a single word, should not contains it\n+     * 2. Some character may be illegal but still be accepted because commandParameter maybe a URI/path expression,\n+     *     you may check \"Character part\" in https://docs.oracle.com/javase/8/docs/api/java/net/URI.html,\n+     *     here is the character which is not banned.\n+     *\n+     *     1. dot .\n+     *     2. slash /\n+     *     3. colon :\n+     *     4. equal =\n+     *     5. ?\n+     *     6. @\n+     *     7. bracket []\n+     *     8. comma ,\n+     *     9. %\n+     * </pre>\n+     */\n+    public static String checkParameter(String commandParameter) {\n+        String repaired = commandParameter.replaceAll(COMMAND_INJECT_REX, \"\");\n+        if (repaired.length() != commandParameter.length()) {\n+            logger.debug(\"Detected illegal character in command {}, replace it to {}.\", commandParameter, repaired);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTk0NA=="}, "originalCommit": {"oid": "279161397fae720ab1c049fd6f71233cec120d5d"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1658, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}