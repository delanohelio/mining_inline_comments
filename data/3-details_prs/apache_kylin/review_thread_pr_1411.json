{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NzQ4ODc5", "number": 1411, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NzoxNVrOEj70Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODowMDo1MVrOEj75rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTE1NjIyOnYy", "diffSide": "RIGHT", "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeDictionaryBuilder.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NzoxNVrOHSkwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNzo1NzoxNVrOHSkwxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIzODcyNQ==", "bodyText": "Please remove this blank line.", "url": "https://github.com/apache/kylin/pull/1411#discussion_r489238725", "createdAt": "2020-09-16T07:57:15Z", "author": {"login": "zzcclp"}, "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/builder/CubeDictionaryBuilder.scala", "diffHunk": "@@ -65,6 +65,7 @@ class CubeDictionaryBuilder(val dataset: Dataset[Row],\n     finally lock.unlock(getLockPath(sourceColumn))\n   }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c3da3781ab630ec53f06d72a29d62e382d61b0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTE3MDM3OnYy", "diffSide": "RIGHT", "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidAggregator.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODowMDo1MVrOHSk5mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTo0MjoxNFrOHSo3Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0MDk4NA==", "bodyText": "It's better add a comment here, describe that use new 'TopN AggregateFunction' to implement this function.", "url": "https://github.com/apache/kylin/pull/1411#discussion_r489240984", "createdAt": "2020-09-16T08:00:51Z", "author": {"login": "zzcclp"}, "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidAggregator.scala", "diffHunk": "@@ -98,9 +98,22 @@ object CuboidAggregator {\n             new Column(cdAggregate.toAggregateExpression()).as(id.toString)\n           }\n         case \"TOP_N\" =>\n-          val schema: StructType = constructTopNSchema(measure.pra)\n-          val udfName = UdfManager.register(measure.returnType.toKylinDataType, measure.expression, schema, !reuseLayout)\n-          callUDF(udfName, columns: _*).as(id.toString)\n+          val schema = StructType(measure.pra.map { col =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c3da3781ab630ec53f06d72a29d62e382d61b0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwNTg4Ng==", "bodyText": "OK.", "url": "https://github.com/apache/kylin/pull/1411#discussion_r489305886", "createdAt": "2020-09-16T09:42:14Z", "author": {"login": "RupengWang"}, "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/kylin/engine/spark/job/CuboidAggregator.scala", "diffHunk": "@@ -98,9 +98,22 @@ object CuboidAggregator {\n             new Column(cdAggregate.toAggregateExpression()).as(id.toString)\n           }\n         case \"TOP_N\" =>\n-          val schema: StructType = constructTopNSchema(measure.pra)\n-          val udfName = UdfManager.register(measure.returnType.toKylinDataType, measure.expression, schema, !reuseLayout)\n-          callUDF(udfName, columns: _*).as(id.toString)\n+          val schema = StructType(measure.pra.map { col =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0MDk4NA=="}, "originalCommit": {"oid": "38c3da3781ab630ec53f06d72a29d62e382d61b0"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1604, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}