{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTQzMDM5", "number": 1218, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyODoxM1rOECAVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NDowM1rOEEW9IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTM4MDgwOnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/apache/kylin/common/KConstants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyODoxM1rOGeMilw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNToyODoxM1rOGeMilw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNTkyNw==", "bodyText": "please remove 'KConstants'  class, it's not used.", "url": "https://github.com/apache/kylin/pull/1218#discussion_r434315927", "createdAt": "2020-06-03T05:28:13Z", "author": {"login": "zzcclp"}, "path": "core-common/src/main/java/org/apache/kylin/common/KConstants.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.common;\n+\n+public class KConstants {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0d4ff37aac13d4002b51d0b6c35ec23a9be9023"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDIyNDg5OnYy", "diffSide": "RIGHT", "path": "server-base/src/main/java/org/apache/kylin/rest/service/TableService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzozNToxNlrOGfji2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNzozNToxNlrOGfji2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MTQwMA==", "bodyText": "add one blank space before '\" +'", "url": "https://github.com/apache/kylin/pull/1218#discussion_r435741400", "createdAt": "2020-06-05T07:35:16Z", "author": {"login": "zzcclp"}, "path": "server-base/src/main/java/org/apache/kylin/rest/service/TableService.java", "diffHunk": "@@ -105,6 +117,37 @@\n     @Autowired\n     private AclEvaluate aclEvaluate;\n \n+    public TableSchemaUpdateChecker getSchemaUpdateChecker() {\n+        return new TableSchemaUpdateChecker(getTableManager(), getCubeManager(), getDataModelManager());\n+    }\n+\n+    public void checkTableCompatibility(String prj, TableDesc tableDesc) {\n+        TableSchemaUpdateChecker.CheckResult result = getSchemaUpdateChecker().allowReload(tableDesc, prj);\n+        result.raiseExceptionWhenInvalid();\n+    }\n+\n+    public void checkHiveTableCompatibility(String prj, TableDesc tableDesc) throws Exception {\n+        Preconditions.checkNotNull(tableDesc.getDatabase());\n+        Preconditions.checkNotNull(tableDesc.getName());\n+\n+        String database = tableDesc.getDatabase().toUpperCase(Locale.ROOT);\n+        String tableName = tableDesc.getName().toUpperCase(Locale.ROOT);\n+        ProjectInstance projectInstance = getProjectManager().getProject(prj);\n+        ISourceMetadataExplorer explr = SourceManager.getSource(projectInstance).getSourceMetadataExplorer();\n+\n+        TableDesc hiveTableDesc;\n+        try {\n+            Pair<TableDesc, TableExtDesc> pair = explr.loadTableMetadata(database, tableName, prj);\n+            hiveTableDesc = pair.getFirst();\n+        } catch (Exception e) {\n+            logger.error(\"Fail to get metadata for hive table {} due to \", tableDesc.getIdentity(), e);\n+            throw new RuntimeException(\"Fail to get metadata for hive table\" + tableDesc.getIdentity());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0d4ff37aac13d4002b51d0b6c35ec23a9be9023"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDA1ODU2OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NDowM1rOGh7iGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NDowM1rOGh7iGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMTU3Nw==", "bodyText": "@kyotoYaho Please fix the failed test case: AdminServiceTest.testGetPublicConfig, it needs to add this property into expected results.", "url": "https://github.com/apache/kylin/pull/1218#discussion_r438231577", "createdAt": "2020-06-10T15:54:03Z", "author": {"login": "zzcclp"}, "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "diffHunk": "@@ -2125,14 +2154,15 @@ public boolean isWebDashboardEnabled() {\n \n     public String getPropertiesWhiteList() {\n         return getOptional(\"kylin.web.properties.whitelist\", \"kylin.web.timezone,kylin.query.cache-enabled,kylin.env,\"\n+                + \"kylin.cube.migration.enabled,\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa42d8c7fc590c8f68d35225eddcf0f7172310f8"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1680, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}