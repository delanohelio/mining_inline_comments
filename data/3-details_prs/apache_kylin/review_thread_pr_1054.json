{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxODIxOTI5", "number": 1054, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzoxMzozOVrODXagzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjowNDo0N1rODXbR9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODc4MjIyOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/kylin/rest/util/ValidateUtilTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzoxMzozOVrOFcstkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNToxOToxNlrOFctfqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNzAwOA==", "bodyText": "Could we add some assertEqual for this project?", "url": "https://github.com/apache/kylin/pull/1054#discussion_r365637008", "createdAt": "2020-01-13T03:13:39Z", "author": {"login": "hit-lacus"}, "path": "server/src/test/java/org/apache/kylin/rest/util/ValidateUtilTest.java", "diffHunk": "@@ -48,6 +48,9 @@\n \n     @Test\n     public void testCheckIdentifiersExists() throws IOException {\n+        String project = \"/asd/../_asd33b\";\n+        project = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f98531d8677cbebe096c286a9a613fbe06aa5f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0OTgzMg==", "bodyText": "@hit-lacus This is some code I submit carelessly, I have removed it", "url": "https://github.com/apache/kylin/pull/1054#discussion_r365649832", "createdAt": "2020-01-13T05:19:16Z", "author": {"login": "nichunen"}, "path": "server/src/test/java/org/apache/kylin/rest/util/ValidateUtilTest.java", "diffHunk": "@@ -48,6 +48,9 @@\n \n     @Test\n     public void testCheckIdentifiersExists() throws IOException {\n+        String project = \"/asd/../_asd33b\";\n+        project = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzNzAwOA=="}, "originalCommit": {"oid": "20f98531d8677cbebe096c286a9a613fbe06aa5f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODkwODA0OnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/apache/kylin/common/persistence/JDBCResourceStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjowNDo0N1rOFct0vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNjo1MjoxNVrOFdur6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1NTIzMA==", "bodyText": "Maybe change the name resourceHashMap to something like lockObjectMap is more readable.", "url": "https://github.com/apache/kylin/pull/1054#discussion_r365655230", "createdAt": "2020-01-13T06:04:47Z", "author": {"login": "hit-lacus"}, "path": "core-common/src/main/java/org/apache/kylin/common/persistence/JDBCResourceStore.java", "diffHunk": "@@ -44,28 +45,17 @@\n \n public class JDBCResourceStore extends PushdownResourceStore {\n \n-    private static Logger logger = LoggerFactory.getLogger(JDBCResourceStore.class);\n-\n     public static final String JDBC_SCHEME = \"jdbc\";\n-\n+    private static final ConcurrentHashMap<String, Object> resourceHashMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9664321656871e14418e3b338b52497064106acd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcxNzkzMQ==", "bodyText": "@hit-lacus Good idea", "url": "https://github.com/apache/kylin/pull/1054#discussion_r366717931", "createdAt": "2020-01-15T06:52:15Z", "author": {"login": "nichunen"}, "path": "core-common/src/main/java/org/apache/kylin/common/persistence/JDBCResourceStore.java", "diffHunk": "@@ -44,28 +45,17 @@\n \n public class JDBCResourceStore extends PushdownResourceStore {\n \n-    private static Logger logger = LoggerFactory.getLogger(JDBCResourceStore.class);\n-\n     public static final String JDBC_SCHEME = \"jdbc\";\n-\n+    private static final ConcurrentHashMap<String, Object> resourceHashMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1NTIzMA=="}, "originalCommit": {"oid": "9664321656871e14418e3b338b52497064106acd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1536, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}