{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNDYyMDY0", "number": 1134, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToxNjozM1rODksZLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMzo1OTo1OVrODk57pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODAyNjY5OnYy", "diffSide": "RIGHT", "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToxNjozM1rOFxKCwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1NTowMlrOFxdeVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4OTA4OQ==", "bodyText": "Will it be more safe to put it into a \"finally\" block?", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387089089", "createdAt": "2020-03-03T15:16:33Z", "author": {"login": "shaofengshi"}, "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -136,6 +136,7 @@ public boolean accept(Path path) {\n                         logger.error(\"dictionary of column {} not found! \", colRef.getName());\n                     }\n                 }\n+                reader.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f0029d7edfed1080947a38ba131daacae8eca50"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwNzQ0Nw==", "bodyText": "Thank you!", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387407447", "createdAt": "2020-03-04T01:55:02Z", "author": {"login": "hit-lacus"}, "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -136,6 +136,7 @@ public boolean accept(Path path) {\n                         logger.error(\"dictionary of column {} not found! \", colRef.getName());\n                     }\n                 }\n+                reader.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4OTA4OQ=="}, "originalCommit": {"oid": "9f0029d7edfed1080947a38ba131daacae8eca50"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDI0NDg0OnYy", "diffSide": "RIGHT", "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMzo1OTo1OVrOFxfUuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMjoyNTo1NVrOFyrS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzNzc1NQ==", "bodyText": "The code format here is not well. Please format it...", "url": "https://github.com/apache/kylin/pull/1134#discussion_r387437755", "createdAt": "2020-03-04T03:59:59Z", "author": {"login": "shaofengshi"}, "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -108,32 +108,32 @@ public boolean accept(Path path) {\n                 }\n             });\n \n-            SequenceFile.Reader reader;\n             for (FileStatus file : files) {\n-                reader = new SequenceFile.Reader(fs, file.getPath(), conf);\n-                Text colName = new Text();\n-                Text dictInfo = new Text();\n-                while (reader.next(colName, dictInfo)) {\n-                    TblColRef colRef = colRefMap.get(colName.toString());\n-                    if (colRef == null) {\n-                        throw new IllegalArgumentException(\"Invalid column name \" + colName\n-                                + \" or it need not build dictionary!\");\n-                    }\n-                    DictionaryInfo dictionaryInfo = serializer.deserialize(new DataInputStream(\n-                            new ByteArrayInputStream(dictInfo.getBytes())));\n-\n-                    Dictionary dict = dictionaryInfo.getDictionaryObject();\n-                    if (dict != null) {\n-                        dictionaryInfo = dictManager.trySaveNewDict(dict, dictionaryInfo);\n-                        cubeSeg.putDictResPath(colRef, dictionaryInfo.getResourcePath());\n-                        if (cubeSeg.getRowkeyStats() != null) {\n-                            cubeSeg.getRowkeyStats().add(\n-                                    new Object[] { colRef.getName(), dict.getSize(), dict.getSizeOfId() });\n+                try(SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc063ed03ede38fe7022af6aa16bec7cffb5fe9d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY4MjQ2MA==", "bodyText": "Thank you, I have updated.", "url": "https://github.com/apache/kylin/pull/1134#discussion_r388682460", "createdAt": "2020-03-06T02:25:55Z", "author": {"login": "hit-lacus"}, "path": "engine-mr/src/main/java/org/apache/kylin/engine/mr/streaming/SaveDictStep.java", "diffHunk": "@@ -108,32 +108,32 @@ public boolean accept(Path path) {\n                 }\n             });\n \n-            SequenceFile.Reader reader;\n             for (FileStatus file : files) {\n-                reader = new SequenceFile.Reader(fs, file.getPath(), conf);\n-                Text colName = new Text();\n-                Text dictInfo = new Text();\n-                while (reader.next(colName, dictInfo)) {\n-                    TblColRef colRef = colRefMap.get(colName.toString());\n-                    if (colRef == null) {\n-                        throw new IllegalArgumentException(\"Invalid column name \" + colName\n-                                + \" or it need not build dictionary!\");\n-                    }\n-                    DictionaryInfo dictionaryInfo = serializer.deserialize(new DataInputStream(\n-                            new ByteArrayInputStream(dictInfo.getBytes())));\n-\n-                    Dictionary dict = dictionaryInfo.getDictionaryObject();\n-                    if (dict != null) {\n-                        dictionaryInfo = dictManager.trySaveNewDict(dict, dictionaryInfo);\n-                        cubeSeg.putDictResPath(colRef, dictionaryInfo.getResourcePath());\n-                        if (cubeSeg.getRowkeyStats() != null) {\n-                            cubeSeg.getRowkeyStats().add(\n-                                    new Object[] { colRef.getName(), dict.getSize(), dict.getSizeOfId() });\n+                try(SequenceFile.Reader reader = new SequenceFile.Reader(fs, file.getPath(), conf)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQzNzc1NQ=="}, "originalCommit": {"oid": "cc063ed03ede38fe7022af6aa16bec7cffb5fe9d"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1691, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}