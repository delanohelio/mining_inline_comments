{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMzMxMzc1", "number": 1376, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoxNzoxNlrOEc8V8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyNzoxM1rOEc81Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Nzg0MjQyOnYy", "diffSide": "RIGHT", "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoxNzoxNlrOHHy_Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoxNzoxNlrOHHy_Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzkzNzQ5NA==", "bodyText": "This replace action looks confusing. Could you please add a comment to explain its purpose?", "url": "https://github.com/apache/kylin/pull/1376#discussion_r477937494", "createdAt": "2020-08-27T02:17:16Z", "author": {"login": "hit-lacus"}, "path": "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java", "diffHunk": "@@ -307,6 +307,7 @@ public String getHdfsWorkingDirectory() {\n         String metaId = getMetadataUrlPrefix().replace(':', '-');\n         //transform relative path for local metadata\n         if (metaId.startsWith(\"../\")) {\n+            metaId = metaId.replace(\"../\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Nzg5MzkxOnYy", "diffSide": "RIGHT", "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyMzozNFrOHHzifA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyMzozNFrOHHzifA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0NjQ5Mg==", "bodyText": "Please not leave your name.", "url": "https://github.com/apache/kylin/pull/1376#discussion_r477946492", "createdAt": "2020-08-27T02:23:34Z", "author": {"login": "hit-lacus"}, "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.rest.init;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.kylin.common.KylinConfig;\n+import org.apache.spark.sql.SparderContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Created by zhangzc on 8/26/20.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4Nzg5NjkwOnYy", "diffSide": "RIGHT", "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyMzo1OFrOHHzkjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzowNjo1NFrOHIDKaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0NzAyMA==", "bodyText": "Sparker or Sparder?", "url": "https://github.com/apache/kylin/pull/1376#discussion_r477947020", "createdAt": "2020-08-27T02:23:58Z", "author": {"login": "hit-lacus"}, "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.rest.init;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.kylin.common.KylinConfig;\n+import org.apache.spark.sql.SparderContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Created by zhangzc on 8/26/20.\n+ */\n+public class InitialSparkerContext implements InitializingBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIwMjQ3NQ==", "bodyText": "Rename to InitialSparderContext", "url": "https://github.com/apache/kylin/pull/1376#discussion_r478202475", "createdAt": "2020-08-27T07:06:54Z", "author": {"login": "zzcclp"}, "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.rest.init;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.kylin.common.KylinConfig;\n+import org.apache.spark.sql.SparderContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Created by zhangzc on 8/26/20.\n+ */\n+public class InitialSparkerContext implements InitializingBean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0NzAyMA=="}, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzkwNzY5OnYy", "diffSide": "RIGHT", "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyNToyMFrOHHzrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzowNzowM1rOHIDKrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0ODg2Nw==", "bodyText": "If current spark context is killed and restarted, will new applicationId update here?", "url": "https://github.com/apache/kylin/pull/1376#discussion_r477948867", "createdAt": "2020-08-27T02:25:20Z", "author": {"login": "hit-lacus"}, "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.rest.init;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.kylin.common.KylinConfig;\n+import org.apache.spark.sql.SparderContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Created by zhangzc on 8/26/20.\n+ */\n+public class InitialSparkerContext implements InitializingBean {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(InitialSparkerContext.class);\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        runInitialSparder();\n+    }\n+\n+    private void runInitialSparder() {\n+        logger.info(\"Spark is starting.....\");\n+        SparderContext.init();\n+        final String kylinHome = StringUtils.defaultIfBlank(KylinConfig.getKylinHome(), \"./\");\n+        final File appidFile = Paths.get(kylinHome, \"sparkappid\").toFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIwMjU0Mw==", "bodyText": "Done", "url": "https://github.com/apache/kylin/pull/1376#discussion_r478202543", "createdAt": "2020-08-27T07:07:03Z", "author": {"login": "zzcclp"}, "path": "server-base/src/main/java/org/apache/kylin/rest/init/InitialSparkerContext.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kylin.rest.init;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.kylin.common.KylinConfig;\n+import org.apache.spark.sql.SparderContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+/**\n+ * Created by zhangzc on 8/26/20.\n+ */\n+public class InitialSparkerContext implements InitializingBean {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(InitialSparkerContext.class);\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        runInitialSparder();\n+    }\n+\n+    private void runInitialSparder() {\n+        logger.info(\"Spark is starting.....\");\n+        SparderContext.init();\n+        final String kylinHome = StringUtils.defaultIfBlank(KylinConfig.getKylinHome(), \"./\");\n+        final File appidFile = Paths.get(kylinHome, \"sparkappid\").toFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0ODg2Nw=="}, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NzkyMjc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/applicationContext.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyNzoxM1rOHHz2Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMjoyNzoxM1rOHHz2Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk1MTU3OA==", "bodyText": "Please update here.", "url": "https://github.com/apache/kylin/pull/1376#discussion_r477951578", "createdAt": "2020-08-27T02:27:13Z", "author": {"login": "hit-lacus"}, "path": "server/src/main/resources/applicationContext.xml", "diffHunk": "@@ -38,6 +38,7 @@\n     <aop:aspectj-autoproxy/>\n \n     <bean class=\"org.apache.kylin.rest.init.InitialTaskManager\" />\n+    <bean class=\"org.apache.kylin.rest.init.InitialSparkerContext\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d8f11f875c5a7d079b6f681f4034d8fe70172de"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1596, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}