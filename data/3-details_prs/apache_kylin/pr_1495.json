{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzkyNTY4", "number": 1495, "title": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "bodyText": "Proposed changes\nDescribe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue.\nTypes of changes\nWhat types of changes does your code introduce to Kylin?\nPut an x in the boxes that apply\n\n Bugfix (non-breaking change which fixes an issue)\n New feature (non-breaking change which adds functionality)\n Breaking change (fix or feature that would cause existing functionality to not work as expected)\n Documentation Update (if none of the other choices apply)\n\nChecklist\nPut an x in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code.\n\n I have create an issue on Kylin's jira, and have described the bug/feature there in detail\n Commit messages in my PR start with the related jira ID, like \"KYLIN-0000 Make Kylin project open-source\"\n Compiling and unit tests pass locally with my changes\n I have added tests that prove my fix is effective or that my feature works\n If this change need a document change, I will prepare another pr against the document branch\n Any dependent changes have been merged\n\nFurther comments\nIf this is a relatively large or complex change, kick off the discussion at user@kylin or dev@kylin by explaining why you chose the solution you did and what alternatives you considered, etc...", "createdAt": "2020-12-03T01:23:55Z", "url": "https://github.com/apache/kylin/pull/1495", "merged": true, "mergeCommit": {"oid": "959edebdb262afd63308ba32031abcf889670245"}, "closed": true, "closedAt": "2020-12-09T02:40:35Z", "author": {"login": "zzcclp"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiaFLhgBqjQwNjUzMDc2NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkJr5UAFqTU0NzIwNjY1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3935000ebf3c9fc4466c29cf41e406a85d561818", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/3935000ebf3c9fc4466c29cf41e406a85d561818", "committedDate": "2020-12-03T01:21:00Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}, "afterCommit": {"oid": "df4c95dc7b751453e4d40d8ccd68923b763787d4", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/df4c95dc7b751453e4d40d8ccd68923b763787d4", "committedDate": "2020-12-03T02:53:26Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df4c95dc7b751453e4d40d8ccd68923b763787d4", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/df4c95dc7b751453e4d40d8ccd68923b763787d4", "committedDate": "2020-12-03T02:53:26Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}, "afterCommit": {"oid": "355f74363844b527eae339191c1d1649b98a49c8", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/355f74363844b527eae339191c1d1649b98a49c8", "committedDate": "2020-12-03T11:42:44Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "355f74363844b527eae339191c1d1649b98a49c8", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/355f74363844b527eae339191c1d1649b98a49c8", "committedDate": "2020-12-03T11:42:44Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}, "afterCommit": {"oid": "23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "committedDate": "2020-12-03T12:28:40Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "committedDate": "2020-12-03T12:28:40Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}, "afterCommit": {"oid": "3b3786c5c9602838cd4abd0a6d40574550ec8622", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/3b3786c5c9602838cd4abd0a6d40574550ec8622", "committedDate": "2020-12-03T12:53:28Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/ed0649b140529bdfafea8cce846962b6ca9c3f73", "committedDate": "2020-12-07T00:59:34Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b3786c5c9602838cd4abd0a6d40574550ec8622", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/3b3786c5c9602838cd4abd0a6d40574550ec8622", "committedDate": "2020-12-03T12:53:28Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}, "afterCommit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "author": {"user": {"login": "zzcclp", "name": "Zhichao Zhang"}}, "url": "https://github.com/apache/kylin/commit/ed0649b140529bdfafea8cce846962b6ca9c3f73", "committedDate": "2020-12-07T00:59:34Z", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTY2MDIx", "url": "https://github.com/apache/kylin/pull/1495#pullrequestreview-547166021", "createdAt": "2020-12-08T11:58:17Z", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo1ODoxOFrOIBWWbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo1ODoxOFrOIBWWbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI4NTY3Nw==", "bodyText": "Are you plan to delete KylinSparkEnv ?", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538285677", "createdAt": "2020-12-08T11:58:18Z", "author": {"login": "hit-lacus"}, "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/sql/KylinSparkEnv.scala", "diffHunk": "@@ -25,96 +25,27 @@ object KylinSparkEnv extends Logging {\n \t@volatile\n \tprivate var spark: SparkSession = _", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTc0MzUz", "url": "https://github.com/apache/kylin/pull/1495#pullrequestreview-547174353", "createdAt": "2020-12-08T12:10:29Z", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoxMDoyOVrOIBW-hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoxMDoyOVrOIBW-hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5NTk0MQ==", "bodyText": "Why change from  defaultParallelism to getTotalCore ?", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538295941", "createdAt": "2020-12-08T12:10:29Z", "author": {"login": "hit-lacus"}, "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTc3NTEy", "url": "https://github.com/apache/kylin/pull/1495#pullrequestreview-547177512", "createdAt": "2020-12-08T12:14:49Z", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoxNDo0OVrOIBXM-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoxNDo0OVrOIBXM-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5OTY0MA==", "bodyText": "Looks like the original code is wrong, if sparkContext.defaultParallelism is 1, partitionsNum will always be 1.", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538299640", "createdAt": "2020-12-08T12:14:49Z", "author": {"login": "hit-lacus"}, "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)\n     val kylinConfig = KylinConfig.getInstanceFromEnv\n     val partitionsNum = if (kylinConfig.getSparkSqlShufflePartitions != -1) {\n       kylinConfig.getSparkSqlShufflePartitions\n     } else {\n-      Math.min(QueryContextFacade.current().getSourceScanBytes / (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MTgzNTIx", "url": "https://github.com/apache/kylin/pull/1495#pullrequestreview-547183521", "createdAt": "2020-12-08T12:23:39Z", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyMzozOVrOIBXqZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyMzozOVrOIBXqZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNzE3NA==", "bodyText": "You remove * 2, is it correct ?", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538307174", "createdAt": "2020-12-08T12:23:39Z", "author": {"login": "hit-lacus"}, "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)\n     val kylinConfig = KylinConfig.getInstanceFromEnv\n     val partitionsNum = if (kylinConfig.getSparkSqlShufflePartitions != -1) {\n       kylinConfig.getSparkSqlShufflePartitions\n     } else {\n-      Math.min(QueryContextFacade.current().getSourceScanBytes / (\n-        KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 * 2) + 1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3MjA2NjU0", "url": "https://github.com/apache/kylin/pull/1495#pullrequestreview-547206654", "createdAt": "2020-12-08T12:55:36Z", "commit": {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2760, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}