{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTc0MDAz", "number": 4508, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxMTo0NlrODmhddA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoyNjo1MVrODmnylg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIwNjkyOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/connections/ConnectionsListComposite.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxMTo0NlrOFz_P8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjozMjo1NVrOFz_kTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1Nzk3MA==", "bodyText": "The ConnectionBean.equals can't work ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4508#discussion_r390057970", "createdAt": "2020-03-10T02:11:46Z", "author": {"login": "wchen-talend"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/connections/ConnectionsListComposite.java", "diffHunk": "@@ -236,13 +240,39 @@ public void handle(LineSelectionEvent e) {\n         });\n \n         if (!list.isEmpty()) {\n+            ConnectionBean selectConnection = null;\n+            ConnectionBean defaultConnectionSelected = dialog.getDefaultConnectionSelected();\n             for (int i = 0; i < list.size(); i++) {\n-                setSelectedConnection(list.get(i));\n+                ConnectionBean connectionBean = list.get(i);\n+                setSelectedConnection(connectionBean);\n+                if (isTheSameConnection(connectionBean, defaultConnectionSelected)) {\n+                    selectConnection = connectionBean;\n+                }\n+            }\n+            if (selectConnection != null) {\n+                table.getTableViewerCreator().getTableViewer()\n+                        .setSelection(new StructuredSelection(new Object[] { selectConnection }));\n+            } else {\n+                table.getTableViewerCreator().getTableViewer()\n+                        .setSelection(new StructuredSelection(new Object[] { list.get(0) }));\n             }\n-            setSelectedConnection(list.get(0));\n         }\n     }\n \n+    private boolean isTheSameConnection(ConnectionBean baseConnection, ConnectionBean refConnection) {\n+        boolean flag = false;\n+        if (baseConnection == null || refConnection == null) {\n+            return flag;\n+        }\n+        if (baseConnection.getName().equals(refConnection.getName())\n+                && baseConnection.getUrl().equals(refConnection.getUrl())\n+                && baseConnection.getRepositoryId().equals(refConnection.getRepositoryId())\n+                && baseConnection.getUser().equals(refConnection.getUser())) {\n+            flag = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e5409ef03b1506f69896cbe85af409344c16c4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzE4Mg==", "bodyText": "In some condition, conDetails is different, so that cause equals false. like during the logon, branchSelection is not exist on conDetails.", "url": "https://github.com/Talend/tdi-studio-se/pull/4508#discussion_r390063182", "createdAt": "2020-03-10T02:32:55Z", "author": {"login": "jding-tlnd"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/connections/ConnectionsListComposite.java", "diffHunk": "@@ -236,13 +240,39 @@ public void handle(LineSelectionEvent e) {\n         });\n \n         if (!list.isEmpty()) {\n+            ConnectionBean selectConnection = null;\n+            ConnectionBean defaultConnectionSelected = dialog.getDefaultConnectionSelected();\n             for (int i = 0; i < list.size(); i++) {\n-                setSelectedConnection(list.get(i));\n+                ConnectionBean connectionBean = list.get(i);\n+                setSelectedConnection(connectionBean);\n+                if (isTheSameConnection(connectionBean, defaultConnectionSelected)) {\n+                    selectConnection = connectionBean;\n+                }\n+            }\n+            if (selectConnection != null) {\n+                table.getTableViewerCreator().getTableViewer()\n+                        .setSelection(new StructuredSelection(new Object[] { selectConnection }));\n+            } else {\n+                table.getTableViewerCreator().getTableViewer()\n+                        .setSelection(new StructuredSelection(new Object[] { list.get(0) }));\n             }\n-            setSelectedConnection(list.get(0));\n         }\n     }\n \n+    private boolean isTheSameConnection(ConnectionBean baseConnection, ConnectionBean refConnection) {\n+        boolean flag = false;\n+        if (baseConnection == null || refConnection == null) {\n+            return flag;\n+        }\n+        if (baseConnection.getName().equals(refConnection.getName())\n+                && baseConnection.getUrl().equals(refConnection.getUrl())\n+                && baseConnection.getRepositoryId().equals(refConnection.getRepositoryId())\n+                && baseConnection.getUser().equals(refConnection.getUser())) {\n+            flag = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1Nzk3MA=="}, "originalCommit": {"oid": "a2e5409ef03b1506f69896cbe85af409344c16c4"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODE2MzY1OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/LoginHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowMzoxMlrOF0IShg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNzozNjozNlrOF0ZvEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA4Ng==", "bodyText": "It's not good to check the exception type through the error message, please try to use some generic method, such as creating some exceptions like business exception or rest exception, so that we can check the error code dirrectly", "url": "https://github.com/Talend/tdi-studio-se/pull/4508#discussion_r390206086", "createdAt": "2020-03-10T10:03:12Z", "author": {"login": "cmeng-talend"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/LoginHelper.java", "diffHunk": "@@ -626,6 +639,10 @@ public void run() {\n         return true;\r\n     }\r\n \r\n+    public static boolean isAuthorizationException(Throwable exception) {\r\n+        return exception.getMessage() != null && exception.getMessage().startsWith(\"401\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e5409ef03b1506f69896cbe85af409344c16c4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5MTkyMw==", "bodyText": "I was want to use RestException but unfortunately here can't access RestException, and then I wanna have a service to check RestException to somewhere can access RestException, but there has a problem with multiple generation, e.g. new PersistenceException(new ClientException(new RestException)) and some else generation, tried with wanna get final cause by e.getCause==null, but unfortunately there have Infinite cycle on RestException get cause to RestException. Maybe I'll find a better one Exception", "url": "https://github.com/Talend/tdi-studio-se/pull/4508#discussion_r390491923", "createdAt": "2020-03-10T17:36:36Z", "author": {"login": "jding-tlnd"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/LoginHelper.java", "diffHunk": "@@ -626,6 +639,10 @@ public void run() {\n         return true;\r\n     }\r\n \r\n+    public static boolean isAuthorizationException(Throwable exception) {\r\n+        return exception.getMessage() != null && exception.getMessage().startsWith(\"401\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA4Ng=="}, "originalCommit": {"oid": "a2e5409ef03b1506f69896cbe85af409344c16c4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODI0NDA2OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/AbstractLoginActionPage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoyNjo1MVrOF0JE4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoyNjo1MVrOF0JE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxODk3OA==", "bodyText": "not sure whether we should consider the case that the auth message in the auth exception is empty", "url": "https://github.com/Talend/tdi-studio-se/pull/4508#discussion_r390218978", "createdAt": "2020-03-10T10:26:51Z", "author": {"login": "cmeng-talend"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/login/AbstractLoginActionPage.java", "diffHunk": "@@ -351,5 +355,17 @@ public boolean hasError() {\n             return hasError;\r\n         }\r\n \r\n+        public String getAuthExceptionMessage() {\r\n+            return authExceptionMessage;\r\n+        }\r\n+\r\n+        public void setAuthExceptionMessage(String authExceptionMessage) {\r\n+            this.authExceptionMessage = authExceptionMessage;\r\n+        }\r\n+\r\n+        public boolean hasAuthException() {\r\n+            return StringUtils.isNotBlank(authExceptionMessage);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2e5409ef03b1506f69896cbe85af409344c16c4"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4571, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}