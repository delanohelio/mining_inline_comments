{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDcwMDI4", "number": 5149, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo0NDoyNVrOEhp5qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo0NDoyNVrOEhp5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzI0OTY5OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/SetGlobalTimestampOptionForPreviousVersions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjo0NDoyNVrOHPFgJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDowODoyMVrOHPJMLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4MDgzOA==", "bodyText": "Is there a special reason to be on the 2020-01-19 for this new migration task", "url": "https://github.com/Talend/tdi-studio-se/pull/5149#discussion_r485580838", "createdAt": "2020-09-09T12:44:25Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/SetGlobalTimestampOptionForPreviousVersions.java", "diffHunk": "@@ -0,0 +1,140 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.commons.exception.ExceptionHandler;\n+import org.talend.commons.exception.PersistenceException;\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.core.repository.model.ProxyRepositoryFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ElementParameterType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+import org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.ElementParameterTypeImpl;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.NodeTypeImpl;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * to keep retrocompatibility in dataset component that used timestamp by default (studio 7.0) or if \n+ * they specified to use timestamp or date via an option (7.1 & 7.2), we need to add a global boolean value if all components\n+ * used timestamp, else we need to update the schema's pattern according to the value of the checkbox if it exists, \n+ * or timestamp since it was the previous default value\n+ * \n+ * note that in case the pattern is updated and the schema was repo, then the schema must be changed to built in when\n+ * opening the job to keep updated value (this case only happens if theres a conflict in Date / Timestamp in different nodes\n+ * of a job, which should be rare because it lead to a GUI error)\n+ *\n+ */\n+public class SetGlobalTimestampOptionForPreviousVersions extends AbstractJobMigrationTask {\n+\n+\tprivate static final List<String> IMPACTED_COMPONENTS =\n+            Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                    \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\", \"tFileInputParquet\", \"tHiveInput\",\n+                    \"tDeltaLakeInput\", \"tDeltaLakeOutput\");\n+    \n+    private String TIMESTAMP_OPTION = \"USE_TIMESTAMP_FOR_DATASET\"; //$NON-NLS-1$\n+    \n+    private String CHECKBOX_TIMESTAMP_NODE = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$\n+    \n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7973b65cb39c0c0868b87d4633a13c62ffc57f39"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4NjE5Ng==", "bodyText": "absolutely not, I think I forgot to update it actually ... should it be changed ? (i don't think it overlaps with anything else)", "url": "https://github.com/Talend/tdi-studio-se/pull/5149#discussion_r485586196", "createdAt": "2020-09-09T12:52:21Z", "author": {"login": "AlixMetivier"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/SetGlobalTimestampOptionForPreviousVersions.java", "diffHunk": "@@ -0,0 +1,140 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.commons.exception.ExceptionHandler;\n+import org.talend.commons.exception.PersistenceException;\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.core.repository.model.ProxyRepositoryFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ElementParameterType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+import org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.ElementParameterTypeImpl;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.NodeTypeImpl;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * to keep retrocompatibility in dataset component that used timestamp by default (studio 7.0) or if \n+ * they specified to use timestamp or date via an option (7.1 & 7.2), we need to add a global boolean value if all components\n+ * used timestamp, else we need to update the schema's pattern according to the value of the checkbox if it exists, \n+ * or timestamp since it was the previous default value\n+ * \n+ * note that in case the pattern is updated and the schema was repo, then the schema must be changed to built in when\n+ * opening the job to keep updated value (this case only happens if theres a conflict in Date / Timestamp in different nodes\n+ * of a job, which should be rare because it lead to a GUI error)\n+ *\n+ */\n+public class SetGlobalTimestampOptionForPreviousVersions extends AbstractJobMigrationTask {\n+\n+\tprivate static final List<String> IMPACTED_COMPONENTS =\n+            Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                    \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\", \"tFileInputParquet\", \"tHiveInput\",\n+                    \"tDeltaLakeInput\", \"tDeltaLakeOutput\");\n+    \n+    private String TIMESTAMP_OPTION = \"USE_TIMESTAMP_FOR_DATASET\"; //$NON-NLS-1$\n+    \n+    private String CHECKBOX_TIMESTAMP_NODE = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$\n+    \n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4MDgzOA=="}, "originalCommit": {"oid": "7973b65cb39c0c0868b87d4633a13c62ffc57f39"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0MTI2MA==", "bodyText": "That's ok to let it like this if no overlap", "url": "https://github.com/Talend/tdi-studio-se/pull/5149#discussion_r485641260", "createdAt": "2020-09-09T14:08:21Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/SetGlobalTimestampOptionForPreviousVersions.java", "diffHunk": "@@ -0,0 +1,140 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.commons.exception.ExceptionHandler;\n+import org.talend.commons.exception.PersistenceException;\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.core.repository.model.ProxyRepositoryFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ElementParameterType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+import org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.ElementParameterTypeImpl;\n+import org.talend.designer.core.model.utils.emf.talendfile.impl.NodeTypeImpl;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * to keep retrocompatibility in dataset component that used timestamp by default (studio 7.0) or if \n+ * they specified to use timestamp or date via an option (7.1 & 7.2), we need to add a global boolean value if all components\n+ * used timestamp, else we need to update the schema's pattern according to the value of the checkbox if it exists, \n+ * or timestamp since it was the previous default value\n+ * \n+ * note that in case the pattern is updated and the schema was repo, then the schema must be changed to built in when\n+ * opening the job to keep updated value (this case only happens if theres a conflict in Date / Timestamp in different nodes\n+ * of a job, which should be rare because it lead to a GUI error)\n+ *\n+ */\n+public class SetGlobalTimestampOptionForPreviousVersions extends AbstractJobMigrationTask {\n+\n+\tprivate static final List<String> IMPACTED_COMPONENTS =\n+            Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                    \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\", \"tFileInputParquet\", \"tHiveInput\",\n+                    \"tDeltaLakeInput\", \"tDeltaLakeOutput\");\n+    \n+    private String TIMESTAMP_OPTION = \"USE_TIMESTAMP_FOR_DATASET\"; //$NON-NLS-1$\n+    \n+    private String CHECKBOX_TIMESTAMP_NODE = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$\n+    \n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4MDgzOA=="}, "originalCommit": {"oid": "7973b65cb39c0c0868b87d4633a13c62ffc57f39"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}