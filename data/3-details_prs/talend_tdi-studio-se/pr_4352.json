{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODU5NzMy", "number": 4352, "title": "feat(tbd-9855): adapt Timestamp or Date according to schema", "bodyText": "What is the current behavior? (You can also link to an open issue here)\nWhat is the new behavior?\nPlease check if the PR fulfills these requirements\n\n The commit message follows Talend standard\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features) ?\n The code coverage on new code >75%\n The new code does not introduce new technical issues (sonar / eslint)\n\nWhat kind of change does this PR introduce?\n\n Bugfix\n Feature\n Code style update (formatting, local variables)\n Refactoring (no functional changes, no api changes)\n Build / CI related changes\n Other... Please describe:\n\nDoes this PR introduce a breaking change?\n\n Yes\n No\n\nIf this PR contains a breaking change, please describe the impact and migration path for existing applications: ...\nOther information:", "createdAt": "2020-01-20T14:23:26Z", "url": "https://github.com/Talend/tdi-studio-se/pull/4352", "merged": true, "mergeCommit": {"oid": "9515623e0396707408e4cccd023ba430bc2c42d7"}, "closed": true, "closedAt": "2020-02-13T15:39:15Z", "author": {"login": "AlixMetivier"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8JplSgH2gAyMzY0ODU5NzMyOjk5YTg4YjJlYzg3NmQxZmUxMjlkMmI1Y2YyMDZkNmNmODhjZWU3Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD8z4xAFqTM1ODMxOTIwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "99a88b2ec876d1fe129d2b5cf206d6cf88cee727", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/99a88b2ec876d1fe129d2b5cf206d6cf88cee727", "committedDate": "2020-01-20T10:04:57Z", "message": "added new migration task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/18f9bdff6eb1091a96934902464b6830cb8cf2f4", "committedDate": "2020-01-20T14:21:51Z", "message": "migration task"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzY2ODU2", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#pullrequestreview-345366856", "createdAt": "2020-01-20T15:02:11Z", "commit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNTowMjoxMVrOFfhGLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToxMTowN1rOFfhWmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5MjQyOA==", "bodyText": "variable name should start from lower case character", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368592428", "createdAt": "2020-01-20T15:02:11Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5MjY5Mw==", "bodyText": "I think it should be class-level constant (Arrays.asList returns unmodifiable list)", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368592693", "createdAt": "2020-01-20T15:02:47Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5MzMxNQ==", "bodyText": "return Arrays.asList(ERepositoryObjectType.PROCESS_MR, ERepositoryObjectType.PROCESS_STORM)\nif it needs to be modifiable - add new ArrayList<>(...)", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368593315", "createdAt": "2020-01-20T15:04:02Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5Mzc5NA==", "bodyText": "IMO exception should be logged as well, in order to not lose information", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368593794", "createdAt": "2020-01-20T15:05:03Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();\n+\n+        try {\n+            for (String componentName : impactedComponents) {\n+                ModifyComponentsAction.searchAndModify(item, processType, new NameComponentFilter(componentName),\n+                        Arrays.<IComponentConversion> asList(AdaptSchemaForDateType));\n+            }\n+            return ExecutionResult.SUCCESS_NO_ALERT;\n+        } catch (Exception e) {\n+            return ExecutionResult.FAILURE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NDYxNQ==", "bodyText": "java.util.Collections.singletonList(obj)", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368594615", "createdAt": "2020-01-20T15:06:43Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();\n+\n+        try {\n+            for (String componentName : impactedComponents) {\n+                ModifyComponentsAction.searchAndModify(item, processType, new NameComponentFilter(componentName),\n+                        Arrays.<IComponentConversion> asList(AdaptSchemaForDateType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NTM3Mw==", "bodyText": "constant name must be in UPPER_CASE. Also, could you please rename it to more readable version? It isn't clear what does this name mean.", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368595373", "createdAt": "2020-01-20T15:08:16Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();\n+\n+        try {\n+            for (String componentName : impactedComponents) {\n+                ModifyComponentsAction.searchAndModify(item, processType, new NameComponentFilter(componentName),\n+                        Arrays.<IComponentConversion> asList(AdaptSchemaForDateType));\n+            }\n+            return ExecutionResult.SUCCESS_NO_ALERT;\n+        } catch (Exception e) {\n+            return ExecutionResult.FAILURE;\n+        }\n+    }\n+\n+    private class AdaptSchemaForDateType implements IComponentConversion {\n+\n+        private String name = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NTYzOA==", "bodyText": "It isn't type safe. Are you sure that all objects are MetadataType?", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368595638", "createdAt": "2020-01-20T15:08:53Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();\n+\n+        try {\n+            for (String componentName : impactedComponents) {\n+                ModifyComponentsAction.searchAndModify(item, processType, new NameComponentFilter(componentName),\n+                        Arrays.<IComponentConversion> asList(AdaptSchemaForDateType));\n+            }\n+            return ExecutionResult.SUCCESS_NO_ALERT;\n+        } catch (Exception e) {\n+            return ExecutionResult.FAILURE;\n+        }\n+    }\n+\n+    private class AdaptSchemaForDateType implements IComponentConversion {\n+\n+        private String name = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$\n+\n+        public void transform(NodeType node) {\n+            \n+            for(Object om : node.getMetadata()){\n+                MetadataType metadata = (MetadataType) om;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NjYzNQ==", "bodyText": "Btw, can be re-written to stream usages :)", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#discussion_r368596635", "createdAt": "2020-01-20T15:11:07Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/model/migration/spark/UpdateDatesPatternAccordingToDeletedTimestampOption.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.repository.model.migration.spark;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.GregorianCalendar;\n+import java.util.List;\n+\n+import org.talend.core.model.components.ComponentUtilities;\n+import org.talend.core.model.components.ModifyComponentsAction;\n+import org.talend.core.model.components.conversions.IComponentConversion;\n+import org.talend.core.model.components.filters.NameComponentFilter;\n+import org.talend.core.model.migration.AbstractJobMigrationTask;\n+import org.talend.core.model.properties.Item;\n+import org.talend.core.model.repository.ERepositoryObjectType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ColumnType;\n+import org.talend.designer.core.model.utils.emf.talendfile.MetadataType;\n+import org.talend.designer.core.model.utils.emf.talendfile.NodeType;\n+import org.talend.designer.core.model.utils.emf.talendfile.ProcessType;\n+\n+/**\n+ *\n+ * @author ametivier\n+ *\n+ * Since we removed the timestamp option from certain components, we need to update the pattern in the schema\n+ * according to the value of the checkbox\n+ *\n+ */\n+public class UpdateDatesPatternAccordingToDeletedTimestampOption extends AbstractJobMigrationTask {\n+\n+    @Override\n+    public Date getOrder() {\n+        GregorianCalendar gc = new GregorianCalendar(2020, 01, 19, 10, 0, 0);\n+        return gc.getTime();\n+    }\n+    \n+    @Override\n+    public List<ERepositoryObjectType> getTypes() {\n+        List<ERepositoryObjectType> toReturn = new ArrayList<ERepositoryObjectType>();\n+        toReturn.add(ERepositoryObjectType.PROCESS_MR);\n+        toReturn.add(ERepositoryObjectType.PROCESS_STORM);\n+        return toReturn;\n+    }\n+\n+    @Override\n+    public ExecutionResult execute(Item item) {\n+        ProcessType processType = getProcessType(item);\n+        if (processType == null) {\n+            return ExecutionResult.NOTHING_TO_DO;\n+        }\n+\n+        List<String> impactedComponents =\n+                Arrays.asList(\"tFileOutputParquet\", \"tHiveOutput\", \"tRedshiftOutput\", \"tSqlRow\", \"tMatchPairing\",\n+                        \"tMatchPredict\", \"tMatchModel\", \"tDataShuffling\");\n+\n+        IComponentConversion AdaptSchemaForDateType = new AdaptSchemaForDateType();\n+\n+        try {\n+            for (String componentName : impactedComponents) {\n+                ModifyComponentsAction.searchAndModify(item, processType, new NameComponentFilter(componentName),\n+                        Arrays.<IComponentConversion> asList(AdaptSchemaForDateType));\n+            }\n+            return ExecutionResult.SUCCESS_NO_ALERT;\n+        } catch (Exception e) {\n+            return ExecutionResult.FAILURE;\n+        }\n+    }\n+\n+    private class AdaptSchemaForDateType implements IComponentConversion {\n+\n+        private String name = \"DATE_TO_TIMESTAMP_DF_TYPE_SUBSTITUTION\"; //$NON-NLS-1$\n+\n+        public void transform(NodeType node) {\n+            \n+            for(Object om : node.getMetadata()){\n+                MetadataType metadata = (MetadataType) om;\n+                for(Object oc : metadata.getColumn()){\n+                    ColumnType column = (ColumnType) oc;\n+                    if(column.getType().equals(\"id_Date\")) {\n+                        if(\"true\".equals(ComponentUtilities.getNodePropertyValue(node, name))){\n+                            column.setPattern(\"\\\"yyyy-MM-dd HH:mm:ss\\\"\");\n+                        } else if (\"false\".equals(ComponentUtilities.getNodePropertyValue(node, name))) {\n+                            column.setPattern(\"\\\"dd-MM-yyyy\\\"\");\n+                        }\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18f9bdff6eb1091a96934902464b6830cb8cf2f4"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e031dfcb96352681822625a22732b0faa88fec8f", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/e031dfcb96352681822625a22732b0faa88fec8f", "committedDate": "2020-01-20T15:59:27Z", "message": "changes according to comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb09ec7359d2893f052a57f82c886aad599c6795", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/bb09ec7359d2893f052a57f82c886aad599c6795", "committedDate": "2020-01-22T16:21:12Z", "message": "fix declaration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2b96339ebbb06210368ed62ef42d8d979d49e4", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/2f2b96339ebbb06210368ed62ef42d8d979d49e4", "committedDate": "2020-01-22T16:25:36Z", "message": "fix declaration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e45503ae9ac9f0643a29be53c58be5e6e4483b62", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/e45503ae9ac9f0643a29be53c58be5e6e4483b62", "committedDate": "2020-01-22T16:31:26Z", "message": "fix name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2458eb44c1a09d22888071dd2e5c56d1592bc3e", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/d2458eb44c1a09d22888071dd2e5c56d1592bc3e", "committedDate": "2020-01-22T16:36:02Z", "message": "added log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "883d996f25ef51965e859f901b5b39091a1ef51d", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/883d996f25ef51965e859f901b5b39091a1ef51d", "committedDate": "2020-01-22T16:36:21Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f75568575d02675624cb370e75be2497d915e1b", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/0f75568575d02675624cb370e75be2497d915e1b", "committedDate": "2020-01-22T16:37:18Z", "message": "typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzM0NzAz", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#pullrequestreview-346734703", "createdAt": "2020-01-22T16:40:11Z", "commit": {"oid": "0f75568575d02675624cb370e75be2497d915e1b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "699f6cf0816b736f455fd00bdc6141716dde4eda", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/699f6cf0816b736f455fd00bdc6141716dde4eda", "committedDate": "2020-01-30T15:54:58Z", "message": "Merge branch 'master' of https://github.com/Talend/tdi-studio-se into ametivier/fix/TBD-9855"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4726cbcee796aa0f9faf840d36e4d4544fb45624", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/4726cbcee796aa0f9faf840d36e4d4544fb45624", "committedDate": "2020-02-11T19:52:20Z", "message": "Merge branch 'master' of https://github.com/Talend/tdi-studio-se into ametivier/fix/TBD-9855"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa79e348ca9c08e1c527190959bd91834b625bd", "author": {"user": {"login": "AlixMetivier", "name": null}}, "url": "https://github.com/Talend/tdi-studio-se/commit/2aa79e348ca9c08e1c527190959bd91834b625bd", "committedDate": "2020-02-12T08:41:52Z", "message": "Merge branch 'master' of https://github.com/Talend/tdi-studio-se into ametivier/fix/TBD-9855"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NTEwMjg3", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#pullrequestreview-357510287", "createdAt": "2020-02-12T14:47:16Z", "commit": {"oid": "2aa79e348ca9c08e1c527190959bd91834b625bd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e63a68bbe0ebd58423ad22ae2f3a9b48978cb2e", "author": {"user": {"login": "lbourgeois", "name": "Laurent BOURGEOIS"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/9e63a68bbe0ebd58423ad22ae2f3a9b48978cb2e", "committedDate": "2020-02-13T15:37:42Z", "message": "Merge branch 'master' into ametivier/fix/TBD-9855"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzE5MjA2", "url": "https://github.com/Talend/tdi-studio-se/pull/4352#pullrequestreview-358319206", "createdAt": "2020-02-13T15:38:50Z", "commit": {"oid": "9e63a68bbe0ebd58423ad22ae2f3a9b48978cb2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4642, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}