{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzAxMzUw", "number": 4693, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0NjozOVrOD9UhVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0NjozOVrOD9UhVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI1OTQyOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/StitchDataLoaderConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0NjozOVrOGWvn-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyOTowN1rOGW5wkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMjEzNg==", "bodyText": "Better set timeout ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4693#discussion_r426502136", "createdAt": "2020-05-18T09:46:39Z", "author": {"login": "wchen-talend"}, "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/StitchDataLoaderConstants.java", "diffHunk": "@@ -0,0 +1,156 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2020 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.designer.core.ui.editor;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URL;\n+import java.net.URLEncoder;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.net.ssl.HttpsURLConnection;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.talend.commons.exception.ExceptionHandler;\n+import org.talend.designer.core.i18n.Messages;\n+import org.talend.designer.core.model.components.StitchPseudoComponent;\n+import org.talend.utils.json.JSONArray;\n+import org.talend.utils.json.JSONException;\n+import org.talend.utils.json.JSONObject;\n+\n+public class StitchDataLoaderConstants {\n+\n+    public static final String CONNECTOR_PALETTE_TYPE = \"SDL\";\n+\n+    public static final String CONNECTOR_FAMILY_NAME = \"Stitch Data Loader\";\n+\n+    public static final String STITCH_DATA_CONNECTOR_JSON_URL = \"https://www.stitchdata.com/integrations.json\";\n+\n+    private static final String DEFAULT_CONNECTOR_LIST_FILE_PATH = \"stitch_connectors.json\";\n+\n+    private static String utmParamSuffix = StringUtils.EMPTY;\n+\n+    private static List<StitchPseudoComponent> integrationSourceList = Collections.emptyList();\n+\n+    private static List<StitchPseudoComponent> dataWarehouseList = Collections.emptyList();\n+\n+    static {\n+        // load latest stitch pseudo connectors and UTM parameters asynchronously\n+        CompletableFuture.runAsync(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+                loadLatestStitchPseudoComponents();\n+            }\n+        });\n+    }\n+\n+    public static String getUTMParamSuffix() {\n+        return utmParamSuffix;\n+    }\n+\n+    protected static List<StitchPseudoComponent> getIntegrationSourceList() {\n+        return integrationSourceList;\n+    }\n+\n+    protected static List<StitchPseudoComponent> getDataWarehouseList() {\n+        return dataWarehouseList;\n+    }\n+\n+    private static void loadLatestStitchPseudoComponents() {\n+        try {\n+            URL stitchConnectorURL = new URL(STITCH_DATA_CONNECTOR_JSON_URL);\n+            HttpsURLConnection con = (HttpsURLConnection) stitchConnectorURL.openConnection();\n+            InputStream ins = con.getInputStream();\n+            String resourceString = IOUtils.toString(ins, \"UTF-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3333e0edeb010c024dbd1446edaa05fa540d77c0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2ODE3OQ==", "bodyText": "Yes. I agree.", "url": "https://github.com/Talend/tdi-studio-se/pull/4693#discussion_r426668179", "createdAt": "2020-05-18T14:29:07Z", "author": {"login": "sizhaoliu"}, "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/ui/editor/StitchDataLoaderConstants.java", "diffHunk": "@@ -0,0 +1,156 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2020 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.designer.core.ui.editor;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URL;\n+import java.net.URLEncoder;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+import javax.net.ssl.HttpsURLConnection;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.talend.commons.exception.ExceptionHandler;\n+import org.talend.designer.core.i18n.Messages;\n+import org.talend.designer.core.model.components.StitchPseudoComponent;\n+import org.talend.utils.json.JSONArray;\n+import org.talend.utils.json.JSONException;\n+import org.talend.utils.json.JSONObject;\n+\n+public class StitchDataLoaderConstants {\n+\n+    public static final String CONNECTOR_PALETTE_TYPE = \"SDL\";\n+\n+    public static final String CONNECTOR_FAMILY_NAME = \"Stitch Data Loader\";\n+\n+    public static final String STITCH_DATA_CONNECTOR_JSON_URL = \"https://www.stitchdata.com/integrations.json\";\n+\n+    private static final String DEFAULT_CONNECTOR_LIST_FILE_PATH = \"stitch_connectors.json\";\n+\n+    private static String utmParamSuffix = StringUtils.EMPTY;\n+\n+    private static List<StitchPseudoComponent> integrationSourceList = Collections.emptyList();\n+\n+    private static List<StitchPseudoComponent> dataWarehouseList = Collections.emptyList();\n+\n+    static {\n+        // load latest stitch pseudo connectors and UTM parameters asynchronously\n+        CompletableFuture.runAsync(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+                loadLatestStitchPseudoComponents();\n+            }\n+        });\n+    }\n+\n+    public static String getUTMParamSuffix() {\n+        return utmParamSuffix;\n+    }\n+\n+    protected static List<StitchPseudoComponent> getIntegrationSourceList() {\n+        return integrationSourceList;\n+    }\n+\n+    protected static List<StitchPseudoComponent> getDataWarehouseList() {\n+        return dataWarehouseList;\n+    }\n+\n+    private static void loadLatestStitchPseudoComponents() {\n+        try {\n+            URL stitchConnectorURL = new URL(STITCH_DATA_CONNECTOR_JSON_URL);\n+            HttpsURLConnection con = (HttpsURLConnection) stitchConnectorURL.openConnection();\n+            InputStream ins = con.getInputStream();\n+            String resourceString = IOUtils.toString(ins, \"UTF-8\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMjEzNg=="}, "originalCommit": {"oid": "3333e0edeb010c024dbd1446edaa05fa540d77c0"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4521, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}