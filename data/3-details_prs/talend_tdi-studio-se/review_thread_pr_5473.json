{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDc1MzIz", "number": 5473, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDowMzo1MVrOE2GS8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0ODowNVrOE9lI9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTYxNzE1OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDowMzo1MVrOHuvQng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDowMzo1MVrOHuvQng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3MDg0Ng==", "bodyText": "Maybe would be better to use comma instead of first \"or\"?", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518770846", "createdAt": "2020-11-06T14:03:51Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "diffHunk": "@@ -213,9 +213,35 @@\n \t\t/* ----END-CREATING-CLIENT (Cloud API)---- */\r\n \r\n \t\tlong nb_line_<%=cid%> = 0;\r\n+  <%\r\n+  } else if (authMode.equals(\"TOKEN\")) {\r\n+    if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+       final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+  <%} else {%>\n+       final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+  <%}%>\r\n+\t/* ----START-CREATING-CLIENT (OAuth based Token)---- */\r\n+\t\tfinal String PROJECT_ID_<%=cid %> = <%=projectId %>;\r\n+\r\n+\t\tcom.google.api.client.auth.oauth2.Credential cred_<%=cid%> =\r\n+\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\r\n+\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));\r\n+\r\n+\t\tcom.google.api.services.bigquery.Bigquery bigqueryclient_<%=cid%> = null;\r\n+\t\tlong nb_line_<%=cid%> = 0;\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.info(\"<%=cid%> - Creating client.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tbigqueryclient_<%=cid%> =\r\n+\t\tnew com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(), new com.google.api.client.json.jackson2.JacksonFactory(), cred_<%=cid%>).setApplicationName(\"Talend\").build();\r\n+\t/* ----END-CREATING-CLIENT (OAuth based Token)---- */\r\n \t<%\r\n \t} else {\r\n-\t\tthrow new IllegalArgumentException(\"authentication mode should be either \\\"SERVICEACCOUNT\\\" or \\\"OAUTH\\\", but it is \" + authMode);\r\n+\t\tthrow new IllegalArgumentException(\"authentication mode should be either \\\"SERVICEACCOUNT\\\" or \\\"OAUTH\\\" or \\\"TOKEN\\\", but it is \" + authMode);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f430e0cb47a33884d687f270479e1272030bfbc"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTc5NTMwOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo0OToxMVrOHuw-Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNDo0OToxMVrOHuw-Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc5ODkxMQ==", "bodyText": "if ACCESS_TOKEN is going to be a function and we need to call the function we should call the function here and not to set final String decryptedAccessToken_<%=cid%> here.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518798911", "createdAt": "2020-11-06T14:49:11Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryBulkExec/tBigQueryBulkExec_begin.javajet", "diffHunk": "@@ -351,10 +360,13 @@\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t<%}%>\r\n-\t\t\r\n+\r\n \t\t<%if (createTableIfNotExist) { %>\r\n-\t\t\t\r\n+\r\n \t\t\ttry {\r\n+\t\t\t\t<% if(authMode.equals(\"TOKEN\") && !ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) { %>\r\n+\t\t\t\tcred_<%=cid%>.setAccessToken(decryptedAccessToken_<%=cid%>);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a1713a0372413716556d174b5a95d77e35144c"}, "originalPosition": 242}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTkwNDQzOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryInput/tBigQueryInput_begin.javajet", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToxNTo0MlrOHuyCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToxNTo0MlrOHuyCsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgxNjQzNA==", "bodyText": "Don't we need to update this token from function(if it is set as function) in BigQuery Input?", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518816434", "createdAt": "2020-11-06T15:15:42Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQueryInput/tBigQueryInput_begin.javajet", "diffHunk": "@@ -195,17 +199,23 @@\n \t\t\t\t// Store the refresh token for future use.\n \t\t\t\tjava.util.Properties storeProperties_<%=cid%> = new java.util.Properties();\n \t\t\t\tstoreProperties_<%=cid%>.setProperty(\"refreshtoken\", credential_<%=cid%>.getRefreshToken());\n-\t\t\t\tjava.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>);\n-\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n-\t\t\t\tif (outputStream_<%=cid%> != null) {\n-\t\t\t\t    outputStream_<%=cid%>.close();\n-\t\t\t\t}\n-\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n+        try (java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n+            storeProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n+        }\n \t\t\t}\n \t\t}\n-\n-\n+<%} else {\n+\n+  if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+     final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+  <%} else {%>\n+     final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+  <%}%>\n+\t\tcredential_<%=cid%> =\n+\t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+\t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a1713a0372413716556d174b5a95d77e35144c"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTkyNjc2OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMDoyM1rOHuyRDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMDoyM1rOHuyRDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMDExMQ==", "bodyText": "For BigQueryOutput this token should be updated as well, I guess.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518820111", "createdAt": "2020-11-06T15:20:23Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "diffHunk": "@@ -151,17 +155,27 @@\n \t\t\t\ttry(java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n \t\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n \t\t\t\t}\n-\t\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n \t\t\t}\n \t\t}\n+    <% } else {\n+\n+      if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+         final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+      <%} else {%>\n+         final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+      <%}%>\n+    \t\tcredential_<%=cid%> =\n+    \t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+    \t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a1713a0372413716556d174b5a95d77e35144c"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTk0NDY5OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyNDo0NVrOHuyceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyNDo0NVrOHuyceA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMzAzMg==", "bodyText": "Refresh the token from function.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518823032", "createdAt": "2020-11-06T15:24:45Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tBigQuerySQLRow/tBigQuerySQLRow_begin.javajet", "diffHunk": "@@ -151,17 +155,27 @@\n \t\t\t\ttry(java.io.FileOutputStream outputStream_<%=cid%> = new java.io.FileOutputStream(tokenFile_<%=cid %>)) {\n \t\t\t\t\tstoreProperties_<%=cid%>.store(outputStream_<%=cid%>,null);\n \t\t\t\t}\n-\t\n-\t\t\t\tbigqueryclient_<%=cid%> = new com.google.api.services.bigquery.Bigquery.Builder(new com.google.api.client.http.javanet.NetHttpTransport(),new com.google.api.client.json.jackson2.JacksonFactory(),credential_<%=cid%>).build();\n \t\t\t}\n \t\t}\n+    <% } else {\n+\n+      if (ElementParameterParser.canEncrypt(node, \"__ACCESS_TOKEN__\")) {%>\n+         final String decryptedAccessToken_<%=cid%> = routines.system.PasswordEncryptUtil.decryptPassword(<%=ElementParameterParser.getEncryptedValue(node, \"__ACCESS_TOKEN__\")%>);\n+      <%} else {%>\n+         final String decryptedAccessToken_<%=cid%> = <%= ElementParameterParser.getValue(node, \"__ACCESS_TOKEN__\")%>;\n+      <%}%>\n+    \t\tcredential_<%=cid%> =\n+    \t\t\tnew com.google.api.client.auth.oauth2.Credential(com.google.api.client.auth.oauth2.BearerToken.authorizationHeaderAccessMethod()).setFromTokenResponse(\n+    \t\t\t\t(new com.google.api.client.auth.oauth2.TokenResponse()).setAccessToken(decryptedAccessToken_<%=cid%>));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f430e0cb47a33884d687f270479e1272030bfbc"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTk3MzIyOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSPut/tGSPut_java.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTozMTo1M1rOHuyuqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo0MDo1NlrOHuzFag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNzY4OQ==", "bodyText": "Why did you remove check from existing connection? it should be shown if existing connection also uses service account authentication(or oauth token as well, I guess).", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518827689", "createdAt": "2020-11-06T15:31:53Z", "author": {"login": "chmyga"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSPut/tGSPut_java.xml", "diffHunk": "@@ -158,16 +187,16 @@\n     </PARAMETERS>\n \n     <ADVANCED_PARAMETERS>\n-\t\n+\n \t\t<PARAMETER\n                 NAME=\"PART_SIZE\"\n                 FIELD=\"TEXT\"\n                 NUM_ROW=\"1\"\n-\t\t\t\tSHOW_IF=\"((USE_EXISTING_CONNECTION == 'true') AND (#LINK@NODE.CONNECTION.AUTH_TYPE == 'SERVICE_ACCOUNT')) OR ((USE_EXISTING_CONNECTION == 'false') AND (AUTH_TYPE == 'SERVICE_ACCOUNT'))\"\n+\t\t\t\tSHOW_IF=\"((AUTH_TYPE == 'SERVICE_ACCOUNT') OR (AUTH_TYPE == 'TOKEN'))\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f430e0cb47a33884d687f270479e1272030bfbc"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgzMzUxNA==", "bodyText": "agree. I missed this. Gonna update this.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r518833514", "createdAt": "2020-11-06T15:40:56Z", "author": {"login": "mbasiuk-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSPut/tGSPut_java.xml", "diffHunk": "@@ -158,16 +187,16 @@\n     </PARAMETERS>\n \n     <ADVANCED_PARAMETERS>\n-\t\n+\n \t\t<PARAMETER\n                 NAME=\"PART_SIZE\"\n                 FIELD=\"TEXT\"\n                 NUM_ROW=\"1\"\n-\t\t\t\tSHOW_IF=\"((USE_EXISTING_CONNECTION == 'true') AND (#LINK@NODE.CONNECTION.AUTH_TYPE == 'SERVICE_ACCOUNT')) OR ((USE_EXISTING_CONNECTION == 'false') AND (AUTH_TYPE == 'SERVICE_ACCOUNT'))\"\n+\t\t\t\tSHOW_IF=\"((AUTH_TYPE == 'SERVICE_ACCOUNT') OR (AUTH_TYPE == 'TOKEN'))\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyNzY4OQ=="}, "originalCommit": {"oid": "9f430e0cb47a33884d687f270479e1272030bfbc"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDA2MDUxOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSDelete/tGSDelete_end.javajet", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0NToxOVrOH6V2cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo1Nzo1MFrOH6WU8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzQ1Nw==", "bodyText": "Maybe add \"break\" after this, so no need to iterate further?", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530937457", "createdAt": "2020-11-26T10:45:19Z", "author": {"login": "dmytrogrygorenko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSDelete/tGSDelete_end.javajet", "diffHunk": "@@ -19,16 +19,19 @@ imports=\"\n \r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-\tfor (INode ne : nodes) {\r\n-\t\tif (connection.equals(ne.getUniqueName())) {\r\n-\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-\t\t}\r\n-\t}\r\n-\r\n+\tboolean useHMACAuthType = false;\n+\tif((\"true\").equals(useExistingConn)) {\n+\t\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+\t\tfor (INode ne : nodes) {\n+\t\t\tif (connection.equals(ne.getUniqueName())) {\n+\t\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+\t\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a11086e0df15abff32c3977c8cb619bc8809da3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0NTI2Ng==", "bodyText": "The main idea here was to change conditional property. As you see from the original code that was working before, it doesn't introduce a new issue. As for performance - it won't be even seen. (how many tGSConnection components can be present in the single job?)", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530945266", "createdAt": "2020-11-26T10:57:50Z", "author": {"login": "mbasiuk-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSDelete/tGSDelete_end.javajet", "diffHunk": "@@ -19,16 +19,19 @@ imports=\"\n \r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-\tfor (INode ne : nodes) {\r\n-\t\tif (connection.equals(ne.getUniqueName())) {\r\n-\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-\t\t}\r\n-\t}\r\n-\r\n+\tboolean useHMACAuthType = false;\n+\tif((\"true\").equals(useExistingConn)) {\n+\t\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+\t\tfor (INode ne : nodes) {\n+\t\t\tif (connection.equals(ne.getUniqueName())) {\n+\t\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+\t\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzQ1Nw=="}, "originalCommit": {"oid": "1a11086e0df15abff32c3977c8cb619bc8809da3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDA2MjgyOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_end.javajet", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0NTo1N1rOH6V37g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0NTo1N1rOH6V37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzNzgzOA==", "bodyText": "Same here.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530937838", "createdAt": "2020-11-26T10:45:57Z", "author": {"login": "dmytrogrygorenko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_end.javajet", "diffHunk": "@@ -21,16 +21,19 @@ imports=\"\n \tList<Map<String, String>> keys = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, \"__KEYS__\");\r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-\tList< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-\tfor (INode ne : nodes) {\r\n-\t\tif (connection.equals(ne.getUniqueName())) {\r\n-\t\t\tString authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-\t\t\tuseHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-\t\t}\r\n-\t}\r\n-\r\n+        boolean useHMACAuthType = false;\n+        if((\"true\").equals(useExistingConn)) {\n+            List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+            for (INode ne : nodes) {\n+                if (connection.equals(ne.getUniqueName())) {\n+                        String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+                        useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a11086e0df15abff32c3977c8cb619bc8809da3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDA3MDk0OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSList/tGSList_end.javajet", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0ODowNVrOH6V9Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMDo0ODowNVrOH6V9Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDkzOTE2Mg==", "bodyText": "And here.", "url": "https://github.com/Talend/tdi-studio-se/pull/5473#discussion_r530939162", "createdAt": "2020-11-26T10:48:05Z", "author": {"login": "dmytrogrygorenko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSList/tGSList_end.javajet", "diffHunk": "@@ -19,16 +19,19 @@ imports=\"\n \tList<Map<String, String>> buckets = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, \"__BUCKETS__\");\r\n \tString connection = ElementParameterParser.getValue(node,\"__CONNECTION__\");\r\n \tString authType = ElementParameterParser.getValue(node, \"__AUTH_TYPE__\");\r\n-  boolean useHMACAuthType = false;\r\n-\r\n-  List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\r\n-  for (INode ne : nodes) {\r\n-    if (connection.equals(ne.getUniqueName())) {\r\n-      String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\r\n-      useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);\r\n-    }\r\n-  }\r\n-\r\n+    boolean useHMACAuthType = false;\n+    if((\"true\").equals(useExistingConn)) {\n+        List< ? extends INode> nodes =  node.getProcess().getNodesOfType(\"tGSConnection\");\n+        for (INode ne : nodes) {\n+                if (connection.equals(ne.getUniqueName())) {\n+                        String authTypeInConnectionComponent = ElementParameterParser.getValue(ne, \"__AUTH_TYPE__\");\n+                        useHMACAuthType = \"USER_ACCOUNT_HMAC\".equals(authTypeInConnectionComponent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a11086e0df15abff32c3977c8cb619bc8809da3"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4631, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}