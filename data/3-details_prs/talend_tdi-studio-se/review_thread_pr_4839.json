{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDg4NzUy", "number": 4839, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0OTowMFrOEIcrLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNTozMlrOEIdClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjkzODcwOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.libs/libs_src/google-storage-utils/src/main/java/org/talend/gs/util/GSObjectUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0OTowMFrOGoarNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo0NDo1OFrOGo-GYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzI2OQ==", "bodyText": "Can directory be empty ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445033269", "createdAt": "2020-06-24T16:49:00Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.libs/libs_src/google-storage-utils/src/main/java/org/talend/gs/util/GSObjectUtil.java", "diffHunk": "@@ -44,6 +46,50 @@\n         return objects;\n     }\n \n+    public Map<String, File> generateFileMap(File rootFile, String directory, Map<String, String> filter){\n+        Map<String, File> allFiles = generateFileMap(rootFile, directory);\n+        Map<String, File> resultMap = new HashMap<>();\n+        for (Map.Entry<String, String> entry : filter.entrySet()) {\n+            //key is path to file on local machine\n+            //value is new path in GS\n+            File currentFile = new File(entry.getKey());\n+            if (allFiles.containsValue(currentFile)){\n+                resultMap.put(entry.getValue(), currentFile);\n+            }\n+        }\n+        return resultMap;\n+    }\n+\n+    public Map<String, File> generateFileMap(File rootFile, String directory){\n+        if (rootFile == null){\n+            throw new IllegalArgumentException(\"File can't be null\");\n+        }\n+        if (directory == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxMzY2NA==", "bodyText": "Yes. If string which represent directory is empty that means file will be written right in the root of bucket", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445613664", "createdAt": "2020-06-25T14:44:58Z", "author": {"login": "Voievidko"}, "path": "main/plugins/org.talend.designer.components.libs/libs_src/google-storage-utils/src/main/java/org/talend/gs/util/GSObjectUtil.java", "diffHunk": "@@ -44,6 +46,50 @@\n         return objects;\n     }\n \n+    public Map<String, File> generateFileMap(File rootFile, String directory, Map<String, String> filter){\n+        Map<String, File> allFiles = generateFileMap(rootFile, directory);\n+        Map<String, File> resultMap = new HashMap<>();\n+        for (Map.Entry<String, String> entry : filter.entrySet()) {\n+            //key is path to file on local machine\n+            //value is new path in GS\n+            File currentFile = new File(entry.getKey());\n+            if (allFiles.containsValue(currentFile)){\n+                resultMap.put(entry.getValue(), currentFile);\n+            }\n+        }\n+        return resultMap;\n+    }\n+\n+    public Map<String, File> generateFileMap(File rootFile, String directory){\n+        if (rootFile == null){\n+            throw new IllegalArgumentException(\"File can't be null\");\n+        }\n+        if (directory == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzI2OQ=="}, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk1MjY5OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketCreate/tGSBucketCreate_main.javajet", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1Mjo1NVrOGoa0PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowOTozMFrOGo_N8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNTU4MA==", "bodyText": "Maybe set e_<%=cid%> as second argument of error() log method to have the stacktrace.", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445035580", "createdAt": "2020-06-24T16:52:55Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketCreate/tGSBucketCreate_main.javajet", "diffHunk": "@@ -112,5 +130,84 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n-\t\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMTk4Ng==", "bodyText": "done for all cases", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445631986", "createdAt": "2020-06-25T15:09:30Z", "author": {"login": "Voievidko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketCreate/tGSBucketCreate_main.javajet", "diffHunk": "@@ -112,5 +130,84 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n-\t\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNTU4MA=="}, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk2MjY1OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketDelete/tGSBucketDelete_main.javajet", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1NTo1MFrOGoa66w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTowOToyNFrOGo_NrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzI5MQ==", "bodyText": "Maybe add e_<%=cid%> to get the stacktrace ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445037291", "createdAt": "2020-06-24T16:55:50Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketDelete/tGSBucketDelete_main.javajet", "diffHunk": "@@ -99,4 +116,78 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n+<%\r\n+} else {\r\n+%>\r\n+\r\n+\r\n+\r\n+\r\n+com.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+<%\r\n+if((\"true\").equals(useExistingConn)) {\r\n+%>\r\n+\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+<%\r\n+} else {\r\n+\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+%>\r\n+\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\ttry {\r\n+\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t} catch (IOException e_<%=cid%>) {\r\n+\t\t<%\r\n+\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t%>\r\n+\t\t\tthrow(e_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t}\r\n+\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+<%\r\n+}\r\n+%>\r\n+com.google.cloud.storage.Bucket bucket_<%=cid%> = storage_<%=cid%>.get(<%=bucketName%>);\r\n+if (bucket_<%=cid%> == null){\r\n+\tthrow new IllegalArgumentException(\"Can't find bucket with name: '\" + <%=bucketName%> + \"'.\");\r\n+} else {\r\n+\ttry {\r\n+\t\tbucket_<%=cid%>.delete();\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.debug(\"<%=cid%> - Bucket '\" + <%=bucketName%> + \"' was deleted.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t} catch (com.google.cloud.storage.StorageException e_<%=cid%>){\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMTkxNw==", "bodyText": "done", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445631917", "createdAt": "2020-06-25T15:09:24Z", "author": {"login": "Voievidko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketDelete/tGSBucketDelete_main.javajet", "diffHunk": "@@ -99,4 +116,78 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n+<%\r\n+} else {\r\n+%>\r\n+\r\n+\r\n+\r\n+\r\n+com.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+<%\r\n+if((\"true\").equals(useExistingConn)) {\r\n+%>\r\n+\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+<%\r\n+} else {\r\n+\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+%>\r\n+\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\ttry {\r\n+\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t} catch (IOException e_<%=cid%>) {\r\n+\t\t<%\r\n+\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t%>\r\n+\t\t\tthrow(e_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t}\r\n+\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+<%\r\n+}\r\n+%>\r\n+com.google.cloud.storage.Bucket bucket_<%=cid%> = storage_<%=cid%>.get(<%=bucketName%>);\r\n+if (bucket_<%=cid%> == null){\r\n+\tthrow new IllegalArgumentException(\"Can't find bucket with name: '\" + <%=bucketName%> + \"'.\");\r\n+} else {\r\n+\ttry {\r\n+\t\tbucket_<%=cid%>.delete();\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.debug(\"<%=cid%> - Bucket '\" + <%=bucketName%> + \"' was deleted.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t} catch (com.google.cloud.storage.StorageException e_<%=cid%>){\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzI5MQ=="}, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk4NDE0OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMToyN1rOGobIPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNToxMDo1N1rOGo_R7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MDcwMg==", "bodyText": "\"//start for\" uncomplete comment ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445040702", "createdAt": "2020-06-24T17:01:27Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzMzAwNw==", "bodyText": "remove comment", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445633007", "createdAt": "2020-06-25T15:10:57Z", "author": {"login": "Voievidko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MDcwMg=="}, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk5ODYxOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNTozMlrOGobRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNToxNzoyOVrOGo_kOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzExMw==", "bodyText": "What if it returns false ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445043113", "createdAt": "2020-06-24T17:05:32Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r\n+\t\t\tString currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(<%=objects_prefix%>);\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(<%=delimiter%>);\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = bucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}else if(useKeysList && keys.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<keys.size();i++){\r\n+\t\t\tMap<String, String> objKey=keys.get(i);\r\n+\t\t\tString bucket_name =objKey.get(\"BUCKET_NAME\");\r\n+\t\t\tString key =objKey.get(\"KEY\");\r\n+\t\t\tString newName =objKey.get(\"NEW_NAME\");\r\n+\t\t\tif(key!=null && key.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_KEY\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\tif(newName!=null && !\"\".equals(newName.trim()) && !\"\\\"\\\"\".equals(newName.trim())){\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=newName%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}else{\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t} else if(getList && buckets.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<buckets.size();i++){\r\n+\t\t\tMap<String, String> map=buckets.get(i);\r\n+\t\t\tString bucket_name =map.get(\"BUCKET_NAME\");\r\n+\t\t\tString object_prefix =map.get(\"OBJECT_PREFIX\");\r\n+\t\t\tString object_delimiter =map.get(\"OBJECT_DELIMITER\");\r\n+\t\t\t%>\r\n+\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t<%\r\n+\t\t\tif(object_prefix!=null && object_prefix.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_PREFIX\",<%=object_prefix%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\tif(object_delimiter!=null && object_delimiter.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_DELIMITER\",<%=object_delimiter%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\tcom.google.cloud.storage.Bucket currentBucket_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>);\r\n+\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(map_<%=cid %>.get(\"OBJECT_PREFIX\"));\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(map_<%=cid %>.get(\"OBJECT_DELIMITER\"));\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = currentBucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}\r\n+\tif((!getList && !useKeysList) || (useKeysList && keys.size()>0) || (getList && buckets.size()>0)){\r\n+\t\tif(!useKeysList){\r\n+\t\t%>\r\n+\t\t\tfor (com.google.cloud.storage.Blob blob_<%=cid%> : allBlobs_<%=cid%>.iterateAll()) {\r\n+\t\t\t\tString objkey_<%=cid%> = blob_<%=cid%>.getName();\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, objkey_<%=cid%>);\r\n+\r\n+\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, objkey_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}else{\r\n+\t\t%>\r\n+\t\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, map_<%=cid %>.get(\"OBJECT_NEWNAME\"));\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = null;\r\n+\t\t\t\tobj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, map_<%=cid %>.get(\"OBJECT_KEY\"));\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tif(obj_<%=cid%>!=null){\r\n+\t\t\tnb_line_<%=cid%>++;\r\n+\t\t\tboolean isDirectory_<%=cid%>=false;\r\n+\t\t\tString fileName_<%=cid%> =file_<%=cid%> .getAbsolutePath();\r\n+\t\t\tfileName_<%=cid%> =fileName_<%=cid%> .replace(\"\\\\\", \"/\");\r\n+\t\t\tString createDir_<%=cid%>=\"\";\r\n+\t\t\tif(obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tcreateDir_<%=cid%> = fileName_<%=cid%>;\r\n+\t\t\t}else{\r\n+\t\t\t\tcreateDir_<%=cid%>=\tfileName_<%=cid%>.substring(0,fileName_<%=cid%>.indexOf(\"/\"));\r\n+\t\t\t}\r\n+\t\t\tif (!\"\".equals(createDir_<%=cid%>)) {\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(createDir_<%=cid%>);\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tif(!obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(file_<%=cid%>.getParent());\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 207}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzNzY5MA==", "bodyText": "Added error", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445637690", "createdAt": "2020-06-25T15:17:29Z", "author": {"login": "Voievidko"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r\n+\t\t\tString currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(<%=objects_prefix%>);\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(<%=delimiter%>);\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = bucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}else if(useKeysList && keys.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<keys.size();i++){\r\n+\t\t\tMap<String, String> objKey=keys.get(i);\r\n+\t\t\tString bucket_name =objKey.get(\"BUCKET_NAME\");\r\n+\t\t\tString key =objKey.get(\"KEY\");\r\n+\t\t\tString newName =objKey.get(\"NEW_NAME\");\r\n+\t\t\tif(key!=null && key.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_KEY\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\tif(newName!=null && !\"\".equals(newName.trim()) && !\"\\\"\\\"\".equals(newName.trim())){\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=newName%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}else{\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t} else if(getList && buckets.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<buckets.size();i++){\r\n+\t\t\tMap<String, String> map=buckets.get(i);\r\n+\t\t\tString bucket_name =map.get(\"BUCKET_NAME\");\r\n+\t\t\tString object_prefix =map.get(\"OBJECT_PREFIX\");\r\n+\t\t\tString object_delimiter =map.get(\"OBJECT_DELIMITER\");\r\n+\t\t\t%>\r\n+\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t<%\r\n+\t\t\tif(object_prefix!=null && object_prefix.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_PREFIX\",<%=object_prefix%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\tif(object_delimiter!=null && object_delimiter.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_DELIMITER\",<%=object_delimiter%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\tcom.google.cloud.storage.Bucket currentBucket_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>);\r\n+\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(map_<%=cid %>.get(\"OBJECT_PREFIX\"));\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(map_<%=cid %>.get(\"OBJECT_DELIMITER\"));\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = currentBucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}\r\n+\tif((!getList && !useKeysList) || (useKeysList && keys.size()>0) || (getList && buckets.size()>0)){\r\n+\t\tif(!useKeysList){\r\n+\t\t%>\r\n+\t\t\tfor (com.google.cloud.storage.Blob blob_<%=cid%> : allBlobs_<%=cid%>.iterateAll()) {\r\n+\t\t\t\tString objkey_<%=cid%> = blob_<%=cid%>.getName();\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, objkey_<%=cid%>);\r\n+\r\n+\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, objkey_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}else{\r\n+\t\t%>\r\n+\t\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, map_<%=cid %>.get(\"OBJECT_NEWNAME\"));\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = null;\r\n+\t\t\t\tobj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, map_<%=cid %>.get(\"OBJECT_KEY\"));\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tif(obj_<%=cid%>!=null){\r\n+\t\t\tnb_line_<%=cid%>++;\r\n+\t\t\tboolean isDirectory_<%=cid%>=false;\r\n+\t\t\tString fileName_<%=cid%> =file_<%=cid%> .getAbsolutePath();\r\n+\t\t\tfileName_<%=cid%> =fileName_<%=cid%> .replace(\"\\\\\", \"/\");\r\n+\t\t\tString createDir_<%=cid%>=\"\";\r\n+\t\t\tif(obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tcreateDir_<%=cid%> = fileName_<%=cid%>;\r\n+\t\t\t}else{\r\n+\t\t\t\tcreateDir_<%=cid%>=\tfileName_<%=cid%>.substring(0,fileName_<%=cid%>.indexOf(\"/\"));\r\n+\t\t\t}\r\n+\t\t\tif (!\"\".equals(createDir_<%=cid%>)) {\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(createDir_<%=cid%>);\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tif(!obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(file_<%=cid%>.getParent());\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzExMw=="}, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 207}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4723, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}