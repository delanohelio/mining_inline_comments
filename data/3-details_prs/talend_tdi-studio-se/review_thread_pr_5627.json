{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MjgyNTcz", "number": 5627, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowMjoxMFrOFE7Qfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowMjoxMFrOFE7Qfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzA5NTAzOnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowMjoxMFrOIFLKwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTowMzozMVrOIFLNzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Njc3MA==", "bodyText": "why need execute migrateProjectSettings in the loop ?\nIt will try to check the project migration many times . It should be a one time check migration.", "url": "https://github.com/Talend/tdi-studio-se/pull/5627#discussion_r542296770", "createdAt": "2020-12-14T11:02:10Z", "author": {"login": "wchen-talend"}, "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java", "diffHunk": "@@ -69,6 +80,73 @@\n         return toReturn;\r\n     }\r\n \r\n+    @Override\r\n+    public ExecutionResult execute(Project project) {\r\n+        setProject(project);\r\n+        IRepositoryService service = (IRepositoryService) GlobalServiceRegister.getDefault().getService(IRepositoryService.class);\r\n+        IProxyRepositoryFactory factory = service.getProxyRepositoryFactory();\r\n+        ExecutionResult executeFinal = null;\r\n+        List<IRepositoryViewObject> list = new ArrayList<IRepositoryViewObject>();\r\n+\r\n+        try {\r\n+            for (ERepositoryObjectType curTyp : getAllTypes()) {\r\n+                if (curTyp != null && curTyp.isResourceItem()) {\r\n+                    /* specific project so that on svn model it will migrate all ref projects,bug 17295 */\r\n+                    list.addAll(factory.getAll(project, curTyp, true, true));\r\n+                }\r\n+            }\r\n+\r\n+            if (list.isEmpty()) {\r\n+                return ExecutionResult.NOTHING_TO_DO;\r\n+            }\r\n+\r\n+            for (IRepositoryViewObject object : list) {\r\n+                ExecutionResult execute = null;\r\n+                // in case the resource has been modified (see MergeTosMetadataMigrationTask for example)\r\n+                if ((object.getProperty().eResource() == null || object.getProperty().getItem().eResource() == null)\r\n+                        && (object instanceof RepositoryObject)) {\r\n+                    Property updatedProperty = factory.reload(object.getProperty());\r\n+                    ((RepositoryObject) object).setProperty(updatedProperty);\r\n+                }\r\n+\r\n+                execute = this.migrateProjectSettings(project);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee056df5aa7cfa01e6b9d28f5c67b071ce61da5a"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5NzU0OA==", "bodyText": "I think UpdateModuleListInComponentsMigrationTask.java  should keep the main logic the same as before . but only add the check for context mode in module list .", "url": "https://github.com/Talend/tdi-studio-se/pull/5627#discussion_r542297548", "createdAt": "2020-12-14T11:03:31Z", "author": {"login": "wchen-talend"}, "path": "main/plugins/org.talend.designer.core/src/main/java/org/talend/designer/core/utils/UpdateModuleListInComponentsMigrationTask.java", "diffHunk": "@@ -69,6 +80,73 @@\n         return toReturn;\r\n     }\r\n \r\n+    @Override\r\n+    public ExecutionResult execute(Project project) {\r\n+        setProject(project);\r\n+        IRepositoryService service = (IRepositoryService) GlobalServiceRegister.getDefault().getService(IRepositoryService.class);\r\n+        IProxyRepositoryFactory factory = service.getProxyRepositoryFactory();\r\n+        ExecutionResult executeFinal = null;\r\n+        List<IRepositoryViewObject> list = new ArrayList<IRepositoryViewObject>();\r\n+\r\n+        try {\r\n+            for (ERepositoryObjectType curTyp : getAllTypes()) {\r\n+                if (curTyp != null && curTyp.isResourceItem()) {\r\n+                    /* specific project so that on svn model it will migrate all ref projects,bug 17295 */\r\n+                    list.addAll(factory.getAll(project, curTyp, true, true));\r\n+                }\r\n+            }\r\n+\r\n+            if (list.isEmpty()) {\r\n+                return ExecutionResult.NOTHING_TO_DO;\r\n+            }\r\n+\r\n+            for (IRepositoryViewObject object : list) {\r\n+                ExecutionResult execute = null;\r\n+                // in case the resource has been modified (see MergeTosMetadataMigrationTask for example)\r\n+                if ((object.getProperty().eResource() == null || object.getProperty().getItem().eResource() == null)\r\n+                        && (object instanceof RepositoryObject)) {\r\n+                    Property updatedProperty = factory.reload(object.getProperty());\r\n+                    ((RepositoryObject) object).setProperty(updatedProperty);\r\n+                }\r\n+\r\n+                execute = this.migrateProjectSettings(project);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Njc3MA=="}, "originalCommit": {"oid": "ee056df5aa7cfa01e6b9d28f5c67b071ce61da5a"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4612, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}