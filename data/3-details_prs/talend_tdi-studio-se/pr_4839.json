{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDg4NzUy", "number": 4839, "title": "feat(TDI-38246): add new auth type to Google Storage family", "bodyText": "What is the current behavior? (You can also link to an open issue here)\nhttps://jira.talendforge.org/browse/TDI-38246\nWhat is the new behavior?\nNew auth type was added to all components.\nFor this all components were rewrite to use new official google storage lib.\nPlease check if the PR fulfills these requirements\n\n The commit message follows Talend standard\n Tests for the changes have been added (for bug fixes / features)\n Docs have been added / updated (for bug fixes / features) ?\n The code coverage on new code >75%\n The new code does not introduce new technical issues (sonar / eslint)\n\nWhat kind of change does this PR introduce?\n\n Bugfix\n Feature\n Code style update (formatting, local variables)\n Refactoring (no functional changes, no api changes)\n Build / CI related changes\n Other... Please describe:\n\nDoes this PR introduce a breaking change?\n\n Yes\n No\n\nIf this PR contains a breaking change, please describe the impact and migration path for existing applications: ...\nOther information:", "createdAt": "2020-06-18T13:53:02Z", "url": "https://github.com/Talend/tdi-studio-se/pull/4839", "merged": true, "mergeCommit": {"oid": "18a18ce33660dfc013ac81c50b719413036040b9"}, "closed": true, "closedAt": "2020-07-10T15:32:10Z", "author": {"login": "Voievidko"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn9yeOAH2gAyNDM2NDg4NzUyOmNkNDA0ZWFmNDBhY2VhYjA1MmM0MDEzZjc5YzhhNTEyMjYyNjIwMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy2XojgFqTQ0NDUzNDQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd404eaf40aceab052c4013f79c8a5122626200c", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/cd404eaf40aceab052c4013f79c8a5122626200c", "committedDate": "2020-06-04T13:08:28Z", "message": "feat(TDI-38246): add new auth type to tGSConnection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e000c4240e6e34db7d83b1e9600269ba32dc30b", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/6e000c4240e6e34db7d83b1e9600269ba32dc30b", "committedDate": "2020-06-05T06:55:25Z", "message": "feat(TDI-38246): add auth to UI | add dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50d9b6235c563ad691079920d182c33040f09ea6", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/50d9b6235c563ad691079920d182c33040f09ea6", "committedDate": "2020-06-05T14:46:55Z", "message": "feat(TDI-38246): add new auth type to tGSBucketCreate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3de3d1bb032e454f019c725ed7f5307bafefde0", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/c3de3d1bb032e454f019c725ed7f5307bafefde0", "committedDate": "2020-06-09T15:57:44Z", "message": "feat(TDI-38246): add new auth type to tGSBucketDelete | small fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7da08dc052c1fcb0463abf82f1518fb9e1aee5c1", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/7da08dc052c1fcb0463abf82f1518fb9e1aee5c1", "committedDate": "2020-06-10T07:04:31Z", "message": "feat(TDI-38246): add new auth type to tGSBucketExist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a993264f6553d2f1b9cfa6df7d2a1ad2d51a0fa8", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/a993264f6553d2f1b9cfa6df7d2a1ad2d51a0fa8", "committedDate": "2020-06-10T10:07:44Z", "message": "feat(TDI-38246): add new auth type to tGSBucketList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "074ecadfae1e2e4c40de7552689615c3cae88f9f", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/074ecadfae1e2e4c40de7552689615c3cae88f9f", "committedDate": "2020-06-10T10:10:47Z", "message": "feat(TDI-38246): remove projectId from tGSBucketList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff7cedf7b84693cec7393ec4b08943cd7820fbd", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/aff7cedf7b84693cec7393ec4b08943cd7820fbd", "committedDate": "2020-06-10T10:25:55Z", "message": "feat(TDI-38246): add new auth type to tGSClose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14351fdf09e8f062239e3bcfd498f1fa6a3e13a4", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/14351fdf09e8f062239e3bcfd498f1fa6a3e13a4", "committedDate": "2020-06-16T14:04:16Z", "message": "feat(TDI-38246): add filemap generation for blob"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68e8014ae30757d275c4fb25416a8b749b7137d3", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/68e8014ae30757d275c4fb25416a8b749b7137d3", "committedDate": "2020-06-16T14:05:08Z", "message": "feat(TDI-38246): add new auth type to tGSPut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb5177db7ba9bfe216d309d189ad7bb74de2c2c3", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/bb5177db7ba9bfe216d309d189ad7bb74de2c2c3", "committedDate": "2020-06-16T17:27:48Z", "message": "feat(TDI-38246): add new auth type to tGSDelete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee85cc9d4553e3b095521ded641a89132f03b782", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/ee85cc9d4553e3b095521ded641a89132f03b782", "committedDate": "2020-06-17T13:19:42Z", "message": "feat(TDI-38246): add new auth type to tGSList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "403c879721ef3c56a58e103fbd1320cffdcbd52e", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/403c879721ef3c56a58e103fbd1320cffdcbd52e", "committedDate": "2020-06-17T15:40:12Z", "message": "feat(TDI-38246): add new auth type to tGSGet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43294d09f2e18e933c69337cd86f4f2cd823c43c", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/43294d09f2e18e933c69337cd86f4f2cd823c43c", "committedDate": "2020-06-18T13:00:17Z", "message": "feat(TDI-38246): add new auth type to tGSCopy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd664a5ac71d915678ce107a501ff9fcfc7e0375", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/cd664a5ac71d915678ce107a501ff9fcfc7e0375", "committedDate": "2020-06-18T13:46:16Z", "message": "feat(TDI-38246): remove projectID for service account auth type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd30dd9916202afab536cf0fe9ebe1d61264ab97", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/bd30dd9916202afab536cf0fe9ebe1d61264ab97", "committedDate": "2020-06-18T14:09:49Z", "message": "feat(TDI-38246): rename component properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3ac226687a51cfdd81ce8a839e6221d6d97a255", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/a3ac226687a51cfdd81ce8a839e6221d6d97a255", "committedDate": "2020-06-18T14:47:41Z", "message": "feat(TDI-38246): extend locations for bucket creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "792d488771ad16d17213299cef79dd9f5ab64b32", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/792d488771ad16d17213299cef79dd9f5ab64b32", "committedDate": "2020-06-19T08:59:41Z", "message": "feat(TDI-38246): remove dual locations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6939b7e6da675bc0b3aa32945e202f952b20049f", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/6939b7e6da675bc0b3aa32945e202f952b20049f", "committedDate": "2020-06-22T13:51:13Z", "message": "Merge branch 'maintenance/7.3' of github.com:Talend/tdi-studio-se into rvoievidko/TDI-38246_GCS_service_account_auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "681e97ac2981b0436270ae28139179b5480f0d04", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/681e97ac2981b0436270ae28139179b5480f0d04", "committedDate": "2020-06-22T14:19:31Z", "message": "feat(TDI-38246): change default auth type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446481ab2e13ca50758b53c3c9d890934cfb69be", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/446481ab2e13ca50758b53c3c9d890934cfb69be", "committedDate": "2020-06-22T15:35:08Z", "message": "feat(TDI-38246): add migration task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fe1c77d184c5904ab62220cedd6b5ae3b008398", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/8fe1c77d184c5904ab62220cedd6b5ae3b008398", "committedDate": "2020-06-22T15:36:10Z", "message": "feat(TDI-38246): remove unused var"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18a0cf25aece46bc501f150a59852e203b4b82a6", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/18a0cf25aece46bc501f150a59852e203b4b82a6", "committedDate": "2020-06-23T03:48:31Z", "message": "Merge branch 'maintenance/7.3' of github.com:Talend/tdi-studio-se into rvoievidko/TDI-38246_GCS_service_account_auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/49d01faad61d29385036cdbbf5eb31d630f3b28d", "committedDate": "2020-06-23T13:51:04Z", "message": "feat(TDI-38246): improve migration task"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODI5MTMz", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#pullrequestreview-436829133", "createdAt": "2020-06-24T16:49:00Z", "commit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo0OTowMFrOGoarNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNTozMlrOGobRqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMzI2OQ==", "bodyText": "Can directory be empty ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445033269", "createdAt": "2020-06-24T16:49:00Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.libs/libs_src/google-storage-utils/src/main/java/org/talend/gs/util/GSObjectUtil.java", "diffHunk": "@@ -44,6 +46,50 @@\n         return objects;\n     }\n \n+    public Map<String, File> generateFileMap(File rootFile, String directory, Map<String, String> filter){\n+        Map<String, File> allFiles = generateFileMap(rootFile, directory);\n+        Map<String, File> resultMap = new HashMap<>();\n+        for (Map.Entry<String, String> entry : filter.entrySet()) {\n+            //key is path to file on local machine\n+            //value is new path in GS\n+            File currentFile = new File(entry.getKey());\n+            if (allFiles.containsValue(currentFile)){\n+                resultMap.put(entry.getValue(), currentFile);\n+            }\n+        }\n+        return resultMap;\n+    }\n+\n+    public Map<String, File> generateFileMap(File rootFile, String directory){\n+        if (rootFile == null){\n+            throw new IllegalArgumentException(\"File can't be null\");\n+        }\n+        if (directory == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNTU4MA==", "bodyText": "Maybe set e_<%=cid%> as second argument of error() log method to have the stacktrace.", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445035580", "createdAt": "2020-06-24T16:52:55Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketCreate/tGSBucketCreate_main.javajet", "diffHunk": "@@ -112,5 +130,84 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n-\t\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNzI5MQ==", "bodyText": "Maybe add e_<%=cid%> to get the stacktrace ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445037291", "createdAt": "2020-06-24T16:55:50Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSBucketDelete/tGSBucketDelete_main.javajet", "diffHunk": "@@ -99,4 +116,78 @@\n \t\t}\r\n \t\t%>\r\n \t}\r\n+<%\r\n+} else {\r\n+%>\r\n+\r\n+\r\n+\r\n+\r\n+com.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+<%\r\n+if((\"true\").equals(useExistingConn)) {\r\n+%>\r\n+\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+<%\r\n+} else {\r\n+\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+%>\r\n+\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\ttry {\r\n+\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t} catch (IOException e_<%=cid%>) {\r\n+\t\t<%\r\n+\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t%>\r\n+\t\t\tthrow(e_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t}\r\n+\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+<%\r\n+}\r\n+%>\r\n+com.google.cloud.storage.Bucket bucket_<%=cid%> = storage_<%=cid%>.get(<%=bucketName%>);\r\n+if (bucket_<%=cid%> == null){\r\n+\tthrow new IllegalArgumentException(\"Can't find bucket with name: '\" + <%=bucketName%> + \"'.\");\r\n+} else {\r\n+\ttry {\r\n+\t\tbucket_<%=cid%>.delete();\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.debug(\"<%=cid%> - Bucket '\" + <%=bucketName%> + \"' was deleted.\");\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t} catch (com.google.cloud.storage.StorageException e_<%=cid%>){\r\n+\t\t<%\r\n+\t\tif(isLog4jEnabled){\r\n+\t\t%>\r\n+\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MDcwMg==", "bodyText": "\"//start for\" uncomplete comment ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445040702", "createdAt": "2020-06-24T17:01:27Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzExMw==", "bodyText": "What if it returns false ?", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#discussion_r445043113", "createdAt": "2020-06-24T17:05:32Z", "author": {"login": "ypiel-talend"}, "path": "main/plugins/org.talend.designer.components.localprovider/components/tGSGet/tGSGet_begin.javajet", "diffHunk": "@@ -276,3 +297,171 @@ imports=\"\n <%\r\n \t}\r\n %>\r\n+<%\r\n+} else {\r\n+%>\r\n+\tcom.google.cloud.storage.Storage storage_<%=cid%> = null;\r\n+\t<%\r\n+\tif((\"true\").equals(useExistingConn)) {\r\n+\t%>\r\n+\t\tstorage_<%=cid%> = (com.google.cloud.storage.Storage)globalMap.get(\"service_<%=connection%>\");\r\n+\t<%\r\n+\t} else {\r\n+\t\tString pathToServerAccoutKeyFile = ElementParameterParser.getValue(node, \"__SERVICE_ACCOUNT_KEY__\");\r\n+\t%>\r\n+\t\tcom.google.auth.Credentials credential_<%=cid%> = null;\r\n+\t\ttry {\r\n+\t\t\tcredential_<%=cid%> = com.google.auth.oauth2.GoogleCredentials\r\n+\t\t\t\t\t.fromStream(new java.io.FileInputStream(<%=pathToServerAccoutKeyFile%>));\r\n+\t\t} catch (IOException e_<%=cid%>) {\r\n+\t\t\t<%\r\n+\t\t\tif ((\"true\").equals(dieOnError)) {\r\n+\t\t\t%>\r\n+\t\t\t\tthrow(e_<%=cid%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\t<%\r\n+\t\t\tif(isLog4jEnabled){\r\n+\t\t\t%>\r\n+\t\t\t\tlog.error(\"<%=cid%> - Exception in component <%=cid%>:\" + e_<%=cid%>.getMessage());\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t}\r\n+\t\tcom.google.cloud.storage.StorageOptions.Builder builder = com.google.cloud.storage.StorageOptions.newBuilder();\r\n+\t\tstorage_<%=cid%> = builder.setCredentials(credential_<%=cid%>).build().getService();\r\n+\t<%\r\n+\t}\r\n+\tif(!getList && !useKeysList){\r\n+\t\t%>\r\n+\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Bucket> buckets_<%=cid%> = storage_<%=cid%>.list();\r\n+\t\tfor (com.google.cloud.storage.Bucket bucket_<%=cid%> : buckets_<%=cid%>.iterateAll()) { //start for\r\n+\t\t\tString currentBucketName_<%=cid%> = bucket_<%=cid%>.getName();\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(<%=objects_prefix%>);\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(<%=delimiter%>);\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = bucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}else if(useKeysList && keys.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<keys.size();i++){\r\n+\t\t\tMap<String, String> objKey=keys.get(i);\r\n+\t\t\tString bucket_name =objKey.get(\"BUCKET_NAME\");\r\n+\t\t\tString key =objKey.get(\"KEY\");\r\n+\t\t\tString newName =objKey.get(\"NEW_NAME\");\r\n+\t\t\tif(key!=null && key.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_KEY\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\tif(newName!=null && !\"\".equals(newName.trim()) && !\"\\\"\\\"\".equals(newName.trim())){\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=newName%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}else{\r\n+\t\t\t\t%>\r\n+\t\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_NEWNAME\",<%=key%>);\r\n+\t\t\t\t<%\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t} else if(getList && buckets.size()>0){\r\n+\t%>\r\n+\t\tjava.util.List<java.util.Map<String,String>> list_<%=cid%> = new java.util.ArrayList<java.util.Map<String,String>>();\r\n+\t\t<%\r\n+\t\tfor(int i=0;i<buckets.size();i++){\r\n+\t\t\tMap<String, String> map=buckets.get(i);\r\n+\t\t\tString bucket_name =map.get(\"BUCKET_NAME\");\r\n+\t\t\tString object_prefix =map.get(\"OBJECT_PREFIX\");\r\n+\t\t\tString object_delimiter =map.get(\"OBJECT_DELIMITER\");\r\n+\t\t\t%>\r\n+\t\t\tjava.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();\r\n+\t\t\tmap_<%=cid %>_<%=i %>.put(\"BUCKET_NAME\",<%=bucket_name%>);\r\n+\t\t\t<%\r\n+\t\t\tif(object_prefix!=null && object_prefix.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_PREFIX\",<%=object_prefix%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\tif(object_delimiter!=null && object_delimiter.trim().length()>0){\r\n+\t\t\t%>\r\n+\t\t\t\tmap_<%=cid %>_<%=i %>.put(\"OBJECT_DELIMITER\",<%=object_delimiter%>);\r\n+\t\t\t<%\r\n+\t\t\t}\r\n+\t\t\t%>\r\n+\t\t\tlist_<%=cid%>.add(map_<%=cid %>_<%=i %>);\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\tcom.google.cloud.storage.Bucket currentBucket_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>);\r\n+\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(map_<%=cid %>.get(\"OBJECT_PREFIX\"));\r\n+\t\t\tcom.google.cloud.storage.Storage.BlobListOption blobListOptionDelimiter_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.delimiter(map_<%=cid %>.get(\"OBJECT_DELIMITER\"));\r\n+\r\n+\t\t\tcom.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = currentBucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>, blobListOptionDelimiter_<%=cid%>);\r\n+\t<%\r\n+\t}\r\n+\tif((!getList && !useKeysList) || (useKeysList && keys.size()>0) || (getList && buckets.size()>0)){\r\n+\t\tif(!useKeysList){\r\n+\t\t%>\r\n+\t\t\tfor (com.google.cloud.storage.Blob blob_<%=cid%> : allBlobs_<%=cid%>.iterateAll()) {\r\n+\t\t\t\tString objkey_<%=cid%> = blob_<%=cid%>.getName();\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, objkey_<%=cid%>);\r\n+\r\n+\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, objkey_<%=cid%>);\r\n+\t\t<%\r\n+\t\t}else{\r\n+\t\t%>\r\n+\t\t\tfor (java.util.Map<String, String> map_<%=cid %>: list_<%=cid%>) {\r\n+\t\t\t\tString currentBucketName_<%=cid%>=map_<%=cid %>.get(\"BUCKET_NAME\");\r\n+\t\t\t\tjava.io.File file_<%=cid%> = new java.io.File(<%=outputsDir%>, map_<%=cid %>.get(\"OBJECT_NEWNAME\"));\r\n+\t\t\t\tcom.google.cloud.storage.Blob obj_<%=cid%> = null;\r\n+\t\t\t\tobj_<%=cid%> = storage_<%=cid%>.get(currentBucketName_<%=cid%>, map_<%=cid %>.get(\"OBJECT_KEY\"));\r\n+\t\t<%\r\n+\t\t}\r\n+\t\t%>\r\n+\t\tif(obj_<%=cid%>!=null){\r\n+\t\t\tnb_line_<%=cid%>++;\r\n+\t\t\tboolean isDirectory_<%=cid%>=false;\r\n+\t\t\tString fileName_<%=cid%> =file_<%=cid%> .getAbsolutePath();\r\n+\t\t\tfileName_<%=cid%> =fileName_<%=cid%> .replace(\"\\\\\", \"/\");\r\n+\t\t\tString createDir_<%=cid%>=\"\";\r\n+\t\t\tif(obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tcreateDir_<%=cid%> = fileName_<%=cid%>;\r\n+\t\t\t}else{\r\n+\t\t\t\tcreateDir_<%=cid%>=\tfileName_<%=cid%>.substring(0,fileName_<%=cid%>.indexOf(\"/\"));\r\n+\t\t\t}\r\n+\t\t\tif (!\"\".equals(createDir_<%=cid%>)) {\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(createDir_<%=cid%>);\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t\tif(!obj_<%=cid%>.isDirectory()){\r\n+\t\t\t\tjava.io.File parentDir_<%=cid%>=new java.io.File(file_<%=cid%>.getParent());\r\n+\t\t\t\tif(!parentDir_<%=cid%>.exists()){\r\n+\t\t\t\t\tparentDir_<%=cid%>.mkdirs();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49d01faad61d29385036cdbbf5eb31d630f3b28d"}, "originalPosition": 207}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f1d51c75f75d13680386e73244f10e67afc4d4", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/01f1d51c75f75d13680386e73244f10e67afc4d4", "committedDate": "2020-06-25T15:16:57Z", "message": "feat(TDI-38246): clean code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjIxNjI2", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#pullrequestreview-437621626", "createdAt": "2020-06-25T15:41:20Z", "commit": {"oid": "01f1d51c75f75d13680386e73244f10e67afc4d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fefca58213b1a70698541aedbd0d8884502018d", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/6fefca58213b1a70698541aedbd0d8884502018d", "committedDate": "2020-07-03T12:04:46Z", "message": "feat(TDI-38246): correct showing some params when use exist connection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab286d4ab02e69e872b7e63271901e5bfe633ed", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/cab286d4ab02e69e872b7e63271901e5bfe633ed", "committedDate": "2020-07-07T12:06:16Z", "message": "feat(TDI-38246): mark all HMAC keys as deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e3fa037c87d4328b9416ecdcf3337bb6edcefa", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/13e3fa037c87d4328b9416ecdcf3337bb6edcefa", "committedDate": "2020-07-07T13:07:23Z", "message": "feat(TDI-38246): avoid blob directories"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db9fb445fafc84bdee5d307714895cf01065fb5", "author": {"user": {"login": "Voievidko", "name": "Roman"}}, "url": "https://github.com/Talend/tdi-studio-se/commit/8db9fb445fafc84bdee5d307714895cf01065fb5", "committedDate": "2020-07-07T13:10:05Z", "message": "Merge branch 'maintenance/7.3' into rvoievidko/TDI-38246_GCS_service_account_auth"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTM0NDA1", "url": "https://github.com/Talend/tdi-studio-se/pull/4839#pullrequestreview-444534405", "createdAt": "2020-07-08T08:42:59Z", "commit": {"oid": "8db9fb445fafc84bdee5d307714895cf01065fb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4691, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}