{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTQ3Njkz", "number": 1038, "title": "Update deposited count after adding children", "bodyText": "https://jira.lib.unc.edu/browse/BXC-2728", "createdAt": "2020-07-06T18:58:21Z", "url": "https://github.com/UNC-Libraries/box-c/pull/1038", "merged": true, "mergeCommit": {"oid": "7c868ded1ec0c69fa72833ffe71c83b5db897ab7"}, "closed": true, "closedAt": "2020-07-09T18:33:32Z", "author": {"login": "lfarrell"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyV8bFAH2gAyNDQ0OTQ3NjkzOjk1YTVkOGEzODcwYjljNzI5MjNhMDMwN2UyZGM0M2NlZTQ1YjI0MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczTL9qgFqTQ0NTg1ODk0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "95a5d8a3870b9c72923a0307e2dc43cee45b241d", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/95a5d8a3870b9c72923a0307e2dc43cee45b241d", "committedDate": "2020-07-06T18:56:18Z", "message": "Update deposited count after adding children, so as not to give a false count if a child ingest fails"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODgyNTQy", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#pullrequestreview-443882542", "createdAt": "2020-07-07T13:20:49Z", "commit": {"oid": "95a5d8a3870b9c72923a0307e2dc43cee45b241d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMDo0OVrOGt-M-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMDo0OVrOGt-M-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1ODIzNA==", "bodyText": "We probably need to do this for other object types too? Would it make sense to do this at the same time incrIngestedObjects happens below?", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r450858234", "createdAt": "2020-07-07T13:20:49Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -629,6 +626,9 @@ private void ingestWork(ContentContainerObject parent, Resource parentResc, Reso\n \n                 overrideModifiedTimestamp(obj, childResc);\n \n+                // Increment the count of objects deposited after adding children\n+                addClicks(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95a5d8a3870b9c72923a0307e2dc43cee45b241d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0839e30f42bcb0682482490485c9cb85b7e32f1a", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/0839e30f42bcb0682482490485c9cb85b7e32f1a", "committedDate": "2020-07-07T14:47:58Z", "message": "Move where update count for redis happens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTU5MDM0", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#pullrequestreview-444159034", "createdAt": "2020-07-07T18:46:49Z", "commit": {"oid": "0839e30f42bcb0682482490485c9cb85b7e32f1a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0Njo0OVrOGuLOsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTowOTo1OVrOGuL9tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MTY2Nw==", "bodyText": "hmm, I don't think these calls needed to be moved into the block, since I believe the try blocks would always either succeed or throw an error. I was actually thinking the opposite, moving addClicks out of the try block. Its probably fine either way as long as nothing happens inside of a transaction after the increments.", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r451071667", "createdAt": "2020-07-07T18:46:49Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -441,15 +441,14 @@ private void ingestFolder(ContentContainerObject parent, Resource parentResc, Re\n \n                 // Increment the count of objects deposited prior to adding children\n                 addClicks(1);\n+                getDepositStatusFactory().incrIngestedObjects(getDepositUUID(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0839e30f42bcb0682482490485c9cb85b7e32f1a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MTEyMw==", "bodyText": "Looking at the stuff that happens after \"ingestChildren\" calls in most of these methods, it seems like some of that stuff should not be happening during resume if all the children finished (adding events particularly). That doesn't need to be part of this ticket though.", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r451081123", "createdAt": "2020-07-07T19:05:03Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -441,15 +441,14 @@ private void ingestFolder(ContentContainerObject parent, Resource parentResc, Re\n \n                 // Increment the count of objects deposited prior to adding children\n                 addClicks(1);\n+                getDepositStatusFactory().incrIngestedObjects(getDepositUUID(), 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MTY2Nw=="}, "originalCommit": {"oid": "0839e30f42bcb0682482490485c9cb85b7e32f1a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4MzcwMQ==", "bodyText": "I think ingestFileObject could still be problematic since its happening inside of the transaction for a work. If it fails after a few files the count would be off. Handling this might be a bit tricky, you might have to keep a running count of the number of file objects added rather than committing to redis immediately, and then include that count in the addClicks and incrIngestedObjects when the transaction ends for the work object. It'd definitely be good to have a test to ensure the counts come out right in a failure case. Is there an existing test that might be used for this?", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r451083701", "createdAt": "2020-07-07T19:09:59Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -441,15 +441,14 @@ private void ingestFolder(ContentContainerObject parent, Resource parentResc, Re\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0839e30f42bcb0682482490485c9cb85b7e32f1a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40a45426e6bb923f45b3c36f51b5a002dda65583", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/40a45426e6bb923f45b3c36f51b5a002dda65583", "committedDate": "2020-07-08T12:22:33Z", "message": "Move counters out of try/catch blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f680ac60b8a4b4ec627fc36b8f3aeee331c012f", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/6f680ac60b8a4b4ec627fc36b8f3aeee331c012f", "committedDate": "2020-07-09T13:30:51Z", "message": "Add files added to a work as a batch count."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/f196a2646fdc87ef85b1ca6556990b1501abf63c", "committedDate": "2020-07-09T16:02:07Z", "message": "Update tests as file count no longer increments on each file ingested."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODEyMzg4", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#pullrequestreview-445812388", "createdAt": "2020-07-09T17:11:02Z", "commit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoxMTowMlrOGvaVbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoyNTo1NlrOGva2jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM2NzcyNQ==", "bodyText": "could you rename this to something like filesIngestInWork and/or add a comment explaining that it is tracking the file count within one work, not across the whole deposit? Just seems worth clarifying since its a class level variable", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452367725", "createdAt": "2020-07-09T17:11:02Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -153,6 +153,8 @@\n \n     private boolean overrideTimestamps;\n \n+    private int filesIngested = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3MDg4Nw==", "bodyText": "Wrap these two calls in an if (filesIngested > 0) block in case there were no files.", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452370887", "createdAt": "2020-07-09T17:16:40Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJob.java", "diffHunk": "@@ -629,6 +620,10 @@ private void ingestWork(ContentContainerObject parent, Resource parentResc, Reso\n \n                 overrideModifiedTimestamp(obj, childResc);\n \n+                // Add counts for files deposited for the work", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3MjYwMg==", "bodyText": "there should only be one primaryObject per work (that's enforced elsewhere). Also, you don't need the .asResource() part", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452372602", "createdAt": "2020-07-09T17:19:34Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJobIT.java", "diffHunk": "@@ -476,6 +476,50 @@ public void resumeCompletedWorkIngestTest() throws Exception {\n         ingestedObjectsCount(3);\n     }\n \n+    @Test\n+    public void ingestWorkObjectObjCountWithRetry() throws Exception {\n+        String label = \"testwork\";\n+        PID workPid = pidMinter.mintContentPid();\n+\n+        // Construct the deposit model with work object\n+        Model model = job.getWritableModel();\n+        Bag depBag = model.createBag(depositPid.getRepositoryPath());\n+\n+        // Constructing the work in the deposit model with a label\n+        Bag workBag = model.createBag(workPid.getRepositoryPath());\n+        workBag.addProperty(RDF.type, Cdr.Work);\n+        workBag.addProperty(CdrDeposit.label, label);\n+\n+        PID mainPid = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, FILE1_SHA1, FILE1_MD5);\n+        PID mainPid2 = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, null, FILE1_MD5_BAD);\n+\n+        depBag.add(workBag);\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,\n+                model.getResource(mainPid.getRepositoryPath()));\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3MzE4NA==", "bodyText": "space after =", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452373184", "createdAt": "2020-07-09T17:20:33Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJobIT.java", "diffHunk": "@@ -476,6 +476,50 @@ public void resumeCompletedWorkIngestTest() throws Exception {\n         ingestedObjectsCount(3);\n     }\n \n+    @Test\n+    public void ingestWorkObjectObjCountWithRetry() throws Exception {\n+        String label = \"testwork\";\n+        PID workPid = pidMinter.mintContentPid();\n+\n+        // Construct the deposit model with work object\n+        Model model = job.getWritableModel();\n+        Bag depBag = model.createBag(depositPid.getRepositoryPath());\n+\n+        // Constructing the work in the deposit model with a label\n+        Bag workBag = model.createBag(workPid.getRepositoryPath());\n+        workBag.addProperty(RDF.type, Cdr.Work);\n+        workBag.addProperty(CdrDeposit.label, label);\n+\n+        PID mainPid = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, FILE1_SHA1, FILE1_MD5);\n+        PID mainPid2 = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, null, FILE1_MD5_BAD);\n+\n+        depBag.add(workBag);\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,\n+                model.getResource(mainPid.getRepositoryPath()));\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,\n+                model.getResource(mainPid2.getRepositoryPath()));\n+\n+        job.closeModel();\n+\n+        try {\n+            job.run();\n+            fail(\"Test should not reach this line. Job should have thrown exception\");\n+        } catch (JobFailedException e) {\n+            Map<String, String> jobStatus = jobStatusFactory.get(jobUUID);\n+            assertNull(jobStatus.get(JobField.num.name()));\n+            Resource fileResc =job.getWritableModel().getResource(mainPid2.getRepositoryPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3NDI3OA==", "bodyText": "You also need to remove the bad md5sum property, otherwise the test might flap since there will be two md5sums and it might randomly pick the bad one.", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452374278", "createdAt": "2020-07-09T17:22:23Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJobIT.java", "diffHunk": "@@ -476,6 +476,50 @@ public void resumeCompletedWorkIngestTest() throws Exception {\n         ingestedObjectsCount(3);\n     }\n \n+    @Test\n+    public void ingestWorkObjectObjCountWithRetry() throws Exception {\n+        String label = \"testwork\";\n+        PID workPid = pidMinter.mintContentPid();\n+\n+        // Construct the deposit model with work object\n+        Model model = job.getWritableModel();\n+        Bag depBag = model.createBag(depositPid.getRepositoryPath());\n+\n+        // Constructing the work in the deposit model with a label\n+        Bag workBag = model.createBag(workPid.getRepositoryPath());\n+        workBag.addProperty(RDF.type, Cdr.Work);\n+        workBag.addProperty(CdrDeposit.label, label);\n+\n+        PID mainPid = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, FILE1_SHA1, FILE1_MD5);\n+        PID mainPid2 = addFileObject(workBag, FILE1_LOC, FILE1_MIMETYPE, null, FILE1_MD5_BAD);\n+\n+        depBag.add(workBag);\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,\n+                model.getResource(mainPid.getRepositoryPath()));\n+\n+        workBag.asResource().addProperty(Cdr.primaryObject,\n+                model.getResource(mainPid2.getRepositoryPath()));\n+\n+        job.closeModel();\n+\n+        try {\n+            job.run();\n+            fail(\"Test should not reach this line. Job should have thrown exception\");\n+        } catch (JobFailedException e) {\n+            Map<String, String> jobStatus = jobStatusFactory.get(jobUUID);\n+            assertNull(jobStatus.get(JobField.num.name()));\n+            Resource fileResc =job.getWritableModel().getResource(mainPid2.getRepositoryPath());\n+            fileResc.addProperty(CdrDeposit.md5sum, FILE1_MD5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3NTQyMQ==", "bodyText": "it should also be called one time with a value of 1", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452375421", "createdAt": "2020-07-09T17:24:31Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJobTest.java", "diffHunk": "@@ -307,7 +307,7 @@ public void ingestWorkObjectTest() throws Exception {\n                 eq(supMime), anyString(), anyString(), any(Model.class));\n         verify(work).setPrimaryObject(mainPid);\n \n-        verify(jobStatusFactory, times(3)).incrCompletion(eq(jobUUID), eq(1));\n+        verify(jobStatusFactory, times(1)).incrCompletion(eq(jobUUID), eq(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3NjIwNA==", "bodyText": "incrCompletion is still getting called, isn't it? Just not with the value 1", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#discussion_r452376204", "createdAt": "2020-07-09T17:25:56Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/IngestContentObjectsJobTest.java", "diffHunk": "@@ -434,7 +434,7 @@ public void resumeIngestWorkObjectTest() throws Exception {\n         verify(work).setPrimaryObject(mainPid);\n \n         verify(jobStatusFactory).setCompletion(eq(jobUUID), eq(2));\n-        verify(jobStatusFactory).incrCompletion(eq(jobUUID), eq(1));\n+        verify(jobStatusFactory, never()).incrCompletion(eq(jobUUID), eq(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f196a2646fdc87ef85b1ca6556990b1501abf63c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0e9d1c07a3894c54ccf1087b52a13ed26571f2e", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/a0e9d1c07a3894c54ccf1087b52a13ed26571f2e", "committedDate": "2020-07-09T18:06:49Z", "message": "Update tests and rename class variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODU4OTQz", "url": "https://github.com/UNC-Libraries/box-c/pull/1038#pullrequestreview-445858943", "createdAt": "2020-07-09T18:17:29Z", "commit": {"oid": "a0e9d1c07a3894c54ccf1087b52a13ed26571f2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2250, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}