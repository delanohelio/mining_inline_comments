{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNTQ2ODI0", "number": 1061, "title": "BXC-2744 - Improve recovery of binary transfer jobs", "bodyText": "https://jira.lib.unc.edu/browse/BXC-2744\n\nBinary transfer job handles three error cases when a transfer runs into an existing file at the destination\n\nThe file has already been transferred, but the storage uri was lost due to an error or the jvm shutting down. In this case, no transfer occurs, and the storage uri is recorded\nThe file was partially transferred due to interruption. In this case, the file will be overwritten\nThe pid of the file overlaps with an object in the repository, and therefore they have the same file uri. In this case, the deposit fails\n\n\nRemoved redis tracking of binary transfers as having the JVM terminate will result in losing storage uris recorded in jena, which would be skipped during resumption, ultimately causing IngestContentJob to fail", "createdAt": "2020-07-31T21:50:41Z", "url": "https://github.com/UNC-Libraries/box-c/pull/1061", "merged": true, "mergeCommit": {"oid": "cd943153165153c08ff482866119fc24ba63ec67"}, "closed": true, "closedAt": "2020-08-03T15:40:09Z", "author": {"login": "bbpennel"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6bUYHgH2gAyNDYwNTQ2ODI0OjczNjg0NzA1NTI3MGQ2NDAwZjc2OTczMDU2OTEyYTdmNjU2MDIwZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7ROFXgFqTQ1OTk4NjM3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "736847055270d6400f76973056912a7f656020fa", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/736847055270d6400f76973056912a7f656020fa", "committedDate": "2020-07-31T21:43:23Z", "message": "Improved error handling of binary transfers during deposit in cases where a binary already exists at the transfer destination. Removed redis tracking of binary transfers as having the JVM terminate will result in losing storage uris recorded in jena. Resuming now determines which files need to be transferred by trying and failing to transfer, then seeing if the file had already been transferred"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "441deee422c20465b67f96ae3c32857a39183f92", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/441deee422c20465b67f96ae3c32857a39183f92", "committedDate": "2020-07-31T22:47:27Z", "message": "Fix line length"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTg2Mzc3", "url": "https://github.com/UNC-Libraries/box-c/pull/1061#pullrequestreview-459986377", "createdAt": "2020-08-03T12:31:22Z", "commit": {"oid": "441deee422c20465b67f96ae3c32857a39183f92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjozMToyMlrOG63qfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMjozMToyMlrOG63qfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4MjU4OQ==", "bodyText": "Do the isObjectCompleted and markObjectCompleted methods in AbstractDepositJob need to be removed?", "url": "https://github.com/UNC-Libraries/box-c/pull/1061#discussion_r464382589", "createdAt": "2020-08-03T12:31:22Z", "author": {"login": "lfarrell"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "diffHunk": "@@ -187,13 +179,38 @@ private void transferDepositManifests(PID objPid, Resource resc, BinaryTransferS\n             }\n \n             PID manifestPid = getDepositManifestPid(objPid, manifestFile.getName());\n+            transferFile(manifestPid, manifestUri, transferSession, resc, CdrDeposit.storageUri);\n+        }\n+    }\n+\n+    private void transferFile(PID binPid, URI stagingUri, BinaryTransferSession transferSession,\n+            Resource resc, Property storageProperty) {\n \n-            if (!isObjectCompleted(manifestPid)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441deee422c20465b67f96ae3c32857a39183f92"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2263, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}