{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MzQ0OTIw", "number": 899, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NjozMVrODf_FTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NjozMVrODf_FTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODY1OTk3OnYy", "diffSide": "RIGHT", "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/ViewDepositModelCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NjozMVrOFqAcZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxODo1NjozMVrOFqAcZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5MTc4Mw==", "bodyText": "remove this", "url": "https://github.com/UNC-Libraries/box-c/pull/899#discussion_r379591783", "createdAt": "2020-02-14T18:56:31Z", "author": {"login": "bbpennel"}, "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/ViewDepositModelCommand.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dcr.migration;\n+\n+import static edu.unc.lib.dcr.migration.MigrationConstants.OUTPUT_LOGGER;\n+import static edu.unc.lib.dl.fcrepo4.RepositoryPathConstants.DEPOSIT_RECORD_BASE;\n+import static edu.unc.lib.dl.util.RDFModelUtil.streamModel;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+import static org.apache.jena.riot.RDFFormat.NTRIPLES;\n+import static org.apache.jena.riot.RDFFormat.TURTLE;\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import java.util.concurrent.Callable;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.apache.jena.riot.RDFFormat;\n+import org.slf4j.Logger;\n+\n+import edu.unc.lib.dcr.migration.deposit.DepositModelManager;\n+import edu.unc.lib.dl.fcrepo4.PIDs;\n+import edu.unc.lib.dl.fedora.PID;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+import picocli.CommandLine.Parameters;\n+import picocli.CommandLine.ParentCommand;\n+\n+/**\n+ * View deposit model command\n+ *\n+ * @author bbpennel\n+ */\n+@Command(name = \"view_deposit_model\", aliases = {\"vdm\"},\n+        description = \"Display the stored RDF for a deposit\")\n+public class ViewDepositModelCommand implements Callable<Integer> {\n+\n+    private static final Logger output = getLogger(OUTPUT_LOGGER);\n+\n+    @ParentCommand\n+    private MigrationCLI parentCommand;\n+\n+    @Parameters(index = \"0\",\n+            description = \"ID of the deposit to retrieve\")\n+    private String depositId;\n+\n+    @Option(names = {\"-t\", \"--turtle\"},\n+            description = \"Serialize the RDF as turtle instead of n-triples\")\n+    private boolean asTurtle;\n+\n+    @Override\n+    public Integer call() throws Exception {\n+        PID depositPid = PIDs.get(DEPOSIT_RECORD_BASE, depositId);\n+\n+        DepositModelManager depositModelManager = new DepositModelManager(depositPid, parentCommand.tdbDir);\n+\n+        depositModelManager.commit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5a5e809880be7e3f192ccbbf7bd2f7fc3f6f047"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 706, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}