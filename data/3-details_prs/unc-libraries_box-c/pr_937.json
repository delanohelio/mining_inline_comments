{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTQ3NTU4", "number": 937, "title": "Mark file server ingests private", "bodyText": "https://jira.lib.unc.edu/browse/BXC-2001", "createdAt": "2020-03-23T17:58:05Z", "url": "https://github.com/UNC-Libraries/box-c/pull/937", "merged": true, "mergeCommit": {"oid": "10524f429b26e6e574e93d98fbf7fa7e75278453"}, "closed": true, "closedAt": "2020-03-31T14:30:45Z", "author": {"login": "lfarrell"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPmOZkAH2gAyMzkyNTQ3NTU4OmZlZWMxNTk2ZGZjNDRkZjJhMDhhYzcwMDhhZWJjMDhkYWJhN2U3MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTD-zCgFqTM4NDc5MDc1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "feec1596dfc44df2a08ac7008aebc08daba7e724", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/feec1596dfc44df2a08ac7008aebc08daba7e724", "committedDate": "2020-03-20T20:07:04Z", "message": "Update form and submission package to add staffOnly option for ingests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a6037b263e6392f7209907d8c2cb96d40df38a6", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/9a6037b263e6392f7209907d8c2cb96d40df38a6", "committedDate": "2020-03-23T14:09:37Z", "message": "Fix issue with users clicking row before clicking an action checkbox"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6053fd95b554bdc570401881c1a61556f97689cd", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/6053fd95b554bdc570401881c1a61556f97689cd", "committedDate": "2020-03-23T17:06:44Z", "message": "Add staffOnly to depositJob"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a69ada4be6cd17f4968cd2a2f2ff3e245a1014a", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/3a69ada4be6cd17f4968cd2a2f2ff3e245a1014a", "committedDate": "2020-03-23T20:57:52Z", "message": "Move where access control is added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da5186284f3bb3ce0c2211fce676b62a525d996c", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/da5186284f3bb3ce0c2211fce676b62a525d996c", "committedDate": "2020-03-24T14:59:56Z", "message": "Add permissions via the model instead of using a service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aff0b940133986e0f10a17e3d7697718f213c6da", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/aff0b940133986e0f10a17e3d7697718f213c6da", "committedDate": "2020-03-24T16:54:56Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "6a261fa8b22ff400c6e94987468568ba012cc4e8", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/6a261fa8b22ff400c6e94987468568ba012cc4e8", "committedDate": "2020-03-24T20:30:12Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81ba86e6a939780731d081ad61945d48f1e4752f", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/81ba86e6a939780731d081ad61945d48f1e4752f", "committedDate": "2020-03-25T17:14:11Z", "message": "cleanup"}, "afterCommit": {"oid": "f51157a201beddc064820696b68528bc42b29a0d", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/f51157a201beddc064820696b68528bc42b29a0d", "committedDate": "2020-03-25T17:15:44Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f51157a201beddc064820696b68528bc42b29a0d", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/f51157a201beddc064820696b68528bc42b29a0d", "committedDate": "2020-03-25T17:15:44Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "c29119699cc71f564c3717efdd474aca10febe25", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/c29119699cc71f564c3717efdd474aca10febe25", "committedDate": "2020-03-25T17:22:20Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c29119699cc71f564c3717efdd474aca10febe25", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/c29119699cc71f564c3717efdd474aca10febe25", "committedDate": "2020-03-25T17:22:20Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "ce43526854563219f93e39893bb08cd70cc675c4", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/ce43526854563219f93e39893bb08cd70cc675c4", "committedDate": "2020-03-25T17:24:35Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce43526854563219f93e39893bb08cd70cc675c4", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/ce43526854563219f93e39893bb08cd70cc675c4", "committedDate": "2020-03-25T17:24:35Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "e1e1c797156996711e57816dc52059ac54281ecf", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/e1e1c797156996711e57816dc52059ac54281ecf", "committedDate": "2020-03-25T17:28:25Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1e1c797156996711e57816dc52059ac54281ecf", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/e1e1c797156996711e57816dc52059ac54281ecf", "committedDate": "2020-03-25T17:28:25Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "045dee7b26646c6ef4d4b8e39d784c0813a09d74", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/045dee7b26646c6ef4d4b8e39d784c0813a09d74", "committedDate": "2020-03-25T17:29:20Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "045dee7b26646c6ef4d4b8e39d784c0813a09d74", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/045dee7b26646c6ef4d4b8e39d784c0813a09d74", "committedDate": "2020-03-25T17:29:20Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "45d34809a8fef6db614081269dad4c3d99b04682", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/45d34809a8fef6db614081269dad4c3d99b04682", "committedDate": "2020-03-25T17:30:38Z", "message": "Check that permissions are set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd08db8a682fc43063d3057cdeb7e82aa0eec5b5", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/fd08db8a682fc43063d3057cdeb7e82aa0eec5b5", "committedDate": "2020-03-25T17:37:34Z", "message": "Check that permissions are set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45d34809a8fef6db614081269dad4c3d99b04682", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/45d34809a8fef6db614081269dad4c3d99b04682", "committedDate": "2020-03-25T17:30:38Z", "message": "Check that permissions are set"}, "afterCommit": {"oid": "e20a2253a42c6bd09889964c05cd53759f6e36cc", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/e20a2253a42c6bd09889964c05cd53759f6e36cc", "committedDate": "2020-03-26T13:02:34Z", "message": "Add tests for marking ingests staff only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/5122a7908ce444907cb0f857ed8f3d9c1de8d4ae", "committedDate": "2020-03-26T13:15:01Z", "message": "Add tests for marking ingests staff only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a5e0174ce1936dff9552862a3f781a243c0b697", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/5a5e0174ce1936dff9552862a3f781a243c0b697", "committedDate": "2020-03-26T13:14:14Z", "message": "Remove file that shouldn't had no actual changes"}, "afterCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/5122a7908ce444907cb0f857ed8f3d9c1de8d4ae", "committedDate": "2020-03-26T13:15:01Z", "message": "Add tests for marking ingests staff only"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDI0Mzg0", "url": "https://github.com/UNC-Libraries/box-c/pull/937#pullrequestreview-382024384", "createdAt": "2020-03-26T13:48:11Z", "commit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0ODoxMVrOF8Hshg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDozNjowOFrOF8J94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4NDk2Ng==", "bodyText": "Remove this, think its leftover", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398584966", "createdAt": "2020-03-26T13:48:11Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/IngestDepositRecordJob.java", "diffHunk": "@@ -145,6 +145,10 @@ private Resource makeDepositRecord(Resource deposit, Map<String, String> status)\n         if (onBehalfOf != null) {\n             aipObjResc.addProperty(Cdr.depositedOnBehalfOf, onBehalfOf);\n         }\n+        String staffOnly = status.get(DepositField.staffOnly.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4NTEyMw==", "bodyText": "Description", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398585123", "createdAt": "2020-03-26T13:48:22Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/StaffOnlyPermissionJob.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.deposit.fcrepo4;\n+\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+\n+import java.util.Map;\n+\n+import org.apache.jena.rdf.model.Bag;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.NodeIterator;\n+import org.apache.jena.rdf.model.Resource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import edu.unc.lib.dl.util.RedisWorkerConstants.DepositField;\n+import edu.unc.lib.deposit.work.AbstractDepositJob;\n+import edu.unc.lib.dl.rdf.CdrAcl;\n+\n+/**\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4Njg0MA==", "bodyText": "You only need to make the determination that the deposit is staff only once, i'd suggest checking this before line 54 Model model = getWritableModel(); and doing an early return if not staff only.\nAlternatively, you could remove the check since the check is (trying to) happen in the DepositSupervisor.", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398586840", "createdAt": "2020-03-26T13:50:27Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/fcrepo4/StaffOnlyPermissionJob.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.deposit.fcrepo4;\n+\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+\n+import java.util.Map;\n+\n+import org.apache.jena.rdf.model.Bag;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.NodeIterator;\n+import org.apache.jena.rdf.model.Resource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import edu.unc.lib.dl.util.RedisWorkerConstants.DepositField;\n+import edu.unc.lib.deposit.work.AbstractDepositJob;\n+import edu.unc.lib.dl.rdf.CdrAcl;\n+\n+/**\n+ *\n+ * @author lfarrell\n+ *\n+ */\n+public class StaffOnlyPermissionJob extends AbstractDepositJob {\n+    private static final Logger log = LoggerFactory.getLogger(StaffOnlyPermissionJob.class);\n+\n+    public StaffOnlyPermissionJob() {\n+        super();\n+    }\n+\n+    public StaffOnlyPermissionJob(String uuid, String depositUUID) {\n+        super(uuid, depositUUID);\n+    }\n+\n+    @Override\n+    public void runJob() {\n+        log.debug(\"Setting staff only permissions for deposit {}\", getDepositPID());\n+\n+        Model model = getWritableModel();\n+        Bag depositBag = model.getBag(getDepositPID().getRepositoryPath());\n+        NodeIterator iterator = getChildIterator(depositBag);\n+\n+        if (iterator.hasNext()) {\n+            Resource childResc = (Resource) iterator.next();\n+            setStaffOnly(childResc, model);\n+        }\n+    }\n+\n+    private void setStaffOnly(Resource resc, Model model) {\n+        Map<String, String> depositStatus = getDepositStatus();\n+        String staffOnly = depositStatus.get(DepositField.staffOnly.name());\n+\n+        if (Boolean.parseBoolean(staffOnly)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4ODA1MQ==", "bodyText": "Remove this, you are already creating the job further down and this conditional will always be false", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398588051", "createdAt": "2020-03-26T13:51:54Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/work/DepositSupervisor.java", "diffHunk": "@@ -586,7 +587,9 @@ private Job getNextJob(Job job, String depositUUID, Map<String, String> status,\n                 conversion = makeJob(BagIt2N3BagJob.class, depositUUID);\n             } else if (packagingType.equals(PackagingType.DIRECTORY.getUri())) {\n                 conversion = makeJob(DirectoryToBagJob.class, depositUUID);\n-             }\n+            } else if (DepositField.staffOnly.name().equals(\"true\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5MjE5Nw==", "bodyText": "This job needs to happen before IngestContentObjectsJob, otherwise the patron roles won't be ingested into fedora. I'd prefer if it happened before IngestDepositRecordJob as well, so that all the modification jobs happen before the ingest jobs start", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398592197", "createdAt": "2020-03-26T13:57:08Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/work/DepositSupervisor.java", "diffHunk": "@@ -661,6 +664,12 @@ private Job getNextJob(Job job, String depositUUID, Map<String, String> status,\n             return makeJob(IngestContentObjectsJob.class, depositUUID);\n         }\n \n+        // Mark objects staff only if flag is set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5NDk5Nw==", "bodyText": "you don't need any of the storage location related stuff in this test since the job doesn't interact with the binaries. So you can remove all the variables below this line, and the constants that go with them.", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398594997", "createdAt": "2020-03-26T14:00:47Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/StaffOnlyPermissionJobTest.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.deposit.fcrepo4;\n+\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+import static edu.unc.lib.dl.acl.util.UserRole.none;\n+import static edu.unc.lib.dl.test.TestHelpers.setField;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import edu.unc.lib.dl.persist.api.storage.StorageLocationManager;\n+import edu.unc.lib.dl.persist.services.storage.StorageLocationTestHelper;\n+import edu.unc.lib.dl.rdf.Cdr;\n+import edu.unc.lib.dl.rdf.CdrDeposit;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.jena.rdf.model.Bag;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.vocabulary.RDF;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import edu.unc.lib.dl.util.RedisWorkerConstants.DepositField;\n+import edu.unc.lib.dl.fedora.PID;\n+\n+/**\n+ * @author lfarrell\n+ */\n+public class StaffOnlyPermissionJobTest extends AbstractDepositJobTest {\n+    private final static String LOC1_ID = \"loc1\";\n+    private final static String LOC2_ID = \"loc2\";\n+    private final static String FILE_CONTENT1 = \"Some content\";\n+    private final static String SOURCE_ID = \"source1\";\n+\n+    private StaffOnlyPermissionJob job;\n+    private Model model;\n+    private StorageLocationManager locationManager;\n+    private Bag depBag;\n+    private StorageLocationTestHelper locTestHelper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMTU5MQ==", "bodyText": "i know this is test data, but a folder isn't allow to have a primaryObject. You could remove this property, or make objBag into a work. Also, the child could be any type, it being a file with a storage location isn't necessary for this test.", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398601591", "createdAt": "2020-03-26T14:09:46Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/StaffOnlyPermissionJobTest.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.deposit.fcrepo4;\n+\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+import static edu.unc.lib.dl.acl.util.UserRole.none;\n+import static edu.unc.lib.dl.test.TestHelpers.setField;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import edu.unc.lib.dl.persist.api.storage.StorageLocationManager;\n+import edu.unc.lib.dl.persist.services.storage.StorageLocationTestHelper;\n+import edu.unc.lib.dl.rdf.Cdr;\n+import edu.unc.lib.dl.rdf.CdrDeposit;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.jena.rdf.model.Bag;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.vocabulary.RDF;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import edu.unc.lib.dl.util.RedisWorkerConstants.DepositField;\n+import edu.unc.lib.dl.fedora.PID;\n+\n+/**\n+ * @author lfarrell\n+ */\n+public class StaffOnlyPermissionJobTest extends AbstractDepositJobTest {\n+    private final static String LOC1_ID = \"loc1\";\n+    private final static String LOC2_ID = \"loc2\";\n+    private final static String FILE_CONTENT1 = \"Some content\";\n+    private final static String SOURCE_ID = \"source1\";\n+\n+    private StaffOnlyPermissionJob job;\n+    private Model model;\n+    private StorageLocationManager locationManager;\n+    private Bag depBag;\n+    private StorageLocationTestHelper locTestHelper;\n+    private Path loc1Path;\n+    private Path loc2Path;\n+    private Path candidatePath;\n+    private Path sourcePath;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        loc1Path = tmpFolder.newFolder(\"loc1\").toPath();\n+        loc2Path = tmpFolder.newFolder(\"loc2\").toPath();\n+\n+        locTestHelper = new StorageLocationTestHelper();\n+        locTestHelper.addStorageLocation(LOC1_ID, \"Location 1\", loc1Path.toString());\n+        locTestHelper.addStorageLocation(LOC2_ID, \"Location 2\", loc2Path.toString());\n+\n+        sourcePath = tmpFolder.newFolder(SOURCE_ID).toPath();\n+        locationManager = locTestHelper.createLocationManager(null);\n+        candidatePath = Files.createDirectories(sourcePath.resolve(depositUUID));\n+\n+        job = new StaffOnlyPermissionJob();\n+\n+        job.setJobUUID(jobUUID);\n+        job.setDepositUUID(depositUUID);\n+        job.setDepositDirectory(depositDir);\n+        setField(job, \"locationManager\", locationManager);\n+        setField(job, \"dataset\", dataset);\n+        setField(job, \"depositsDirectory\", depositsDirectory);\n+        setField(job, \"depositStatusFactory\", depositStatusFactory);\n+        setField(job, \"jobStatusFactory\", jobStatusFactory);\n+        job.init();\n+\n+        model = job.getWritableModel();\n+        depBag = model.createBag(depositPid.getRepositoryPath());\n+        depBag.addProperty(Cdr.storageLocation, LOC1_ID);\n+    }\n+\n+    @Test\n+    public void testStaffOnly() throws Exception {\n+        Map<String, String> depositStatus = new HashMap<>();\n+        depositStatus.put(DepositField.staffOnly.name(), \"true\");\n+        when(depositStatusFactory.get(eq(depositUUID))).thenReturn(depositStatus);\n+\n+        PID objPid = makePid();\n+        Bag objBag = model.createBag(objPid.getRepositoryPath());\n+        objBag.addProperty(RDF.type, Cdr.Folder);\n+\n+        Resource fileResc = addFileObject(objBag, FILE_CONTENT1);\n+        objBag.addProperty(Cdr.primaryObject, fileResc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwNTI4OQ==", "bodyText": "Revert the changes in this file, this only needs to be a deposit status field", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398605289", "createdAt": "2020-03-26T14:14:37Z", "author": {"login": "bbpennel"}, "path": "metadata/src/main/java/edu/unc/lib/dl/rdf/Cdr.java", "diffHunk": "@@ -140,6 +140,13 @@ public static String getURI() {\n      */\n     public static final Property replaceInvalidTerms = createProperty(\n             \"http://cdr.unc.edu/definitions/model#replaceInvalidTerms\" );\n+\n+    /**\n+     * Relation which denotes the permissions for the subject object\n+     */\n+    public static final Property staffOnly = createProperty(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwNjAwNA==", "bodyText": "Revert the changes in this file, this only needs to be a deposit status field", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398606004", "createdAt": "2020-03-26T14:15:31Z", "author": {"login": "bbpennel"}, "path": "metadata/src/main/java/edu/unc/lib/dl/rdf/CdrDeposit.java", "diffHunk": "@@ -110,4 +110,7 @@ public static String getURI() {\n \n     public static final Property hasSourceMetadata = createProperty(\n             \"http://cdr.unc.edu/definitions/deposit#hasSourceMetadata\");\n+\n+    public static final Property staffOnly = createProperty(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxNjgxOQ==", "bodyText": "Won't this selector find all the input elements on the page now?", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398616819", "createdAt": "2020-03-26T14:29:11Z", "author": {"login": "bbpennel"}, "path": "static/js/admin/src/IngestFromSourceForm.js", "diffHunk": "@@ -139,10 +154,12 @@ define('IngestFromSourceForm', [ 'jquery', 'AbstractFileUploadForm', 'ModalLoadi\n \t\t\t$this.parents(\".file_browse_heading\").first().nextUntil(\".file_browse_heading\", \".file_browse_entry\").each(function() {\n \t\t\t\tif (select) {\n \t\t\t\t\t$(this).addClass(\"selected\");\n+\t\t\t\t\t$(\"input[name=ingest]\").prop(\"checked\", select);\n \t\t\t\t} else {\n \t\t\t\t\t$(this).removeClass(\"selected\");\n+\t\t\t\t\t$(\"input\").prop(\"checked\", select);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyMjE3OQ==", "bodyText": "Were all the changes in this file just formatting changes? I'm not actually seeing a checkbox for making something private here or when i run the branch", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398622179", "createdAt": "2020-03-26T14:36:08Z", "author": {"login": "bbpennel"}, "path": "static/templates/admin/ingestSourceMetadata.html", "diffHunk": "@@ -3,51 +3,51 @@\n \t\t<a class=\"complete\" id=\"ingest_source_choose\" href=\"#\">Choose materials</a>\n \t\t<span class=\"bold\"> &rarr; Assign metadata</span>\n \t</div>\n-\t\n+\n \t<div class=\"errors hidden\">\n \t\t<div class=\"error_stack\"></div>\n \t</div>\n-\t\n+\n \t<div class=\"file_browse_list\">\n-\t<table>\n-\t<%\n-\t_.each(selectedCandidates, function(candidate, index) { \n-\t\t%>\n-\t\t<tr class=\"file_browse_entry\">\n-\t\t\t<td class=\"file_browse_type_icon\">\n-\t\t\t\t<% if (candidate.type == \"BagIt\") { %>\n+\t\t<table>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122a7908ce444907cb0f857ed8f3d9c1de8d4ae"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4f1c90bbaed4073f222815f596c95788c4fe98", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/0e4f1c90bbaed4073f222815f596c95788c4fe98", "committedDate": "2020-03-26T15:04:55Z", "message": "Add checkbox back in and remove unchanged file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "822d5ad21cdf56547895bec4dce34e1ef12065fa", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/822d5ad21cdf56547895bec4dce34e1ef12065fa", "committedDate": "2020-03-26T18:43:19Z", "message": "Remove unneeded properties and test setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3161ff3ec09d572ed573ab38719bbb26bd09d191", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/3161ff3ec09d572ed573ab38719bbb26bd09d191", "committedDate": "2020-03-26T19:30:00Z", "message": "Move staff only checkbox"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDI4MDU0", "url": "https://github.com/UNC-Libraries/box-c/pull/937#pullrequestreview-382428054", "createdAt": "2020-03-26T21:18:37Z", "commit": {"oid": "3161ff3ec09d572ed573ab38719bbb26bd09d191"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxODozN1rOF8a3BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToyMjo1OFrOF8a_XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5ODk0OA==", "bodyText": "You can do this immediately after you create the follow rather than in each test. Although i'll mention that again that the job doesn't do anything with files, so you don't really need to have actual files and staging locations set up", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398898948", "createdAt": "2020-03-26T21:18:37Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/fcrepo4/StaffOnlyPermissionJobTest.java", "diffHunk": "@@ -0,0 +1,155 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.deposit.fcrepo4;\n+\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.AUTHENTICATED_PRINC;\n+import static edu.unc.lib.dl.acl.util.AccessPrincipalConstants.PUBLIC_PRINC;\n+import static edu.unc.lib.dl.acl.util.UserRole.none;\n+import static edu.unc.lib.dl.test.TestHelpers.setField;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import edu.unc.lib.dl.persist.api.storage.StorageLocationManager;\n+import edu.unc.lib.dl.persist.services.storage.StorageLocationTestHelper;\n+import edu.unc.lib.dl.rdf.Cdr;\n+import edu.unc.lib.dl.rdf.CdrDeposit;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.jena.rdf.model.Bag;\n+import org.apache.jena.rdf.model.Model;\n+import org.apache.jena.rdf.model.Resource;\n+import org.apache.jena.vocabulary.RDF;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import edu.unc.lib.dl.util.RedisWorkerConstants.DepositField;\n+import edu.unc.lib.dl.fedora.PID;\n+\n+/**\n+ * @author lfarrell\n+ */\n+public class StaffOnlyPermissionJobTest extends AbstractDepositJobTest {\n+    private final static String LOC1_ID = \"loc1\";\n+    private final static String FILE_CONTENT1 = \"Some content\";\n+\n+    private StaffOnlyPermissionJob job;\n+    private Model model;\n+    private StorageLocationManager locationManager;\n+    private Bag depBag;\n+    private StorageLocationTestHelper locTestHelper;\n+    private File originalFile;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        locTestHelper = new StorageLocationTestHelper();\n+        locationManager = locTestHelper.createLocationManager(null);\n+\n+        job = new StaffOnlyPermissionJob();\n+\n+        job.setJobUUID(jobUUID);\n+        job.setDepositUUID(depositUUID);\n+        job.setDepositDirectory(depositDir);\n+        setField(job, \"locationManager\", locationManager);\n+        setField(job, \"dataset\", dataset);\n+        setField(job, \"depositsDirectory\", depositsDirectory);\n+        setField(job, \"depositStatusFactory\", depositStatusFactory);\n+        setField(job, \"jobStatusFactory\", jobStatusFactory);\n+        job.init();\n+\n+        model = job.getWritableModel();\n+        depBag = model.createBag(depositPid.getRepositoryPath());\n+        depBag.addProperty(Cdr.storageLocation, LOC1_ID);\n+\n+        originalFile = File.createTempFile(\"txt\", \"test\");\n+    }\n+\n+    @Test\n+    public void testStaffOnly() throws Exception {\n+        Map<String, String> depositStatus = new HashMap<>();\n+        depositStatus.put(DepositField.staffOnly.name(), \"true\");\n+        when(depositStatusFactory.get(eq(depositUUID))).thenReturn(depositStatus);\n+\n+        PID objPid = makePid();\n+        Bag objBag = model.createBag(objPid.getRepositoryPath());\n+        objBag.addProperty(RDF.type, Cdr.Work);\n+\n+        Resource fileResc = addFileObject(objBag, FILE_CONTENT1);\n+        objBag.addProperty(Cdr.primaryObject, fileResc);\n+        objBag.addProperty(RDF.type, Cdr.FileObject);\n+\n+        depBag.add(objBag);\n+        job.closeModel();\n+\n+        job.run();\n+\n+        model = job.getReadOnlyModel();\n+        Resource roles = model.getResource(objPid.getRepositoryPath());\n+\n+        assertTrue(roles.hasProperty(none.getProperty(), AUTHENTICATED_PRINC));\n+        assertTrue(roles.hasProperty(none.getProperty(), PUBLIC_PRINC));\n+\n+        assertFalse(fileResc.hasProperty(none.getProperty()));\n+\n+        originalFile.deleteOnExit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3161ff3ec09d572ed573ab38719bbb26bd09d191"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkwMTA4NQ==", "bodyText": "The ticket suggests using the label Restrict to staff only access?", "url": "https://github.com/UNC-Libraries/box-c/pull/937#discussion_r398901085", "createdAt": "2020-03-26T21:22:58Z", "author": {"login": "bbpennel"}, "path": "static/templates/admin/ingestSourceMetadata.html", "diffHunk": "@@ -35,11 +35,13 @@ <h2><%= candidate.patternMatched %></h2>\n \t\t\t\t</p>\n \t\t\t\t<div class=\"file_browse_entry_inputs\">\n \t\t\t\t\t<label for=\"file_label\">Label <span class=\"required\">*</span></label>\n-\t\t\t\t\t<input type=\"text\" name=\"file_label\" size=\"40\" value=\"<%= candidate.filename %>\" />\n+\t\t\t\t\t<input id=\"file_label\" type=\"text\" name=\"file_label\" size=\"40\" value=\"<%= candidate.filename %>\" />\n \t\t\t\t\t<label for=\"file_acc_number\">Accession Number</label>\n-\t\t\t\t\t<input type=\"text\" name=\"file_acc_number\" size=\"40\"/>\n+\t\t\t\t\t<input id=\"file_acc_number\" type=\"text\" name=\"file_acc_number\" size=\"40\"/>\n \t\t\t\t\t<label for=\"file_media_id\">Media ID</label>\n-\t\t\t\t\t<input type=\"text\" name=\"file_media_id\" size=\"40\"/>\n+\t\t\t\t\t<input id=\"file_media_id\" type=\"text\" name=\"file_media_id\" size=\"40\"/>\n+\t\t\t\t\t<label for=\"staff_only\">Staff only</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3161ff3ec09d572ed573ab38719bbb26bd09d191"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c042e36c04f876303fa4364b50ac3ba1f9c1b372", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/c042e36c04f876303fa4364b50ac3ba1f9c1b372", "committedDate": "2020-03-27T12:40:59Z", "message": "Fix form label and test setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a5e783b770f8dbbf1ba10ea9c6718b0844470af", "author": {"user": {"login": "lfarrell", "name": "Dean Farrell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/9a5e783b770f8dbbf1ba10ea9c6718b0844470af", "committedDate": "2020-03-30T18:43:48Z", "message": "Remove unneeded setup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NzkwNzUw", "url": "https://github.com/UNC-Libraries/box-c/pull/937#pullrequestreview-384790750", "createdAt": "2020-03-31T14:28:57Z", "commit": {"oid": "9a5e783b770f8dbbf1ba10ea9c6718b0844470af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2315, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}