{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTM0MDEx", "number": 993, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowMzoxMlrOD-lsRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNjo1MlrOD-vS7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTU1ODQ2OnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowMzoxMlrOGYx86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowMzoxMlrOGYx86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNzQxOA==", "bodyText": "use objPath here instead of calling getEntries again", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428637418", "createdAt": "2020-05-21T13:03:12Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +144,52 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid) {\n+        ObjectPath destPath = objectPathFactory.getPath(destinationPid);\n+        String destAdminUnit = null;\n+        if (destPath != null) {\n+            List<ObjectPathEntry> destObjPath = destPath.getEntries();\n+            if (destObjPath.size() > 1) {\n+                destAdminUnit = destObjPath.get(1).getPid();\n+            }\n+        }\n+\n+        ObjectPath sourcePath = objectPathFactory.getPath(sourcePid);\n+        String currentAdminUnit = null;\n+        if (sourcePath != null) {\n+            List<ObjectPathEntry> objPath = sourcePath.getEntries();\n+            if (objPath.size() > 1) {\n+                currentAdminUnit = sourcePath.getEntries().get(1).getPid();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3268e4ff99a383bb02c26aba71902e50f92e33d1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTYwNjM1OnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxODozNlrOGYybkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxODozNlrOGYybkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0NTI2NQ==", "bodyText": "I would suggest holding onto the ObjectPath and/or ObjectPathEntry objects for the source and destination. They have getName() methods which you can use to get the title of the object as it is stored in solr. Unlike the property in fedora, if MODs were present then it'd give us back the MODS title, which seems desirable.\nThe ObjectPath entries can also give you back the title and id of the parent, it should be either the last or second to last entry in the path.", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428645265", "createdAt": "2020-05-21T13:18:36Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +144,52 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid) {\n+        ObjectPath destPath = objectPathFactory.getPath(destinationPid);\n+        String destAdminUnit = null;\n+        if (destPath != null) {\n+            List<ObjectPathEntry> destObjPath = destPath.getEntries();\n+            if (destObjPath.size() > 1) {\n+                destAdminUnit = destObjPath.get(1).getPid();\n+            }\n+        }\n+\n+        ObjectPath sourcePath = objectPathFactory.getPath(sourcePid);\n+        String currentAdminUnit = null;\n+        if (sourcePath != null) {\n+            List<ObjectPathEntry> objPath = sourcePath.getEntries();\n+            if (objPath.size() > 1) {\n+                currentAdminUnit = sourcePath.getEntries().get(1).getPid();\n+            }\n+        }\n+\n+        if (currentAdminUnit != null && destAdminUnit != null && !currentAdminUnit.equals(destAdminUnit)) {\n+            RepositoryObject currentObj = repositoryObjectLoader.getRepositoryObject(sourcePid);\n+            RepositoryObject parent = currentObj.getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3268e4ff99a383bb02c26aba71902e50f92e33d1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTYxNjAzOnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoyMToyNlrOGYyhng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoyMToyNlrOGYyhng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0NjgxNA==", "bodyText": "I'd suggest passing the already retrieved moveContent object into adminUnitMove instead of (or in addition to) the sourcePid. Then you could save the steps below of re-retrieving it", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428646814", "createdAt": "2020-05-21T13:21:26Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +144,52 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3268e4ff99a383bb02c26aba71902e50f92e33d1"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTc2OTA4OnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDowMzo0MlrOGY0CZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDowMzo0MlrOGY0CZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY3MTU5MQ==", "bodyText": "Based off the discussion with anna, lets go with the following text:\nObject moved from source \"<src title>\" (<src id>) in Admin Unit \"<src unit title>\" (<src unit id>) to destination \"<dest title>\" (<dest id>) in Admin Unit \"<dest unit title>\" (<dest unit id>)", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428671591", "createdAt": "2020-05-21T14:03:42Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +144,52 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid) {\n+        ObjectPath destPath = objectPathFactory.getPath(destinationPid);\n+        String destAdminUnit = null;\n+        if (destPath != null) {\n+            List<ObjectPathEntry> destObjPath = destPath.getEntries();\n+            if (destObjPath.size() > 1) {\n+                destAdminUnit = destObjPath.get(1).getPid();\n+            }\n+        }\n+\n+        ObjectPath sourcePath = objectPathFactory.getPath(sourcePid);\n+        String currentAdminUnit = null;\n+        if (sourcePath != null) {\n+            List<ObjectPathEntry> objPath = sourcePath.getEntries();\n+            if (objPath.size() > 1) {\n+                currentAdminUnit = sourcePath.getEntries().get(1).getPid();\n+            }\n+        }\n+\n+        if (currentAdminUnit != null && destAdminUnit != null && !currentAdminUnit.equals(destAdminUnit)) {\n+            RepositoryObject currentObj = repositoryObjectLoader.getRepositoryObject(sourcePid);\n+            RepositoryObject parent = currentObj.getParent();\n+            String prevContainerTitle = parent.getResource()\n+                    .getProperty(DcElements.title).getObject().toString();\n+\n+            String newContainerUUID = destinationPid.getUUID();\n+            String newContainerTitle = destContainer.getResource()\n+                    .getProperty(DcElements.title).getObject().toString();\n+\n+            currentObj.getPremisLog().buildEvent(Premis.MetadataModification)\n+                    .addAuthorizingAgent(agent.getUsername())\n+                    .addEventDetail(\"Object moved from parent object {0}, \" +\n+                                    \"{1} in Admin Unit {2} to {3}, {4} in Admin Unit {5}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3268e4ff99a383bb02c26aba71902e50f92e33d1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTExMTYxOnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMDoxN1rOGZBeZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMDoxN1rOGZBeZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MTc1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashMap<String, String> entryValues = new HashMap<String, String>();\n          \n          \n            \n                    Map<String, String> entryValues = new HashMap<>();", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428891751", "createdAt": "2020-05-21T20:20:17Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +143,63 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid, moveContent);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid, ContentObject moveObj) {\n+        HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n+        String destAdminUnit = destContainerInfo.get(\"adminUnit\");\n+\n+        HashMap<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);\n+        String currentAdminUnit = currentContainerInfo.get(\"adminUnit\");\n+\n+        if (currentAdminUnit != null && destAdminUnit != null && !currentAdminUnit.equals(destAdminUnit)) {\n+            moveObj.getPremisLog().buildEvent(Premis.MetadataModification)\n+                    .addAuthorizingAgent(agent.getUsername())\n+                    .addEventDetail(\"Object moved from source {0} ({1}) in Admin Unit {2} ({3}) \" +\n+                                    \"to destination {4} ({5}) in Admin Unit {6} ({7})\",\n+                            currentContainerInfo.get(\"container\"), currentContainerInfo.get(\"containerTitle\"),\n+                            currentAdminUnit, currentContainerInfo.get(\"adminUnitTitle\"),\n+                            destContainerInfo.get(\"container\"), destContainerInfo.get(\"containerTitle\"),\n+                            destAdminUnit, destContainerInfo.get(\"adminUnitTitle\"))\n+                    .writeAndClose();\n+        }\n+    }\n+\n+    private HashMap<String, String> getContainerInfo(PID pid, int entry) {\n+        ObjectPath objPath = objectPathFactory.getPath(pid);\n+\n+        String objAdminUnit = null;\n+        String objAdminUnitTitle = \"\";\n+        String objContainer = \"\";\n+        String objContainerTitle = \"\";\n+\n+        if (objPath != null) {\n+            List<ObjectPathEntry> objPathList = objPath.getEntries();\n+            if (objPathList.size() > 1) {\n+                ObjectPathEntry destEntry = objPathList.get(1);\n+                objAdminUnit = destEntry.getPid();\n+                objAdminUnitTitle = destEntry.getName();\n+\n+                ObjectPathEntry objContainerEntry = objPathList.get(objPathList.size() - entry);\n+                objContainer = objContainerEntry.getPid();\n+                objContainerTitle = objContainerEntry.getName();\n+            }\n+        }\n+\n+        HashMap<String, String> entryValues = new HashMap<String, String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb1e47ee4d02a2f773937a6a6b912000423dcd0"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTExNzExOnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMjowNlrOGZBh2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMjowNlrOGZBh2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MjYzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n          \n          \n            \n                    Map<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n          \n      \n    \n    \n  \n\nUse interface rather than implementation", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428892635", "createdAt": "2020-05-21T20:22:06Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +143,63 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid, moveContent);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid, ContentObject moveObj) {\n+        HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb1e47ee4d02a2f773937a6a6b912000423dcd0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTExNzU4OnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMjoxNVrOGZBiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMjoxNVrOGZBiHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MjcwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    HashMap<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);\n          \n          \n            \n                    Map<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428892702", "createdAt": "2020-05-21T20:22:15Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +143,63 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid, moveContent);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid, ContentObject moveObj) {\n+        HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n+        String destAdminUnit = destContainerInfo.get(\"adminUnit\");\n+\n+        HashMap<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb1e47ee4d02a2f773937a6a6b912000423dcd0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTEyMDkyOnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMzoyNFrOGZBkUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMzoyNFrOGZBkUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MzI2Nw==", "bodyText": "Please add quotes around the titles for clarity", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428893267", "createdAt": "2020-05-21T20:23:24Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +143,63 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid, moveContent);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid, ContentObject moveObj) {\n+        HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n+        String destAdminUnit = destContainerInfo.get(\"adminUnit\");\n+\n+        HashMap<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);\n+        String currentAdminUnit = currentContainerInfo.get(\"adminUnit\");\n+\n+        if (currentAdminUnit != null && destAdminUnit != null && !currentAdminUnit.equals(destAdminUnit)) {\n+            moveObj.getPremisLog().buildEvent(Premis.MetadataModification)\n+                    .addAuthorizingAgent(agent.getUsername())\n+                    .addEventDetail(\"Object moved from source {0} ({1}) in Admin Unit {2} ({3}) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb1e47ee4d02a2f773937a6a6b912000423dcd0"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTEzMTk2OnYy", "diffSide": "RIGHT", "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNjo1MlrOGZBrmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNjo1MlrOGZBrmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NTEyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private HashMap<String, String> getContainerInfo(PID pid, int entry) {\n          \n          \n            \n                private Map<String, String> getContainerInfo(PID pid, int entry) {\n          \n      \n    \n    \n  \n\nAlso, could you add javadoc to this? Particularly it'd be helpful to describe what entry is since its a bit tricky that its actually counting backwards", "url": "https://github.com/UNC-Libraries/box-c/pull/993#discussion_r428895128", "createdAt": "2020-05-21T20:26:52Z", "author": {"login": "bbpennel"}, "path": "persistence/src/main/java/edu/unc/lib/dl/persist/services/move/MoveObjectsJob.java", "diffHunk": "@@ -141,10 +143,63 @@ private void moveObject(PID objPid) {\n         PID sourcePid = moveContent.getParent().getPid();\n         addPidToSource(objPid, sourcePid);\n \n+        // Write a premis event if object moves between admin units\n+        adminUnitMove(objPid, moveContent);\n+\n         // Add the object to its destination, which clears the previous parent as well\n         destContainer.addMember(moveContent);\n     }\n \n+    private void adminUnitMove(PID sourcePid, ContentObject moveObj) {\n+        HashMap<String, String> destContainerInfo = getContainerInfo(destinationPid, 1);\n+        String destAdminUnit = destContainerInfo.get(\"adminUnit\");\n+\n+        HashMap<String, String> currentContainerInfo = getContainerInfo(sourcePid, 2);\n+        String currentAdminUnit = currentContainerInfo.get(\"adminUnit\");\n+\n+        if (currentAdminUnit != null && destAdminUnit != null && !currentAdminUnit.equals(destAdminUnit)) {\n+            moveObj.getPremisLog().buildEvent(Premis.MetadataModification)\n+                    .addAuthorizingAgent(agent.getUsername())\n+                    .addEventDetail(\"Object moved from source {0} ({1}) in Admin Unit {2} ({3}) \" +\n+                                    \"to destination {4} ({5}) in Admin Unit {6} ({7})\",\n+                            currentContainerInfo.get(\"container\"), currentContainerInfo.get(\"containerTitle\"),\n+                            currentAdminUnit, currentContainerInfo.get(\"adminUnitTitle\"),\n+                            destContainerInfo.get(\"container\"), destContainerInfo.get(\"containerTitle\"),\n+                            destAdminUnit, destContainerInfo.get(\"adminUnitTitle\"))\n+                    .writeAndClose();\n+        }\n+    }\n+\n+    private HashMap<String, String> getContainerInfo(PID pid, int entry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb1e47ee4d02a2f773937a6a6b912000423dcd0"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 791, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}