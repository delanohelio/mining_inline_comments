{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTg2Mzg5", "number": 1039, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozMTowNVrOEMfTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozMToyM1rOEMfUHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTMxMzA1OnYy", "diffSide": "RIGHT", "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozMTowNVrOGuoK3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzo1NTowMFrOGupNyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NTgyMQ==", "bodyText": "Why the 1 + 3?", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451545821", "createdAt": "2020-07-08T13:31:05Z", "author": {"login": "lfarrell"}, "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a599bff4aaa195dbb714e1cd14152010d0e718a0"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2Mjk1Mg==", "bodyText": "I wrote it that was since there are two types of messages being completed, 1 batch message and 3 individual messages, since the notifyBuilder tracks the whole camel context rather than a specific route within it. Perhaps a comment would be better though", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451562952", "createdAt": "2020-07-08T13:55:00Z", "author": {"login": "bbpennel"}, "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NTgyMQ=="}, "originalCommit": {"oid": "a599bff4aaa195dbb714e1cd14152010d0e718a0"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTMxNDIzOnYy", "diffSide": "RIGHT", "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozMToyM1rOGuoLqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODowNzowNFrOGuzl0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NjAyNg==", "bodyText": "Same here with the 2 + 10?", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451546026", "createdAt": "2020-07-08T13:31:23Z", "author": {"login": "lfarrell"}, "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)\n+                .create();\n+\n+        String[] contentUris = generateContentUris(3);\n+        sendMessages(contentUris);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUris);\n+    }\n+\n+    @Test\n+    public void deregisterMultipleBatches() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2 + 10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a599bff4aaa195dbb714e1cd14152010d0e718a0"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczMjk0Ng==", "bodyText": "I've added a comment to clarify", "url": "https://github.com/UNC-Libraries/box-c/pull/1039#discussion_r451732946", "createdAt": "2020-07-08T18:07:04Z", "author": {"login": "bbpennel"}, "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/longleaf/DeregisterLongleafRouteTest.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/**\n+ * Copyright 2008 The University of North Carolina at Chapel Hill\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package edu.unc.lib.dl.services.camel.longleaf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.net.URI;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.builder.NotifyBuilder;\n+import org.jgroups.util.UUID;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.ContextHierarchy;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import edu.unc.lib.dl.services.MessageSender;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextHierarchy({\n+    @ContextConfiguration(\"/spring-test/jms-context.xml\"),\n+    @ContextConfiguration(\"/deregister-longleaf-router-context.xml\")\n+})\n+public class DeregisterLongleafRouteTest {\n+\n+    @Autowired\n+    private MessageSender messageSender;\n+\n+    @Autowired\n+    private DeregisterLongleafProcessor processor;\n+\n+    @Autowired\n+    private CamelContext cdrLongleaf;\n+\n+    @Rule\n+    public final TemporaryFolder tmpFolder = new TemporaryFolder();\n+\n+    private String longleafScript;\n+    private String outputPath;\n+    private List<String> output;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        tmpFolder.create();\n+        outputPath = tmpFolder.newFile().getPath();\n+        longleafScript = LongleafTestHelpers.getLongleafScript(outputPath);\n+        processor.setLongleafBaseCommand(longleafScript);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBinary() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2)\n+                .create();\n+\n+        String contentUri = generateContentUri();\n+        sendMessages(contentUri);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUri);\n+    }\n+\n+    @Test\n+    public void deregisterSingleBatch() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(1 + 3)\n+                .create();\n+\n+        String[] contentUris = generateContentUris(3);\n+        sendMessages(contentUris);\n+\n+        boolean result1 = notify.matches(5l, TimeUnit.SECONDS);\n+        assertTrue(\"Deregister route not satisfied\", result1);\n+\n+        output = LongleafTestHelpers.readOutput(outputPath);\n+        assertDeregisterCalled(1);\n+        assertDeregisterPaths(contentUris);\n+    }\n+\n+    @Test\n+    public void deregisterMultipleBatches() throws Exception {\n+        NotifyBuilder notify = new NotifyBuilder(cdrLongleaf)\n+                .whenCompleted(2 + 10)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0NjAyNg=="}, "originalCommit": {"oid": "a599bff4aaa195dbb714e1cd14152010d0e718a0"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 657, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}