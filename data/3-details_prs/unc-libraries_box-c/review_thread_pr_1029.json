{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTYzNzI0", "number": 1029, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODoyNjoyNFrOEI4AfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODoyNjoyNFrOEI4AfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzQxNjkyOnYy", "diffSide": "RIGHT", "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/TransformContentCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODoyNjoyNFrOGpGqzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxODo1Mzo1M1rOGpHvdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1NDA2Mw==", "bodyText": "Why are context files used?", "url": "https://github.com/UNC-Libraries/box-c/pull/1029#discussion_r445754063", "createdAt": "2020-06-25T18:26:24Z", "author": {"login": "lfarrell"}, "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/TransformContentCommand.java", "diffHunk": "@@ -71,27 +74,39 @@\n             description = \"Submits the transformed content for deposit to the provided container UUID\")\n     private String depositInto;\n \n+    @Option(names = {\"-m\", \"--missing-deposit-records\"},\n+            description = \"Create referenced deposit records which do not have their own bxc3 object\")\n+    private boolean createMissingDepositRecords;\n+\n+    @Option(names = {\"-n\", \"--dry-run\"},\n+            description = \"Perform the transformation but do not save the results\")\n+    private boolean dryRun;\n+\n+    private String applicationContextPath = \"spring/service-context.xml\";\n+\n     @Override\n     public Integer call() throws Exception {\n         long start = System.currentTimeMillis();\n \n         output.info(\"Transforming content tree starting from {}\", startingId);\n         output.info(\"===========================================\");\n-        RepositoryPIDMinter pidMinter = new RepositoryPIDMinter();\n+\n+        ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(applicationContextPath);\n+\n+        RepositoryPIDMinter pidMinter = (RepositoryPIDMinter) context.getBean(\"repositoryPIDMinter\");\n         PID depositPid = pidMinter.mintDepositRecordPid();\n \n-        output.info(\"Populating deposit:\");\n-        output.info(depositPid.getId());\n+        output.info(\"Populating deposit: \" + depositPid.getId());\n \n         DepositModelManager depositModelManager = new DepositModelManager(depositPid, parentCommand.tdbDir);\n         DepositDirectoryManager depositDirectoryManager = new DepositDirectoryManager(\n                 depositPid, parentCommand.depositBaseDir, hashNesting);\n \n-        PathIndex pathIndex = new PathIndex();\n+        PathIndex pathIndex = (PathIndex) context.getBean(\"pathIndex\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5dd5c1651a3dc5aeebe6a63b11093c902a9c9c4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc3MTYzNw==", "bodyText": "I converted this command over to using the spring context stuff because of adding in the fedora interactions, which required a whole bunch of extra dependencies and config options. The context stuff was already in use in the TransformDepositRecordCommand, so it was a pretty easy switch.", "url": "https://github.com/UNC-Libraries/box-c/pull/1029#discussion_r445771637", "createdAt": "2020-06-25T18:53:53Z", "author": {"login": "bbpennel"}, "path": "migration-util/src/main/java/edu/unc/lib/dcr/migration/TransformContentCommand.java", "diffHunk": "@@ -71,27 +74,39 @@\n             description = \"Submits the transformed content for deposit to the provided container UUID\")\n     private String depositInto;\n \n+    @Option(names = {\"-m\", \"--missing-deposit-records\"},\n+            description = \"Create referenced deposit records which do not have their own bxc3 object\")\n+    private boolean createMissingDepositRecords;\n+\n+    @Option(names = {\"-n\", \"--dry-run\"},\n+            description = \"Perform the transformation but do not save the results\")\n+    private boolean dryRun;\n+\n+    private String applicationContextPath = \"spring/service-context.xml\";\n+\n     @Override\n     public Integer call() throws Exception {\n         long start = System.currentTimeMillis();\n \n         output.info(\"Transforming content tree starting from {}\", startingId);\n         output.info(\"===========================================\");\n-        RepositoryPIDMinter pidMinter = new RepositoryPIDMinter();\n+\n+        ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(applicationContextPath);\n+\n+        RepositoryPIDMinter pidMinter = (RepositoryPIDMinter) context.getBean(\"repositoryPIDMinter\");\n         PID depositPid = pidMinter.mintDepositRecordPid();\n \n-        output.info(\"Populating deposit:\");\n-        output.info(depositPid.getId());\n+        output.info(\"Populating deposit: \" + depositPid.getId());\n \n         DepositModelManager depositModelManager = new DepositModelManager(depositPid, parentCommand.tdbDir);\n         DepositDirectoryManager depositDirectoryManager = new DepositDirectoryManager(\n                 depositPid, parentCommand.depositBaseDir, hashNesting);\n \n-        PathIndex pathIndex = new PathIndex();\n+        PathIndex pathIndex = (PathIndex) context.getBean(\"pathIndex\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc1NDA2Mw=="}, "originalCommit": {"oid": "a5dd5c1651a3dc5aeebe6a63b11093c902a9c9c4"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}