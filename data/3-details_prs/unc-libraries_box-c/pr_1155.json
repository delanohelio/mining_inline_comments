{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NzIwMzU2", "number": 1155, "title": "BXC-2950 - Filter fedora queue", "bodyText": "https://jira.lib.unc.edu/browse/BXC-2950\n\nAdds filters to reduce number of extraneous messages being sent from Fedora queue to enhancement queue\nFilter some unused fedora objects out from triples indexing\nConsolidates fedora jms constants\nAdds a test to confirm that pids for intermediate container ids parse correctly", "createdAt": "2020-11-30T18:09:05Z", "url": "https://github.com/UNC-Libraries/box-c/pull/1155", "merged": true, "mergeCommit": {"oid": "3dea0c7c5604fe65a980db6e68734ebc63bf6a4b"}, "closed": true, "closedAt": "2020-12-03T20:44:05Z", "author": {"login": "bbpennel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhpUh2AH2gAyNTI5NzIwMzU2OjQ5MWZkOTg5OTYzN2U2NTg5NzgwYmZhMjMxNDU2NjdmMGM3YTk5M2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdimTPSAH2gAyNTI5NzIwMzU2OjIxNGQ3ZGQ1MDQzYmFmZjM0ZGUwMTY3Y2Q2ZGUxYmNhZTAzNDk5NmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "491fd9899637e6589780bfa23145667f0c7a993f", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/491fd9899637e6589780bfa23145667f0c7a993f", "committedDate": "2020-11-30T18:05:16Z", "message": "Consolidate fcrepo jms constants into constants file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ad8fda623de35c5cc66c33a463e2b22addfeb0", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/a9ad8fda623de35c5cc66c33a463e2b22addfeb0", "committedDate": "2020-11-30T18:05:16Z", "message": "Add filters to fedora message processing to limit which objects receive triple store indexing and enhancement processing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717133e79d17c07c6982e9575d3beaa39cedd35c", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/717133e79d17c07c6982e9575d3beaa39cedd35c", "committedDate": "2020-11-30T18:14:56Z", "message": "Add constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b5d7a9302213fca241bb938f41bcc4480f13eb", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/f7b5d7a9302213fca241bb938f41bcc4480f13eb", "committedDate": "2020-11-30T18:50:33Z", "message": "Allow all binaries through so that they can be registered with longleaf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODg0ODc4", "url": "https://github.com/UNC-Libraries/box-c/pull/1155#pullrequestreview-541884878", "createdAt": "2020-12-01T13:19:27Z", "commit": {"oid": "f7b5d7a9302213fca241bb938f41bcc4480f13eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoxOToyN1rOH8sLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoxOToyN1rOH8sLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMDM0OA==", "bodyText": "Should event logs have enhancements run on them?", "url": "https://github.com/UNC-Libraries/box-c/pull/1155#discussion_r533400348", "createdAt": "2020-12-01T13:19:27Z", "author": {"login": "lfarrell"}, "path": "services-camel/src/test/java/edu/unc/lib/dl/services/camel/routing/MetaServicesRouterTest.java", "diffHunk": "@@ -78,6 +84,110 @@ public void testRouteStartContainer() throws Exception {\n         assertMockEndpointsSatisfied();\n     }\n \n+    @Test\n+    public void testRouteStartTimemap() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(0);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(CONTAINER_ID + \"/\" + FCR_VERSIONS,\n+                Fcrepo4Repository.Container.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartDatafs() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(CONTAINER_ID + \"/datafs\",\n+                Fcrepo4Repository.Container.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartDepositRecord() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(DEPOSIT_ID,\n+                Fcrepo4Repository.Container.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartNotAPid() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(\"what/is/going/on\",\n+                Fcrepo4Repository.Container.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartCollections() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(\"/content/\" + RepositoryPathConstants.CONTENT_ROOT_ID,\n+                Fcrepo4Repository.Container.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartBinaryMetadata() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(0);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(CONTAINER_ID + \"/datafs/original_file/fcr:metadata\",\n+                Fcrepo4Repository.NonRdfSourceDescription.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartOriginalBinary() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(1);\n+\n+        createContext(META_ROUTE);\n+\n+        template.sendBodyAndHeaders(\"\", createEvent(CONTAINER_ID + \"/datafs/original_file\",\n+                Fcrepo4Repository.Binary.getURI()));\n+\n+        assertMockEndpointsSatisfied();\n+    }\n+\n+    @Test\n+    public void testRouteStartPremisBinary() throws Exception {\n+        getMockEndpoint(\"mock:direct-vm:index.start\").expectedMessageCount(1);\n+        getMockEndpoint(\"mock:direct:process.enhancement\").expectedMessageCount(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b5d7a9302213fca241bb938f41bcc4480f13eb"}, "originalPosition": 133}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a4fc05e288af78c34a39576503c7fb99da8531", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/a6a4fc05e288af78c34a39576503c7fb99da8531", "committedDate": "2020-12-03T16:24:14Z", "message": "Move longleaf registration up to metaservicesrouter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "214d7dd5043baff34de0167cd6de1bcae034996c", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/UNC-Libraries/box-c/commit/214d7dd5043baff34de0167cd6de1bcae034996c", "committedDate": "2020-12-03T17:08:04Z", "message": "Adds deposit record root pid and returns it from PIDs.get, so that we don't get failures when deposit record root is filter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2189, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}