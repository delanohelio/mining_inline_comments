{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjk4MTUz", "number": 936, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjowOVrODrxxzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTozNjowN1rODrzcEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjMwOTI0OnYy", "diffSide": "RIGHT", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjowOVrOF8Uq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjowOVrOF8Uq2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NzUyOA==", "bodyText": "Is this needed?", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r398797528", "createdAt": "2020-03-26T18:26:09Z", "author": {"login": "bbpennel"}, "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "diffHunk": "@@ -114,34 +117,49 @@ public void init() throws Exception{\n         objPid = PIDs.get(UUID.randomUUID().toString());\n         modsPid = getMdDescriptivePid(objPid);\n         modsStream = new ByteArrayInputStream(FILE_CONTENT.getBytes());\n-        transferredUri = URI.create(\"file:///path/to/transferred/file.txt\");\n \n-        when(obj.setDescription(any(URI.class))).thenReturn(mock(BinaryObject.class));\n+        when(versioningService.addVersion(any(DatastreamVersion.class))).thenReturn(mockDescBin);\n         when(obj.getPid()).thenReturn(objPid);\n \n-        when(transferSession.transferReplaceExisting(modsPid, modsStream)).thenReturn(transferredUri);\n-\n         service = new UpdateDescriptionService();\n         service.setAclService(aclService);\n         service.setRepositoryObjectLoader(repoObjLoader);\n+        service.setRepositoryObjectFactory(repoObjFactory);\n         service.setOperationsMessageSender(messageSender);\n         service.setModsValidator(modsValidator);\n-        service.setTransferService(transferService);\n+        service.setVersionedDatastreamService(versioningService);\n     }\n \n     @Test\n     public void updateDescriptionTest() throws Exception {\n-        when(transferService.getSession(obj)).thenReturn(transferSession);\n-\n         service.updateDescription(agent, objPid, modsStream);\n \n-        verify(transferSession).transferReplaceExisting(eq(modsPid), inputStreamCaptor.capture());\n-        assertEquals(FILE_CONTENT, IOUtils.toString(inputStreamCaptor.getValue()));\n+        verify(versioningService).addVersion(versionCaptor.capture());\n+        DatastreamVersion version = versionCaptor.getValue();\n+        assertEquals(modsPid, version.getDsPid());\n+        assertEquals(\"text/xml\", version.getContentType());\n+        assertEquals(FILE_CONTENT, IOUtils.toString(version.getContentStream()));\n \n-        verify(obj).setDescription(transferredUri);\n+        verify(versioningService).addVersion(any(DatastreamVersion.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37730b37acdad9e0a7caef37ea6a4308d762918e"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjMxMTQ5OnYy", "diffSide": "RIGHT", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjo0MVrOF8UsNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjo0MVrOF8UsNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5Nzg3OA==", "bodyText": "check", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r398797878", "createdAt": "2020-03-26T18:26:41Z", "author": {"login": "bbpennel"}, "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "diffHunk": "@@ -114,34 +117,49 @@ public void init() throws Exception{\n         objPid = PIDs.get(UUID.randomUUID().toString());\n         modsPid = getMdDescriptivePid(objPid);\n         modsStream = new ByteArrayInputStream(FILE_CONTENT.getBytes());\n-        transferredUri = URI.create(\"file:///path/to/transferred/file.txt\");\n \n-        when(obj.setDescription(any(URI.class))).thenReturn(mock(BinaryObject.class));\n+        when(versioningService.addVersion(any(DatastreamVersion.class))).thenReturn(mockDescBin);\n         when(obj.getPid()).thenReturn(objPid);\n \n-        when(transferSession.transferReplaceExisting(modsPid, modsStream)).thenReturn(transferredUri);\n-\n         service = new UpdateDescriptionService();\n         service.setAclService(aclService);\n         service.setRepositoryObjectLoader(repoObjLoader);\n+        service.setRepositoryObjectFactory(repoObjFactory);\n         service.setOperationsMessageSender(messageSender);\n         service.setModsValidator(modsValidator);\n-        service.setTransferService(transferService);\n+        service.setVersionedDatastreamService(versioningService);\n     }\n \n     @Test\n     public void updateDescriptionTest() throws Exception {\n-        when(transferService.getSession(obj)).thenReturn(transferSession);\n-\n         service.updateDescription(agent, objPid, modsStream);\n \n-        verify(transferSession).transferReplaceExisting(eq(modsPid), inputStreamCaptor.capture());\n-        assertEquals(FILE_CONTENT, IOUtils.toString(inputStreamCaptor.getValue()));\n+        verify(versioningService).addVersion(versionCaptor.capture());\n+        DatastreamVersion version = versionCaptor.getValue();\n+        assertEquals(modsPid, version.getDsPid());\n+        assertEquals(\"text/xml\", version.getContentType());\n+        assertEquals(FILE_CONTENT, IOUtils.toString(version.getContentStream()));\n \n-        verify(obj).setDescription(transferredUri);\n+        verify(versioningService).addVersion(any(DatastreamVersion.class));\n \n         assertMessageSent();\n+    }\n+\n+    @Test\n+    public void updateDescriptionAlreadyExistsTest() throws Exception {\n+        when(repoObjFactory.objectExists(modsPid.getRepositoryUri())).thenReturn(true);\n+\n+        service.updateDescription(agent, objPid, modsStream);\n \n+        verify(versioningService).addVersion(versionCaptor.capture());\n+        DatastreamVersion version = versionCaptor.getValue();\n+        assertEquals(modsPid, version.getDsPid());\n+        assertEquals(\"text/xml\", version.getContentType());\n+        assertEquals(FILE_CONTENT, IOUtils.toString(version.getContentStream()));\n+\n+        verify(versioningService).addVersion(any(DatastreamVersion.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37730b37acdad9e0a7caef37ea6a4308d762918e"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjMxMzkzOnYy", "diffSide": "RIGHT", "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNzoyMVrOF8Ut3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNzoyMVrOF8Ut3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5ODMwMw==", "bodyText": "check", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r398798303", "createdAt": "2020-03-26T18:27:21Z", "author": {"login": "bbpennel"}, "path": "persistence/src/test/java/edu/unc/lib/dl/persist/services/edit/UpdateDescriptionServiceTest.java", "diffHunk": "@@ -171,14 +202,31 @@ public void invalidModsValidationOff() throws Exception {\n     public void updateDescriptionProvidedSession() throws Exception {\n         service.updateDescription(transferSession, agent, objPid, modsStream);\n \n-        verify(transferSession).transferReplaceExisting(eq(modsPid), inputStreamCaptor.capture());\n-        assertEquals(FILE_CONTENT, IOUtils.toString(inputStreamCaptor.getValue()));\n-\n-        verify(obj).setDescription(transferredUri);\n+        verify(versioningService).addVersion(versionCaptor.capture());\n+        DatastreamVersion version = versionCaptor.getValue();\n+        assertEquals(FILE_CONTENT, IOUtils.toString(version.getContentStream()));\n+        assertEquals(transferSession, version.getTransferSession());\n \n         assertMessageSent();\n     }\n \n+    @Test\n+    public void updateDescriptionDisableMassgesTest() throws Exception {\n+        service.setSendsMessages(false);\n+\n+        service.updateDescription(agent, objPid, modsStream);\n+\n+        verify(versioningService).addVersion(versionCaptor.capture());\n+        DatastreamVersion version = versionCaptor.getValue();\n+        assertEquals(modsPid, version.getDsPid());\n+        assertEquals(\"text/xml\", version.getContentType());\n+        assertEquals(FILE_CONTENT, IOUtils.toString(version.getContentStream()));\n+\n+        verify(versioningService).addVersion(any(DatastreamVersion.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37730b37acdad9e0a7caef37ea6a4308d762918e"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjM1MDM1OnYy", "diffSide": "RIGHT", "path": "services/src/test/resources/retrieve-mods-it-servlet.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozNjoxNlrOF8VEkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozNjoxNlrOF8VEkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNDExMw==", "bodyText": "Do these need to be here?", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r398804113", "createdAt": "2020-03-26T18:36:16Z", "author": {"login": "bbpennel"}, "path": "services/src/test/resources/retrieve-mods-it-servlet.xml", "diffHunk": "@@ -32,6 +32,25 @@\n \n     <context:component-scan resource-pattern=\"**/RetrieveMODSController*\" base-package=\"edu.unc.lib.dl.cdr.services.rest\"/>\n     \n+    <bean id=\"versionedDatastreamService\" class=\"edu.unc.lib.dl.persist.services.versioning.VersionedDatastreamService\" >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37730b37acdad9e0a7caef37ea6a4308d762918e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjU4MTMxOnYy", "diffSide": "LEFT", "path": "fcrepo-clients/src/main/java/edu/unc/lib/dl/fcrepo4/RepositoryObjectLoader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTozNjowN1rOF8XUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjozNjo1NlrOF8vQ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0MDk4MA==", "bodyText": "Did you want to remove this?", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r398840980", "createdAt": "2020-03-26T19:36:07Z", "author": {"login": "lfarrell"}, "path": "fcrepo-clients/src/main/java/edu/unc/lib/dl/fcrepo4/RepositoryObjectLoader.java", "diffHunk": "@@ -143,5 +143,4 @@ public RepositoryObject getRepositoryObject(PID pid) {\n             }\n         }\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9854396e55933f6f331adfe47f079c176ba00ac1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzMzI1MQ==", "bodyText": "I had added a new method here and then removed it a commit or two later. I've undone this change now", "url": "https://github.com/UNC-Libraries/box-c/pull/936#discussion_r399233251", "createdAt": "2020-03-27T12:36:56Z", "author": {"login": "bbpennel"}, "path": "fcrepo-clients/src/main/java/edu/unc/lib/dl/fcrepo4/RepositoryObjectLoader.java", "diffHunk": "@@ -143,5 +143,4 @@ public RepositoryObject getRepositoryObject(PID pid) {\n             }\n         }\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0MDk4MA=="}, "originalCommit": {"oid": "9854396e55933f6f331adfe47f079c176ba00ac1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 731, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}