{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODY4NTY3", "number": 1090, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoxMDo1OVrOEggsLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozNTowNlrOEk-P3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTI1NDg1OnYy", "diffSide": "RIGHT", "path": "deposit/src/main/java/edu/unc/lib/deposit/validate/ExtractTechnicalMetadataJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoxMDo1OVrOHNaW4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoxMDo1OVrOHNaW4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyNTM3OQ==", "bodyText": "For some of the longer running jobs it'd be helpful to know in advance how much work there is total.\nThere are some examples of precomputing the count, this is from the virus scan job:\nList<Entry<PID, String>> hrefs = getPropertyPairList(model, CdrDeposit.stagingLocation);\n\n        setTotalClicks(hrefs.size());\n\nI think both the jobs you updated in this PR would be good candidates", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r483825379", "createdAt": "2020-09-04T20:10:59Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/validate/ExtractTechnicalMetadataJob.java", "diffHunk": "@@ -138,13 +138,16 @@ public void runJob() {\n \n                 // Store the premis report to file\n                 writePremisReport(objPid, premisDoc);\n+                addClicks(1);\n             } catch (JobFailedException | JobInterruptedException e) {\n                 throw e;\n             } catch (Exception e) {\n                 failJob(e, \"Failed to extract FITS details for {0} from document:\\n{1}\",\n                         objPid, xmlOutputter.outputString(fitsDoc));\n             }\n         }\n+\n+        setTotalClicks(stagingList.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132bc01fac6cf9a6fc6dd8ef9447ca045065fc9c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTI4MDAyOnYy", "diffSide": "RIGHT", "path": "static/js/admin/src/statusMonitor/DepositMonitor.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoyMjowN1rOHNalrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMDoyMjowN1rOHNalrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgyOTE2Ng==", "bodyText": "Is there any reason to restrict which jobs we allow counts on? Seems like anything that has num set and greater than zero should be displayed. Also, I think its okay to display num even if total isn't set, just display without the second half", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r483829166", "createdAt": "2020-09-04T20:22:07Z", "author": {"login": "bbpennel"}, "path": "static/js/admin/src/statusMonitor/DepositMonitor.js", "diffHunk": "@@ -105,18 +105,24 @@ define('DepositMonitor', [ 'jquery', 'jquery-ui', 'underscore', 'AbstractStatusM\n \t\tif (\"currentJob\" in results) {\n \t\t\tvar currentJob = results.jobs[results.currentJob];\n \t\t}\n-\t\t\n+\n \t\tif (\"jobs\" in results) {\n+\t\t\tconst jobsWithCounts = [\n+\t\t\t\t\"ValidateFileAvailabilityJob\",\n+\t\t\t\t\"VirusScanJob\",\n+\t\t\t\t\"FixityCheckJob\",\n+\t\t\t\t\"ExtractTechnicalMetadataJob\",\n+\t\t\t\t\"IngestContentObjectsJob\"\n+\t\t\t];\n+\n \t\t\tfor (var index in results.jobs) {\n \t\t\t\tvar job = results.jobs[index];\n \t\t\t\tvar jobName = job.name.substring(job.name.lastIndexOf(\".\") + 1);\n \t\t\t\t\n \t\t\t\tjob[\"shortName\"] = jobName;\n-\t\t\t\t\n-\t\t\t\tif (jobName == \"IngestContentObjectsJob\" && \"total\" in job) {\n-\t\t\t\t\tvar completion = results.ingestedObjects? results.ingestedObjects : 0;\n-\t\t\t\t\tcompletion += \" / \" + job.total;\n-\t\t\t\t\tjob[\"completion\"] = completion;\n+\n+\t\t\t\tif (jobsWithCounts.includes(jobName) && \"total\" in job) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132bc01fac6cf9a6fc6dd8ef9447ca045065fc9c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzgyNzA5OnYy", "diffSide": "RIGHT", "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyMTo1MFrOHSEXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyMTo1MFrOHSEXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNzk2OA==", "bodyText": "Hmm, with this approach the total count will shrink if you resume the job. It may be easiest to switch the count to be the number of objects being processed rather than the number of files. In that case you should be able to precompute the total (I believe counting the total number of subjects in the model will get you this), and the counts will be in line with most of the other jobs", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r488707968", "createdAt": "2020-09-15T14:21:50Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "diffHunk": "@@ -94,6 +96,7 @@ public void runJob() {\n         // All objects in deposit should have the same destination, so pull storage loc from deposit record\n         try (BinaryTransferSession transferSession = getTransferSession(model)) {\n             transferBinaries(depositBag, transferSession);\n+            setTotalClicks(ingestedObjCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e19b8836ae48e62c60b6394e026a24899f76cc09"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Nzg0ODUyOnYy", "diffSide": "RIGHT", "path": "static/js/admin/src/statusMonitor/DepositMonitor.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyNjoxNlrOHSElHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyNjoxNlrOHSElHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxMTQ1NQ==", "bodyText": "This section looks good.\nWhile testing it, I was finding with so many additional progress numbers showing it was getting a bit hard to differentiate between all the numbers next to each other. Adding some text to split up the progress from the time spent helps a little. Changing the following line:\nhttps://github.com/UNC-Libraries/Carolina-Digital-Repository/blob/fcrepo4/static/templates/admin/statusMonitor/depositMonitorJobDetails.html#L30\nto put \"in\" between progress and time:\n<li><span title=\"<%- job.shortName %>\"><%= job.shortName %></span> <%= job.status %> <%= job.completion %> <% if (job.time) { %> in <%= job.time %> <% } %></li>", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r488711455", "createdAt": "2020-09-15T14:26:16Z", "author": {"login": "bbpennel"}, "path": "static/js/admin/src/statusMonitor/DepositMonitor.js", "diffHunk": "@@ -105,18 +105,19 @@ define('DepositMonitor', [ 'jquery', 'jquery-ui', 'underscore', 'AbstractStatusM\n \t\tif (\"currentJob\" in results) {\n \t\t\tvar currentJob = results.jobs[results.currentJob];\n \t\t}\n-\t\t\n+\n \t\tif (\"jobs\" in results) {\n \t\t\tfor (var index in results.jobs) {\n \t\t\t\tvar job = results.jobs[index];\n \t\t\t\tvar jobName = job.name.substring(job.name.lastIndexOf(\".\") + 1);\n \t\t\t\t\n \t\t\t\tjob[\"shortName\"] = jobName;\n-\t\t\t\t\n-\t\t\t\tif (jobName == \"IngestContentObjectsJob\" && \"total\" in job) {\n-\t\t\t\t\tvar completion = results.ingestedObjects? results.ingestedObjects : 0;\n-\t\t\t\t\tcompletion += \" / \" + job.total;\n-\t\t\t\t\tjob[\"completion\"] = completion;\n+\n+\t\t\t\tvar hasCount = job.num > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e19b8836ae48e62c60b6394e026a24899f76cc09"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODQ0NzcwOnYy", "diffSide": "RIGHT", "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjozNjozNlrOHSKZ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjozNjozNlrOHSKZ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgwNjg3Mg==", "bodyText": "I don't think the click counts will line up with the total anymore, since clicks are still counting number of files while the total is the number of resources. I believe you'll need to move the addClicks call into transferBinaries since that iterates over each resource in the model.", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r488806872", "createdAt": "2020-09-15T16:36:36Z", "author": {"login": "bbpennel"}, "path": "deposit/src/main/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJob.java", "diffHunk": "@@ -91,6 +92,15 @@ public void runJob() {\n         Model model = getReadOnlyModel();\n         Bag depositBag = model.getBag(getDepositPID().getRepositoryPath());\n \n+        // Count how many objects are being deposited\n+        int i = 0;\n+        ResIterator subjectIterator = model.listSubjects();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b437c78e746e3453d344202e02ccda17161d0f70"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Nzc2MzA0OnYy", "diffSide": "LEFT", "path": "deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDoyNzowNlrOHTk_ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDoyNzowNlrOHTk_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5MTA4Mg==", "bodyText": "I think you might have to reset the click count between runs, otherwise the count is going to be higher than the total after a resume. Not sure if trying to skip addClick during a resume would be practical, but maybe its possible?", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r490291082", "createdAt": "2020-09-17T14:27:06Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java", "diffHunk": "@@ -366,7 +366,7 @@ public void depositResumeFailed() throws Exception {\n         assertFitsFileTransferred(postFileResc2);\n \n         verify(jobStatusFactory, times(2)).setTotalCompletion(eq(jobUUID), eq(5));\n-        verify(jobStatusFactory, times(4)).incrCompletion(eq(jobUUID), eq(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "670af5971b77a4894ae88a812ca0be2227e78b82"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjA0MDYzOnYy", "diffSide": "RIGHT", "path": "deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozNTowNlrOHUNZyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMzozNTowNlrOHUNZyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk1MzE2Mw==", "bodyText": "Do you need this reset?", "url": "https://github.com/UNC-Libraries/box-c/pull/1090#discussion_r490953163", "createdAt": "2020-09-18T13:35:06Z", "author": {"login": "bbpennel"}, "path": "deposit/src/test/java/edu/unc/lib/deposit/transfer/TransferBinariesToStorageJobTest.java", "diffHunk": "@@ -268,6 +268,8 @@ public void depositWithMultipleFilesResumed() throws Exception {\n         // First, incomplete run\n         job.run();\n \n+        reset(repoObjFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83231bc38fb6c31dc98b3cd304e4281309b76b09"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 687, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}