{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTY2NTgw", "number": 9215, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxODowMlrOE9XLgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxODowMlrOE9XLgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzc4MzY4OnYy", "diffSide": "RIGHT", "path": "oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationConverter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToxODowMlrOH6A6TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxMTozOVrOH8ffuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NDM4MQ==", "bodyText": "Would it be better to call jwt.getClaimAsString(this.principalClaimName)? The benefit is that the converter would work for principals of other types. I think this aligns with how AbstractAuthenticationToken#getName also coerces the principal into a string.\ncc @jgrandja", "url": "https://github.com/spring-projects/spring-security/pull/9215#discussion_r530594381", "createdAt": "2020-11-25T19:18:02Z", "author": {"login": "jzheaux"}, "path": "oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationConverter.java", "diffHunk": "@@ -43,8 +44,9 @@ public final AbstractAuthenticationToken convert(Jwt jwt) {\n \t\tif (this.principalClaimName == null) {\n \t\t\treturn new JwtAuthenticationToken(jwt, authorities);\n \t\t}\n-\t\tString name = jwt.getClaim(this.principalClaimName);\n-\t\treturn new JwtAuthenticationToken(jwt, authorities, name);\n+\t\tObject principalClaimValue = jwt.getClaim(this.principalClaimName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2ODQ4NA==", "bodyText": "@jzheaux I initially submit this issue to avoid a ClassCastException and I suggested both ideas to achieve this.\nWe went for the other one.\nAfter this, I agree with you that we should keep the alignment with JwtClaimAccessor#getSubject method by using jwt.getClaimAsString(this.principalClaimName). It will also reduce the situation where we can have a ClassCastException.\nI can change the code, just let me know what to do \ud83d\udc4d", "url": "https://github.com/spring-projects/spring-security/pull/9215#discussion_r530668484", "createdAt": "2020-11-25T22:12:18Z", "author": {"login": "omlip"}, "path": "oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationConverter.java", "diffHunk": "@@ -43,8 +44,9 @@ public final AbstractAuthenticationToken convert(Jwt jwt) {\n \t\tif (this.principalClaimName == null) {\n \t\t\treturn new JwtAuthenticationToken(jwt, authorities);\n \t\t}\n-\t\tString name = jwt.getClaim(this.principalClaimName);\n-\t\treturn new JwtAuthenticationToken(jwt, authorities, name);\n+\t\tObject principalClaimValue = jwt.getClaim(this.principalClaimName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NDM4MQ=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5OTUwNQ==", "bodyText": "Makes sense, @omlip.\nYes, let's go ahead and make the change to getClaimAsString. This is also consistent with DefaultOAuth2User#getName which coerces the configured claim into a String.", "url": "https://github.com/spring-projects/spring-security/pull/9215#discussion_r532899505", "createdAt": "2020-11-30T20:59:04Z", "author": {"login": "jzheaux"}, "path": "oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationConverter.java", "diffHunk": "@@ -43,8 +44,9 @@ public final AbstractAuthenticationToken convert(Jwt jwt) {\n \t\tif (this.principalClaimName == null) {\n \t\t\treturn new JwtAuthenticationToken(jwt, authorities);\n \t\t}\n-\t\tString name = jwt.getClaim(this.principalClaimName);\n-\t\treturn new JwtAuthenticationToken(jwt, authorities, name);\n+\t\tObject principalClaimValue = jwt.getClaim(this.principalClaimName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NDM4MQ=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MjYzMw==", "bodyText": "ok thanks, will adapt soon.", "url": "https://github.com/spring-projects/spring-security/pull/9215#discussion_r533192633", "createdAt": "2020-12-01T09:11:39Z", "author": {"login": "omlip"}, "path": "oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/authentication/JwtAuthenticationConverter.java", "diffHunk": "@@ -43,8 +44,9 @@ public final AbstractAuthenticationToken convert(Jwt jwt) {\n \t\tif (this.principalClaimName == null) {\n \t\t\treturn new JwtAuthenticationToken(jwt, authorities);\n \t\t}\n-\t\tString name = jwt.getClaim(this.principalClaimName);\n-\t\treturn new JwtAuthenticationToken(jwt, authorities, name);\n+\t\tObject principalClaimValue = jwt.getClaim(this.principalClaimName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NDM4MQ=="}, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1771, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}