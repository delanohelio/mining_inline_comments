{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NDUwMjM5", "number": 9278, "title": "Introduced DispatcherType request matcher", "bodyText": "Created a DispatcherTypeRequestMatcher and corresponding methods\nfor configuring an HttpSecurity object. This enables filtering of\nsecurity rules based on the dispatcher type of the incoming servlet\nrequest.\nAdditionally, removed duplicative code for parsing HttpMethod objects\nfrom the AntPathRequestMatcher and RegexRequestMatcher.\nCloses gh-9205", "createdAt": "2020-12-11T03:18:32Z", "url": "https://github.com/spring-projects/spring-security/pull/9278", "merged": true, "mergeCommit": {"oid": "5306d4c4d599a41778be2d2f348cccd5aa83ca01"}, "closed": true, "closedAt": "2020-12-14T13:19:24Z", "author": {"login": "nmck257"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk_ocNABqjQwOTgzMjA2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlP5LoABqjQxMDI3MTY4NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjAwMTEx", "url": "https://github.com/spring-projects/spring-security/pull/9278#pullrequestreview-550200111", "createdAt": "2020-12-11T15:30:13Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozMDoxNFrOID9zaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozMjoxM1rOID94_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyOTIyNA==", "bodyText": "Please move any changes that are not directly related to this issue to a different pull request or a different commit within this pull request.", "url": "https://github.com/spring-projects/spring-security/pull/9278#discussion_r541029224", "createdAt": "2020-12-11T15:30:14Z", "author": {"login": "eleftherias"}, "path": "config/src/main/java/org/springframework/security/config/annotation/web/AbstractRequestMatcherRegistry.java", "diffHunk": "@@ -83,7 +87,7 @@ public C anyRequest() {\n \t * @return the object that is chained after creating the {@link RequestMatcher}\n \t */\n \tpublic C antMatchers(HttpMethod method) {\n-\t\treturn antMatchers(method, new String[] { \"/**\" });", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzMDY1Mg==", "bodyText": "Please use a for-loop instead of a Stream.\nThe GC overhead of creating additional objects (including intermediate objects) can cause significant decrease in performance.\nSee #7154 for more details.", "url": "https://github.com/spring-projects/spring-security/pull/9278#discussion_r541030652", "createdAt": "2020-12-11T15:32:13Z", "author": {"login": "eleftherias"}, "path": "config/src/main/java/org/springframework/security/config/annotation/web/AbstractRequestMatcherRegistry.java", "diffHunk": "@@ -206,6 +210,35 @@ public C regexMatchers(String... regexPatterns) {\n \t\treturn chainRequestMatchers(RequestMatchers.regexMatchers(regexPatterns));\n \t}\n \n+\t/**\n+\t * Maps a {@link List} of\n+\t * {@link org.springframework.security.web.util.matcher.DispatcherTypeRequestMatcher}\n+\t * instances.\n+\t * @param method the {@link HttpMethod} to use or {@code null} for any\n+\t * {@link HttpMethod}.\n+\t * @param dispatcherTypes the dispatcher types to match against\n+\t * @return the object that is chained after creating the {@link RequestMatcher}\n+\t */\n+\tpublic C dispatcherTypeMatchers(HttpMethod method, DispatcherType... dispatcherTypes) {\n+\t\tAssert.state(!this.anyRequestConfigured, \"Can't configure dispatcherTypeMatchers after anyRequest\");\n+\t\treturn chainRequestMatchers(Arrays.stream(dispatcherTypes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0838d4df64183cbb0010d48fe106b81528f92914", "author": {"user": {"login": "nmck257", "name": "Nick McKinney"}}, "url": "https://github.com/spring-projects/spring-security/commit/0838d4df64183cbb0010d48fe106b81528f92914", "committedDate": "2020-12-11T22:37:27Z", "message": "Introduced DispatcherType request matcher\n\nCreated a DispatcherTypeRequestMatcher and corresponding methods\nfor configuring an HttpSecurity object. This enables filtering of\nsecurity rules based on the dispatcher type of the incoming servlet\nrequest.\n\nCloses gh-9205"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4325307a01c5bf391df5ad0819d525284266b79", "author": {"user": {"login": "nmck257", "name": "Nick McKinney"}}, "url": "https://github.com/spring-projects/spring-security/commit/b4325307a01c5bf391df5ad0819d525284266b79", "committedDate": "2020-12-11T22:40:55Z", "message": "Minor cleanup on Ant / Regex Request Matchers\n\n - Removed duplicative code for transforming String into HttpMethod\n - Removed an unnecessary array initialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b4325307a01c5bf391df5ad0819d525284266b79", "author": {"user": {"login": "nmck257", "name": "Nick McKinney"}}, "url": "https://github.com/spring-projects/spring-security/commit/b4325307a01c5bf391df5ad0819d525284266b79", "committedDate": "2020-12-11T22:40:55Z", "message": "Minor cleanup on Ant / Regex Request Matchers\n\n - Removed duplicative code for transforming String into HttpMethod\n - Removed an unnecessary array initialization"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4850, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}