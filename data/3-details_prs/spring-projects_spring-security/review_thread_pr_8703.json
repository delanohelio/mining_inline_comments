{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODc3MjYx", "number": 8703, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjo1Nzo1NVrOEGb4AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjo1ODo0OVrOEGb5Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTgzNjE3OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjo1Nzo1NVrOGlOvIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMDoyNFrOGlVnRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MTkzNw==", "bodyText": "Will you please change the copyright to be 2020 for both files?", "url": "https://github.com/spring-projects/spring-security/pull/8703#discussion_r441691937", "createdAt": "2020-06-17T16:57:55Z", "author": {"login": "jzheaux"}, "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "diffHunk": "@@ -98,6 +101,8 @@\n \n \tprivate static final List<String> FORBIDDEN_BACKSLASH = Collections.unmodifiableList(Arrays.asList(\"\\\\\", \"%5c\", \"%5C\"));\n \n+\tprivate static final List<String> FORBIDDEN_NULL = Collections.unmodifiableList(Arrays.asList(\"\\0\", \"%00\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMjcxMQ==", "bodyText": "done!", "url": "https://github.com/spring-projects/spring-security/pull/8703#discussion_r441702711", "createdAt": "2020-06-17T17:16:28Z", "author": {"login": "candrews"}, "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "diffHunk": "@@ -98,6 +101,8 @@\n \n \tprivate static final List<String> FORBIDDEN_BACKSLASH = Collections.unmodifiableList(Arrays.asList(\"\\\\\", \"%5c\", \"%5C\"));\n \n+\tprivate static final List<String> FORBIDDEN_NULL = Collections.unmodifiableList(Arrays.asList(\"\\0\", \"%00\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MTkzNw=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNDYxNQ==", "bodyText": "Since you also changed StrictHttpFirewallTests, will you please change the copyright there, too?", "url": "https://github.com/spring-projects/spring-security/pull/8703#discussion_r441804615", "createdAt": "2020-06-17T20:10:24Z", "author": {"login": "jzheaux"}, "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "diffHunk": "@@ -98,6 +101,8 @@\n \n \tprivate static final List<String> FORBIDDEN_BACKSLASH = Collections.unmodifiableList(Arrays.asList(\"\\\\\", \"%5c\", \"%5C\"));\n \n+\tprivate static final List<String> FORBIDDEN_NULL = Collections.unmodifiableList(Arrays.asList(\"\\0\", \"%00\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MTkzNw=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTgzOTUwOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNjo1ODo0OVrOGlOxTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoxNjoyNFrOGlPZGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MjQ5NA==", "bodyText": "Will you please add a @since 5.4 annotation to this JavaDoc?", "url": "https://github.com/spring-projects/spring-security/pull/8703#discussion_r441692494", "createdAt": "2020-06-17T16:58:49Z", "author": {"login": "jzheaux"}, "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "diffHunk": "@@ -281,6 +287,24 @@ public void setAllowBackSlash(boolean allowBackSlash) {\n \t\t}\n \t}\n \n+\t/**\n+\t * <p>\n+\t * Determines if a null \"\\0\" or a URL encoded nul \"%00\" should be allowed in\n+\t * the path or not. The default is not to allow this behavior because it is a frequent\n+\t * source of security exploits.\n+\t * </p>\n+\t *\n+\t * @param allowNull a null \"\\0\" or a URL encoded null \"%00\" be allowed", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMjY4MQ==", "bodyText": "done!", "url": "https://github.com/spring-projects/spring-security/pull/8703#discussion_r441702681", "createdAt": "2020-06-17T17:16:24Z", "author": {"login": "candrews"}, "path": "web/src/main/java/org/springframework/security/web/firewall/StrictHttpFirewall.java", "diffHunk": "@@ -281,6 +287,24 @@ public void setAllowBackSlash(boolean allowBackSlash) {\n \t\t}\n \t}\n \n+\t/**\n+\t * <p>\n+\t * Determines if a null \"\\0\" or a URL encoded nul \"%00\" should be allowed in\n+\t * the path or not. The default is not to allow this behavior because it is a frequent\n+\t * source of security exploits.\n+\t * </p>\n+\t *\n+\t * @param allowNull a null \"\\0\" or a URL encoded null \"%00\" be allowed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MjQ5NA=="}, "originalCommit": null, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1798, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}