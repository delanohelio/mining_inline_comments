{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MzQwNDQx", "number": 9196, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjo0NlrOE41pww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjo0NlrOE41pww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDM0NzU1OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/springframework/security/web/csrf/CookieCsrfTokenRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToxNjo0NlrOHy_1OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTowNjoxNVrOHzJn8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjY2NA==", "bodyText": "Can you please change this to be cookieMaxAge cannot be zero? As it is, the error the user will see if it is 0 would state it is not zero which would be confusing.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tAssert.isTrue(cookieMaxAge != 0, \"cookieMaxAge is not zero\");\n          \n          \n            \n            \t\tAssert.isTrue(cookieMaxAge != 0, \"cookieMaxAge cannot be zero\");", "url": "https://github.com/spring-projects/spring-security/pull/9196#discussion_r523236664", "createdAt": "2020-11-13T21:16:46Z", "author": {"login": "rwinch"}, "path": "web/src/main/java/org/springframework/security/web/csrf/CookieCsrfTokenRepository.java", "diffHunk": "@@ -192,4 +194,30 @@ public void setSecure(Boolean secure) {\n \t\tthis.secure = secure;\n \t}\n \n+\t/**\n+\t * Sets maximum age in seconds for the cookie that the expected CSRF token is saved to\n+\t * and read from. By default maximum age value is -1.\n+\t *\n+\t * <p>\n+\t * A positive value indicates that the cookie will expire after that many seconds have\n+\t * passed. Note that the value is the <i>maximum</i> age when the cookie will expire,\n+\t * not the cookie's current age.\n+\t *\n+\t * <p>\n+\t * A negative value means that the cookie is not stored persistently and will be\n+\t * deleted when the Web browser exits.\n+\t *\n+\t * <p>\n+\t * A zero value causes the cookie to be deleted immediately therefore it is not a\n+\t * valid value and in that case an {@link IllegalArgumentException} will be thrown.\n+\t * @param cookieMaxAge an integer specifying the maximum age of the cookie in seconds;\n+\t * if negative, means the cookie is not stored; if zero, the method throws an\n+\t * {@link IllegalArgumentException}\n+\t * @since 5.5\n+\t */\n+\tpublic void setCookieMaxAge(int cookieMaxAge) {\n+\t\tAssert.isTrue(cookieMaxAge != 0, \"cookieMaxAge is not zero\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5713ec11b2ac5c55f6f7cce2c30e3682131c6e9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5NzEwNw==", "bodyText": "Thank you for your feedback. In this class there are other assertions written in this way. I've tried to follow the convention in the class. Can I change the other assertions in the same file in order to be consistent?", "url": "https://github.com/spring-projects/spring-security/pull/9196#discussion_r523397107", "createdAt": "2020-11-14T09:06:15Z", "author": {"login": "sedran"}, "path": "web/src/main/java/org/springframework/security/web/csrf/CookieCsrfTokenRepository.java", "diffHunk": "@@ -192,4 +194,30 @@ public void setSecure(Boolean secure) {\n \t\tthis.secure = secure;\n \t}\n \n+\t/**\n+\t * Sets maximum age in seconds for the cookie that the expected CSRF token is saved to\n+\t * and read from. By default maximum age value is -1.\n+\t *\n+\t * <p>\n+\t * A positive value indicates that the cookie will expire after that many seconds have\n+\t * passed. Note that the value is the <i>maximum</i> age when the cookie will expire,\n+\t * not the cookie's current age.\n+\t *\n+\t * <p>\n+\t * A negative value means that the cookie is not stored persistently and will be\n+\t * deleted when the Web browser exits.\n+\t *\n+\t * <p>\n+\t * A zero value causes the cookie to be deleted immediately therefore it is not a\n+\t * valid value and in that case an {@link IllegalArgumentException} will be thrown.\n+\t * @param cookieMaxAge an integer specifying the maximum age of the cookie in seconds;\n+\t * if negative, means the cookie is not stored; if zero, the method throws an\n+\t * {@link IllegalArgumentException}\n+\t * @since 5.5\n+\t */\n+\tpublic void setCookieMaxAge(int cookieMaxAge) {\n+\t\tAssert.isTrue(cookieMaxAge != 0, \"cookieMaxAge is not zero\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjY2NA=="}, "originalCommit": {"oid": "c5713ec11b2ac5c55f6f7cce2c30e3682131c6e9"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}