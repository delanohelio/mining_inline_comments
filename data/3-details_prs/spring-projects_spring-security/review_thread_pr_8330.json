{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NjM4NjQ2", "number": 8330, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODozNDoxNFrODvQUKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODozNDozMFrODvQUhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODc2OTcwOnYy", "diffSide": "RIGHT", "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODozNDoxNFrOGBkxZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzoxNjozNVrOGBtVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA==", "bodyText": "To follow Spring Security conventions, please change Raw password to match the variable name of rawPassword.", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304228", "createdAt": "2020-04-06T18:34:14Z", "author": {"login": "rwinch"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -99,6 +99,10 @@ public BCryptPasswordEncoder(BCryptVersion version, int strength, SecureRandom r\n \t}\n \n \tpublic String encode(CharSequence rawPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDUwMA==", "bodyText": "Please add a test for this use case", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304500", "createdAt": "2020-04-06T18:34:44Z", "author": {"login": "rwinch"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -99,6 +99,10 @@ public BCryptPasswordEncoder(BCryptVersion version, int strength, SecureRandom r\n \t}\n \n \tpublic String encode(CharSequence rawPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NDQ2Mg==", "bodyText": "done", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404444462", "createdAt": "2020-04-06T23:16:35Z", "author": {"login": "alan-czajkowski"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -99,6 +99,10 @@ public BCryptPasswordEncoder(BCryptVersion version, int strength, SecureRandom r\n \t}\n \n \tpublic String encode(CharSequence rawPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDIyOA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODc3MDYyOnYy", "diffSide": "RIGHT", "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODozNDozMFrOGBkx_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzoxNjo0NVrOGBtViQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw==", "bodyText": "To follow Spring Security conventions, please change Raw password to match the variable name of rawPassword.", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304383", "createdAt": "2020-04-06T18:34:30Z", "author": {"login": "rwinch"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -109,6 +113,10 @@ public String encode(CharSequence rawPassword) {\n \t}\n \n \tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDQ3Nw==", "bodyText": "Please add a test for this use case", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404304477", "createdAt": "2020-04-06T18:34:41Z", "author": {"login": "rwinch"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -109,6 +113,10 @@ public String encode(CharSequence rawPassword) {\n \t}\n \n \tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ0NDU1Mw==", "bodyText": "done", "url": "https://github.com/spring-projects/spring-security/pull/8330#discussion_r404444553", "createdAt": "2020-04-06T23:16:45Z", "author": {"login": "alan-czajkowski"}, "path": "crypto/src/main/java/org/springframework/security/crypto/bcrypt/BCryptPasswordEncoder.java", "diffHunk": "@@ -109,6 +113,10 @@ public String encode(CharSequence rawPassword) {\n \t}\n \n \tpublic boolean matches(CharSequence rawPassword, String encodedPassword) {\n+\t\tif (rawPassword == null) {\n+\t\t\tthrow new IllegalArgumentException(\"Raw password cannot be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMwNDM4Mw=="}, "originalCommit": null, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1820, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}