{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Mjc1MDU4", "number": 9137, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDowMToxOFrOEyENfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDowMToxOFrOEyENfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTMzMjQ0OnYy", "diffSide": "RIGHT", "path": "oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/JwtIssuerValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDowMToxOFrOHogNyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1NDowOFrOHotlQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIzMjkwNg==", "bodyText": "Have you already considered\nPredicate<Object> testClaimValue = (claimValue) -> \n        claimValue != null && issuer.equals(claimValue.toString())\nas it simplifies the logic?", "url": "https://github.com/spring-projects/spring-security/pull/9137#discussion_r512232906", "createdAt": "2020-10-26T20:01:18Z", "author": {"login": "jzheaux"}, "path": "oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/JwtIssuerValidator.java", "diffHunk": "@@ -28,15 +31,19 @@\n  */\n public final class JwtIssuerValidator implements OAuth2TokenValidator<Jwt> {\n \n-\tprivate final JwtClaimValidator<String> validator;\n+\tprivate final JwtClaimValidator<Object> validator;\n \n \t/**\n \t * Constructs a {@link JwtIssuerValidator} using the provided parameters\n \t * @param issuer - The issuer that each {@link Jwt} should have.\n \t */\n \tpublic JwtIssuerValidator(String issuer) {\n \t\tAssert.notNull(issuer, \"issuer cannot be null\");\n-\t\tthis.validator = new JwtClaimValidator(JwtClaimNames.ISS, issuer::equals);\n+\n+\t\tPredicate<Object> testClaimValueURL = (", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1MTkwNw==", "bodyText": "Hi Josh, many thanks for your feedback. I simplified the logic as you suggested and pushed a fix-up commit. After the checks succeed I'll squash the commits and change the commit comment having \"Closes ...\".", "url": "https://github.com/spring-projects/spring-security/pull/9137#discussion_r512451907", "createdAt": "2020-10-27T06:54:08Z", "author": {"login": "cmouttet"}, "path": "oauth2/oauth2-jose/src/main/java/org/springframework/security/oauth2/jwt/JwtIssuerValidator.java", "diffHunk": "@@ -28,15 +31,19 @@\n  */\n public final class JwtIssuerValidator implements OAuth2TokenValidator<Jwt> {\n \n-\tprivate final JwtClaimValidator<String> validator;\n+\tprivate final JwtClaimValidator<Object> validator;\n \n \t/**\n \t * Constructs a {@link JwtIssuerValidator} using the provided parameters\n \t * @param issuer - The issuer that each {@link Jwt} should have.\n \t */\n \tpublic JwtIssuerValidator(String issuer) {\n \t\tAssert.notNull(issuer, \"issuer cannot be null\");\n-\t\tthis.validator = new JwtClaimValidator(JwtClaimNames.ISS, issuer::equals);\n+\n+\t\tPredicate<Object> testClaimValueURL = (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIzMjkwNg=="}, "originalCommit": null, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1764, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}