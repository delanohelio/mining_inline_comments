{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTgzOTAz", "number": 8686, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo0MToxNFrOEF-F5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1MjoyMFrOEF-atg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Njk1NjU0OnYy", "diffSide": "RIGHT", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo0MToxNFrOGkesrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTozOTo1NVrOGmOmkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNDg3OQ==", "bodyText": "Would you please add tests to show that the String constructor works, too?", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440904879", "createdAt": "2020-06-16T14:41:14Z", "author": {"login": "jzheaux"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczODMyMQ==", "bodyText": "Hi, I've added one more test to cover the case with String constructor. Please take a look", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442738321", "createdAt": "2020-06-19T09:39:55Z", "author": {"login": "sentinalll"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNDg3OQ=="}, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Njk2MzM3OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/org/springframework/security/web/savedrequest/SimpleSavedRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo0MjozOVrOGkew_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo0MDoxN1rOGmOnPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNTk4Mw==", "bodyText": "Thank you for updating this; however, the Acegi copyright headers are a funny exception to the rule for now. Please leave them as-is.", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440905983", "createdAt": "2020-06-16T14:42:39Z", "author": {"login": "jzheaux"}, "path": "web/src/main/java/org/springframework/security/web/savedrequest/SimpleSavedRequest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004, 2005, 2006 Acegi Technology Pty Limited\n+ * Copyright 2004, 2005, 2006, 2020 Acegi Technology Pty Limited", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczODQ5NQ==", "bodyText": "Okay, I'll revert it.", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442738495", "createdAt": "2020-06-19T09:40:17Z", "author": {"login": "sentinalll"}, "path": "web/src/main/java/org/springframework/security/web/savedrequest/SimpleSavedRequest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2004, 2005, 2006 Acegi Technology Pty Limited\n+ * Copyright 2004, 2005, 2006, 2020 Acegi Technology Pty Limited", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNTk4Mw=="}, "originalCommit": null, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzAwNTMxOnYy", "diffSide": "RIGHT", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1MToyM1rOGkfLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo0MTo1MFrOGmOqJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMjcxMQ==", "bodyText": "Since this is a new test, will you please change these test names to follow this convention:\n{methodName}When{Input}Then{Output}\nYou might also consider consolidating these tests into constructorWhenGivenSavedRequestThenCopies or something similar.", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440912711", "createdAt": "2020-06-16T14:51:23Z", "author": {"login": "jzheaux"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);\n+\t\twhen(savedRequestMock.getMethod()).thenReturn(\"POST\");\n+\t\twhen(savedRequestMock.getCookies()).thenReturn(Collections.singletonList(new Cookie(\"cookiename\", \"cookievalue\")));\n+\t\twhen(savedRequestMock.getHeaderNames()).thenReturn(Collections.singletonList(\"headername\"));\n+\t\twhen(savedRequestMock.getHeaderValues(\"headername\")).thenReturn(Collections.singletonList(\"headervalue\"));\n+\t\twhen(savedRequestMock.getLocales()).thenReturn(Collections.singletonList(Locale.ENGLISH));\n+\t\twhen(savedRequestMock.getParameterMap()).thenReturn(Collections.singletonMap(\"key\", new String[] {\"value\"}));\n+\t\tthis.savedRequest = new SimpleSavedRequest(savedRequestMock);\n+\t}\n+\n+\t@Test\n+\tpublic void getMethod() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczOTIzOQ==", "bodyText": "Thank you for your review. I've changed the test according to your suggestions.", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442739239", "createdAt": "2020-06-19T09:41:50Z", "author": {"login": "sentinalll"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);\n+\t\twhen(savedRequestMock.getMethod()).thenReturn(\"POST\");\n+\t\twhen(savedRequestMock.getCookies()).thenReturn(Collections.singletonList(new Cookie(\"cookiename\", \"cookievalue\")));\n+\t\twhen(savedRequestMock.getHeaderNames()).thenReturn(Collections.singletonList(\"headername\"));\n+\t\twhen(savedRequestMock.getHeaderValues(\"headername\")).thenReturn(Collections.singletonList(\"headervalue\"));\n+\t\twhen(savedRequestMock.getLocales()).thenReturn(Collections.singletonList(Locale.ENGLISH));\n+\t\twhen(savedRequestMock.getParameterMap()).thenReturn(Collections.singletonMap(\"key\", new String[] {\"value\"}));\n+\t\tthis.savedRequest = new SimpleSavedRequest(savedRequestMock);\n+\t}\n+\n+\t@Test\n+\tpublic void getMethod() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMjcxMQ=="}, "originalCommit": null, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzAwOTgyOnYy", "diffSide": "RIGHT", "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1MjoyMFrOGkfOLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo0MjoyOFrOGmOrYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMzQ1NQ==", "bodyText": "Instead of a mock, if you constructed a SimpleSavedRequest with a redirect URL and then called the setters, you'd get a similar outcome while at the same time testing more of the class.", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r440913455", "createdAt": "2020-06-16T14:52:20Z", "author": {"login": "jzheaux"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjczOTU1Mw==", "bodyText": "Improved as suggested", "url": "https://github.com/spring-projects/spring-security/pull/8686#discussion_r442739553", "createdAt": "2020-06-19T09:42:28Z", "author": {"login": "sentinalll"}, "path": "web/src/test/java/org/springframework/security/web/savedrequest/SimpleSavedRequestTests.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2002-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.springframework.security.web.savedrequest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import javax.servlet.http.Cookie;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class SimpleSavedRequestTests {\n+\n+\tprivate SimpleSavedRequest savedRequest;\n+\n+\t@Before\n+\tpublic void setUp() {\n+\t\tSavedRequest savedRequestMock = mock(SavedRequest.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxMzQ1NQ=="}, "originalCommit": null, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1791, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}