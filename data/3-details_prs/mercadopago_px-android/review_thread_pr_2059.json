{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTg1ODY3", "number": 2059, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzowMzowOFrODlCQXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzowMzowOFrODlCQXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTYwODYxOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CardTokenService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzowMzowOFrOFxsYcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzozMjoyMVrOFxtVcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1MTY5OQ==", "bodyText": "Si sale bien o mal, siempre hacemos lo mismo? resolveTokenCreation(token)", "url": "https://github.com/mercadopago/px-android/pull/2059#discussion_r387651699", "createdAt": "2020-03-04T13:03:08Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CardTokenService.java", "diffHunk": "@@ -104,4 +106,24 @@ public void execute(final Callback<Token> callback) {\n             .updateToken(tokenId, paymentSettingRepository.getPublicKey(), paymentSettingRepository.getPrivateKey(),\n                 securityCodeIntent);\n     }\n-}\n+\n+    @Override\n+    public void clearCap(@NonNull final String cardId, @NonNull final ClearCapCallback callback) {\n+        if (TextUtil.isEmpty(paymentSettingRepository.getPrivateKey())) {\n+            callback.execute();\n+            return;\n+        }\n+        gatewayService.clearCap(API_ENVIRONMENT_INIT, cardId, paymentSettingRepository.getPrivateKey())\n+            .enqueue(new Callback<String>() {\n+                @Override\n+                public void success(final String s) {\n+                    callback.execute();\n+                }\n+\n+                @Override\n+                public void failure(final ApiException apiException) {\n+                    callback.execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4664d98fb458efc6514d5f3e93607ea76cc797b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY2NzMxNA==", "bodyText": "Asi es", "url": "https://github.com/mercadopago/px-android/pull/2059#discussion_r387667314", "createdAt": "2020-03-04T13:32:21Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CardTokenService.java", "diffHunk": "@@ -104,4 +106,24 @@ public void execute(final Callback<Token> callback) {\n             .updateToken(tokenId, paymentSettingRepository.getPublicKey(), paymentSettingRepository.getPrivateKey(),\n                 securityCodeIntent);\n     }\n-}\n+\n+    @Override\n+    public void clearCap(@NonNull final String cardId, @NonNull final ClearCapCallback callback) {\n+        if (TextUtil.isEmpty(paymentSettingRepository.getPrivateKey())) {\n+            callback.execute();\n+            return;\n+        }\n+        gatewayService.clearCap(API_ENVIRONMENT_INIT, cardId, paymentSettingRepository.getPrivateKey())\n+            .enqueue(new Callback<String>() {\n+                @Override\n+                public void success(final String s) {\n+                    callback.execute();\n+                }\n+\n+                @Override\n+                public void failure(final ApiException apiException) {\n+                    callback.execute();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY1MTY5OQ=="}, "originalCommit": {"oid": "e4664d98fb458efc6514d5f3e93607ea76cc797b"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1647, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}