{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDA5Nzc0", "number": 2307, "title": "[Enhancement] Se agregan test unitarios", "bodyText": "Motivaci\u00f3n y Contexto\nAgregar tests unitarios en PaymentService y PayButtonViewModel\nDescripci\u00f3n\nC\u00f3mo probarlo\n\n\nScreenshots\n\n\nTipo de cambio (para el release manager)\n\n Breaking change (Fix o feature que cambia una funcionalidad existente o rompe firmas)\n\n\n\n Mi cambio afecta a los integradores internos\n\n\nCompartir conocimiento", "createdAt": "2020-08-28T13:34:09Z", "url": "https://github.com/mercadopago/px-android/pull/2307", "merged": true, "mergeCommit": {"oid": "59cf8f8b8bcc8468c42dc55050f267762a57ffe3"}, "closed": true, "closedAt": "2020-09-01T18:34:32Z", "author": {"login": "jorGonzalez291292"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAubxQAH2gAyNDc1NDA5Nzc0OmU3MzE2YmIzNDRlNzk5Mzg5NTc1YjYyYjNlZWZiMjA3Y2YwNGNkYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEpWNfAFqTQ3OTg3NjIzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e7316bb344e799389575b62b3eefb207cf04cdbd", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/e7316bb344e799389575b62b3eefb207cf04cdbd", "committedDate": "2020-08-20T11:23:12Z", "message": "refactor test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2710ea0486d76d036805c61d8324c567586b97fc", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/2710ea0486d76d036805c61d8324c567586b97fc", "committedDate": "2020-08-25T18:42:20Z", "message": "payment service unit test init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1cd6e18688859b785a6c34a6a38e27f8eb6cc0c", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/e1cd6e18688859b785a6c34a6a38e27f8eb6cc0c", "committedDate": "2020-08-26T14:34:19Z", "message": "refactor test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "739dce39591a581ec029855c87cb437c82e4b2da", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/739dce39591a581ec029855c87cb437c82e4b2da", "committedDate": "2020-08-27T20:43:10Z", "message": "test for payment service added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "218a9a709b28d9bb03c020ee1edfd498adfbbd1f", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/218a9a709b28d9bb03c020ee1edfd498adfbbd1f", "committedDate": "2020-08-27T21:08:10Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/ee1e6926849eda9c411e133c0e5b5fbb2a86e703", "committedDate": "2020-08-28T13:31:27Z", "message": "refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzU2MjIz", "url": "https://github.com/mercadopago/px-android/pull/2307#pullrequestreview-477756223", "createdAt": "2020-08-28T14:04:37Z", "commit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDowNDozN1rOHJHknA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDowNDozN1rOHJHknA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyMzI5Mg==", "bodyText": "por qu\u00e9 cambio el nivel de acceso ac\u00e1?", "url": "https://github.com/mercadopago/px-android/pull/2307#discussion_r479323292", "createdAt": "2020-08-28T14:04:37Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/explode/ExplodeDecorator.java", "diffHunk": "@@ -20,7 +20,7 @@ public static ExplodeDecorator from(@NonNull final PaymentResultType type) {\n     private final int primaryColor;\n     private final int statusIcon;\n \n-    /* default */ ExplodeDecorator(@ColorRes final int primaryColor, @DrawableRes final int statusIcon) {\n+    public ExplodeDecorator(@ColorRes final int primaryColor, @DrawableRes final int statusIcon) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzgzNTYz", "url": "https://github.com/mercadopago/px-android/pull/2307#pullrequestreview-477783563", "createdAt": "2020-08-28T14:38:06Z", "commit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozODowNlrOHJJG1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozODowNlrOHJJG1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0ODQzNg==", "bodyText": "No se puede simplemente castear el return de Mockito.any? en vez de castear el null? deberia tener los mismos resultados, entiendo que el problema es el check del return del any y no el return en s\u00ed", "url": "https://github.com/mercadopago/px-android/pull/2307#discussion_r479348436", "createdAt": "2020-08-28T14:38:06Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/test/java/com/mercadopago/android/px/KFunctionsTest.kt", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.mercadopago.android.px\n+\n+import org.mockito.Mockito\n+\n+\n+/**\n+ * Returns Mockito.any() as nullable type to avoid java.lang.IllegalStateException when\n+ * null is returned.\n+ *\n+ * See https://medium.com/mobile-app-development-publication/befriending-kotlin-and-mockito-1c2e7b0ef791.\n+ * See https://stackoverflow.com/questions/30305217/is-it-possible-to-use-mockito-in-kotlin.\n+ */\n+fun <T> any(type : Class<T>): T {\n+    Mockito.any(type)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad73d2ebf23b1054d34464ff050bd206fa636d23", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/ad73d2ebf23b1054d34464ff050bd206fa636d23", "committedDate": "2020-08-28T14:45:35Z", "message": "review code in KFunctionsTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzkwMDU2", "url": "https://github.com/mercadopago/px-android/pull/2307#pullrequestreview-477790056", "createdAt": "2020-08-28T14:46:11Z", "commit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDo0NjoxMVrOHJJZyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDo0NjoxMVrOHJJZyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1MzI4OQ==", "bodyText": "Me gustaria que hagamos check de con que estamos llamando a la procesadora,\nla idea ser\u00eda: yo inicio un pago en payment service con X medio, espero que se llame a paymentProcessor con tal medio", "url": "https://github.com/mercadopago/px-android/pull/2307#discussion_r479353289", "createdAt": "2020-08-28T14:46:11Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/test/java/com/mercadopago/android/px/internal/datasource/PaymentServiceTest.java", "diffHunk": "@@ -236,15 +255,55 @@ public void whenOneTapPaymentWhenCapNotExceededAndNotApproved() {\n         when(escPaymentManager.hasEsc(card)).thenReturn(true);\n         when(escManagerBehaviour.isESCEnabled()).thenReturn(true);\n \n-        paymentService.attach(handler);\n         paymentService.startExpressPayment(mockPaymentConfiguration(node, payerCost));\n-\n         verify(escPaymentManager).hasEsc(card);\n         verifyNoMoreInteractions(escPaymentManager);\n         verify(tokenRepository).createToken(card);\n         verifyNoMoreInteractions(tokenRepository);\n     }\n \n+    @Test\n+    public void whenOneTapStartPaymentAndPaymentError() {\n+        final Observer<Event<MercadoPagoError>> errorObserver = mock(Observer.class);\n+        when(userSelectionRepository.getPaymentMethod().getPaymentTypeId()).thenReturn(PaymentTypes.CREDIT_CARD);\n+        when(userSelectionRepository.getPayerCost()).thenReturn(null);\n+        when(amountConfigurationRepository.getCurrentConfiguration()).thenReturn(mock(AmountConfiguration.class));\n+\n+        paymentService.handlerWrapper.createTransactionLiveData();\n+        paymentService.getObservableEvents().getPaymentErrorLiveData().observeForever(errorObserver);\n+        paymentService.startPayment();\n+\n+        verify(errorObserver).onChanged(any());\n+    }\n+\n+    @Test\n+    public void whenOneTapStartPaymentAndShouldShowVisualPayment() {\n+        final Observer<Event<Unit>> visualPaymentObserver = mock(Observer.class);\n+        when(userSelectionRepository.hasCardSelected()).thenReturn(true);\n+        when(userSelectionRepository.getPayerCost()).thenReturn(mock(PayerCost.class));\n+        when(paymentSettingRepository.hasToken()).thenReturn(true);\n+        when(paymentSettingRepository.getSecurityType()).thenReturn(SecurityType.SECOND_FACTOR);\n+        when(paymentProcessor.shouldShowFragmentOnPayment(any(CheckoutPreference.class))).thenReturn(true);\n+\n+        paymentService.handlerWrapper.createTransactionLiveData();\n+        paymentService.getObservableEvents().getVisualPaymentLiveData().observeForever(visualPaymentObserver);\n+        paymentService.startPayment();\n+\n+        verify(visualPaymentObserver).onChanged(any());\n+    }\n+\n+    @Test\n+    public void whenOneTapPaymentWhenHasTokenAndPaymentSuccess() {\n+        savedCreditCardOneTapPresent(CARD_ID_ESC_NOT_AVAILABLE);\n+        when(paymentSettingRepository.hasToken()).thenReturn(true);\n+        when(paymentSettingRepository.getSecurityType()).thenReturn(SecurityType.SECOND_FACTOR);\n+        when(paymentProcessor.shouldShowFragmentOnPayment(any(CheckoutPreference.class))).thenReturn(false);\n+        when(amountConfigurationRepository.getCurrentConfiguration()).thenReturn(mock(AmountConfiguration.class));\n+\n+        paymentService.startExpressPayment(mockPaymentConfiguration(node, payerCost));\n+        verify(paymentProcessor).startPayment(any(), any(), any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee1e6926849eda9c411e133c0e5b5fbb2a86e703"}, "originalPosition": 220}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2df932659fffd911247288615c8d48050cc4dfbb", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/2df932659fffd911247288615c8d48050cc4dfbb", "committedDate": "2020-08-28T15:23:38Z", "message": "enhancement test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODQzMzQy", "url": "https://github.com/mercadopago/px-android/pull/2307#pullrequestreview-477843342", "createdAt": "2020-08-28T15:54:59Z", "commit": {"oid": "2df932659fffd911247288615c8d48050cc4dfbb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1NDo1OVrOHJL0HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo1NDo1OVrOHJL0HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5Mjc5Ng==", "bodyText": "el expected tiene que ser lo que le estas pasando a service, en la linea 313", "url": "https://github.com/mercadopago/px-android/pull/2307#discussion_r479392796", "createdAt": "2020-08-28T15:54:59Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/test/java/com/mercadopago/android/px/internal/datasource/PaymentServiceTest.java", "diffHunk": "@@ -236,15 +262,66 @@ public void whenOneTapPaymentWhenCapNotExceededAndNotApproved() {\n         when(escPaymentManager.hasEsc(card)).thenReturn(true);\n         when(escManagerBehaviour.isESCEnabled()).thenReturn(true);\n \n-        paymentService.attach(handler);\n         paymentService.startExpressPayment(mockPaymentConfiguration(node, payerCost));\n-\n         verify(escPaymentManager).hasEsc(card);\n         verifyNoMoreInteractions(escPaymentManager);\n         verify(tokenRepository).createToken(card);\n         verifyNoMoreInteractions(tokenRepository);\n     }\n \n+    @Test\n+    public void whenOneTapStartPaymentAndPaymentError() {\n+        final Observer<Event<MercadoPagoError>> errorObserver = mock(Observer.class);\n+        when(userSelectionRepository.getPaymentMethod().getPaymentTypeId()).thenReturn(PaymentTypes.CREDIT_CARD);\n+        when(userSelectionRepository.getPayerCost()).thenReturn(null);\n+        when(amountConfigurationRepository.getCurrentConfiguration()).thenReturn(mock(AmountConfiguration.class));\n+\n+        paymentService.handlerWrapper.createTransactionLiveData();\n+        paymentService.getObservableEvents().getPaymentErrorLiveData().observeForever(errorObserver);\n+        paymentService.startPayment();\n+\n+        verify(errorObserver).onChanged(any());\n+    }\n+\n+    @Test\n+    public void whenOneTapStartPaymentAndShouldShowVisualPayment() {\n+        final Observer<Event<Unit>> visualPaymentObserver = mock(Observer.class);\n+        when(userSelectionRepository.hasCardSelected()).thenReturn(true);\n+        when(userSelectionRepository.getPayerCost()).thenReturn(mock(PayerCost.class));\n+        when(paymentSettingRepository.hasToken()).thenReturn(true);\n+        when(paymentSettingRepository.getSecurityType()).thenReturn(SecurityType.SECOND_FACTOR);\n+        when(paymentProcessor.shouldShowFragmentOnPayment(any(CheckoutPreference.class))).thenReturn(true);\n+\n+        paymentService.handlerWrapper.createTransactionLiveData();\n+        paymentService.getObservableEvents().getVisualPaymentLiveData().observeForever(visualPaymentObserver);\n+        paymentService.startPayment();\n+\n+        verify(visualPaymentObserver).onChanged(any());\n+    }\n+\n+    @Test\n+    public void whenOneTapPaymentWhenHasTokenAndPaymentSuccess() {\n+        final KArgumentCaptor<SplitPaymentProcessor.CheckoutData> captor = argumentCaptor(SplitPaymentProcessor.CheckoutData.class);\n+\n+        savedCreditCardOneTapPresent(CARD_ID_ESC_NOT_AVAILABLE);\n+        when(paymentSettingRepository.hasToken()).thenReturn(true);\n+        when(paymentSettingRepository.getSecurityType()).thenReturn(SecurityType.SECOND_FACTOR);\n+        when(paymentProcessor.shouldShowFragmentOnPayment(any(CheckoutPreference.class))).thenReturn(false);\n+        when(amountConfigurationRepository.getCurrentConfiguration()).thenReturn(mock(AmountConfiguration.class));\n+\n+\n+        paymentService.startExpressPayment(mockPaymentConfiguration(node, payerCost));\n+        verify(paymentProcessor).startPayment(any(), captor.capture() , any());\n+\n+        final PaymentMethod actualPm = captor.getValue().paymentDataList.get(0).getPaymentMethod();\n+        final PaymentMethod expectedPm = paymentService.getPaymentDataList().get(0).getPaymentMethod();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2df932659fffd911247288615c8d48050cc4dfbb"}, "originalPosition": 246}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01067e319ea578a998785e3f5239822398ae7a5c", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/01067e319ea578a998785e3f5239822398ae7a5c", "committedDate": "2020-08-28T21:29:33Z", "message": "payment method mapper test added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a79289f24845b579619ee9b34f2de8a2f4d921e", "author": {"user": {"login": "jorGonzalez291292", "name": "Jorge Daniel Gonzalez"}}, "url": "https://github.com/mercadopago/px-android/commit/3a79289f24845b579619ee9b34f2de8a2f4d921e", "committedDate": "2020-09-01T15:08:16Z", "message": "review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODc2MjM1", "url": "https://github.com/mercadopago/px-android/pull/2307#pullrequestreview-479876235", "createdAt": "2020-09-01T15:43:18Z", "commit": {"oid": "3a79289f24845b579619ee9b34f2de8a2f4d921e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3749, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}