{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjcwNDY2", "number": 2072, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMToyOToyN1rODpSRVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjoxNjozM1rODpTB1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjE3NTU2OnYy", "diffSide": "RIGHT", "path": "px-checkout/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMToyOToyN1rOF4Xj1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMToyOToyN1rOF4Xj1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1MDU4Mw==", "bodyText": "Est\u00e1 repetida, flashe\u00f3 el IDE", "url": "https://github.com/mercadopago/px-android/pull/2072#discussion_r394650583", "createdAt": "2020-03-18T21:29:27Z", "author": {"login": "guchito9"}, "path": "px-checkout/build.gradle", "diffHunk": "@@ -12,6 +12,7 @@ android {\n }\n \n dependencies {\n+    implementation 'com.android.support:support-v4:28.0.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb7978b22d132e925a0ee1d6374eec700934a41"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjE4OTYzOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentFragment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTozNDozOVrOF4Xszw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTozNDozOVrOF4Xszw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1Mjg3OQ==", "bodyText": "Fijate de sacar los NotNull, te los pone por default el IDE cuando implement\u00e1s un m\u00e9todo de Kotlin", "url": "https://github.com/mercadopago/px-android/pull/2072#discussion_r394652879", "createdAt": "2020-03-18T21:34:39Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentFragment.java", "diffHunk": "@@ -83,32 +68,29 @@\n import com.mercadopago.android.px.model.StatusMetadata;\n import com.mercadopago.android.px.model.exceptions.MercadoPagoError;\n import com.mercadopago.android.px.model.internal.DisabledPaymentMethod;\n-import com.mercadopago.android.px.tracking.internal.model.Reason;\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration;\n+import com.mercadopago.android.px.tracking.internal.model.ConfirmData;\n import java.util.Arrays;\n import java.util.List;\n+import org.jetbrains.annotations.NotNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb7978b22d132e925a0ee1d6374eec700934a41"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjI5OTc1OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonViewModel.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMjoxNjozM1rOF4YyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDoyMjozOFrOF4bsOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY3MDcxMw==", "bodyText": "El postValue se usa para devolver datos desde background al main thread.\nSe tiene que usar el setValue o en este caso value.\nFuente", "url": "https://github.com/mercadopago/px-android/pull/2072#discussion_r394670713", "createdAt": "2020-03-18T22:16:33Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonViewModel.kt", "diffHunk": "@@ -0,0 +1,137 @@\n+package com.mercadopago.android.px.internal.features.pay_button\n+\n+import android.arch.lifecycle.MutableLiveData\n+import com.mercadopago.android.px.addons.model.SecurityValidationData\n+import com.mercadopago.android.px.internal.base.BaseViewModel\n+import com.mercadopago.android.px.internal.core.ConnectionHelper\n+import com.mercadopago.android.px.internal.core.ProductIdProvider\n+import com.mercadopago.android.px.internal.features.explode.ExplodeDecoratorMapper\n+import com.mercadopago.android.px.internal.repository.PaymentRepository\n+import com.mercadopago.android.px.internal.repository.PaymentSettingRepository\n+import com.mercadopago.android.px.internal.util.ApiUtil\n+import com.mercadopago.android.px.internal.util.SecurityValidationDataFactory\n+import com.mercadopago.android.px.internal.viewmodel.mappers.PayButtonViewModelMapper\n+import com.mercadopago.android.px.model.Card\n+import com.mercadopago.android.px.model.IPaymentDescriptor\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.exceptions.MercadoPagoError\n+import com.mercadopago.android.px.model.exceptions.NoConnectivityException\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.events.ConfirmEvent\n+import com.mercadopago.android.px.tracking.internal.events.FrictionEventTracker\n+import com.mercadopago.android.px.tracking.internal.model.ConfirmData\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+import com.mercadopago.android.px.tracking.internal.views.OneTapViewTracker\n+import com.mercadopago.android.px.internal.viewmodel.PayButtonViewModel as ButtonConfig\n+\n+internal class PayButtonViewModel(\n+    private var paymentService: PaymentRepository,\n+    private var productIdProvider: ProductIdProvider,\n+    private var connectionHelper: ConnectionHelper,\n+    paymentSettingRepository: PaymentSettingRepository) : BaseViewModel(), PayButton.ViewModel {\n+\n+    private var confirmTrackerData: ConfirmData? = null\n+    private var paymentConfiguration: PaymentConfiguration? = null\n+\n+    val buttonTextLiveData = MutableLiveData<ButtonConfig>()\n+    val paymentStartedLiveData = MutableLiveData<Pair<Int, ButtonConfig>>()\n+    val cvvRequiredLiveData = MutableLiveData<Pair<Card, Reason>>()\n+    val recoverRequiredLiveData = MutableLiveData<PaymentRecovery>()\n+    val stateUILiveData = MutableLiveData<PayButtonState>()\n+\n+    private var buttonConfig: ButtonConfig = PayButtonViewModelMapper().map(\n+        paymentSettingRepository.advancedConfiguration.customStringConfiguration)\n+\n+    init {\n+        buttonTextLiveData.postValue(buttonConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5c778ba481ce28e1958ce309491f158cacae875"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcxODI2NQ==", "bodyText": "Gracias georgeo", "url": "https://github.com/mercadopago/px-android/pull/2072#discussion_r394718265", "createdAt": "2020-03-19T00:22:38Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/pay_button/PayButtonViewModel.kt", "diffHunk": "@@ -0,0 +1,137 @@\n+package com.mercadopago.android.px.internal.features.pay_button\n+\n+import android.arch.lifecycle.MutableLiveData\n+import com.mercadopago.android.px.addons.model.SecurityValidationData\n+import com.mercadopago.android.px.internal.base.BaseViewModel\n+import com.mercadopago.android.px.internal.core.ConnectionHelper\n+import com.mercadopago.android.px.internal.core.ProductIdProvider\n+import com.mercadopago.android.px.internal.features.explode.ExplodeDecoratorMapper\n+import com.mercadopago.android.px.internal.repository.PaymentRepository\n+import com.mercadopago.android.px.internal.repository.PaymentSettingRepository\n+import com.mercadopago.android.px.internal.util.ApiUtil\n+import com.mercadopago.android.px.internal.util.SecurityValidationDataFactory\n+import com.mercadopago.android.px.internal.viewmodel.mappers.PayButtonViewModelMapper\n+import com.mercadopago.android.px.model.Card\n+import com.mercadopago.android.px.model.IPaymentDescriptor\n+import com.mercadopago.android.px.model.PaymentRecovery\n+import com.mercadopago.android.px.model.exceptions.MercadoPagoError\n+import com.mercadopago.android.px.model.exceptions.NoConnectivityException\n+import com.mercadopago.android.px.model.internal.PaymentConfiguration\n+import com.mercadopago.android.px.tracking.internal.events.ConfirmEvent\n+import com.mercadopago.android.px.tracking.internal.events.FrictionEventTracker\n+import com.mercadopago.android.px.tracking.internal.model.ConfirmData\n+import com.mercadopago.android.px.tracking.internal.model.Reason\n+import com.mercadopago.android.px.tracking.internal.views.OneTapViewTracker\n+import com.mercadopago.android.px.internal.viewmodel.PayButtonViewModel as ButtonConfig\n+\n+internal class PayButtonViewModel(\n+    private var paymentService: PaymentRepository,\n+    private var productIdProvider: ProductIdProvider,\n+    private var connectionHelper: ConnectionHelper,\n+    paymentSettingRepository: PaymentSettingRepository) : BaseViewModel(), PayButton.ViewModel {\n+\n+    private var confirmTrackerData: ConfirmData? = null\n+    private var paymentConfiguration: PaymentConfiguration? = null\n+\n+    val buttonTextLiveData = MutableLiveData<ButtonConfig>()\n+    val paymentStartedLiveData = MutableLiveData<Pair<Int, ButtonConfig>>()\n+    val cvvRequiredLiveData = MutableLiveData<Pair<Card, Reason>>()\n+    val recoverRequiredLiveData = MutableLiveData<PaymentRecovery>()\n+    val stateUILiveData = MutableLiveData<PayButtonState>()\n+\n+    private var buttonConfig: ButtonConfig = PayButtonViewModelMapper().map(\n+        paymentSettingRepository.advancedConfiguration.customStringConfiguration)\n+\n+    init {\n+        buttonTextLiveData.postValue(buttonConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY3MDcxMw=="}, "originalCommit": {"oid": "d5c778ba481ce28e1958ce309491f158cacae875"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1656, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}