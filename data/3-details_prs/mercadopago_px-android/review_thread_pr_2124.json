{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjU2MzUz", "number": 2124, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo1OTo0MFrOD5frAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowNDoxNFrOD5fx2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjE0MzM4OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo1OTo0MVrOGQy6NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTowNDowNFrOGULKyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NDUwMA==", "bodyText": "Podemos utilizar el contructor bueno ac\u00e1, no?", "url": "https://github.com/mercadopago/px-android/pull/2124#discussion_r420264500", "createdAt": "2020-05-05T16:59:41Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "diffHunk": "@@ -0,0 +1,100 @@\n+package com.mercadopago.android.px.configuration\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.core.PaymentMethodPlugin\n+import com.mercadopago.android.px.core.PaymentProcessor\n+import com.mercadopago.android.px.core.SplitPaymentProcessor\n+import com.mercadopago.android.px.core.internal.CheckoutDataMapper\n+import com.mercadopago.android.px.core.internal.PaymentListenerMapper\n+import com.mercadopago.android.px.core.internal.PaymentProcessorMapper\n+import com.mercadopago.android.px.model.commission.PaymentTypeChargeRule\n+import java.util.*\n+\n+class PaymentConfiguration private constructor(val charges: ArrayList<PaymentTypeChargeRule>,\n+    val paymentProcessor: SplitPaymentProcessor) : Parcelable {\n+\n+    private constructor(builder: Builder): this(\n+        builder.charges, builder.paymentProcessor\n+    )\n+\n+    constructor(parcel: Parcel) : this(\n+        parcel.createTypedArrayList(PaymentTypeChargeRule.CREATOR)!!,\n+        parcel.readParcelable(SplitPaymentProcessor::class.java.classLoader)!!\n+    )\n+\n+    @Deprecated(\"\")\n+    val discountConfiguration:DiscountConfiguration? = null\n+\n+    @Deprecated(\"\")\n+    val paymentMethodPluginList:Collection<PaymentMethodPlugin> = ArrayList()\n+\n+    class Builder {\n+        val paymentProcessor: SplitPaymentProcessor\n+        val charges: ArrayList<PaymentTypeChargeRule>\n+\n+        /**\n+         * @param paymentProcessor your custom payment processor.\n+         */\n+        constructor(paymentProcessor: SplitPaymentProcessor) {\n+            this.paymentProcessor = paymentProcessor\n+            charges = ArrayList()\n+        }\n+\n+        /**\n+         * @param paymentProcessor your custom payment processor.\n+         */\n+        @Deprecated(\"you should migrate to split payment processor\")\n+        constructor(paymentProcessor: PaymentProcessor) {\n+            this.paymentProcessor = PaymentProcessorMapper(PaymentListenerMapper(), CheckoutDataMapper())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27d975099b2b2ed444a24f77de30038cd05ce942"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwNzY5MA==", "bodyText": "Si. (?)", "url": "https://github.com/mercadopago/px-android/pull/2124#discussion_r423807690", "createdAt": "2020-05-12T15:04:04Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "diffHunk": "@@ -0,0 +1,100 @@\n+package com.mercadopago.android.px.configuration\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.core.PaymentMethodPlugin\n+import com.mercadopago.android.px.core.PaymentProcessor\n+import com.mercadopago.android.px.core.SplitPaymentProcessor\n+import com.mercadopago.android.px.core.internal.CheckoutDataMapper\n+import com.mercadopago.android.px.core.internal.PaymentListenerMapper\n+import com.mercadopago.android.px.core.internal.PaymentProcessorMapper\n+import com.mercadopago.android.px.model.commission.PaymentTypeChargeRule\n+import java.util.*\n+\n+class PaymentConfiguration private constructor(val charges: ArrayList<PaymentTypeChargeRule>,\n+    val paymentProcessor: SplitPaymentProcessor) : Parcelable {\n+\n+    private constructor(builder: Builder): this(\n+        builder.charges, builder.paymentProcessor\n+    )\n+\n+    constructor(parcel: Parcel) : this(\n+        parcel.createTypedArrayList(PaymentTypeChargeRule.CREATOR)!!,\n+        parcel.readParcelable(SplitPaymentProcessor::class.java.classLoader)!!\n+    )\n+\n+    @Deprecated(\"\")\n+    val discountConfiguration:DiscountConfiguration? = null\n+\n+    @Deprecated(\"\")\n+    val paymentMethodPluginList:Collection<PaymentMethodPlugin> = ArrayList()\n+\n+    class Builder {\n+        val paymentProcessor: SplitPaymentProcessor\n+        val charges: ArrayList<PaymentTypeChargeRule>\n+\n+        /**\n+         * @param paymentProcessor your custom payment processor.\n+         */\n+        constructor(paymentProcessor: SplitPaymentProcessor) {\n+            this.paymentProcessor = paymentProcessor\n+            charges = ArrayList()\n+        }\n+\n+        /**\n+         * @param paymentProcessor your custom payment processor.\n+         */\n+        @Deprecated(\"you should migrate to split payment processor\")\n+        constructor(paymentProcessor: PaymentProcessor) {\n+            this.paymentProcessor = PaymentProcessorMapper(PaymentListenerMapper(), CheckoutDataMapper())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NDUwMA=="}, "originalCommit": {"oid": "27d975099b2b2ed444a24f77de30038cd05ce942"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjE2MDkwOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzowNDoxNFrOGQzFPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTowMzozN1rOGULJpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NzMyNA==", "bodyText": "Creo que sin el .CREATOR es suficiente", "url": "https://github.com/mercadopago/px-android/pull/2124#discussion_r420267324", "createdAt": "2020-05-05T17:04:14Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "diffHunk": "@@ -0,0 +1,100 @@\n+package com.mercadopago.android.px.configuration\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.core.PaymentMethodPlugin\n+import com.mercadopago.android.px.core.PaymentProcessor\n+import com.mercadopago.android.px.core.SplitPaymentProcessor\n+import com.mercadopago.android.px.core.internal.CheckoutDataMapper\n+import com.mercadopago.android.px.core.internal.PaymentListenerMapper\n+import com.mercadopago.android.px.core.internal.PaymentProcessorMapper\n+import com.mercadopago.android.px.model.commission.PaymentTypeChargeRule\n+import java.util.*\n+\n+class PaymentConfiguration private constructor(val charges: ArrayList<PaymentTypeChargeRule>,\n+    val paymentProcessor: SplitPaymentProcessor) : Parcelable {\n+\n+    private constructor(builder: Builder): this(\n+        builder.charges, builder.paymentProcessor\n+    )\n+\n+    constructor(parcel: Parcel) : this(\n+        parcel.createTypedArrayList(PaymentTypeChargeRule.CREATOR)!!,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27d975099b2b2ed444a24f77de30038cd05ce942"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwNzM5Nw==", "bodyText": "No. (?)", "url": "https://github.com/mercadopago/px-android/pull/2124#discussion_r423807397", "createdAt": "2020-05-12T15:03:37Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/configuration/PaymentConfiguration.kt", "diffHunk": "@@ -0,0 +1,100 @@\n+package com.mercadopago.android.px.configuration\n+\n+import android.os.Parcel\n+import android.os.Parcelable\n+import com.mercadopago.android.px.core.PaymentMethodPlugin\n+import com.mercadopago.android.px.core.PaymentProcessor\n+import com.mercadopago.android.px.core.SplitPaymentProcessor\n+import com.mercadopago.android.px.core.internal.CheckoutDataMapper\n+import com.mercadopago.android.px.core.internal.PaymentListenerMapper\n+import com.mercadopago.android.px.core.internal.PaymentProcessorMapper\n+import com.mercadopago.android.px.model.commission.PaymentTypeChargeRule\n+import java.util.*\n+\n+class PaymentConfiguration private constructor(val charges: ArrayList<PaymentTypeChargeRule>,\n+    val paymentProcessor: SplitPaymentProcessor) : Parcelable {\n+\n+    private constructor(builder: Builder): this(\n+        builder.charges, builder.paymentProcessor\n+    )\n+\n+    constructor(parcel: Parcel) : this(\n+        parcel.createTypedArrayList(PaymentTypeChargeRule.CREATOR)!!,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI2NzMyNA=="}, "originalCommit": {"oid": "27d975099b2b2ed444a24f77de30038cd05ce942"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1690, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}