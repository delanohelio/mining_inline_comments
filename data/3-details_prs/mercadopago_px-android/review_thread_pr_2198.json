{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NjcwNDIw", "number": 2198, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNDo0M1rOEG25iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNTowOFrOEG26FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjI2Mzc5OnYy", "diffSide": "RIGHT", "path": "px-addons/src/main/java/com/mercadopago/android/px/addons/model/Track.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNDo0M1rOGl6e-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNDo0M1rOGl6e-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwODY5OA==", "bodyText": "Esto te lo comiste no?", "url": "https://github.com/mercadopago/px-android/pull/2198#discussion_r442408698", "createdAt": "2020-06-18T18:04:43Z", "author": {"login": "guchito9"}, "path": "px-addons/src/main/java/com/mercadopago/android/px/addons/model/Track.kt", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.mercadopago.android.px.addons.model\n+\n+import com.mercadopago.android.px.addons.model.internal.Experiment\n+\n+class Track(builder: Builder) {\n+\n+    private val trackersMask: Long\n+    val applicationContext: String\n+    val type: Type\n+    val path: String\n+    val data: Map<String, Any>\n+    val experiments: List<Experiment>\n+\n+    init {\n+        applicationContext = builder.applicationContext\n+        type = builder.type\n+        path = builder.path\n+        data = builder.data\n+        experiments = builder.experiments.toList()\n+        trackersMask = builder.trackersMask\n+    }\n+\n+    fun send(trackerWrapper: List<TrackerWrapper>) = trackerWrapper.map { it.internalSend(this) }\n+\n+    internal fun shouldTrack(tracker: Tracker) = tracker.shouldTrack(trackersMask)\n+\n+    abstract class TrackerWrapper {\n+        abstract val tracker: Tracker\n+        internal fun internalSend(track: Track) {\n+            if (track.shouldTrack(tracker)) {\n+                send(track)\n+            }\n+        }\n+\n+        abstract fun send(track: Track)\n+    }\n+\n+    enum class Type {\n+        VIEW,\n+        EVENT\n+    }\n+\n+    enum class Tracker(val bit: Long) {\n+        MELIDATA(1 shl 0),\n+        GOOGLE_ANALYTICS(1 shl 1),\n+        X(1 shl 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d157759b7d66f71bca1a5af6d93c0e695fcf7b9"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjI2NTE3OnYy", "diffSide": "RIGHT", "path": "px-addons/src/main/java/com/mercadopago/android/px/addons/model/Track.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNTowOFrOGl6f1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODozNzozNlrOGl7kdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwODkxOQ==", "bodyText": "y esto?", "url": "https://github.com/mercadopago/px-android/pull/2198#discussion_r442408919", "createdAt": "2020-06-18T18:05:08Z", "author": {"login": "jorGonzalez291292"}, "path": "px-addons/src/main/java/com/mercadopago/android/px/addons/model/Track.kt", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.mercadopago.android.px.addons.model\n+\n+import com.mercadopago.android.px.addons.model.internal.Experiment\n+\n+class Track(builder: Builder) {\n+\n+    private val trackersMask: Long\n+    val applicationContext: String\n+    val type: Type\n+    val path: String\n+    val data: Map<String, Any>\n+    val experiments: List<Experiment>\n+\n+    init {\n+        applicationContext = builder.applicationContext\n+        type = builder.type\n+        path = builder.path\n+        data = builder.data\n+        experiments = builder.experiments.toList()\n+        trackersMask = builder.trackersMask\n+    }\n+\n+    fun send(trackerWrapper: List<TrackerWrapper>) = trackerWrapper.map { it.internalSend(this) }\n+\n+    internal fun shouldTrack(tracker: Tracker) = tracker.shouldTrack(trackersMask)\n+\n+    abstract class TrackerWrapper {\n+        abstract val tracker: Tracker\n+        internal fun internalSend(track: Track) {\n+            if (track.shouldTrack(tracker)) {\n+                send(track)\n+            }\n+        }\n+\n+        abstract fun send(track: Track)\n+    }\n+\n+    enum class Type {\n+        VIEW,\n+        EVENT\n+    }\n+\n+    enum class Tracker(val bit: Long) {\n+        MELIDATA(1 shl 0),\n+        GOOGLE_ANALYTICS(1 shl 1),\n+        X(1 shl 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d157759b7d66f71bca1a5af6d93c0e695fcf7b9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyNjQ4NA==", "bodyText": "qued\u00f3 de la demo", "url": "https://github.com/mercadopago/px-android/pull/2198#discussion_r442426484", "createdAt": "2020-06-18T18:37:36Z", "author": {"login": "cgaggino"}, "path": "px-addons/src/main/java/com/mercadopago/android/px/addons/model/Track.kt", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.mercadopago.android.px.addons.model\n+\n+import com.mercadopago.android.px.addons.model.internal.Experiment\n+\n+class Track(builder: Builder) {\n+\n+    private val trackersMask: Long\n+    val applicationContext: String\n+    val type: Type\n+    val path: String\n+    val data: Map<String, Any>\n+    val experiments: List<Experiment>\n+\n+    init {\n+        applicationContext = builder.applicationContext\n+        type = builder.type\n+        path = builder.path\n+        data = builder.data\n+        experiments = builder.experiments.toList()\n+        trackersMask = builder.trackersMask\n+    }\n+\n+    fun send(trackerWrapper: List<TrackerWrapper>) = trackerWrapper.map { it.internalSend(this) }\n+\n+    internal fun shouldTrack(tracker: Tracker) = tracker.shouldTrack(trackersMask)\n+\n+    abstract class TrackerWrapper {\n+        abstract val tracker: Tracker\n+        internal fun internalSend(track: Track) {\n+            if (track.shouldTrack(tracker)) {\n+                send(track)\n+            }\n+        }\n+\n+        abstract fun send(track: Track)\n+    }\n+\n+    enum class Type {\n+        VIEW,\n+        EVENT\n+    }\n+\n+    enum class Tracker(val bit: Long) {\n+        MELIDATA(1 shl 0),\n+        GOOGLE_ANALYTICS(1 shl 1),\n+        X(1 shl 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwODkxOQ=="}, "originalCommit": {"oid": "7d157759b7d66f71bca1a5af6d93c0e695fcf7b9"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1843, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}