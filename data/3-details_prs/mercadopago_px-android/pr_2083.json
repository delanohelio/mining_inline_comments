{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTI0MDkw", "number": 2083, "title": "[feature] ifpe modals", "bodyText": "Se agrega logica para generar modals dinamicamente con informaci\u00f3n de backend, dependiendo de donde el usuario interacciona con el checkout, se podr\u00eda mostrar un modal u otro, para esto se introduce el concepto de CheckoutBehaviour.\nLas interacciones soportadas para mostrar modals son:\n\nswitch_split (no implementada en este PR y su implementaci\u00f3n podr\u00eda cambiar la l\u00f3gica de custom actions)\ntap_pay (implementada en PR)\ntap_card (no se usa pero la implementacion del PR soporta esta interaccion)\nstart_checkout - (no implementado en este PR pero no deberia diferir de la logica de tap_pay)\n\nAcciones en los modals\n\nLos modals cuentan con al menos una acci\u00f3n la cual puede ser un deep link o una acci\u00f3n custom\nSi contara con dos acciones, siempre una va a ser un deep link y la otra una acci\u00f3n custom, el orden es tambien determinado por backend\n\nLas acciones custom depende de los medios que dispone el usuario y el estado de los mismos, esto esta manejado del lado del front pero creo que deberia venir de backend a futuro\nAcciones custom soportadas en PR:\n\npay_with_other_method\npay_with_offline_method\nadd_new_card", "createdAt": "2020-03-25T11:08:25Z", "url": "https://github.com/mercadopago/px-android/pull/2083", "merged": true, "mergeCommit": {"oid": "b6af0e445ccc0b3f0b2751411b32d1af58814310"}, "closed": true, "closedAt": "2020-03-26T14:28:15Z", "author": {"login": "cgaggino"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRGGhegFqTM4MTA3NTI4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRctwhgBqjMxNjg0MjQwOTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDc1Mjgy", "url": "https://github.com/mercadopago/px-android/pull/2083#pullrequestreview-381075282", "createdAt": "2020-03-25T11:49:21Z", "commit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo0OToyMVrOF7Xelg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo0OToyMVrOF7Xelg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5NDk2Ng==", "bodyText": "Pareciera que no hace falta tantos types, pero en realidad el de add new card deberia hacer otra cosa (ir directamente a card form) en comparaci\u00f3n a los otros dos, ademas falta otro action que es el de PAY_WITHOUT_SPLIT que tendria la l\u00f3gica tambien de desactivar el split", "url": "https://github.com/mercadopago/px-android/pull/2083#discussion_r397794966", "createdAt": "2020-03-25T11:49:21Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -421,6 +446,18 @@ public void requireCurrentConfiguration(@NonNull PayButton.OnReadyForPaymentCall\n         callback.call(currentPaymentConfiguration, confirmTrackerData);\n     }\n \n+    @Override\n+    public void handleGenericDialogAction(@NonNull @GenericDialog.ActionType final String type) {\n+        switch (type) {\n+        case GenericDialog.ActionType.PAY_WITH_OTHER_METHOD:\n+        case GenericDialog.ActionType.PAY_WITH_OFFLINE_METHOD:\n+        case GenericDialog.ActionType.ADD_NEW_CARD:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDczNTE3", "url": "https://github.com/mercadopago/px-android/pull/2083#pullrequestreview-381073517", "createdAt": "2020-03-25T11:46:34Z", "commit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo0NjozNFrOF7XZJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMTo1Mzo1MFrOF7XoRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5MzU3Mg==", "bodyText": "Ac\u00e1, en ves de llamar siempre a view, podr\u00edas usar la standard function with().\nEj:\nwith(view) {\nval image = findViewById<ImageView>(R.id.px_dialog_generic_image)\n}", "url": "https://github.com/mercadopago/px-android/pull/2083#discussion_r397793572", "createdAt": "2020-03-25T11:46:34Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/generic_modal/GenericDialog.kt", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.mercadopago.android.px.internal.features.generic_modal\n+\n+import android.content.Context\n+import android.os.Bundle\n+import android.support.annotation.StringDef\n+import android.support.v4.app.FragmentManager\n+import android.support.v4.content.ContextCompat\n+import android.view.View\n+import android.widget.Button\n+import android.widget.ImageView\n+import com.mercadolibre.android.ui.widgets.MeliDialog\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.internal.util.PicassoLoader\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.view.OnSingleClickListener\n+\n+class GenericDialog : MeliDialog() {\n+\n+    private lateinit var item: GenericDialogItem\n+    private var listener: Listener? = null\n+\n+    override fun onAttach(context: Context) {\n+        super.onAttach(context)\n+\n+        this.item = arguments?.getParcelable(ARG_GENERIC_DIALOG_ITEM)!!\n+\n+        listener = when {\n+            targetFragment is Listener -> {\n+                targetFragment as Listener\n+            }\n+            parentFragment is Listener -> {\n+                parentFragment as Listener\n+            }\n+            context is Listener -> {\n+                context\n+            }\n+            else -> {\n+                throw IllegalStateException(\"Parent of ${javaClass.simpleName} \" +\n+                    \"should implement ${Listener::class.java.simpleName}\")\n+            }\n+        }\n+    }\n+\n+    override fun onDetach() {\n+        listener = null\n+        super.onDetach()\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        val image = view.findViewById<ImageView>(R.id.px_dialog_generic_image)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5NTY0OQ==", "bodyText": "Podr\u00edamos tener extension functions para esto.\nEj:\ninternal fun <T : View> T.gone() {\n    visibility = View.GONE\n}\n\ninternal fun <T : View> T.visible() {\n    visibility = View.VISIBLE\n}\n\ninternal fun <T : View> T.invisible() {\n    visibility = View.INVISIBLE\n}", "url": "https://github.com/mercadopago/px-android/pull/2083#discussion_r397795649", "createdAt": "2020-03-25T11:50:46Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/generic_modal/GenericDialog.kt", "diffHunk": "@@ -0,0 +1,125 @@\n+package com.mercadopago.android.px.internal.features.generic_modal\n+\n+import android.content.Context\n+import android.os.Bundle\n+import android.support.annotation.StringDef\n+import android.support.v4.app.FragmentManager\n+import android.support.v4.content.ContextCompat\n+import android.view.View\n+import android.widget.Button\n+import android.widget.ImageView\n+import com.mercadolibre.android.ui.widgets.MeliDialog\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.internal.util.PicassoLoader\n+import com.mercadopago.android.px.internal.util.ViewUtils\n+import com.mercadopago.android.px.internal.view.OnSingleClickListener\n+\n+class GenericDialog : MeliDialog() {\n+\n+    private lateinit var item: GenericDialogItem\n+    private var listener: Listener? = null\n+\n+    override fun onAttach(context: Context) {\n+        super.onAttach(context)\n+\n+        this.item = arguments?.getParcelable(ARG_GENERIC_DIALOG_ITEM)!!\n+\n+        listener = when {\n+            targetFragment is Listener -> {\n+                targetFragment as Listener\n+            }\n+            parentFragment is Listener -> {\n+                parentFragment as Listener\n+            }\n+            context is Listener -> {\n+                context\n+            }\n+            else -> {\n+                throw IllegalStateException(\"Parent of ${javaClass.simpleName} \" +\n+                    \"should implement ${Listener::class.java.simpleName}\")\n+            }\n+        }\n+    }\n+\n+    override fun onDetach() {\n+        listener = null\n+        super.onDetach()\n+    }\n+\n+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n+        super.onViewCreated(view, savedInstanceState)\n+\n+        val image = view.findViewById<ImageView>(R.id.px_dialog_generic_image)\n+        item.imageUrl?.let { url -> PicassoLoader.getPicasso().load(url).into(image) }\n+            ?: image.apply { visibility = View.GONE }\n+\n+        loadButton(view.findViewById(R.id.px_dialog_generic_button_main), item.mainAction)\n+        view.findViewById<Button>(R.id.px_dialog_generic_button_secondary).apply {\n+            loadButton(this, item.secondaryAction)\n+            background = ContextCompat.getDrawable(context, R.drawable.px_quiet_button_selector)\n+        }\n+\n+        context?.let {\n+            ViewUtils.loadOrGone(item.title.get(it), view.findViewById(R.id.px_dialog_generic_text_title))\n+            ViewUtils.loadOrGone(item.description.get(it), view.findViewById(R.id.px_dialog_generic_text_description))\n+        } ?: dismiss()\n+    }\n+\n+    private fun loadButton(button: Button, actionable: Actionable?) {\n+        actionable?.let {\n+            button.text = it.label\n+            button.setOnClickListener(object : OnSingleClickListener() {\n+                override fun onSingleClick(v: View?) {\n+                    dismiss()\n+                    listener?.apply {\n+                        val action = if (it.deepLink.isNotNullNorEmpty()) {\n+                            Action.DeepLinkAction(it.deepLink!!)\n+                        } else {\n+                            Action.CustomAction(it.action!!)\n+                        }\n+                        onAction(action)\n+                    }\n+                }\n+            })\n+        } ?: button.apply { visibility = View.GONE }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5NzQ0NA==", "bodyText": "En otros data class estas usando simplemente KParcelable. No podemos usarlo ac\u00e1 tmb?", "url": "https://github.com/mercadopago/px-android/pull/2083#discussion_r397797444", "createdAt": "2020-03-25T11:53:50Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/TextLocalized.kt", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.mercadopago.android.px.internal.viewmodel\n+\n+import android.content.Context\n+import android.os.Parcel\n+import android.os.Parcelable\n+import android.support.annotation.StringRes\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.internal.util.textformatter.SpannableFormatter\n+import com.mercadopago.android.px.model.internal.Text\n+\n+data class TextLocalized(private val text: Text?, @StringRes private val stringRes: Int) : ILocalizedCharSequence, Parcelable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e505311992409661102a94b37d57695bd31dfe5a", "author": {"user": {"login": "cgaggino", "name": "Cristian Gaggino"}}, "url": "https://github.com/mercadopago/px-android/commit/e505311992409661102a94b37d57695bd31dfe5a", "committedDate": "2020-03-25T10:47:26Z", "message": "* First implementation of generic modals and custom actions"}, "afterCommit": {"oid": "f0f9034fc4dfe32025ad163e19e441bf2561d321", "author": {"user": {"login": "cgaggino", "name": "Cristian Gaggino"}}, "url": "https://github.com/mercadopago/px-android/commit/f0f9034fc4dfe32025ad163e19e441bf2561d321", "committedDate": "2020-03-25T14:31:41Z", "message": "* First implementation of generic modals and custom actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjA5NTUw", "url": "https://github.com/mercadopago/px-android/pull/2083#pullrequestreview-381209550", "createdAt": "2020-03-25T14:36:55Z", "commit": {"oid": "f0f9034fc4dfe32025ad163e19e441bf2561d321"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjIyNDgy", "url": "https://github.com/mercadopago/px-android/pull/2083#pullrequestreview-381222482", "createdAt": "2020-03-25T14:49:26Z", "commit": {"oid": "f0f9034fc4dfe32025ad163e19e441bf2561d321"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2a8750e00416518f1ef99ff21ae7a2eec152d88", "author": {"user": {"login": "cgaggino", "name": "Cristian Gaggino"}}, "url": "https://github.com/mercadopago/px-android/commit/e2a8750e00416518f1ef99ff21ae7a2eec152d88", "committedDate": "2020-03-26T14:05:37Z", "message": "* First implementation of generic modals and custom actions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0f9034fc4dfe32025ad163e19e441bf2561d321", "author": {"user": {"login": "cgaggino", "name": "Cristian Gaggino"}}, "url": "https://github.com/mercadopago/px-android/commit/f0f9034fc4dfe32025ad163e19e441bf2561d321", "committedDate": "2020-03-25T14:31:41Z", "message": "* First implementation of generic modals and custom actions"}, "afterCommit": {"oid": "e2a8750e00416518f1ef99ff21ae7a2eec152d88", "author": {"user": {"login": "cgaggino", "name": "Cristian Gaggino"}}, "url": "https://github.com/mercadopago/px-android/commit/e2a8750e00416518f1ef99ff21ae7a2eec152d88", "committedDate": "2020-03-26T14:05:37Z", "message": "* First implementation of generic modals and custom actions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3902, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}