{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDg1OTU1", "number": 2003, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTowNjozOFrODdXX1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoyMTozMFrODdqctA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTE4MjI4OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/base/BaseFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTowNjozOFrOFl7LEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTowNjozOFrOFl7LEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMxMTEyMQ==", "bodyText": "Qu\u00e9 hace esto?", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375311121", "createdAt": "2020-02-05T15:06:38Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/base/BaseFragment.java", "diffHunk": "@@ -71,4 +72,11 @@ protected void storeModel(final M model) {\n         bundle.putParcelable(ARG_MODEL, model);\n         setArguments(bundle);\n     }\n+\n+    @NonNull\n+    @Override\n+    public Context getContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI2OTk3OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyNzo1NlrOFl8BWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyNzo1NlrOFl8BWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyNTAxNg==", "bodyText": "ac\u00e1 podr\u00edas hacer lo mismo que con backStackEntryCount . Tener una referencia local del fragmentmanager ya que lo estas llamando en m\u00e1s de un lado.", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375325016", "createdAt": "2020-02-05T15:27:56Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "diffHunk": "@@ -142,18 +143,27 @@ protected void onRestoreInstanceState(final Bundle savedInstanceState) {\n \n     @Override\n     public void onBackPressed() {\n+        final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n+        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);\n+        if (fragment instanceof BackHandler) {\n+            boolean shouldHandleBack = ((BackHandler) fragment).handleBack();\n+            if(!shouldHandleBack) {\n+                return;\n+            }\n+        }\n+\n         final Fragment cardFormFragment = getSupportFragmentManager().findFragmentByTag(CardFormWithFragment.TAG);\n         if (cardFormFragment != null && cardFormFragment.getChildFragmentManager().getBackStackEntryCount() > 0) {\n             cardFormFragment.getChildFragmentManager().popBackStack();\n             return;\n         }\n-        if (getSupportFragmentManager() != null && getSupportFragmentManager().getBackStackEntryCount() > 0) {\n+        if (getSupportFragmentManager() != null && backStackEntryCount > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTM5NjgxOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTo1Nzo1OFrOFl9QGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTo1Nzo1OFrOFl9QGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM0NTE3OQ==", "bodyText": "Por qu\u00e9 corremos este evento cuando el fragmento se desatachea?\n() -> getView().showOfflineMethods(offlineMethods)", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375345179", "createdAt": "2020-02-05T15:57:58Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -496,4 +507,29 @@ public void recoverPayment(@NonNull final PostPaymentAction postPaymentAction) {\n         cancelLoading();\n         getView().showCardFlow(paymentRepository.createPaymentRecovery());\n     }\n+\n+    @Override\n+    public void onOtherPaymentMethodClicked(@NonNull final OfflinePaymentTypesMetadata offlineMethods) {\n+        final Runnable event = () -> getView().showOfflineMethods(offlineMethods);\n+        if (otherPaymentMethodClickable) {\n+            event.run();\n+        } else {\n+            unattendedEvent = event;\n+        }\n+    }\n+\n+    @Override\n+    public void onOtherPaymentMethodClickableStateChanged(final boolean state) {\n+        otherPaymentMethodClickable = state;\n+        if (otherPaymentMethodClickable) {\n+            executeUnattendedEvent();\n+        }\n+    }\n+\n+    private void executeUnattendedEvent() {\n+        if (unattendedEvent != null) {\n+            unattendedEvent.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTcwOTgzOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzoyMDo1M1rOFmAWZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzoyMDo1M1rOFmAWZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM5NTk0MA==", "bodyText": "Si solo seleccionas el radioButton, no se populan los eventos (habilitar bot\u00f3n pagar, etc.). Solo cambia la vista.", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375395940", "createdAt": "2020-02-05T17:20:53Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.support.annotation.NonNull;\n+import android.support.constraint.ConstraintLayout;\n+import android.support.v7.widget.RecyclerView;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RadioButton;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.view.MPTextView;\n+\n+/* default */ final class OfflineMethodsRowHolder extends RecyclerView.ViewHolder {\n+\n+    private final MPTextView paymentTypeName;\n+    private final MPTextView paymentMethodName;\n+    private final MPTextView description;\n+    private final ImageView methodImageView;\n+    private final RadioButton radioButton;\n+    private final ConstraintLayout container;\n+\n+    /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n+        super(itemView);\n+        container = itemView.findViewById(R.id.offline_item_container);\n+        paymentTypeName = itemView.findViewById(R.id.payment_type_name);\n+        paymentMethodName = itemView.findViewById(R.id.payment_method_name);\n+        description = itemView.findViewById(R.id.description);\n+        methodImageView = itemView.findViewById(R.id.method_image);\n+        radioButton = itemView.findViewById(R.id.radio_button);\n+    }\n+\n+    /* default */ void populate(final OfflineMethodItem offlineItem,\n+        final OfflineMethodsAdapter.OnItemClicked onItemClicked) {\n+        if (offlineItem.isOfflinePaymentTypeItem()) {\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getName(), paymentTypeName);\n+            paymentMethodName.setVisibility(View.GONE);\n+            description.setVisibility(View.GONE);\n+            methodImageView.setVisibility(View.GONE);\n+            radioButton.setVisibility(View.GONE);\n+            container.setOnClickListener(null);\n+        } else {\n+            paymentTypeName.setVisibility(View.GONE);\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getName(), paymentMethodName);\n+            ViewUtils.loadOrHide(View.GONE, offlineItem.getDescription(), description);\n+            ViewUtils.loadOrGone(offlineItem.getIconId(), methodImageView);\n+            radioButton.setVisibility(View.VISIBLE);\n+            container.setOnClickListener(v -> onItemClicked.onClick());\n+        }\n+    }\n+\n+    /* default */ void setChecked(final boolean checked) {\n+        radioButton.setChecked(checked);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTg2MDc1OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowOToxMlrOFmB1-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowMjozNFrOFmFZjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMDQxMA==", "bodyText": "IndexOutOfBoundsException: Index: 1, Size: 1\n        at java.util.ArrayList.get(ArrayList.java:437)\n        at com.mercadopago.android.px.internal.features.checkout.CheckoutActivity.onBackPressed(CheckoutActivity.java:147)\n        at\n\nCuando salgo del alta nuevo.", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375420410", "createdAt": "2020-02-05T18:09:12Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "diffHunk": "@@ -142,18 +143,27 @@ protected void onRestoreInstanceState(final Bundle savedInstanceState) {\n \n     @Override\n     public void onBackPressed() {\n+        final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n+        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3ODY3MA==", "bodyText": "Esta l\u00f3gica hay que revisarla toda", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375478670", "createdAt": "2020-02-05T20:02:34Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/checkout/CheckoutActivity.java", "diffHunk": "@@ -142,18 +143,27 @@ protected void onRestoreInstanceState(final Bundle savedInstanceState) {\n \n     @Override\n     public void onBackPressed() {\n+        final int backStackEntryCount = getSupportFragmentManager().getBackStackEntryCount();\n+        final Fragment fragment = getSupportFragmentManager().getFragments().get(backStackEntryCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMDQxMA=="}, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjIyMDAwOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/core/BackHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowMTo0N1rOFmFYLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowMTo0N1rOFmFYLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ3ODMxOQ==", "bodyText": "Por qu\u00e9 est\u00e1 en firma p\u00fablica esto?", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375478319", "createdAt": "2020-02-05T20:01:47Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/core/BackHandler.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.mercadopago.android.px.core;\n+\n+public interface BackHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjIzMjYyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowNjoyM1rOFmFgUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowNjoyM1rOFmFgUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MDQwMw==", "bodyText": "Este es el nullable fake de jetbrains", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375480403", "createdAt": "2020-02-05T20:06:23Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -64,13 +65,15 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n+import org.jetbrains.annotations.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjIzNDE2OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowNjo1NlrOFmFhQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDowNjo1NlrOFmFhQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ4MDY0Mw==", "bodyText": "Por qu\u00e9 es p\u00fablico esto?", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375480643", "createdAt": "2020-02-05T20:06:56Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/ExpressPaymentPresenter.java", "diffHunk": "@@ -275,10 +282,14 @@ private void refreshExplodingState() {\n \n     @Override\n     public void cancel() {\n-        tracker.trackAbort();\n+        trackAbort();\n         getView().cancel();\n     }\n \n+    public void trackAbort(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDIzNjc3OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMTo1Mzo1M1rOFmYhmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMTo1Mzo1M1rOFmYhmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc5MjAyNA==", "bodyText": "No se esta usando en ning\u00fan lado, hay que borrarlo.", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375792024", "createdAt": "2020-02-06T11:53:53Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsFragment.java", "diffHunk": "@@ -0,0 +1,384 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.support.annotation.NonNull;\n+import android.support.annotation.Nullable;\n+import android.support.design.widget.BottomSheetBehavior;\n+import android.support.design.widget.Snackbar;\n+import android.support.v4.app.Fragment;\n+import android.support.v4.app.FragmentManager;\n+import android.support.v4.content.ContextCompat;\n+import android.support.v7.widget.DividerItemDecoration;\n+import android.support.v7.widget.LinearLayoutManager;\n+import android.support.v7.widget.RecyclerView;\n+import android.text.Editable;\n+import android.text.SpannableStringBuilder;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.animation.Animation;\n+import android.view.animation.AnimationUtils;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+import com.mercadolibre.android.ui.widgets.MeliButton;\n+import com.mercadolibre.android.ui.widgets.MeliSnackbar;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.addons.BehaviourProvider;\n+import com.mercadopago.android.px.addons.model.SecurityValidationData;\n+import com.mercadopago.android.px.core.BackHandler;\n+import com.mercadopago.android.px.internal.base.BaseFragment;\n+import com.mercadopago.android.px.internal.di.Session;\n+import com.mercadopago.android.px.internal.features.checkout.CheckoutActivity;\n+import com.mercadopago.android.px.internal.features.explode.ExplodeDecorator;\n+import com.mercadopago.android.px.internal.features.explode.ExplodeParams;\n+import com.mercadopago.android.px.internal.features.explode.ExplodingFragment;\n+import com.mercadopago.android.px.internal.features.express.ExpressPaymentFragment;\n+import com.mercadopago.android.px.internal.features.plugins.PaymentProcessorActivity;\n+import com.mercadopago.android.px.internal.font.PxFont;\n+import com.mercadopago.android.px.internal.util.ApiUtil;\n+import com.mercadopago.android.px.internal.util.FragmentUtil;\n+import com.mercadopago.android.px.internal.util.TextUtil;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.viewmodel.AmountLocalized;\n+import com.mercadopago.android.px.internal.viewmodel.PayButtonViewModel;\n+import com.mercadopago.android.px.model.IPaymentDescriptor;\n+import com.mercadopago.android.px.model.OfflinePaymentTypesMetadata;\n+import com.mercadopago.android.px.model.exceptions.MercadoPagoError;\n+\n+import static android.app.Activity.RESULT_OK;\n+import static android.view.View.INVISIBLE;\n+import static android.view.View.VISIBLE;\n+\n+public class OfflineMethodsFragment extends BaseFragment<OfflineMethodsPresenter, OfflinePaymentTypesMetadata>\n+    implements OfflineMethods.OffMethodsView, ExplodingFragment.ExplodingAnimationListener, BackHandler {\n+\n+    private static final String TAG_EXPLODING_FRAGMENT = \"TAG_EXPLODING_FRAGMENT\";\n+    private static final int REQ_CODE_PAYMENT_PROCESSOR = 201;\n+    private static final int REQ_CODE_BIOMETRICS = 202;\n+\n+    @Nullable /* default */ Animation fadeInAnimation;\n+    @Nullable /* default */ Animation fadeOutAnimation;\n+    /* default */ View panIndicator;\n+    private MeliButton confirmButton;\n+    private TextView totalAmountTextView;\n+    private View header;\n+\n+    private int lastSheetState = BottomSheetBehavior.STATE_EXPANDED;\n+\n+    @NonNull\n+    public static OfflineMethodsFragment getInstance(@NonNull final OfflinePaymentTypesMetadata model) {\n+        final OfflineMethodsFragment instance = new OfflineMethodsFragment();\n+        instance.storeModel(model);\n+        return instance;\n+    }\n+\n+    @Override\n+    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable final ViewGroup container,\n+        @Nullable final Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.px_fragment_offline_methods, container, false);\n+    }\n+\n+    @Override\n+    public void onResume() {\n+        super.onResume();\n+        if (presenter != null) {\n+            presenter.onViewResumed();\n+        }\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NonNull final View view, @Nullable final Bundle savedInstanceState) {\n+        header = view.findViewById(R.id.header);\n+        panIndicator = view.findViewById(R.id.pan_indicator);\n+        confirmButton = view.findViewById(R.id.confirm_button);\n+        confirmButton.setState(MeliButton.State.DISABLED);\n+        confirmButton.setOnClickListener(v -> {\n+            if (ApiUtil.checkConnection(getActivity().getApplicationContext())) {\n+                presenter.startSecuredPayment();\n+            } else {\n+                presenter.manageNoConnection();\n+            }\n+        });\n+        totalAmountTextView = view.findViewById(R.id.total_amount);\n+        final ImageView closeImage = view.findViewById(R.id.image);\n+        closeImage.setOnClickListener(v -> getActivity().onBackPressed());\n+\n+        configureRecycler(view.findViewById(R.id.methods));\n+\n+        if (savedInstanceState == null) {\n+            presenter.trackOfflineMethodsView(model);\n+        }\n+\n+        presenter.updateModel();\n+    }\n+\n+    private void configureRecycler(@NonNull final RecyclerView recycler) {\n+        final LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\n+        recycler.setLayoutManager(linearLayoutManager);\n+        recycler.addOnScrollListener(new RecyclerView.OnScrollListener() {\n+            @Override\n+            public void onScrollStateChanged(@NonNull final RecyclerView recyclerView, final int newState) {\n+                super.onScrollStateChanged(recyclerView, newState);\n+                final boolean atTop = !recyclerView.canScrollVertically(-1);\n+                switch (newState) {\n+                case RecyclerView.SCROLL_STATE_DRAGGING:\n+                    if (atTop) {\n+                        panIndicator.clearAnimation();\n+                        panIndicator.startAnimation(fadeOutAnimation);\n+                    }\n+                    break;\n+                case RecyclerView.SCROLL_STATE_IDLE:\n+                    if (atTop) {\n+                        panIndicator.clearAnimation();\n+                        panIndicator.startAnimation(fadeInAnimation);\n+                    }\n+                    break;\n+                default:\n+                }\n+            }\n+\n+            @Override\n+            public void onScrolled(@NonNull final RecyclerView recyclerView, final int dx, final int dy) {\n+                super.onScrolled(recyclerView, dx, dy);\n+            }\n+        });\n+        final DividerItemDecoration decoration =\n+            new DividerItemDecoration(getContext(), linearLayoutManager.getOrientation());\n+        decoration.setDrawable(ContextCompat.getDrawable(getContext(), R.drawable.px_item_decorator_divider));\n+        recycler.addItemDecoration(decoration);\n+\n+        final OnMethodSelectedListener onMethodSelectedListener = selectedItem -> {\n+            presenter.selectMethod(selectedItem);\n+            confirmButton.setState(MeliButton.State.NORMAL);\n+        };\n+\n+        final OfflineMethodsAdapter offlineMethodsAdapter =\n+            new OfflineMethodsAdapter(new FromOfflinePaymentTypesMetadataToOfflineItems(getContext()).map(model),\n+                onMethodSelectedListener);\n+        recycler.setAdapter(offlineMethodsAdapter);\n+    }\n+\n+    @Override\n+    public void updateTotalView(@NonNull final AmountLocalized amountLocalized) {\n+        final Editable editable = new SpannableStringBuilder();\n+        editable.append(getContext().getString(R.string.px_review_summary_total));\n+        editable.append(TextUtil.SPACE);\n+        editable.append(amountLocalized.get(getContext()));\n+\n+        ViewUtils.setFontInSpannable(getContext(), PxFont.SEMI_BOLD, editable);\n+\n+        totalAmountTextView.setText(editable);\n+    }\n+\n+    @Override\n+    protected OfflineMethodsPresenter createPresenter() {\n+        final Session session = Session.getInstance();\n+        return new OfflineMethodsPresenter(session.getPaymentRepository(),\n+            session.getConfigurationModule().getPaymentSettings(),\n+            session.getAmountRepository(),\n+            session.getDiscountRepository(),\n+            session.getProductIdProvider(),\n+            model.getPaymentTypes().get(0).getId(),\n+            session.getInitRepository());\n+    }\n+\n+    @Override\n+    public void startLoadingButton(final int paymentTimeout, @NonNull final PayButtonViewModel payButtonViewModel) {\n+        final Fragment fragment = getTargetFragment();\n+        if (fragment instanceof SheetHidability) {\n+            ((SheetHidability) fragment).setSheetHidability(false);\n+        } else {\n+            throw new IllegalStateException(\"Target fragment should implement \");\n+        }\n+\n+        hideConfirmButton();\n+\n+        ViewUtils.runWhenViewIsFullyMeasured(getView(), () -> {\n+            final ExplodeParams explodeParams = ExplodingFragment.getParams(confirmButton,\n+                payButtonViewModel.getButtonProgressText(confirmButton.getContext()), paymentTimeout);\n+            final FragmentManager childFragmentManager = getChildFragmentManager();\n+            final ExplodingFragment explodingFragment = ExplodingFragment.newInstance(explodeParams);\n+            childFragmentManager.beginTransaction()\n+                .replace(R.id.exploding_frame, explodingFragment, TAG_EXPLODING_FRAGMENT)\n+                .commitNowAllowingStateLoss();\n+        });\n+    }\n+\n+    public interface SheetHidability {\n+        void setSheetHidability(boolean b);\n+    }\n+\n+    private void hideConfirmButton() {\n+        confirmButton.clearAnimation();\n+        confirmButton.setVisibility(INVISIBLE);\n+    }\n+\n+    private void showConfirmButton() {\n+        confirmButton.clearAnimation();\n+        confirmButton.setVisibility(VISIBLE);\n+    }\n+\n+    @Override\n+    public void showPaymentResult(final IPaymentDescriptor payment) {\n+        if (getActivity() != null) {\n+            ((CheckoutActivity) getActivity()).presenter.onPaymentFinished(payment);\n+        }\n+    }\n+\n+    @Override\n+    public void onAnimationFinished() {\n+        presenter.hasFinishPaymentAnimation();\n+    }\n+\n+    @Override\n+    public void finishLoading(@NonNull final ExplodeDecorator params) {\n+        final ExplodingFragment fragment =\n+            FragmentUtil.getFragmentByTag(getChildFragmentManager(), TAG_EXPLODING_FRAGMENT, ExplodingFragment.class);\n+        if (fragment != null) {\n+            fragment.finishLoading(params);\n+        } else {\n+            presenter.hasFinishPaymentAnimation();\n+        }\n+        ((ExpressPaymentFragment) getTargetFragment()).setSheetHidability(true);\n+    }\n+\n+    @Override\n+    public void cancelLoading() {\n+        showConfirmButton();\n+        final FragmentManager childFragmentManager = getChildFragmentManager();\n+        final ExplodingFragment fragment =\n+            (ExplodingFragment) childFragmentManager.findFragmentByTag(TAG_EXPLODING_FRAGMENT);\n+        if (fragment != null && fragment.isAdded() && fragment.hasFinished()) {\n+            childFragmentManager\n+                .beginTransaction()\n+                .remove(fragment)\n+                .commitNowAllowingStateLoss();\n+        }\n+    }\n+\n+    @SuppressLint(\"Range\")\n+    @Override\n+    public void showErrorSnackBar(@NonNull final MercadoPagoError error) {\n+        if (getView() != null && getActivity() != null) {\n+            MeliSnackbar.make(getView(), error.getMessage(), Snackbar.LENGTH_LONG, MeliSnackbar.SnackbarType.ERROR)\n+                .show();\n+        }\n+    }\n+\n+    @Override\n+    public void showErrorScreen(@NonNull final MercadoPagoError error) {\n+        if (getActivity() != null) {\n+            ((CheckoutActivity) getActivity()).presenter.onPaymentError(error);\n+        }\n+    }\n+\n+    @Override\n+    public void showPaymentProcessor() {\n+        PaymentProcessorActivity.start(this, REQ_CODE_PAYMENT_PROCESSOR);\n+    }\n+\n+    @Override\n+    public boolean handleBack() {\n+        if (getFragmentManager() != null && !isExploding()) {\n+            presenter.trackAbort();\n+        }\n+        return !isExploding();\n+    }\n+\n+    @Override\n+    public boolean isExploding() {\n+        return FragmentUtil.isFragmentVisible(getChildFragmentManager(), TAG_EXPLODING_FRAGMENT);\n+    }\n+\n+    public void onHideSheet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 297}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDMwNzcyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoyMTozMFrOFmZMmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMjoyMTozMFrOFmZMmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwMzAzNA==", "bodyText": "Ac\u00e1 en ves de llamar al container, deber\u00edas usar el itemView.", "url": "https://github.com/mercadopago/px-android/pull/2003#discussion_r375803034", "createdAt": "2020-02-06T12:21:30Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/express/add_new_card/OfflineMethodsRowHolder.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.mercadopago.android.px.internal.features.express.add_new_card;\n+\n+import android.support.annotation.NonNull;\n+import android.support.constraint.ConstraintLayout;\n+import android.support.v7.widget.RecyclerView;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.RadioButton;\n+import com.mercadopago.android.px.R;\n+import com.mercadopago.android.px.internal.util.ViewUtils;\n+import com.mercadopago.android.px.internal.view.MPTextView;\n+\n+/* default */ final class OfflineMethodsRowHolder extends RecyclerView.ViewHolder {\n+\n+    private final MPTextView paymentTypeName;\n+    private final MPTextView paymentMethodName;\n+    private final MPTextView description;\n+    private final ImageView methodImageView;\n+    private final RadioButton radioButton;\n+    private final ConstraintLayout container;\n+\n+    /* default */ OfflineMethodsRowHolder(@NonNull final View itemView) {\n+        super(itemView);\n+        container = itemView.findViewById(R.id.offline_item_container);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6547ebc4067a64a1790fe58236c4af14cb06d2"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1701, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}