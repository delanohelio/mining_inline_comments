{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTM3MDE0", "number": 2048, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNzo0NVrODjHx0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNzo0NVrODjHx0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU0MTkyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/util/EscUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyNzo0NVrOFuwGPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozNjoxMVrOFu3UFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2Njg0NQ==", "bodyText": "Revisar si tiene sentido este chequeo al storear", "url": "https://github.com/mercadopago/px-android/pull/2048#discussion_r384566845", "createdAt": "2020-02-26T15:27:45Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/util/EscUtil.java", "diffHunk": "@@ -20,16 +22,18 @@ private static boolean hasValidParametersForESC(@Nullable final PaymentData paym\n             && !TextUtil.isEmpty(paymentDetail);\n     }\n \n-    public static boolean shouldDeleteEsc(@Nullable final PaymentData paymentData,\n-        @Nullable final String paymentStatus, @Nullable final String paymentDetail) {\n+    public static boolean shouldDeleteEsc(@NonNull final Collection<String> escBlacklistedStatus,\n+        @Nullable final PaymentData paymentData, @Nullable final String paymentStatus,\n+        @Nullable final String paymentDetail) {\n         return hasValidParametersForESC(paymentData, paymentStatus, paymentDetail) &&\n-            !StatusHelper.isValidStatusForEsc(paymentDetail);\n+            ListUtil.contains(escBlacklistedStatus, paymentDetail, ListUtil.CONTAIN_IGNORE_CASE);\n     }\n \n-    public static boolean shouldStoreESC(@Nullable final PaymentData paymentData,\n-        @Nullable final String paymentStatus, @Nullable final String paymentDetail) {\n+    public static boolean shouldStoreESC(@NonNull final Collection<String> escBlacklistedStatus,\n+        @Nullable final PaymentData paymentData, @Nullable final String paymentStatus,\n+        @Nullable final String paymentDetail) {\n         return hasValidParametersForESC(paymentData, paymentStatus, paymentDetail) &&\n-            StatusHelper.isValidStatusForEsc(paymentDetail) &&\n+            !ListUtil.contains(escBlacklistedStatus, paymentDetail, ListUtil.CONTAIN_IGNORE_CASE) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d6cf29c0efcaa981aa574c1c4e72de42f12d28"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTA3Ng==", "bodyText": "Como son dos checks independientes el de delete y el de store prefiero dejar todas las validaciones que hacen a cada uno individualmente, es decir, que si el esc que estoy queriendo storear se us\u00f3 en un pago cuyo status detail est\u00e1 blacklisteado, no lo storearia independientemente de lo que suceda con el delete.", "url": "https://github.com/mercadopago/px-android/pull/2048#discussion_r384685076", "createdAt": "2020-02-26T18:36:11Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/util/EscUtil.java", "diffHunk": "@@ -20,16 +22,18 @@ private static boolean hasValidParametersForESC(@Nullable final PaymentData paym\n             && !TextUtil.isEmpty(paymentDetail);\n     }\n \n-    public static boolean shouldDeleteEsc(@Nullable final PaymentData paymentData,\n-        @Nullable final String paymentStatus, @Nullable final String paymentDetail) {\n+    public static boolean shouldDeleteEsc(@NonNull final Collection<String> escBlacklistedStatus,\n+        @Nullable final PaymentData paymentData, @Nullable final String paymentStatus,\n+        @Nullable final String paymentDetail) {\n         return hasValidParametersForESC(paymentData, paymentStatus, paymentDetail) &&\n-            !StatusHelper.isValidStatusForEsc(paymentDetail);\n+            ListUtil.contains(escBlacklistedStatus, paymentDetail, ListUtil.CONTAIN_IGNORE_CASE);\n     }\n \n-    public static boolean shouldStoreESC(@Nullable final PaymentData paymentData,\n-        @Nullable final String paymentStatus, @Nullable final String paymentDetail) {\n+    public static boolean shouldStoreESC(@NonNull final Collection<String> escBlacklistedStatus,\n+        @Nullable final PaymentData paymentData, @Nullable final String paymentStatus,\n+        @Nullable final String paymentDetail) {\n         return hasValidParametersForESC(paymentData, paymentStatus, paymentDetail) &&\n-            StatusHelper.isValidStatusForEsc(paymentDetail) &&\n+            !ListUtil.contains(escBlacklistedStatus, paymentDetail, ListUtil.CONTAIN_IGNORE_CASE) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2Njg0NQ=="}, "originalCommit": {"oid": "37d6cf29c0efcaa981aa574c1c4e72de42f12d28"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1640, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}