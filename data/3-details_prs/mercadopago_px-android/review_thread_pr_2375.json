{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MzkwNDkx", "number": 2375, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzowMjozMFrOE14Xng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMDozNjo1MVrOE33Wkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTMzNTM0OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CongratsRepositoryImpl.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzowMjozMFrOHuaBBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzowMjozMFrOHuaBBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyMjc4OQ==", "bodyText": "Ojo", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r518422789", "createdAt": "2020-11-05T23:02:30Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CongratsRepositoryImpl.kt", "diffHunk": "@@ -54,20 +54,20 @@ class CongratsRepositoryImpl(\n                 }\n             }\n             withContext(Dispatchers.Main) {\n-                handleResult(payment, paymentResult, paymentReward, remediesResponse, paymentSetting.currency, callback)\n+                handleResult(payment, paymentResult, congratsResponse, remediesResponse, paymentSetting.currency, callback)\n             }\n         }\n     }\n \n-    private suspend fun getPaymentReward(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n+    private suspend fun getCongratsResponse(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n         try {\n             val joinedPaymentIds = TextUtil.join(payment.paymentIds)\n             val joinedPaymentMethodsIds = paymentResult.paymentDataList\n                 .joinToString(TextUtil.CSV_DELIMITER) { p -> (p.paymentMethod.id) }\n             val campaignId = paymentResult.paymentData.campaign?.run { id } ?: \"\"\n-            congratsService.getCongrats(BuildConfig.API_ENVIRONMENT, privateKey!!,\n+            congratsService.getCongrats(\"alpha\", privateKey!!,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b528e4b93f59e9539b4b410cde9b7b6ba0163d77"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDUwMDc5OnYy", "diffSide": "RIGHT", "path": "example/src/main/java/com/mercadopago/android/px/utils/OneTapSamples.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoxMzozNVrOHwm4PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODowNjoxOVrOHwpA3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMDY4NA==", "bodyText": "Esto lo vamos a dejar as\u00ed o lo vamos a revertir? si queda as\u00ed pongamosle un nombre representativo a cada key", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520730684", "createdAt": "2020-11-10T17:13:35Z", "author": {"login": "cgaggino"}, "path": "example/src/main/java/com/mercadopago/android/px/utils/OneTapSamples.java", "diffHunk": "@@ -177,9 +175,9 @@ public static void addAll(final Collection<Pair<String, MercadoPagoCheckout.Buil\n             .setExpressPaymentEnable(true)\n             .build();\n \n-        return new MercadoPagoCheckout.Builder(ONE_TAP_DIRECT_DISCOUNT_MERCHANT_PUBLIC_KEY, preference,\n+        return new MercadoPagoCheckout.Builder(\"APP_USR-073af6f6-9b85-414f-8bc1-4792a0568a62\", \"506902649-2140324c-55c5-4f0a-a1bb-15666443f215\"/*preference*/,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2NTY2MA==", "bodyText": "Lo vamos a revertir", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520765660", "createdAt": "2020-11-10T18:06:19Z", "author": {"login": "guchito9"}, "path": "example/src/main/java/com/mercadopago/android/px/utils/OneTapSamples.java", "diffHunk": "@@ -177,9 +175,9 @@ public static void addAll(final Collection<Pair<String, MercadoPagoCheckout.Buil\n             .setExpressPaymentEnable(true)\n             .build();\n \n-        return new MercadoPagoCheckout.Builder(ONE_TAP_DIRECT_DISCOUNT_MERCHANT_PUBLIC_KEY, preference,\n+        return new MercadoPagoCheckout.Builder(\"APP_USR-073af6f6-9b85-414f-8bc1-4792a0568a62\", \"506902649-2140324c-55c5-4f0a-a1bb-15666443f215\"/*preference*/,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMDY4NA=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDUwNzAyOnYy", "diffSide": "RIGHT", "path": "example/src/main/java/com/mercadopago/android/px/utils/PaymentUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoxNDo1OFrOHwm8HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODowNjo1MVrOHwpCBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMTY3Ng==", "bodyText": "A esta altura estoy pensando que podriamos mandar el status detail por par\u00e1metro y que cada ejemplo use el rejected que quiera", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520731676", "createdAt": "2020-11-10T17:14:58Z", "author": {"login": "cgaggino"}, "path": "example/src/main/java/com/mercadopago/android/px/utils/PaymentUtils.java", "diffHunk": "@@ -36,7 +37,7 @@ public static IParcelablePaymentDescriptor getGenericPaymentApproved() {\n     public static IParcelablePaymentDescriptor getGenericPaymentRejected() {\n         return GenericPaymentDescriptor.with(new GenericPayment.Builder(\n             Payment.StatusCodes.STATUS_REJECTED,\n-            Payment.StatusDetail.STATUS_DETAIL_CC_REJECTED_HIGH_RISK\n+            Payment.StatusDetail.STATUS_DETAIL_CC_REJECTED_CARD_DISABLED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2NTk1OA==", "bodyText": "Es buena esa", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520765958", "createdAt": "2020-11-10T18:06:51Z", "author": {"login": "guchito9"}, "path": "example/src/main/java/com/mercadopago/android/px/utils/PaymentUtils.java", "diffHunk": "@@ -36,7 +37,7 @@ public static IParcelablePaymentDescriptor getGenericPaymentApproved() {\n     public static IParcelablePaymentDescriptor getGenericPaymentRejected() {\n         return GenericPaymentDescriptor.with(new GenericPayment.Builder(\n             Payment.StatusCodes.STATUS_REJECTED,\n-            Payment.StatusDetail.STATUS_DETAIL_CC_REJECTED_HIGH_RISK\n+            Payment.StatusDetail.STATUS_DETAIL_CC_REJECTED_CARD_DISABLED", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMTY3Ng=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDUxNTAzOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CongratsRepositoryImpl.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoxNjo1MFrOHwnBMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODowNzowOVrOHwpCrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMjk3OQ==", "bodyText": "Es un feature que no se tiene en cuenta para pref abierta, verdad?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520732979", "createdAt": "2020-11-10T17:16:50Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CongratsRepositoryImpl.kt", "diffHunk": "@@ -54,20 +54,20 @@ class CongratsRepositoryImpl(\n                 }\n             }\n             withContext(Dispatchers.Main) {\n-                handleResult(payment, paymentResult, paymentReward, remediesResponse, paymentSetting.currency, callback)\n+                handleResult(payment, paymentResult, congratsResponse, remediesResponse, paymentSetting.currency, callback)\n             }\n         }\n     }\n \n-    private suspend fun getPaymentReward(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n+    private suspend fun getCongratsResponse(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n         try {\n             val joinedPaymentIds = TextUtil.join(payment.paymentIds)\n             val joinedPaymentMethodsIds = paymentResult.paymentDataList\n                 .joinToString(TextUtil.CSV_DELIMITER) { p -> (p.paymentMethod.id) }\n             val campaignId = paymentResult.paymentData.campaign?.run { id } ?: \"\"\n-            congratsService.getCongrats(BuildConfig.API_ENVIRONMENT, privateKey!!,\n+            congratsService.getCongrats(\"alpha\", privateKey!!,\n                 joinedPaymentIds, platform, campaignId, payerComplianceRepository.turnedIFPECompliant(),\n-                joinedPaymentMethodsIds, trackingRepository.flowId)\n+                joinedPaymentMethodsIds, trackingRepository.flowId, paymentSetting.checkoutPreference?.id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2NjEyNA==", "bodyText": "As\u00ed es", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520766124", "createdAt": "2020-11-10T18:07:09Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/datasource/CongratsRepositoryImpl.kt", "diffHunk": "@@ -54,20 +54,20 @@ class CongratsRepositoryImpl(\n                 }\n             }\n             withContext(Dispatchers.Main) {\n-                handleResult(payment, paymentResult, paymentReward, remediesResponse, paymentSetting.currency, callback)\n+                handleResult(payment, paymentResult, congratsResponse, remediesResponse, paymentSetting.currency, callback)\n             }\n         }\n     }\n \n-    private suspend fun getPaymentReward(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n+    private suspend fun getCongratsResponse(payment: IPaymentDescriptor, paymentResult: PaymentResult) =\n         try {\n             val joinedPaymentIds = TextUtil.join(payment.paymentIds)\n             val joinedPaymentMethodsIds = paymentResult.paymentDataList\n                 .joinToString(TextUtil.CSV_DELIMITER) { p -> (p.paymentMethod.id) }\n             val campaignId = paymentResult.paymentData.campaign?.run { id } ?: \"\"\n-            congratsService.getCongrats(BuildConfig.API_ENVIRONMENT, privateKey!!,\n+            congratsService.getCongrats(\"alpha\", privateKey!!,\n                 joinedPaymentIds, platform, campaignId, payerComplianceRepository.turnedIFPECompliant(),\n-                joinedPaymentMethodsIds, trackingRepository.flowId)\n+                joinedPaymentMethodsIds, trackingRepository.flowId, paymentSetting.checkoutPreference?.id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMjk3OQ=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDUxNzYyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/extensions/BaseExtensions.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzoxNzoyOVrOHwnC3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODowODoyMFrOHwpFTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMzQwNg==", "bodyText": "Excelente estos contratos :D", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520733406", "createdAt": "2020-11-10T17:17:29Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/extensions/BaseExtensions.kt", "diffHunk": "@@ -3,8 +3,26 @@ package com.mercadopago.android.px.internal.extensions\n import android.app.Activity\n import android.graphics.Rect\n import androidx.fragment.app.Fragment\n+import kotlin.contracts.ExperimentalContracts\n+import kotlin.contracts.contract\n \n-internal fun CharSequence?.isNotNullNorEmpty() = !isNullOrEmpty()\n+@UseExperimental(ExperimentalContracts::class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2Njc5Ng==", "bodyText": ":D", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520766796", "createdAt": "2020-11-10T18:08:20Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/extensions/BaseExtensions.kt", "diffHunk": "@@ -3,8 +3,26 @@ package com.mercadopago.android.px.internal.extensions\n import android.app.Activity\n import android.graphics.Rect\n import androidx.fragment.app.Fragment\n+import kotlin.contracts.ExperimentalContracts\n+import kotlin.contracts.contract\n \n-internal fun CharSequence?.isNotNullNorEmpty() = !isNullOrEmpty()\n+@UseExperimental(ExperimentalContracts::class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMzQwNg=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDU4NjM0OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzozMzo0MlrOHwnuRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoxMjoxNFrOHwpOWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDUxOQ==", "bodyText": "El getter esta declarado como nullable, o lo contemplamos ac\u00e1 como tal o cambiar\u00eda el getter a boolean primitivo o non-null", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520744519", "createdAt": "2020-11-10T17:33:42Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.mercadopago.android.px.internal.features.business_result\n+\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.CongratsViewModelMapper\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel.CongratsType\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n+import com.mercadopago.android.px.internal.view.PaymentResultBody\n+import com.mercadopago.android.px.internal.view.PaymentResultHeader\n+import com.mercadopago.android.px.internal.view.PaymentResultMethod\n+import com.mercadopago.android.px.internal.viewmodel.GenericLocalized\n+import com.mercadopago.android.px.internal.viewmodel.PaymentResultType\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import java.util.*\n+\n+internal class BusinessPaymentResultMapper : Mapper<PaymentCongratsModel, BusinessPaymentResultViewModel>() {\n+\n+    override fun map(model: PaymentCongratsModel): BusinessPaymentResultViewModel {\n+        return BusinessPaymentResultViewModel(\n+            getHeaderModel(model),\n+            getBodyModel(model),\n+            getFooterModel(model),\n+            getAutoReturnModel(model.paymentCongratsResponse?.autoReturn)\n+        )\n+    }\n+\n+    private fun getBodyModel(model: PaymentCongratsModel): PaymentResultBody.Model {\n+        val methodModels: MutableList<PaymentResultMethod.Model> = ArrayList()\n+        if (model.shouldShowPaymentMethod!!) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2OTExNQ==", "bodyText": "Lo contemplo", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520769115", "createdAt": "2020-11-10T18:12:14Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.mercadopago.android.px.internal.features.business_result\n+\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.CongratsViewModelMapper\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel.CongratsType\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n+import com.mercadopago.android.px.internal.view.PaymentResultBody\n+import com.mercadopago.android.px.internal.view.PaymentResultHeader\n+import com.mercadopago.android.px.internal.view.PaymentResultMethod\n+import com.mercadopago.android.px.internal.viewmodel.GenericLocalized\n+import com.mercadopago.android.px.internal.viewmodel.PaymentResultType\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import java.util.*\n+\n+internal class BusinessPaymentResultMapper : Mapper<PaymentCongratsModel, BusinessPaymentResultViewModel>() {\n+\n+    override fun map(model: PaymentCongratsModel): BusinessPaymentResultViewModel {\n+        return BusinessPaymentResultViewModel(\n+            getHeaderModel(model),\n+            getBodyModel(model),\n+            getFooterModel(model),\n+            getAutoReturnModel(model.paymentCongratsResponse?.autoReturn)\n+        )\n+    }\n+\n+    private fun getBodyModel(model: PaymentCongratsModel): PaymentResultBody.Model {\n+        val methodModels: MutableList<PaymentResultMethod.Model> = ArrayList()\n+        if (model.shouldShowPaymentMethod!!) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDUxOQ=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDYyMTA5OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo0MTo0OVrOHwoDXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoxNzoyOVrOHwpabg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0OTkxOQ==", "bodyText": "Podemos meter un with builder o algo asi, creo que podria quedar mas verbose", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520749919", "createdAt": "2020-11-10T17:41:49Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.mercadopago.android.px.internal.features.business_result\n+\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.CongratsViewModelMapper\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel.CongratsType\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n+import com.mercadopago.android.px.internal.view.PaymentResultBody\n+import com.mercadopago.android.px.internal.view.PaymentResultHeader\n+import com.mercadopago.android.px.internal.view.PaymentResultMethod\n+import com.mercadopago.android.px.internal.viewmodel.GenericLocalized\n+import com.mercadopago.android.px.internal.viewmodel.PaymentResultType\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import java.util.*\n+\n+internal class BusinessPaymentResultMapper : Mapper<PaymentCongratsModel, BusinessPaymentResultViewModel>() {\n+\n+    override fun map(model: PaymentCongratsModel): BusinessPaymentResultViewModel {\n+        return BusinessPaymentResultViewModel(\n+            getHeaderModel(model),\n+            getBodyModel(model),\n+            getFooterModel(model),\n+            getAutoReturnModel(model.paymentCongratsResponse?.autoReturn)\n+        )\n+    }\n+\n+    private fun getBodyModel(model: PaymentCongratsModel): PaymentResultBody.Model {\n+        val methodModels: MutableList<PaymentResultMethod.Model> = ArrayList()\n+        if (model.shouldShowPaymentMethod!!) {\n+            for (paymentInfo in model.paymentsInfo) {\n+                methodModels.add(PaymentResultMethod.Model.with(paymentInfo,\n+                    model.statementDescription))\n+            }\n+        }\n+        val type = model.congratsType\n+        return PaymentResultBody.Model.Builder()\n+            .setMethodModels(methodModels)\n+            .apply { model.paymentCongratsResponse?.let {\n+                setCongratsViewModel(CongratsViewModelMapper(BusinessPaymentResultTracker()).map(it))\n+            }}\n+            .apply {\n+                if (type == CongratsType.APPROVED && model.shouldShowReceipt == true) setReceiptId(model.paymentId.toString())\n+            }\n+            .setHelp(model.help)\n+            .setStatement(model.statementDescription)\n+            .setTopFragment(model.topFragment)\n+            .setBottomFragment(model.bottomFragment)\n+            .setImportantFragment(model.importantFragment)\n+            .build()\n+    }\n+\n+    private fun getHeaderModel(model: PaymentCongratsModel): PaymentResultHeader.Model {\n+        val builder = PaymentResultHeader.Model.Builder()\n+        builder.setIconImage(if (model.iconId == 0) R.drawable.px_icon_product else model.iconId)\n+        builder.setIconUrl(model.imageUrl)\n+        val type = PaymentResultType.from(model.congratsType)\n+        return builder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc3MjIwNg==", "bodyText": "Qued\u00f3 horrible ese m\u00e9todo, ahora lo reajusto", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520772206", "createdAt": "2020-11-10T18:17:29Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.mercadopago.android.px.internal.features.business_result\n+\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.CongratsViewModelMapper\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel.CongratsType\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n+import com.mercadopago.android.px.internal.view.PaymentResultBody\n+import com.mercadopago.android.px.internal.view.PaymentResultHeader\n+import com.mercadopago.android.px.internal.view.PaymentResultMethod\n+import com.mercadopago.android.px.internal.viewmodel.GenericLocalized\n+import com.mercadopago.android.px.internal.viewmodel.PaymentResultType\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import java.util.*\n+\n+internal class BusinessPaymentResultMapper : Mapper<PaymentCongratsModel, BusinessPaymentResultViewModel>() {\n+\n+    override fun map(model: PaymentCongratsModel): BusinessPaymentResultViewModel {\n+        return BusinessPaymentResultViewModel(\n+            getHeaderModel(model),\n+            getBodyModel(model),\n+            getFooterModel(model),\n+            getAutoReturnModel(model.paymentCongratsResponse?.autoReturn)\n+        )\n+    }\n+\n+    private fun getBodyModel(model: PaymentCongratsModel): PaymentResultBody.Model {\n+        val methodModels: MutableList<PaymentResultMethod.Model> = ArrayList()\n+        if (model.shouldShowPaymentMethod!!) {\n+            for (paymentInfo in model.paymentsInfo) {\n+                methodModels.add(PaymentResultMethod.Model.with(paymentInfo,\n+                    model.statementDescription))\n+            }\n+        }\n+        val type = model.congratsType\n+        return PaymentResultBody.Model.Builder()\n+            .setMethodModels(methodModels)\n+            .apply { model.paymentCongratsResponse?.let {\n+                setCongratsViewModel(CongratsViewModelMapper(BusinessPaymentResultTracker()).map(it))\n+            }}\n+            .apply {\n+                if (type == CongratsType.APPROVED && model.shouldShowReceipt == true) setReceiptId(model.paymentId.toString())\n+            }\n+            .setHelp(model.help)\n+            .setStatement(model.statementDescription)\n+            .setTopFragment(model.topFragment)\n+            .setBottomFragment(model.bottomFragment)\n+            .setImportantFragment(model.importantFragment)\n+            .build()\n+    }\n+\n+    private fun getHeaderModel(model: PaymentCongratsModel): PaymentResultHeader.Model {\n+        val builder = PaymentResultHeader.Model.Builder()\n+        builder.setIconImage(if (model.iconId == 0) R.drawable.px_icon_product else model.iconId)\n+        builder.setIconUrl(model.imageUrl)\n+        val type = PaymentResultType.from(model.congratsType)\n+        return builder", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0OTkxOQ=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDY0NDMxOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo0NzoyN1rOHwoR4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo0NzoyN1rOHwoR4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1MzYzMw==", "bodyText": "Hacer que para business payment result sea siempre visible y que los condicionales de mostrar o no el footer est\u00e9n el generic payment result.", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520753633", "createdAt": "2020-11-10T17:47:27Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultActivity.java", "diffHunk": "@@ -39,6 +42,8 @@ protected boolean shouldHaltSession(@NonNull final Session.State state) {\n     @Override\n     protected void onCreated(@Nullable final Bundle savedInstanceState) {\n         setContentView(R.layout.px_activity_payment_result);\n+        footer = findViewById(R.id.footer);\n+        footer.setVisibility(View.VISIBLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDY2NjExOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo1Mjo0MVrOHwofMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoxMTowM1rOHwpLrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1NzA0Mw==", "bodyText": "Esto me sigue sin convencer, por que mapPaymentModel hace tantas cosas no relacionadas al mapeo?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520757043", "createdAt": "2020-11-10T17:52:41Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -78,35 +76,44 @@ public void onAbort() {\n         getView().processCustomExit();\n     }\n \n-    @Override\n-    public void dispatch(final Action action) {\n-        if (action instanceof ExitAction) {\n-            if (action instanceof PrimaryExitAction) {\n-                new PrimaryActionEvent(viewTracker).track();\n-            } else if (action instanceof SecondaryExitAction) {\n-                new SecondaryActionEvent(viewTracker).track();\n-            }\n-            getView().processCustomExit((ExitAction) action);\n-        } else {\n-            throw new UnsupportedOperationException(\"this Action class can't be executed in this screen\");\n-        }\n-    }\n-\n     private void mapPaymentModel() {\n         final BusinessPaymentResultViewModel viewModel = new BusinessPaymentResultMapper().map(model);\n-        getView().configureViews(viewModel, this);\n-        getView().setStatusBarColor(viewModel.headerModel.getBackgroundColor());\n-        initAutoReturn(viewModel.shouldAutoReturn);\n+        getView().configureViews(viewModel, this, new PaymentResultFooter.Listener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2ODQyOQ==", "bodyText": "Reviso el flujo como viene y lo cambio. Tiene pinta igual de que un cambio de nombre alcanzar\u00eda", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520768429", "createdAt": "2020-11-10T18:11:03Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultPresenter.java", "diffHunk": "@@ -78,35 +76,44 @@ public void onAbort() {\n         getView().processCustomExit();\n     }\n \n-    @Override\n-    public void dispatch(final Action action) {\n-        if (action instanceof ExitAction) {\n-            if (action instanceof PrimaryExitAction) {\n-                new PrimaryActionEvent(viewTracker).track();\n-            } else if (action instanceof SecondaryExitAction) {\n-                new SecondaryActionEvent(viewTracker).track();\n-            }\n-            getView().processCustomExit((ExitAction) action);\n-        } else {\n-            throw new UnsupportedOperationException(\"this Action class can't be executed in this screen\");\n-        }\n-    }\n-\n     private void mapPaymentModel() {\n         final BusinessPaymentResultViewModel viewModel = new BusinessPaymentResultMapper().map(model);\n-        getView().configureViews(viewModel, this);\n-        getView().setStatusBarColor(viewModel.headerModel.getBackgroundColor());\n-        initAutoReturn(viewModel.shouldAutoReturn);\n+        getView().configureViews(viewModel, this, new PaymentResultFooter.Listener() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1NzA0Mw=="}, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDY3MjM2OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo1NDoxN1rOHwojNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzo1NDoxN1rOHwojNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1ODA2OQ==", "bodyText": "Ac\u00e1 no pod\u00edamos user el apply como el caso de arriba para no declarar una val builder?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r520758069", "createdAt": "2020-11-10T17:54:17Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/business_result/BusinessPaymentResultMapper.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.mercadopago.android.px.internal.features.business_result\n+\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.CongratsViewModelMapper\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsModel.CongratsType\n+import com.mercadopago.android.px.internal.features.payment_congrats.model.PaymentCongratsResponse\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n+import com.mercadopago.android.px.internal.view.PaymentResultBody\n+import com.mercadopago.android.px.internal.view.PaymentResultHeader\n+import com.mercadopago.android.px.internal.view.PaymentResultMethod\n+import com.mercadopago.android.px.internal.viewmodel.GenericLocalized\n+import com.mercadopago.android.px.internal.viewmodel.PaymentResultType\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import java.util.*\n+\n+internal class BusinessPaymentResultMapper : Mapper<PaymentCongratsModel, BusinessPaymentResultViewModel>() {\n+\n+    override fun map(model: PaymentCongratsModel): BusinessPaymentResultViewModel {\n+        return BusinessPaymentResultViewModel(\n+            getHeaderModel(model),\n+            getBodyModel(model),\n+            getFooterModel(model),\n+            getAutoReturnModel(model.paymentCongratsResponse?.autoReturn)\n+        )\n+    }\n+\n+    private fun getBodyModel(model: PaymentCongratsModel): PaymentResultBody.Model {\n+        val methodModels: MutableList<PaymentResultMethod.Model> = ArrayList()\n+        if (model.shouldShowPaymentMethod!!) {\n+            for (paymentInfo in model.paymentsInfo) {\n+                methodModels.add(PaymentResultMethod.Model.with(paymentInfo,\n+                    model.statementDescription))\n+            }\n+        }\n+        val type = model.congratsType\n+        return PaymentResultBody.Model.Builder()\n+            .setMethodModels(methodModels)\n+            .apply { model.paymentCongratsResponse?.let {\n+                setCongratsViewModel(CongratsViewModelMapper(BusinessPaymentResultTracker()).map(it))\n+            }}\n+            .apply {\n+                if (type == CongratsType.APPROVED && model.shouldShowReceipt == true) setReceiptId(model.paymentId.toString())\n+            }\n+            .setHelp(model.help)\n+            .setStatement(model.statementDescription)\n+            .setTopFragment(model.topFragment)\n+            .setBottomFragment(model.bottomFragment)\n+            .setImportantFragment(model.importantFragment)\n+            .build()\n+    }\n+\n+    private fun getHeaderModel(model: PaymentCongratsModel): PaymentResultHeader.Model {\n+        val builder = PaymentResultHeader.Model.Builder()\n+        builder.setIconImage(if (model.iconId == 0) R.drawable.px_icon_product else model.iconId)\n+        builder.setIconUrl(model.imageUrl)\n+        val type = PaymentResultType.from(model.congratsType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10c6343af2053c8b5d04368a4a3abf75f9994145"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODA2MTUxOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/mappers/CongratsAutoReturnMapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTozNDowNlrOHxJZRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTozNDowNlrOHxJZRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NjE5Ng==", "bodyText": "Esto cap\u00e1z podr\u00edas cambiarlo por:\nCongratsAutoReturn.Model().takeif { \n    RedirectHelper.shouldAutoReturn(autoReturnFromPreference, paymentStatus) \n}", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521296196", "createdAt": "2020-11-11T11:34:06Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/mappers/CongratsAutoReturnMapper.kt", "diffHunk": "@@ -0,0 +1,22 @@\n+package com.mercadopago.android.px.internal.features.payment_result.mappers\n+\n+import com.mercadopago.android.px.internal.features.dummy_result.RedirectHelper\n+import com.mercadopago.android.px.internal.features.payment_result.CongratsAutoReturn\n+import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n+import com.mercadopago.android.px.model.internal.CongratsResponse\n+\n+internal class CongratsAutoReturnMapper(private val autoReturnFromPreference: String?, private val paymentStatus: String)\n+    : Mapper<CongratsResponse.AutoReturn?, CongratsAutoReturn.Model?>() {\n+\n+    override fun map(autoReturn: CongratsResponse.AutoReturn?): CongratsAutoReturn.Model? {\n+        return autoReturn?.let {\n+            CongratsAutoReturn.Model(it.label, it.seconds)\n+        } ?: run {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODA5MDU4OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0Mzo0MVrOHxJrpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0Mzo0MVrOHxJrpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMDkwMA==", "bodyText": "Empezar\u00eda a usar las extensions View.visible() y View.gone()", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521300900", "createdAt": "2020-11-11T11:43:41Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.mercadopago.android.px.internal.features.payment_result.presentation\n+\n+import android.content.Context\n+import android.os.Parcelable\n+import android.util.AttributeSet\n+import android.view.View\n+import android.widget.LinearLayout\n+import android.widget.TextView\n+import com.mercadolibre.android.andesui.button.AndesButton\n+import com.mercadolibre.android.andesui.button.hierarchy.AndesButtonHierarchy\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.model.ExitAction\n+import kotlinx.android.parcel.Parcelize\n+\n+internal class PaymentResultFooter(context: Context, attrs: AttributeSet?, defStyleAttr: Int) :\n+    LinearLayout(context, attrs, defStyleAttr) {\n+\n+    init {\n+        configureView(context)\n+    }\n+\n+    constructor(context: Context, attrs: AttributeSet?) : this(context, attrs, 0)\n+    constructor(context: Context) : this(context, null)\n+\n+    private lateinit var primaryButton: AndesButton\n+    private lateinit var secondaryButton: AndesButton\n+    private lateinit var payButtonContainer: View\n+    private lateinit var autoReturn: View\n+    private lateinit var autoReturnLabel: TextView\n+    private lateinit var separator: View\n+\n+    private fun configureView(context: Context) {\n+        orientation = VERTICAL\n+        inflate(context, R.layout.px_payment_result_footer, this)\n+        primaryButton = findViewById(R.id.primary_button)\n+        secondaryButton = findViewById(R.id.secondary_button)\n+        payButtonContainer = findViewById(R.id.pay_button)\n+        autoReturn = findViewById(R.id.auto_return)\n+        autoReturnLabel = autoReturn.findViewById(R.id.label)\n+        separator = findViewById(R.id.separator)\n+    }\n+\n+    fun init(model: Model, listener: Listener) {\n+        applyButtonConfig(primaryButton, model.primaryButton, listener)\n+        applyButtonConfig(secondaryButton, model.secondaryButton, listener)\n+        payButtonContainer.visibility = if (model.showPayButton) View.VISIBLE else View.GONE\n+        if (model.primaryButton == null && model.secondaryButton.isNotNull() &&\n+            model.secondaryButton.type == PaymentResultButton.Type.TRANSPARENT) {\n+            separator.visibility = VISIBLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODA5ODMyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0NTo1OVrOHxJwWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0NTo1OVrOHxJwWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMjEwNg==", "bodyText": "idem en todos los lugares que cambiamos la visibilidad :P", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521302106", "createdAt": "2020-11-11T11:45:59Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.mercadopago.android.px.internal.features.payment_result.presentation\n+\n+import android.content.Context\n+import android.os.Parcelable\n+import android.util.AttributeSet\n+import android.view.View\n+import android.widget.LinearLayout\n+import android.widget.TextView\n+import com.mercadolibre.android.andesui.button.AndesButton\n+import com.mercadolibre.android.andesui.button.hierarchy.AndesButtonHierarchy\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.model.ExitAction\n+import kotlinx.android.parcel.Parcelize\n+\n+internal class PaymentResultFooter(context: Context, attrs: AttributeSet?, defStyleAttr: Int) :\n+    LinearLayout(context, attrs, defStyleAttr) {\n+\n+    init {\n+        configureView(context)\n+    }\n+\n+    constructor(context: Context, attrs: AttributeSet?) : this(context, attrs, 0)\n+    constructor(context: Context) : this(context, null)\n+\n+    private lateinit var primaryButton: AndesButton\n+    private lateinit var secondaryButton: AndesButton\n+    private lateinit var payButtonContainer: View\n+    private lateinit var autoReturn: View\n+    private lateinit var autoReturnLabel: TextView\n+    private lateinit var separator: View\n+\n+    private fun configureView(context: Context) {\n+        orientation = VERTICAL\n+        inflate(context, R.layout.px_payment_result_footer, this)\n+        primaryButton = findViewById(R.id.primary_button)\n+        secondaryButton = findViewById(R.id.secondary_button)\n+        payButtonContainer = findViewById(R.id.pay_button)\n+        autoReturn = findViewById(R.id.auto_return)\n+        autoReturnLabel = autoReturn.findViewById(R.id.label)\n+        separator = findViewById(R.id.separator)\n+    }\n+\n+    fun init(model: Model, listener: Listener) {\n+        applyButtonConfig(primaryButton, model.primaryButton, listener)\n+        applyButtonConfig(secondaryButton, model.secondaryButton, listener)\n+        payButtonContainer.visibility = if (model.showPayButton) View.VISIBLE else View.GONE\n+        if (model.primaryButton == null && model.secondaryButton.isNotNull() &&\n+            model.secondaryButton.type == PaymentResultButton.Type.TRANSPARENT) {\n+            separator.visibility = VISIBLE\n+        } else {\n+            separator.visibility = GONE\n+        }\n+    }\n+\n+    fun showAutoReturn() {\n+        autoReturn.visibility = VISIBLE\n+    }\n+\n+    fun updateAutoReturnLabel(label: String) {\n+        autoReturnLabel.text = label\n+    }\n+\n+    fun hideSecondaryButton() {\n+        secondaryButton.visibility = View.GONE\n+    }\n+\n+    fun showSecondaryButton() {\n+        secondaryButton.visibility = View.VISIBLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODEwMDU3OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0Njo0NVrOHxJx1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTowNToxMVrOHx_C8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMjQ4NQ==", "bodyText": "deber\u00eda ser internal?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521302485", "createdAt": "2020-11-11T11:46:45Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.mercadopago.android.px.internal.features.payment_result.presentation\n+\n+import android.content.Context\n+import android.os.Parcelable\n+import android.util.AttributeSet\n+import android.view.View\n+import android.widget.LinearLayout\n+import android.widget.TextView\n+import com.mercadolibre.android.andesui.button.AndesButton\n+import com.mercadolibre.android.andesui.button.hierarchy.AndesButtonHierarchy\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.model.ExitAction\n+import kotlinx.android.parcel.Parcelize\n+\n+internal class PaymentResultFooter(context: Context, attrs: AttributeSet?, defStyleAttr: Int) :\n+    LinearLayout(context, attrs, defStyleAttr) {\n+\n+    init {\n+        configureView(context)\n+    }\n+\n+    constructor(context: Context, attrs: AttributeSet?) : this(context, attrs, 0)\n+    constructor(context: Context) : this(context, null)\n+\n+    private lateinit var primaryButton: AndesButton\n+    private lateinit var secondaryButton: AndesButton\n+    private lateinit var payButtonContainer: View\n+    private lateinit var autoReturn: View\n+    private lateinit var autoReturnLabel: TextView\n+    private lateinit var separator: View\n+\n+    private fun configureView(context: Context) {\n+        orientation = VERTICAL\n+        inflate(context, R.layout.px_payment_result_footer, this)\n+        primaryButton = findViewById(R.id.primary_button)\n+        secondaryButton = findViewById(R.id.secondary_button)\n+        payButtonContainer = findViewById(R.id.pay_button)\n+        autoReturn = findViewById(R.id.auto_return)\n+        autoReturnLabel = autoReturn.findViewById(R.id.label)\n+        separator = findViewById(R.id.separator)\n+    }\n+\n+    fun init(model: Model, listener: Listener) {\n+        applyButtonConfig(primaryButton, model.primaryButton, listener)\n+        applyButtonConfig(secondaryButton, model.secondaryButton, listener)\n+        payButtonContainer.visibility = if (model.showPayButton) View.VISIBLE else View.GONE\n+        if (model.primaryButton == null && model.secondaryButton.isNotNull() &&\n+            model.secondaryButton.type == PaymentResultButton.Type.TRANSPARENT) {\n+            separator.visibility = VISIBLE\n+        } else {\n+            separator.visibility = GONE\n+        }\n+    }\n+\n+    fun showAutoReturn() {\n+        autoReturn.visibility = VISIBLE\n+    }\n+\n+    fun updateAutoReturnLabel(label: String) {\n+        autoReturnLabel.text = label\n+    }\n+\n+    fun hideSecondaryButton() {\n+        secondaryButton.visibility = View.GONE\n+    }\n+\n+    fun showSecondaryButton() {\n+        secondaryButton.visibility = View.VISIBLE\n+    }\n+\n+    private fun applyButtonConfig(button: AndesButton, model: PaymentResultButton?, listener: Listener) {\n+        with(button) {\n+            model?.let { model ->\n+                visibility = View.VISIBLE\n+                text = model.label.get(context).toString()\n+                hierarchy = AndesButtonHierarchy.fromString(model.type.name)\n+                setOnClickListener {\n+                    when {\n+                        model.exitAction.isNotNull() -> listener.onClick(model.exitAction)\n+                        model.target.isNotNullNorEmpty() -> listener.onClick(model.target)\n+                        model.action.isNotNull() -> listener.onClick(model.action)\n+                    }\n+                }\n+            } ?: run {\n+                visibility = View.GONE\n+            }\n+        }\n+    }\n+\n+    interface Listener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3NTIxOQ==", "bodyText": "Ya es internal la clase padre, por lo que es internal entonces :P", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r522175219", "createdAt": "2020-11-12T15:05:11Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/presentation/PaymentResultFooter.kt", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.mercadopago.android.px.internal.features.payment_result.presentation\n+\n+import android.content.Context\n+import android.os.Parcelable\n+import android.util.AttributeSet\n+import android.view.View\n+import android.widget.LinearLayout\n+import android.widget.TextView\n+import com.mercadolibre.android.andesui.button.AndesButton\n+import com.mercadolibre.android.andesui.button.hierarchy.AndesButtonHierarchy\n+import com.mercadopago.android.px.R\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import com.mercadopago.android.px.internal.extensions.isNotNullNorEmpty\n+import com.mercadopago.android.px.model.ExitAction\n+import kotlinx.android.parcel.Parcelize\n+\n+internal class PaymentResultFooter(context: Context, attrs: AttributeSet?, defStyleAttr: Int) :\n+    LinearLayout(context, attrs, defStyleAttr) {\n+\n+    init {\n+        configureView(context)\n+    }\n+\n+    constructor(context: Context, attrs: AttributeSet?) : this(context, attrs, 0)\n+    constructor(context: Context) : this(context, null)\n+\n+    private lateinit var primaryButton: AndesButton\n+    private lateinit var secondaryButton: AndesButton\n+    private lateinit var payButtonContainer: View\n+    private lateinit var autoReturn: View\n+    private lateinit var autoReturnLabel: TextView\n+    private lateinit var separator: View\n+\n+    private fun configureView(context: Context) {\n+        orientation = VERTICAL\n+        inflate(context, R.layout.px_payment_result_footer, this)\n+        primaryButton = findViewById(R.id.primary_button)\n+        secondaryButton = findViewById(R.id.secondary_button)\n+        payButtonContainer = findViewById(R.id.pay_button)\n+        autoReturn = findViewById(R.id.auto_return)\n+        autoReturnLabel = autoReturn.findViewById(R.id.label)\n+        separator = findViewById(R.id.separator)\n+    }\n+\n+    fun init(model: Model, listener: Listener) {\n+        applyButtonConfig(primaryButton, model.primaryButton, listener)\n+        applyButtonConfig(secondaryButton, model.secondaryButton, listener)\n+        payButtonContainer.visibility = if (model.showPayButton) View.VISIBLE else View.GONE\n+        if (model.primaryButton == null && model.secondaryButton.isNotNull() &&\n+            model.secondaryButton.type == PaymentResultButton.Type.TRANSPARENT) {\n+            separator.visibility = VISIBLE\n+        } else {\n+            separator.visibility = GONE\n+        }\n+    }\n+\n+    fun showAutoReturn() {\n+        autoReturn.visibility = VISIBLE\n+    }\n+\n+    fun updateAutoReturnLabel(label: String) {\n+        autoReturnLabel.text = label\n+    }\n+\n+    fun hideSecondaryButton() {\n+        secondaryButton.visibility = View.GONE\n+    }\n+\n+    fun showSecondaryButton() {\n+        secondaryButton.visibility = View.VISIBLE\n+    }\n+\n+    private fun applyButtonConfig(button: AndesButton, model: PaymentResultButton?, listener: Listener) {\n+        with(button) {\n+            model?.let { model ->\n+                visibility = View.VISIBLE\n+                text = model.label.get(context).toString()\n+                hierarchy = AndesButtonHierarchy.fromString(model.type.name)\n+                setOnClickListener {\n+                    when {\n+                        model.exitAction.isNotNull() -> listener.onClick(model.exitAction)\n+                        model.target.isNotNullNorEmpty() -> listener.onClick(model.target)\n+                        model.action.isNotNull() -> listener.onClick(model.action)\n+                    }\n+                }\n+            } ?: run {\n+                visibility = View.GONE\n+            }\n+        }\n+    }\n+\n+    interface Listener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMjQ4NQ=="}, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODEwNzMyOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/LazyString.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo0ODo0NVrOHxJ1vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNDo0NzoyNlrOHx-Mfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMzQ4Ng==", "bodyText": "Pens\u00e9 que serv\u00eda solo para los data class", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521303486", "createdAt": "2020-11-11T11:48:45Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/LazyString.kt", "diffHunk": "@@ -1,19 +1,15 @@\n package com.mercadopago.android.px.internal.viewmodel\n \n import android.content.Context\n-import android.os.Parcel\n+import android.os.Parcelable\n import com.mercadopago.android.px.internal.extensions.orIfEmpty\n-import com.mercadopago.android.px.internal.util.KParcelable\n import com.mercadopago.android.px.internal.util.TextUtil\n-import com.mercadopago.android.px.internal.util.parcelableCreator\n+import kotlinx.android.parcel.Parcelize\n \n-internal class LazyString(private val text: CharSequence?, private val resId: Int?, private vararg val args: String) : KParcelable {\n+@Parcelize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2MTI3OA==", "bodyText": "Parece que no (?)", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r522161278", "createdAt": "2020-11-12T14:47:26Z", "author": {"login": "guchito9"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/LazyString.kt", "diffHunk": "@@ -1,19 +1,15 @@\n package com.mercadopago.android.px.internal.viewmodel\n \n import android.content.Context\n-import android.os.Parcel\n+import android.os.Parcelable\n import com.mercadopago.android.px.internal.extensions.orIfEmpty\n-import com.mercadopago.android.px.internal.util.KParcelable\n import com.mercadopago.android.px.internal.util.TextUtil\n-import com.mercadopago.android.px.internal.util.parcelableCreator\n+import kotlinx.android.parcel.Parcelize\n \n-internal class LazyString(private val text: CharSequence?, private val resId: Int?, private vararg val args: String) : KParcelable {\n+@Parcelize", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMzQ4Ng=="}, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODExNDYxOnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/CacheableMapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1MTowMlrOHxJ6LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1MTowMlrOHxJ6LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwNDYyMQ==", "bodyText": "Esto puede ser internal?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521304621", "createdAt": "2020-11-11T11:51:02Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/CacheableMapper.kt", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.mercadopago.android.px.internal.viewmodel.mappers\n+\n+abstract class CacheableMapper<T, V, K> : Mapper<T, V>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODEyMjQ5OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/Mapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1MzozMlrOHxJ-6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1MzozMlrOHxJ-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwNTgzNA==", "bodyText": "Puede ser internal?", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521305834", "createdAt": "2020-11-11T11:53:32Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/Mapper.kt", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.mercadopago.android.px.internal.viewmodel.mappers\n+\n+abstract class Mapper<T, V> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODEyODc5OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/NonNullMapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1NToxOVrOHxKCmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTo1NToxOVrOHxKCmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwNjc3Nw==", "bodyText": "idem que el anterior", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521306777", "createdAt": "2020-11-11T11:55:19Z", "author": {"login": "jorGonzalez291292"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/viewmodel/mappers/NonNullMapper.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.mercadopago.android.px.internal.viewmodel.mappers\n+\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import java.util.*\n+\n+abstract class NonNullMapper<T, V> : Mapper<T, V>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDE0MDM1OnYy", "diffSide": "RIGHT", "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/mappers/PaymentResultFooterModelMapper.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMDozNjo1MVrOHxdYGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMDozNjo1MVrOHxdYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMzU3OQ==", "bodyText": "podemos declararlo fuera del when y reutilizarlo en vez de declararlo dos veces? si vale la pena", "url": "https://github.com/mercadopago/px-android/pull/2375#discussion_r521623579", "createdAt": "2020-11-11T20:36:51Z", "author": {"login": "cgaggino"}, "path": "px-checkout/src/main/java/com/mercadopago/android/px/internal/features/payment_result/mappers/PaymentResultFooterModelMapper.kt", "diffHunk": "@@ -1,22 +1,51 @@\n package com.mercadopago.android.px.internal.features.payment_result.mappers\n \n import com.mercadopago.android.px.R\n-import com.mercadopago.android.px.internal.features.payment_result.remedies.RemedyButton\n-import com.mercadopago.android.px.internal.features.payment_result.remedies.view.PaymentResultFooter\n+import com.mercadopago.android.px.internal.extensions.isNotNull\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultButton\n+import com.mercadopago.android.px.internal.features.payment_result.presentation.PaymentResultFooter\n import com.mercadopago.android.px.internal.viewmodel.LazyString\n+import com.mercadopago.android.px.internal.viewmodel.PaymentModel\n import com.mercadopago.android.px.internal.viewmodel.mappers.Mapper\n-import com.mercadopago.android.px.model.internal.remedies.RemediesResponse\n+import com.mercadopago.android.px.internal.viewmodel.mappers.PaymentResultButtonMapper\n+import com.mercadopago.android.px.model.internal.CongratsResponse\n \n-internal object PaymentResultFooterModelMapper : Mapper<RemediesResponse, PaymentResultFooter.Model>() {\n-    override fun map(response: RemediesResponse): PaymentResultFooter.Model {\n+internal object PaymentResultFooterModelMapper : Mapper<PaymentModel, PaymentResultFooter.Model?>() {\n+\n+    override fun map(model: PaymentModel): PaymentResultFooter.Model? {\n+        val remedies = model.remedies\n+        val congrats = model.congratsResponse\n         return when {\n-            response.suggestedPaymentMethod != null || response.cvv != null -> PaymentResultFooter.Model(null,\n-                RemedyButton(LazyString(R.string.px_change_payment), RemedyButton.Action.CHANGE_PM))\n-            response.highRisk != null -> PaymentResultFooter.Model(\n-                RemedyButton(LazyString(response.highRisk!!.actionLoud.label), RemedyButton.Action.KYC),\n-                RemedyButton(LazyString(R.string.px_change_payment), RemedyButton.Action.CHANGE_PM), false\n+            remedies.suggestedPaymentMethod.isNotNull() || remedies.cvv.isNotNull() -> PaymentResultFooter.Model(\n+                null,\n+                PaymentResultButton(\n+                    PaymentResultButton.Type.QUIET,\n+                    LazyString(R.string.px_change_payment),\n+                    PaymentResultButton.Action.CHANGE_PM\n+                ),\n+                showPayButton = true\n+            )\n+            remedies.highRisk.isNotNull() -> PaymentResultFooter.Model(\n+                PaymentResultButton(\n+                    PaymentResultButton.Type.LOUD,\n+                    LazyString(remedies.highRisk!!.actionLoud.label),\n+                    PaymentResultButton.Action.KYC\n+                ),\n+                PaymentResultButton(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fb91d8f9da80f2c6a9bc0affdae5793a1d98eb"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1731, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}