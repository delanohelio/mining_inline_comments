{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDYxOTYz", "number": 178, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxNzoyOVrODwFryQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOToxMVrODwFuhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzUxMzY5OnYy", "diffSide": "LEFT", "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxNzoyOVrOGC5G0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNTozNTo1MVrOGDKM1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ==", "bodyText": "I know it was not handled before, but what happens if the URL is invalid?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405685971", "createdAt": "2020-04-08T17:17:29Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMTY0Nw==", "bodyText": "If it's not valid then Marker not show the photo (obviously) because the importer expect that the \"last path segment\" was valid (we would have a broken link).\nI don't know how importer can check it because in the importing process firstly it creates the URI and later copy images to internal memory.\nThe same for the exporter: firstly creates the URL and then copy the files inside \"images\".", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405721647", "createdAt": "2020-04-08T18:17:47Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc4MzYzNA==", "bodyText": "So, we should first the get all files and the parse the KML, right?\nThen we can copy the used files into the app-external directory.\nFor now, I guess, we should just apply a your fix now (then release v3.6) and then rework this properly afterwards.\nAbout the writer: I would prefer to be careful as we never now what is actually in the database (and what some previous OpenTracks version actually did).\n@rgmf What do you think?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405783634", "createdAt": "2020-04-08T20:09:10Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgwNDc4Mg==", "bodyText": "For now, I guess, we should just apply a your fix now (then release v3.6) and then rework this > properly afterwards.\n\nOk @dennisguse\n\nSo, we should first the get all files and the parse the KML, right?\nThen we can copy the used files into the app-external directory.\n\nChecking that URLs are valid ones need more time.\nDoing so in the importer seems feasible.\nBut in the exporter seems more difficult because it writes the kml file first and if it success then write images. If you write images firstly and then you write kml file then you have to delete images if kml file couldn't be written. Anyway I have to deep on that.\n\nAbout the writer: I would prefer to be careful as we never now what is actually in the database (and what some previous OpenTracks version actually did).\n\nWriter get track, trackpoint and waypoint from database and write them out to the kml file. The only transformation I do is the photoUrl value. In the database is a file:// or a content:// and in the kml file will be a relative path with the same name.\nExport works with file:// and content://\nImport now generates only content://\nWhy do you think we should careful with the writer?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405804782", "createdAt": "2020-04-08T20:47:21Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxMjMzOQ==", "bodyText": "About the exporter: in the future, we might change photoUrl to just contain the actual filename and not storing the whole content-URL.\nAnd existing installations of OpenTracks might contain some weird things in their databases - there weren't to many changes regarding photoUrl.\nI guess the biggest one was migration to Storage Access Framework.\nSo, basically we should keep it in mind to not rely too much on the current implementation, but also expects some quirks introduced by previous versions.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405812339", "createdAt": "2020-04-08T21:01:08Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxNzQ5Ng==", "bodyText": "Ok, tomorrow I'll open an Issue to write down all these changes and I'm going to work on it.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405817496", "createdAt": "2020-04-08T21:11:31Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjAzOA==", "bodyText": "And there is another change that affected photoUrl (use of a FileProvider to get images from the camera):\n828a19a\nIt was released with the very first OpenTracks version (v3.0.0).", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405966038", "createdAt": "2020-04-09T05:35:51Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/KmlTrackWriter.java", "diffHunk": "@@ -345,7 +347,7 @@ private void writePhotoOverlay(String name, String category, String description,\n             writeCategory(category);\n \n             if (exportPhotos) {\n-                printWriter.println(\"<Icon><href>\" + Uri.decode(photoUrl) + \"</href></Icon>\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NTk3MQ=="}, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzUxNzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxODoyOFrOGC5JZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxODoyOFrOGC5JZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NjYzMA==", "bodyText": "Better use: \"\"  + photoUri to avoid NullPointer.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405686630", "createdAt": "2020-04-08T17:18:28Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -372,9 +372,13 @@ protected String getPhotoUrl(String fileName) {\n         if (importTrackId == -1L) {\n             return null;\n         }\n+\n         File dir = FileUtils.getPhotoDir(context, importTrackId);\n         File file = new File(dir, fileName);\n-        return Uri.fromFile(file).toString();\n+\n+        Uri photoUri = FileUtils.getUriForFile(context, file);\n+\n+        return photoUri.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzUyMDcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmlFileTrackImporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOToxMVrOGC5LHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOToxMVrOGC5LHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzA3MQ==", "bodyText": "Uri parsing might fail and there might be no path.\nAnd as we are importing here something from somewhere, we should check this carefully.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/178#discussion_r405687071", "createdAt": "2020-04-08T17:19:11Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmlFileTrackImporter.java", "diffHunk": "@@ -186,9 +186,9 @@ private void onWaypointEnd() throws SAXException {\n             return;\n         }\n \n+        // If there is photoUrl it has to be changed because that url in kml file isn't a valid content:// to the imported one.\n         if (photoUrl != null) {\n-            Uri uri = Uri.parse(photoUrl);\n-            photoUrl = getPhotoUrl(uri.getLastPathSegment());\n+            photoUrl = getPhotoUrl(Uri.parse(photoUrl).getLastPathSegment());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8496fba82c488a8354411da27eb44121f0ea03"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1982, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}