{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDA5NzE3", "number": 538, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMjoyNTo0NVrOE-Uetw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMjoyNTo0NVrOE-Uetw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzgyNzExOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMjoyNTo0NVrOH7dovw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMjo0Mjo0NlrOH7dutQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ==", "bodyText": "This should not be necessary as findAndParseKmlFile() either throws an exception or returns a trackid, right?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532113599", "createdAt": "2020-11-28T22:25:45Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -194,7 +194,7 @@ private boolean hasImageExtension(String fileName) {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (!trackId.isValid()) {\n+        if (trackId != null && !trackId.isValid()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49ba064429ddbfbebec43a819222d7d0b387d20"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNDY4Nw==", "bodyText": "I came across this when I first experimented with a kmz file for the Unit test. But I had problems with it an the while ZipEntry didn't find any files in the zip input stream. Then it resulted in a null trackId.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532114687", "createdAt": "2020-11-28T22:38:17Z", "author": {"login": "pstorch"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -194,7 +194,7 @@ private boolean hasImageExtension(String fileName) {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (!trackId.isValid()) {\n+        if (trackId != null && !trackId.isValid()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}, "originalCommit": {"oid": "c49ba064429ddbfbebec43a819222d7d0b387d20"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNDgzMA==", "bodyText": "Then we should throw an exception in findAndParseKmlFile as the file is broken or am I mistaken?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532114830", "createdAt": "2020-11-28T22:39:55Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -194,7 +194,7 @@ private boolean hasImageExtension(String fileName) {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (!trackId.isValid()) {\n+        if (trackId != null && !trackId.isValid()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}, "originalCommit": {"oid": "c49ba064429ddbfbebec43a819222d7d0b387d20"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNTEyNQ==", "bodyText": "Yes, you are right.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532115125", "createdAt": "2020-11-28T22:42:46Z", "author": {"login": "pstorch"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -194,7 +194,7 @@ private boolean hasImageExtension(String fileName) {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (!trackId.isValid()) {\n+        if (trackId != null && !trackId.isValid()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}, "originalCommit": {"oid": "c49ba064429ddbfbebec43a819222d7d0b387d20"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1915, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}