{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDQ5NjEy", "number": 519, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToyOTozNFrOE4_P-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowOTowMFrOE5LWZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTkxOTk1OnYy", "diffSide": "LEFT", "path": "src/main/java/de/dennisguse/opentracks/MarkerListActivity.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxOToyOTozNFrOHzNGtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNjowNDoxMFrOHzg24Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDEzNA==", "bodyText": "@dennisguse I've removed this but I don't understand... If you selected all markers (markerIds.length == viewBinding.markerList.getCount()) then markerIds was set to null and no deletion was do.\nIs there something I don't get here?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523454134", "createdAt": "2020-11-14T19:29:34Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/MarkerListActivity.java", "diffHunk": "@@ -237,9 +237,6 @@ private boolean handleContextItem(int itemId, long... longMarkerIds) {\n                 }\n                 return true;\n             case R.id.list_context_menu_delete:\n-                if (markerIds.length > 1 && markerIds.length == viewBinding.markerList.getCount()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3NDA3NQ==", "bodyText": "markerIds must be null, so that DeleteMarkerDialogFragment will show the \"delete all message\".\nDon't know if the current is code is working without this if - markerIds might be an initialized array with length=0.\nAnd then the deletion will not happen anymore.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523774075", "createdAt": "2020-11-15T15:32:43Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/MarkerListActivity.java", "diffHunk": "@@ -237,9 +237,6 @@ private boolean handleContextItem(int itemId, long... longMarkerIds) {\n                 }\n                 return true;\n             case R.id.list_context_menu_delete:\n-                if (markerIds.length > 1 && markerIds.length == viewBinding.markerList.getCount()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDEzNA=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3NzE0OA==", "bodyText": "If markerIds is null then OT crashes. Look at 82 DeleteMarkerDialogFragment's line (it uses markerIds but it can be null):\nfor (Marker.Id markerId : markerIds) {\n    contentProviderUtils.deleteMarker(getContext(), markerId);\n}\nAll that code was only for show \"Delete all markers?\" instead of \"Delete selected?\" in the title of the Dialog.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523777148", "createdAt": "2020-11-15T15:59:06Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/MarkerListActivity.java", "diffHunk": "@@ -237,9 +237,6 @@ private boolean handleContextItem(int itemId, long... longMarkerIds) {\n                 }\n                 return true;\n             case R.id.list_context_menu_delete:\n-                if (markerIds.length > 1 && markerIds.length == viewBinding.markerList.getCount()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDEzNA=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3Nzc2MQ==", "bodyText": "In my last commit is my proposal (it can be undo :D)", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523777761", "createdAt": "2020-11-15T16:04:10Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/MarkerListActivity.java", "diffHunk": "@@ -237,9 +237,6 @@ private boolean handleContextItem(int itemId, long... longMarkerIds) {\n                 }\n                 return true;\n             case R.id.list_context_menu_delete:\n-                if (markerIds.length > 1 && markerIds.length == viewBinding.markerList.getCount()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDEzNA=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Mzg5ODk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowNDo1M1rOHzgbyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNToyODo1OVrOHzgmww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MDgyNw==", "bodyText": "This try-catch is not doing anything.\nIs it not necessary to cleanup the failed import on exception?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523770827", "createdAt": "2020-11-15T15:04:53Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -69,20 +68,18 @@ public KmzTrackImporter(Context context, Uri uriFile) {\n     public Track.Id importFile(InputStream inputStream) {\n         Track.Id trackId;\n \n-        if (!copyKmzImages()) {\n-            cleanImport(context, importTrackId);\n-            return null;\n-        }\n-\n         try {\n             trackId = findAndParseKmlFile(inputStream);\n         } catch (Exception e) {\n-            cleanImport(context, importTrackId);\n             throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MjgzMQ==", "bodyText": "The cleanImport needs the track id but if findAndParseKmlFile fails then trackId is not known (now the track is created after import is finishes).", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523772831", "createdAt": "2020-11-15T15:21:58Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -69,20 +68,18 @@ public KmzTrackImporter(Context context, Uri uriFile) {\n     public Track.Id importFile(InputStream inputStream) {\n         Track.Id trackId;\n \n-        if (!copyKmzImages()) {\n-            cleanImport(context, importTrackId);\n-            return null;\n-        }\n-\n         try {\n             trackId = findAndParseKmlFile(inputStream);\n         } catch (Exception e) {\n-            cleanImport(context, importTrackId);\n             throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MDgyNw=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MzYzNQ==", "bodyText": "Then we still don't need to catch the exception and throw the same one - so we can remove this try catch, right?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523773635", "createdAt": "2020-11-15T15:28:59Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -69,20 +68,18 @@ public KmzTrackImporter(Context context, Uri uriFile) {\n     public Track.Id importFile(InputStream inputStream) {\n         Track.Id trackId;\n \n-        if (!copyKmzImages()) {\n-            cleanImport(context, importTrackId);\n-            return null;\n-        }\n-\n         try {\n             trackId = findAndParseKmlFile(inputStream);\n         } catch (Exception e) {\n-            cleanImport(context, importTrackId);\n             throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MDgyNw=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MzkwMDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowNjoxM1rOHzgcaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTo1MDowNlrOHzgwXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MDk4NQ==", "bodyText": "I guess this should not happen.\nWe could improve this by making findAndParseKmlFile to always throw an exception if it would not return a trackId.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523770985", "createdAt": "2020-11-15T15:06:13Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -69,20 +68,18 @@ public KmzTrackImporter(Context context, Uri uriFile) {\n     public Track.Id importFile(InputStream inputStream) {\n         Track.Id trackId;\n \n-        if (!copyKmzImages()) {\n-            cleanImport(context, importTrackId);\n-            return null;\n-        }\n-\n         try {\n             trackId = findAndParseKmlFile(inputStream);\n         } catch (Exception e) {\n-            cleanImport(context, importTrackId);\n             throw e;\n         }\n \n         if (trackId == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3NjA5Mw==", "bodyText": "What exception should it throw if not trackId won't be returned? RuntimeException?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523776093", "createdAt": "2020-11-15T15:50:06Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -69,20 +68,18 @@ public KmzTrackImporter(Context context, Uri uriFile) {\n     public Track.Id importFile(InputStream inputStream) {\n         Track.Id trackId;\n \n-        if (!copyKmzImages()) {\n-            cleanImport(context, importTrackId);\n-            return null;\n-        }\n-\n         try {\n             trackId = findAndParseKmlFile(inputStream);\n         } catch (Exception e) {\n-            cleanImport(context, importTrackId);\n             throw e;\n         }\n \n         if (trackId == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MDk4NQ=="}, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MzkwMDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/util/FileUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowNjo0N1rOHzgcsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowNjo0N1rOHzgcsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MTA1Ng==", "bodyText": "fileNameUri should be @nonnull and the null check should be done by the caller (if needed).", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523771056", "createdAt": "2020-11-15T15:06:47Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/util/FileUtils.java", "diffHunk": "@@ -289,6 +289,30 @@ public static File getPhotoFileIfExists(Context context, Track.Id trackId, Uri u\n         return file;\n     }\n \n+    /**\n+     * Builds interval photo file object for fileNameUri Uri.\n+     *\n+     * @param context     the Context.\n+     * @param trackId     the id of the Track.\n+     * @param fileNameUri the file name uri.\n+     * @return            file object or null.\n+     */\n+    public static File buildInternalPhotoFile(Context context, Track.Id trackId, Uri fileNameUri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MzkwMjQ0OnYy", "diffSide": "LEFT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowOTowMFrOHzgdnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxNTowOTowMFrOHzgdnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc3MTI5Mg==", "bodyText": "Attribute must be removed completely (it is always null) and we have an if (importTrackId == null) on this class.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/519#discussion_r523771292", "createdAt": "2020-11-15T15:09:00Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -104,11 +104,6 @@\n         this.recordingDistanceInterval = PreferencesUtils.getRecordingDistanceInterval(context);\n     }\n \n-    AbstractFileTrackImporter(Context context, ContentProviderUtils contentProviderUtils, Track.Id importTrackId) {\n-        this(context, contentProviderUtils);\n-        this.importTrackId = importTrackId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9889c763739fb4a67c3c475631f8fb45a28b5a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1909, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}