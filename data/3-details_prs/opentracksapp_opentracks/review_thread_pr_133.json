{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjYwODky", "number": 133, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMTowM1rODcyxTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNToxMVrODcy1uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTE4NTQzOnYy", "diffSide": "RIGHT", "path": "README_DEVELOPER.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMTowM1rOFlBwKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMTowM1rOFlBwKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MDM0Nw==", "bodyText": "possible", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/133#discussion_r374370347", "createdAt": "2020-02-03T22:11:03Z", "author": {"login": "dennisguse"}, "path": "README_DEVELOPER.md", "diffHunk": "@@ -14,12 +14,12 @@ For the time being, the OpenTracks Data API can be used to implement mainly cust\n \n ## Implementation\n OpenTracks by default does not expose any data to 3rd-party applications.\n-On the request of the user (i.e., pressing a button), an Intent is created that exposes the `Track` data (it's summary) as well as the `TrackPoint`s.\n+On the request of the user (i.e., pressing a button), an Intent is created that exposes the `Track` data (it's summary) as well as the `TrackPoint`s of one or more selected tracks.\n For each, one URI is provided.\n These URIs notify observers if on content changes (e.g., a new `TrackPoint` was added).\n \n Limitations:\n-* only tracks selected by the user is exposed,\n+* only tracks selected by the user are exposed,\n * `Waypoints` are not exposed,\n * access is only granted temporarily and automatically revoked (see `FLAG_GRANT_READ_URI_PERMISSION`),\n * no write access is impossible, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb84d16ccf8d66f82c664059df7a6bf062386ec"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTE4OTQ2OnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMjoxOVrOFlBykQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMjoxOVrOFlBykQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MDk2MQ==", "bodyText": "Can  you applying autoformatting?\n(I guess, at the moment the defaults of AndroidStudio are used).", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/133#discussion_r374370961", "createdAt": "2020-02-03T22:12:19Z", "author": {"login": "dennisguse"}, "path": "src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java", "diffHunk": "@@ -766,4 +766,12 @@ private void insertTrackWithLocations(Track track) {\n         contentProviderUtils.insertTrack(track);\n         contentProviderUtils.bulkInsertTrackPoint(track.getLocations().toArray(new Location[0]), track.getLocations().size(), track.getId());\n     }\n+\n+    @Test\n+    public void testFormatIdListForUri() {\n+        Assert.assertEquals(\"\", ContentProviderUtils.formatIdListForUri(new long[]{}));\n+        Assert.assertEquals(\"12\", ContentProviderUtils.formatIdListForUri(new long[]{12}));\n+        Assert.assertEquals(\"42,43,44\", ContentProviderUtils.formatIdListForUri(new long[]{42,43,44}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb84d16ccf8d66f82c664059df7a6bf062386ec"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTE5MDIxOnYy", "diffSide": "RIGHT", "path": "src/androidTest/java/de/dennisguse/opentracks/util/StringUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMjozNVrOFlBzAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxMjozNVrOFlBzAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MTA3NQ==", "bodyText": "Remove", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/133#discussion_r374371075", "createdAt": "2020-02-03T22:12:35Z", "author": {"login": "dennisguse"}, "path": "src/androidTest/java/de/dennisguse/opentracks/util/StringUtilsTest.java", "diffHunk": "@@ -208,4 +208,5 @@ public void testFormatDecimal() {\n \n         Assert.assertEquals(\"1\", StringUtils.formatDecimal(0.99, 1));\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb84d16ccf8d66f82c664059df7a6bf062386ec"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTE5NDc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNDoyNlrOFlB17Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNDoyNlrOFlB17Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MTgyMQ==", "bodyText": "url.getLastPathSegment()", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/133#discussion_r374371821", "createdAt": "2020-02-03T22:14:26Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java", "diffHunk": "@@ -942,4 +944,30 @@ int getDefaultCursorBatchSize() {\n     void setDefaultCursorBatchSize(int defaultCursorBatchSize) {\n         this.defaultCursorBatchSize = defaultCursorBatchSize;\n     }\n+\n+    /**\n+     * Formats an array of IDs as comma separated string value\n+     *\n+     * @param ids   array with IDs\n+     * @return comma separated list of ids\n+     */\n+    public static String formatIdListForUri(long[] ids) {\n+        StringBuilder idsPathSegment = new StringBuilder();\n+        for (long id : ids) {\n+            if (idsPathSegment.length() > 0) {\n+                idsPathSegment.append(ID_SEPARATOR);\n+            }\n+            idsPathSegment.append(id);\n+        }\n+        return idsPathSegment.toString();\n+    }\n+\n+    public static String[] parseTrackIdsFromTrackPointsUri(Uri url) {\n+        return TextUtils.split(url.getPathSegments().get(2), ID_SEPARATOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb84d16ccf8d66f82c664059df7a6bf062386ec"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTE5Njc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/util/StringUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNToxMVrOFlB3IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjoxNToxMVrOFlB3IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3MjEyOA==", "bodyText": "Remove", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/133#discussion_r374372128", "createdAt": "2020-02-03T22:15:11Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/util/StringUtils.java", "diffHunk": "@@ -415,4 +415,5 @@ public static long parseTime(String xmlDateTime) {\n         }\n         return new Pair<>(value, unit);\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb84d16ccf8d66f82c664059df7a6bf062386ec"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}