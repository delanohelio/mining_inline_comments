{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjU1MTM5", "number": 518, "title": "Optimize import (pstorch's option 4)", "bodyText": "I've coded option 1 (import in two steps) and option 4 (import in memory). I like the best option 4 and I think OOM risk is really hard. Why do I think it's difficult or impossible? I have a 900km track (more than 10 hours recording) and it has a size of 8MB in gpx file. I cannot imagine a 10 times longer track, for instance. But, even in that case the file would be 80MB size.\nAlso, when we'll support several tracks in an only file we have to know that this method load track one by one, so here isn't a problem either.\nI also tried to figure out how options 2 and 3 would be, but for me it was difficult (maybe I don't have the needed knowledge), I didn't see it very clearly.\nPS/ Don't hesitate to throw this PR away if you think memory import can be problematic ;)\nThat said. Here you have a analysis of import times with master branch, two steps import branch and this one (memory branch):\n\n\n\nTest\nMAIN BRANCH\nTWO STEPS IMPORT\nIN MEMORY IMPORT\n\n\n\n\n126 GPX files (all news)\n1'13\"\n1'38\"\n1'11\"\n\n\n169 GPX files (43 already exists)\n2'18\"\n1'52\"\n1'30\"\n\n\n169 GPX files (169 already exists)\n4'59\"\n45\"\n1'11\"\n\n\n\nPS/ All these tests have been run on an very old smartphone I have. Times in Pixel 2 XL are better in all cases.", "createdAt": "2020-11-13T15:40:04Z", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518", "merged": true, "mergeCommit": {"oid": "974a5afeb196bb9c8ca70d4f88a10738e676dfbe"}, "closed": true, "closedAt": "2020-11-25T05:39:09Z", "author": {"login": "rgmf"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcJVCFAFqTUzMDE4NDE2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfxFGCAFqTUzODAwMDgyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTg0MTY3", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#pullrequestreview-530184167", "createdAt": "2020-11-13T15:59:14Z", "commit": {"oid": "f406b3ff3fa27d07fcf41d44fd70129477239720"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f406b3ff3fa27d07fcf41d44fd70129477239720", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/f406b3ff3fa27d07fcf41d44fd70129477239720", "committedDate": "2020-11-13T15:16:07Z", "message": "Marker's photos are copied after import track (because in that point it knows needed track id). Fixes #514."}, "afterCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/413ec8d4c606eb355bbafad8dbe0078c830a81fb", "committedDate": "2020-11-13T17:34:14Z", "message": "Import files by track in memory (avoid clean track when error). Fixes #473."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTY2NTcy", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#pullrequestreview-530566572", "createdAt": "2020-11-14T09:35:27Z", "commit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTozNToyN1rOHzJxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTozNToyN1rOHzJxfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ==", "bodyText": "I wouldn't encapsulate SQLiteConstraintException, because it didn't happen here.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523399549", "createdAt": "2020-11-14T09:35:27Z", "author": {"login": "pstorch"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -279,17 +255,26 @@ protected void onTrackEnd() {\n         }\n         trackData.track.setTrackStatistics(trackData.trackStatisticsUpdater.getTrackStatistics());\n \n-        try {\n-            contentProviderUtils.updateTrack(trackData.track);\n-        } catch (SQLiteConstraintException e) {\n+        Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n+        if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw e;\n+                throw new ImportAlreadyExistsException(new SQLiteConstraintException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb"}, "originalPosition": 95}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/413ec8d4c606eb355bbafad8dbe0078c830a81fb", "committedDate": "2020-11-13T17:34:14Z", "message": "Import files by track in memory (avoid clean track when error). Fixes #473."}, "afterCommit": {"oid": "6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "committedDate": "2020-11-22T19:22:47Z", "message": "Adjustments after rebasing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09245fbabe680134cfe884954753827f45ebb7d5", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/09245fbabe680134cfe884954753827f45ebb7d5", "committedDate": "2020-11-23T17:19:27Z", "message": "Import files by track in memory (avoid clean track when error). Fixes #473."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "committedDate": "2020-11-22T19:22:47Z", "message": "Adjustments after rebasing."}, "afterCommit": {"oid": "09245fbabe680134cfe884954753827f45ebb7d5", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/09245fbabe680134cfe884954753827f45ebb7d5", "committedDate": "2020-11-23T17:19:27Z", "message": "Import files by track in memory (avoid clean track when error). Fixes #473."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99860155fc2555de84375038b9b643239f9ce5c9", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/99860155fc2555de84375038b9b643239f9ce5c9", "committedDate": "2020-11-24T16:30:36Z", "message": "Only clean if parse error is out of <trk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODcxODE3", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#pullrequestreview-537871817", "createdAt": "2020-11-24T20:17:41Z", "commit": {"oid": "99860155fc2555de84375038b9b643239f9ce5c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDAwODIy", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#pullrequestreview-538000822", "createdAt": "2020-11-24T21:59:48Z", "commit": {"oid": "99860155fc2555de84375038b9b643239f9ce5c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2214, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}