{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTAwMjQz", "number": 194, "title": "Images/folders are deleted when tracks/waypoints are deleted. This fixes #189.", "bodyText": "Describe the pull request\nFixes two bugs:\n\nWhen a track with waypoint's photos was deleted, the folder with these photos weren't deleted.\nWhen a waypoint with a photo was deleted, the photo wasn't deleted.\n\nThese two bugs resulted in waste of external storage with the remaining files photos.\nAlso, I've added some new tests:\n\nAll tracks are delete (with waypoint's photo): checks that all folders with waypoint's photos from tracks deleted are deleted from external storage.\nDelete a track (with waypoint's photo): checks that track's deleted folder is deleted but not the others tracks.\nDelete waypoint (with photo): checks that the waypoint's photo is delete too.\n\nWith these tests (I hope) any change about deleting tracks/waypoints in the code guarantee that will be well done.\nLink to the the issue\n#189\nLicense agreement\nBy opening this pull request, you are providing your contribution under the Apache License 2.0 (see LICENSE.md).", "createdAt": "2020-04-25T12:23:07Z", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194", "merged": true, "mergeCommit": {"oid": "240d8f6b6cef60b289a079d5c7621ce024ab0588"}, "closed": true, "closedAt": "2020-04-27T16:18:03Z", "author": {"login": "rgmf"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbFBbDgH2gAyNDA4OTAwMjQzOjQ2YzA2ZjA0Mzg3NDVjN2NlMmJhNTMwOGUzYzYyNTFjMTIzMDE1NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbplrbAH2gAyNDA4OTAwMjQzOmQwN2Y1NGM4Y2NiYWQxOGJmMzM1ODhhZDQ4OTcyMWY5YjMwMDAxOGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/46c06f0438745c7ce2ba5308e3c6251c12301542", "committedDate": "2020-04-25T12:13:07Z", "message": "Images/folders are deleted when tracks/waypoints are deleted. This fixes #189."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzg5NDE4", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#pullrequestreview-400389418", "createdAt": "2020-04-25T12:32:37Z", "commit": {"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMjozMjozN1rOGL03Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMjozNjo1MlrOGL06PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1MzY3MQ==", "bodyText": "Why not throw the IOException?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415053671", "createdAt": "2020-04-25T12:32:37Z", "author": {"login": "dennisguse"}, "path": "src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java", "diffHunk": "@@ -73,4 +79,26 @@ public static void insertTrackWithLocations(ContentProviderUtils contentProvider\n         contentProviderUtils.insertTrack(track);\n         contentProviderUtils.bulkInsertTrackPoint(trackPoints, track.getId());\n     }\n+\n+    /**\n+     * Creates a Waypoint with a photo.\n+     *\n+     * @param context  The context.\n+     * @param trackId  The track id.\n+     * @param location The location.\n+     * @return the Waypoint created.\n+     */\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+        String photoUrl = \"\";\n+        try {\n+            File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n+            dstFile.createNewFile();\n+            Uri photoUri = FileUtils.getUriForFile(context, dstFile);\n+            photoUrl = photoUri.toString();\n+        } catch (IOException ioe) {\n+            throw new RuntimeException(ioe);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1Mzc5Nw==", "bodyText": "if (file == null) {\nreturn;\n}", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415053797", "createdAt": "2020-04-25T12:33:19Z", "author": {"login": "dennisguse"}, "path": "src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java", "diffHunk": "@@ -75,6 +77,17 @@ public void setUp() {\n         contentProviderUtils.deleteAllTracks(context);\n     }\n \n+    private void cleanPhotoDir(File file) {\n+        if (file != null && file.exists() && file.isDirectory()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NDM5Nw==", "bodyText": "Looks exactly like cleanPhotoDir, right?\nWhat about moving it to FileUtils?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415054397", "createdAt": "2020-04-25T12:36:52Z", "author": {"login": "dennisguse"}, "path": "src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java", "diffHunk": "@@ -197,20 +200,21 @@ private void deleteTrackPointsAndWaypoints(Context context, long trackId) {\n         contentResolver.delete(TrackPointsColumns.CONTENT_URI_BY_ID, where, selectionArgs);\n \n         contentResolver.delete(WaypointsColumns.CONTENT_URI, WaypointsColumns.TRACKID + \"=?\", new String[]{Long.toString(trackId)});\n-        deleteDirectoryRecurse(FileUtils.getPhotoDir(context, trackId));\n     }\n \n     /**\n      * Delete the directory recursively.\n      *\n-     * @param dir the directory\n+     * @param file the directory\n      */\n-    private void deleteDirectoryRecurse(File dir) {\n-        if (dir != null && dir.exists() && dir.isDirectory()) {\n-            for (File child : dir.listFiles()) {\n+    private void deleteDirectoryRecurse(File file) {\n+        if (file != null && file.exists() && file.isDirectory()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8db435446edcfd67117c33b108ffb5f84466f59", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/b8db435446edcfd67117c33b108ffb5f84466f59", "committedDate": "2020-04-25T13:04:17Z", "message": "Refactoring: move deleteDirectoryRecurse to FileUtils."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjU3MzE2", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#pullrequestreview-400657316", "createdAt": "2020-04-27T06:27:41Z", "commit": {"oid": "b8db435446edcfd67117c33b108ffb5f84466f59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoyNzo0MlrOGMSxFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjoyNzo0MlrOGMSxFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0MzU3NQ==", "bodyText": "Actually, you can just throw the IOException directly as this is only test code :)", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415543575", "createdAt": "2020-04-27T06:27:42Z", "author": {"login": "dennisguse"}, "path": "src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java", "diffHunk": "@@ -73,4 +79,26 @@ public static void insertTrackWithLocations(ContentProviderUtils contentProvider\n         contentProviderUtils.insertTrack(track);\n         contentProviderUtils.bulkInsertTrackPoint(trackPoints, track.getId());\n     }\n+\n+    /**\n+     * Creates a Waypoint with a photo.\n+     *\n+     * @param context  The context.\n+     * @param trackId  The track id.\n+     * @param location The location.\n+     * @return the Waypoint created.\n+     */\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+        String photoUrl = \"\";\n+        try {\n+            File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n+            dstFile.createNewFile();\n+            Uri photoUri = FileUtils.getUriForFile(context, dstFile);\n+            photoUrl = photoUri.toString();\n+        } catch (IOException ioe) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8db435446edcfd67117c33b108ffb5f84466f59"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d07f54c8ccbad18bf33588ad489721f9b300018e", "author": {"user": {"login": "rgmf", "name": "Rom\u00e1n Mart\u00ednez"}}, "url": "https://github.com/OpenTracksApp/OpenTracks/commit/d07f54c8ccbad18bf33588ad489721f9b300018e", "committedDate": "2020-04-27T06:49:18Z", "message": "RuntimeException by IOException change."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2307, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}