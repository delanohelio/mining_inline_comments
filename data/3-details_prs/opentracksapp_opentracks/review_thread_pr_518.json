{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjU1MTM5", "number": 518, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTozNToyN1rOE48cGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTozNToyN1rOE48cGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTQ1OTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwOTozNToyN1rOHzJxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwNjoyNDowOFrOHzc_Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ==", "bodyText": "I wouldn't encapsulate SQLiteConstraintException, because it didn't happen here.", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523399549", "createdAt": "2020-11-14T09:35:27Z", "author": {"login": "pstorch"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -279,17 +255,26 @@ protected void onTrackEnd() {\n         }\n         trackData.track.setTrackStatistics(trackData.trackStatisticsUpdater.getTrackStatistics());\n \n-        try {\n-            contentProviderUtils.updateTrack(trackData.track);\n-        } catch (SQLiteConstraintException e) {\n+        Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n+        if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw e;\n+                throw new ImportAlreadyExistsException(new SQLiteConstraintException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDY5NA==", "bodyText": "Thank you @pstorch for your review. What do you think something of this:\nthrow new ImportAlreadyExistsException(context.getString(R.string.import_prevent_reimport));\nwith R.string.import_prevent_reimport = \"You have set prevent re-import track\"", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523454694", "createdAt": "2020-11-14T19:35:11Z", "author": {"login": "rgmf"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -279,17 +255,26 @@ protected void onTrackEnd() {\n         }\n         trackData.track.setTrackStatistics(trackData.trackStatisticsUpdater.getTrackStatistics());\n \n-        try {\n-            contentProviderUtils.updateTrack(trackData.track);\n-        } catch (SQLiteConstraintException e) {\n+        Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n+        if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw e;\n+                throw new ImportAlreadyExistsException(new SQLiteConstraintException());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ=="}, "originalCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcxNDM1MQ==", "bodyText": "Normally I don't like translating Exception messages, but in this case we show it to the user. So it might be appropriate.\n@dennisguse what do you think?", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523714351", "createdAt": "2020-11-15T06:24:08Z", "author": {"login": "pstorch"}, "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -279,17 +255,26 @@ protected void onTrackEnd() {\n         }\n         trackData.track.setTrackStatistics(trackData.trackStatisticsUpdater.getTrackStatistics());\n \n-        try {\n-            contentProviderUtils.updateTrack(trackData.track);\n-        } catch (SQLiteConstraintException e) {\n+        Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n+        if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw e;\n+                throw new ImportAlreadyExistsException(new SQLiteConstraintException());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ=="}, "originalCommit": {"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}