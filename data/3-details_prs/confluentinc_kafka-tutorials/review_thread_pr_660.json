{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODExNzY2", "number": 660, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo0NDozM1rOFB7bRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NTowNlrOFCJ5KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTY2NTM0OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo0NDozM1rOIA1HkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo0NDozM1rOIA1HkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc0MTIwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple columns\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537741201", "createdAt": "2020-12-07T18:44:33Z", "author": {"login": "awalther28"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTc0NDk5OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowMjowMVrOIA13pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1MzozOFrOIBJtHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query to concatenate multiple columns. To achieve this, we will use the `+` operator between the fields in our `SELECT` statement rather than a comma.\n          \n      \n    \n    \n  \n\nReading through this a few times, I thought maybe it was talking about the output of the query being comma separated. Feel free to wordsmith different. I think it would be helpful here to say what you are trying to accomplish (column concat) and how you are doing that (+ instead of ,).", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537753510", "createdAt": "2020-12-07T19:02:01Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3ODQ5Mg==", "bodyText": "\u2795 to what @awalther28 wrote.  Explain what you're doing first (which fields, concat, why, etc)...then show.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538078492", "createdAt": "2020-12-08T06:53:38Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA=="}, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTc0ODcyOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowMjo0N1rOIA15vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowMjo0N1rOIA15vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causing them to get concatenated together.\n          \n      \n    \n    \n  \n\n^ If you don't move forward with my other suggestion, I think you meant 'causing'", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754045", "createdAt": "2020-12-07T19:02:47Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTc1Mjc4OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTowMzo0N1rOIA18Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTozMjozNVrOIEPN-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDY1MQ==", "bodyText": "What happens if you don't cast a field to a varchar?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754651", "createdAt": "2020-12-07T19:03:47Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMxNDU1NA==", "bodyText": "results in an error, I've updated the text to state as much", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r541314554", "createdAt": "2020-12-11T21:32:35Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDY1MQ=="}, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTgwNjczOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxNjozNlrOIA2bNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxNjozNlrOIA2bNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2MjYxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now that the reporting query works, let's update it to create a continous query for your reporting scenario\n          \n          \n            \n            Now that the reporting query works, let's update it to create a continuous query for your reporting scenario", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537762612", "createdAt": "2020-12-07T19:16:36Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4\n+\n+This query should produce the following output:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/ksql-concatenation-columns/ksql/code/tutorial-steps/dev/expected-transient-reporting.log %}</code></pre>\n++++++\n+\n+Now that the reporting query works, let's update it to create a continous query for your reporting scenario", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAwMDM5OnYy", "diffSide": "RIGHT", "path": ".semaphore/semaphore.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NDowOFrOIBJdfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NDowOFrOIBJdfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDQ5Mw==", "bodyText": "@bbejeck all file names should not include ksql because later an equivalent tutorial could be written for KStreams.  So ksql-concatenation-columns --> concatenation-columns, etc", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074493", "createdAt": "2020-12-08T06:44:08Z", "author": {"login": "ybyzek"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -344,3 +344,7 @@ blocks:\n         - name: KSQL Time Concepts Tutorial tests\n           commands:\n             - make -C _includes/tutorials/time-concepts/ksql/code tutorial\n+        \n+        - name: KSQL Test ksqlDB concatenate columns tests\n+          commands:\n+            - make -C _includes/tutorials/ksql-concatenation-columns/ksql/code tutorial", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAwNDEyOnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NToyMFrOIBJfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NToyMFrOIBJfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDk5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How do I concatenate values in multiple columns into a single one?\"\n          \n          \n            \n              question: \"How do I concatenate values from multiple columns into a single one?\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074993", "createdAt": "2020-12-08T06:45:20Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAwNTc2OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NTo1NVrOIBJgYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NTo1NVrOIBJgYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NTIzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the concatenation operator to create a single value from multiple coolumns\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538075235", "createdAt": "2020-12-08T06:45:55Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAxMTc4OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/answer/concatenation-answer.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0Nzo1NVrOIBJjig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0Nzo1NVrOIBJjig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NjA0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them together into one field:\n          \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them into one field:\n          \n      \n    \n    \n  \n\nIt is my understanding that concatenate doesn't need the word together (few instances of this usage in the KT)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538076042", "createdAt": "2020-12-08T06:47:55Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/answer/concatenation-answer.adoc", "diffHunk": "@@ -0,0 +1,7 @@\n+Select the fields you want to combine and use the `+` operator to concatenate them together into one field:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAyMDU5OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/create-financial-transaction-stream.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1MToxNFrOIBJogQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1MToxNFrOIBJogQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NzMxMw==", "bodyText": "Is the sequencing right?  The topic hasn't been created yet (that's in the next step).\nWhat does \"no special structure\" mean?  Is there a more technical term that can be used?  (schemaless?)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538077313", "createdAt": "2020-12-08T06:51:14Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/create-financial-transaction-stream.adoc", "diffHunk": "@@ -0,0 +1,8 @@\n+The first thing we do is to create a stream `ACTIVITY_STREAM` based off the topic `stock_purchases`.  The data contained in the topic is just plain JSON, with no special structure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAzNDU4OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NDo1NFrOIBJwjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NDo1NFrOIBJwjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTM3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n          \n          \n            \n            NOTE: You can also SELECT fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate.  For example, you can SELECT individual fields `field_1` and `field_2` at the same time that you concatenate `field_3` with `field_4`.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079372", "createdAt": "2020-12-08T06:54:54Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODAzNTYxOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NTowNlrOIBJxGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NTowNlrOIBJxGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTUxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            SELECT field_1, field_2, field_3 + field_4\n          \n          \n            \n            `SELECT field_1, field_2, field_3 + field_4`", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079512", "createdAt": "2020-12-08T06:55:06Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3872, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}