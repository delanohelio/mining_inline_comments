{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjUwNjA5", "number": 187, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNToyN1rODZgn-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMTo0MjowNlrODdL-Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc1NTEzOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/create-inputs.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNToyN1rOFf7z_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNToyN1rOFf7z_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMDE0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To start off the implementation of this scenario, you need to create a stream that represents the clicks from the users. Since we will be handling time in this scenario, it is important that each click contains a timestamp indicating when that click was done. The field `TIMESTAMP` will be used for this purpose.\n          \n          \n            \n            To start off the implementation of this scenario, we will create a stream that represents the clicks from the users. Since we will be handling time, it is important that each click contains a timestamp indicating when that click was done. The field `TIMESTAMP` will be used for this purpose.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r369030142", "createdAt": "2020-01-21T14:25:27Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/create-inputs.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+To start off the implementation of this scenario, you need to create a stream that represents the clicks from the users. Since we will be handling time in this scenario, it is important that each click contains a timestamp indicating when that click was done. The field `TIMESTAMP` will be used for this purpose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e142f7f67117474d62f272d195bb6359f3dc54"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc1NTcxOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/set-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNTozOFrOFf70Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNTozOFrOFf70Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMDIzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now that you have stream with some events in it, let's start to leverage them. The first thing to do is set the following properties to ensure that you're reading from the beginning of the stream:\n          \n          \n            \n            Now that you have a stream with some events in it, let's start to leverage them. The first thing to do is set the following properties to ensure that you're reading from the beginning of the stream:", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r369030239", "createdAt": "2020-01-21T14:25:38Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/set-properties.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Now that you have stream with some events in it, let's start to leverage them. The first thing to do is set the following properties to ensure that you're reading from the beginning of the stream:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e142f7f67117474d62f272d195bb6359f3dc54"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc2MTQ4OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/transient-query.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNzoxMFrOFf735w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyNzoxMFrOFf735w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMTE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Note that we called the query that find only distinct events as `DETECTED_CLICKS` and we modeled as a table, since we are performing some aggregations in the query. Then we perform a rekeying to ensure that the `IP_ADDRESS` is used as key of the record, by transforming the table back to a stream and using the `PARTITION BY` clause. To verify if everything is working as expected, run the following query:\n          \n          \n            \n            In the first statement above, we created the query that finds only distinct events, naming it `DETECTED_CLICKS`. We modeled it as a table since the query performs aggregations.\n          \n          \n            \n            \n          \n          \n            \n            Then, with the next two statements, we specified a re-keying to ensure that the `IP_ADDRESS` is used as key of the record, by transforming the table back to a stream and using the `PARTITION BY` clause.\n          \n          \n            \n            \n          \n          \n            \n            To verify everything is working as expected, run the following query:", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r369031143", "createdAt": "2020-01-21T14:27:10Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/transient-query.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+Note that we called the query that find only distinct events as `DETECTED_CLICKS` and we modeled as a table, since we are performing some aggregations in the query. Then we perform a rekeying to ensure that the `IP_ADDRESS` is used as key of the record, by transforming the table back to a stream and using the `PARTITION BY` clause. To verify if everything is working as expected, run the following query:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e142f7f67117474d62f272d195bb6359f3dc54"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc3MDI1OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/transient-window.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyOTo0NFrOFf79pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyOTo0NFrOFf79pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAzMjYxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now let's experiment with these events. We need to create a query capable of displaying only distinct events, which means that duplicate IP addresses should be filtered out. Events are de-duped within a 2 minute window, and only unique clicks will be shown on that window. We are going to use the `LIMIT` keyword to limit the amount of records shown in the output, but if you want to play with this query and assess if it is displaying the correct results -- go ahead and remove the limit keyword.\n          \n          \n            \n            Let's experiment with these events. We need to create a query capable of displaying only distinct events, which means that duplicate IP addresses should be filtered out. Events are de-duped within a 2 minute window, and only unique clicks will be shown on that window. We are going to use the `LIMIT` keyword to limit the amount of records shown in the output. If you want to experiment with this query and assess if it is displaying the correct results, go ahead and remove the limit keyword.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r369032615", "createdAt": "2020-01-21T14:29:44Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/finding-distinct/ksql/markup/dev/transient-window.adoc", "diffHunk": "@@ -0,0 +1,11 @@\n+Now let's experiment with these events. We need to create a query capable of displaying only distinct events, which means that duplicate IP addresses should be filtered out. Events are de-duped within a 2 minute window, and only unique clicks will be shown on that window. We are going to use the `LIMIT` keyword to limit the amount of records shown in the output, but if you want to play with this query and assess if it is displaying the correct results -- go ahead and remove the limit keyword.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e142f7f67117474d62f272d195bb6359f3dc54"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTMxNDAzOnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMTo0MjowNlrOFlpX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNTo0MjoyNVrOFl8nAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxOTUwOQ==", "bodyText": "@riferrei I think @blueedgenick's suggestion above is worth heeding for both KStreams and KSQL flavors. I suggested a slight rewording of the shared problem statement. To me the introduction seems okay as is. What do you all think?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              problem: \"you have events in a Kafka topic, and you want to filter out duplicate events based on a field in the event, producing a new stream of only unique events\"\n          \n          \n            \n              problem: \"you have events in a Kafka topic, and you want to filter out duplicate events based on a field in the event, producing a new stream of unique events per time window\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r375019509", "createdAt": "2020-02-05T01:42:06Z", "author": {"login": "colinhicks"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -165,7 +165,7 @@ finding-distinct:\n   problem: \"you have events in a Kafka topic, and you want to filter out duplicate events based on a field in the event, producing a new stream of only unique events\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a46d9e2a9650ec3ee65f96fc9ab71dfb258fdc"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMzNDY1OA==", "bodyText": "Yup, make sense!", "url": "https://github.com/confluentinc/kafka-tutorials/pull/187#discussion_r375334658", "createdAt": "2020-02-05T15:42:25Z", "author": {"login": "riferrei"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -165,7 +165,7 @@ finding-distinct:\n   problem: \"you have events in a Kafka topic, and you want to filter out duplicate events based on a field in the event, producing a new stream of only unique events\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxOTUwOQ=="}, "originalCommit": {"oid": "d8a46d9e2a9650ec3ee65f96fc9ab71dfb258fdc"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4013, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}