{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODExNzY2", "number": 660, "title": "DEVX-2225: Convert column concatenation recipe to KT", "bodyText": "Description\nConversion for column concatenation recipie\nStaging\nhttp://kafka-tutorials-staging.s3-website-us-west-2.amazonaws.com/DEVX-2225_column_concatenation/\nhttp://kafka-tutorials-staging.s3-website-us-west-2.amazonaws.com/DEVX-2225_column_concatenation/concatenation/ksql.html", "createdAt": "2020-12-04T21:55:05Z", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660", "merged": true, "mergeCommit": {"oid": "34922c4b287ec8ebbbeb2cab061c8f40c775baa1"}, "closed": true, "closedAt": "2020-12-14T15:44:28Z", "author": {"login": "bbejeck"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj6lW6gFqTU0NjQzMjQ4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmHQ5egH2gAyNTMyODExNzY2OjAwZTkwNmRmZmU2YTlhNmFmYjk1NGE4MjA4Mzk0ZDQ4MGI2ZWJlNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDMyNDg1", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#pullrequestreview-546432485", "createdAt": "2020-12-07T18:44:33Z", "commit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODo0NDozM1rOIA1HkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxNjozNlrOIA2bNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc0MTIwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple columns\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537741201", "createdAt": "2020-12-07T18:44:33Z", "author": {"login": "awalther28"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query to concatenate multiple columns. To achieve this, we will use the `+` operator between the fields in our `SELECT` statement rather than a comma.\n          \n      \n    \n    \n  \n\nReading through this a few times, I thought maybe it was talking about the output of the query being comma separated. Feel free to wordsmith different. I think it would be helpful here to say what you are trying to accomplish (column concat) and how you are doing that (+ instead of ,).", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537753510", "createdAt": "2020-12-07T19:02:01Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDA0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n          \n          \n            \n            Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causing them to get concatenated together.\n          \n      \n    \n    \n  \n\n^ If you don't move forward with my other suggestion, I think you meant 'causing'", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754045", "createdAt": "2020-12-07T19:02:47Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1NDY1MQ==", "bodyText": "What happens if you don't cast a field to a varchar?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537754651", "createdAt": "2020-12-07T19:03:47Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2MjYxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Now that the reporting query works, let's update it to create a continous query for your reporting scenario\n          \n          \n            \n            Now that the reporting query works, let's update it to create a continuous query for your reporting scenario", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r537762612", "createdAt": "2020-12-07T19:16:36Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4\n+\n+This query should produce the following output:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"shell\">{% include_raw tutorials/ksql-concatenation-columns/ksql/code/tutorial-steps/dev/expected-transient-reporting.log %}</code></pre>\n++++++\n+\n+Now that the reporting query works, let's update it to create a continous query for your reporting scenario", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Nzg1NzEz", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#pullrequestreview-546785713", "createdAt": "2020-12-08T06:44:08Z", "commit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0NDowOFrOIBJdfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo1NTowNlrOIBJxGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDQ5Mw==", "bodyText": "@bbejeck all file names should not include ksql because later an equivalent tutorial could be written for KStreams.  So ksql-concatenation-columns --> concatenation-columns, etc", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074493", "createdAt": "2020-12-08T06:44:08Z", "author": {"login": "ybyzek"}, "path": ".semaphore/semaphore.yml", "diffHunk": "@@ -344,3 +344,7 @@ blocks:\n         - name: KSQL Time Concepts Tutorial tests\n           commands:\n             - make -C _includes/tutorials/time-concepts/ksql/code tutorial\n+        \n+        - name: KSQL Test ksqlDB concatenate columns tests\n+          commands:\n+            - make -C _includes/tutorials/ksql-concatenation-columns/ksql/code tutorial", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NDk5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How do I concatenate values in multiple columns into a single one?\"\n          \n          \n            \n              question: \"How do I concatenate values from multiple columns into a single one?\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538074993", "createdAt": "2020-12-08T06:45:20Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NTIzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"\n          \n          \n            \n              introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the concatenation operator to create a single value from multiple coolumns\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538075235", "createdAt": "2020-12-08T06:45:55Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -575,3 +575,22 @@ ksql-heterogeneous-json:\n     scala: disabled\n     swift: disabled\n     \n+\n+ksql-concatenation-columns:\n+  title: \"Column Concatenation\"\n+  meta-description: \"Column Concatenation\"\n+  slug: \"/concatenate-columns\"\n+  question: \"How do I concatenate values in multiple columns into a single one?\"\n+  introduction: \"Suppose you have a table and you need to combine 2 or more columns into a single value.  In this tutorial we'll show how to use the ksqlDB concatenation operator to create a single value from multiple coolumns\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NjA0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them together into one field:\n          \n          \n            \n            Select the fields you want to combine and use the `+` operator to concatenate them into one field:\n          \n      \n    \n    \n  \n\nIt is my understanding that concatenate doesn't need the word together (few instances of this usage in the KT)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538076042", "createdAt": "2020-12-08T06:47:55Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/answer/concatenation-answer.adoc", "diffHunk": "@@ -0,0 +1,7 @@\n+Select the fields you want to combine and use the `+` operator to concatenate them together into one field:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NzMxMw==", "bodyText": "Is the sequencing right?  The topic hasn't been created yet (that's in the next step).\nWhat does \"no special structure\" mean?  Is there a more technical term that can be used?  (schemaless?)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538077313", "createdAt": "2020-12-08T06:51:14Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/create-financial-transaction-stream.adoc", "diffHunk": "@@ -0,0 +1,8 @@\n+The first thing we do is to create a stream `ACTIVITY_STREAM` based off the topic `stock_purchases`.  The data contained in the topic is just plain JSON, with no special structure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3ODQ5Mg==", "bodyText": "\u2795 to what @awalther28 wrote.  Explain what you're doing first (which fields, concat, why, etc)...then show.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538078492", "createdAt": "2020-12-08T06:53:38Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc1MzUxMA=="}, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTM3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n          \n          \n            \n            NOTE: You can also SELECT fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate.  For example, you can SELECT individual fields `field_1` and `field_2` at the same time that you concatenate `field_3` with `field_4`.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079372", "createdAt": "2020-12-08T06:54:54Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3OTUxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            SELECT field_1, field_2, field_3 + field_4\n          \n          \n            \n            `SELECT field_1, field_2, field_3 + field_4`", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#discussion_r538079512", "createdAt": "2020-12-08T06:55:06Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-concatenation-columns/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,35 @@\n+Now we write a query where we select the desired fields but we don't have them listed in a comma separated list.  Instead we use the `+` operator between the fields causting them to get concatenated together.\n+\n+[source, sql]\n+----\n+\n+SELECT FIRST_NAME + ' ' + LAST_NAME +\n+       ' purchased ' +\n+       CAST(NUM_SHARES AS VARCHAR) + <1>\n+       ' shares of ' +\n+       SYMBOL AS SUMMARY\n+FROM ACTIVITY_STREAM\n+EMIT CHANGES\n+LIMIT 4;\n+\n+\n+----\n+\n+<1> The NUM_SHARES field is an `INT` so we need to cast it to a `VARCHAR` as `concatenate` only works with `STRING` types\n+\n+NOTE: You can also select fields you don't want to concatenate.  In that case you use a comma to separate the field from those you concatenate together.  For example\n+SELECT field_1, field_2, field_3 + field_4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f918c7185296c80fa6552d272dc316c588b4d2f", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/4f918c7185296c80fa6552d272dc316c588b4d2f", "committedDate": "2020-12-04T21:45:40Z", "message": "Final commit for concatentate tutorial"}, "afterCommit": {"oid": "d3ffae6cdb6314a57de729be27c4e56f234d2a18", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/d3ffae6cdb6314a57de729be27c4e56f234d2a18", "committedDate": "2020-12-11T22:13:32Z", "message": "Updates per comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjI0Nzgx", "url": "https://github.com/confluentinc/kafka-tutorials/pull/660#pullrequestreview-550624781", "createdAt": "2020-12-11T22:41:45Z", "commit": {"oid": "d3ffae6cdb6314a57de729be27c4e56f234d2a18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "468b3f2e1feea6a4ebd006a7bc3417fa1ded5159", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/468b3f2e1feea6a4ebd006a7bc3417fa1ded5159", "committedDate": "2020-12-14T15:07:57Z", "message": "re-commit after undoing a merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9497978f0547a7aa00b3e000c13433a011abe200", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/9497978f0547a7aa00b3e000c13433a011abe200", "committedDate": "2020-12-14T15:10:56Z", "message": "Updates per comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3ffae6cdb6314a57de729be27c4e56f234d2a18", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/d3ffae6cdb6314a57de729be27c4e56f234d2a18", "committedDate": "2020-12-11T22:13:32Z", "message": "Updates per comments"}, "afterCommit": {"oid": "9497978f0547a7aa00b3e000c13433a011abe200", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/9497978f0547a7aa00b3e000c13433a011abe200", "committedDate": "2020-12-14T15:10:56Z", "message": "Updates per comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00e906dffe6a9a6afb954a8208394d480b6ebe48", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/00e906dffe6a9a6afb954a8208394d480b6ebe48", "committedDate": "2020-12-14T15:14:09Z", "message": "fix from botched rebase"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 122, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}