{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDM3MTQz", "number": 598, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjoyODo0M1rOEwVk7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo1NDo0MFrOEwWPWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTIwNjIzOnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjoyODo0M1rOHl1JyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjoyODo0M1rOHl1JyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzMDIxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"If I have a Kafka topic, how do I continuously mask a set of fields?\"\n          \n          \n            \n              question: \"How can I mask fields in my Kafka topic?\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509430216", "createdAt": "2020-10-21T16:28:43Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -465,3 +465,22 @@ kafka-streams-schedule-operations:\n     scala: disabled\n     swift: disabled\n \n+\n+masking-data:\n+  title: \"Masking data\"\n+  meta-description: \"Masking data\"\n+  slug: \"/masking-data\"\n+  question: \"If I have a Kafka topic, how do I continuously mask a set of fields?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTIxMTgwOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/masking-data/ksql/markup/dev/create-purchases-pii-obfuscated.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjozMDowMlrOHl1NXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjozMDowMlrOHl1NXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzMTEzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The second technique for masking data utilizes KSQL's built in `MASK` functions. Here we retain the customer name and date of birth, but obfuscated.\n          \n          \n            \n            The second technique for masking data utilizes ksqlDB's built in `MASK` functions. Here we retain the customer name and date of birth, but obfuscated.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509431135", "createdAt": "2020-10-21T16:30:02Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/masking-data/ksql/markup/dev/create-purchases-pii-obfuscated.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+The second technique for masking data utilizes KSQL's built in `MASK` functions. Here we retain the customer name and date of birth, but obfuscated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTI4NDQ0OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0NzoyOFrOHl16iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0NzoyOFrOHl16iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0MjY5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            KSQL offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the KSQL documentation link:https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*link here*,window=_blank] for more information.\n          \n          \n            \n            ksqlDB offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*ksqlDB documentation*,window=_blank] for more information.\n          \n      \n    \n    \n  \n\nJust a thought about the link text you can leave it as is.\nBut we should change KSQL to ksqlDB though.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509442699", "createdAt": "2020-10-21T16:47:28Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "diffHunk": "@@ -0,0 +1,24 @@\n+Use the command below to query the contents of the purchases_pii_obfuscated stream:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/print-purchases-obfuscated-topic.sql %}</code></pre>\n++++++\n+\n+We can see that the sensitive data is masked with x's or n's.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/expected-purchases-obfuscated-output.log %}</code></pre>\n++++++\n+\n+[TIP]\n+.`MASK` Function Options\n+====\n+There are a few types of masking functions and optional parameters that may be of use to you. +\n+\n+*Optional arguments:* +\n+`MASK(CUSTOMER_NAME, 'X', 'x', 'n', '-')` +\n+In the example above, the following types of characters in `CUSTOMER_NAME` would be masked: upper-case letters would become `X`, lower-case letters would become `x`, numbers would become `n`, and other characters would become `-`. This is the default setting if no mask characters are present. Set a given mask character to NULL to prevent any masking of that character type. +\n+\n+*Other types of `MASK` Functions:* +\n+KSQL offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the KSQL documentation link:https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*link here*,window=_blank] for more information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTMwNjI3OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo1Mjo1MVrOHl2IMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNzoyNjo0N1rOHl31jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NjE5NQ==", "bodyText": "Maybe at the end of this step instruct the user they can shutdown ksqlDB with a CTRL+D", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509446195", "createdAt": "2020-10-21T16:52:51Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "diffHunk": "@@ -0,0 +1,24 @@\n+Use the command below to query the contents of the purchases_pii_obfuscated stream:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/print-purchases-obfuscated-topic.sql %}</code></pre>\n++++++\n+\n+We can see that the sensitive data is masked with x's or n's.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/expected-purchases-obfuscated-output.log %}</code></pre>\n++++++\n+\n+[TIP]\n+.`MASK` Function Options\n+====\n+There are a few types of masking functions and optional parameters that may be of use to you. +\n+\n+*Optional arguments:* +\n+`MASK(CUSTOMER_NAME, 'X', 'x', 'n', '-')` +\n+In the example above, the following types of characters in `CUSTOMER_NAME` would be masked: upper-case letters would become `X`, lower-case letters would become `x`, numbers would become `n`, and other characters would become `-`. This is the default setting if no mask characters are present. Set a given mask character to NULL to prevent any masking of that character type. +\n+\n+*Other types of `MASK` Functions:* +\n+KSQL offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the KSQL documentation link:https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*link here*,window=_blank] for more information.\n+====", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ3MDMzOQ==", "bodyText": "A few other tutorials have something along the lines of Type 'exit' and hit enter to exit the ksqlDB cli. I just added a very similar statement to the end of the dev instructions. I can change this to CTRL+D if you prefer.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509470339", "createdAt": "2020-10-21T17:22:59Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "diffHunk": "@@ -0,0 +1,24 @@\n+Use the command below to query the contents of the purchases_pii_obfuscated stream:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/print-purchases-obfuscated-topic.sql %}</code></pre>\n++++++\n+\n+We can see that the sensitive data is masked with x's or n's.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/expected-purchases-obfuscated-output.log %}</code></pre>\n++++++\n+\n+[TIP]\n+.`MASK` Function Options\n+====\n+There are a few types of masking functions and optional parameters that may be of use to you. +\n+\n+*Optional arguments:* +\n+`MASK(CUSTOMER_NAME, 'X', 'x', 'n', '-')` +\n+In the example above, the following types of characters in `CUSTOMER_NAME` would be masked: upper-case letters would become `X`, lower-case letters would become `x`, numbers would become `n`, and other characters would become `-`. This is the default setting if no mask characters are present. Set a given mask character to NULL to prevent any masking of that character type. +\n+\n+*Other types of `MASK` Functions:* +\n+KSQL offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the KSQL documentation link:https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*link here*,window=_blank] for more information.\n+====", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NjE5NQ=="}, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ3NDE4OQ==", "bodyText": "I can change this to CTRL+D if you prefer.\n\nI like what you've done better.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509474189", "createdAt": "2020-10-21T17:26:47Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/masking-data/ksql/markup/dev/print-purchases-obfuscated-topic.adoc", "diffHunk": "@@ -0,0 +1,24 @@\n+Use the command below to query the contents of the purchases_pii_obfuscated stream:\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/print-purchases-obfuscated-topic.sql %}</code></pre>\n++++++\n+\n+We can see that the sensitive data is masked with x's or n's.\n+\n++++++\n+<pre class=\"snippet\"><code class=\"sql\">{% include_raw tutorials/masking-data/ksql/code/tutorial-steps/dev/expected-purchases-obfuscated-output.log %}</code></pre>\n++++++\n+\n+[TIP]\n+.`MASK` Function Options\n+====\n+There are a few types of masking functions and optional parameters that may be of use to you. +\n+\n+*Optional arguments:* +\n+`MASK(CUSTOMER_NAME, 'X', 'x', 'n', '-')` +\n+In the example above, the following types of characters in `CUSTOMER_NAME` would be masked: upper-case letters would become `X`, lower-case letters would become `x`, numbers would become `n`, and other characters would become `-`. This is the default setting if no mask characters are present. Set a given mask character to NULL to prevent any masking of that character type. +\n+\n+*Other types of `MASK` Functions:* +\n+KSQL offers a variety of different masking functions that allow you to mask the farthest or nearest _x_ number of characters on right or left. Check out the KSQL documentation link:https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#mask[*link here*,window=_blank] for more information.\n+====", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NjE5NQ=="}, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTMxNDgzOnYy", "diffSide": "RIGHT", "path": "index.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo1NDo0MFrOHl2NWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNzoyMToxNVrOHl3gHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NzUxMw==", "bodyText": "Maybe move this link to the top of this section; since it will be a new tutorial, it will be easier for users to find.\nAs a side note, we've been discussing ways of organizing the KT main page, but for the near term moving it up in the list should work.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509447513", "createdAt": "2020-10-21T16:54:40Z", "author": {"login": "bbejeck"}, "path": "index.html", "diffHunk": "@@ -70,6 +70,7 @@ <h2 class=\"subtitle\">Apache Kafka is a powerful, scalable, fault-tolerant distri\n             <li class=\"more is-hidden\"><a href=\"dynamic-output-topic/kstreams.html\">Choose the output topic dynamically</a></li>\n             <li class=\"more is-hidden\"><a href=\"naming-stateful-operations/kstreams.html\">Name stateful operations</a></li>\n             <li class=\"more is-hidden\"><a href=\"kafka-streams-convert-to-ktable/kstreams.html\">Convert a KStream to a KTable</a></li>\n+            <li class=\"more is-hidden\"><a href=\"masking-data/ksql.html\">Masking data</a></li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ2ODcwMw==", "bodyText": "Makes sense, I moved it to the top of the list.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/598#discussion_r509468703", "createdAt": "2020-10-21T17:21:15Z", "author": {"login": "awalther28"}, "path": "index.html", "diffHunk": "@@ -70,6 +70,7 @@ <h2 class=\"subtitle\">Apache Kafka is a powerful, scalable, fault-tolerant distri\n             <li class=\"more is-hidden\"><a href=\"dynamic-output-topic/kstreams.html\">Choose the output topic dynamically</a></li>\n             <li class=\"more is-hidden\"><a href=\"naming-stateful-operations/kstreams.html\">Name stateful operations</a></li>\n             <li class=\"more is-hidden\"><a href=\"kafka-streams-convert-to-ktable/kstreams.html\">Convert a KStream to a KTable</a></li>\n+            <li class=\"more is-hidden\"><a href=\"masking-data/ksql.html\">Masking data</a></li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0NzUxMw=="}, "originalCommit": {"oid": "51047e983e95dc3db0a9b37913de80abe8837892"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3835, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}