{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Mzc0MTU1", "number": 424, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMDowN1rOEC-bTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMjowMlrOEC-eVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTU1NDA2OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/transforming/ksql/markup/dev/transient-query.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMDowN1rOGfwi6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMDowN1rOGfwi6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NDQxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Let's break apart the `title` field and extract the year that the movie was published into its own column. Issue the following transient push query. This will block and continue to return results until it's limit is reached or you tell it to stop.\n          \n          \n            \n            Let's break apart the `title` field and extract the year that the movie was published into its own column. Issue the following transient push query. This will block and continue to return results until its limit is reached or you tell it to stop.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/424#discussion_r435954410", "createdAt": "2020-06-05T14:20:07Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/transforming/ksql/markup/dev/transient-query.adoc", "diffHunk": "@@ -1,4 +1,4 @@\n-Let's break apart the `title` field and extract the year that the movie was published into its own column. Issue the following transient query. This will block and continue to return results until it's limit is reached or you tell it to stop.\n+Let's break apart the `title` field and extract the year that the movie was published into its own column. Issue the following transient push query. This will block and continue to return results until it's limit is reached or you tell it to stop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "470b55342e943cf1826df36dd7bd06e89428027b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTU1NjA0OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/tumbling-windows/ksql/markup/dev/transient-query.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMDozN1rOGfwkIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMDozN1rOGfwkIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NDcyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            As a bonus, we can prove to ourselves that the window boundaries are in fact 6 hour intervals. Run the following transient push query, which uses the `TIMESTAMPTOSTRING` function to convert the UNIX timestamps into something that we can read:\n          \n          \n            \n            As a bonus, we can prove to ourselves that the window boundaries are in fact 6-hour intervals. Run the following transient push query, which uses the `TIMESTAMPTOSTRING` function to convert the UNIX timestamps into something that we can read:", "url": "https://github.com/confluentinc/kafka-tutorials/pull/424#discussion_r435954720", "createdAt": "2020-06-05T14:20:37Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/tumbling-windows/ksql/markup/dev/transient-query.adoc", "diffHunk": "@@ -1,4 +1,4 @@\n-As a bonus, we can prove to ourselves that the window boundaries are in fact 6 hour intervals. Run the following transient query, which uses the `TIMESTAMPTOSTRING` function to convert the UNIX timestamps into something that we can read:\n+As a bonus, we can prove to ourselves that the window boundaries are in fact 6 hour intervals. Run the following transient push query, which uses the `TIMESTAMPTOSTRING` function to convert the UNIX timestamps into something that we can read:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "470b55342e943cf1826df36dd7bd06e89428027b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTU2MTgxOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/tumbling-windows/ksql/markup/dev/transient-window.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMjowMlrOGfwntQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyMjowMlrOGfwntQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NTYzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Let's figure out how many ratings were given to each movie in 6 hour tumbling intervals. To do that, we issue the following transient push query to aggregate the ratings grouped by the movie's name. This tells ksqlDB that you only want to sum up the ratings on a per movie basis. It also captures the window start and end times. These functions describe the boundaries that represent each 6 hour interval. The following will block and continue to return results until its limit is reached or you tell it to stop.\n          \n          \n            \n            Let's figure out how many ratings were given to each movie in tumbling, 6-hour intervals. To do that, we issue the following transient push query to aggregate the ratings, grouped by the movie's name. This tells ksqlDB that you only want to sum up the ratings on a per-movie basis. It also captures the window start and end times. These functions describe the boundaries that represent each 6-hour interval. The following will block and continue to return results until its limit is reached or you tell it to stop.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/424#discussion_r435955637", "createdAt": "2020-06-05T14:22:02Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/tumbling-windows/ksql/markup/dev/transient-window.adoc", "diffHunk": "@@ -1,4 +1,4 @@\n-Let's figure out how many ratings were given to each movie in 6 hour tumbling intervals. To do that, we issue the following transient query to aggregate the ratings grouped by the movie's name. This tells ksqlDB that you only want to sum up the ratings on a per movie basis. It also captures the window start and end times. These functions describe the boundaries that represent each 6 hour interval. The following will block and continue to return results until its limit is reached or you tell it to stop.\n+Let's figure out how many ratings were given to each movie in 6 hour tumbling intervals. To do that, we issue the following transient push query to aggregate the ratings grouped by the movie's name. This tells ksqlDB that you only want to sum up the ratings on a per movie basis. It also captures the window start and end times. These functions describe the boundaries that represent each 6 hour interval. The following will block and continue to return results until its limit is reached or you tell it to stop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "470b55342e943cf1826df36dd7bd06e89428027b"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3908, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}