{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzAyOTI2", "number": 640, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1Njo0NlrOE7h6nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMToyMlrOE7k-Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU3MTE5OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1Njo0NlrOH3OoBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzoyN1rOH3ZUwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzM0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              title: \"Working with heterogenous JSON records in ksqlDB\"\n          \n          \n            \n              title: \"Working with heterogenous JSON records\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673349", "createdAt": "2020-11-20T12:56:46Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0ODY0MA==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527848640", "createdAt": "2020-11-20T17:27:27Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzM0OQ=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU3MTc1OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1Njo1NVrOH3OoWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzozMDozM1rOH3ZekQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n          \n          \n            \n              meta-description: \"Working with heterogenous JSON records\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673435", "createdAt": "2020-11-20T12:56:55Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MTE1Mw==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527851153", "createdAt": "2020-11-20T17:30:33Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzQzNQ=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU3MzYwOnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1NzoxNVrOH3OpSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzozNVrOH3ZVKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzY3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              slug: \"/ksqldb-working-with-json-different-structure\"\n          \n          \n            \n              slug: \"/working-with-json-different-structure\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673672", "createdAt": "2020-11-20T12:57:15Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0ODc0NA==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527848744", "createdAt": "2020-11-20T17:27:35Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzY3Mg=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU3NTQ4OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1Nzo0MFrOH3OqPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzo0MlrOH3ZViw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzkxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How do I select fields from records with different structures and possibly different values?\"\n          \n          \n            \n              question: \"How do I select fields from a stream of records with different structures and possibly different values?\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673917", "createdAt": "2020-11-20T12:57:40Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0ODg0Mw==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527848843", "createdAt": "2020-11-20T17:27:42Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzkxNw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU3NzA4OnYy", "diffSide": "RIGHT", "path": "_data/tutorials.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1ODoxMFrOH3OrJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzo1MlrOH3ZWBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NDE1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a topic with JSON and not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"\n          \n          \n            \n              introduction: \"Suppose you have a topic with JSON-formatted records, but not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527674150", "createdAt": "2020-11-20T12:58:10Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"\n+  introduction: \"Suppose you have a topic with JSON and not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0ODk2NQ==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527848965", "createdAt": "2020-11-20T17:27:52Z", "author": {"login": "bbejeck"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"\n+  introduction: \"Suppose you have a topic with JSON and not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NDE1MA=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU4MzUyOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowMDowN1rOH3Ou_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyODowNVrOH3ZWsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTEzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n          \n          \n            \n            Let's say you have a Kafka topic `source_data` that contains JSON-formatted data.  But each nested JSON object has a different structure.  Additionally, within each object the values have a mix of types.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527675135", "createdAt": "2020-11-20T13:00:07Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0OTEzOA==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527849138", "createdAt": "2020-11-20T17:28:05Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTEzNQ=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU4NjQxOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowMDo1OFrOH3Owug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyODo0MFrOH3ZYhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTU3OA==", "bodyText": "Given the example below, can we name the field that is common?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527675578", "createdAt": "2020-11-20T13:00:58Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0OTYwNw==", "bodyText": "changed the text some LMK WYT", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527849607", "createdAt": "2020-11-20T17:28:40Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTU3OA=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU5MTg1OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/code/src/statements.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowMjozOVrOH3O0Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyODo1MFrOH3ZZEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NjQyMg==", "bodyText": "This is just for consideration, would it be a valid name and would it be more helpful to change the word to a number, e.g. instead of JSONTypeOne, write JSONType1, etc....  The reasoning is it may be easier for a reader to more quickly digest, at least for me it is.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527676422", "createdAt": "2020-11-20T13:02:39Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/code/src/statements.sql", "diffHunk": "@@ -0,0 +1,18 @@\n+CREATE STREAM DATA_STREAM ( \n+  JSONTypeOne VARCHAR, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0OTc0NQ==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527849745", "createdAt": "2020-11-20T17:28:50Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/code/src/statements.sql", "diffHunk": "@@ -0,0 +1,18 @@\n+CREATE STREAM DATA_STREAM ( \n+  JSONTypeOne VARCHAR, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NjQyMg=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU5NTcwOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowMzo1OFrOH3O2bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyOTowMVrOH3ZZrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzAzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <3> The field you want form JSONTypeThree\n          \n          \n            \n            <3> The field you want from JSONTypeThree", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677037", "createdAt": "2020-11-20T13:03:58Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6,\n+    \"fieldC\": \"data\",\n+    \"fieldD\": \"D-data\"    <3>\n+  }\n+----\n+<1> The field you want from JSONTypeOne\n+<2> The field you want from JSONTypeTwo\n+<3> The field you want form JSONTypeThree", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0OTkwMw==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527849903", "createdAt": "2020-11-20T17:29:01Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6,\n+    \"fieldC\": \"data\",\n+    \"fieldD\": \"D-data\"    <3>\n+  }\n+----\n+<1> The field you want from JSONTypeOne\n+<2> The field you want from JSONTypeTwo\n+<3> The field you want form JSONTypeThree", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzAzNw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODU5NzQ3OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowNDozNFrOH3O3gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyOToxMVrOH3ZaJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzMxMw==", "bodyText": "In my environment: I can't get this this third record to display in Safari unless I expand.  Scrolling does not help.\nCan you please try in your view: do you see this 3rd record type?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677313", "createdAt": "2020-11-20T13:04:34Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgyNjYxMA==", "bodyText": "No, I have to expand as well.  It's like this with all KT's, maybe we need to explore the default of having it expand or allow scrolling.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527826610", "createdAt": "2020-11-20T16:55:31Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzMxMw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgyOTU1MA==", "bodyText": "As a workaround, what do you think about splitting each of the 3 JSON types into their own [source, json] code block?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527829550", "createdAt": "2020-11-20T16:59:29Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzMxMw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MDAyMg==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527850022", "createdAt": "2020-11-20T17:29:11Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzMxMw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODYwMDMzOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/create-different-type-stream.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowNToxNVrOH3O5IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzozMDoyMlrOH3Zd5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzcyOA==", "bodyText": "There are a few instances of \"stock purchase transactions\" -- is that supposed to be there, or it's remnant from a clone?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677728", "createdAt": "2020-11-20T13:05:15Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/create-different-type-stream.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+The first thing we do is to create a stream `DATA_STREAM` based off stock purchase transactions topic `source_data`. Within the `CREATE STREAM` statement, you'll use a `VARCHAR` keyword to define each of outer most element of the JSON types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MDk4Mg==", "bodyText": "whoops!", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527850982", "createdAt": "2020-11-20T17:30:22Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/create-different-type-stream.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+The first thing we do is to create a stream `DATA_STREAM` based off stock purchase transactions topic `source_data`. Within the `CREATE STREAM` statement, you'll use a `VARCHAR` keyword to define each of outer most element of the JSON types.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzcyOA=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODYwNTAyOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/make-src-file.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowNjozOVrOH3O77w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyOToyMFrOH3ZaiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3ODQ0Nw==", "bodyText": "\"that's doing the right thing\" is vague.  Can this be more descriptive?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527678447", "createdAt": "2020-11-20T13:06:39Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/make-src-file.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Now that you have a series of statements that's doing the right thing, the last step is to put them into a file so that they can be used outside the CLI session. Create a file at `src/statements.sql` with the following content:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MDEyMA==", "bodyText": "ack", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527850120", "createdAt": "2020-11-20T17:29:20Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/make-src-file.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Now that you have a series of statements that's doing the right thing, the last step is to put them into a file so that they can be used outside the CLI session. Create a file at `src/statements.sql` with the following content:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3ODQ0Nw=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTA2MTM5OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/transient-reporting.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDo1ODo1N1rOH3TNOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyOTo1MlrOH3ZceA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0ODQwOA==", "bodyText": "Maybe I missed it, but it might be good to also add that NULL is returned if nothing was found at the specified path.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527748408", "createdAt": "2020-11-20T14:58:57Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+We need to create a query that extracts the fields we want from input sources.  Since we have defined the top element of the JSON as a String using the `VARCHAR` keyword,\n+we can use the https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#extractjsonfield[ksqlDB EXTRACTJSONFIELD function] to extract the different values at a specified https://jsonpath.com/[JSONPath].\n+\n+NOTE: The result of `EXTRACTJSONFIELD` function is always a `STRING` type. To convert the result to another type you'll need to use the `CAST` operator. We've done that with our queries in this tutorial.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1MDYxNg==", "bodyText": "good catch, updated to say it returns null if not found", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527850616", "createdAt": "2020-11-20T17:29:52Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+We need to create a query that extracts the fields we want from input sources.  Since we have defined the top element of the JSON as a String using the `VARCHAR` keyword,\n+we can use the https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#extractjsonfield[ksqlDB EXTRACTJSONFIELD function] to extract the different values at a specified https://jsonpath.com/[JSONPath].\n+\n+NOTE: The result of `EXTRACTJSONFIELD` function is always a `STRING` type. To convert the result to another type you'll need to use the `CAST` operator. We've done that with our queries in this tutorial.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0ODQwOA=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTA3MTQyOnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMToyMlrOH3TTbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1NTozNlrOH8JFYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng==", "bodyText": "To me I would think the answer is to use EXTRACTJSONFIELD which requires the JSON you're accessing to be a \"string/varchar\".", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527749996", "createdAt": "2020-11-20T15:01:22Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxNDQxNA==", "bodyText": "Unless I misunderstand your point here, EXTRACTJSONFIELD always returns a string, but inside the JSON, the value you're accessing could be a non-string value.  I have an example of this in the tutorial.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527814414", "createdAt": "2020-11-20T16:38:20Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzgxNjA3Mw==", "bodyText": "What I'm trying to get at is\n\nIf the requested JSONPath does not exist, the function returns NULL. (https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#extractjsonfield)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527816073", "createdAt": "2020-11-20T16:40:51Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2MzkyNQ==", "bodyText": "@bbejeck  looking back at this. I still standby my initial responses but I think my initial point was lost. I think the short answer should have some mention of EXTRACTJSONFIELD rather than just having the JSON be a VARCHAR. EXTRACTJSONFIELD implies that the value you are extracting from is a VARCHAR, whereas just varchar doesn't imply anything about how one would actually retrieve data from the JSON. Feel free to disagree :) This is my only hangup, happy to give this my approval once this is resolved.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r532763925", "createdAt": "2020-11-30T17:17:44Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNTQ0Mg==", "bodyText": "@awalther28 I misunderstood what you were saying before, but I think I get it now.  Check out the short answer now and let me know", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r532825442", "createdAt": "2020-11-30T18:55:36Z", "author": {"login": "bbejeck"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng=="}, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}