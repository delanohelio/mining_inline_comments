{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTU3OTU4", "number": 418, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxMzo1OVrOEC1GQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo1ODo0NlrOEC945Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDAyNTYwOnYy", "diffSide": "LEFT", "path": "_includes/tutorials/rekeying/ksql/markup/dev/continuous-rekey.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoxNDowMFrOGfhnnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjo0MDoxN1rOGgbt6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTg1Mg==", "bodyText": "s/KSQL/ksqlDB", "url": "https://github.com/confluentinc/kafka-tutorials/pull/418#discussion_r435709852", "createdAt": "2020-06-05T06:14:00Z", "author": {"login": "rmoff"}, "path": "_includes/tutorials/rekeying/ksql/markup/dev/continuous-rekey.adoc", "diffHunk": "@@ -1,4 +1,4 @@\n-Let's fix that. Using KSQL's appropriately named `PARTITION BY` clause we can apply a key to the messages and write it to a new stream. Here we'll use the movie identifier, `ID`. Issue the following to create a new stream that is continuously populated by its query:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3390615f4349a5cdf515bb0ad3c90baed9eae9fb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY2MTczOA==", "bodyText": "This text is deleted ;)", "url": "https://github.com/confluentinc/kafka-tutorials/pull/418#discussion_r436661738", "createdAt": "2020-06-08T12:40:17Z", "author": {"login": "big-andy-coates"}, "path": "_includes/tutorials/rekeying/ksql/markup/dev/continuous-rekey.adoc", "diffHunk": "@@ -1,4 +1,4 @@\n-Let's fix that. Using KSQL's appropriately named `PARTITION BY` clause we can apply a key to the messages and write it to a new stream. Here we'll use the movie identifier, `ID`. Issue the following to create a new stream that is continuously populated by its query:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcwOTg1Mg=="}, "originalCommit": {"oid": "3390615f4349a5cdf515bb0ad3c90baed9eae9fb"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTQ2NTk3OnYy", "diffSide": "RIGHT", "path": "_includes/tutorials/rekeying/ksql/markup/dev/describe-output.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo1ODo0NlrOGfvrTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo1ODo0NlrOGfvrTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk0MDE3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To check that it\u2019s working, lets first describe the new stream:\n          \n          \n            \n            To check that it\u2019s working, let's first describe the new stream:", "url": "https://github.com/confluentinc/kafka-tutorials/pull/418#discussion_r435940173", "createdAt": "2020-06-05T13:58:46Z", "author": {"login": "colinhicks"}, "path": "_includes/tutorials/rekeying/ksql/markup/dev/describe-output.adoc", "diffHunk": "@@ -0,0 +1,13 @@\n+To check that it\u2019s working, lets first describe the new stream:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3390615f4349a5cdf515bb0ad3c90baed9eae9fb"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3895, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}