{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzAyOTI2", "number": 640, "title": "DEVX-2224: Heterogenous json structure recipe conversion", "bodyText": "Description\nConversion of the hetergenous JSON recipe to KT\n\nStaging Docs\nhttp://kafka-tutorials-staging.s3-website-us-west-2.amazonaws.com/DEVX-2224_diff_json_structure_conversion\nhttp://kafka-tutorials-staging.s3-website-us-west-2.amazonaws.com/DEVX-2224_diff_json_structure_conversion/working-with-json-different-structure/ksql.html", "createdAt": "2020-11-19T23:39:57Z", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640", "merged": true, "mergeCommit": {"oid": "9dea8d53ea1723b1e715be4b631e0ae50c806415"}, "closed": true, "closedAt": "2020-11-30T21:28:27Z", "author": {"login": "bbejeck"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeXEu8gFqTUzNTQwNDQ1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhsL3PgFqTU0MTMwNzQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDA0NDU1", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#pullrequestreview-535404455", "createdAt": "2020-11-20T12:56:46Z", "commit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo1Njo0NlrOH3OoBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzowNjozOVrOH3O77w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzM0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              title: \"Working with heterogenous JSON records in ksqlDB\"\n          \n          \n            \n              title: \"Working with heterogenous JSON records\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673349", "createdAt": "2020-11-20T12:56:46Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzQzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n          \n          \n            \n              meta-description: \"Working with heterogenous JSON records\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673435", "createdAt": "2020-11-20T12:56:55Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzY3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              slug: \"/ksqldb-working-with-json-different-structure\"\n          \n          \n            \n              slug: \"/working-with-json-different-structure\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673672", "createdAt": "2020-11-20T12:57:15Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3MzkxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              question: \"How do I select fields from records with different structures and possibly different values?\"\n          \n          \n            \n              question: \"How do I select fields from a stream of records with different structures and possibly different values?\"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527673917", "createdAt": "2020-11-20T12:57:40Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NDE1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              introduction: \"Suppose you have a topic with JSON and not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"\n          \n          \n            \n              introduction: \"Suppose you have a topic with JSON-formatted records, but not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527674150", "createdAt": "2020-11-20T12:58:10Z", "author": {"login": "ybyzek"}, "path": "_data/tutorials.yaml", "diffHunk": "@@ -544,3 +544,23 @@ ksql-nested-json:\n     ruby: disabled\n     scala: disabled\n     swift: disabled\n+\n+ksql-heterogeneous-json:\n+  title: \"Working with heterogenous JSON records in ksqlDB\"\n+  meta-description: \"Working with heterogenous JSON records in ksqlDB\"\n+  slug: \"/ksqldb-working-with-json-different-structure\"\n+  question: \"How do I select fields from records with different structures and possibly different values?\"\n+  introduction: \"Suppose you have a topic with JSON and not all the records have the same structure and value types.  You want to write a query that can handle the different structures and pull out specific fields \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTEzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n          \n          \n            \n            Let's say you have a Kafka topic `source_data` that contains JSON-formatted data.  But each nested JSON object has a different structure.  Additionally, within each object the values have a mix of types.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527675135", "createdAt": "2020-11-20T13:00:07Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NTU3OA==", "bodyText": "Given the example below, can we name the field that is common?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527675578", "createdAt": "2020-11-20T13:00:58Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NjQyMg==", "bodyText": "This is just for consideration, would it be a valid name and would it be more helpful to change the word to a number, e.g. instead of JSONTypeOne, write JSONType1, etc....  The reasoning is it may be easier for a reader to more quickly digest, at least for me it is.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527676422", "createdAt": "2020-11-20T13:02:39Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/code/src/statements.sql", "diffHunk": "@@ -0,0 +1,18 @@\n+CREATE STREAM DATA_STREAM ( \n+  JSONTypeOne VARCHAR, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzAzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <3> The field you want form JSONTypeThree\n          \n          \n            \n            <3> The field you want from JSONTypeThree", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677037", "createdAt": "2020-11-20T13:03:58Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6,\n+    \"fieldC\": \"data\",\n+    \"fieldD\": \"D-data\"    <3>\n+  }\n+----\n+<1> The field you want from JSONTypeOne\n+<2> The field you want from JSONTypeTwo\n+<3> The field you want form JSONTypeThree", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzMxMw==", "bodyText": "In my environment: I can't get this this third record to display in Safari unless I expand.  Scrolling does not help.\nCan you please try in your view: do you see this 3rd record type?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677313", "createdAt": "2020-11-20T13:04:34Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/problem-description.adoc", "diffHunk": "@@ -0,0 +1,34 @@\n+Let's say you have a topic `source_data`, that contains JSON.  But each nested JSON object has a different structure.  Addtionally, in each object there is a mix of types within the values.\n+\n+They each have one field in common that you want to pull out in a query and you don't care about the structure of the individual JSON objects\n+\n+[source, json]\n+----\n+{\n+  \"JSONTypeOne\": {\n+    \"fieldA\": \"some data\",\n+    \"numberField\": 1.001,\n+    \"oneOnlyField\": \"more data\", <1>\n+    \"randomField\": \"random data\"\n+  },\n+\n+  \"JSONTypeTwo\": {\n+    \"fieldA\": \"data\",\n+    \"fieldB\": \"b-data\",\n+    \"numberField\": 98.6   <2>\n+  },\n+\n+  \"JSONTypeThree\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3NzcyOA==", "bodyText": "There are a few instances of \"stock purchase transactions\" -- is that supposed to be there, or it's remnant from a clone?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527677728", "createdAt": "2020-11-20T13:05:15Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/create-different-type-stream.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+The first thing we do is to create a stream `DATA_STREAM` based off stock purchase transactions topic `source_data`. Within the `CREATE STREAM` statement, you'll use a `VARCHAR` keyword to define each of outer most element of the JSON types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY3ODQ0Nw==", "bodyText": "\"that's doing the right thing\" is vague.  Can this be more descriptive?", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527678447", "createdAt": "2020-11-20T13:06:39Z", "author": {"login": "ybyzek"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/make-src-file.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Now that you have a series of statements that's doing the right thing, the last step is to put them into a file so that they can be used outside the CLI session. Create a file at `src/statements.sql` with the following content:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTAwOTA3", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#pullrequestreview-535500907", "createdAt": "2020-11-20T14:58:57Z", "commit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNDo1ODo1N1rOH3TNOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTowMToyMlrOH3TTbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0ODQwOA==", "bodyText": "Maybe I missed it, but it might be good to also add that NULL is returned if nothing was found at the specified path.", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527748408", "createdAt": "2020-11-20T14:58:57Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/dev/transient-reporting.adoc", "diffHunk": "@@ -0,0 +1,23 @@\n+We need to create a query that extracts the fields we want from input sources.  Since we have defined the top element of the JSON as a String using the `VARCHAR` keyword,\n+we can use the https://docs.ksqldb.io/en/latest/developer-guide/ksqldb-reference/scalar-functions/#extractjsonfield[ksqlDB EXTRACTJSONFIELD function] to extract the different values at a specified https://jsonpath.com/[JSONPath].\n+\n+NOTE: The result of `EXTRACTJSONFIELD` function is always a `STRING` type. To convert the result to another type you'll need to use the `CAST` operator. We've done that with our queries in this tutorial.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc0OTk5Ng==", "bodyText": "To me I would think the answer is to use EXTRACTJSONFIELD which requires the JSON you're accessing to be a \"string/varchar\".", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#discussion_r527749996", "createdAt": "2020-11-20T15:01:22Z", "author": {"login": "awalther28"}, "path": "_includes/tutorials/ksql-heterogeneous-json/ksql/markup/answer/varchar-stream.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+Create a stream and define the outer-most element of the JSON structures as `VARCHAR`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87f8a39ab9c588d3c5ad47db203ad3918e85be5e"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dac4311aeb0bea4c66cc4f3967a559c25d27cef6", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/dac4311aeb0bea4c66cc4f3967a559c25d27cef6", "committedDate": "2020-11-30T16:25:39Z", "message": "First commit for hetergenous json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "571b14de3d4f5cda19c48a102570ea00939c84ba", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/571b14de3d4f5cda19c48a102570ea00939c84ba", "committedDate": "2020-11-30T16:25:39Z", "message": "Final commit in recipe conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28a09474a1adb25e74781bd69e67f164ecc2c71", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/e28a09474a1adb25e74781bd69e67f164ecc2c71", "committedDate": "2020-11-30T16:27:21Z", "message": "updates per comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7661d02862220a56549be023469a77a7fe31687d", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/7661d02862220a56549be023469a77a7fe31687d", "committedDate": "2020-11-30T16:27:21Z", "message": "change type names to more readable format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d598169b60a6e401770b096eec494103149fa2", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/77d598169b60a6e401770b096eec494103149fa2", "committedDate": "2020-11-30T16:27:59Z", "message": "clean up link name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c63bf6f5204dad685ef55217f53619048be5435", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/9c63bf6f5204dad685ef55217f53619048be5435", "committedDate": "2020-11-20T17:26:27Z", "message": "change type names to more readable format"}, "afterCommit": {"oid": "77d598169b60a6e401770b096eec494103149fa2", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/77d598169b60a6e401770b096eec494103149fa2", "committedDate": "2020-11-30T16:27:59Z", "message": "clean up link name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da61aadaaae84b8a616fbf4ebe880164cf404dbc", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/confluentinc/kafka-tutorials/commit/da61aadaaae84b8a616fbf4ebe880164cf404dbc", "committedDate": "2020-11-30T18:51:29Z", "message": "add the use of EXTRACTJSONFIELD to short answer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjAxMjE1", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#pullrequestreview-541201215", "createdAt": "2020-11-30T18:57:04Z", "commit": {"oid": "da61aadaaae84b8a616fbf4ebe880164cf404dbc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzA3NDA1", "url": "https://github.com/confluentinc/kafka-tutorials/pull/640#pullrequestreview-541307405", "createdAt": "2020-11-30T21:25:32Z", "commit": {"oid": "da61aadaaae84b8a616fbf4ebe880164cf404dbc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 107, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}