{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTkyMDc3", "number": 776, "title": "JENA-1937: SHACL Compact Syntax writer and jena-shacl clean-up.", "bodyText": "More (and hopefully final) work on the SHALC Compact Syntax writer together with cleanup of jena-shacls, including \"shacl\" command (in jena-cmds).\nThis PR adds a a RIOT writer for Lang.SHACLC -- this can only write what is expressible in SHACLC and does not write general RDF that is unconnected so as a writer it writes only part of a graph. It is therefore debatable general RDF APIS should work for SHACLC output. However, it does make working with SHACLC convenient.\nIf an attempt is made to write SHCAL that can't be expressed on compact syntax, the code throws an exception but, because it is a streaming writer, partial output occurs.\n\nRemove \"verbose\" validation flag. Whatever is the right way to do this, a specific API call for a specific validator implementation is not the way to do it.\nReorganise the SHACLC tests.\nRename \"simple\" validation as \"plain\". This is the implementation of the algorithm as given in the SHACL spec.\nVarious small fixes to code after PR #775 based on using it.\nRefactoring and code tidying.\n\nAlso included:\n\nChanged checked exception IOException and make a runtime exception in various IO.readWholeFile* operations. This makes it more consistent and work with lambda's better.\nWhitespace fixing.", "createdAt": "2020-07-22T09:22:36Z", "url": "https://github.com/apache/jena/pull/776", "merged": true, "mergeCommit": {"oid": "2b926f13a7c79e82fafce751d33915cdb138a5e2"}, "closed": true, "closedAt": "2020-07-23T10:59:19Z", "author": {"login": "afs"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2inO2gH2gAyNDU0OTkyMDc3OjE4NjJhZDVlNzdkNTdlNWM3Nzg2MDgzNTNiNTQ3YmVlZTkzNWQ4NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3s91ogBqjM1NzkzNzAxNjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1862ad5e77d57e5c778608353b547beee935d864", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/1862ad5e77d57e5c778608353b547beee935d864", "committedDate": "2020-07-19T19:57:37Z", "message": "JENA-1937: RIOT Writer for SHACL-C"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODEwNTYz", "url": "https://github.com/apache/jena/pull/776#pullrequestreview-453810563", "createdAt": "2020-07-23T03:02:28Z", "commit": {"oid": "69e126c06fd6b9f3f9f24dac8e33365054000d2f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzowMjoyOVrOG16zXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxNDowNlrOG1687Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MTEzMw==", "bodyText": "Commented test/debug statement?", "url": "https://github.com/apache/jena/pull/776#discussion_r459191133", "createdAt": "2020-07-23T03:02:29Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl.compact.writer;\n+\n+import java.io.OutputStream;\n+import java.io.Writer;\n+\n+import org.apache.jena.atlas.io.IndentedWriter;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.riot.Lang;\n+import org.apache.jena.riot.system.PrefixMap;\n+import org.apache.jena.riot.system.RiotLib;\n+import org.apache.jena.riot.writer.WriterGraphRIOTBase;\n+import org.apache.jena.shacl.Shapes;\n+import org.apache.jena.shacl.compact.ShaclcWriter;\n+import org.apache.jena.sparql.util.Context;\n+\n+public class WriterRIOTShaclc extends WriterGraphRIOTBase {\n+\n+    public WriterRIOTShaclc() {}\n+\n+    @Override\n+    public Lang getLang() {\n+        return Lang.SHACLC;\n+    }\n+\n+    @Override\n+    public void write(Writer out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        IndentedWriter iOut = RiotLib.create(out) ;\n+        iOut.setAbsoluteIndent(4);\n+        write(iOut, graph, prefixMap, baseURI, context);\n+    }\n+\n+    @Override\n+    public void write(OutputStream out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        IndentedWriter iOut = new IndentedWriter(out);\n+        iOut.setUnitIndent(4);\n+        write(iOut, graph, prefixMap, baseURI, context);\n+    }\n+\n+    private void write(IndentedWriter out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        Shapes shapes = Shapes.parse(graph);\n+        ShaclcWriter.print(out, shapes);\n+        //out.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e126c06fd6b9f3f9f24dac8e33365054000d2f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzU4MQ==", "bodyText": "s/dupicates/duplicates", "url": "https://github.com/apache/jena/pull/776#discussion_r459193581", "createdAt": "2020-07-23T03:14:06Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java", "diffHunk": "@@ -189,7 +196,7 @@ public int numRootShapes() {\n \n     /** Iterator over the shapes with targets and with explicit type NodeShape or PropertyShape. */\n     public Iterator<Shape> iteratorAll() {\n+        // rootsShapes and declShaes are disjoint so no dupicates in the iterator.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69e126c06fd6b9f3f9f24dac8e33365054000d2f"}, "originalPosition": 96}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69e126c06fd6b9f3f9f24dac8e33365054000d2f", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/69e126c06fd6b9f3f9f24dac8e33365054000d2f", "committedDate": "2020-07-21T20:18:38Z", "message": "jena-shacl clean-up"}, "afterCommit": {"oid": "a0629ff792250357e6cc0aad80e811cc428d4c8d", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/a0629ff792250357e6cc0aad80e811cc428d4c8d", "committedDate": "2020-07-23T10:34:23Z", "message": "jena-shacl clean-up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb638529c7161281f0faebceabc734db412fd389", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/eb638529c7161281f0faebceabc734db412fd389", "committedDate": "2020-07-23T10:35:10Z", "message": "jena-shacl clean-up"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0629ff792250357e6cc0aad80e811cc428d4c8d", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/a0629ff792250357e6cc0aad80e811cc428d4c8d", "committedDate": "2020-07-23T10:34:23Z", "message": "jena-shacl clean-up"}, "afterCommit": {"oid": "eb638529c7161281f0faebceabc734db412fd389", "author": {"user": {"login": "afs", "name": "Andy Seaborne"}}, "url": "https://github.com/apache/jena/commit/eb638529c7161281f0faebceabc734db412fd389", "committedDate": "2020-07-23T10:35:10Z", "message": "jena-shacl clean-up"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3053, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}