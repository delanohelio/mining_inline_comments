{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjExODI2", "number": 772, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzowODowOVrOELE8FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzowODozNFrOELE8RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDUwNzA5OnYy", "diffSide": "RIGHT", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzowODowOVrOGsfT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMToyMTozMFrOGstN5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzUxOQ==", "bodyText": "I think I got hit by this when I was writing the Vue.js client. The default value was sending JSON, or some other value, not HTML form. I couldn't figure out what was wrong, so had to look at the browser requests in the old UI to understand what the server was expecting.", "url": "https://github.com/apache/jena/pull/772#discussion_r449303519", "createdAt": "2020-07-02T23:08:09Z", "author": {"login": "kinow"}, "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java", "diffHunk": "@@ -373,11 +382,23 @@ public static Operation chooseOperation(HttpAction action) {\n \n         // -- Any other queryString\n         // Query string now unexpected.\n+\n         // Place for an extension point.\n         boolean hasParams = request.getParameterMap().size() > 0;\n         if ( hasParams ) {\n+            // One nasty case:\n+            // Bad HTML form (content-type  application/x-www-form-urlencoded), but body is not an HTML form.\n+            //  map is one entry, and the key is all of the body,\n+            if ( WebContent.contentTypeHTMLForm.equals(request.getContentType()) ) {\n+                ServletOps.errorBadRequest(\"Malformed request: unrecognized HTML form request\");\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f92f630561d4365fd3b25d6f06b8b4c0746ca2"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUzMTM2Nw==", "bodyText": "Ah. I came across it with curl but from what you say, code defaults POST to a HTML form if there is no content-type given. I guess the common case other that forms is \"just send this file, the other end knows what to do\" (i.e. ignore the content-type).\nFuseki dispatch is quite complicated and HTML forms are a possibility for SPARQL Update and SPARQL Query so it's not just simply ignoring application/x-www-form-urlencoded.", "url": "https://github.com/apache/jena/pull/772#discussion_r449531367", "createdAt": "2020-07-03T11:21:30Z", "author": {"login": "afs"}, "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java", "diffHunk": "@@ -373,11 +382,23 @@ public static Operation chooseOperation(HttpAction action) {\n \n         // -- Any other queryString\n         // Query string now unexpected.\n+\n         // Place for an extension point.\n         boolean hasParams = request.getParameterMap().size() > 0;\n         if ( hasParams ) {\n+            // One nasty case:\n+            // Bad HTML form (content-type  application/x-www-form-urlencoded), but body is not an HTML form.\n+            //  map is one entry, and the key is all of the body,\n+            if ( WebContent.contentTypeHTMLForm.equals(request.getContentType()) ) {\n+                ServletOps.errorBadRequest(\"Malformed request: unrecognized HTML form request\");\n+                return null;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzUxOQ=="}, "originalCommit": {"oid": "f0f92f630561d4365fd3b25d6f06b8b4c0746ca2"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDUwNzU2OnYy", "diffSide": "RIGHT", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/EndpointSet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzowODozNFrOGsfULw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzowODozNFrOGsfULw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMzU5OQ==", "bodyText": "Much more descriptive! Thanks!", "url": "https://github.com/apache/jena/pull/772#discussion_r449303599", "createdAt": "2020-07-02T23:08:34Z", "author": {"login": "kinow"}, "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/EndpointSet.java", "diffHunk": "@@ -104,7 +104,7 @@ private void resetSingle() {\n     public Collection<Operation> operations() { return endpoints.keySet(); }\n     \n     /** Get the Endpoint for a singleton EndpointSet */\n-    public Endpoint getOnly() {\n+    public Endpoint getExactlyOne() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f92f630561d4365fd3b25d6f06b8b4c0746ca2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}