{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjMzMDE5", "number": 884, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToyMjowNVrOFCjeIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTozNDozN1rOFC0ykw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjIyNjI2OnYy", "diffSide": "RIGHT", "path": "jena-arq/src/main/java/org/apache/jena/sparql/lang/ParserBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToyMjowNVrOIByNXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToyMjowNVrOIByNXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0MjExMQ==", "bodyText": "\ud83d\udc4d\nI checked for a method that does something like this on Apache Commons Text, and Apache Commons Lang, but there's none. I thought some user would have requested that, interesting.", "url": "https://github.com/apache/jena/pull/884#discussion_r538742111", "createdAt": "2020-12-08T19:22:05Z", "author": {"login": "kinow"}, "path": "jena-arq/src/main/java/org/apache/jena/sparql/lang/ParserBase.java", "diffHunk": "@@ -190,6 +190,24 @@ protected Node stripSign(Node node) {\n         return NodeFactory.createLiteral(lex, lang, dt) ;\n     }\n \n+    protected void checkString(String string, int line, int column) {\n+        for ( int i = 0 ; i < string.length() ; i++ ) {\n+            // Not \"codePointAt\" which does surrogate processing.\n+            char ch = string.charAt(i);\n+            // Check surrogate pairs are pairs.\n+            if ( Character.isHighSurrogate(ch) ) {\n+                i++;\n+                if ( i == string.length() )\n+                    throw new QueryParseException(\"Bad surrogate pair (end of string)\", line, column);\n+                char ch1 = string.charAt(i);\n+                if ( ! Character.isLowSurrogate(ch1) ) {\n+                    throw new QueryParseException(\"Bad surrogate pair (high surrogate not followed by low surrogate)\", line, column);\n+                }\n+            } else if ( Character.isLowSurrogate(ch) )\n+                throw new QueryParseException(\"Bad surrogate pair (low surrogate without high surrogate)\", line, column);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0473c3252f2022b2c1357e75935f41d52b397d34"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjIyNzc0OnYy", "diffSide": "RIGHT", "path": "jena-base/src/main/java/org/apache/jena/atlas/io/InStreamUTF8.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToyMjoxOFrOIByOHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjoxMzowOFrOIB4mIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0MjMwMw==", "bodyText": "Delete? \u261d\ufe0f", "url": "https://github.com/apache/jena/pull/884#discussion_r538742303", "createdAt": "2020-12-08T19:22:18Z", "author": {"login": "kinow"}, "path": "jena-base/src/main/java/org/apache/jena/atlas/io/InStreamUTF8.java", "diffHunk": "@@ -144,7 +144,18 @@ public final int advance()\n     public static final int advance(InputStreamBuffered input) {\n         int x = input.advance() ;\n         if ( x == -1 ) return -1 ;\n-        return advance(input, x) ;\n+\n+        int codepoint = advance(input, x) ;\n+        //System.out.printf(\"U+%04X\\n\", codepoint);\n+\n+        if ( false ) {\n+//          if ( codepoint > Character.MAX_VALUE ) {\n+//              throw new AtlasException(\"Out of range character (must use a surrogate pair)\");\n+//          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0473c3252f2022b2c1357e75935f41d52b397d34"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0Njc1Mg==", "bodyText": "OK - removed the commented text, rearrange and \"if(false)\" and \"Character.isDefined\" (that is a switch between being a pure UTF-8 decoder and one that only accepts characters in the Unicode version that Java supports).\n(I'd forgotten that this class would get into the PR!)", "url": "https://github.com/apache/jena/pull/884#discussion_r538846752", "createdAt": "2020-12-08T22:13:08Z", "author": {"login": "afs"}, "path": "jena-base/src/main/java/org/apache/jena/atlas/io/InStreamUTF8.java", "diffHunk": "@@ -144,7 +144,18 @@ public final int advance()\n     public static final int advance(InputStreamBuffered input) {\n         int x = input.advance() ;\n         if ( x == -1 ) return -1 ;\n-        return advance(input, x) ;\n+\n+        int codepoint = advance(input, x) ;\n+        //System.out.printf(\"U+%04X\\n\", codepoint);\n+\n+        if ( false ) {\n+//          if ( codepoint > Character.MAX_VALUE ) {\n+//              throw new AtlasException(\"Out of range character (must use a surrogate pair)\");\n+//          }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0MjMwMw=="}, "originalCommit": {"oid": "0473c3252f2022b2c1357e75935f41d52b397d34"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjIyODI2OnYy", "diffSide": "RIGHT", "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToyMjoyOFrOIByOcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjowODowNVrOIB4bbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0MjM4Ng==", "bodyText": "Delete? \u261d\ufe0f", "url": "https://github.com/apache/jena/pull/884#discussion_r538742386", "createdAt": "2020-12-08T19:22:28Z", "author": {"login": "kinow"}, "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "diffHunk": "@@ -60,7 +60,8 @@ public static void main(String... args) {\n                     } else\n                         colNum++ ;\n                     if ( !Character.isDefined(ch) )\n-                        throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;\n+                        //throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0473c3252f2022b2c1357e75935f41d52b397d34"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0NDAxMg==", "bodyText": "Done (this gives the test of being within the unicode version supported, not just any UTF-8 sequence).", "url": "https://github.com/apache/jena/pull/884#discussion_r538844012", "createdAt": "2020-12-08T22:08:05Z", "author": {"login": "afs"}, "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "diffHunk": "@@ -60,7 +60,8 @@ public static void main(String... args) {\n                     } else\n                         colNum++ ;\n                     if ( !Character.isDefined(ch) )\n-                        throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;\n+                        //throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0MjM4Ng=="}, "originalCommit": {"oid": "0473c3252f2022b2c1357e75935f41d52b397d34"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTA1OTAzOnYy", "diffSide": "RIGHT", "path": "jena-arq/src/main/java/org/apache/jena/sparql/lang/ParserBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTozMzozNlrOICLCmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo0Mjo0MlrOICLdvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0ODk1NQ==", "bodyText": "Nit, the bracket style is pretty inconsistent here, I don't have a strong preference for using brackets when the if branch only has a single line but it would be nice to be consistent throughout the method\nFor example the outer if uses {} because it has a multi-line block but its corresponding else if doesn't\nSimilarly the inner if are both single line blocks but one uses {} and one doesn't", "url": "https://github.com/apache/jena/pull/884#discussion_r539148955", "createdAt": "2020-12-09T09:33:36Z", "author": {"login": "rvesse"}, "path": "jena-arq/src/main/java/org/apache/jena/sparql/lang/ParserBase.java", "diffHunk": "@@ -190,6 +190,24 @@ protected Node stripSign(Node node) {\n         return NodeFactory.createLiteral(lex, lang, dt) ;\n     }\n \n+    protected void checkString(String string, int line, int column) {\n+        for ( int i = 0 ; i < string.length() ; i++ ) {\n+            // Not \"codePointAt\" which does surrogate processing.\n+            char ch = string.charAt(i);\n+            // Check surrogate pairs are pairs.\n+            if ( Character.isHighSurrogate(ch) ) {\n+                i++;\n+                if ( i == string.length() )\n+                    throw new QueryParseException(\"Bad surrogate pair (end of string)\", line, column);\n+                char ch1 = string.charAt(i);\n+                if ( ! Character.isLowSurrogate(ch1) ) {\n+                    throw new QueryParseException(\"Bad surrogate pair (high surrogate not followed by low surrogate)\", line, column);\n+                }\n+            } else if ( Character.isLowSurrogate(ch) )\n+                throw new QueryParseException(\"Bad surrogate pair (low surrogate without high surrogate)\", line, column);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f031ca15f620dbd9fee7fbc123c7357c23f8fe"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE1NTkwMQ==", "bodyText": "Point taken. Changed.", "url": "https://github.com/apache/jena/pull/884#discussion_r539155901", "createdAt": "2020-12-09T09:42:42Z", "author": {"login": "afs"}, "path": "jena-arq/src/main/java/org/apache/jena/sparql/lang/ParserBase.java", "diffHunk": "@@ -190,6 +190,24 @@ protected Node stripSign(Node node) {\n         return NodeFactory.createLiteral(lex, lang, dt) ;\n     }\n \n+    protected void checkString(String string, int line, int column) {\n+        for ( int i = 0 ; i < string.length() ; i++ ) {\n+            // Not \"codePointAt\" which does surrogate processing.\n+            char ch = string.charAt(i);\n+            // Check surrogate pairs are pairs.\n+            if ( Character.isHighSurrogate(ch) ) {\n+                i++;\n+                if ( i == string.length() )\n+                    throw new QueryParseException(\"Bad surrogate pair (end of string)\", line, column);\n+                char ch1 = string.charAt(i);\n+                if ( ! Character.isLowSurrogate(ch1) ) {\n+                    throw new QueryParseException(\"Bad surrogate pair (high surrogate not followed by low surrogate)\", line, column);\n+                }\n+            } else if ( Character.isLowSurrogate(ch) )\n+                throw new QueryParseException(\"Bad surrogate pair (low surrogate without high surrogate)\", line, column);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0ODk1NQ=="}, "originalCommit": {"oid": "02f031ca15f620dbd9fee7fbc123c7357c23f8fe"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTA2Mzg3OnYy", "diffSide": "RIGHT", "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTozNDozN1rOICLFjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToyNzoyN1rOICafsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0OTcxMQ==", "bodyText": "Any reason why this is now just a log message rather than an error as it was previously?", "url": "https://github.com/apache/jena/pull/884#discussion_r539149711", "createdAt": "2020-12-09T09:34:37Z", "author": {"login": "rvesse"}, "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "diffHunk": "@@ -60,7 +60,7 @@ public static void main(String... args) {\n                     } else\n                         colNum++ ;\n                     if ( !Character.isDefined(ch) )\n-                        throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;\n+                        System.out.printf(\"No such codepoint: 0x%04X\\n\", ch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f031ca15f620dbd9fee7fbc123c7357c23f8fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE2MDY0MA==", "bodyText": "Previous there was also a Character.isDefined in InStreamUTF8 and also a bad test that excluded surrogate use.\nIt is like this so first error does not terminate the command. Of course, it may flip to many errors!\nWhen trying it out (on the rdf-tests data which is not large), stopping on the first error was unhelpful because the errors were in several bytes (surrogate pairs by the time it got to here).", "url": "https://github.com/apache/jena/pull/884#discussion_r539160640", "createdAt": "2020-12-09T09:49:24Z", "author": {"login": "afs"}, "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "diffHunk": "@@ -60,7 +60,7 @@ public static void main(String... args) {\n                     } else\n                         colNum++ ;\n                     if ( !Character.isDefined(ch) )\n-                        throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;\n+                        System.out.printf(\"No such codepoint: 0x%04X\\n\", ch);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0OTcxMQ=="}, "originalCommit": {"oid": "02f031ca15f620dbd9fee7fbc123c7357c23f8fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwMjE2Mg==", "bodyText": "Makes perfect sense", "url": "https://github.com/apache/jena/pull/884#discussion_r539402162", "createdAt": "2020-12-09T15:27:27Z", "author": {"login": "rvesse"}, "path": "jena-cmds/src/main/java/riotcmd/utf8.java", "diffHunk": "@@ -60,7 +60,7 @@ public static void main(String... args) {\n                     } else\n                         colNum++ ;\n                     if ( !Character.isDefined(ch) )\n-                        throw new AtlasException(String.format(\"No such codepoint: 0x%04X\", ch)) ;\n+                        System.out.printf(\"No such codepoint: 0x%04X\\n\", ch);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0OTcxMQ=="}, "originalCommit": {"oid": "02f031ca15f620dbd9fee7fbc123c7357c23f8fe"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4469, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}