{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMjU5ODMz", "number": 866, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0Mzo1MFrOE5P6zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0NDowNFrOE5P69A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDY1MTAzOnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0Mzo1MFrOHzmU0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0Mzo1MFrOHzmU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NzM0NQ==", "bodyText": "If there are other?", "url": "https://github.com/apache/jena/pull/866#discussion_r523867345", "createdAt": "2020-11-16T02:43:50Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl;\n+\n+import static org.apache.jena.atlas.iterator.Iter.iter;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlImports;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlOntology;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeRDFType;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.jena.atlas.lib.Pair;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.graph.GraphUtil;\n+import org.apache.jena.graph.Node;\n+import org.apache.jena.riot.RDFDataMgr;\n+import org.apache.jena.riot.other.G;\n+import org.apache.jena.riot.system.IRIResolver;\n+import org.apache.jena.sparql.graph.GraphFactory;\n+\n+/**\n+ * Import processing.\n+ * <p>\n+ * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n+ * and imports (triples \"base owl:Imports URI\").\n+ * <p>\n+ * If there other \"? owl:imports ?\" triples, they are ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce9caf09b75dca7ae44e4b86d0708935006d38"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDY1MTQwOnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0NDowNFrOHzmVCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo0NDowNFrOHzmVCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NzQwMA==", "bodyText": "s/it's/its", "url": "https://github.com/apache/jena/pull/866#discussion_r523867400", "createdAt": "2020-11-16T02:44:04Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl;\n+\n+import static org.apache.jena.atlas.iterator.Iter.iter;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlImports;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlOntology;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeRDFType;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.jena.atlas.lib.Pair;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.graph.GraphUtil;\n+import org.apache.jena.graph.Node;\n+import org.apache.jena.riot.RDFDataMgr;\n+import org.apache.jena.riot.other.G;\n+import org.apache.jena.riot.system.IRIResolver;\n+import org.apache.jena.sparql.graph.GraphFactory;\n+\n+/**\n+ * Import processing.\n+ * <p>\n+ * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n+ * and imports (triples \"base owl:Imports URI\").\n+ * <p>\n+ * If there other \"? owl:imports ?\" triples, they are ignored.\n+ */\n+public class Imports {\n+    private Imports() {}\n+\n+    /**\n+     * Load a graph and process it's owl:imports to create a single graph.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ce9caf09b75dca7ae44e4b86d0708935006d38"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4525, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}