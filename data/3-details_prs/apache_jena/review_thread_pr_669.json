{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMjgwNjk4", "number": 669, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzozNzowM1rOD4C93A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjo0NjowOFrOD4TSlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDk1NDUyOnYy", "diffSide": "RIGHT", "path": "jena-text/src/main/java/org/apache/jena/query/text/TextIndexLucene.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzozNzowM1rOGOpm7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNTowNDowN1rOGOthug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAxNDk1OQ==", "bodyText": "This should specify a value.\nWhen used via TextIndexLuceneAssembler, it will be set to a default of 1024. jena-text may be used from code , no assembler, and then the default is zero from this line.\nIt is always passed in BasicQueryFactory(this.maxBasicQueries) by TextLuceneIndex so the other choice is set to -1 (an \"unset\" marker) and call BasicQueryFactory() when not set so that it tracks the Lucene choice for the default which may evolve over time.", "url": "https://github.com/apache/jena/pull/669#discussion_r418014959", "createdAt": "2020-04-30T13:37:03Z", "author": {"login": "afs"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/TextIndexLucene.java", "diffHunk": "@@ -112,6 +112,7 @@\n     private final FieldType        ftTextNotStored ; // used for lang derived fields\n     private final FieldType        ftTextStoredNoIndex ; // used for lang derived fields\n     private final boolean          isMultilingual ;\n+    private final int              maxBasicQueries ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1ODM2MQ==", "bodyText": "I think L#136, below, ensures a value for maxBasicQueries. Perhaps L#30 above in TextIndexConfig.java should be set to 1024 since that's the default in org.apache.lucene.queryparser.surround.query. BasicQueryFactory", "url": "https://github.com/apache/jena/pull/669#discussion_r418058361", "createdAt": "2020-04-30T14:36:17Z", "author": {"login": "xristy"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/TextIndexLucene.java", "diffHunk": "@@ -112,6 +112,7 @@\n     private final FieldType        ftTextNotStored ; // used for lang derived fields\n     private final FieldType        ftTextStoredNoIndex ; // used for lang derived fields\n     private final boolean          isMultilingual ;\n+    private final int              maxBasicQueries ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAxNDk1OQ=="}, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3NjM4Mw==", "bodyText": "Yours is a better explanation. I hadn't made the extra step to TextIndexConfig.\nIt gets a default from TextIndexConfig which itself may not have a default other than Java's 0. Only a call of setMaxBasicQueries sets it and that only comes from the assembler\nConclusion - it needs an explicit default (both places) so we can understand it ! :-)\nPlan: Let this sit for at least 24 hours then merge it and make the changes. This has been here so long that I'm happy to do the changes directly. We've kept @DamienFontaine's PR waiting.\nOK @xristy ? If that is fine with you, would you approve please?", "url": "https://github.com/apache/jena/pull/669#discussion_r418076383", "createdAt": "2020-04-30T15:00:07Z", "author": {"login": "afs"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/TextIndexLucene.java", "diffHunk": "@@ -112,6 +112,7 @@\n     private final FieldType        ftTextNotStored ; // used for lang derived fields\n     private final FieldType        ftTextStoredNoIndex ; // used for lang derived fields\n     private final boolean          isMultilingual ;\n+    private final int              maxBasicQueries ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAxNDk1OQ=="}, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3OTE2Mg==", "bodyText": "Fine w/ me. I would vote for 1024 rather than -1 for the default. I approved changes on my request for changes.", "url": "https://github.com/apache/jena/pull/669#discussion_r418079162", "createdAt": "2020-04-30T15:04:07Z", "author": {"login": "xristy"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/TextIndexLucene.java", "diffHunk": "@@ -112,6 +112,7 @@\n     private final FieldType        ftTextNotStored ; // used for lang derived fields\n     private final FieldType        ftTextStoredNoIndex ; // used for lang derived fields\n     private final boolean          isMultilingual ;\n+    private final int              maxBasicQueries ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAxNDk1OQ=="}, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzYyOTAyOnYy", "diffSide": "RIGHT", "path": "jena-text/src/main/java/org/apache/jena/query/text/assembler/TextIndexLuceneAssembler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjo0NjowOFrOGPDZrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMzoyMjo1MFrOGPJjgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNzU1MA==", "bodyText": "All the code looks good to me. Only one question here. The message says that it must be an int. But up to this point, I think we only know it's a) not null, and b) not a literal.\nMy RDF-Fu is a bit rusty, feel free to ignore if what I'm saying is completely wrong please. But I think it could be another type (char, bool, etc)? So I think only after this if, when we call getInt() we will actually know whether we have an int or not?", "url": "https://github.com/apache/jena/pull/669#discussion_r418437550", "createdAt": "2020-05-01T06:46:08Z", "author": {"login": "kinow"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/assembler/TextIndexLuceneAssembler.java", "diffHunk": "@@ -94,7 +94,17 @@ public TextIndex open(Assembler a, Resource root, Mode mode) {\n                 }\n                 isMultilingualSupport = mlsNode.asLiteral().getBoolean();\n             }\n-            \n+\n+            int maxBasicQueries = 1024;\n+            Statement maxBasicQueriesStatement = root.getProperty(pMaxBasicQueries);\n+            if (null != maxBasicQueriesStatement) {\n+                RDFNode mbqNode = maxBasicQueriesStatement.getObject();\n+                if (! mbqNode.isLiteral()) {\n+                    throw new TextIndexException(\"text:maxBasicQueries property must be a int : \" + mbqNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUzODM2OA==", "bodyText": "Good point - this gives a basic warning for the first method call in maxBasicQueries = mbqNode.asLiteral().getInt()\ngetInt also parses xsd:String as a 32-bit integer (all the get do similar)\nHaving both the isLiteral test and the try-catch means better error messages.\nThe whole block could be wrapped in a try-catch for robustness. I'll add it in the post-merge work.", "url": "https://github.com/apache/jena/pull/669#discussion_r418538368", "createdAt": "2020-05-01T13:22:50Z", "author": {"login": "afs"}, "path": "jena-text/src/main/java/org/apache/jena/query/text/assembler/TextIndexLuceneAssembler.java", "diffHunk": "@@ -94,7 +94,17 @@ public TextIndex open(Assembler a, Resource root, Mode mode) {\n                 }\n                 isMultilingualSupport = mlsNode.asLiteral().getBoolean();\n             }\n-            \n+\n+            int maxBasicQueries = 1024;\n+            Statement maxBasicQueriesStatement = root.getProperty(pMaxBasicQueries);\n+            if (null != maxBasicQueriesStatement) {\n+                RDFNode mbqNode = maxBasicQueriesStatement.getObject();\n+                if (! mbqNode.isLiteral()) {\n+                    throw new TextIndexException(\"text:maxBasicQueries property must be a int : \" + mbqNode);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNzU1MA=="}, "originalCommit": {"oid": "a6e7e1f9dfdbfae191d0c6549ee2bee7f3c38348"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}