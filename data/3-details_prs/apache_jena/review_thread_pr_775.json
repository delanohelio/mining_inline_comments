{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNTE0MDUw", "number": 775, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTozMDo0NFrOEPf9NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTozMDo1OFrOEPf9bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Njg3NjY5OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/lib/ShLib.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTozMDo0NFrOGzPimg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNToyNDoxOVrOGzXTRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4NTE3OA==", "bodyText": "the datatype= was intentional or accidentally?", "url": "https://github.com/apache/jena/pull/775#discussion_r456385178", "createdAt": "2020-07-17T11:30:44Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/lib/ShLib.java", "diffHunk": "@@ -195,6 +208,25 @@ public static boolean isImmediate(Target target) {\n         return targetType.equals(TargetType.targetObjectsOf) || targetType.equals(TargetType.targetSubjectsOf);\n     }\n \n+    static Set<String> rdfDatatypes = new HashSet<>();\n+    static {\n+        rdfDatatypes.add(RDF.dtLangString.getURI());\n+        rdfDatatypes.add(RDF.dtRDFHTML.getURI());\n+        rdfDatatypes.add(RDF.dtRDFJSON.getURI());\n+        rdfDatatypes.add(RDF.dtXMLLiteral.getURI());\n+    }\n+\n+\n+\n+    /** Test whether the IRI is a datatype that can be written in compact short form (no datatype=)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa61fb956b93ee4768b04c842698e8102707bf12"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxMjMyNw==", "bodyText": "\"datatype=\" intended.\nA plain URI as a constraint is a shorthand for either \"datatype=URI\" or \"class=URI\" by looking inside the URI.  Teh writer attempts to reverse this conservatively. For XSD and some known datatypes, it writes the URI as an abbreviation for datatype=URI otherwise it writes class= (no attempt to abbreviate)\nI'll clarify the comment.", "url": "https://github.com/apache/jena/pull/775#discussion_r456512327", "createdAt": "2020-07-17T15:24:19Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/lib/ShLib.java", "diffHunk": "@@ -195,6 +208,25 @@ public static boolean isImmediate(Target target) {\n         return targetType.equals(TargetType.targetObjectsOf) || targetType.equals(TargetType.targetSubjectsOf);\n     }\n \n+    static Set<String> rdfDatatypes = new HashSet<>();\n+    static {\n+        rdfDatatypes.add(RDF.dtLangString.getURI());\n+        rdfDatatypes.add(RDF.dtRDFHTML.getURI());\n+        rdfDatatypes.add(RDF.dtRDFJSON.getURI());\n+        rdfDatatypes.add(RDF.dtXMLLiteral.getURI());\n+    }\n+\n+\n+\n+    /** Test whether the IRI is a datatype that can be written in compact short form (no datatype=)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4NTE3OA=="}, "originalCommit": {"oid": "aa61fb956b93ee4768b04c842698e8102707bf12"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Njg3NzI2OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/lib/ShLib.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTozMDo1OFrOGzPi_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTozMDo1OFrOGzPi_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4NTI3OA==", "bodyText": "s/us/is ?", "url": "https://github.com/apache/jena/pull/775#discussion_r456385278", "createdAt": "2020-07-17T11:30:58Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/lib/ShLib.java", "diffHunk": "@@ -195,6 +208,25 @@ public static boolean isImmediate(Target target) {\n         return targetType.equals(TargetType.targetObjectsOf) || targetType.equals(TargetType.targetSubjectsOf);\n     }\n \n+    static Set<String> rdfDatatypes = new HashSet<>();\n+    static {\n+        rdfDatatypes.add(RDF.dtLangString.getURI());\n+        rdfDatatypes.add(RDF.dtRDFHTML.getURI());\n+        rdfDatatypes.add(RDF.dtRDFJSON.getURI());\n+        rdfDatatypes.add(RDF.dtXMLLiteral.getURI());\n+    }\n+\n+\n+\n+    /** Test whether the IRI is a datatype that can be written in compact short form (no datatype=)\n+     * This test us used by the SHACL compact parser in {@code ShaclCompactParser.rPropertyType}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa61fb956b93ee4768b04c842698e8102707bf12"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4602, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}