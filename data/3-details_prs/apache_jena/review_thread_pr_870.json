{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjkyMDg1", "number": 870, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTo1NTo0MlrOE85i8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoyMToxOVrOE_SBZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjkyODQ5OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxOTo1NTo0MlrOH5S7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDozMzoyN1rOH5tDWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MDkzMA==", "bodyText": "Not sure if there's any risk here (or in the other getters that return objects and lists) to have concurrency issues. If so, we could copy the underlying object/collection.", "url": "https://github.com/apache/jena/pull/870#discussion_r529840930", "createdAt": "2020-11-24T19:55:42Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "diffHunk": "@@ -59,6 +59,18 @@ public ConstraintComponentSPARQL(SparqlComponent sparqlConstraintComponent,\n         }\n     }\n \n+    public SparqlComponent getSparqlConstraintComponent() {\n+        return sparqlConstraintComponent;\n+    }\n+\n+    public Multimap<Parameter, Node> getParameterMap() {\n+        return parameterMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80e7db1ab7c966e3f8c9c3ba156a7a63b5d2c0db"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0ODIxNQ==", "bodyText": "Yes, it does matter. .equals relies on all parts of the shape and shapes go into datastructures so hashCode and equals must be stable. A Collections.unmodifiable (on \"get\" or in the constructor, not sure which is better) or a structure copy is needed. The current code probably isn't perfect.\nOr documentation!\nAnother to look at is whether internal calculated members should be made public.", "url": "https://github.com/apache/jena/pull/870#discussion_r529848215", "createdAt": "2020-11-24T20:09:30Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "diffHunk": "@@ -59,6 +59,18 @@ public ConstraintComponentSPARQL(SparqlComponent sparqlConstraintComponent,\n         }\n     }\n \n+    public SparqlComponent getSparqlConstraintComponent() {\n+        return sparqlConstraintComponent;\n+    }\n+\n+    public Multimap<Parameter, Node> getParameterMap() {\n+        return parameterMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MDkzMA=="}, "originalCommit": {"oid": "80e7db1ab7c966e3f8c9c3ba156a7a63b5d2c0db"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1Mzc0Nw==", "bodyText": "Sorry, good catch. I think wrapping with unmodifiable collections or cloning in the getter should do. I'll add another commit.", "url": "https://github.com/apache/jena/pull/870#discussion_r530253747", "createdAt": "2020-11-25T10:10:20Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "diffHunk": "@@ -59,6 +59,18 @@ public ConstraintComponentSPARQL(SparqlComponent sparqlConstraintComponent,\n         }\n     }\n \n+    public SparqlComponent getSparqlConstraintComponent() {\n+        return sparqlConstraintComponent;\n+    }\n+\n+    public Multimap<Parameter, Node> getParameterMap() {\n+        return parameterMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MDkzMA=="}, "originalCommit": {"oid": "80e7db1ab7c966e3f8c9c3ba156a7a63b5d2c0db"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI1NjY4OQ==", "bodyText": "For the Multimap in ConstraintComponentSPARQL I am not sure how to proceed, I think it's best to revert the change on that one.", "url": "https://github.com/apache/jena/pull/870#discussion_r530256689", "createdAt": "2020-11-25T10:14:41Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "diffHunk": "@@ -59,6 +59,18 @@ public ConstraintComponentSPARQL(SparqlComponent sparqlConstraintComponent,\n         }\n     }\n \n+    public SparqlComponent getSparqlConstraintComponent() {\n+        return sparqlConstraintComponent;\n+    }\n+\n+    public Multimap<Parameter, Node> getParameterMap() {\n+        return parameterMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MDkzMA=="}, "originalCommit": {"oid": "80e7db1ab7c966e3f8c9c3ba156a7a63b5d2c0db"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI2OTAxNg==", "bodyText": "For the Multimap in ConstraintComponentSPARQL I am not sure how to proceed, I think it's best to revert the change on that one.\n\nIf that's OK for you for now, then all good :-)", "url": "https://github.com/apache/jena/pull/870#discussion_r530269016", "createdAt": "2020-11-25T10:33:27Z", "author": {"login": "kinow"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/ConstraintComponentSPARQL.java", "diffHunk": "@@ -59,6 +59,18 @@ public ConstraintComponentSPARQL(SparqlComponent sparqlConstraintComponent,\n         }\n     }\n \n+    public SparqlComponent getSparqlConstraintComponent() {\n+        return sparqlConstraintComponent;\n+    }\n+\n+    public Multimap<Parameter, Node> getParameterMap() {\n+        return parameterMap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0MDkzMA=="}, "originalCommit": {"oid": "80e7db1ab7c966e3f8c9c3ba156a7a63b5d2c0db"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzg4MDc4OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/CardinalityConstraint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxMzo1OFrOH85qmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjoxNjoyNVrOH98khw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTQwMQ==", "bodyText": "Not sure if this the best thing to do. The subclass for max and min already have accessors.\nBeing an abstract class, CardinalityConstraint can't be created directly.\n\"MaxCount\" have a \"getMinCount\" function is a bit strange. If there were a general min and max at the same time constraint, then on the superclass would make more sense but there isn't.\nPlease remove theses and use overrides in the subclasses.", "url": "https://github.com/apache/jena/pull/870#discussion_r533621401", "createdAt": "2020-12-01T18:13:58Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/CardinalityConstraint.java", "diffHunk": "@@ -38,7 +38,15 @@ public void validateNodeShape(ValidationContext vCxt, Graph data, Shape shape, N\n         // Node shape with cardinality. Can this usefully be checked for in the parser?\n         throw new ShaclParseException(\"Cardinality constraint on a node shape\");\n     }\n-    \n+\n+    public int getMinCount(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcxNzU3NQ==", "bodyText": "ok", "url": "https://github.com/apache/jena/pull/870#discussion_r534717575", "createdAt": "2020-12-03T06:16:25Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/CardinalityConstraint.java", "diffHunk": "@@ -38,7 +38,15 @@ public void validateNodeShape(ValidationContext vCxt, Graph data, Shape shape, N\n         // Node shape with cardinality. Can this usefully be checked for in the parser?\n         throw new ShaclParseException(\"Cardinality constraint on a node shape\");\n     }\n-    \n+\n+    public int getMinCount(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTQwMQ=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0Nzg4OTA5OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/JViolationConstraint.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxNjowNlrOH85vyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzo0MToyNVrOH-pAmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA==", "bodyText": "Minor: \"generateViolation\" read better.", "url": "https://github.com/apache/jena/pull/870#discussion_r533622730", "createdAt": "2020-12-01T18:16:06Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/JViolationConstraint.java", "diffHunk": "@@ -35,6 +35,10 @@ public JViolationConstraint(boolean generateViolation) {\n         this.generateViolation = generateViolation;\n     }\n \n+    public boolean isGenerateViolation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcyMjkxOQ==", "bodyText": "going with generatesViolation()?", "url": "https://github.com/apache/jena/pull/870#discussion_r534722919", "createdAt": "2020-12-03T06:22:11Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/JViolationConstraint.java", "diffHunk": "@@ -35,6 +35,10 @@ public JViolationConstraint(boolean generateViolation) {\n         this.generateViolation = generateViolation;\n     }\n \n+    public boolean isGenerateViolation() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0NTY1OQ==", "bodyText": "Yes", "url": "https://github.com/apache/jena/pull/870#discussion_r535445659", "createdAt": "2020-12-03T17:41:25Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/JViolationConstraint.java", "diffHunk": "@@ -35,6 +35,10 @@ public JViolationConstraint(boolean generateViolation) {\n         this.generateViolation = generateViolation;\n     }\n \n+    public boolean isGenerateViolation() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzkwNDE1OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/PatternConstraint.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoxOTo1MVrOH855Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjoyOToyNFrOH99Urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNTEwNw==", "bodyText": "Minor: I'd prefer not the Pattern because it is an internal term, and then have the pattern string as getPattern().\nIt is exposing the information once, not in two different ways.", "url": "https://github.com/apache/jena/pull/870#discussion_r533625107", "createdAt": "2020-12-01T18:19:51Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/PatternConstraint.java", "diffHunk": "@@ -53,6 +53,18 @@ public PatternConstraint(String pattern, String flagsStr) {\n         this.pattern = Pattern.compile(pattern, flags);\n     }\n \n+    public Pattern getPattern() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcyOTkwMg==", "bodyText": "ok", "url": "https://github.com/apache/jena/pull/870#discussion_r534729902", "createdAt": "2020-12-03T06:29:24Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/PatternConstraint.java", "diffHunk": "@@ -53,6 +53,18 @@ public PatternConstraint(String pattern, String flagsStr) {\n         this.pattern = Pattern.compile(pattern, flags);\n     }\n \n+    public Pattern getPattern() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNTEwNw=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzkxMDE0OnYy", "diffSide": "RIGHT", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/QualifiedValueShape.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxODoyMToxOVrOH858sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzo0MTo0M1rOH-pBqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNjAzNA==", "bodyText": "AutoCase does not work out! And \"Q\" does work that well either! How about public int qMin()?", "url": "https://github.com/apache/jena/pull/870#discussion_r533626034", "createdAt": "2020-12-01T18:21:19Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/QualifiedValueShape.java", "diffHunk": "@@ -50,6 +50,22 @@ public QualifiedValueShape(Shape sub, int qMin, int qMax, boolean qDisjoint) {\n         this.qDisjoint = qDisjoint;\n     }\n \n+    public Shape getSub() {\n+        return sub;\n+    }\n+\n+    public int getqMin() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDczMDkxNQ==", "bodyText": "ok (getQMin() has its merits, but your call)", "url": "https://github.com/apache/jena/pull/870#discussion_r534730915", "createdAt": "2020-12-03T06:30:29Z", "author": {"login": "fkleedorfer"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/QualifiedValueShape.java", "diffHunk": "@@ -50,6 +50,22 @@ public QualifiedValueShape(Shape sub, int qMin, int qMax, boolean qDisjoint) {\n         this.qDisjoint = qDisjoint;\n     }\n \n+    public Shape getSub() {\n+        return sub;\n+    }\n+\n+    public int getqMin() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNjAzNA=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0NTkzMA==", "bodyText": "Ok", "url": "https://github.com/apache/jena/pull/870#discussion_r535445930", "createdAt": "2020-12-03T17:41:43Z", "author": {"login": "afs"}, "path": "jena-shacl/src/main/java/org/apache/jena/shacl/engine/constraint/QualifiedValueShape.java", "diffHunk": "@@ -50,6 +50,22 @@ public QualifiedValueShape(Shape sub, int qMin, int qMax, boolean qDisjoint) {\n         this.qDisjoint = qDisjoint;\n     }\n \n+    public Shape getSub() {\n+        return sub;\n+    }\n+\n+    public int getqMin() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyNjAzNA=="}, "originalCommit": {"oid": "d18a98ac109d71e16f4f41f42f5d5c682c95ac16"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4533, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}