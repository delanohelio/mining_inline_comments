{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzA3NjY1", "number": 1097, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzo1MDoyN1rOEnqJew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0ODoxN1rOEqHhhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDIwNDc1OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/BiomeEffectsAccessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzo1MDoyN1rOHYYSoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwMDowOTowMlrOHYYvPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMyNTg1Nw==", "bodyText": "Do you need to specify @Mutable in accessors?", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495325857", "createdAt": "2020-09-25T23:50:27Z", "author": {"login": "i509VCB"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/BiomeEffectsAccessor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.biome.modification;\n+\n+import java.util.Optional;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Mutable;\n+import org.spongepowered.asm.mixin.gen.Accessor;\n+\n+import net.minecraft.sound.BiomeAdditionsSound;\n+import net.minecraft.sound.BiomeMoodSound;\n+import net.minecraft.sound.MusicSound;\n+import net.minecraft.sound.SoundEvent;\n+import net.minecraft.world.biome.BiomeEffects;\n+import net.minecraft.world.biome.BiomeParticleConfig;\n+\n+@Mixin(BiomeEffects.class)\n+public interface BiomeEffectsAccessor {\n+\t@Accessor(\"fogColor\")\n+\t@Mutable\n+\tvoid fabric_setFogColor(int value);\n+\n+\t@Accessor(\"waterColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterColor(int value);\n+\n+\t@Accessor(\"waterFogColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterFogColor(int value);\n+\n+\t@Accessor(\"skyColor\")\n+\t@Mutable\n+\tvoid fabric_setSkyColor(int value);\n+\n+\t@Accessor(\"foliageColor\")\n+\t@Mutable\n+\tvoid fabric_setFoliageColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColor\")\n+\t@Mutable\n+\tvoid fabric_setGrassColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColorModifier\")\n+\t@Mutable\n+\tvoid fabric_setGrassColorModifier(BiomeEffects.GrassColorModifier value);\n+\n+\t@Accessor(\"particleConfig\")\n+\t@Mutable\n+\tvoid fabric_setParticleConfig(Optional<BiomeParticleConfig> value);\n+\n+\t@Accessor(\"loopSound\")\n+\t@Mutable\n+\tvoid fabric_setLoopSound(Optional<SoundEvent> value);\n+\n+\t@Accessor(\"moodSound\")\n+\t@Mutable\n+\tvoid fabric_setMoodSound(Optional<BiomeMoodSound> value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMzMjAyOQ==", "bodyText": "Hm, the fields are final and it warned me if I don't do this.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495332029", "createdAt": "2020-09-26T00:05:54Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/BiomeEffectsAccessor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.biome.modification;\n+\n+import java.util.Optional;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Mutable;\n+import org.spongepowered.asm.mixin.gen.Accessor;\n+\n+import net.minecraft.sound.BiomeAdditionsSound;\n+import net.minecraft.sound.BiomeMoodSound;\n+import net.minecraft.sound.MusicSound;\n+import net.minecraft.sound.SoundEvent;\n+import net.minecraft.world.biome.BiomeEffects;\n+import net.minecraft.world.biome.BiomeParticleConfig;\n+\n+@Mixin(BiomeEffects.class)\n+public interface BiomeEffectsAccessor {\n+\t@Accessor(\"fogColor\")\n+\t@Mutable\n+\tvoid fabric_setFogColor(int value);\n+\n+\t@Accessor(\"waterColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterColor(int value);\n+\n+\t@Accessor(\"waterFogColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterFogColor(int value);\n+\n+\t@Accessor(\"skyColor\")\n+\t@Mutable\n+\tvoid fabric_setSkyColor(int value);\n+\n+\t@Accessor(\"foliageColor\")\n+\t@Mutable\n+\tvoid fabric_setFoliageColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColor\")\n+\t@Mutable\n+\tvoid fabric_setGrassColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColorModifier\")\n+\t@Mutable\n+\tvoid fabric_setGrassColorModifier(BiomeEffects.GrassColorModifier value);\n+\n+\t@Accessor(\"particleConfig\")\n+\t@Mutable\n+\tvoid fabric_setParticleConfig(Optional<BiomeParticleConfig> value);\n+\n+\t@Accessor(\"loopSound\")\n+\t@Mutable\n+\tvoid fabric_setLoopSound(Optional<SoundEvent> value);\n+\n+\t@Accessor(\"moodSound\")\n+\t@Mutable\n+\tvoid fabric_setMoodSound(Optional<BiomeMoodSound> value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMyNTg1Nw=="}, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMzMzE4Mw==", "bodyText": "hmm okay", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495333183", "createdAt": "2020-09-26T00:09:02Z", "author": {"login": "i509VCB"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/BiomeEffectsAccessor.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.biome.modification;\n+\n+import java.util.Optional;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Mutable;\n+import org.spongepowered.asm.mixin.gen.Accessor;\n+\n+import net.minecraft.sound.BiomeAdditionsSound;\n+import net.minecraft.sound.BiomeMoodSound;\n+import net.minecraft.sound.MusicSound;\n+import net.minecraft.sound.SoundEvent;\n+import net.minecraft.world.biome.BiomeEffects;\n+import net.minecraft.world.biome.BiomeParticleConfig;\n+\n+@Mixin(BiomeEffects.class)\n+public interface BiomeEffectsAccessor {\n+\t@Accessor(\"fogColor\")\n+\t@Mutable\n+\tvoid fabric_setFogColor(int value);\n+\n+\t@Accessor(\"waterColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterColor(int value);\n+\n+\t@Accessor(\"waterFogColor\")\n+\t@Mutable\n+\tvoid fabric_setWaterFogColor(int value);\n+\n+\t@Accessor(\"skyColor\")\n+\t@Mutable\n+\tvoid fabric_setSkyColor(int value);\n+\n+\t@Accessor(\"foliageColor\")\n+\t@Mutable\n+\tvoid fabric_setFoliageColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColor\")\n+\t@Mutable\n+\tvoid fabric_setGrassColor(Optional<Integer> value);\n+\n+\t@Accessor(\"grassColorModifier\")\n+\t@Mutable\n+\tvoid fabric_setGrassColorModifier(BiomeEffects.GrassColorModifier value);\n+\n+\t@Accessor(\"particleConfig\")\n+\t@Mutable\n+\tvoid fabric_setParticleConfig(Optional<BiomeParticleConfig> value);\n+\n+\t@Accessor(\"loopSound\")\n+\t@Mutable\n+\tvoid fabric_setLoopSound(Optional<SoundEvent> value);\n+\n+\t@Accessor(\"moodSound\")\n+\t@Mutable\n+\tvoid fabric_setMoodSound(Optional<BiomeMoodSound> value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMyNTg1Nw=="}, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTM4NDQ2OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModifications.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOTo0Nzo0OFrOHYiQ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMToxNTo0MFrOHYisxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTI0Ng==", "bodyText": "I will note the fact that by multiplying by 10 for each of these values (sometimes more than once) the result is there's an exponential increase in the possible values between each of these points. It might be a better idea to just do like\n000000000\n025000000\n050000000\n075000000\n100000000\n\nSo distribution is more uniform. Really though I'm guessing it doesn't really matter.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495489246", "createdAt": "2020-09-26T19:47:48Z", "author": {"login": "Vaerian"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModifications.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.function.Predicate;\n+\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.gen.GenerationStep;\n+import net.minecraft.world.gen.carver.ConfiguredCarver;\n+import net.minecraft.world.gen.feature.ConfiguredFeature;\n+import net.minecraft.world.gen.feature.ConfiguredStructureFeature;\n+\n+/**\n+ * Provides an API to modify Biomes after they have been loaded and before they are used in the World.\n+ *\n+ * <p>Any modifications made to biomes will not be available for use in server.properties (as of 1.16.1),\n+ * or the demo level.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeModifications {\n+\t/**\n+\t * The suggested order for modifiers that enrich biomes by adding to them without relying on\n+\t * other information in the biome, or removing other features.\n+\t *\n+\t * <p><b>Examples:</b> New ores, new vegetation, new structures\n+\t */\n+\tpublic static final int ORDER_ADDITIONS = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTg3MA==", "bodyText": "Yeah I'll be honest, I was kinda lazy with those :-D", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495489870", "createdAt": "2020-09-26T19:55:45Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModifications.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.function.Predicate;\n+\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.gen.GenerationStep;\n+import net.minecraft.world.gen.carver.ConfiguredCarver;\n+import net.minecraft.world.gen.feature.ConfiguredFeature;\n+import net.minecraft.world.gen.feature.ConfiguredStructureFeature;\n+\n+/**\n+ * Provides an API to modify Biomes after they have been loaded and before they are used in the World.\n+ *\n+ * <p>Any modifications made to biomes will not be available for use in server.properties (as of 1.16.1),\n+ * or the demo level.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeModifications {\n+\t/**\n+\t * The suggested order for modifiers that enrich biomes by adding to them without relying on\n+\t * other information in the biome, or removing other features.\n+\t *\n+\t * <p><b>Examples:</b> New ores, new vegetation, new structures\n+\t */\n+\tpublic static final int ORDER_ADDITIONS = 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTI0Ng=="}, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5NjM5MA==", "bodyText": "I'll leave it as is though, since it really doesn't matter all that much.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r495496390", "createdAt": "2020-09-26T21:15:40Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModifications.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.function.Predicate;\n+\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.gen.GenerationStep;\n+import net.minecraft.world.gen.carver.ConfiguredCarver;\n+import net.minecraft.world.gen.feature.ConfiguredFeature;\n+import net.minecraft.world.gen.feature.ConfiguredStructureFeature;\n+\n+/**\n+ * Provides an API to modify Biomes after they have been loaded and before they are used in the World.\n+ *\n+ * <p>Any modifications made to biomes will not be available for use in server.properties (as of 1.16.1),\n+ * or the demo level.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeModifications {\n+\t/**\n+\t * The suggested order for modifiers that enrich biomes by adding to them without relying on\n+\t * other information in the biome, or removing other features.\n+\t *\n+\t * <p><b>Examples:</b> New ores, new vegetation, new structures\n+\t */\n+\tpublic static final int ORDER_ADDITIONS = 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTI0Ng=="}, "originalCommit": {"oid": "41975f82ca8931e228e87782f9a337b520a407f6"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODExNTM0OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyMDo1NFrOHa_keA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo1NDoxNFrOHcJyzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjU1Mg==", "bodyText": "I would expand the tests a bit, I would atleast add an ore or something as well.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498066552", "createdAt": "2020-10-01T08:20:54Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "diffHunk": "@@ -63,5 +66,17 @@ public void onInitialize() {\n \t\tOverworldBiomes.addHillsBiome(BiomeKeys.BAMBOO_JUNGLE, BiomeKeys.BASALT_DELTAS, 0.9);\n \n \t\tOverworldBiomes.addContinentalBiome(BiomeKeys.END_HIGHLANDS, OverworldClimate.DRY, 0.5);\n+\n+\t\tBiomeModifications.create(new Identifier(\"fabric:test_mod\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzMjc5MA==", "bodyText": "Please see the unit tests I linked in the PR description, I don't want to duplicate those in the test mod until it's clear whether they'll go through or not.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498132790", "createdAt": "2020-10-01T10:11:06Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "diffHunk": "@@ -63,5 +66,17 @@ public void onInitialize() {\n \t\tOverworldBiomes.addHillsBiome(BiomeKeys.BAMBOO_JUNGLE, BiomeKeys.BASALT_DELTAS, 0.9);\n \n \t\tOverworldBiomes.addContinentalBiome(BiomeKeys.END_HIGHLANDS, OverworldClimate.DRY, 0.5);\n+\n+\t\tBiomeModifications.create(new Identifier(\"fabric:test_mod\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjU1Mg=="}, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3Mzc2MQ==", "bodyText": "Those are awesome, they would be really great to have in. They required a loader change didnt they?", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498273761", "createdAt": "2020-10-01T14:09:29Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "diffHunk": "@@ -63,5 +66,17 @@ public void onInitialize() {\n \t\tOverworldBiomes.addHillsBiome(BiomeKeys.BAMBOO_JUNGLE, BiomeKeys.BASALT_DELTAS, 0.9);\n \n \t\tOverworldBiomes.addContinentalBiome(BiomeKeys.END_HIGHLANDS, OverworldClimate.DRY, 0.5);\n+\n+\t\tBiomeModifications.create(new Identifier(\"fabric:test_mod\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjU1Mg=="}, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MzE1OA==", "bodyText": "The commit contains more a \"proof of concept\" for how to do a loader-change, by placing a class in the loader-package to get around the package-visible accessibility of some loader classes. It obviously can't stay like that. Maybe we can convince player that it is worth supporting, then I'd try to make a loader PR (it shouldn't really be too hard, essentially we'd need a third KnotLauncher that doesnt invoke any entrypoints and uses more or less a dummy GameProvider, which is what that proof of concept does).", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498743158", "createdAt": "2020-10-02T10:31:55Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "diffHunk": "@@ -63,5 +66,17 @@ public void onInitialize() {\n \t\tOverworldBiomes.addHillsBiome(BiomeKeys.BAMBOO_JUNGLE, BiomeKeys.BASALT_DELTAS, 0.9);\n \n \t\tOverworldBiomes.addContinentalBiome(BiomeKeys.END_HIGHLANDS, OverworldClimate.DRY, 0.5);\n+\n+\t\tBiomeModifications.create(new Identifier(\"fabric:test_mod\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjU1Mg=="}, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MjYzNg==", "bodyText": "I do still think there should be few more examples/tests here, atleast add an ore or something.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r499282636", "createdAt": "2020-10-04T19:54:14Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/testmod/java/net/fabricmc/fabric/test/biome/FabricBiomeTest.java", "diffHunk": "@@ -63,5 +66,17 @@ public void onInitialize() {\n \t\tOverworldBiomes.addHillsBiome(BiomeKeys.BAMBOO_JUNGLE, BiomeKeys.BASALT_DELTAS, 0.9);\n \n \t\tOverworldBiomes.addContinentalBiome(BiomeKeys.END_HIGHLANDS, OverworldClimate.DRY, 0.5);\n+\n+\t\tBiomeModifications.create(new Identifier(\"fabric:test_mod\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NjU1Mg=="}, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODEyMTgwOnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/RegistryOpsMixin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODoyMjo0MFrOHa_ohQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDozMjoxNFrOHbo3yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NzU4OQ==", "bodyText": "Id you are going to use DRM for short use it in full once with (DRM) and then make sure its being used throughout the javadoc.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498067589", "createdAt": "2020-10-01T08:22:40Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/RegistryOpsMixin.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.biome.modification;\n+\n+import com.mojang.serialization.DynamicOps;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.resource.ResourceManager;\n+import net.minecraft.util.dynamic.RegistryOps;\n+import net.minecraft.util.registry.DynamicRegistryManager;\n+\n+import net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl;\n+\n+/**\n+ * This Mixin hooks int the creation of RegistryOps, which will currently load data pack contents into\n+ * the supplied dynamic registry manager, making it the point at which we should apply biome modifications.\n+ *\n+ * <p>There is generally the following order:\n+ * <ol>\n+ *     <li>{@link DynamicRegistryManager#create()} is used to create a dynamic registry manager with just\n+ *     entries from {@link net.minecraft.util.registry.BuiltinRegistries}</li>\n+ *     <li>Sometimes, Vanilla Minecraft will stop here, and use the DRM as-is (examples: server.properties parsing, world creation screen).</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MzI0Mg==", "bodyText": "Will do, I think I'll just replace all references to \"DRM\" with the full name and potentially a @link", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r498743242", "createdAt": "2020-10-02T10:32:14Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/mixin/biome/modification/RegistryOpsMixin.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.biome.modification;\n+\n+import com.mojang.serialization.DynamicOps;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.resource.ResourceManager;\n+import net.minecraft.util.dynamic.RegistryOps;\n+import net.minecraft.util.registry.DynamicRegistryManager;\n+\n+import net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl;\n+\n+/**\n+ * This Mixin hooks int the creation of RegistryOps, which will currently load data pack contents into\n+ * the supplied dynamic registry manager, making it the point at which we should apply biome modifications.\n+ *\n+ * <p>There is generally the following order:\n+ * <ol>\n+ *     <li>{@link DynamicRegistryManager#create()} is used to create a dynamic registry manager with just\n+ *     entries from {@link net.minecraft.util.registry.BuiltinRegistries}</li>\n+ *     <li>Sometimes, Vanilla Minecraft will stop here, and use the DRM as-is (examples: server.properties parsing, world creation screen).</li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2NzU4OQ=="}, "originalCommit": {"oid": "238372a729d69caf3209d160c258207e7b5ee979"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk4NTA1OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeSelectors.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0MTowNFrOHcJuKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoxOTo1M1rOHgI3sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTQ1MA==", "bodyText": "Might be nice to have a BiomeSelector that checks a Biome.Category", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r499281450", "createdAt": "2020-10-04T19:41:04Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeSelectors.java", "diffHunk": "@@ -0,0 +1,173 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.SpawnGroup;\n+import net.minecraft.util.registry.BuiltinRegistries;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.BiomeKeys;\n+import net.minecraft.world.biome.SpawnSettings;\n+\n+import net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor;\n+\n+/**\n+ * Provides several convenient biome selectors that can be used with {@link BiomeModifications}.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeSelectors {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17935013d56fc4f200b4bf700e4c52fe473d2700"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2MjYyNA==", "bodyText": "Any update on this comment ^", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r502962624", "createdAt": "2020-10-11T20:34:13Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeSelectors.java", "diffHunk": "@@ -0,0 +1,173 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.SpawnGroup;\n+import net.minecraft.util.registry.BuiltinRegistries;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.BiomeKeys;\n+import net.minecraft.world.biome.SpawnSettings;\n+\n+import net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor;\n+\n+/**\n+ * Provides several convenient biome selectors that can be used with {@link BiomeModifications}.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeSelectors {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTQ1MA=="}, "originalCommit": {"oid": "17935013d56fc4f200b4bf700e4c52fe473d2700"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2MTgwOQ==", "bodyText": "Added", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r503461809", "createdAt": "2020-10-12T18:19:53Z", "author": {"login": "shartte"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeSelectors.java", "diffHunk": "@@ -0,0 +1,173 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+\n+import com.google.common.collect.ImmutableSet;\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.SpawnGroup;\n+import net.minecraft.util.registry.BuiltinRegistries;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.BiomeKeys;\n+import net.minecraft.world.biome.SpawnSettings;\n+\n+import net.fabricmc.fabric.mixin.biome.VanillaLayeredBiomeSourceAccessor;\n+\n+/**\n+ * Provides several convenient biome selectors that can be used with {@link BiomeModifications}.\n+ *\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n+ * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n+ * since it is likely to change in future Minecraft versions.\n+ */\n+@ApiStatus.Experimental\n+public final class BiomeSelectors {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTQ1MA=="}, "originalCommit": {"oid": "17935013d56fc4f200b4bf700e4c52fe473d2700"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk4ODk1OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModification.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0Nzo0OFrOHcJwSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0Nzo0OFrOHcJwSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTk5Mg==", "bodyText": "All of the experimal classes must also be deprecated as not all IDE's handle this.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r499281992", "createdAt": "2020-10-04T19:47:48Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/BiomeModification.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.biome.v1;\n+\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+import org.jetbrains.annotations.ApiStatus;\n+\n+import net.minecraft.util.Identifier;\n+\n+import net.fabricmc.fabric.impl.biome.modification.BiomeModificationImpl;\n+\n+/**\n+ * @see BiomeModifications\n+ */\n+@ApiStatus.Experimental", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17935013d56fc4f200b4bf700e4c52fe473d2700"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk4OTE4OnYy", "diffSide": "RIGHT", "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/OverworldBiomes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0ODoxN1rOHcJwZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0ODoxN1rOHcJwZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MjAyMg==", "bodyText": "Again, fine to add just not to replace.", "url": "https://github.com/FabricMC/fabric/pull/1097#discussion_r499282022", "createdAt": "2020-10-04T19:48:17Z", "author": {"login": "modmuss50"}, "path": "fabric-biome-api-v1/src/main/java/net/fabricmc/fabric/api/biome/v1/OverworldBiomes.java", "diffHunk": "@@ -24,11 +26,11 @@\n /**\n  * API that exposes some internals of the minecraft default biome source for the overworld.\n  *\n- * @deprecated Experimental feature, may be removed or changed without further notice.\n+ * <p><b>Experimental feature</b>, may be removed or changed without further notice.\n  * Because of the volatility of world generation in Minecraft 1.16, this API is marked experimental\n  * since it is likely to change in future Minecraft versions.\n  */\n-@Deprecated\n+@ApiStatus.Experimental", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17935013d56fc4f200b4bf700e4c52fe473d2700"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3475, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}