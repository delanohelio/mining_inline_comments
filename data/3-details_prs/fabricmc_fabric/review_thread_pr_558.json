{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTkyMzc5", "number": 558, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1NzowNFrODwMdSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0MDozMVrODwNvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODYyMzQ2OnYy", "diffSide": "RIGHT", "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/mixin/climbable/MixinLivingEntity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1NzowNVrOGDD0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzowMTo0NFrOGDD6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTU3Nw==", "bodyText": "Why not capture the blockState local var, to save an extra blockstate lookup.", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405861577", "createdAt": "2020-04-08T22:57:05Z", "author": {"login": "modmuss50"}, "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/mixin/climbable/MixinLivingEntity.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.climbable;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.world.World;\n+\n+import net.fabricmc.fabric.api.climbable.v1.FabricClimbableTags;\n+\n+@Mixin(LivingEntity.class)\n+public abstract class MixinLivingEntity extends Entity {\n+\tpublic MixinLivingEntity(EntityType<?> type, World world) {\n+\t\tsuper(type, world);\n+\t}\n+\n+\t@Shadow\n+\tpublic abstract BlockState getBlockState();\n+\n+\t@Inject(method = \"isClimbing\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/entity/LivingEntity;getBlockState()Lnet/minecraft/block/BlockState;\"), cancellable = true)\n+\tpublic void onIsClimbing(CallbackInfoReturnable<Boolean> info) {\n+\t\tif (this.getBlockState().matches(FabricClimbableTags.CLIMBABLE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61163d4a34d5aec3c342927176b7b76d547198c1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MjY1Nw==", "bodyText": "is that an issue? I figured a more stable mixin would be the better move but I can switch it if you wish", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405862657", "createdAt": "2020-04-08T23:00:10Z", "author": {"login": "Prospector"}, "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/mixin/climbable/MixinLivingEntity.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.climbable;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.world.World;\n+\n+import net.fabricmc.fabric.api.climbable.v1.FabricClimbableTags;\n+\n+@Mixin(LivingEntity.class)\n+public abstract class MixinLivingEntity extends Entity {\n+\tpublic MixinLivingEntity(EntityType<?> type, World world) {\n+\t\tsuper(type, world);\n+\t}\n+\n+\t@Shadow\n+\tpublic abstract BlockState getBlockState();\n+\n+\t@Inject(method = \"isClimbing\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/entity/LivingEntity;getBlockState()Lnet/minecraft/block/BlockState;\"), cancellable = true)\n+\tpublic void onIsClimbing(CallbackInfoReturnable<Boolean> info) {\n+\t\tif (this.getBlockState().matches(FabricClimbableTags.CLIMBABLE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTU3Nw=="}, "originalCommit": {"oid": "61163d4a34d5aec3c342927176b7b76d547198c1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MzE2MQ==", "bodyText": "Its not getting pulled forward, so stablity is guaranteed.", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405863161", "createdAt": "2020-04-08T23:01:44Z", "author": {"login": "modmuss50"}, "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/mixin/climbable/MixinLivingEntity.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.climbable;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.world.World;\n+\n+import net.fabricmc.fabric.api.climbable.v1.FabricClimbableTags;\n+\n+@Mixin(LivingEntity.class)\n+public abstract class MixinLivingEntity extends Entity {\n+\tpublic MixinLivingEntity(EntityType<?> type, World world) {\n+\t\tsuper(type, world);\n+\t}\n+\n+\t@Shadow\n+\tpublic abstract BlockState getBlockState();\n+\n+\t@Inject(method = \"isClimbing\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/entity/LivingEntity;getBlockState()Lnet/minecraft/block/BlockState;\"), cancellable = true)\n+\tpublic void onIsClimbing(CallbackInfoReturnable<Boolean> info) {\n+\t\tif (this.getBlockState().matches(FabricClimbableTags.CLIMBABLE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTU3Nw=="}, "originalCommit": {"oid": "61163d4a34d5aec3c342927176b7b76d547198c1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODYyNTM4OnYy", "diffSide": "RIGHT", "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/api/climbable/v1/FabricClimbableTags.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1Nzo1M1rOGDD16Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMjo1Nzo1M1rOGDD16Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTg2NQ==", "bodyText": "Does this really need to be exposed as an API?\nI dont think it does, esp since its being removed in 1.16?", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405861865", "createdAt": "2020-04-08T22:57:53Z", "author": {"login": "modmuss50"}, "path": "fabric-climbable-api-v1/src/main/java/net/fabricmc/fabric/api/climbable/v1/FabricClimbableTags.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.climbable.v1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61163d4a34d5aec3c342927176b7b76d547198c1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODgzMzA2OnYy", "diffSide": "RIGHT", "path": "fabric-climbable-api-v1/src/main/resources/fabric.mod.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0MDozMVrOGDFwEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0OTowN1rOGDF5dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MzEzOQ==", "bodyText": "Should this still be considered an api? This no longer exposes any API, but rather does some implementation tweaks like the crash reports or indigo.", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405893139", "createdAt": "2020-04-09T00:40:31Z", "author": {"login": "liach"}, "path": "fabric-climbable-api-v1/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"fabric-climbable-api-v1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73b6e5607b3a9a188436641c8c7cafafef57b49b"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NTU0MQ==", "bodyText": "IMO a json API is still an API. As modmuss pointed out on discord, those modules aren't things mods interface with, while a tag is.", "url": "https://github.com/FabricMC/fabric/pull/558#discussion_r405895541", "createdAt": "2020-04-09T00:49:07Z", "author": {"login": "Prospector"}, "path": "fabric-climbable-api-v1/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"fabric-climbable-api-v1\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MzEzOQ=="}, "originalCommit": {"oid": "73b6e5607b3a9a188436641c8c7cafafef57b49b"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3520, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}