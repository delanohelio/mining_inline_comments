{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDk4NTc0", "number": 584, "title": "Screen handler API", "bodyText": "Closes #175.\nAdds a screen handler API based on ScreenHandlerTypes.\n\nThe ScreenHandlerType constructor is private in vanilla. This API adds two new methods for creating the types:\n\nScreenHandlerRegistry.registerSimple() creates and registers the type for a simple vanilla-like screen handler.\nScreenHandlerRegistry.registerExtended() creates and registers the type for an extended screen handler. Extended screen handlers can send additional data to the client when they are opened.\n\n\nScreenRegistry replaces the registration methods of vanilla's HandledScreens, which are private.\nBecause these screen handlers are type-based, they can be opened with vanilla's method: ServerPlayerEntity.openHandledScreen(NamedScreenHandlerFactory).\n\nExtended screen handlers have their own factory interface, ExtendedScreenHandlerFactory, that extends NamedScreenHandlerFactory. It defines one extra method for writing the additional data sent to the client into a packet buffer.\n\n\nThe old fabric-containers-v0 module is deprecated. Due to it not tracking the types of screen handlers, it can't be ported cleanly on top of this module.\n\nThis PR is mirrored in the FabLabs Screen Handlers project, and it can be downloaded as a standalone library from there. The FabLabs repository also includes a test/example mod.", "createdAt": "2020-04-18T13:21:02Z", "url": "https://github.com/FabricMC/fabric/pull/584", "merged": true, "mergeCommit": {"oid": "045df74fe0824e0def7725e21eeaea6f648e79bb"}, "closed": true, "closedAt": "2020-06-15T21:00:55Z", "author": {"login": "Juuxel"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcY2C7OAH2gAyNDA1NDk4NTc0OjhiM2ZiYWZiYmE0YjRmODBiZWRhNTM1ZjU4YThkYzIxNzJkYjA4MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrnINAgFqTQzMDk4OTcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8b3fbafbba4b4f80beda535f58a8dc2172db0801", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/8b3fbafbba4b4f80beda535f58a8dc2172db0801", "committedDate": "2020-04-18T13:38:20Z", "message": "Add screen handler API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2267bb5877f84a3c6c19207575f8f58eed385bc", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/d2267bb5877f84a3c6c19207575f8f58eed385bc", "committedDate": "2020-04-18T13:38:20Z", "message": "Use more descriptive letters for FabricHandledScreens generics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f419e210ed5789e8407e2558aa528a90958dc377", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/f419e210ed5789e8407e2558aa528a90958dc377", "committedDate": "2020-04-18T13:37:07Z", "message": "Use more descriptive letters for FabricHandledScreens generics"}, "afterCommit": {"oid": "d2267bb5877f84a3c6c19207575f8f58eed385bc", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/d2267bb5877f84a3c6c19207575f8f58eed385bc", "committedDate": "2020-04-18T13:38:20Z", "message": "Use more descriptive letters for FabricHandledScreens generics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879c90a5f743c5f9d0a3b074efee8533d06d65bc", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/879c90a5f743c5f9d0a3b074efee8533d06d65bc", "committedDate": "2020-04-18T13:40:29Z", "message": "Add missing Deprecated annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c1f374d69f97c4f8ca3156787bee0585a2047b8", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/6c1f374d69f97c4f8ca3156787bee0585a2047b8", "committedDate": "2020-04-18T13:44:19Z", "message": "Bump fabric-containers-v0 version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868", "committedDate": "2020-04-18T13:53:50Z", "message": "Remove unused ServerPlayerEntityAccessor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTg0Mzk0", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-395984394", "createdAt": "2020-04-19T07:04:00Z", "commit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowNDowMFrOGHzbWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowNzo0OVrOGHzdkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNTgwMA==", "bodyText": "I like final things (could you make this method final?)", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410835800", "createdAt": "2020-04-19T07:04:00Z", "author": {"login": "i509VCB"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/impl/screenhandler/ExtendedScreenHandlerType.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.screenhandler;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.screen.ScreenHandlerType;\n+\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.api.screenhandler.v1.ScreenHandlers;\n+\n+public final class ExtendedScreenHandlerType<T extends ScreenHandler> extends ScreenHandlerType<T> {\n+\tprivate final ScreenHandlers.ExtendedFactory<T> factory;\n+\n+\tExtendedScreenHandlerType(ScreenHandlers.ExtendedFactory<T> factory) {\n+\t\tsuper(null);\n+\t\tthis.factory = factory;\n+\t}\n+\n+\t@Environment(EnvType.CLIENT)\n+\t@Override\n+\tpublic T create(int syncId, PlayerInventory inventory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjM3MQ==", "bodyText": "Unsure about putting the [Fabric] in the logs directly. I want to get someone else to look at this as a standards question as well.", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410836371", "createdAt": "2020-04-19T07:07:49Z", "author": {"login": "i509VCB"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/impl/screenhandler/client/NetworkingClient.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.screenhandler.client;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.screen.ingame.HandledScreens;\n+import net.minecraft.client.gui.screen.ingame.ScreenHandlerProvider;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.ScreenHandlerType;\n+import net.minecraft.text.Text;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.api.ClientModInitializer;\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.api.network.ClientSidePacketRegistry;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.Packets;\n+\n+@Environment(EnvType.CLIENT)\n+public final class NetworkingClient implements ClientModInitializer {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t@Override\n+\tpublic void onInitializeClient() {\n+\t\tClientSidePacketRegistry.INSTANCE.register(Packets.OPEN_ID, (ctx, buf) -> openScreen(buf));\n+\t}\n+\n+\t@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+\tprivate void openScreen(PacketByteBuf buf) {\n+\t\tint typeId = buf.readVarInt();\n+\t\tint syncId = buf.readVarInt();\n+\t\tText title = buf.readText();\n+\t\tScreenHandlerType<?> type = Registry.SCREEN_HANDLER.get(typeId);\n+\n+\t\tif (type == null) {\n+\t\t\tLOGGER.warn(\"[Fabric] Unknown screen handler ID: {}\", typeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTg0NTY5", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-395984569", "createdAt": "2020-04-19T07:06:40Z", "commit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzowNjo0MFrOGHzc9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzoxMzoxMFrOGHzhQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjIxNA==", "bodyText": "This sounds too much like a utility class... You can just make this a utility class which methods accomplish the functionalities (allows preserving binary compatibility across different implementations/updates as well)", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410836214", "createdAt": "2020-04-19T07:06:40Z", "author": {"login": "liach"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/api/screenhandler/v1/ScreenHandlers.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.screenhandler.v1;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.screen.ScreenHandlerType;\n+\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.impl.screenhandler.ScreenHandlersImpl;\n+\n+/**\n+ * An utility for creating screen handler types.\n+ */\n+public interface ScreenHandlers {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjMxOQ==", "bodyText": "Class sounds too much like a utility class", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410836319", "createdAt": "2020-04-19T07:07:32Z", "author": {"login": "liach"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/api/screenhandler/v1/client/FabricHandledScreens.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.screenhandler.v1.client;\n+\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.screen.ingame.ScreenHandlerProvider;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.screen.ScreenHandlerType;\n+import net.minecraft.text.Text;\n+\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.impl.screenhandler.client.FabricHandledScreensImpl;\n+\n+/**\n+ * An utility for registering screens with screen handlers.\n+ */\n+@Environment(EnvType.CLIENT)\n+public interface FabricHandledScreens {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNzE3Mw==", "bodyText": "Hmm, is Registry.get safe in netty eventloop", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410837173", "createdAt": "2020-04-19T07:12:23Z", "author": {"login": "liach"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/impl/screenhandler/client/NetworkingClient.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.screenhandler.client;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.screen.ingame.HandledScreens;\n+import net.minecraft.client.gui.screen.ingame.ScreenHandlerProvider;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.ScreenHandlerType;\n+import net.minecraft.text.Text;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.api.ClientModInitializer;\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.api.network.ClientSidePacketRegistry;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.Packets;\n+\n+@Environment(EnvType.CLIENT)\n+public final class NetworkingClient implements ClientModInitializer {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t@Override\n+\tpublic void onInitializeClient() {\n+\t\tClientSidePacketRegistry.INSTANCE.register(Packets.OPEN_ID, (ctx, buf) -> openScreen(buf));\n+\t}\n+\n+\t@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+\tprivate void openScreen(PacketByteBuf buf) {\n+\t\tint typeId = buf.readVarInt();\n+\t\tint syncId = buf.readVarInt();\n+\t\tText title = buf.readText();\n+\t\tScreenHandlerType<?> type = Registry.SCREEN_HANDLER.get(typeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNzMxMg==", "bodyText": "similar concerns here, some read accesses may be unsafe in event loop", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410837312", "createdAt": "2020-04-19T07:13:10Z", "author": {"login": "liach"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/impl/screenhandler/client/NetworkingClient.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.screenhandler.client;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.screen.ingame.HandledScreens;\n+import net.minecraft.client.gui.screen.ingame.ScreenHandlerProvider;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.ScreenHandlerType;\n+import net.minecraft.text.Text;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.api.ClientModInitializer;\n+import net.fabricmc.api.EnvType;\n+import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.api.network.ClientSidePacketRegistry;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.Packets;\n+\n+@Environment(EnvType.CLIENT)\n+public final class NetworkingClient implements ClientModInitializer {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t@Override\n+\tpublic void onInitializeClient() {\n+\t\tClientSidePacketRegistry.INSTANCE.register(Packets.OPEN_ID, (ctx, buf) -> openScreen(buf));\n+\t}\n+\n+\t@SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+\tprivate void openScreen(PacketByteBuf buf) {\n+\t\tint typeId = buf.readVarInt();\n+\t\tint syncId = buf.readVarInt();\n+\t\tText title = buf.readText();\n+\t\tScreenHandlerType<?> type = Registry.SCREEN_HANDLER.get(typeId);\n+\n+\t\tif (type == null) {\n+\t\t\tLOGGER.warn(\"[Fabric] Unknown screen handler ID: {}\", typeId);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (!(type instanceof ExtendedScreenHandlerType<?>)) {\n+\t\t\tLOGGER.warn(\"[Fabric] Received extended opening packet for non-extended screen handler {}\", Registry.SCREEN_HANDLER.getId(type));\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tHandledScreens.Provider screenFactory = HandledScreens.getProvider(type);\n+\n+\t\tif (screenFactory != null) {\n+\t\t\tMinecraftClient client = MinecraftClient.getInstance();\n+\t\t\tPlayerEntity player = client.player;\n+\n+\t\t\tScreen screen = screenFactory.create(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f7490cf2e2f32d86e3a7760c1ccbad6c47f41d", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/a0f7490cf2e2f32d86e3a7760c1ccbad6c47f41d", "committedDate": "2020-04-19T07:39:16Z", "message": "Remove [Fabric] from log messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTg3MjIx", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-395987221", "createdAt": "2020-04-19T07:41:26Z", "commit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzo0MToyN1rOGHz0lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzo0MToyN1rOGHz0lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0MjI2Mg==", "bodyText": "Are we going for prefixing the inject methods with fabric and _? I am seeing mostly no prefix on inject, this is an inject so conflicting names shouldn't matter right?", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410842262", "createdAt": "2020-04-19T07:41:27Z", "author": {"login": "shedaniel"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/mixin/screenhandler/ServerPlayerEntityMixin.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.screenhandler;\n+\n+import java.util.OptionalInt;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.network.Packet;\n+import net.minecraft.screen.NamedScreenHandlerFactory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.network.ServerPlayNetworkHandler;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.fabric.api.screenhandler.v1.ExtendedScreenHandlerFactory;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.ScreenHandlersImpl;\n+\n+@Mixin(ServerPlayerEntity.class)\n+public class ServerPlayerEntityMixin {\n+\t@Shadow\n+\tprivate int screenHandlerSyncId;\n+\n+\t@Unique\n+\tprivate final ThreadLocal<ScreenHandler> fabric_openedScreenHandler = new ThreadLocal<>();\n+\n+\t@Inject(method = \"openHandledScreen(Lnet/minecraft/screen/NamedScreenHandlerFactory;)Ljava/util/OptionalInt;\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/server/network/ServerPlayNetworkHandler;sendPacket(Lnet/minecraft/network/Packet;)V\"), locals = LocalCapture.CAPTURE_FAILHARD)\n+\tprivate void fabric_onOpenHandledScreen_cacheScreenHandler(NamedScreenHandlerFactory factory, CallbackInfoReturnable<OptionalInt> info, ScreenHandler handler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTg3MzEz", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-395987313", "createdAt": "2020-04-19T07:42:31Z", "commit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzo0MjozMlrOGHz1PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQwNzo0MjozMlrOGHz1PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg0MjQyOA==", "bodyText": "Since I see the fabric-networking-v0 in the build.gradle, care putting it here as well", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410842428", "createdAt": "2020-04-19T07:42:32Z", "author": {"login": "shedaniel"}, "path": "fabric-screen-handler-api-v1/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,30 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"fabric-screen-handler-api-v1\",\n+  \"name\": \"Fabric Screen Handler API (v1)\",\n+  \"version\": \"${version}\",\n+  \"environment\": \"*\",\n+  \"license\": \"Apache-2.0\",\n+  \"icon\": \"assets/fabric-screen-handler-api-v1/icon.png\",\n+  \"contact\": {\n+    \"homepage\": \"https://fabricmc.net\",\n+    \"irc\": \"irc://irc.esper.net:6667/fabric\",\n+    \"issues\": \"https://github.com/FabricMC/fabric/issues\",\n+    \"sources\": \"https://github.com/FabricMC/fabric\"\n+  },\n+  \"authors\": [\n+    \"FabricMC\"\n+  ],\n+  \"depends\": {\n+    \"fabricloader\": \">=0.8.0\",\n+    \"fabric-api-base\": \"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e077dc5d2fa67d1c79811ba2ee42c7e09e0f868"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780ae298d3a87bdc76cdc51d7232315960db3a19", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/780ae298d3a87bdc76cdc51d7232315960db3a19", "committedDate": "2020-04-19T07:42:43Z", "message": "Convert FabricHandledScreens to a class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e2fd87db67536c33339fe3ba5ed29c5ba37a223", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/3e2fd87db67536c33339fe3ba5ed29c5ba37a223", "committedDate": "2020-04-19T07:43:41Z", "message": "Add dependency on networking-v0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7972c228ead82d022d467befa85457f04e831e3c", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/7972c228ead82d022d467befa85457f04e831e3c", "committedDate": "2020-04-19T08:01:35Z", "message": "Resolve threading issues with NetworkingClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab08bece3eb9779ea49584d017e583984bcc1ab", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/8ab08bece3eb9779ea49584d017e583984bcc1ab", "committedDate": "2020-04-19T08:12:52Z", "message": "Use Identifiers instead of int IDs, make ScreenHandlers a class\n\nAlso added a private constructor to FabricHandledScreens."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8055b6815d6fbda79b4676273c0e36c44c63e4df", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/8055b6815d6fbda79b4676273c0e36c44c63e4df", "committedDate": "2020-04-19T08:14:26Z", "message": "NetworkingClient -> ClientNetworking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae5c1c03458da143da0986c94d41d8a3d016d67f", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/ae5c1c03458da143da0986c94d41d8a3d016d67f", "committedDate": "2020-04-19T08:16:26Z", "message": "Use more descriptive names for injections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72aec10c3b90d42ec1320682fb9375b08db5550c", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/72aec10c3b90d42ec1320682fb9375b08db5550c", "committedDate": "2020-04-19T08:23:01Z", "message": "Use ID parameter instead of fetching again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTkwOTE0", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-395990914", "createdAt": "2020-04-19T08:26:46Z", "commit": {"oid": "ae5c1c03458da143da0986c94d41d8a3d016d67f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c1797230c283779d1e32026db471645443fd39e", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/8c1797230c283779d1e32026db471645443fd39e", "committedDate": "2020-04-19T08:28:19Z", "message": "Add clarifying comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDY1Nzgz", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-396065783", "createdAt": "2020-04-19T21:49:58Z", "commit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMTo0OTo1OFrOGH9ZnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMTo0OTo1OFrOGH9ZnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk5OTE5Ng==", "bodyText": "Whats the use of a ThreadLocal?", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410999196", "createdAt": "2020-04-19T21:49:58Z", "author": {"login": "modmuss50"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/mixin/screenhandler/ServerPlayerEntityMixin.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.screenhandler;\n+\n+import java.util.OptionalInt;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.network.Packet;\n+import net.minecraft.screen.NamedScreenHandlerFactory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.network.ServerPlayNetworkHandler;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.fabric.api.screenhandler.v1.ExtendedScreenHandlerFactory;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.Networking;\n+\n+@Mixin(ServerPlayerEntity.class)\n+public class ServerPlayerEntityMixin {\n+\t@Shadow\n+\tprivate int screenHandlerSyncId;\n+\n+\t@Unique\n+\tprivate final ThreadLocal<ScreenHandler> fabric_openedScreenHandler = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDY1OTA4", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-396065908", "createdAt": "2020-04-19T21:51:22Z", "commit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMTo1MToyMlrOGH9auQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQyMTo1MToyMlrOGH9auQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk5OTQ4MQ==", "bodyText": "Would it be a good idea to set fabric_openedScreenHandler value to null here? Save it hanging around?", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r410999481", "createdAt": "2020-04-19T21:51:22Z", "author": {"login": "modmuss50"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/mixin/screenhandler/ServerPlayerEntityMixin.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.screenhandler;\n+\n+import java.util.OptionalInt;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.network.Packet;\n+import net.minecraft.screen.NamedScreenHandlerFactory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.network.ServerPlayNetworkHandler;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.Registry;\n+\n+import net.fabricmc.fabric.api.screenhandler.v1.ExtendedScreenHandlerFactory;\n+import net.fabricmc.fabric.impl.screenhandler.ExtendedScreenHandlerType;\n+import net.fabricmc.fabric.impl.screenhandler.Networking;\n+\n+@Mixin(ServerPlayerEntity.class)\n+public class ServerPlayerEntityMixin {\n+\t@Shadow\n+\tprivate int screenHandlerSyncId;\n+\n+\t@Unique\n+\tprivate final ThreadLocal<ScreenHandler> fabric_openedScreenHandler = new ThreadLocal<>();\n+\n+\t@Inject(method = \"openHandledScreen(Lnet/minecraft/screen/NamedScreenHandlerFactory;)Ljava/util/OptionalInt;\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/server/network/ServerPlayNetworkHandler;sendPacket(Lnet/minecraft/network/Packet;)V\"), locals = LocalCapture.CAPTURE_FAILHARD)\n+\tprivate void fabric_storeOpenedScreenHandler(NamedScreenHandlerFactory factory, CallbackInfoReturnable<OptionalInt> info, ScreenHandler handler) {\n+\t\tif (factory instanceof ExtendedScreenHandlerFactory) {\n+\t\t\tfabric_openedScreenHandler.set(handler);\n+\t\t} else if (handler.getType() instanceof ExtendedScreenHandlerType<?>) {\n+\t\t\tIdentifier id = Registry.SCREEN_HANDLER.getId(handler.getType());\n+\t\t\tthrow new IllegalArgumentException(\"[Fabric] Extended screen handler \" + id + \" must be opened with an ExtendedScreenHandlerFactory!\");\n+\t\t}\n+\t}\n+\n+\t@Redirect(method = \"openHandledScreen(Lnet/minecraft/screen/NamedScreenHandlerFactory;)Ljava/util/OptionalInt;\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/server/network/ServerPlayNetworkHandler;sendPacket(Lnet/minecraft/network/Packet;)V\"))\n+\tprivate void fabric_replaceVanillaScreenPacket(ServerPlayNetworkHandler networkHandler, Packet<?> packet, NamedScreenHandlerFactory factory) {\n+\t\tif (factory instanceof ExtendedScreenHandlerFactory) {\n+\t\t\tScreenHandler handler = fabric_openedScreenHandler.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDc0NDU2", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-398074456", "createdAt": "2020-04-22T10:57:17Z", "commit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo1NzoxN1rOGJwR8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMDo1OToyMlrOGJwW_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4MTM5Mg==", "bodyText": "Since the comment says \"screen opening data\", maybe rename to writeScreenOpeningData", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r412881392", "createdAt": "2020-04-22T10:57:17Z", "author": {"login": "immibis"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/api/screenhandler/v1/ExtendedScreenHandlerFactory.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.screenhandler.v1;\n+\n+import java.util.function.Consumer;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.NamedScreenHandlerFactory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.text.Text;\n+\n+/**\n+ * An extension of {@code NamedScreenHandlerFactory} that can write additional\n+ * networking data to a screen opening packet.\n+ *\n+ * @see ScreenHandlers#extended(ScreenHandlers.ExtendedFactory)\n+ */\n+public interface ExtendedScreenHandlerFactory extends NamedScreenHandlerFactory {\n+\t/**\n+\t * Writes additional server -> client screen opening data to the buffer.\n+\t */\n+\tvoid writeScreenData(PacketByteBuf buf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg4MjY4NA==", "bodyText": "What is the use case for this function?", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r412882684", "createdAt": "2020-04-22T10:59:22Z", "author": {"login": "immibis"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/api/screenhandler/v1/ExtendedScreenHandlerFactory.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.screenhandler.v1;\n+\n+import java.util.function.Consumer;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.network.PacketByteBuf;\n+import net.minecraft.screen.NamedScreenHandlerFactory;\n+import net.minecraft.screen.ScreenHandler;\n+import net.minecraft.text.Text;\n+\n+/**\n+ * An extension of {@code NamedScreenHandlerFactory} that can write additional\n+ * networking data to a screen opening packet.\n+ *\n+ * @see ScreenHandlers#extended(ScreenHandlers.ExtendedFactory)\n+ */\n+public interface ExtendedScreenHandlerFactory extends NamedScreenHandlerFactory {\n+\t/**\n+\t * Writes additional server -> client screen opening data to the buffer.\n+\t */\n+\tvoid writeScreenData(PacketByteBuf buf);\n+\n+\t/**\n+\t * Creates a networked screen handler factory from a base factory and a packet writer.\n+\t *\n+\t * <p>All {@link NamedScreenHandlerFactory} operations are delegated to the base factory,\n+\t * and {@link #writeScreenData(PacketByteBuf)} is delegated to the writer.\n+\t *\n+\t * @param factory      the base factory\n+\t * @param packetWriter the packet writer\n+\t * @return the created factory\n+\t */\n+\tstatic ExtendedScreenHandlerFactory of(NamedScreenHandlerFactory factory, Consumer<PacketByteBuf> packetWriter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1797230c283779d1e32026db471645443fd39e"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319c19d01de775c2d091324a43b8394109b2e9e1", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/319c19d01de775c2d091324a43b8394109b2e9e1", "committedDate": "2020-04-22T15:46:45Z", "message": "Port changes from FabLabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a96b17c04eee7347a2da80de26ed4996e4f38490", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/a96b17c04eee7347a2da80de26ed4996e4f38490", "committedDate": "2020-04-22T15:53:10Z", "message": "Fix compilation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17a7fa3eb24e5b364922c2f4633304fc574b99a5", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/17a7fa3eb24e5b364922c2f4633304fc574b99a5", "committedDate": "2020-04-25T07:43:18Z", "message": "Replace the content of links in FabricHandledScreens for readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d01094ac4dcfb32c3c04f39e61095549545654", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/54d01094ac4dcfb32c3c04f39e61095549545654", "committedDate": "2020-05-17T11:14:27Z", "message": "Merge remote-tracking branch 'upstream/1.16' into patch-8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c765f09bfdb53991c73fe122e38e49eb37d6617", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/1c765f09bfdb53991c73fe122e38e49eb37d6617", "committedDate": "2020-05-17T11:20:18Z", "message": "Sync with FabLabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e6cc09fd9c5d36f0e4cfc1bc11dcf609f96506", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/90e6cc09fd9c5d36f0e4cfc1bc11dcf609f96506", "committedDate": "2020-05-17T12:18:38Z", "message": "Add test mod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8291c0905c56b948592f8dcbe9711f52a6d09ad", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/d8291c0905c56b948592f8dcbe9711f52a6d09ad", "committedDate": "2020-05-17T12:27:08Z", "message": "I suppose IInv shouldn't have CC0 anymore :eyes:"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjI3NDk3", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-416627497", "createdAt": "2020-05-22T03:35:51Z", "commit": {"oid": "d8291c0905c56b948592f8dcbe9711f52a6d09ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d66171ecf44faf7e3aacd2930143c20dfab58ab", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/6d66171ecf44faf7e3aacd2930143c20dfab58ab", "committedDate": "2020-05-22T08:35:00Z", "message": "Improve logging\n\n- Networking now uses a logger instead of an exception\n- The loggers are now suffixed with their side\n- Fixed the client unregistered screen message using the title instead of the ID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84dfbd9445b445222233f05930055f234fc06a8a", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/84dfbd9445b445222233f05930055f234fc06a8a", "committedDate": "2020-05-22T09:01:11Z", "message": "Merge branch '1.16' into patch-8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1683eb538cad4da4fa66ac472ce96e9f053d507", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/b1683eb538cad4da4fa66ac472ce96e9f053d507", "committedDate": "2020-05-22T09:02:53Z", "message": "Fix test mod on 20w21a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ceae812d00411f69fbc9e2c5f648d54c8877254", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/9ceae812d00411f69fbc9e2c5f648d54c8877254", "committedDate": "2020-05-22T09:03:06Z", "message": "Fix ExtendedScreenHandlerFactory javadoc referencing old names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjY2MTk4", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-417666198", "createdAt": "2020-05-25T12:06:56Z", "commit": {"oid": "9ceae812d00411f69fbc9e2c5f648d54c8877254"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjowNjo1NlrOGZ_BMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjowNjo1NlrOGZ_BMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMDA4MQ==", "bodyText": "Are these needed? I dont think we have them anywhere else in api?", "url": "https://github.com/FabricMC/fabric/pull/584#discussion_r429900081", "createdAt": "2020-05-25T12:06:56Z", "author": {"login": "modmuss50"}, "path": "fabric-screen-handler-api-v1/src/main/java/net/fabricmc/fabric/api/client/screenhandler/v1/package-info.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * API for working with screen handlers on the client.\n+ */\n+package net.fabricmc.fabric.api.client.screenhandler.v1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ceae812d00411f69fbc9e2c5f648d54c8877254"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjYxMDc5", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-421261079", "createdAt": "2020-05-29T20:17:40Z", "commit": {"oid": "9ceae812d00411f69fbc9e2c5f648d54c8877254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85e08bc6c73c620203dd6e9aafd3229f309c5a9", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/b85e08bc6c73c620203dd6e9aafd3229f309c5a9", "committedDate": "2020-06-05T11:48:51Z", "message": "Merge remote-tracking branch 'upstream/1.16' into patch-8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e30b6aa603722f852f80b9f80b542eae66212e4", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/6e30b6aa603722f852f80b9f80b542eae66212e4", "committedDate": "2020-06-05T11:58:25Z", "message": "Update test mod to 1.16-pre2\n\nJust a simple mapping update. :)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "592fffc52f55ac87b5fdc6c92938dd16c7940d5f", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/592fffc52f55ac87b5fdc6c92938dd16c7940d5f", "committedDate": "2020-06-05T12:01:32Z", "message": "Fix incorrect javadoc references to screen-handler-api in containers-v0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03e9b0ec56903ad8b7adafc54061c50d5fc9f71", "author": {"user": {"login": "Juuxel", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/f03e9b0ec56903ad8b7adafc54061c50d5fc9f71", "committedDate": "2020-06-05T12:11:11Z", "message": "Remove Minecraft exclusion from build.gradle (thanks to Loom 0.4) + testmod change\n\nResource loader v0 is now testmodRuntimeOnly as it's not needed for compiling."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTgzMTAz", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-430183103", "createdAt": "2020-06-14T02:41:08Z", "commit": {"oid": "f03e9b0ec56903ad8b7adafc54061c50d5fc9f71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTg5NzEx", "url": "https://github.com/FabricMC/fabric/pull/584#pullrequestreview-430989711", "createdAt": "2020-06-15T21:00:05Z", "commit": {"oid": "f03e9b0ec56903ad8b7adafc54061c50d5fc9f71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3423, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}