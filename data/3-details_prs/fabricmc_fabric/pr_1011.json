{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3OTg0MzA5", "number": 1011, "title": "Resource loader changes and built-in mod resource/data packs API", "bodyText": "This PR is a bit huge and a bit scary when seeing all the files that are gone but it's actually better I guess.\nSo this PR changes a lot of things, it basically removes all the resource pack list injections that happened before in favor of the ResourcePackProvider named ModResourcePackCreator. It's way more reliable and doesn't change any behaviors, also all mod resource packs are now set \"always active\" which also removes the need of the old mixin which forced mod datapacks to be enabled.\nThis also adds a new API for mods to add a built-in resource/data pack, it's useful to bundle \"extensions\" resource packs in mods which should not always be active and let the user decide.\nI'm not yet happy with how a built-in resource pack is registered as the ModContainer is a bit annoying to retrieve, so I'm open to suggestions for that.\nNote: I have not bumped the FAPI version as I do not know if I should and what to set.", "createdAt": "2020-08-14T13:28:06Z", "url": "https://github.com/FabricMC/fabric/pull/1011", "merged": true, "mergeCommit": {"oid": "8072a3a990d6b3ff2266e50c26274e20aebe8b99"}, "closed": true, "closedAt": "2020-09-03T18:49:41Z", "author": {"login": "LambdAurora"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-zC17gH2gAyNDY3OTg0MzA5OmRhYjEyNmQyYzc4ODlhNGFkMDYwODkwZWJjODExOTFlYWM2ODk4ZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEgqLjAFqTQ3OTQxMDc3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dab126d2c7889a4ad060890ebc81191eac6898d0", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/dab126d2c7889a4ad060890ebc81191eac6898d0", "committedDate": "2020-08-14T11:37:39Z", "message": "WIP built-in resource packs API."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efba9b2f2eecda3b1e9dd54399b151c36d315c75", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/efba9b2f2eecda3b1e9dd54399b151c36d315c75", "committedDate": "2020-08-14T13:19:03Z", "message": "Add built-in resource pack register API and fix old injection methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1799eac35c04945a8694d32dfadcd495f3945afd", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/1799eac35c04945a8694d32dfadcd495f3945afd", "committedDate": "2020-08-14T13:23:36Z", "message": "Fix code style."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/9da9815620c0a59ad9f387bd8d071c8f46cf96d1", "committedDate": "2020-08-14T13:41:40Z", "message": "Fix code style."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NjcwMzgw", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-467670380", "createdAt": "2020-08-14T15:28:16Z", "commit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODc5NTMx", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-467879531", "createdAt": "2020-08-14T21:16:14Z", "commit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3ODgzNDk2", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-467883496", "createdAt": "2020-08-14T21:25:33Z", "commit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTMwODY3", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-467930867", "createdAt": "2020-08-15T00:30:34Z", "commit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDozMDozNVrOHBGVmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDozMDozNVrOHBGVmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxNDQ1OA==", "bodyText": "I have no idea why I would use this method. Please add some documentation explaining what this does with extra detail and when/why you would use it.", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r470914458", "createdAt": "2020-08-15T00:30:35Z", "author": {"login": "i509VCB"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,16 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.\n+\t *\n+\t * @param id The identifier of the resource pack.\n+\t * @param subPath The sub path in the mod resources.\n+\t * @param container The mod container.\n+\t * @return True if successfully registered the resource pack, else false.\n+\t */\n+\tstatic boolean registerBuiltinResourcePack(Identifier id, String subPath, ModContainer container) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da9815620c0a59ad9f387bd8d071c8f46cf96d1"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "485b3996c053cb236c2e0cae98c41f9ffe935280", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/485b3996c053cb236c2e0cae98c41f9ffe935280", "committedDate": "2020-08-15T08:27:03Z", "message": "Add documentation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTg1ODQ0", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-467985844", "createdAt": "2020-08-15T13:32:02Z", "commit": {"oid": "485b3996c053cb236c2e0cae98c41f9ffe935280"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMzozMjowMlrOHBKahw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMzozMjowMlrOHBKahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk4MTI1NQ==", "bodyText": "Drop the else half of the block and just return ModResourcePackUtil call", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r470981255", "createdAt": "2020-08-15T13:32:02Z", "author": {"login": "i509VCB"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModNioResourcePack.java", "diffHunk": "@@ -227,6 +229,10 @@ public ModMetadata getFabricModMetadata() {\n \n \t@Override\n \tpublic String getName() {\n-\t\treturn ModResourcePackUtil.getName(modInfo);\n+\t\tif (this.name != null) {\n+\t\t\treturn this.name; // Builtin resource pack provided by a mod, the name is overriden.\n+\t\t} else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "485b3996c053cb236c2e0cae98c41f9ffe935280"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617f9b40448cece5903bda8ea404d8ac5e92342f", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/617f9b40448cece5903bda8ea404d8ac5e92342f", "committedDate": "2020-08-15T13:42:07Z", "message": "Drop useless else."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDA5OTky", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-468009992", "createdAt": "2020-08-15T18:24:42Z", "commit": {"oid": "617f9b40448cece5903bda8ea404d8ac5e92342f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxODoyNDo0M1rOHBM2qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxODoyNDo0M1rOHBM2qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyMTIyNQ==", "bodyText": "Is this boolean argument alwaysEnabled or pinned? I recall pack profiles have two boolean params and i forgot which one this is", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r471021225", "createdAt": "2020-08-15T18:24:43Z", "author": {"login": "liach"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ModResourcePackCreator.java", "diffHunk": "@@ -49,12 +51,14 @@ public void register(Consumer<ResourcePackProfile> consumer, ResourcePackProfile\n \t\t\t}\n \n \t\t\tResourcePackProfile resourcePackProfile = ResourcePackProfile.of(\"fabric/\" + ((ModResourcePack) pack).getFabricModMetadata().getId(),\n-\t\t\t\t\tfalse, () -> pack, factory, ResourcePackProfile.InsertionPosition.TOP,\n+\t\t\t\t\ttrue, () -> pack, factory, ResourcePackProfile.InsertionPosition.TOP,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617f9b40448cece5903bda8ea404d8ac5e92342f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDEwOTgx", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-468010981", "createdAt": "2020-08-15T18:43:06Z", "commit": {"oid": "617f9b40448cece5903bda8ea404d8ac5e92342f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxODo0MzowNlrOHBM8fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxODo0MzowNlrOHBM8fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyMjcxOQ==", "bodyText": "Hmm, I wonder how this would hurt as you cannot order scanned mod packs", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r471022719", "createdAt": "2020-08-15T18:43:06Z", "author": {"login": "liach"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/mixin/resource/loader/MixinPackScreen.java", "diffHunk": "@@ -28,7 +28,7 @@\n import net.fabricmc.fabric.impl.resource.loader.ModResourcePackCreator;\n \n @Mixin(PackScreen.class)\n-public class MixinAbstractPackScreen {\n+public class MixinPackScreen {\n \t@Inject(method = \"method_29672\", at = @At(\"HEAD\"), cancellable = true)\n \tprivate void addPackEntry(PackListWidget packListWidget, ResourcePackOrganizer.Pack pack, CallbackInfo info) {\n \t\tif (pack.getSource() == ModResourcePackCreator.RESOURCE_PACK_SOURCE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617f9b40448cece5903bda8ea404d8ac5e92342f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fa867876acb0d74886a82c25dfaa51efd227688", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/7fa867876acb0d74886a82c25dfaa51efd227688", "committedDate": "2020-08-15T23:51:38Z", "message": "Fix resource packs and data packs isolation issues, and more."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDMxOTU0", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-468031954", "createdAt": "2020-08-16T04:09:55Z", "commit": {"oid": "7fa867876acb0d74886a82c25dfaa51efd227688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwNDowOTo1NVrOHBPXvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwNDowOTo1NVrOHBPXvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA2MjQ2Mw==", "bodyText": "You can use an actual accessor mixin here, no need to implement a duck manually.", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r471062463", "createdAt": "2020-08-16T04:09:55Z", "author": {"login": "i509VCB"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/impl/resource/loader/ResourcePackManagerAccessor.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.resource.loader;\n+\n+import java.util.Set;\n+\n+import net.minecraft.resource.ResourcePackProvider;\n+\n+/**\n+ * Represents an accessor to {@code ResourcePackManager}.\n+ */\n+public interface ResourcePackManagerAccessor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa867876acb0d74886a82c25dfaa51efd227688"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d028499d058188a9e3be8c6cde851197aed989", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/f7d028499d058188a9e3be8c6cde851197aed989", "committedDate": "2020-08-16T07:19:23Z", "message": "Move ResourcePackManagerAccessor to its own accessor mixin."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDQ0NDI3", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-468044427", "createdAt": "2020-08-16T08:21:42Z", "commit": {"oid": "f7d028499d058188a9e3be8c6cde851197aed989"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc378ba57468b831e28f191dc35d2b77f0bc48d1", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/bc378ba57468b831e28f191dc35d2b77f0bc48d1", "committedDate": "2020-08-16T20:52:33Z", "message": "Make the built-in mod pack test mod work on server too because data pack part."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzYwMTQ2", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-471760146", "createdAt": "2020-08-20T15:56:50Z", "commit": {"oid": "bc378ba57468b831e28f191dc35d2b77f0bc48d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMTgwMzQ5", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-472180349", "createdAt": "2020-08-21T06:15:24Z", "commit": {"oid": "bc378ba57468b831e28f191dc35d2b77f0bc48d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjQxMzA5", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-472641309", "createdAt": "2020-08-21T16:48:35Z", "commit": {"oid": "bc378ba57468b831e28f191dc35d2b77f0bc48d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a026473a4d71b230e67fe8813e9e5574ce6a03f6", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/a026473a4d71b230e67fe8813e9e5574ce6a03f6", "committedDate": "2020-08-21T19:06:48Z", "message": "Add new argument to built-in pack method and make mod data packs always active."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzQ4NTAw", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-475748500", "createdAt": "2020-08-26T18:26:57Z", "commit": {"oid": "a026473a4d71b230e67fe8813e9e5574ce6a03f6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyNjo1N1rOHHYY_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoyNjo1N1rOHHYY_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwMTY5Mg==", "bodyText": "This should document that packs added with this overload aren't enabled by default.", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r477501692", "createdAt": "2020-08-26T18:26:57Z", "author": {"login": "Juuxel"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,47 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a026473a4d71b230e67fe8813e9e5574ce6a03f6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b3d4867df39965cf2aa50212c91a86c11cb4db", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/f7b3d4867df39965cf2aa50212c91a86c11cb4db", "committedDate": "2020-08-26T20:03:52Z", "message": "Add documentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af95ac19694367124a635997ccc25ef9be9a75ca", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/af95ac19694367124a635997ccc25ef9be9a75ca", "committedDate": "2020-08-26T20:18:44Z", "message": "Complete documentation in GameOptions mixin."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd", "author": {"user": {"login": "LambdAurora", "name": "LambdAurora"}}, "url": "https://github.com/FabricMC/fabric/commit/5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd", "committedDate": "2020-08-26T21:20:35Z", "message": "Remove register built-in pack overload as Player requested."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODcxNjg5", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-475871689", "createdAt": "2020-08-26T21:27:19Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NDI4ODI1", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-477428825", "createdAt": "2020-08-28T07:47:45Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjE1MzQw", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-478215340", "createdAt": "2020-08-30T16:06:30Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDIyMDc4", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-478422078", "createdAt": "2020-08-31T08:34:37Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NTI0Nzc0", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-478524774", "createdAt": "2020-08-31T11:12:29Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MzczNDA5", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-479373409", "createdAt": "2020-09-01T03:20:54Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDEwNzc4", "url": "https://github.com/FabricMC/fabric/pull/1011#pullrequestreview-479410778", "createdAt": "2020-09-01T05:30:57Z", "commit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNTozMDo1N1rOHKjvjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNTozNTo1MFrOHKj7eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDgzMzQyMg==", "bodyText": "If this is impossible to achieve, then why is a parameter for it available? What does it actually do?", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r480833422", "createdAt": "2020-09-01T05:30:57Z", "author": {"login": "Sturmlilie"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,27 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.\n+\t *\n+\t * <p>A built-in resource pack is an extra resource pack provided by your mod which is not always active, it's similar to the \"Programmer Art\" resource pack.\n+\t *\n+\t * <p>Why and when to use it? A built-in resource pack should be used to provide extra assets/data that should be optional with your mod but still directly provided by it.\n+\t * For example it could provide textures of your mod in another resolution, or could allow to provide different styles of your assets.\n+\t *\n+\t * <p>The {@code subPath} corresponds to a path in the JAR file which points to the resource pack folder. For example the subPath can be {@code \"resourcepacks/extra\"}.\n+\t *\n+\t * <p>Note about the enabled by default parameter: a resource pack cannot be enabled by default, only data packs can.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDgzNDM4NA==", "bodyText": "How does \"path in the JAR\" relate to the file view I as a developer have over my project structure? Is this relative to src/ ? src/main/resources/? src/main/resources/assets/?\nA minimal usage example would be hugely beneficial here.", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r480834384", "createdAt": "2020-09-01T05:32:30Z", "author": {"login": "Sturmlilie"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,27 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.\n+\t *\n+\t * <p>A built-in resource pack is an extra resource pack provided by your mod which is not always active, it's similar to the \"Programmer Art\" resource pack.\n+\t *\n+\t * <p>Why and when to use it? A built-in resource pack should be used to provide extra assets/data that should be optional with your mod but still directly provided by it.\n+\t * For example it could provide textures of your mod in another resolution, or could allow to provide different styles of your assets.\n+\t *\n+\t * <p>The {@code subPath} corresponds to a path in the JAR file which points to the resource pack folder. For example the subPath can be {@code \"resourcepacks/extra\"}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDgzNTg1Nw==", "bodyText": "How should this id be namespaced? If I'm just dropping in a zip into my folder, I don't have to specify an id, just the filename identifies it as far as I'm aware. How would I translate that filename to a valid id?", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r480835857", "createdAt": "2020-09-01T05:34:56Z", "author": {"login": "Sturmlilie"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,27 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.\n+\t *\n+\t * <p>A built-in resource pack is an extra resource pack provided by your mod which is not always active, it's similar to the \"Programmer Art\" resource pack.\n+\t *\n+\t * <p>Why and when to use it? A built-in resource pack should be used to provide extra assets/data that should be optional with your mod but still directly provided by it.\n+\t * For example it could provide textures of your mod in another resolution, or could allow to provide different styles of your assets.\n+\t *\n+\t * <p>The {@code subPath} corresponds to a path in the JAR file which points to the resource pack folder. For example the subPath can be {@code \"resourcepacks/extra\"}.\n+\t *\n+\t * <p>Note about the enabled by default parameter: a resource pack cannot be enabled by default, only data packs can.\n+\t * Making this work for resource packs is near impossible without touching how Vanilla handles disabled resource packs.\n+\t *\n+\t * @param id The identifier of the resource pack.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDgzNjQ3Mw==", "bodyText": "A small note on how I'd query this would be nice (see \"minimal usage example\").", "url": "https://github.com/FabricMC/fabric/pull/1011#discussion_r480836473", "createdAt": "2020-09-01T05:35:50Z", "author": {"login": "Sturmlilie"}, "path": "fabric-resource-loader-v0/src/main/java/net/fabricmc/fabric/api/resource/ResourceManagerHelper.java", "diffHunk": "@@ -52,4 +54,27 @@ default void addReloadListener(IdentifiableResourceReloadListener listener) {\n \tstatic ResourceManagerHelper get(ResourceType type) {\n \t\treturn ResourceManagerHelperImpl.get(type);\n \t}\n+\n+\t/**\n+\t * Registers a built-in resource pack.\n+\t *\n+\t * <p>A built-in resource pack is an extra resource pack provided by your mod which is not always active, it's similar to the \"Programmer Art\" resource pack.\n+\t *\n+\t * <p>Why and when to use it? A built-in resource pack should be used to provide extra assets/data that should be optional with your mod but still directly provided by it.\n+\t * For example it could provide textures of your mod in another resolution, or could allow to provide different styles of your assets.\n+\t *\n+\t * <p>The {@code subPath} corresponds to a path in the JAR file which points to the resource pack folder. For example the subPath can be {@code \"resourcepacks/extra\"}.\n+\t *\n+\t * <p>Note about the enabled by default parameter: a resource pack cannot be enabled by default, only data packs can.\n+\t * Making this work for resource packs is near impossible without touching how Vanilla handles disabled resource packs.\n+\t *\n+\t * @param id The identifier of the resource pack.\n+\t * @param subPath The sub path in the mod resources.\n+\t * @param container The mod container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ae3cb42c4cc4ee37d04fd0d1c0772d2c68d09dd"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3238, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}