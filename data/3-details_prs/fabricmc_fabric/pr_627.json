{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDMyMDg5", "number": 627, "title": "Rework Dimensions for 1.16", "bodyText": "Its possible for mods to add dimensions without any code, and without any input from fabric using vanilla's new datapack system. This PR currenly re-adds the custom entity teleportation stuff that was present in the old API, in an almost exact manner.\nThe example mod does add a dimension using vanilla's new system, however it marks the world as experimental. I tried to remove mod added dims from this check, but got lost in DFU. My idea was an api such as FabricDimensions.registerStableDimension.\n\nI think the best course of action is to move this PR into a custom module for the custom portal placement logic as this can be used on its own, or with vanilla datapack added dimensions.", "createdAt": "2020-05-20T21:35:33Z", "url": "https://github.com/FabricMC/fabric/pull/627", "merged": true, "mergeCommit": {"oid": "a71b3053ad177227a2e88f1589d03a086c336620"}, "closed": true, "closedAt": "2020-06-11T10:38:39Z", "author": {"login": "modmuss50"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjP-WxgH2gAyNDIxMDMyMDg5OmZkYmE1MjkxZWI3M2Y0OWZhM2FiOTI5MDFjODExY2I1ZDk2OGRmNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqDUZrAFqTQyODUxOTE0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fdba5291eb73f49fa3ab92901c811cb5d968df52", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/fdba5291eb73f49fa3ab92901c811cb5d968df52", "committedDate": "2020-05-20T21:30:07Z", "message": "dim api initial port"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NTY3NTYx", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-419567561", "createdAt": "2020-05-27T20:03:53Z", "commit": {"oid": "fdba5291eb73f49fa3ab92901c811cb5d968df52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcea9a42f765fb7523183416f10954f8bc86d15a", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/bcea9a42f765fb7523183416f10954f8bc86d15a", "committedDate": "2020-05-27T21:37:53Z", "message": "A whole bunch of work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/e34a2307ad80af4be71d4cd2edd44dc5e6987d60", "committedDate": "2020-05-27T21:46:31Z", "message": "Checkstyle :)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjM1NzMz", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-419635733", "createdAt": "2020-05-27T21:52:32Z", "commit": {"oid": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTo1MjozMlrOGbeegg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTo1NTo0MFrOGbej9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2NDA2Ng==", "bodyText": "Don't catch the command syntax exception. Let brigadier handle it (you can make the method throw it and be fine).\nReason being the command manager will return a richer message when you attempt to get the ServerPlayerEntity if you are running as a server and fail for you.", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r431464066", "createdAt": "2020-05-27T21:52:32Z", "author": {"login": "i509VCB"}, "path": "fabric-dimensions-v1/src/testmod/java/net/fabricmc/fabric/test/dimension/FabricDimensionTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package net.fabricmc.fabric.test.dimension;\n+\n+import static net.minecraft.server.command.CommandManager.literal;\n+\n+import com.mojang.brigadier.context.CommandContext;\n+import com.mojang.brigadier.exceptions.CommandSyntaxException;\n+\n+import net.minecraft.block.pattern.BlockPattern;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.server.command.ServerCommandSource;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.world.ServerWorld;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.dimension.DimensionType;\n+import net.minecraft.world.gen.chunk.ChunkGeneratorType;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.Vec3d;\n+import net.minecraft.world.biome.source.VanillaLayeredBiomeSource;\n+import net.minecraft.world.gen.chunk.SurfaceChunkGenerator;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.command.v1.CommandRegistrationCallback;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensionType;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensions;\n+\n+public class FabricDimensionTest implements ModInitializer {\n+\tprivate static RegistryKey<DimensionType> dimensionRegistryKey;\n+\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tdimensionRegistryKey = RegistryKey.of(Registry.DIMENSION_TYPE_KEY, new Identifier(\"fabric_dimension\", \"test\"));\n+\n+\t\tFabricDimensionType.builder()\n+\t\t\t\t.chunkGenerator(seed -> new SurfaceChunkGenerator(new VanillaLayeredBiomeSource(seed, false, false), seed, ChunkGeneratorType.Preset.OVERWORLD.getChunkGeneratorType()))\n+\t\t\t\t.defaultPlacer(FabricDimensionTest::placeEntity)\n+\t\t\t\t.buildAndRegister(dimensionRegistryKey);\n+\n+\t\tCommandRegistrationCallback.EVENT.register((dispatcher, dedicated) ->\n+\t\t\t\tdispatcher.register(literal(\"fabric_dimension_test\").executes(FabricDimensionTest.this::executeTestCommand))\n+\t\t);\n+\t}\n+\n+\tprivate int executeTestCommand(CommandContext<ServerCommandSource> context) {\n+\t\ttry {\n+\t\t\tServerPlayerEntity serverPlayerEntity = context.getSource().getPlayer();\n+\t\t\tServerWorld serverWorld = serverPlayerEntity.getServerWorld();\n+\n+\t\t\tif (!serverWorld.method_27983().equals(dimensionRegistryKey)) {\n+\t\t\t\tFabricDimensions.teleport(serverPlayerEntity, dimensionRegistryKey, FabricDimensionTest::placeEntity);\n+\t\t\t} else {\n+\t\t\t\tFabricDimensions.teleport(serverPlayerEntity, DimensionType.OVERWORLD_REGISTRY_KEY, FabricDimensionTest::placeEntity);\n+\t\t\t}\n+\t\t} catch (CommandSyntaxException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2NTQ2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static final LinkedHashMap<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();\n          \n          \n            \n            \tpublic static final Map<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r431465462", "createdAt": "2020-05-27T21:55:40Z", "author": {"login": "i509VCB"}, "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/impl/dimension/FabricDimensionInternals.java", "diffHunk": "@@ -39,12 +46,14 @@ private FabricDimensionInternals() {\n \tpublic static final boolean DEBUG = System.getProperty(\"fabric.dimension.debug\", \"false\").equalsIgnoreCase(\"true\");\n \tpublic static final Logger LOGGER = LogManager.getLogger();\n \n+\tpublic static final LinkedHashMap<RegistryKey<DimensionType>, Pair<DimensionType, ChunkGeneratorFactory>> FABRIC_DIM_MAP = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34a2307ad80af4be71d4cd2edd44dc5e6987d60"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "099660b9299627d490adcb3e01df2f0ae9982809", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/099660b9299627d490adcb3e01df2f0ae9982809", "committedDate": "2020-05-27T22:17:25Z", "message": "Minor tweaks based on feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55296ce781a6f71260b64cf91436f21a867ab528", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/55296ce781a6f71260b64cf91436f21a867ab528", "committedDate": "2020-05-29T19:49:17Z", "message": "Merge branch '1.16' into dim-v2\n\n# Conflicts:\n#\tbuild.gradle\n#\tfabric-command-api-v1/src/main/java/net/fabricmc/fabric/mixin/command/MixinMinecraftDedicatedServer.java\n#\tfabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinIdRegistry.java\n#\tfabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/MixinLevelStorageSession.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d693c20fbc11063b5a7f9f026e925a3fc3d86fa", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/1d693c20fbc11063b5a7f9f026e925a3fc3d86fa", "committedDate": "2020-05-29T20:01:32Z", "message": "Update to latest snapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72912027dd8b7852fe9718ca59be7d686a401a96", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/72912027dd8b7852fe9718ca59be7d686a401a96", "committedDate": "2020-05-29T20:08:22Z", "message": "Checkstyle ;)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3caeeb01df07c67cb53d6bf51aae1635f44fa649", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/3caeeb01df07c67cb53d6bf51aae1635f44fa649", "committedDate": "2020-06-03T20:57:47Z", "message": "Merge remote-tracking branch 'remotes/origin/1.16' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0129ea38bbd1b778961b7a89580fa503285b6af7", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/0129ea38bbd1b778961b7a89580fa503285b6af7", "committedDate": "2020-06-04T20:38:09Z", "message": "Merge branch '1.16' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4027c24c9c6c31b847946c136e8f6a24724634e", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/f4027c24c9c6c31b847946c136e8f6a24724634e", "committedDate": "2020-06-04T22:20:57Z", "message": "Merge remote-tracking branch 'remotes/fabric/1.16' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26d2d8536fa4dd1c0ac3e311fc08442c7f98c155", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/26d2d8536fa4dd1c0ac3e311fc08442c7f98c155", "committedDate": "2020-06-05T10:38:44Z", "message": "Merge remote-tracking branch 'modmuss50/dim-v2' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c774c81b18e7571e04a6dbe588ca63cd0ea033f9", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/c774c81b18e7571e04a6dbe588ca63cd0ea033f9", "committedDate": "2020-06-05T12:31:27Z", "message": "Merge branch '1.16' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cd292d6cfc30bf5ab958f11d48d2021e4db706c", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/7cd292d6cfc30bf5ab958f11d48d2021e4db706c", "committedDate": "2020-06-05T13:33:27Z", "message": "Some more dim work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630c4a0e1e790ec62dbe790024222dfd5c0e1e89", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/630c4a0e1e790ec62dbe790024222dfd5c0e1e89", "committedDate": "2020-06-10T18:50:54Z", "message": "Merge branch '1.16' into dim-v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa3d05c0be67123af7060866135a725e5b5d2cc9", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/fa3d05c0be67123af7060866135a725e5b5d2cc9", "committedDate": "2020-06-10T19:53:28Z", "message": "Re add default placer's, the example mod includes a test dim that currently marks the world as experimental"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/4e72501ba5ed5cac2f5354a4e46d8282c7c36837", "committedDate": "2020-06-10T20:04:47Z", "message": "license"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDMwODE4", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-428430818", "createdAt": "2020-06-10T21:10:39Z", "commit": {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxMDo0MFrOGiGcyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMToxMjo1MlrOGiGgog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDQ0Mw==", "bodyText": "can be inlined to context.getSource().getServer()", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438410443", "createdAt": "2020-06-10T21:10:40Z", "author": {"login": "i509VCB"}, "path": "fabric-dimensions-v1/src/testmod/java/net/fabricmc/fabric/test/dimension/FabricDimensionTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.test.dimension;\n+\n+import static net.minecraft.server.command.CommandManager.literal;\n+\n+import com.mojang.brigadier.context.CommandContext;\n+import com.mojang.brigadier.exceptions.CommandSyntaxException;\n+\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.pattern.BlockPattern;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.server.command.ServerCommandSource;\n+import net.minecraft.server.network.ServerPlayerEntity;\n+import net.minecraft.server.world.ServerWorld;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.world.World;\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.Vec3d;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.command.v1.CommandRegistrationCallback;\n+import net.fabricmc.fabric.api.dimension.v1.FabricDimensions;\n+\n+public class FabricDimensionTest implements ModInitializer {\n+\tprivate static RegistryKey<World> dimensionRegistryKey;\n+\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tRegistry.register(Registry.CHUNK_GENERATOR, new Identifier(\"fabric_dimension\", \"void\"), VoidChunkGenerator.CODEC);\n+\n+\t\tdimensionRegistryKey = RegistryKey.of(Registry.DIMENSION, new Identifier(\"fabric_dimension\", \"void\"));\n+\n+\t\tFabricDimensions.registerDefaultPlacer(dimensionRegistryKey, FabricDimensionTest::placeEntityInVoid);\n+\n+\t\tCommandRegistrationCallback.EVENT.register((dispatcher, dedicated) ->\n+\t\t\t\tdispatcher.register(literal(\"fabric_dimension_test\").executes(FabricDimensionTest.this::executeTestCommand))\n+\t\t);\n+\t}\n+\n+\tprivate int executeTestCommand(CommandContext<ServerCommandSource> context) throws CommandSyntaxException {\n+\t\tServerPlayerEntity serverPlayerEntity = context.getSource().getPlayer();\n+\t\tServerWorld serverWorld = serverPlayerEntity.getServerWorld();\n+\n+\t\tif (!serverWorld.getRegistryKey().equals(dimensionRegistryKey)) {\n+\t\t\tserverPlayerEntity.changeDimension(serverWorld.getServer().getWorld(dimensionRegistryKey));\n+\t\t} else {\n+\t\t\tFabricDimensions.teleport(serverPlayerEntity, serverWorld.getServer().getWorld(World.OVERWORLD), FabricDimensionTest::placeEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDk4Nw==", "bodyText": "I think we should move this up to be in alphabetical order like how all the other modules appear", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438410987", "createdAt": "2020-06-10T21:11:53Z", "author": {"login": "i509VCB"}, "path": "settings.gradle", "diffHunk": "@@ -44,5 +44,5 @@ include 'fabric-rendering-fluids-v1'\n include 'fabric-resource-loader-v0'\n include 'fabric-tag-extensions-v0'\n include 'fabric-textures-v0'\n-//include 'fabric-dimensions-v1'\n+include 'fabric-dimensions-v1'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTQyNg==", "bodyText": "I don't think these files should be in the minecraft namespace?\nShouldn't this be located at src/testmod/resources/data/testrmod/dimension/fabric_dimension/void.json", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438411426", "createdAt": "2020-06-10T21:12:52Z", "author": {"login": "i509VCB"}, "path": "fabric-dimensions-v1/src/testmod/resources/data/minecraft/dimension/fabric_dimension/void.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e72501ba5ed5cac2f5354a4e46d8282c7c36837"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450", "author": {"user": {"login": "modmuss50", "name": "modmuss50"}}, "url": "https://github.com/FabricMC/fabric/commit/78e1d5b73870f63e978d7fc835de103e7f607450", "committedDate": "2020-06-11T00:22:57Z", "message": "Fixup javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTE0NDI1", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-428514425", "createdAt": "2020-06-11T00:26:55Z", "commit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTE4MjI1", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-428518225", "createdAt": "2020-06-11T00:39:48Z", "commit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozOTo0OFrOGiKwuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDozOTo0OFrOGiKwuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTA4MQ==", "bodyText": "how about something like DimensionTeleportHandler or just TeleportHandler? EntityPlacer is very vague and it leads to vague class names in user code", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438481081", "createdAt": "2020-06-11T00:39:48Z", "author": {"login": "Reoseah"}, "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/api/dimension/v1/EntityPlacer.java", "diffHunk": "@@ -23,16 +23,18 @@\n \n /**\n  * Responsible for placing an Entity once they have entered a dimension.\n- * Stored by a FabricDimensionType, and used in Entity::changeDimension.\n+ * used in Entity::changeDimension.\n+ *\n+ * @deprecated Experimental feature, may be removed or changed without further notice due to potential changes to Dimensions in subsequent versions.\n  *\n  * @see FabricDimensions\n- * @see FabricDimensionType\n  */\n+@Deprecated\n @FunctionalInterface\n public interface EntityPlacer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTE5MTQ5", "url": "https://github.com/FabricMC/fabric/pull/627#pullrequestreview-428519149", "createdAt": "2020-06-11T00:42:53Z", "commit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDo0Mjo1M1rOGiKzyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDo0Mjo1M1rOGiKzyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTg2NQ==", "bodyText": "Example for fabric entity placer? also, does this need to go in a minecraft/ subfolder like the dimension JSON?", "url": "https://github.com/FabricMC/fabric/pull/627#discussion_r438481865", "createdAt": "2020-06-11T00:42:53Z", "author": {"login": "LemmaEOF"}, "path": "fabric-dimensions-v1/src/testmod/resources/data/minecraft/dimension_type/fabric_dimension/void_type.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e1d5b73870f63e978d7fc835de103e7f607450"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3445, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}