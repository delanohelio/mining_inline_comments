{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjQzMzcw", "number": 1035, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzoxNzoyNFrOEavMdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzoxNzoyNFrOEavMdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDcxNjY5OnYy", "diffSide": "RIGHT", "path": "fabric-renderer-registries-v1/src/main/java/net/fabricmc/fabric/api/client/rendereregistry/v1/BlockEntityRendererRegistry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzoxNzoyNFrOHEWV8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzozNjoyOVrOHEWr8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyMjQxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}. This will be called\n          \n          \n            \n            \t *                            when {@link BlockEntityRenderDispatcher} is initialized, or immediately if the class\n          \n          \n            \n            \t *                            was already loaded.\n          \n          \n            \n            \t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}, called\n          \n          \n            \n            \t *                            when {@link BlockEntityRenderDispatcher} is initialized or immediately if the dispatcher\n          \n          \n            \n            \t *                            class is already loaded", "url": "https://github.com/FabricMC/fabric/pull/1035#discussion_r474322418", "createdAt": "2020-08-20T23:17:24Z", "author": {"login": "liach"}, "path": "fabric-renderer-registries-v1/src/main/java/net/fabricmc/fabric/api/client/rendereregistry/v1/BlockEntityRendererRegistry.java", "diffHunk": "@@ -32,10 +32,12 @@\n \tBlockEntityRendererRegistry INSTANCE = new BlockEntityRendererRegistryImpl();\n \n \t/**\n-\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered\n+\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered.\n \t *\n \t * @param blockEntityType the {@link BlockEntityType} to register a renderer for\n-\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}\n+\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}. This will be called\n+\t *                            when {@link BlockEntityRenderDispatcher} is initialized, or immediately if the class\n+\t *                            was already loaded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fdc936bb1f5026bd285f8bc2cabf89e054e742b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyNDQ4Mg==", "bodyText": "I'd rather use the specific term \"loaded\" here since this is actually about class-loading the BlockEntityRenderDispatcher in any way.", "url": "https://github.com/FabricMC/fabric/pull/1035#discussion_r474324482", "createdAt": "2020-08-20T23:24:26Z", "author": {"login": "shartte"}, "path": "fabric-renderer-registries-v1/src/main/java/net/fabricmc/fabric/api/client/rendereregistry/v1/BlockEntityRendererRegistry.java", "diffHunk": "@@ -32,10 +32,12 @@\n \tBlockEntityRendererRegistry INSTANCE = new BlockEntityRendererRegistryImpl();\n \n \t/**\n-\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered\n+\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered.\n \t *\n \t * @param blockEntityType the {@link BlockEntityType} to register a renderer for\n-\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}\n+\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}. This will be called\n+\t *                            when {@link BlockEntityRenderDispatcher} is initialized, or immediately if the class\n+\t *                            was already loaded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyMjQxOA=="}, "originalCommit": {"oid": "6fdc936bb1f5026bd285f8bc2cabf89e054e742b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyODA0OA==", "bodyText": "Updated.", "url": "https://github.com/FabricMC/fabric/pull/1035#discussion_r474328048", "createdAt": "2020-08-20T23:36:29Z", "author": {"login": "liach"}, "path": "fabric-renderer-registries-v1/src/main/java/net/fabricmc/fabric/api/client/rendereregistry/v1/BlockEntityRendererRegistry.java", "diffHunk": "@@ -32,10 +32,12 @@\n \tBlockEntityRendererRegistry INSTANCE = new BlockEntityRendererRegistryImpl();\n \n \t/**\n-\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered\n+\t * Register a BlockEntityRenderer for a BlockEntityType. Can be called clientside before the world is rendered.\n \t *\n \t * @param blockEntityType the {@link BlockEntityType} to register a renderer for\n-\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}\n+\t * @param blockEntityRenderer a function that returns a {@link BlockEntityRenderer}. This will be called\n+\t *                            when {@link BlockEntityRenderDispatcher} is initialized, or immediately if the class\n+\t *                            was already loaded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyMjQxOA=="}, "originalCommit": {"oid": "6fdc936bb1f5026bd285f8bc2cabf89e054e742b"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3444, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}