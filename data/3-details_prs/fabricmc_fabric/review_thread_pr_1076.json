{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjgxNDI1", "number": 1076, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozMDoyNlrOElQQJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1ODoxMVrOEl5_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NDk5MDQ1OnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozMDoyNlrOHUpnRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQyMDoyMToxNlrOHUvZ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTM2NQ==", "bodyText": "IMO plain create implies creating an instance of the surrounding type (VillagerTypeHelper instance)\nElsewhere we used register, but idk if this case has any side effects / does something similar to registration.", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491415365", "createdAt": "2020-09-19T12:30:26Z", "author": {"login": "sfPlayer1"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:\n+ * <blockquote><pre>\n+ * VillagerTypeHelper.mapBiomeToVillagerType(BiomeKeys.MOUNTAIN, MyVillagerTypes.MOUNTAIN);\n+ * </pre></blockquote>\n+ */\n+public final class VillagerTypeHelper {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Creates a new villager type.\n+\t *\n+\t * @param id the id of the villager type\n+\t * @return a new villager type\n+\t */\n+\tpublic static VillagerType create(Identifier id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "153a5363431cebfef9029f73630d8fa3a64b392a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTUxMDI2Mg==", "bodyText": "I decided to rename this to register and also make it register the villager type.", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491510262", "createdAt": "2020-09-19T20:21:16Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:\n+ * <blockquote><pre>\n+ * VillagerTypeHelper.mapBiomeToVillagerType(BiomeKeys.MOUNTAIN, MyVillagerTypes.MOUNTAIN);\n+ * </pre></blockquote>\n+ */\n+public final class VillagerTypeHelper {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Creates a new villager type.\n+\t *\n+\t * @param id the id of the villager type\n+\t * @return a new villager type\n+\t */\n+\tpublic static VillagerType create(Identifier id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTM2NQ=="}, "originalCommit": {"oid": "153a5363431cebfef9029f73630d8fa3a64b392a"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NDk5MjQxOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozMToxOFrOHUpojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozMToxOFrOHUpojQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNTY5Mw==", "bodyText": "The examples should use the standard combination of @code and <pre>", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491415693", "createdAt": "2020-09-19T12:31:18Z", "author": {"login": "sfPlayer1"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "153a5363431cebfef9029f73630d8fa3a64b392a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NDk5OTUwOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozNDo1MlrOHUptMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQxMjozNDo1MlrOHUptMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQxNjg4MA==", "bodyText": "map is a weak term, it doesn't really explain what happens - could as well mean \"give me the villager type for the biome\" (ignoring the signature).\nThe impl suggests that it adds the villager type to a biome (\"add\" vs \"map\", \"to biome\" vs \"to villager\"). I'd thus call it addVillagerTypeToBiome.", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r491416880", "createdAt": "2020-09-19T12:34:52Z", "author": {"login": "sfPlayer1"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * // Note: You should register your villager types via the corresponding registry\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.create(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:\n+ * <blockquote><pre>\n+ * VillagerTypeHelper.mapBiomeToVillagerType(BiomeKeys.MOUNTAIN, MyVillagerTypes.MOUNTAIN);\n+ * </pre></blockquote>\n+ */\n+public final class VillagerTypeHelper {\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Creates a new villager type.\n+\t *\n+\t * @param id the id of the villager type\n+\t * @return a new villager type\n+\t */\n+\tpublic static VillagerType create(Identifier id) {\n+\t\tObjects.requireNonNull(id, \"Id of villager type cannot be null\");\n+\t\treturn VillagerTypeAccessor.callCreate(id.toString());\n+\t}\n+\n+\t/**\n+\t * Maps a biome to villager type.\n+\t * This mapping is used when a new villager entity is created.\n+\t *\n+\t * @param biomeKey the registry key of the biome\n+\t * @param villagerType the villager type\n+\t */\n+\tpublic static void mapBiomeToVillagerType(RegistryKey<Biome> biomeKey, VillagerType villagerType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "153a5363431cebfef9029f73630d8fa3a64b392a"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTgyNTc4OnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1NjozNVrOHVouWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1NjozNVrOHVouWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTM3MQ==", "bodyText": "Spelling error. \"wouldd\" -> \"would\"", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492449371", "createdAt": "2020-09-22T02:56:35Z", "author": {"login": "frqnny"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation and registration of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc675d099014b4191bfd53e6f1230d3b403e1b8e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTgyODAyOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1ODoxMVrOHVovoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzo0OToyOVrOHVpX-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTY5Ng==", "bodyText": "Maybe, I'd add a short sentence about how textures work, or maybe we can just leave it to yarn to do some javadocs on VillagerType class", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492449696", "createdAt": "2020-09-22T02:58:11Z", "author": {"login": "frqnny"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation and registration of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.register(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc675d099014b4191bfd53e6f1230d3b403e1b8e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2MDAyNQ==", "bodyText": "Ah yeah I should cover that, I did mention textures in villager profession pull request.", "url": "https://github.com/FabricMC/fabric/pull/1076#discussion_r492460025", "createdAt": "2020-09-22T03:49:29Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/villager/VillagerTypeHelper.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.object.builder.v1.villager;\n+\n+import java.util.Objects;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import net.minecraft.util.Identifier;\n+import net.minecraft.util.registry.RegistryKey;\n+import net.minecraft.village.VillagerProfession;\n+import net.minecraft.village.VillagerType;\n+import net.minecraft.world.biome.Biome;\n+\n+import net.fabricmc.fabric.mixin.object.builder.VillagerTypeAccessor;\n+\n+/**\n+ * Utilities related to the creation of {@link VillagerType}s.\n+ * Not to be confused with a {@link VillagerProfession}, a villager type defines the appearance of a villager.\n+ *\n+ * <p>Creation and registration of custom villager types may be done via the use of a simple helper method.\n+ * Below is an example of how one wouldd create a villager type:\n+ * <blockquote><pre>\n+ * public static final VillagerType MOUNTAIN = VillagerTypeHelper.register(new Identifier(\"mymod\", \"mountain\"));\n+ * </pre></blockquote>\n+ *\n+ * <p>Creation and registration of a villager type does not guarantee villagers of a specific type will be created in a world.\n+ * Typically the villager type is bound to a specific group of biomes.\n+ * Below is an example of allowing creation of mountain villagers in a mountain biome:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTY5Ng=="}, "originalCommit": {"oid": "bc675d099014b4191bfd53e6f1230d3b403e1b8e"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3466, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}