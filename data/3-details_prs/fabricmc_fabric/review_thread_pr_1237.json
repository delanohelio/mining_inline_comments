{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTg1MzA2", "number": 1237, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzowNjo1MlrOFIOyrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzowNjo1MlrOFIOyrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTc1Mjc2OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzowNjo1MlrOIKCS0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxOToyNjoyNlrOIKGp4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw==", "bodyText": "I believe we should mention the fact this includes the module inside the built jar also with that change.\nOtherwise yes this is fine", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547394257", "createdAt": "2020-12-22T17:06:52Z", "author": {"login": "i509VCB"}, "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1Njc1Nw==", "bodyText": "I initially thought that it should be so. But the original code didn't work for me at all, so I added \"include\" and it worked. Perhaps it was my mistake. Ok, I will describe your request a little later ;)", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547456757", "createdAt": "2020-12-22T19:13:17Z", "author": {"login": "maityyy"}, "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, "originalCommit": {"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1Nzg2Mg==", "bodyText": "Will my change work for Kotlin (add \"include\")? I haven't worked with Kotlin, so I don't know. It's just that these two codes should produce the same result.", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547457862", "createdAt": "2020-12-22T19:15:45Z", "author": {"login": "maityyy"}, "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, "originalCommit": {"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1OTYyNg==", "bodyText": "Not exactly. Kotlin's type checking would not exactly like that.\nIn kotlin modImplementation(\"blah\") and any other gradle configuration returns a Dependecy? which is nullable. This won't work if you chain the include like you do in groovy. You'd either need to make a custom configuration and add that configuration to both modImplementation and include or use the ?.let { include(it) } syntax after the last bracket on modImplementation(...)", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547459626", "createdAt": "2020-12-22T19:19:11Z", "author": {"login": "i509VCB"}, "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, "originalCommit": {"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ2NTY5OQ==", "bodyText": "Oh, I'll fix mistake I made in the new commit now.", "url": "https://github.com/FabricMC/fabric/pull/1237#discussion_r547465699", "createdAt": "2020-12-22T19:26:26Z", "author": {"login": "maityyy"}, "path": "README.md", "diffHunk": "@@ -54,7 +54,7 @@ Set<String> apiModules = [\n \n // Add each module as a dependency\n apiModules.forEach {\n-    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))\n+    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5NDI1Nw=="}, "originalCommit": {"oid": "5d7a6a7e9f3441ef81067017c5552eb48bb21ea4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3363, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}