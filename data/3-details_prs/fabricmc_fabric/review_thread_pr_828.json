{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MjY1NTQ5", "number": 828, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MTozMlrOEHOEbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo1OTo0OVrOEOKzOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDA1OTk5OnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricDefaultAttributeRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MTozM1rOGmffXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MTozM1rOGmffXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxNTAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>For your convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.\n          \n          \n            \n            \t * <p>For convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443015004", "createdAt": "2020-06-19T19:41:33Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricDefaultAttributeRegistry.java", "diffHunk": "@@ -55,8 +57,11 @@\n \t * <p>If a registration overrides another, a debug log message will be emitted. Existing registrations\n \t * can be checked at {@link net.minecraft.entity.attribute.DefaultAttributeRegistry#hasDefinitionFor(EntityType)}.</p>\n \t *\n+\t * <p>For your convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDA2MjAxOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MjoyMVrOGmfgmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0OTo1OVrOGmfrEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxNTMyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>This should not be called if your entity is not a {@link LivingEntity}.\n          \n          \n            \n            \t * <p>This should not be called if the entity type being built does not correspond to a {@link LivingEntity}.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443015321", "createdAt": "2020-06-19T19:42:21Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxODAwMg==", "bodyText": "does not correspond to does sound a bit odd to me but it's dictionary meaning here makes sense.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443018002", "createdAt": "2020-06-19T19:49:59Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxNTMyMQ=="}, "originalCommit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDEyNjkyOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDoxMzozMFrOGmgJUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDoxNjozN1rOGmgNgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNTc0NA==", "bodyText": "We really need some mechanism to properly handle registration of living vs non living entities.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443025744", "createdAt": "2020-06-19T20:13:30Z", "author": {"login": "liach"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.\n+\t *\n+\t * <p>This can be used in a fashion similar to this:\n+\t * <blockquote><pre>\n+\t * FabricEntityTypeBuilder.create(SpawnGroup.CREATURE, MyCreature::new)\n+\t * \t.defaultAttributes(LivingEntity::createLivingAttributes)\n+\t * \t...\n+\t * \t.build();\n+\t * </pre></blockquote>\n+\t *\n+\t * @param defaultAttributeBuilder a function to generate the default attribute builder from the entity type\n+\t * @return this builder for chaining\n+\t */\n+\tpublic FabricEntityTypeBuilder<T> defaultAttributes(Supplier<DefaultAttributeContainer.Builder> defaultAttributeBuilder) {\n+\t\tthis.defaultAttributeBuilder = defaultAttributeBuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e54dc80801a65e12cf0d27323d4818264f11aba9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNjgxNg==", "bodyText": "Currently I don't register if they don't call this method.\nThe only ways I see being able to test this is creating a dummy world, creating a dummy entity and doing an instanceof or a bunch of reflection", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443026816", "createdAt": "2020-06-19T20:16:37Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.\n+\t *\n+\t * <p>This can be used in a fashion similar to this:\n+\t * <blockquote><pre>\n+\t * FabricEntityTypeBuilder.create(SpawnGroup.CREATURE, MyCreature::new)\n+\t * \t.defaultAttributes(LivingEntity::createLivingAttributes)\n+\t * \t...\n+\t * \t.build();\n+\t * </pre></blockquote>\n+\t *\n+\t * @param defaultAttributeBuilder a function to generate the default attribute builder from the entity type\n+\t * @return this builder for chaining\n+\t */\n+\tpublic FabricEntityTypeBuilder<T> defaultAttributes(Supplier<DefaultAttributeContainer.Builder> defaultAttributeBuilder) {\n+\t\tthis.defaultAttributeBuilder = defaultAttributeBuilder;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNTc0NA=="}, "originalCommit": {"oid": "e54dc80801a65e12cf0d27323d4818264f11aba9"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzQxMDMzOnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzo0MDoyNVrOGsBEqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjowNDoyNlrOGsUKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgwODEwNw==", "bodyText": "Is this a reasonable default ? It would probably lead to a lot of modded entities being unable to be summoned without authors realizing it.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r448808107", "createdAt": "2020-07-02T07:40:25Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -63,7 +100,7 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t * @return a new entity type builder\n \t */\n \tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(SpawnGroup spawnGroup) {\n-\t\treturn new FabricEntityTypeBuilder<>(spawnGroup, (t, w) -> null);\n+\t\treturn create(spawnGroup, FabricEntityTypeBuilder::empty);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgyMDE1MA==", "bodyText": "That's also the current behaviour of the method, so changing it could break existing mods.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r448820150", "createdAt": "2020-07-02T08:01:47Z", "author": {"login": "Juuxel"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -63,7 +100,7 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t * @return a new entity type builder\n \t */\n \tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(SpawnGroup spawnGroup) {\n-\t\treturn new FabricEntityTypeBuilder<>(spawnGroup, (t, w) -> null);\n+\t\treturn create(spawnGroup, FabricEntityTypeBuilder::empty);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgwODEwNw=="}, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyMDgxNQ==", "bodyText": "I realize that, but maybe this PR is a good opportunity to deprecate this default.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r449120815", "createdAt": "2020-07-02T16:04:26Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -63,7 +100,7 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t * @return a new entity type builder\n \t */\n \tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(SpawnGroup spawnGroup) {\n-\t\treturn new FabricEntityTypeBuilder<>(spawnGroup, (t, w) -> null);\n+\t\treturn create(spawnGroup, FabricEntityTypeBuilder::empty);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgwODEwNw=="}, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjkyNDc0OnYy", "diffSide": "RIGHT", "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo1OTo0OVrOGxKvwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1NDozNlrOGxsVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIwOTQ3Mw==", "bodyText": "function -> factory\nSince this is for a builder, it is quite odd to have several overloads here. Is this a limitation of the vanilla API or can these extra properties be moved to the builders?", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r454209473", "createdAt": "2020-07-14T08:59:49Z", "author": {"login": "sfPlayer1"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -54,6 +64,33 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\tthis.spawnableFarFromPlayer = spawnGroup == SpawnGroup.CREATURE || spawnGroup == SpawnGroup.MISC;\n \t}\n \n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create() {\n+\t\treturn create(SpawnGroup.MISC);\n+\t}\n+\n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param function the entity function used to create this entity\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(EntityType.EntityFactory<T> function) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTgyMw==", "bodyText": "EntityFactory could probably be a builder method, will need to keep old options for deprecation of course", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r454759823", "createdAt": "2020-07-15T02:54:36Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -54,6 +64,33 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\tthis.spawnableFarFromPlayer = spawnGroup == SpawnGroup.CREATURE || spawnGroup == SpawnGroup.MISC;\n \t}\n \n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create() {\n+\t\treturn create(SpawnGroup.MISC);\n+\t}\n+\n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param function the entity function used to create this entity\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(EntityType.EntityFactory<T> function) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIwOTQ3Mw=="}, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3379, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}