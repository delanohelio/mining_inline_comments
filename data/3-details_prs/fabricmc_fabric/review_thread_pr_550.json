{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzYyNjE0", "number": 550, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxMjo0MVrODuHLoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxNTo0MVrODuHOhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njc4NzUzOnYy", "diffSide": "RIGHT", "path": "fabric-api-base/src/main/java/net/fabricmc/fabric/api/util/NbtType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxMjo0MVrOF_7uHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0NDozOVrOF_8YAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzA3MQ==", "bodyText": "Based on the title of the PR, this has no relation to the build.gradle\nHowever the name of the branch you used  liachmodded:fix/javadoc-build makes me think this is to fix javadoc.\nSo I would say either change the name of the PR to mention the whole picture or scope the javadoc fixes to another PR", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402583071", "createdAt": "2020-04-02T20:12:41Z", "author": {"login": "i509VCB"}, "path": "fabric-api-base/src/main/java/net/fabricmc/fabric/api/util/NbtType.java", "diffHunk": "@@ -24,8 +24,8 @@\n  *\n  * <p>For the current list of types, check with {@link Tag#TYPES}.\n  *\n- * @see CompoundTag#containsKey(String, int)\n- * @see Tag#idToString(int)\n+ * @see CompoundTag#contains(String, int)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5Mzc5Mg==", "bodyText": "Oh, this pr fixes javadoc jar generation and javadoc building", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402593792", "createdAt": "2020-04-02T20:44:39Z", "author": {"login": "liach"}, "path": "fabric-api-base/src/main/java/net/fabricmc/fabric/api/util/NbtType.java", "diffHunk": "@@ -24,8 +24,8 @@\n  *\n  * <p>For the current list of types, check with {@link Tag#TYPES}.\n  *\n- * @see CompoundTag#containsKey(String, int)\n- * @see Tag#idToString(int)\n+ * @see CompoundTag#contains(String, int)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzA3MQ=="}, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njc4NzkxOnYy", "diffSide": "RIGHT", "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/api/dimension/v1/EntityPlacer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxMzoyMFrOF_7uZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0NTowMVrOF_8YaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzE0MA==", "bodyText": "We don't need to fully qualify this do we?", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402583140", "createdAt": "2020-04-02T20:13:20Z", "author": {"login": "i509VCB"}, "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/api/dimension/v1/EntityPlacer.java", "diffHunk": "@@ -32,7 +32,7 @@\n public interface EntityPlacer {\n \t/**\n \t * Handles the placement of an entity going to a dimension.\n-\t * Utilized by {@link FabricDimensions#teleport(Entity, DimensionType, EntityPlacer)} to specify placement logic when needed.\n+\t * Utilized by {@link FabricDimensions#teleport(Entity, net.minecraft.world.dimension.DimensionType, EntityPlacer)} to specify placement logic when needed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5Mzg5Ng==", "bodyText": "because importing it would cause a checkstyle error", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402593896", "createdAt": "2020-04-02T20:45:01Z", "author": {"login": "liach"}, "path": "fabric-dimensions-v1/src/main/java/net/fabricmc/fabric/api/dimension/v1/EntityPlacer.java", "diffHunk": "@@ -32,7 +32,7 @@\n public interface EntityPlacer {\n \t/**\n \t * Handles the placement of an entity going to a dimension.\n-\t * Utilized by {@link FabricDimensions#teleport(Entity, DimensionType, EntityPlacer)} to specify placement logic when needed.\n+\t * Utilized by {@link FabricDimensions#teleport(Entity, net.minecraft.world.dimension.DimensionType, EntityPlacer)} to specify placement logic when needed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzE0MA=="}, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njc5MTA4OnYy", "diffSide": "RIGHT", "path": "fabric-rendering-fluids-v1/src/main/java/net/fabricmc/fabric/api/client/render/fluid/v1/FluidRenderHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxNDoyNFrOF_7wew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0NToyNlrOF_8Y5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzY3NQ==", "bodyText": "Why not @apiNote", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402583675", "createdAt": "2020-04-02T20:14:24Z", "author": {"login": "i509VCB"}, "path": "fabric-rendering-fluids-v1/src/main/java/net/fabricmc/fabric/api/client/render/fluid/v1/FluidRenderHandler.java", "diffHunk": "@@ -43,7 +43,7 @@\n \t/**\n \t * Get the tint color for a fluid being rendered at a given position.\n \t *\n-\t * @note As of right now, our hook cannot handle setting a custom alpha\n+\t * <p>Note: As of right now, our hook cannot handle setting a custom alpha", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5NDAyMg==", "bodyText": "Just use this for now, this works well and doclint doesn't know @note", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402594022", "createdAt": "2020-04-02T20:45:26Z", "author": {"login": "liach"}, "path": "fabric-rendering-fluids-v1/src/main/java/net/fabricmc/fabric/api/client/render/fluid/v1/FluidRenderHandler.java", "diffHunk": "@@ -43,7 +43,7 @@\n \t/**\n \t * Get the tint color for a fluid being rendered at a given position.\n \t *\n-\t * @note As of right now, our hook cannot handle setting a custom alpha\n+\t * <p>Note: As of right now, our hook cannot handle setting a custom alpha", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4MzY3NQ=="}, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njc5MTU0OnYy", "diffSide": "RIGHT", "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/FabricBakedModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxNDozMlrOF_7wxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0NTozNVrOF_8ZHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4Mzc1MA==", "bodyText": "Why not @apiNote", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402583750", "createdAt": "2020-04-02T20:14:32Z", "author": {"login": "i509VCB"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/FabricBakedModel.java", "diffHunk": "@@ -76,7 +76,7 @@\n \t * neighboring blocks (if appropriate).  Models only need to consider \"sides\" to the\n \t * extent the model is driven by connection with neighbor blocks or other world state.\n \t *\n-\t * @note with {@link BakedModel#getQuads(BlockState, net.minecraft.util.math.Direction, Random)}, the random\n+\t * <p>Note: with {@link BakedModel#getQuads(BlockState, net.minecraft.util.math.Direction, Random)}, the random", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5NDA3OA==", "bodyText": "No", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402594078", "createdAt": "2020-04-02T20:45:35Z", "author": {"login": "liach"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/FabricBakedModel.java", "diffHunk": "@@ -76,7 +76,7 @@\n \t * neighboring blocks (if appropriate).  Models only need to consider \"sides\" to the\n \t * extent the model is driven by connection with neighbor blocks or other world state.\n \t *\n-\t * @note with {@link BakedModel#getQuads(BlockState, net.minecraft.util.math.Direction, Random)}, the random\n+\t * <p>Note: with {@link BakedModel#getQuads(BlockState, net.minecraft.util.math.Direction, Random)}, the random", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4Mzc1MA=="}, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njc5NDkzOnYy", "diffSide": "RIGHT", "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/mesh/MutableQuadView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxNTo0MlrOF_7y6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0NTo1OFrOF_8ZkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NDI5Ng==", "bodyText": "@apiNote", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402584296", "createdAt": "2020-04-02T20:15:42Z", "author": {"login": "i509VCB"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/mesh/MutableQuadView.java", "diffHunk": "@@ -127,7 +127,7 @@\n \t *\n \t * <p>Models may also find this useful as the face for texture UV locking and rotation semantics.\n \t *\n-\t * @note This value is not persisted independently when the quad is encoded.\n+\t * <p>Note: This value is not persisted independently when the quad is encoded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5NDE5Mg==", "bodyText": "No, I just make it pass generation, I am not a javadoc pro lol", "url": "https://github.com/FabricMC/fabric/pull/550#discussion_r402594192", "createdAt": "2020-04-02T20:45:58Z", "author": {"login": "liach"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/mesh/MutableQuadView.java", "diffHunk": "@@ -127,7 +127,7 @@\n \t *\n \t * <p>Models may also find this useful as the face for texture UV locking and rotation semantics.\n \t *\n-\t * @note This value is not persisted independently when the quad is encoded.\n+\t * <p>Note: This value is not persisted independently when the quad is encoded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NDI5Ng=="}, "originalCommit": {"oid": "43dde0b6e7fe3afbe0a6239150d786566a1a71ef"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3517, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}