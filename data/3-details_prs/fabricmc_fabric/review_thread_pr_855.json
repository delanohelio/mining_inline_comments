{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNzIyNjY0", "number": 855, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODo0Nzo1NVrOENMcTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOToxMToxMFrOENM9Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjcwNzk5OnYy", "diffSide": "RIGHT", "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwODo0Nzo1NVrOGvvPcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoyMzozOFrOGvyOHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcxMDI1OQ==", "bodyText": "minor bikeshed but probably want to use the normal names? such as gravelBlock", "url": "https://github.com/FabricMC/fabric/pull/855#discussion_r452710259", "createdAt": "2020-07-10T08:47:55Z", "author": {"login": "shedaniel"}, "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "diffHunk": "@@ -18,63 +18,122 @@\n \n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.Material;\n import net.minecraft.block.MaterialColor;\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.item.BlockItem;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.item.ToolItem;\n import net.minecraft.server.MinecraftServer;\n import net.minecraft.sound.BlockSoundGroup;\n import net.minecraft.tag.Tag;\n import net.minecraft.util.Identifier;\n import net.minecraft.util.registry.Registry;\n \n import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricMaterialBuilder;\n import net.fabricmc.fabric.api.tool.attribute.v1.DynamicAttributeTool;\n import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n-import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n \n public class ToolAttributeTest implements ModInitializer {\n-\tprivate boolean hasValidatedTags = false;\n+\tprivate static final float DEFAULT_BREAK_SPEED = 1.0F;\n+\tprivate static final float TOOL_BREAK_SPEED = 10.0F;\n+\n+\tprivate boolean hasValidated = false;\n+\n+\tBlock gravel_block;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eba9186182bb1398ca84f2b39262dfb106c24752"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1OTA2OA==", "bodyText": "Yeah, can't remember why I did that so I've changed to match the standard.", "url": "https://github.com/FabricMC/fabric/pull/855#discussion_r452759068", "createdAt": "2020-07-10T10:23:38Z", "author": {"login": "Snakefangox"}, "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "diffHunk": "@@ -18,63 +18,122 @@\n \n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.Material;\n import net.minecraft.block.MaterialColor;\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.item.BlockItem;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.item.ToolItem;\n import net.minecraft.server.MinecraftServer;\n import net.minecraft.sound.BlockSoundGroup;\n import net.minecraft.tag.Tag;\n import net.minecraft.util.Identifier;\n import net.minecraft.util.registry.Registry;\n \n import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricMaterialBuilder;\n import net.fabricmc.fabric.api.tool.attribute.v1.DynamicAttributeTool;\n import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n-import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n \n public class ToolAttributeTest implements ModInitializer {\n-\tprivate boolean hasValidatedTags = false;\n+\tprivate static final float DEFAULT_BREAK_SPEED = 1.0F;\n+\tprivate static final float TOOL_BREAK_SPEED = 10.0F;\n+\n+\tprivate boolean hasValidated = false;\n+\n+\tBlock gravel_block;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcxMDI1OQ=="}, "originalCommit": {"oid": "eba9186182bb1398ca84f2b39262dfb106c24752"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjc5MjAyOnYy", "diffSide": "RIGHT", "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwOToxMToxMFrOGvwB-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoyNDoxMFrOGvyPBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyMzE5Mw==", "bodyText": "possibly want to test for vanilla tools for vanilla blocks", "url": "https://github.com/FabricMC/fabric/pull/855#discussion_r452723193", "createdAt": "2020-07-10T09:11:10Z", "author": {"login": "shedaniel"}, "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "diffHunk": "@@ -18,63 +18,122 @@\n \n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.Material;\n import net.minecraft.block.MaterialColor;\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.item.BlockItem;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.item.ToolItem;\n import net.minecraft.server.MinecraftServer;\n import net.minecraft.sound.BlockSoundGroup;\n import net.minecraft.tag.Tag;\n import net.minecraft.util.Identifier;\n import net.minecraft.util.registry.Registry;\n \n import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricMaterialBuilder;\n import net.fabricmc.fabric.api.tool.attribute.v1.DynamicAttributeTool;\n import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n-import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n \n public class ToolAttributeTest implements ModInitializer {\n-\tprivate boolean hasValidatedTags = false;\n+\tprivate static final float DEFAULT_BREAK_SPEED = 1.0F;\n+\tprivate static final float TOOL_BREAK_SPEED = 10.0F;\n+\n+\tprivate boolean hasValidated = false;\n+\n+\tBlock gravel_block;\n+\tBlock stone_block;\n+\tItem test_shovel;\n+\tItem test_pickaxe;\n \n \t@Override\n \tpublic void onInitialize() {\n \t\t// Register a custom shovel that has a mining level of 2 (iron) dynamically.\n-\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_shovel\"), new TestShovel(new Item.Settings()));\n+\t\ttest_shovel = Registry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_shovel\"), new TestTool(new Item.Settings(), FabricToolTags.SHOVELS));\n+\t\t//Register a custom pickaxe that has a mining level of 2 (iron) dynamically.\n+\t\ttest_pickaxe = Registry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_pickaxe\"), new TestTool(new Item.Settings(), FabricToolTags.PICKAXES));\n \t\t// Register a block that requires a shovel that is as strong or stronger than an iron one.\n-\t\tBlock block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_block\"),\n+\t\tgravel_block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_gravel_block\"),\n \t\t\t\tnew Block(FabricBlockSettings.of(new FabricMaterialBuilder(MaterialColor.SAND).build(), MaterialColor.STONE)\n \t\t\t\t\t\t.breakByTool(FabricToolTags.SHOVELS, 2)\n \t\t\t\t\t\t.requiresTool()\n \t\t\t\t\t\t.strength(0.6F)\n \t\t\t\t\t\t.sounds(BlockSoundGroup.GRAVEL)));\n-\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_block\"), new BlockItem(block, new Item.Settings()));\n+\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_gravel_block\"), new BlockItem(gravel_block, new Item.Settings()));\n+\t\t// Register a block that requires a pickaxe that is as strong or stronger than an iron one.\n+\t\tstone_block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_stone_block\"),\n+\t\t\t\tnew Block(FabricBlockSettings.of(Material.STONE, MaterialColor.STONE)\n+\t\t\t\t\t\t.breakByTool(FabricToolTags.PICKAXES, 2)\n+\t\t\t\t\t\t.requiresTool()\n+\t\t\t\t\t\t.strength(0.6F)\n+\t\t\t\t\t\t.sounds(BlockSoundGroup.STONE)));\n+\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_stone_block\"), new BlockItem(stone_block, new Item.Settings()));\n \n-\t\tServerTickCallback.EVENT.register(this::validateTags);\n+\t\tServerTickCallback.EVENT.register(this::validate);\n \t}\n \n-\tprivate void validateTags(MinecraftServer server) {\n-\t\tif (hasValidatedTags) {\n+\tprivate void validate(MinecraftServer server) {\n+\t\tif (hasValidated) {\n \t\t\treturn;\n \t\t}\n \n-\t\thasValidatedTags = true;\n+\t\thasValidated = true;\n \n \t\tif (FabricToolTags.PICKAXES.values().isEmpty()) {\n \t\t\tthrow new AssertionError(\"Failed to load tool tags\");\n \t\t}\n+\n+\t\t//Test vanilla tools don't bypass fabric mining levels", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eba9186182bb1398ca84f2b39262dfb106c24752"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1OTMwMA==", "bodyText": "Good idea, I've added all vanilla test cases.", "url": "https://github.com/FabricMC/fabric/pull/855#discussion_r452759300", "createdAt": "2020-07-10T10:24:10Z", "author": {"login": "Snakefangox"}, "path": "fabric-tool-attribute-api-v1/src/testmod/java/net/fabricmc/fabric/test/tool/attribute/ToolAttributeTest.java", "diffHunk": "@@ -18,63 +18,122 @@\n \n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.block.Material;\n import net.minecraft.block.MaterialColor;\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.item.BlockItem;\n import net.minecraft.item.Item;\n import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.item.ToolItem;\n import net.minecraft.server.MinecraftServer;\n import net.minecraft.sound.BlockSoundGroup;\n import net.minecraft.tag.Tag;\n import net.minecraft.util.Identifier;\n import net.minecraft.util.registry.Registry;\n \n import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;\n import net.fabricmc.fabric.api.object.builder.v1.block.FabricMaterialBuilder;\n import net.fabricmc.fabric.api.tool.attribute.v1.DynamicAttributeTool;\n import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n-import net.fabricmc.fabric.api.event.server.ServerTickCallback;\n \n public class ToolAttributeTest implements ModInitializer {\n-\tprivate boolean hasValidatedTags = false;\n+\tprivate static final float DEFAULT_BREAK_SPEED = 1.0F;\n+\tprivate static final float TOOL_BREAK_SPEED = 10.0F;\n+\n+\tprivate boolean hasValidated = false;\n+\n+\tBlock gravel_block;\n+\tBlock stone_block;\n+\tItem test_shovel;\n+\tItem test_pickaxe;\n \n \t@Override\n \tpublic void onInitialize() {\n \t\t// Register a custom shovel that has a mining level of 2 (iron) dynamically.\n-\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_shovel\"), new TestShovel(new Item.Settings()));\n+\t\ttest_shovel = Registry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_shovel\"), new TestTool(new Item.Settings(), FabricToolTags.SHOVELS));\n+\t\t//Register a custom pickaxe that has a mining level of 2 (iron) dynamically.\n+\t\ttest_pickaxe = Registry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"test_pickaxe\"), new TestTool(new Item.Settings(), FabricToolTags.PICKAXES));\n \t\t// Register a block that requires a shovel that is as strong or stronger than an iron one.\n-\t\tBlock block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_block\"),\n+\t\tgravel_block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_gravel_block\"),\n \t\t\t\tnew Block(FabricBlockSettings.of(new FabricMaterialBuilder(MaterialColor.SAND).build(), MaterialColor.STONE)\n \t\t\t\t\t\t.breakByTool(FabricToolTags.SHOVELS, 2)\n \t\t\t\t\t\t.requiresTool()\n \t\t\t\t\t\t.strength(0.6F)\n \t\t\t\t\t\t.sounds(BlockSoundGroup.GRAVEL)));\n-\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_block\"), new BlockItem(block, new Item.Settings()));\n+\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_gravel_block\"), new BlockItem(gravel_block, new Item.Settings()));\n+\t\t// Register a block that requires a pickaxe that is as strong or stronger than an iron one.\n+\t\tstone_block = Registry.register(Registry.BLOCK, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_stone_block\"),\n+\t\t\t\tnew Block(FabricBlockSettings.of(Material.STONE, MaterialColor.STONE)\n+\t\t\t\t\t\t.breakByTool(FabricToolTags.PICKAXES, 2)\n+\t\t\t\t\t\t.requiresTool()\n+\t\t\t\t\t\t.strength(0.6F)\n+\t\t\t\t\t\t.sounds(BlockSoundGroup.STONE)));\n+\t\tRegistry.register(Registry.ITEM, new Identifier(\"fabric-tool-attribute-api-v1-testmod\", \"hardened_stone_block\"), new BlockItem(stone_block, new Item.Settings()));\n \n-\t\tServerTickCallback.EVENT.register(this::validateTags);\n+\t\tServerTickCallback.EVENT.register(this::validate);\n \t}\n \n-\tprivate void validateTags(MinecraftServer server) {\n-\t\tif (hasValidatedTags) {\n+\tprivate void validate(MinecraftServer server) {\n+\t\tif (hasValidated) {\n \t\t\treturn;\n \t\t}\n \n-\t\thasValidatedTags = true;\n+\t\thasValidated = true;\n \n \t\tif (FabricToolTags.PICKAXES.values().isEmpty()) {\n \t\t\tthrow new AssertionError(\"Failed to load tool tags\");\n \t\t}\n+\n+\t\t//Test vanilla tools don't bypass fabric mining levels", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjcyMzE5Mw=="}, "originalCommit": {"oid": "eba9186182bb1398ca84f2b39262dfb106c24752"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3396, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}