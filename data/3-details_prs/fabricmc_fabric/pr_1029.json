{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMjg5Njk2", "number": 1029, "title": "DynamicRegistryEvents", "bodyText": "Outline\nSince 1.16.2, some registries are handled by the DynamicRegistryManager.\nFor those Registries, one can't simply create a RegistryAddedCallbackEvent.\nThis PR aims to fix that.\nThis PR was made as a foundation for future worldgen APIs like the Biome API.\nChanges to Existing Code\nMinor changes to MixinIdRegistry.\nInstead of injecting into set it now injects into method_31051 (in newer yarn also set).\nThis adds the checkDuplicateKeys parameter that is passed as false by MutableRegistry.replace.\nI made this also skip the equality check on rawIds since that was causing issues with MutableRegistry.replace\nDynamicRegistryEntryAddedCallback\nThe only exposed part of the changes.\nI tried to mimic the RegistryEntryAddedCallback as much as possible.\nThe rest of the code should be rather self-explanatory,\nbut if anyone knows how to fix the generics in DynamicRegistryManagerMixin, let me know :)\nI hope this can be merged rather soon so I can work on a Biome API.\nThat's also why I refrained from refactoring any code, even though this should probably happen at some point.", "createdAt": "2020-08-19T16:45:03Z", "url": "https://github.com/FabricMC/fabric/pull/1029", "merged": true, "mergeCommit": {"oid": "c29304db6ad616cec5862fc5b7ac3a89ef9bd3f9"}, "closed": true, "closedAt": "2020-10-11T20:15:25Z", "author": {"login": "CheaterCodes"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAeifyAFqTQ3MDY1MzUzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOYcSwAFqTUwMDczNzc5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjUzNTM4", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-470653538", "createdAt": "2020-08-19T16:49:48Z", "commit": {"oid": "ce49f034e6c2469f257e9ec49c4e7995df14daeb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo0OTo0OFrOHDQb1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjo1MDozMVrOHDQdTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3NzA0NA==", "bodyText": "I'd say final class with private ctor here.", "url": "https://github.com/FabricMC/fabric/pull/1029#discussion_r473177044", "createdAt": "2020-08-19T16:49:48Z", "author": {"login": "i509VCB"}, "path": "fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/impl/registry/sync/DynamicRegistryEvents.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.impl.registry.sync;\n+\n+import java.util.Map;\n+\n+import com.google.common.collect.Maps;\n+\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+import net.fabricmc.fabric.api.event.registry.DynamicRegistryEntryAddedCallback;\n+import net.fabricmc.fabric.mixin.registry.sync.DynamicRegistryManagerAccessor;\n+\n+public abstract class DynamicRegistryEvents {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce49f034e6c2469f257e9ec49c4e7995df14daeb"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3NzQyMQ==", "bodyText": "You may be able to pass the generic type here and on the interface.", "url": "https://github.com/FabricMC/fabric/pull/1029#discussion_r473177421", "createdAt": "2020-08-19T16:50:31Z", "author": {"login": "i509VCB"}, "path": "fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/api/event/registry/DynamicRegistryEntryAddedCallback.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.event.registry;\n+\n+import net.minecraft.util.registry.MutableRegistry;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.impl.registry.sync.DynamicRegistryEvents;\n+\n+@FunctionalInterface\n+public interface DynamicRegistryEntryAddedCallback {\n+\tvoid onEntryAdded(int rawId, RegistryKey<?> key, Object object, MutableRegistry<?> registry);\n+\n+\tstatic Event<DynamicRegistryEntryAddedCallback> event(RegistryKey<? extends Registry<?>> registryKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce49f034e6c2469f257e9ec49c4e7995df14daeb"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjY4MDgz", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-470668083", "createdAt": "2020-08-19T17:00:20Z", "commit": {"oid": "ce49f034e6c2469f257e9ec49c4e7995df14daeb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMDoyMFrOHDQ8LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMDoyMFrOHDQ8LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE4NTMyNQ==", "bodyText": "In my opinion, it might be good to require 0.9.2 in fabric.mod.json", "url": "https://github.com/FabricMC/fabric/pull/1029#discussion_r473185325", "createdAt": "2020-08-19T17:00:20Z", "author": {"login": "shedaniel"}, "path": "build.gradle", "diffHunk": "@@ -73,7 +73,7 @@ allprojects {\n \tdependencies {\n \t\tminecraft \"com.mojang:minecraft:$Globals.mcVersion\"\n \t\tmappings \"net.fabricmc:yarn:${Globals.mcVersion}${Globals.yarnVersion}:v2\"\n-\t\tmodCompile \"net.fabricmc:fabric-loader:0.8.9+build.203\"\n+\t\tmodCompile \"net.fabricmc:fabric-loader:0.9.2+build.206\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce49f034e6c2469f257e9ec49c4e7995df14daeb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTM5NjI2", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-471939626", "createdAt": "2020-08-20T19:54:02Z", "commit": {"oid": "d987f451045fd4079770f2007989f6c7601e6abd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1NDowMlrOHERG7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1NDowMlrOHERG7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjY1NA==", "bodyText": "Imo exposing a general event at this point like DynamicRegistrySetupEvent and letting users to register registry entry add callback etc. from this point on would be more useful.", "url": "https://github.com/FabricMC/fabric/pull/1029#discussion_r474236654", "createdAt": "2020-08-20T19:54:02Z", "author": {"login": "liach"}, "path": "fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/mixin/registry/sync/DynamicRegistryManagerMixin.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.registry.sync;\n+\n+import java.util.Map;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.util.registry.DynamicRegistryManager;\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.util.registry.RegistryKey;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.registry.DynamicRegistryEntryAddedCallback;\n+import net.fabricmc.fabric.api.event.registry.RegistryEntryAddedCallback;\n+import net.fabricmc.fabric.impl.registry.sync.DynamicRegistryEvents;\n+\n+@Mixin(DynamicRegistryManager.class)\n+public class DynamicRegistryManagerMixin {\n+\t@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+\t@Inject(method = \"create\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/util/dynamic/RegistryOps$class_5506$class_5507;<init>()V\"), locals = LocalCapture.CAPTURE_FAILHARD)\n+\tprivate static void onCreateImpl(CallbackInfoReturnable<DynamicRegistryManager.Impl> cir, DynamicRegistryManager.Impl registryManager) {\n+\t\tfor (Map.Entry<RegistryKey<? extends Registry<?>>, Event<?>> event : DynamicRegistryEvents.ADD_ENTRY_EVENTS.entrySet()) {\n+\t\t\tRegistryKey<? extends Registry<Object>> registryKey = (RegistryKey<? extends Registry<Object>>) event.getKey();\n+\t\t\tRegistryEntryAddedCallback.event(registryManager.get(registryKey)).register((rawId, id, object) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d987f451045fd4079770f2007989f6c7601e6abd"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzQ3NjEx", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-472747611", "createdAt": "2020-08-21T19:05:37Z", "commit": {"oid": "9b76e847734ac38e785ebc945127bf01ad2d13ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODE4MDY5", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-472818069", "createdAt": "2020-08-21T21:03:10Z", "commit": {"oid": "9b76e847734ac38e785ebc945127bf01ad2d13ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDkwMjA0", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-475090204", "createdAt": "2020-08-26T01:30:44Z", "commit": {"oid": "9b76e847734ac38e785ebc945127bf01ad2d13ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjU2MzYz", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-476656363", "createdAt": "2020-08-27T12:11:27Z", "commit": {"oid": "1c5aad863af97da4a05febe7a828b4645dc39dfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTE1MTI4", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-476915128", "createdAt": "2020-08-27T17:01:19Z", "commit": {"oid": "1c5aad863af97da4a05febe7a828b4645dc39dfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NDIwOTgz", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-478420983", "createdAt": "2020-08-31T08:33:03Z", "commit": {"oid": "1c5aad863af97da4a05febe7a828b4645dc39dfd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9c7de9661886e711590642132ee0fe0d66fb2b7", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/e9c7de9661886e711590642132ee0fe0d66fb2b7", "committedDate": "2020-09-13T11:02:21Z", "message": "Added DynamicRegistryEntryAddedCallback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5def8e7eb51f73e94afe7abbeac9cf2f58872c4", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/e5def8e7eb51f73e94afe7abbeac9cf2f58872c4", "committedDate": "2020-09-13T11:02:21Z", "message": "bumbed loader version, finalized DynamicRegistryEvents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e30c893704ec31fb37f6dd265dbeeb92a9618a9", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/1e30c893704ec31fb37f6dd265dbeeb92a9618a9", "committedDate": "2020-09-13T11:02:21Z", "message": "Fixed some generics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5610e94af4bc10f1c18daa247027ce91b36eb889", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/5610e94af4bc10f1c18daa247027ce91b36eb889", "committedDate": "2020-09-13T11:02:21Z", "message": "Changed the event to a more generic one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0c9b80ef4ebc50cb2992c95ce11e5e3cae81cab", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/a0c9b80ef4ebc50cb2992c95ce11e5e3cae81cab", "committedDate": "2020-09-13T11:02:21Z", "message": "Added some javadoc and the license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d932d0ccc12a55dbfd9d3bc5841dbcea194b9598", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/d932d0ccc12a55dbfd9d3bc5841dbcea194b9598", "committedDate": "2020-09-13T11:02:22Z", "message": "increased gradle memory in the hope it fixes the github action fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a46b0be60a9f04de1ab9f9cb866358ed6149d06d", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/a46b0be60a9f04de1ab9f9cb866358ed6149d06d", "committedDate": "2020-09-13T11:03:53Z", "message": "Added DynamicRegistryEntryAddedCallback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7953e09bd8de9547510ba73db6b3cdc47b1ec802", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/7953e09bd8de9547510ba73db6b3cdc47b1ec802", "committedDate": "2020-09-13T11:03:53Z", "message": "bumbed loader version, finalized DynamicRegistryEvents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d8aa64520908e8e8e97024684a4fe474539040b", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/1d8aa64520908e8e8e97024684a4fe474539040b", "committedDate": "2020-09-13T11:04:16Z", "message": "Fixed some generics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea60ad8ae6c153c63609e59bb9914db9a25839f4", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/ea60ad8ae6c153c63609e59bb9914db9a25839f4", "committedDate": "2020-09-13T11:04:59Z", "message": "Changed the event to a more generic one"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2609437f7b9944bebb84cfbadd3d06bfdb13bc6f", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/2609437f7b9944bebb84cfbadd3d06bfdb13bc6f", "committedDate": "2020-09-04T15:48:38Z", "message": "Merge branch 'dynregman' of github.com:CheaterCodes/fabric into dynregman"}, "afterCommit": {"oid": "ea60ad8ae6c153c63609e59bb9914db9a25839f4", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/ea60ad8ae6c153c63609e59bb9914db9a25839f4", "committedDate": "2020-09-13T11:04:59Z", "message": "Changed the event to a more generic one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825410cfbc8642c926d4c6679d290a4364664d8d", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/825410cfbc8642c926d4c6679d290a4364664d8d", "committedDate": "2020-09-13T11:10:16Z", "message": "reverted memory change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "002bec9c0567fef2b47f11c1a43df88be43a0623", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/002bec9c0567fef2b47f11c1a43df88be43a0623", "committedDate": "2020-09-13T11:17:51Z", "message": "updated mixin for new mappings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf575bf0131fed526ddf2a2203e5a83673cd64dd", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/bf575bf0131fed526ddf2a2203e5a83673cd64dd", "committedDate": "2020-10-01T20:54:51Z", "message": "Merge branch '1.16' into dynregman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "811b763fc3ea42364f080c83297901df02429219", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/811b763fc3ea42364f080c83297901df02429219", "committedDate": "2020-10-01T20:58:14Z", "message": "removed redundant supressions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzE5ODYw", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-500719860", "createdAt": "2020-10-01T21:08:52Z", "commit": {"oid": "811b763fc3ea42364f080c83297901df02429219"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzM0ODc0", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-500734874", "createdAt": "2020-10-01T21:35:09Z", "commit": {"oid": "811b763fc3ea42364f080c83297901df02429219"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTozNTowOVrOHbbi4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTozNTowOVrOHbbi4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyNDg5Ng==", "bodyText": "-> onRegistrySetup to be consistent with everything else and standard naming conventions", "url": "https://github.com/FabricMC/fabric/pull/1029#discussion_r498524896", "createdAt": "2020-10-01T21:35:09Z", "author": {"login": "sfPlayer1"}, "path": "fabric-registry-sync-v0/src/main/java/net/fabricmc/fabric/api/event/registry/DynamicRegistrySetupCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.event.registry;\n+\n+import net.minecraft.util.registry.DynamicRegistryManager;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * This event gets triggered when a new {@link DynamicRegistryManager} gets created, but before it gets filled.\n+ * Therefore, this is the ideal place to register callbacks to dynamic registries.\n+ * For example, the following code is used to register a callback that gets triggered for any registered Biome, both JSON and code defined.\n+ *\n+ * <pre>\n+ * {@code\n+ * DynamicRegistrySetupCallback.EVENT.register(registryManager -> {\n+ *     Registry<Biome> biomes = registryManager.get(Registry.BIOME_KEY);\n+ *     RegistryEntryAddedCallback.event(biomes).register((rawId, id, object) -> {\n+ *         // Do something\n+ *     });\n+ * });\n+ * }\n+ * </pre>\n+ */\n+@FunctionalInterface\n+public interface DynamicRegistrySetupCallback {\n+\tvoid onSetupRegistry(DynamicRegistryManager registryManager);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "811b763fc3ea42364f080c83297901df02429219"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "888073d094f731c6a4519ef6b5eb3479ae746e41", "author": {"user": {"login": "CheaterCodes", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/888073d094f731c6a4519ef6b5eb3479ae746e41", "committedDate": "2020-10-01T21:37:40Z", "message": "renamed event method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzM3Nzk1", "url": "https://github.com/FabricMC/fabric/pull/1029#pullrequestreview-500737795", "createdAt": "2020-10-01T21:40:48Z", "commit": {"oid": "888073d094f731c6a4519ef6b5eb3479ae746e41"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3245, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}