{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTExNDA3", "number": 601, "title": "Add fabric model predicate provider registry", "bodyText": "In 20w18a, model predicate provider (old item property for models) have register methods that are not public. As a result, an api is necessary for registering the model predicate providers. Hence this pr.\nSigned-off-by: liach liach@users.noreply.github.com", "createdAt": "2020-05-01T00:27:05Z", "url": "https://github.com/FabricMC/fabric/pull/601", "merged": true, "mergeCommit": {"oid": "eae12eb8159bf8e492d82a5e752fe96967026d4e"}, "closed": true, "closedAt": "2020-05-07T21:10:08Z", "author": {"login": "liach"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcc2WG7gH2gAyNDExOTExNDA3OmNiMjM0MDhhNmJmNzI1Y2YzM2I3NGIzYjZiNWM4YWRkZmE0YmQ0ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceuBn6gH2gAyNDExOTExNDA3OmNiZDUyMzEyM2M1YzlmZGI4YzZhY2UzZWQzNGNiMzc0ZTg4MzQwZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb23408a6bf725cf33b74b3b6b5c8addfa4bd4fc", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/cb23408a6bf725cf33b74b3b6b5c8addfa4bd4fc", "committedDate": "2020-05-01T00:14:59Z", "message": "Add fabric model predicate provider registry\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd742239c604a0ab912bb65a2e155a719fdec513", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/bd742239c604a0ab912bb65a2e155a719fdec513", "committedDate": "2020-05-01T00:26:26Z", "message": "Fix jd with new mappings\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97a5091c875215cf853d4e3b787fb536b48ffa82", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/97a5091c875215cf853d4e3b787fb536b48ffa82", "committedDate": "2020-05-01T00:27:54Z", "message": "Bump module version\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/3460667308d799e89377d515372660017ef64f6b", "committedDate": "2020-05-01T00:36:50Z", "message": "Remove redundant line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzOTY2ODEy", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-403966812", "createdAt": "2020-05-01T00:39:57Z", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozOTo1N1rOGO--pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0MTowNVrOGO-_rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NTA5Mw==", "bodyText": "I assume this is to simplify the process of the implementation since the mapped code exists there", "url": "https://github.com/FabricMC/fabric/pull/601#discussion_r418365093", "createdAt": "2020-05-01T00:39:57Z", "author": {"login": "i509VCB"}, "path": "build.gradle", "diffHunk": "@@ -14,7 +14,7 @@ def ENV = System.getenv()\n class Globals {\n \tstatic def baseVersion = \"0.10.1\"\n \tstatic def mcVersion = \"20w18a\"\n-\tstatic def yarnVersion = \"+build.1\"\n+\tstatic def yarnVersion = \"+build.9\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NTM1OQ==", "bodyText": "Aren't inner class mixins prohibited by mixin?\nI'd try launching the game here", "url": "https://github.com/FabricMC/fabric/pull/601#discussion_r418365359", "createdAt": "2020-05-01T00:41:05Z", "author": {"login": "i509VCB"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.object.builder;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.gen.Invoker;\n+\n+import net.minecraft.client.item.ModelPredicateProvider;\n+import net.minecraft.client.item.ModelPredicateProviderRegistry;\n+import net.minecraft.item.Item;\n+import net.minecraft.util.Identifier;\n+\n+@Mixin(ModelPredicateProviderRegistry.class)\n+public interface ModelPredicateProviderRegistryAccessor {\n+\t@Invoker\n+\tstatic ModelPredicateProvider callRegister(Identifier id, ModelPredicateProvider provider) {\n+\t\tthrow new AssertionError(\"mixin dummy\");\n+\t}\n+\n+\t// mixin doesn't care about descriptor, must put two \"register\" accessors in different places\n+\t@Mixin(ModelPredicateProviderRegistry.class)\n+\tinterface Specific {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDIxNzky", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404421792", "createdAt": "2020-05-01T21:59:27Z", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTIxNzcy", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404521772", "createdAt": "2020-05-02T11:47:20Z", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTIxODgw", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404521880", "createdAt": "2020-05-02T11:49:10Z", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTY1MTgx", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404565181", "createdAt": "2020-05-02T22:23:51Z", "commit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMjoyMzo1MVrOGPmrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQyMjoyMzo1MVrOGPmrlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAxNTU3NA==", "bodyText": "Might be easier to just give this another name, the api to the mod dev will be the same", "url": "https://github.com/FabricMC/fabric/pull/601#discussion_r419015574", "createdAt": "2020-05-02T22:23:51Z", "author": {"login": "modmuss50"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistryAccessor.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.object.builder;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.gen.Invoker;\n+\n+import net.minecraft.client.item.ModelPredicateProvider;\n+import net.minecraft.client.item.ModelPredicateProviderRegistry;\n+import net.minecraft.item.Item;\n+import net.minecraft.util.Identifier;\n+\n+@Mixin(ModelPredicateProviderRegistry.class)\n+public interface ModelPredicateProviderRegistryAccessor {\n+\t@Invoker\n+\tstatic ModelPredicateProvider callRegister(Identifier id, ModelPredicateProvider provider) {\n+\t\tthrow new AssertionError(\"mixin dummy\");\n+\t}\n+\n+\t// mixin doesn't care about descriptor, must put two \"register\" accessors in different places\n+\t@Mixin(ModelPredicateProviderRegistry.class)\n+\tinterface Specific {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NTM1OQ=="}, "originalCommit": {"oid": "3460667308d799e89377d515372660017ef64f6b"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/818ac8a0abf7bc76fd77597509e28db8d726b038", "committedDate": "2020-05-03T00:44:26Z", "message": "Move inner class accessor to outer class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTcyNDEw", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404572410", "createdAt": "2020-05-03T01:02:44Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTcyNDcw", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404572470", "createdAt": "2020-05-03T01:04:13Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTc0OTg1", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404574985", "createdAt": "2020-05-03T02:01:49Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjIzMzQx", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404623341", "createdAt": "2020-05-03T14:17:49Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjMyMTEy", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404632112", "createdAt": "2020-05-03T15:55:46Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjQwOTU0", "url": "https://github.com/FabricMC/fabric/pull/601#pullrequestreview-404640954", "createdAt": "2020-05-03T17:38:10Z", "commit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzozODoxMVrOGPt-9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzozODoxMVrOGPt-9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzNTIyMw==", "bodyText": "If Mixin is ignoring the descriptors then why does putting these in two different classes solve the problem?", "url": "https://github.com/FabricMC/fabric/pull/601#discussion_r419135223", "createdAt": "2020-05-03T17:38:11Z", "author": {"login": "immibis"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/mixin/object/builder/ModelPredicateProviderRegistrySpecificAccessor.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.mixin.object.builder;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.gen.Invoker;\n+\n+import net.minecraft.client.item.ModelPredicateProvider;\n+import net.minecraft.client.item.ModelPredicateProviderRegistry;\n+import net.minecraft.item.Item;\n+import net.minecraft.util.Identifier;\n+\n+// mixin doesn't care about descriptor, must put two \"register\" accessors in different places", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "818ac8a0abf7bc76fd77597509e28db8d726b038"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbd523123c5c9fdb8c6ace3ed34cb374e88340e3", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/cbd523123c5c9fdb8c6ace3ed34cb374e88340e3", "committedDate": "2020-05-06T19:41:13Z", "message": "Merge branch '1.16' into feature/model-predicate"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3429, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}