{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDM5Mzcx", "number": 1007, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjowMVrOEYFfzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1NDo1N1rOEjDMFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkxMzQwOnYy", "diffSide": "RIGHT", "path": "fabric-game-rule-api-v1/src/main/java/net/fabricmc/fabric/mixin/gamerule/RuleKeyMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjowMVrOHAOyJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjowMVrOHAOyJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDI2MA==", "bodyText": "am I the only one who likes to sort their annotations from shortest to largest? even intellij defaults to reverse order and it makes me iritat", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r470004260", "createdAt": "2020-08-13T14:42:01Z", "author": {"login": "Devan-Kerman"}, "path": "fabric-game-rule-api-v1/src/main/java/net/fabricmc/fabric/mixin/gamerule/RuleKeyMixin.java", "diffHunk": "@@ -26,7 +27,7 @@\n \n @Mixin(GameRules.Key.class)\n public abstract class RuleKeyMixin implements RuleKeyExtensions {\n-\t/* @Nullable */\n+\t@Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b909dd2e51dd7a11dea750693768858bc71ad9d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjk2NDUzOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo1MzoxOVrOHAPR8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTo0Mzo0OVrOHARc0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxMjQwMw==", "bodyText": "Im still aware of some issues with loom 0.5 that I need to fix before id be happy to pull this", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r470012403", "createdAt": "2020-08-13T14:53:19Z", "author": {"login": "modmuss50"}, "path": "build.gradle", "diffHunk": "@@ -9,7 +9,7 @@ plugins {\n \tid 'eclipse'\n \tid 'idea'\n \tid 'maven-publish'\n-\tid 'fabric-loom' version '0.4.28' apply false\n+\tid 'fabric-loom' version '0.5.11' apply false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b909dd2e51dd7a11dea750693768858bc71ad9d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0Nzk1NQ==", "bodyText": "I am aware, but version bump is trivial in regards to everything else.", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r470047955", "createdAt": "2020-08-13T15:43:49Z", "author": {"login": "dexman545"}, "path": "build.gradle", "diffHunk": "@@ -9,7 +9,7 @@ plugins {\n \tid 'eclipse'\n \tid 'idea'\n \tid 'maven-publish'\n-\tid 'fabric-loom' version '0.4.28' apply false\n+\tid 'fabric-loom' version '0.5.11' apply false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxMjQwMw=="}, "originalCommit": {"oid": "9b909dd2e51dd7a11dea750693768858bc71ad9d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg0OTc2OnYy", "diffSide": "RIGHT", "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/ModelHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo0Nzo0NlrOHRMH9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDoxMTo1MlrOHRNACQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NjQ4NA==", "bodyText": "Is this really needed since the parameter is a primitive (int)?", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r487786484", "createdAt": "2020-09-14T09:47:46Z", "author": {"login": "NinjaPhenix"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/ModelHelper.java", "diffHunk": "@@ -56,6 +57,7 @@ public static int toFaceIndex(Direction face) {\n \t * optionally including the null face. (Use &lt; or  &lt;= {@link #NULL_FACE_ID}\n \t * to exclude or include the null value, respectively.)\n \t */\n+\t@Contract(\"null -> null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e1958c60c6a4b9f0c4b4cf8215036a7db16793"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMDg0MQ==", "bodyText": "If it was important enough to address in the JD, the anno is warranted.\nNull int is 0, so maybe that is a better boundary to use? I don't know the details of the rendering API well enough to say.", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r487800841", "createdAt": "2020-09-14T10:11:52Z", "author": {"login": "dexman545"}, "path": "fabric-renderer-api-v1/src/main/java/net/fabricmc/fabric/api/renderer/v1/model/ModelHelper.java", "diffHunk": "@@ -56,6 +57,7 @@ public static int toFaceIndex(Direction face) {\n \t * optionally including the null face. (Use &lt; or  &lt;= {@link #NULL_FACE_ID}\n \t * to exclude or include the null value, respectively.)\n \t */\n+\t@Contract(\"null -> null\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NjQ4NA=="}, "originalCommit": {"oid": "47e1958c60c6a4b9f0c4b4cf8215036a7db16793"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg2ODIxOnYy", "diffSide": "LEFT", "path": "fabric-tool-attribute-api-v1/src/main/java/net/fabricmc/fabric/impl/tool/attribute/ToolManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MjoyN1rOHRMTMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1MjoyN1rOHRMTMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4OTM2Mg==", "bodyText": "@Nullable on user, not the method.", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r487789362", "createdAt": "2020-09-14T09:52:27Z", "author": {"login": "NinjaPhenix"}, "path": "fabric-tool-attribute-api-v1/src/main/java/net/fabricmc/fabric/impl/tool/attribute/ToolManagerImpl.java", "diffHunk": "@@ -167,7 +169,7 @@ public static void registerBreakByTool(Block block, Tag<Item> tag, int miningLev\n \t/**\n \t * Hook for ItemStack.isEffectiveOn and similar methods.\n \t */\n-\t//TODO: nullable on user once we have an official @Nullable annotation in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e1958c60c6a4b9f0c4b4cf8215036a7db16793"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTg3ODYzOnYy", "diffSide": "RIGHT", "path": "fabric-rendering-v1/src/main/java/net/fabricmc/fabric/api/client/rendering/v1/BuiltinItemRendererRegistry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1NDo1N1rOHRMZZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwOTo1NDo1N1rOHRMZZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5MDk1MA==", "bodyText": "@NotNull on ItemConvertible and DynamicItemRenderer might be better than a @Contract annotation.", "url": "https://github.com/FabricMC/fabric/pull/1007#discussion_r487790950", "createdAt": "2020-09-14T09:54:57Z", "author": {"login": "NinjaPhenix"}, "path": "fabric-rendering-v1/src/main/java/net/fabricmc/fabric/api/client/rendering/v1/BuiltinItemRendererRegistry.java", "diffHunk": "@@ -76,6 +78,7 @@\n \t * @throws IllegalArgumentException if the item already has a registered renderer\n \t * @throws NullPointerException if either the item or the renderer is null\n \t */\n+\t@Contract(\"null, _ -> fail; _, null -> fail\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e1958c60c6a4b9f0c4b4cf8215036a7db16793"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3435, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}