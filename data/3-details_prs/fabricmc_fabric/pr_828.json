{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MjY1NTQ5", "number": 828, "title": "Add ability to define default attributes and spawn restirctions within the entity type builder.", "bodyText": "Per requests in #825.\nThis allows use of the entity type builder to define default attributes.", "createdAt": "2020-06-19T19:35:20Z", "url": "https://github.com/FabricMC/fabric/pull/828", "merged": true, "mergeCommit": {"oid": "de1d6c86d002c0e273e12759401e20d2f6081fae"}, "closed": true, "closedAt": "2020-08-13T17:15:02Z", "author": {"login": "i509VCB"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs4bexgFqTQzNDMwNDg3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8sojDgFqTQ2MzY4MDM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzA0ODcy", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-434304872", "createdAt": "2020-06-19T19:41:32Z", "commit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MTozM1rOGmffXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOTo0MjoyMVrOGmfgmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxNTAwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>For your convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.\n          \n          \n            \n            \t * <p>For convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443015004", "createdAt": "2020-06-19T19:41:33Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricDefaultAttributeRegistry.java", "diffHunk": "@@ -55,8 +57,11 @@\n \t * <p>If a registration overrides another, a debug log message will be emitted. Existing registrations\n \t * can be checked at {@link net.minecraft.entity.attribute.DefaultAttributeRegistry#hasDefinitionFor(EntityType)}.</p>\n \t *\n+\t * <p>For your convenience, this can also be done on the {@link FabricEntityTypeBuilder} to simplify of the building process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAxNTMyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * <p>This should not be called if your entity is not a {@link LivingEntity}.\n          \n          \n            \n            \t * <p>This should not be called if the entity type being built does not correspond to a {@link LivingEntity}.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443015321", "createdAt": "2020-06-19T19:42:21Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14c11269c1c2d2b751042ae691519e4f2fec62d1"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzE5MjI4", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-434319228", "createdAt": "2020-06-19T20:13:29Z", "commit": {"oid": "e54dc80801a65e12cf0d27323d4818264f11aba9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDoxMzozMFrOGmgJUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDoxMzozMFrOGmgJUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNTc0NA==", "bodyText": "We really need some mechanism to properly handle registration of living vs non living entities.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r443025744", "createdAt": "2020-06-19T20:13:30Z", "author": {"login": "liach"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -148,6 +154,27 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Sets the default attributes for a type of living entity.\n+\t *\n+\t * <p>This should not be called if your entity is not a {@link LivingEntity}.\n+\t *\n+\t * <p>This can be used in a fashion similar to this:\n+\t * <blockquote><pre>\n+\t * FabricEntityTypeBuilder.create(SpawnGroup.CREATURE, MyCreature::new)\n+\t * \t.defaultAttributes(LivingEntity::createLivingAttributes)\n+\t * \t...\n+\t * \t.build();\n+\t * </pre></blockquote>\n+\t *\n+\t * @param defaultAttributeBuilder a function to generate the default attribute builder from the entity type\n+\t * @return this builder for chaining\n+\t */\n+\tpublic FabricEntityTypeBuilder<T> defaultAttributes(Supplier<DefaultAttributeContainer.Builder> defaultAttributeBuilder) {\n+\t\tthis.defaultAttributeBuilder = defaultAttributeBuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e54dc80801a65e12cf0d27323d4818264f11aba9"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NzA3MTE5", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-434707119", "createdAt": "2020-06-22T08:27:15Z", "commit": {"oid": "e89bc79fa5ffe265c59720e918f3da9b67495cef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e399c8dfe2334e5a3536202d185d6301fc994b41", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/e399c8dfe2334e5a3536202d185d6301fc994b41", "committedDate": "2020-06-26T02:34:55Z", "message": "Add ability to define default attributes within the entity type builder."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172d243536c5472502caa1cf1dfbb0f7d136712a", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/172d243536c5472502caa1cf1dfbb0f7d136712a", "committedDate": "2020-06-26T02:34:55Z", "message": "Update fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricDefaultAttributeRegistry.java\n\nCo-authored-by: Pyrofab <redstoneinfire@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f41f1a73b5a1873c92c056db7c9509ab9e78ef21", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/f41f1a73b5a1873c92c056db7c9509ab9e78ef21", "committedDate": "2020-06-26T02:34:56Z", "message": "Add ability to specify spawn restriction. Add a Living and Mob builder to handle attributes and spawn restrictions seperately from default builder."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e89bc79fa5ffe265c59720e918f3da9b67495cef", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/e89bc79fa5ffe265c59720e918f3da9b67495cef", "committedDate": "2020-06-20T02:25:05Z", "message": "Add ability to specify spawn restriction. Add a Living and Mob builder to handle attributes and spawn restrictions seperately from default builder."}, "afterCommit": {"oid": "f41f1a73b5a1873c92c056db7c9509ab9e78ef21", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/f41f1a73b5a1873c92c056db7c9509ab9e78ef21", "committedDate": "2020-06-26T02:34:56Z", "message": "Add ability to specify spawn restriction. Add a Living and Mob builder to handle attributes and spawn restrictions seperately from default builder."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae14f8901a78de3f44e1dedef0b9089519d43af8", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/ae14f8901a78de3f44e1dedef0b9089519d43af8", "committedDate": "2020-06-26T02:41:51Z", "message": "Let's not cast like a maniac"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a54748c9afc4f9fc544bfe4673a0a734eccdfe01", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/a54748c9afc4f9fc544bfe4673a0a734eccdfe01", "committedDate": "2020-06-26T02:50:25Z", "message": "Add misc overloads for living builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/2beee40c9d0626909182ef5743c7f7ec53494f83", "committedDate": "2020-06-26T02:53:33Z", "message": "Add a few null checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjQ2NDI2", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-441246426", "createdAt": "2020-07-01T22:57:41Z", "commit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNDI1MDQy", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-441425042", "createdAt": "2020-07-02T07:40:24Z", "commit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzo0MDoyNVrOGsBEqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNzo0MDoyNVrOGsBEqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgwODEwNw==", "bodyText": "Is this a reasonable default ? It would probably lead to a lot of modded entities being unable to be summoned without authors realizing it.", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r448808107", "createdAt": "2020-07-02T07:40:25Z", "author": {"login": "Pyrofab"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -63,7 +100,7 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t * @return a new entity type builder\n \t */\n \tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(SpawnGroup spawnGroup) {\n-\t\treturn new FabricEntityTypeBuilder<>(spawnGroup, (t, w) -> null);\n+\t\treturn create(spawnGroup, FabricEntityTypeBuilder::empty);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTIwNDM1", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-447920435", "createdAt": "2020-07-14T08:59:49Z", "commit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo1OTo0OVrOGxKvwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo1OTo0OVrOGxKvwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIwOTQ3Mw==", "bodyText": "function -> factory\nSince this is for a builder, it is quite odd to have several overloads here. Is this a limitation of the vanilla API or can these extra properties be moved to the builders?", "url": "https://github.com/FabricMC/fabric/pull/828#discussion_r454209473", "createdAt": "2020-07-14T08:59:49Z", "author": {"login": "sfPlayer1"}, "path": "fabric-object-builder-api-v1/src/main/java/net/fabricmc/fabric/api/object/builder/v1/entity/FabricEntityTypeBuilder.java", "diffHunk": "@@ -54,6 +64,33 @@ protected FabricEntityTypeBuilder(SpawnGroup spawnGroup, EntityType.EntityFactor\n \t\tthis.spawnableFarFromPlayer = spawnGroup == SpawnGroup.CREATURE || spawnGroup == SpawnGroup.MISC;\n \t}\n \n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create() {\n+\t\treturn create(SpawnGroup.MISC);\n+\t}\n+\n+\t/**\n+\t * Creates an entity type builder.\n+\t *\n+\t * <p>This entity's spawn group will automatically be set to {@link SpawnGroup#MISC}.\n+\t *\n+\t * @param function the entity function used to create this entity\n+\t * @param <T> the type of entity\n+\t *\n+\t * @return a new entity type builder\n+\t */\n+\tpublic static <T extends Entity> FabricEntityTypeBuilder<T> create(EntityType.EntityFactory<T> function) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2beee40c9d0626909182ef5743c7f7ec53494f83"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efff918932a474434f86c3cfa40d2b70564325ce", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/efff918932a474434f86c3cfa40d2b70564325ce", "committedDate": "2020-07-15T03:06:48Z", "message": "Allow factory to be defined in builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzU3NjE2", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-455357616", "createdAt": "2020-07-26T11:56:05Z", "commit": {"oid": "efff918932a474434f86c3cfa40d2b70564325ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75c96592e922d898d97a6acd5c5696a8463bef62", "author": {"user": {"login": "i509VCB", "name": null}}, "url": "https://github.com/FabricMC/fabric/commit/75c96592e922d898d97a6acd5c5696a8463bef62", "committedDate": "2020-08-03T02:19:48Z", "message": "Make spawn group a builder parameter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjY1NTI4", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-461265528", "createdAt": "2020-08-05T00:40:21Z", "commit": {"oid": "75c96592e922d898d97a6acd5c5696a8463bef62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTM5MjIw", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-462939220", "createdAt": "2020-08-06T23:17:10Z", "commit": {"oid": "75c96592e922d898d97a6acd5c5696a8463bef62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjgwMzc4", "url": "https://github.com/FabricMC/fabric/pull/828#pullrequestreview-463680378", "createdAt": "2020-08-07T23:01:39Z", "commit": {"oid": "75c96592e922d898d97a6acd5c5696a8463bef62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3562, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}