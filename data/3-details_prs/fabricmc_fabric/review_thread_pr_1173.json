{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzgwNjI1", "number": 1173, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyMjo0MVrOE7WK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo1NDoxNlrOE7bCqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjY0Njk5OnYy", "diffSide": "RIGHT", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyMjo0MVrOH28DVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyMjo0MVrOH28DVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTA0Ng==", "bodyText": "nb: this string is only for debug logging to show who added the entry, so I just chose the module name. Not worth adding a parameter for and burdening callers", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369046", "createdAt": "2020-11-20T03:22:41Z", "author": {"login": "williewillus"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t}\n+\n+\t@Override\n+\tpublic void addOptionalTag(Identifier id) {\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjY0ODY1OnYy", "diffSide": "RIGHT", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyMzo0NlrOH28EUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyMzo0NlrOH28EUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTI5OA==", "bodyText": "Source should match the fabric api module name completely.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n          \n          \n            \n            \t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions-v0\");", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369298", "createdAt": "2020-11-20T03:23:46Z", "author": {"login": "i509VCB"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjY0OTE0OnYy", "diffSide": "RIGHT", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyNDowM1rOH28EoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyNDowM1rOH28EoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTM3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");\n          \n          \n            \n            \t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions-v0\");", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369376", "createdAt": "2020-11-20T03:24:03Z", "author": {"login": "i509VCB"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -57,4 +60,14 @@ public void clearTagEntries() {\n \t\tentries.clear();\n \t\tfabric_clearCount++;\n \t}\n+\n+\t@Override\n+\tpublic void addOptional(Identifier id) {\n+\t\tadd(new Tag.OptionalObjectEntry(id), \"fabric-tag-extensions\");\n+\t}\n+\n+\t@Override\n+\tpublic void addOptionalTag(Identifier id) {\n+\t\tadd(new Tag.OptionalTagEntry(id), \"fabric-tag-extensions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjY1MjIyOnYy", "diffSide": "RIGHT", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyNToyN1rOH28GQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMzoyNToyN1rOH28GQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2OTc5Mg==", "bodyText": "Could you verify the import order here?\nTip: gradlew check will run checkstyle et al", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527369792", "createdAt": "2020-11-20T03:25:27Z", "author": {"login": "i509VCB"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/mixin/tag/extension/MixinTagBuilder.java", "diffHunk": "@@ -20,6 +20,7 @@\n import java.util.Optional;\n \n import com.google.gson.JsonObject;\n+import net.minecraft.util.Identifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a8b147afe5d65573a181dbbf86fe6c04c32e2e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzQ0NDg4OnYy", "diffSide": "RIGHT", "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNzo1NDoxNlrOH3D_lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNDoyMTozNFrOH4rW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw==", "bodyText": "addOptionalObject maybe to reduce confusion? Would also be nice to describe these in more detail. The reader should get an idea what these methods are needed/useful for.", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527499157", "createdAt": "2020-11-20T07:54:16Z", "author": {"login": "sfPlayer1"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "diffHunk": "@@ -27,4 +29,16 @@\n \t * Clear the contained entries and mark the tag as replaced.\n \t */\n \tvoid clearTagEntries();\n+\n+\t/**\n+\t * Add an optional object entry.\n+\t * @param id The ID of the object to add\n+\t */\n+\tvoid addOptional(Identifier id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4175780949bda6aaca43322abc17a5eee2a5465"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5MDAyMw==", "bodyText": "They correspond directly to the non-optional methods on the base vanilla class, so I didn't really want to go into a whole explanation of the tag system.", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527690023", "createdAt": "2020-11-20T13:28:39Z", "author": {"login": "williewillus"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "diffHunk": "@@ -27,4 +29,16 @@\n \t * Clear the contained entries and mark the tag as replaced.\n \t */\n \tvoid clearTagEntries();\n+\n+\t/**\n+\t * Add an optional object entry.\n+\t * @param id The ID of the object to add\n+\t */\n+\tvoid addOptional(Identifier id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}, "originalCommit": {"oid": "f4175780949bda6aaca43322abc17a5eee2a5465"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzcwNTk0Mg==", "bodyText": "There is no need to explain the whole tag system, just the differences Tag<>Object and Optional<>\"Normal\". E.g. something along the lines of \"Optional entries will not produce load errors if their referenced object are missing\" or whatever is appropriate.\nPlease consider adding this documentation, we try to guide the curious viewer to a reasonable extent. This file is particularly unusual/confusing since it's a detached interface that needs casting to be useful, I hope we can at some point migrate it to a subclass of Tag.Builder. Right now the two addOptional methods are quite exposed compared to the vanilla equivalents if someone sees our class before the vanilla one.", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r527705942", "createdAt": "2020-11-20T13:55:50Z", "author": {"login": "sfPlayer1"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "diffHunk": "@@ -27,4 +29,16 @@\n \t * Clear the contained entries and mark the tag as replaced.\n \t */\n \tvoid clearTagEntries();\n+\n+\t/**\n+\t * Add an optional object entry.\n+\t * @param id The ID of the object to add\n+\t */\n+\tvoid addOptional(Identifier id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}, "originalCommit": {"oid": "f4175780949bda6aaca43322abc17a5eee2a5465"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE5MjY2OQ==", "bodyText": "done", "url": "https://github.com/FabricMC/fabric/pull/1173#discussion_r529192669", "createdAt": "2020-11-24T04:21:34Z", "author": {"login": "williewillus"}, "path": "fabric-tag-extensions-v0/src/main/java/net/fabricmc/fabric/api/tag/FabricTagBuilder.java", "diffHunk": "@@ -27,4 +29,16 @@\n \t * Clear the contained entries and mark the tag as replaced.\n \t */\n \tvoid clearTagEntries();\n+\n+\t/**\n+\t * Add an optional object entry.\n+\t * @param id The ID of the object to add\n+\t */\n+\tvoid addOptional(Identifier id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTE1Nw=="}, "originalCommit": {"oid": "f4175780949bda6aaca43322abc17a5eee2a5465"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}