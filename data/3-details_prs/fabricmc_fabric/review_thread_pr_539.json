{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzc3Mjk0", "number": 539, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0MjoyNlrODpW_Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0OTo1OFrOD0jr-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Njk0Nzg2OnYy", "diffSide": "RIGHT", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0MjoyNlrOF4fICg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0MjoyNlrOF4fICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3NDUzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> ((dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}));\n          \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t});", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r394774538", "createdAt": "2020-03-19T03:42:26Z", "author": {"login": "liach"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> ((dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f2d98c26a0eb465529a06dbda2927dd600a2720"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Njk1NDk4OnYy", "diffSide": "RIGHT", "path": "fabric-commands-v1/src/main/resources/fabric.mod.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0NTo1N1rOF4fL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzo0NTo1N1rOF4fL7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3NTUzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"fabricloader\": \">=0.4.0\",\n          \n          \n            \n                \"fabricloader\": \">=0.7.0\",", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r394775533", "createdAt": "2020-03-19T03:45:57Z", "author": {"login": "liach"}, "path": "fabric-commands-v1/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"fabric-commands-v1\",\n+  \"name\": \"Fabric Commands (v1)\",\n+  \"version\": \"${version}\",\n+  \"environment\": \"*\",\n+  \"license\": \"Apache-2.0\",\n+  \"icon\": \"assets/fabric-commands-v1/icon.png\",\n+  \"contact\": {\n+    \"homepage\": \"https://fabricmc.net\",\n+    \"irc\": \"irc://irc.esper.net:6667/fabric\",\n+    \"issues\": \"https://github.com/FabricMC/fabric/issues\",\n+    \"sources\": \"https://github.com/FabricMC/fabric\"\n+  },\n+  \"authors\": [\n+    \"FabricMC\"\n+  ],\n+  \"depends\": {\n+    \"fabricloader\": \">=0.4.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f2d98c26a0eb465529a06dbda2927dd600a2720"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njk5NjgzOnYy", "diffSide": "RIGHT", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTozNzoxOVrOF7hISQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTozNDo1NFrOF82jeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw==", "bodyText": "Very minor, but I feel like these parameters should be in the opposite order since dispatcher will always be used while dedicated is secondary.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r397953097", "createdAt": "2020-03-25T15:37:19Z", "author": {"login": "JamiesWhiteShirt"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t});\n+\n+\t/**\n+\t * Called when the server is registering commands.\n+\t *\n+\t * @param dedicated whether the server this command is being registered on is a dedicated server.\n+\t * @param dispatcher the command dispatcher to register commands to.\n+\t */\n+\tvoid register(boolean dedicated, CommandDispatcher<ServerCommandSource> dispatcher);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2ODQ2Mg==", "bodyText": "shouldn't hurt as this method is not called by mods but rather implemented by mods.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r397968462", "createdAt": "2020-03-25T15:56:06Z", "author": {"login": "liach"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t});\n+\n+\t/**\n+\t * Called when the server is registering commands.\n+\t *\n+\t * @param dedicated whether the server this command is being registered on is a dedicated server.\n+\t * @param dispatcher the command dispatcher to register commands to.\n+\t */\n+\tvoid register(boolean dedicated, CommandDispatcher<ServerCommandSource> dispatcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MjY5Ng==", "bodyText": "It is still being implemented by the mods, including the signature. I have a minor preference towards Jamies' suggestion.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399352696", "createdAt": "2020-03-27T15:34:54Z", "author": {"login": "sfPlayer1"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);\n+\t\t}\n+\t});\n+\n+\t/**\n+\t * Called when the server is registering commands.\n+\t *\n+\t * @param dedicated whether the server this command is being registered on is a dedicated server.\n+\t * @param dispatcher the command dispatcher to register commands to.\n+\t */\n+\tvoid register(boolean dedicated, CommandDispatcher<ServerCommandSource> dispatcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MzA5Nw=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTgzNTI0OnYy", "diffSide": "RIGHT", "path": "fabric-commands-v1/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyNjoyMFrOF82Lkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyNjoyMFrOF82Lkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0NjU3OQ==", "bodyText": "module name singular please", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399346579", "createdAt": "2020-03-27T15:26:20Z", "author": {"login": "sfPlayer1"}, "path": "fabric-commands-v1/build.gradle", "diffHunk": "@@ -0,0 +1,6 @@\n+archivesBaseName = \"fabric-commands-v1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTg1ODY0OnYy", "diffSide": "RIGHT", "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTozMTozOVrOF82aVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowMzoyNVrOF83xcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA==", "bodyText": "Please add a brief example, it may use [...] but should suffice to get an idea how to use this as an experienced Java dev without the wiki or digging deeply into the code.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399350358", "createdAt": "2020-03-27T15:31:39Z", "author": {"login": "sfPlayer1"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MzA0MA==", "bodyText": "@sfPlayer1 Mind elaborate how it is like? like {@code CommandRegistrationCallback.EVENT.register((dedicated, dispatcher) -> SomeCommand.register(distpacher))}?", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399353040", "createdAt": "2020-03-27T15:35:25Z", "author": {"login": "liach"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1ODA4Mw==", "bodyText": "IMO it'd be nice to also outline the MC classes a bit, i.e. include something like LiteralArgumentBuilder.literal(\"somecmd\").executes(context -> [...])", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399358083", "createdAt": "2020-03-27T15:42:45Z", "author": {"login": "sfPlayer1"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MTM3NQ==", "bodyText": "I think CommandManager.literal/argument would be better than the pure Brigadier ones because those often run into some issues with generics.\nEdit: Oh, that's what i5 went with anyway.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399371375", "createdAt": "2020-03-27T16:01:37Z", "author": {"login": "Juuxel"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjY1Nw==", "bodyText": "lol I guess I predicted what you were looking for.\nWell I did author the command wiki page so I have some experience with this", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399372657", "createdAt": "2020-03-27T16:03:25Z", "author": {"login": "i509VCB"}, "path": "fabric-commands-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MDM1OA=="}, "originalCommit": {"oid": "a8bf19e6eec6a0e4d44a806605cd2eaf2041d95e"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjIxMzM0OnYy", "diffSide": "RIGHT", "path": "fabric-command-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo1NTo1N1rOF855Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo1NTo1N1rOF855Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwNzQxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dedicated, dispatcher);\n          \n          \n            \n            \tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dispatcher, dedicated) -> {\n          \n          \n            \n            \t\tfor (CommandRegistrationCallback callback : callbacks) {\n          \n          \n            \n            \t\t\tcallback.register(dispatcher, dedicated);\n          \n      \n    \n    \n  \n\nFixed lambda parameter names.", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r399407411", "createdAt": "2020-03-27T16:55:57Z", "author": {"login": "Juuxel"}, "path": "fabric-command-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ *\n+ * <p>To register some commands, you would register an event listener and implement the callback.\n+ *\n+ * <pre><code>\n+ * CommandRegistrationCallback.EVENT.register((dispatcher, dedicated) -> {\n+ *     // For example, this command is only registered on an integrated server\n+ *     if (!dedicated) dispatcher.register(CommandManager.literal(\"integrated_command\").executes(context -> {...}));\n+ * })};\n+ * </code></pre>\n+ */\n+public interface CommandRegistrationCallback {\n+\tEvent<CommandRegistrationCallback> EVENT = EventFactory.createArrayBacked(CommandRegistrationCallback.class, (callbacks) -> (dedicated, dispatcher) -> {\n+\t\tfor (CommandRegistrationCallback callback : callbacks) {\n+\t\t\tcallback.register(dedicated, dispatcher);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e87410a7303c3c5eb71e66ff44e980799367d1a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDM3MjQyOnYy", "diffSide": "RIGHT", "path": "fabric-command-api-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo0OTo1OFrOGJjOLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNDo1Mjo0NlrOGJjR4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NzQzOQ==", "bodyText": "Hmm, unrelated, but is it possible to use like <code class=\"java\"> for highlights when we get custom css stylesheets", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r412667439", "createdAt": "2020-04-22T04:49:58Z", "author": {"login": "liach"}, "path": "fabric-command-api-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ *\n+ * <p>To register some commands, you would register an event listener and implement the callback.\n+ *\n+ * <pre><code>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3c0f71645583117ac105fc4f4ffa331a559ec20"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2ODM4Ng==", "bodyText": "Hmm, I assume this is for docs.\nMaybe make an issue about it?", "url": "https://github.com/FabricMC/fabric/pull/539#discussion_r412668386", "createdAt": "2020-04-22T04:52:46Z", "author": {"login": "i509VCB"}, "path": "fabric-command-api-v1/src/main/java/net/fabricmc/fabric/api/command/v1/CommandRegistrationCallback.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2016, 2017, 2018, 2019 FabricMC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package net.fabricmc.fabric.api.command.v1;\n+\n+import com.mojang.brigadier.CommandDispatcher;\n+\n+import net.minecraft.server.command.ServerCommandSource;\n+\n+import net.fabricmc.fabric.api.event.Event;\n+import net.fabricmc.fabric.api.event.EventFactory;\n+\n+/**\n+ * Callback for when a server registers all commands.\n+ *\n+ * <p>To register some commands, you would register an event listener and implement the callback.\n+ *\n+ * <pre><code>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NzQzOQ=="}, "originalCommit": {"oid": "a3c0f71645583117ac105fc4f4ffa331a559ec20"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3515, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}