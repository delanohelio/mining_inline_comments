{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDc5NjYw", "number": 1479, "title": "Loop task fix.", "bodyText": "Fix for Loop -stuck\nThings fixed in this PR.\n\nWe have to check that the next task we are scheduling also need to be loop over task then only change the task reference name.\nIn the case of two sequential do while task, the next task returned will contain second do while task. In this case, also we don't need to do anything as second do while the task will take care.\nIn case we have two or more DO_WHILE tasks in the workflow, It should wait for only the corresponding loopOver task to get completed. Earlier it was unoptimized although the functionality was correct.\nForming of DO_WHILE task outputMap. Earlier changed task Reference Name was being used as key. Now preserving original task Reference Name.\nUpdated documentation.\nIntegration test regarding this functionality.", "createdAt": "2020-01-07T16:53:42Z", "url": "https://github.com/Netflix/conductor/pull/1479", "merged": true, "mergeCommit": {"oid": "5379d63a3957da09bf3b068a65d7ee8033fd23df"}, "closed": true, "closedAt": "2020-03-08T20:37:36Z", "author": {"login": "manan164"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4Dpm5gH2gAyMzYwMDc5NjYwOjY5NjViODUyNTkyODJjMjMyZDUyZGRkNzFmMTdhMjNmMGUyZDc3NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLvd34gFqTM3MDg1NjI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6965b85259282c232d52ddd71f17a23f0e2d7775", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/6965b85259282c232d52ddd71f17a23f0e2d7775", "committedDate": "2020-01-07T16:49:51Z", "message": "initial working cut.\n\nDo while along with another do while tested. Yet to write integration test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b46309bcdd29b4d4be2848121e56c7d993817556", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/b46309bcdd29b4d4be2848121e56c7d993817556", "committedDate": "2020-01-07T17:04:59Z", "message": "fix unit tes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b0560bdeaa9da6877ae9074ae6ad30e7c2f0b6f", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/8b0560bdeaa9da6877ae9074ae6ad30e7c2f0b6f", "committedDate": "2020-01-09T10:41:16Z", "message": "Merge branch 'dev' of https://github.com/Netflix/conductor into dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd67cad5e4a181aa7f63fc55795b31fa6c54a8e", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/cfd67cad5e4a181aa7f63fc55795b31fa6c54a8e", "committedDate": "2020-01-11T23:45:38Z", "message": "work in progress\n\n1. Task stuck proper fix.\n2. DO_WHILE task output cleanup."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d620988a95e6fb2ae95a0317ffaba2e3792eba4", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/4d620988a95e6fb2ae95a0317ffaba2e3792eba4", "committedDate": "2020-01-12T13:43:02Z", "message": "unit test fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/d26e25d1efba6a42f543ec8603db46c2145d729c", "committedDate": "2020-01-15T20:17:48Z", "message": "doc update + code refactor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTAyMDgx", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-343502081", "createdAt": "2020-01-15T20:32:10Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozMjoxMVrOFeFikA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozMjoxMVrOFeFikA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5MjM2OA==", "bodyText": "@apanicker-nflx , We need to return null in case all loopOver task execution completed. The issue was, it was returning the next task which was LAMBDA as per definition. Since we are returning null it won't change task reference name. LAMBDA task will be return when DO_WHILE task will get completed. And we have added safe guard not to change taskReferenceName in such case.", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r367092368", "createdAt": "2020-01-15T20:32:11Z", "author": {"login": "manan164"}, "path": "common/src/main/java/com/netflix/conductor/common/metadata/workflow/WorkflowDef.java", "diffHunk": "@@ -241,6 +241,9 @@ public WorkflowTask getNextTask(String taskReferenceName){\n \t\t\t WorkflowTask nextTask = task.next(taskReferenceName, null);\n \t\t\t if(nextTask != null){\n \t\t\t\t return nextTask;\n+\t\t\t } else if (TaskType.DO_WHILE.name().equals(task.getType()) && !task.getTaskReferenceName().equals(taskReferenceName) && task.has(taskReferenceName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTAyOTE5", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-343502919", "createdAt": "2020-01-15T20:33:43Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozMzo0M1rOFeFlBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozMzo0M1rOFeFlBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5Mjk5Ng==", "bodyText": "Since we have changed the way next task will be returned for last loopOver task we just need to check that in case of two sequential DO_WHILE task we should not change the task reference name of second DO_WHILE task when the first one gets completed.", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r367092996", "createdAt": "2020-01-15T20:33:43Z", "author": {"login": "manan164"}, "path": "core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java", "diffHunk": "@@ -190,7 +190,7 @@ private DeciderOutcome decide(final Workflow workflow, List<Task> preScheduledTa\n             if (!pendingTask.isExecuted() && !pendingTask.isRetried() && pendingTask.getStatus().isTerminal()) {\n                 pendingTask.setExecuted(true);\n                 List<Task> nextTasks = getNextTask(workflow, pendingTask);\n-                if (pendingTask.isLoopOverTask() && !nextTasks.isEmpty()) {\n+                if (pendingTask.isLoopOverTask() && !TaskType.DO_WHILE.name().equals(pendingTask.getTaskType()) && !nextTasks.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTAzNjA1", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-343503605", "createdAt": "2020-01-15T20:34:56Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNDo1NlrOFeFnCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNDo1NlrOFeFnCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5MzUxNA==", "bodyText": "In case of workflow having two DO_WHILE task we should not check for all workflow task which matches the current iteration. We should only wait for all children task to get completed.", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r367093514", "createdAt": "2020-01-15T20:34:56Z", "author": {"login": "manan164"}, "path": "core/src/main/java/com/netflix/conductor/core/execution/tasks/DoWhile.java", "diffHunk": "@@ -65,15 +66,15 @@ public boolean execute(Workflow workflow, Task task, WorkflowExecutor workflowEx\n \t\tStringBuilder failureReason = new StringBuilder();\n \t\tMap<String, Object> output = new HashMap<>();\n \t\ttask.getOutputData().put(\"iteration\", task.getIteration());\n-\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (t.getReferenceTaskName().endsWith(TaskUtils.getLoopOverTaskRefNameSuffix(task.getIteration()))) && t.isLoopOverTask()).collect(Collectors.toList());\n+\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (task.getWorkflowTask().has(TaskUtils.removeIterationFromTaskRefName(t.getReferenceTaskName())) && !task.getReferenceTaskName().equals(t.getReferenceTaskName()))).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTAzOTc1", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-343503975", "createdAt": "2020-01-15T20:35:38Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNTozOFrOFeFoQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNTozOFrOFeFoQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5MzgyNA==", "bodyText": "This is just code refactoring to fill DO_WHILE task output map to preserver original taskReferneceName.", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r367093824", "createdAt": "2020-01-15T20:35:38Z", "author": {"login": "manan164"}, "path": "core/src/main/java/com/netflix/conductor/core/execution/tasks/DoWhile.java", "diffHunk": "@@ -65,15 +66,15 @@ public boolean execute(Workflow workflow, Task task, WorkflowExecutor workflowEx\n \t\tStringBuilder failureReason = new StringBuilder();\n \t\tMap<String, Object> output = new HashMap<>();\n \t\ttask.getOutputData().put(\"iteration\", task.getIteration());\n-\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (t.getReferenceTaskName().endsWith(TaskUtils.getLoopOverTaskRefNameSuffix(task.getIteration()))) && t.isLoopOverTask()).collect(Collectors.toList());\n+\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (task.getWorkflowTask().has(TaskUtils.removeIterationFromTaskRefName(t.getReferenceTaskName())) && !task.getReferenceTaskName().equals(t.getReferenceTaskName()))).collect(Collectors.toList());\n \n \t\tfor (Task loopOverTask : loopOver) {\n \t\t\tStatus taskStatus = loopOverTask.getStatus();\n \t\t\thasFailures = !taskStatus.isSuccessful();\n \t\t\tif (hasFailures) {\n \t\t\t\tfailureReason.append(loopOverTask.getReasonForIncompletion()).append(\" \");\n \t\t\t}\n-\t\t\toutput.put(loopOverTask.getReferenceTaskName(), loopOverTask.getOutputData());\n+\t\t\toutput.put(TaskUtils.removeIterationFromTaskRefName(loopOverTask.getReferenceTaskName()), loopOverTask.getOutputData());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTA0NDAx", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-343504401", "createdAt": "2020-01-15T20:36:25Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNjoyNVrOFeFpjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDozNjoyNVrOFeFpjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5NDE1OA==", "bodyText": "Same as https://github.com/Netflix/conductor/pull/1479/files#r367092996. No need to fill the taskInput Map unnecessarily.", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r367094158", "createdAt": "2020-01-15T20:36:25Z", "author": {"login": "manan164"}, "path": "core/src/main/java/com/netflix/conductor/core/execution/tasks/DoWhile.java", "diffHunk": "@@ -129,10 +130,10 @@ boolean getEvaluatedCondition(Workflow workflow, Task task, WorkflowExecutor wor\n \t\tTaskDef taskDefinition = workflowExecutor.getTaskDefinition(task);\n \t\tMap<String, Object> taskInput = parametersUtils.getTaskInputV2(task.getWorkflowTask().getInputParameters(), workflow, task.getTaskId(), taskDefinition);\n \t\ttaskInput.put(task.getReferenceTaskName(), task.getOutputData());\n-\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (t.getReferenceTaskName().endsWith(TaskUtils.getLoopOverTaskRefNameSuffix(task.getIteration()))) && t.isLoopOverTask()).collect(Collectors.toList());\n+\t\tList<Task> loopOver = workflow.getTasks().stream().filter(t -> (task.getWorkflowTask().has(TaskUtils.removeIterationFromTaskRefName(t.getReferenceTaskName())) && !task.getReferenceTaskName().equals(t.getReferenceTaskName()))).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTc1NDA4", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-346975408", "createdAt": "2020-01-22T23:27:44Z", "commit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyNzo0NFrOFgukkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyOToxOVrOFgumbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2MTc3OA==", "bodyText": "why was the task type removed?", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r369861778", "createdAt": "2020-01-22T23:27:44Z", "author": {"login": "apanicker-nflx"}, "path": "core/src/test/java/com/netflix/conductor/core/execution/tasks/DoWhileTest.java", "diffHunk": "@@ -107,6 +107,7 @@ public void setup() {\n         loopTask.setIteration(1);\n         loopWorkflowTask = new WorkflowTask();\n         loopWorkflowTask.setTaskReferenceName(\"loopTask\");\n+        loopWorkflowTask.setType(TaskType.DO_WHILE.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2MjI1Mg==", "bodyText": "Loopover task must not be reused in neither workflow nor another DO_WHILE task.\n\nPlease provide more details about this. Does this mean that if a task is used as a loopover task, it can be used again within the same workflow?", "url": "https://github.com/Netflix/conductor/pull/1479#discussion_r369862252", "createdAt": "2020-01-22T23:29:19Z", "author": {"login": "apanicker-nflx"}, "path": "docs/docs/configuration/systask.md", "diffHunk": "@@ -569,7 +569,7 @@ Each iteration of loop over task will be scheduled as taskRefname__iteration. It\n Do while task output number of iterations with iteration as key and value as number of iterations. Each iteration's output will be stored as, iteration as key and loopover task's output as value\n Taskname which contains arithmetic operator must not be used in loopCondition. Any of loopOver task can be reference outside do while task same way other tasks are referenced.\n To reference specific iteration's output, ```$.LoopTask['iteration]['first_task']```\n-Do while task does NOT support domain or isolation group execution.\n+Do while task does NOT support domain or isolation group execution. Nesting of DO_WHILE task is not supported. Loopover task must not be reused in neither workflow nor another DO_WHILE task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d26e25d1efba6a42f543ec8603db46c2145d729c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e99836cd92c9057c91a2167be1a7952dc0871ee", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/9e99836cd92c9057c91a2167be1a7952dc0871ee", "committedDate": "2020-02-21T12:28:19Z", "message": "integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02515f5eb91eeaf527cd39438d12efee244d1b1d", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/02515f5eb91eeaf527cd39438d12efee244d1b1d", "committedDate": "2020-02-21T19:09:38Z", "message": "integration test fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6022b53eece36c76bafaa26b2da927ba34e8d50a", "author": {"user": {"login": "manan164", "name": "Manan Bhatt"}}, "url": "https://github.com/Netflix/conductor/commit/6022b53eece36c76bafaa26b2da927ba34e8d50a", "committedDate": "2020-02-21T19:20:33Z", "message": "condition fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODU2Mjk4", "url": "https://github.com/Netflix/conductor/pull/1479#pullrequestreview-370856298", "createdAt": "2020-03-08T20:37:25Z", "commit": {"oid": "6022b53eece36c76bafaa26b2da927ba34e8d50a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 832, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}