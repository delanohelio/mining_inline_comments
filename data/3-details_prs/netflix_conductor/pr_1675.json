{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1OTEwNzMw", "number": 1675, "title": "Add configurations to enable external index management", "bodyText": "Shade ES6 dependency and added configurations to enable external index management in ES6.", "createdAt": "2020-05-11T07:06:57Z", "url": "https://github.com/Netflix/conductor/pull/1675", "merged": true, "mergeCommit": {"oid": "6a92e646606ebcec59dd1c5a5a651346f99baf05"}, "closed": true, "closedAt": "2020-05-13T20:48:31Z", "author": {"login": "apanicker-nflx"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgKpZ2ABqjMzMjE2NTQ4NzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg-vU8ABqjMzMzM3NDY3MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f81dcf9c601822ad0e144b69b604dcb2de528b6", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/2f81dcf9c601822ad0e144b69b604dcb2de528b6", "committedDate": "2020-05-11T07:31:05Z", "message": "wip es6dao"}, "afterCommit": {"oid": "2a137b4ce19b36fd9e0ba51b3b6212f9a78706ea", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/2a137b4ce19b36fd9e0ba51b3b6212f9a78706ea", "committedDate": "2020-05-11T07:35:36Z", "message": "enable configuration for external index management"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a137b4ce19b36fd9e0ba51b3b6212f9a78706ea", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/2a137b4ce19b36fd9e0ba51b3b6212f9a78706ea", "committedDate": "2020-05-11T07:35:36Z", "message": "enable configuration for external index management"}, "afterCommit": {"oid": "e3cdb26f6b243c16a7fc13411ee689f3c0665383", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/e3cdb26f6b243c16a7fc13411ee689f3c0665383", "committedDate": "2020-05-11T07:40:52Z", "message": "enable configuration for external index management"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3cdb26f6b243c16a7fc13411ee689f3c0665383", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/e3cdb26f6b243c16a7fc13411ee689f3c0665383", "committedDate": "2020-05-11T07:40:52Z", "message": "enable configuration for external index management"}, "afterCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/5cecf139e791c92502370444c5a6623254bf0eca", "committedDate": "2020-05-11T07:44:04Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzYwNzk1", "url": "https://github.com/Netflix/conductor/pull/1675#pullrequestreview-409360795", "createdAt": "2020-05-11T17:03:44Z", "commit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTk1Mjk1", "url": "https://github.com/Netflix/conductor/pull/1675#pullrequestreview-409595295", "createdAt": "2020-05-11T23:17:14Z", "commit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzoxNzoxNFrOGTwoSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo0ODo0MVrOGTxPjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3Mjg3NA==", "bodyText": "Do you use @nullable annotations? What is the expected response for bad input?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423372874", "createdAt": "2020-05-11T23:17:14Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchBaseDAO.java", "diffHunk": "@@ -45,8 +56,7 @@ BoolQueryBuilder boolQueryBuilder(String expression, String queryString) throws\n         return QueryBuilders.boolQuery().must(stringQuery).must(filterQuery);\n     }\n \n-    String indexName(String documentType) {\n+    String getIndexName(String documentType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3MzQ3MA==", "bodyText": "private static final constants, should they be capitalized? I think a better question is do we have code guidelines for Conductor published somewhere?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423373470", "createdAt": "2020-05-11T23:18:57Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -91,62 +91,45 @@\n @Singleton\n public class ElasticSearchDAOV6 extends ElasticSearchBaseDAO implements IndexDAO {\n \n-    private static final Logger logger = LoggerFactory.getLogger(ElasticSearchDAOV6.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ElasticSearchDAOV6.class);\n \n     private static final String WORKFLOW_DOC_TYPE = \"workflow\";\n-\n     private static final String TASK_DOC_TYPE = \"task\";\n-\n     private static final String LOG_DOC_TYPE = \"task_log\";\n-\n     private static final String EVENT_DOC_TYPE = \"event\";\n-\n     private static final String MSG_DOC_TYPE = \"message\";\n \n-    private static final String className = ElasticSearchDAOV6.class.getSimpleName();\n-\n     private static final int RETRY_COUNT = 3;\n-\n     private static final int CORE_POOL_SIZE = 6;\n-\n     private static final long KEEP_ALIVE_TIME = 1L;\n-\n     private static final int UPDATE_REQUEST_RETRY_COUNT = 5;\n \n-    private String workflowIndexName;\n-\n-    private String taskIndexName;\n-\n-    private String eventIndexPrefix;\n+    private static final String className = ElasticSearchDAOV6.class.getSimpleName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3MzkzNQ==", "bodyText": "I see the structure of the indices is more complicated than I suspected. Is that documented somewhere?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423373935", "createdAt": "2020-05-11T23:20:23Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -91,62 +91,45 @@\n @Singleton\n public class ElasticSearchDAOV6 extends ElasticSearchBaseDAO implements IndexDAO {\n \n-    private static final Logger logger = LoggerFactory.getLogger(ElasticSearchDAOV6.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ElasticSearchDAOV6.class);\n \n     private static final String WORKFLOW_DOC_TYPE = \"workflow\";\n-\n     private static final String TASK_DOC_TYPE = \"task\";\n-\n     private static final String LOG_DOC_TYPE = \"task_log\";\n-\n     private static final String EVENT_DOC_TYPE = \"event\";\n-\n     private static final String MSG_DOC_TYPE = \"message\";\n \n-    private static final String className = ElasticSearchDAOV6.class.getSimpleName();\n-\n     private static final int RETRY_COUNT = 3;\n-\n     private static final int CORE_POOL_SIZE = 6;\n-\n     private static final long KEEP_ALIVE_TIME = 1L;\n-\n     private static final int UPDATE_REQUEST_RETRY_COUNT = 5;\n \n-    private String workflowIndexName;\n-\n-    private String taskIndexName;\n-\n-    private String eventIndexPrefix;\n+    private static final String className = ElasticSearchDAOV6.class.getSimpleName();\n \n+    private final String workflowIndexName;\n+    private final String taskIndexName;\n+    private final String eventIndexPrefix;\n     private String eventIndexName;\n-\n-    private String messageIndexPrefix;\n-\n+    private final String messageIndexPrefix;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3NDcwNQ==", "bodyText": "I suppose there're some legacy reasons behind this, but, shouldn't this doc types be an enum instead of a series of Strings?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423374705", "createdAt": "2020-05-11T23:22:49Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -156,8 +139,8 @@ public ElasticSearchDAOV6(Client elasticSearchClient, ElasticSearchConfiguration\n         this.objectMapper = objectMapper;\n         this.elasticSearchClient = elasticSearchClient;\n         this.indexPrefix = config.getIndexName();\n-        this.workflowIndexName = indexName(WORKFLOW_DOC_TYPE);\n-        this.taskIndexName = indexName(TASK_DOC_TYPE);\n+        this.workflowIndexName = getIndexName(WORKFLOW_DOC_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3NzU2Mg==", "bodyText": "Nitpicking on phrasing \"Starting graceful shutdown\"?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423377562", "createdAt": "2020-05-11T23:31:21Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -187,17 +177,16 @@ public ElasticSearchDAOV6(Client elasticSearchClient, ElasticSearchConfiguration\n             TimeUnit.SECONDS,\n             new LinkedBlockingQueue<>(workerQueueSize),\n             (runnable, executor) -> {\n-                logger.warn(\"Request {} to async log dao discarded in executor {}\", runnable, executor);\n+                LOGGER.warn(\"Request {} to async log dao discarded in executor {}\", runnable, executor);\n                 Monitors.recordDiscardedIndexingCount(\"logQueue\");\n             });\n \n         Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(this::flushBulkRequests, 60, 30, TimeUnit.SECONDS);\n-\n     }\n \n     @PreDestroy\n     private void shutdown() {\n-        logger.info(\"Gracefully shutdown executor service\");\n+        LOGGER.info(\"Gracefully shutdown executor service\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3ODM5Mg==", "bodyText": "Why do you explicitly call the current thread's interrupt, instead of letting the exception float up? At the very least you're loosing the context of the original exception.", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423378392", "createdAt": "2020-05-11T23:34:10Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -206,13 +195,13 @@ private void shutdownExecutorService(ExecutorService execService) {\n         try {\n             execService.shutdown();\n             if (execService.awaitTermination(30, TimeUnit.SECONDS)) {\n-                logger.debug(\"tasks completed, shutting down\");\n+                LOGGER.debug(\"tasks completed, shutting down\");\n             } else {\n-                logger.warn(\"Forcing shutdown after waiting for 30 seconds\");\n+                LOGGER.warn(\"Forcing shutdown after waiting for 30 seconds\");\n                 execService.shutdownNow();\n             }\n         } catch (InterruptedException ie) {\n-            logger.warn(\"Shutdown interrupted, invoking shutdownNow on scheduledThreadPoolExecutor for delay queue\");\n+            LOGGER.warn(\"Shutdown interrupted, invoking shutdownNow on scheduledThreadPoolExecutor for delay queue\");\n             execService.shutdownNow();\n             Thread.currentThread().interrupt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3ODkxMQ==", "bodyText": "(Following up on our conversation)\nI think this could be refactored to use an in-memory queue and an indexer class when index management is enabled. That way we'll have comparable architecture in both cases (producer -> queue -> indexer)\nAll this logic would remain the same, but isolated in it's own class, and that class can be re-used from the indexer service, when you decide your deployment requires an independent service.", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423378911", "createdAt": "2020-05-11T23:36:01Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -222,12 +211,11 @@ private void shutdownExecutorService(ExecutorService execService) {\n     public void setup() throws Exception {\n         waitForHealthyCluster();\n \n-        createIndexesTemplates();\n-\n-        createWorkflowIndex();\n-\n-        createTaskIndex();\n-\n+        if (config.isElasticSearchAutoIndexManagementEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MDQ5OA==", "bodyText": "When you get this error, doesn't the whole system end up in a bad state? Here you're just logging and continuing on, but something really bad happened. Does it make sense to let the process go on?", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423380498", "createdAt": "2020-05-11T23:40:59Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/dao/es6/index/ElasticSearchDAOV6.java", "diffHunk": "@@ -310,20 +298,20 @@ private void createIndex(String indexName) {\n                         .create(createIndexRequest)\n                         .actionGet();\n             } catch (ResourceAlreadyExistsException done) {\n-                logger.error(\"Failed to update log index name: {}\", indexName, done);\n+                LOGGER.error(\"Failed to update log index name: {}\", indexName, done);\n             }\n         }\n     }\n \n     private void addTypeMapping(String indexName, String type, String sourcePath) {\n         GetMappingsResponse getMappingsResponse = elasticSearchClient.admin().indices().prepareGetMappings(indexName).addTypes(type).execute().actionGet();\n         if (getMappingsResponse.mappings().isEmpty()) {\n-            logger.info(\"Adding the {} type mappings\", indexName);\n+            LOGGER.info(\"Adding the {} type mappings\", indexName);\n             try {\n                 String source = loadTypeMappingSource(sourcePath);\n                 elasticSearchClient.admin().indices().preparePutMapping(indexName).setType(type).setSource(source, XContentType.JSON).execute().actionGet();\n             } catch (Exception e) {\n-                logger.error(\"Failed to init index \" + indexName + \" mappings\", e);\n+                LOGGER.error(\"Failed to init index \" + indexName + \" mappings\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MjkyNQ==", "bodyText": "Javadoc? :)", "url": "https://github.com/Netflix/conductor/pull/1675#discussion_r423382925", "createdAt": "2020-05-11T23:48:41Z", "author": {"login": "AlejandroJorgePerez"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/elasticsearch/SystemPropertiesElasticSearchConfiguration.java", "diffHunk": "@@ -1,7 +1,20 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n package com.netflix.conductor.elasticsearch;\n \n import com.netflix.conductor.core.config.SystemPropertiesConfiguration;\n \n public class SystemPropertiesElasticSearchConfiguration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cecf139e791c92502370444c5a6623254bf0eca", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/5cecf139e791c92502370444c5a6623254bf0eca", "committedDate": "2020-05-11T07:44:04Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "02069453045cab658035f4c66ce31c059ee0d60f", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/02069453045cab658035f4c66ce31c059ee0d60f", "committedDate": "2020-05-12T01:40:18Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02069453045cab658035f4c66ce31c059ee0d60f", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/02069453045cab658035f4c66ce31c059ee0d60f", "committedDate": "2020-05-12T01:40:18Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "e220d01139534a9a1f85704b3dc47acb115eab7c", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/e220d01139534a9a1f85704b3dc47acb115eab7c", "committedDate": "2020-05-12T01:44:20Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e220d01139534a9a1f85704b3dc47acb115eab7c", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/e220d01139534a9a1f85704b3dc47acb115eab7c", "committedDate": "2020-05-12T01:44:20Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "8a952ad534ccbe0afba41734bc4fb1af9786fd1f", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/8a952ad534ccbe0afba41734bc4fb1af9786fd1f", "committedDate": "2020-05-12T01:45:19Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8810a85f7ed1759f5316c5f0e276341ed0f96743", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/8810a85f7ed1759f5316c5f0e276341ed0f96743", "committedDate": "2020-05-13T00:46:02Z", "message": "wip"}, "afterCommit": {"oid": "7b9e4e457d1615dab3b513a8c7760bfa834fcd7f", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/7b9e4e457d1615dab3b513a8c7760bfa834fcd7f", "committedDate": "2020-05-13T04:19:10Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b9e4e457d1615dab3b513a8c7760bfa834fcd7f", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/7b9e4e457d1615dab3b513a8c7760bfa834fcd7f", "committedDate": "2020-05-13T04:19:10Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "427ada64625340e77a2b937c03d04fa084a58e80", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/427ada64625340e77a2b937c03d04fa084a58e80", "committedDate": "2020-05-13T07:28:38Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "427ada64625340e77a2b937c03d04fa084a58e80", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/427ada64625340e77a2b937c03d04fa084a58e80", "committedDate": "2020-05-13T07:28:38Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "97c633bbd9e92f2918b3ccde45ed6b7ec8ec924a", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/97c633bbd9e92f2918b3ccde45ed6b7ec8ec924a", "committedDate": "2020-05-13T19:28:01Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167180ad517ef8d65679e2094ad3a63f4920cd5b", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/167180ad517ef8d65679e2094ad3a63f4920cd5b", "committedDate": "2020-05-13T20:17:10Z", "message": "add configuration to enable external index management in es6"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97c633bbd9e92f2918b3ccde45ed6b7ec8ec924a", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/97c633bbd9e92f2918b3ccde45ed6b7ec8ec924a", "committedDate": "2020-05-13T19:28:01Z", "message": "add configuration to enable external index management in es6"}, "afterCommit": {"oid": "167180ad517ef8d65679e2094ad3a63f4920cd5b", "author": {"user": {"login": "apanicker-nflx", "name": "Anoop Panicker"}}, "url": "https://github.com/Netflix/conductor/commit/167180ad517ef8d65679e2094ad3a63f4920cd5b", "committedDate": "2020-05-13T20:17:10Z", "message": "add configuration to enable external index management in es6"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 783, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}