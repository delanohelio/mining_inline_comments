{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2Mjk2NTk3", "number": 1651, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTo0ODozOFrOD3ZPiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTo0ODozOFrOD3ZPiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDExODQ4OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTo0ODozOFrOGNoSGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoyMTozMFrOGXAqMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0NDY2NQ==", "bodyText": "Please add test(s) for getWorkflowDef as we are casting the object to WorkflowDef class.", "url": "https://github.com/Netflix/conductor/pull/1651#discussion_r416944665", "createdAt": "2020-04-28T21:48:38Z", "author": {"login": "kishorebanala"}, "path": "common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java", "diffHunk": "@@ -38,4 +39,11 @@ public void testWorkflowSetTaskToDomain() {\n         subWorkflowParams.setTaskToDomain(taskToDomain);\n         assertEquals(taskToDomain, subWorkflowParams.getTaskToDomain());\n     }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testSetWorkflowDefinition() {\n+        SubWorkflowParams subWorkflowParams = new SubWorkflowParams();//name is null\n+        subWorkflowParams.setName(\"dummy-name\");\n+        subWorkflowParams.setWorkflowDefinition(new Object());\n+    }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3229516ae192fe1b821390e622cdcde7bc7e2d13"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTIzNA==", "bodyText": "Done.", "url": "https://github.com/Netflix/conductor/pull/1651#discussion_r426781234", "createdAt": "2020-05-18T17:21:30Z", "author": {"login": "jun-he"}, "path": "common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java", "diffHunk": "@@ -38,4 +39,11 @@ public void testWorkflowSetTaskToDomain() {\n         subWorkflowParams.setTaskToDomain(taskToDomain);\n         assertEquals(taskToDomain, subWorkflowParams.getTaskToDomain());\n     }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testSetWorkflowDefinition() {\n+        SubWorkflowParams subWorkflowParams = new SubWorkflowParams();//name is null\n+        subWorkflowParams.setName(\"dummy-name\");\n+        subWorkflowParams.setWorkflowDefinition(new Object());\n+    }\n }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0NDY2NQ=="}, "originalCommit": {"oid": "3229516ae192fe1b821390e622cdcde7bc7e2d13"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4180, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}