{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MzE5Nzc2", "number": 1728, "title": "LocalOnly sharding strategy for dyno queues", "bodyText": "Allow no distribution of workload in dyno queues.\nBy default tasks are distributed across all conductor instances using\ndyno queue shards.\nNow it is possible to only queue workfload for conductor-server that\nstarted the workflow.\nMore in docs.", "createdAt": "2020-06-05T08:59:14Z", "url": "https://github.com/Netflix/conductor/pull/1728", "merged": true, "mergeCommit": {"oid": "615c00b1a13123c39ec3d9c41092404c660e7954"}, "closed": true, "closedAt": "2020-06-22T23:27:20Z", "author": {"login": "marosmars"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpklVGABqjM0MjQ3Mjg2NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct5bURAFqTQzNTM0MDM3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0b2b18743902e07836cd26e42a94a8367de2f1a", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/f0b2b18743902e07836cd26e42a94a8367de2f1a", "committedDate": "2020-06-09T12:14:03Z", "message": "Introduce LocalOnly locking provider\n\nThis implementation provides sufficient locking for a single\nnode deployment.\n\nImplemented inside JVM only (locks are not persisted).\n\nCan be used in a cluster deployment but only when localOnly sharding\nstrategy is used for dyno queues.\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}, "afterCommit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/a40b042cecec528909497dbd2e2e64b1486039df", "committedDate": "2020-06-09T12:54:10Z", "message": "Introduce LocalOnly locking provider\n\nThis implementation provides sufficient locking for a single\nnode deployment.\n\nImplemented inside JVM only (locks are not persisted).\n\nCan be used in a cluster deployment but only when localOnly sharding\nstrategy is used for dyno queues.\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDg2NDY5", "url": "https://github.com/Netflix/conductor/pull/1728#pullrequestreview-431086469", "createdAt": "2020-06-16T00:50:53Z", "commit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo1MDo1M1rOGkHfNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMToxOToxNVrOGkH82Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyNDU5OA==", "bodyText": "Nit: Please use the latest copyright.", "url": "https://github.com/Netflix/conductor/pull/1728#discussion_r440524598", "createdAt": "2020-06-16T00:50:53Z", "author": {"login": "kishorebanala"}, "path": "core/src/main/java/com/netflix/conductor/core/utils/LocalOnlyLock.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright (c) 2019 Netflix, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMDk4Mw==", "bodyText": "Unused imports?", "url": "https://github.com/Netflix/conductor/pull/1728#discussion_r440530983", "createdAt": "2020-06-16T01:14:41Z", "author": {"login": "kishorebanala"}, "path": "redis-persistence/src/main/java/com/netflix/conductor/dao/dynomite/queue/DynoQueueDAO.java", "diffHunk": "@@ -24,6 +24,8 @@\n import com.netflix.dyno.queues.ShardSupplier;\n import com.netflix.dyno.queues.redis.RedisDynoQueue;\n import com.netflix.dyno.queues.redis.RedisQueues;\n+import com.netflix.dyno.queues.redis.sharding.RoundRobinStrategy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMjE4NQ==", "bodyText": "Nit: Please use the latest copyright.", "url": "https://github.com/Netflix/conductor/pull/1728#discussion_r440532185", "createdAt": "2020-06-16T01:19:15Z", "author": {"login": "kishorebanala"}, "path": "redis-persistence/src/main/java/com/netflix/conductor/dyno/RedisQueuesShardingStrategyProvider.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2016 Netflix, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71f86fef47cdab180ea5ec8d96df496a569dea81", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/71f86fef47cdab180ea5ec8d96df496a569dea81", "committedDate": "2020-06-16T08:46:17Z", "message": "LocalOnly sharding strategy for dyno queues\n\nAllow no distribution of workload in dyno queues.\nBy default tasks are distributed across all conductor instances using\ndyno queue shards.\nNow it is possible to only queue workfload for conductor-server that\nstarted the workflow.\n\nMore in docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b184888dac090d40963eb1d7332c897c79b1403", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/1b184888dac090d40963eb1d7332c897c79b1403", "committedDate": "2020-06-16T08:46:17Z", "message": "Add unit test for sharding strategy provider\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e93ef8a1a2d84d793eb92593376511049bed5dcf", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/e93ef8a1a2d84d793eb92593376511049bed5dcf", "committedDate": "2020-06-16T08:46:17Z", "message": "Introduce LocalOnly locking provider\n\nThis implementation provides sufficient locking for a single\nnode deployment.\n\nImplemented inside JVM only (locks are not persisted).\n\nCan be used in a cluster deployment but only when localOnly sharding\nstrategy is used for dyno queues.\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2308ba92dc5b7a979353ae94c5395df72c7fb98f", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/2308ba92dc5b7a979353ae94c5395df72c7fb98f", "committedDate": "2020-06-16T09:03:07Z", "message": "Fix headers and unused imports for localOnly sharding\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a40b042cecec528909497dbd2e2e64b1486039df", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/a40b042cecec528909497dbd2e2e64b1486039df", "committedDate": "2020-06-09T12:54:10Z", "message": "Introduce LocalOnly locking provider\n\nThis implementation provides sufficient locking for a single\nnode deployment.\n\nImplemented inside JVM only (locks are not persisted).\n\nCan be used in a cluster deployment but only when localOnly sharding\nstrategy is used for dyno queues.\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}, "afterCommit": {"oid": "2308ba92dc5b7a979353ae94c5395df72c7fb98f", "author": {"user": {"login": "marosmars", "name": "Maros Marsalek"}}, "url": "https://github.com/Netflix/conductor/commit/2308ba92dc5b7a979353ae94c5395df72c7fb98f", "committedDate": "2020-06-16T09:03:07Z", "message": "Fix headers and unused imports for localOnly sharding\n\nSigned-off-by: Maros Marsalek <mmarsalek@frinx.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzQwMzcz", "url": "https://github.com/Netflix/conductor/pull/1728#pullrequestreview-435340373", "createdAt": "2020-06-22T23:27:06Z", "commit": {"oid": "2308ba92dc5b7a979353ae94c5395df72c7fb98f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 803, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}