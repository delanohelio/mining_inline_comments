{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NTM1NDQ4", "number": 2003, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjoyNjo1NVrOFI2iPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzowMTo0MVrOFI2_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODI2NDI5OnYy", "diffSide": "RIGHT", "path": "cassandra-persistence/src/test/resources/logback-test.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjoyNjo1NVrOILATjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToyMDoxMFrOILYW3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxMDI1NQ==", "bodyText": "Is this needed? Default log configuration is log4j2", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548410255", "createdAt": "2020-12-24T06:26:55Z", "author": {"login": "aravindanr"}, "path": "cassandra-persistence/src/test/resources/logback-test.xml", "diffHunk": "@@ -1,3 +1,20 @@\n+<!--\n+\n+    Copyright 2020 Netflix, Inc.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n <configuration>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNDMxOA==", "bodyText": "yes good point, will get rid of this log configuration file", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548804318", "createdAt": "2020-12-25T05:20:10Z", "author": {"login": "apanicker-nflx"}, "path": "cassandra-persistence/src/test/resources/logback-test.xml", "diffHunk": "@@ -1,3 +1,20 @@\n+<!--\n+\n+    Copyright 2020 Netflix, Inc.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n <configuration>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxMDI1NQ=="}, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODI5MjExOnYy", "diffSide": "RIGHT", "path": "contribs/src/main/java/com/netflix/conductor/contribs/listener/archive/ArchivingWorkflowListenerProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjozMzo0N1rOILAlgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDowNzowM1rOIMERQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNDg1MQ==", "bodyText": "The property could be of type Duration. Not required, but maybe worth considering, https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-conversion-duration", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548414851", "createdAt": "2020-12-24T06:33:47Z", "author": {"login": "aravindanr"}, "path": "contribs/src/main/java/com/netflix/conductor/contribs/listener/archive/ArchivingWorkflowListenerProperties.java", "diffHunk": "@@ -12,46 +12,51 @@\n  */\n package com.netflix.conductor.contribs.listener.archive;\n \n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.core.env.Environment;\n-import org.springframework.stereotype.Component;\n \n-@Component\n-@ConditionalOnProperty(prefix = \"workflow\", name = \"status.listener.type\", havingValue = \"archive\")\n+@ConfigurationProperties(\"conductor.workflow-status-listener.archival\")\n public class ArchivingWorkflowListenerProperties {\n \n     private final Environment environment;\n \n+    @Autowired\n     public ArchivingWorkflowListenerProperties(Environment environment) {\n         this.environment = environment;\n     }\n \n     /**\n      * The time to live in seconds for workflow archiving module. Currently, only RedisExecutionDAO supports this\n      */\n-    @Value(\"${workflow.archival.ttl.seconds:0}\")\n-    private int workflowArchivalTTL;\n+    private int ttlSeconds = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc3Ng==", "bodyText": "Good idea, I will do this in a separate PR, since this one is already so huge. It will also make this easier to document.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r549523776", "createdAt": "2020-12-29T00:07:03Z", "author": {"login": "apanicker-nflx"}, "path": "contribs/src/main/java/com/netflix/conductor/contribs/listener/archive/ArchivingWorkflowListenerProperties.java", "diffHunk": "@@ -12,46 +12,51 @@\n  */\n package com.netflix.conductor.contribs.listener.archive;\n \n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.core.env.Environment;\n-import org.springframework.stereotype.Component;\n \n-@Component\n-@ConditionalOnProperty(prefix = \"workflow\", name = \"status.listener.type\", havingValue = \"archive\")\n+@ConfigurationProperties(\"conductor.workflow-status-listener.archival\")\n public class ArchivingWorkflowListenerProperties {\n \n     private final Environment environment;\n \n+    @Autowired\n     public ArchivingWorkflowListenerProperties(Environment environment) {\n         this.environment = environment;\n     }\n \n     /**\n      * The time to live in seconds for workflow archiving module. Currently, only RedisExecutionDAO supports this\n      */\n-    @Value(\"${workflow.archival.ttl.seconds:0}\")\n-    private int workflowArchivalTTL;\n+    private int ttlSeconds = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNDg1MQ=="}, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODMyOTIxOnYy", "diffSide": "RIGHT", "path": "docker/server/config/config-mysql.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjo1NToxOFrOILA6OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToyNDoyNVrOILYYvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDE1Mw==", "bodyText": "Is this property needed? I think its not even considered anymore.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548420153", "createdAt": "2020-12-24T06:55:18Z", "author": {"login": "aravindanr"}, "path": "docker/server/config/config-mysql.properties", "diffHunk": "@@ -1,6 +1,6 @@\n # Servers.\n conductor.jetty.server.enabled=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNDc5OQ==", "bodyText": "good catch, i still have to cleanup the property files in the docker directories, will add this in the next commit", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548804799", "createdAt": "2020-12-25T05:24:25Z", "author": {"login": "apanicker-nflx"}, "path": "docker/server/config/config-mysql.properties", "diffHunk": "@@ -1,6 +1,6 @@\n # Servers.\n conductor.jetty.server.enabled=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDE1Mw=="}, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODMzNDA0OnYy", "diffSide": "RIGHT", "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchConditions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjo1Nzo1OFrOILA88g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToyOToyNFrOILYbgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDg1MA==", "bodyText": "Considering the fact that es5-persistence is moved out and the default is now ES6. Is this property needed? Can we constrain ES6 enablement on just this conductor.indexing.enabled?", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548420850", "createdAt": "2020-12-24T06:57:58Z", "author": {"login": "aravindanr"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchConditions.java", "diffHunk": "@@ -27,13 +27,13 @@ private ElasticSearchConditions() {\n         }\n \n         @SuppressWarnings(\"unused\")\n-        @ConditionalOnProperty(prefix = \"workflow\", name = \"indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n+        @ConditionalOnProperty(name = \"conductor.indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n         static class enabledIndexing {\n \n         }\n \n         @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTUwNw==", "bodyText": "We can remove this property, but historically, we have always added the support for the next elasticsearch version to co-exist with currently supported version. With version 1.x es2 was default (es5 shaded support), with version 2.x es5 is default (es6 shaded support). I believe we will continue this pattern with es7 in v3.x. The existence of this property makes it easy to add this module in the future.\nIf it feels too hand-wavy for the future, I can remove this.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548805507", "createdAt": "2020-12-25T05:29:24Z", "author": {"login": "apanicker-nflx"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchConditions.java", "diffHunk": "@@ -27,13 +27,13 @@ private ElasticSearchConditions() {\n         }\n \n         @SuppressWarnings(\"unused\")\n-        @ConditionalOnProperty(prefix = \"workflow\", name = \"indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n+        @ConditionalOnProperty(name = \"conductor.indexing.enabled\", havingValue = \"true\", matchIfMissing = true)\n         static class enabledIndexing {\n \n         }\n \n         @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMDg1MA=="}, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODMzNzA1OnYy", "diffSide": "RIGHT", "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNjo1OToyOVrOILA-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwNToyODozOVrOILYbLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTI2Mw==", "bodyText": "I think we can even change the package name to  just es or elasticsearch or index instead of es6.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548421263", "createdAt": "2020-12-24T06:59:29Z", "author": {"login": "aravindanr"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchProperties.java", "diffHunk": "@@ -12,141 +12,192 @@\n  */\n package com.netflix.conductor.es6.config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgwNTQyMg==", "bodyText": "See comment for es6 condition above.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548805422", "createdAt": "2020-12-25T05:28:39Z", "author": {"login": "apanicker-nflx"}, "path": "es6-persistence/src/main/java/com/netflix/conductor/es6/config/ElasticSearchProperties.java", "diffHunk": "@@ -12,141 +12,192 @@\n  */\n package com.netflix.conductor.es6.config;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTI2Mw=="}, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODM0MDI3OnYy", "diffSide": "RIGHT", "path": "mysql-persistence/src/main/java/com/netflix/conductor/mysql/config/MySQLDataSourceProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzowMTo0MVrOILBAZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNzowMTo0MVrOILBAZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyMTczMg==", "bodyText": "\ud83d\udc4f  attention to detail.", "url": "https://github.com/Netflix/conductor/pull/2003#discussion_r548421732", "createdAt": "2020-12-24T07:01:41Z", "author": {"login": "aravindanr"}, "path": "mysql-persistence/src/main/java/com/netflix/conductor/mysql/config/MySQLDataSourceProvider.java", "diffHunk": "@@ -50,7 +50,7 @@ public DataSource getDataSource() {\n     private HikariConfig createConfiguration() {\n         HikariConfig hikariConfig = new HikariConfig();\n         hikariConfig.setJdbcUrl(properties.getJdbcUrl());\n-        hikariConfig.setUsername(properties.getJdbcUserName());\n+        hikariConfig.setUsername(properties.getJdbcUsername());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a426b317f612856cf5f0c694e8419d1bcedfcd9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4153, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}