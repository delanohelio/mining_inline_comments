{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTM1Mzc4", "number": 1823, "title": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION", "bodyText": "Patch for #1816 .\nWhat I changed\nIf the last inner task of DO_WHILE was completed and call getNextTask() in decide(), I return the DO_WHILE task (In current code, it will return the next task of DO_WHILE).\nAnd then, in DeciderService.getNextTask(), I check if the DO_WHILE task already exists in the workflow's tasks. If it exists, just ignore it.", "createdAt": "2020-08-06T16:33:42Z", "url": "https://github.com/Netflix/conductor/pull/1823", "merged": true, "mergeCommit": {"oid": "fc533a6be3306335cf6a1f1ba3b322fd480e174c"}, "closed": true, "closedAt": "2020-10-14T00:04:43Z", "author": {"login": "alex-fu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-2_msAFqTQ2NzY5OTE1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQh5A_AH2gAyNDY0MTM1Mzc4OjMxNDAxOTM1NzFjNTFkOTRkZTRhZGFjZmM0ZDNhYjQ3YmExZmEyYTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3Njk5MTU5", "url": "https://github.com/Netflix/conductor/pull/1823#pullrequestreview-467699159", "createdAt": "2020-08-14T16:10:41Z", "commit": {"oid": "d4a33fcc451eed883d04ae9ea38fae6634083665"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoxMDo0MVrOHA6bgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjoxMzoyOVrOHA6g7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxOTM2MQ==", "bodyText": "@alex-fu Since we are diverging the DECISION block by so many lines of code. We can define a separate switch case for DO_WHILE task. And move common code to one function.", "url": "https://github.com/Netflix/conductor/pull/1823#discussion_r470719361", "createdAt": "2020-08-14T16:10:41Z", "author": {"login": "manan164"}, "path": "common/src/main/java/com/netflix/conductor/common/metadata/workflow/WorkflowTask.java", "diffHunk": "@@ -569,6 +569,13 @@ public WorkflowTask next(String taskReferenceName, WorkflowTask parent) {\n \t\t\t\t\t\t\treturn nextTask;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (task.has(taskReferenceName)) {\n+\t\t\t\t\t\t\tif (TaskType.DO_WHILE.name().equals(task.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a33fcc451eed883d04ae9ea38fae6634083665"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyMDc0OA==", "bodyText": "Why we are returning an empty list. We are making get next task to return the parent DO_WHILE task let it propagates it further to decider service.", "url": "https://github.com/Netflix/conductor/pull/1823#discussion_r470720748", "createdAt": "2020-08-14T16:13:29Z", "author": {"login": "manan164"}, "path": "core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java", "diffHunk": "@@ -362,6 +363,13 @@ private boolean checkForWorkflowCompletion(final Workflow workflow) throws Termi\n         while (isTaskSkipped(taskToSchedule, workflow)) {\n             taskToSchedule = workflowDef.getNextTask(taskToSchedule.getTaskReferenceName());\n         }\n+        if (taskToSchedule != null && TaskType.DO_WHILE.name().equals(taskToSchedule.getType())) {\n+            // check if already has this DO_WHILE task, ignore it if it already exists\n+            String nextTaskReferenceName = taskToSchedule.getTaskReferenceName();\n+            if (workflow.getTasks().stream().anyMatch(runningTask -> runningTask.getReferenceTaskName().equals(nextTaskReferenceName))) {\n+                return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a33fcc451eed883d04ae9ea38fae6634083665"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4a33fcc451eed883d04ae9ea38fae6634083665", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/d4a33fcc451eed883d04ae9ea38fae6634083665", "committedDate": "2020-08-05T16:11:22Z", "message": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION"}, "afterCommit": {"oid": "73bdde4bec2f3120b22d8b321a1531acced7ac1f", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/73bdde4bec2f3120b22d8b321a1531acced7ac1f", "committedDate": "2020-09-26T08:40:04Z", "message": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e80fea4c8b9d22f4b8c9eb32cbe52e798f3dff6c", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/e80fea4c8b9d22f4b8c9eb32cbe52e798f3dff6c", "committedDate": "2020-10-07T16:22:03Z", "message": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73bdde4bec2f3120b22d8b321a1531acced7ac1f", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/73bdde4bec2f3120b22d8b321a1531acced7ac1f", "committedDate": "2020-09-26T08:40:04Z", "message": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION"}, "afterCommit": {"oid": "e80fea4c8b9d22f4b8c9eb32cbe52e798f3dff6c", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/e80fea4c8b9d22f4b8c9eb32cbe52e798f3dff6c", "committedDate": "2020-10-07T16:22:03Z", "message": "1816: getNextTask will get wrong task if DO_WHILE task is embed in FORK or DECISION"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce62d75e84d8f1fdb7d603d7c98ef0c952789168", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/ce62d75e84d8f1fdb7d603d7c98ef0c952789168", "committedDate": "2020-10-08T12:38:14Z", "message": "1816: refactor WorkflowTask.next(); add integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3140193571c51d94de4adacfc4d3ab47ba1fa2a0", "author": {"user": {"login": "alex-fu", "name": null}}, "url": "https://github.com/Netflix/conductor/commit/3140193571c51d94de4adacfc4d3ab47ba1fa2a0", "committedDate": "2020-10-08T13:49:10Z", "message": "1816: refine getNextTask in WorkflowDef"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}