{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODg1OTYz", "number": 1719, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDowMDoyOFrOEDqmew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDowMDo1OFrOEDqm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjc5MTYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDowMDoyOFrOGg0TRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NjowMlrOGjlFrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2NDUxOQ==", "bodyText": "Does this need to be a separate method? This could be rolled into the methods defined above where numSlots=1.", "url": "https://github.com/Netflix/conductor/pull/1719#discussion_r437064519", "createdAt": "2020-06-09T00:00:28Z", "author": {"login": "apanicker-nflx"}, "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "diffHunk": "@@ -62,4 +63,23 @@ public int availableSlots() {\n         LOGGER.debug(\"Number of available permits: {}\", available);\n         return available;\n     }\n+\n+    /**\n+     * Signals if processing is allowed based on whether specified number of permits can be acquired.\n+     *\n+     * @param numSlots the number of permits to acquire\n+     * @return {@code true} - if permit is acquired\n+     * {@code false} - if permit could not be acquired\n+     */\n+    public boolean acquireSlots(int numSlots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f610012369d65ba7679d192e4aec5e9ec4567c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTAwNw==", "bodyText": "Thanks for the suggestion. Using the extended method with numSlots=1 now.", "url": "https://github.com/Netflix/conductor/pull/1719#discussion_r439961007", "createdAt": "2020-06-15T06:46:02Z", "author": {"login": "mdepak"}, "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "diffHunk": "@@ -62,4 +63,23 @@ public int availableSlots() {\n         LOGGER.debug(\"Number of available permits: {}\", available);\n         return available;\n     }\n+\n+    /**\n+     * Signals if processing is allowed based on whether specified number of permits can be acquired.\n+     *\n+     * @param numSlots the number of permits to acquire\n+     * @return {@code true} - if permit is acquired\n+     * {@code false} - if permit could not be acquired\n+     */\n+    public boolean acquireSlots(int numSlots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2NDUxOQ=="}, "originalCommit": {"oid": "71f610012369d65ba7679d192e4aec5e9ec4567c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjc5MjYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDowMDo1OFrOGg0T4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0NjowN1rOGjlF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2NDY3Mg==", "bodyText": "same as above.", "url": "https://github.com/Netflix/conductor/pull/1719#discussion_r437064672", "createdAt": "2020-06-09T00:00:58Z", "author": {"login": "apanicker-nflx"}, "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "diffHunk": "@@ -62,4 +63,23 @@ public int availableSlots() {\n         LOGGER.debug(\"Number of available permits: {}\", available);\n         return available;\n     }\n+\n+    /**\n+     * Signals if processing is allowed based on whether specified number of permits can be acquired.\n+     *\n+     * @param numSlots the number of permits to acquire\n+     * @return {@code true} - if permit is acquired\n+     * {@code false} - if permit could not be acquired\n+     */\n+    public boolean acquireSlots(int numSlots) {\n+        return semaphore.tryAcquire(numSlots);\n+    }\n+\n+    /**\n+     * Signals that processing is complete and the specified number of permits can be released.\n+     */\n+    public void completeProcessing(int numSlots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f610012369d65ba7679d192e4aec5e9ec4567c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTA0OA==", "bodyText": "Fixed it.", "url": "https://github.com/Netflix/conductor/pull/1719#discussion_r439961048", "createdAt": "2020-06-15T06:46:07Z", "author": {"login": "mdepak"}, "path": "core/src/main/java/com/netflix/conductor/core/utils/SemaphoreUtil.java", "diffHunk": "@@ -62,4 +63,23 @@ public int availableSlots() {\n         LOGGER.debug(\"Number of available permits: {}\", available);\n         return available;\n     }\n+\n+    /**\n+     * Signals if processing is allowed based on whether specified number of permits can be acquired.\n+     *\n+     * @param numSlots the number of permits to acquire\n+     * @return {@code true} - if permit is acquired\n+     * {@code false} - if permit could not be acquired\n+     */\n+    public boolean acquireSlots(int numSlots) {\n+        return semaphore.tryAcquire(numSlots);\n+    }\n+\n+    /**\n+     * Signals that processing is complete and the specified number of permits can be released.\n+     */\n+    public void completeProcessing(int numSlots) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2NDY3Mg=="}, "originalCommit": {"oid": "71f610012369d65ba7679d192e4aec5e9ec4567c"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4201, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}