{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODMzMjc0", "number": 1831, "title": "JSON_JQ_TRANSFORM - complete system task development", "bodyText": "Complete JSON_JQ_TRANSFORM development\n\n Add to TaskType enum\n Create TaskMapper (& unit test)\n Add mapper to CoreModule\n Add constraint validation to required queryExpression input parameter (& unit test)\n Add spock integration test\n Add new system task to docs\n\nSince this change JSON_JQ_TRANSFORM will no longer require a task definition (optional)", "createdAt": "2020-08-17T13:29:57Z", "url": "https://github.com/Netflix/conductor/pull/1831", "merged": true, "mergeCommit": {"oid": "326a73d8906eae4ee3927da710289c932cd357e1"}, "closed": true, "closedAt": "2020-08-25T23:26:55Z", "author": {"login": "elisherer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_yTwygH2gAyNDY4ODMzMjc0OmJlM2YyZmY0M2RhMDU5ZTE0NzRiYWFkNjNkODA2MjhjYWMyZGFjMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCfwXRAFqTQ3NTA1MTA0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be3f2ff43da059e1474baad63d80628cac2dac37", "author": {"user": null}, "url": "https://github.com/Netflix/conductor/commit/be3f2ff43da059e1474baad63d80628cac2dac37", "committedDate": "2020-08-17T13:20:09Z", "message": "JSON_JQ_TRANSFORM - complete system task development"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16c0f049661c6ac2228d551917b0ce7ba13883b1", "author": {"user": null}, "url": "https://github.com/Netflix/conductor/commit/16c0f049661c6ac2228d551917b0ce7ba13883b1", "committedDate": "2020-08-17T14:03:19Z", "message": "JSON_JQ_TRANSFORM - remove unused dep from test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4OTExNDcz", "url": "https://github.com/Netflix/conductor/pull/1831#pullrequestreview-468911473", "createdAt": "2020-08-18T00:16:20Z", "commit": {"oid": "16c0f049661c6ac2228d551917b0ce7ba13883b1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoxNjoyMVrOHB--0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoxNzoyMVrOHB-_7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0MjUxNQ==", "bodyText": "Please add license header", "url": "https://github.com/Netflix/conductor/pull/1831#discussion_r471842515", "createdAt": "2020-08-18T00:16:21Z", "author": {"login": "apanicker-nflx"}, "path": "core/src/test/java/com/netflix/conductor/core/execution/mapper/JsonJQTransformTaskMapperTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package com.netflix.conductor.core.execution.mapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16c0f049661c6ac2228d551917b0ce7ba13883b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0Mjc5OQ==", "bodyText": "This is great, thanks for adding documentation.", "url": "https://github.com/Netflix/conductor/pull/1831#discussion_r471842799", "createdAt": "2020-08-18T00:17:21Z", "author": {"login": "apanicker-nflx"}, "path": "docs/docs/configuration/systask.md", "diffHunk": "@@ -675,3 +675,42 @@ Do while task does NOT support domain or isolation group execution. Nesting of D\n ```\n If any of loopover task will be failed then do while task will be failed. In such case retry will start iteration from 1. TaskType SUB_WORKFLOW is not supported as a part of loopover task. Since loopover tasks will be executed in loop inside scope of parent do while task, crossing branching outside of DO_WHILE task will not be respected. Branching inside loopover task will be supported.\n In case of exception while evaluating loopCondition, do while task will be failed with FAILED_WITH_TERMINAL_ERROR.\n+\n+## JSON JQ Transform Task", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16c0f049661c6ac2228d551917b0ce7ba13883b1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d62b4d9f65be762c7096bb2294e149243b0d6ce", "author": {"user": null}, "url": "https://github.com/Netflix/conductor/commit/5d62b4d9f65be762c7096bb2294e149243b0d6ce", "committedDate": "2020-08-18T10:30:37Z", "message": "JSON_JQ_TRANSFORM - Add integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5ca2121c384189b79d720b044e44d9c048c11f1", "author": {"user": null}, "url": "https://github.com/Netflix/conductor/commit/b5ca2121c384189b79d720b044e44d9c048c11f1", "committedDate": "2020-08-18T11:12:10Z", "message": "Add WorkflowTaskTypeConstraintTest with JSON_JQ_TRANSFORM tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62cd9a362a9aaf5bdf619b4288d38bbe0cc837f", "author": {"user": null}, "url": "https://github.com/Netflix/conductor/commit/d62cd9a362a9aaf5bdf619b4288d38bbe0cc837f", "committedDate": "2020-08-18T11:15:53Z", "message": "System Tasks markdown typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDQ2NDA3", "url": "https://github.com/Netflix/conductor/pull/1831#pullrequestreview-475046407", "createdAt": "2020-08-25T23:12:03Z", "commit": {"oid": "d62cd9a362a9aaf5bdf619b4288d38bbe0cc837f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxMjowM1rOHGv7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxMjowM1rOHGv7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjgzODY3NQ==", "bodyText": "+1", "url": "https://github.com/Netflix/conductor/pull/1831#discussion_r476838675", "createdAt": "2020-08-25T23:12:03Z", "author": {"login": "kishorebanala"}, "path": "test-harness/src/test/groovy/com/netflix/counductor/integration/test/JsonJQTransformTaskSpec.groovy", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.counductor.integration.test\n+\n+import com.fasterxml.jackson.databind.ObjectMapper\n+import com.netflix.archaius.guice.ArchaiusModule\n+import com.netflix.conductor.common.metadata.tasks.Task\n+import com.netflix.conductor.common.run.Workflow\n+import com.netflix.conductor.common.utils.JsonMapperProvider\n+import com.netflix.conductor.contribs.json.JsonJqTransform\n+import com.netflix.conductor.core.execution.WorkflowExecutor\n+import com.netflix.conductor.service.ExecutionService\n+import com.netflix.conductor.test.util.WorkflowTestUtil\n+import com.netflix.conductor.tests.utils.TestModule\n+import com.netflix.governator.guice.test.ModulesForTesting\n+import spock.lang.Shared\n+import spock.lang.Specification\n+\n+import javax.inject.Inject\n+\n+@ModulesForTesting([TestModule.class, ArchaiusModule.class])\n+class JsonJQTransformTaskSpec extends Specification {\n+\n+    @Inject\n+    ExecutionService workflowExecutionService\n+\n+    @Inject\n+    WorkflowExecutor workflowExecutor\n+\n+    @Inject\n+    WorkflowTestUtil workflowTestUtil\n+\n+    @Shared\n+    ObjectMapper objectMapper = new JsonMapperProvider().get()\n+\n+    @Shared\n+    def JSON_JQ_TRANSFORM_WF = 'test_json_jq_transform_wf'\n+\n+    def setup() {\n+        // We do this to register the JSON JQ TRANSFORM task type as a system task since it's in the contrib module\n+        new JsonJqTransform(objectMapper)\n+\n+        workflowTestUtil.registerWorkflows(\n+            'simple_json_jq_transform_integration_test.json',\n+        )\n+    }\n+\n+    def cleanup() {\n+        workflowTestUtil.clearWorkflows()\n+    }\n+\n+    /**\n+     * Given the following input JSON\n+     * {\n+     *   \"in1\": {\n+     *     \"array\": [ \"a\", \"b\" ]\n+     *   },\n+     *   \"in2\": {\n+     *     \"array\": [ \"c\", \"d\" ]\n+     *   }\n+     * }\n+     * expect the workflow task to transform to following result:\n+     * {\n+     *     out: [ \"a\", \"b\", \"c\", \"d\" ]\n+     * }\n+     */\n+    def \"Test workflow with json jq transform task succeeds\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62cd9a362a9aaf5bdf619b4288d38bbe0cc837f"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDUxMDQ4", "url": "https://github.com/Netflix/conductor/pull/1831#pullrequestreview-475051048", "createdAt": "2020-08-25T23:24:58Z", "commit": {"oid": "d62cd9a362a9aaf5bdf619b4288d38bbe0cc837f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 689, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}