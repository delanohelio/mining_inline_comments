{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MjcwNTc1", "number": 5285, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTowNjo0OVrOEILu5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1ODoxN1rOEIfVcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDE2Mjk0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMTowNjo0OVrOGn_iXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMjo0NDo1MlrOGpyqNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw==", "bodyText": "Since \"LocatorClusterManagementService\" is central to the ClusterConfigurationService; will it be better to have the cms-dlock service created in this class; and have helper method to lock and unlock. Assumption is when the lock is requested the Locator Management service will be up and running.\nlockConfigForUpdate() {}\nunLockConfigForUpdate() {}", "url": "https://github.com/apache/geode/pull/5285#discussion_r444588637", "createdAt": "2020-06-24T01:06:49Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxODQ4OA==", "bodyText": "I believe it is created by this class, see getCmsDlockService in this class", "url": "https://github.com/apache/geode/pull/5285#discussion_r444618488", "createdAt": "2020-06-24T03:03:38Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTk2Mw==", "bodyText": "In this PR. the Dlock is getting created in \"OnlineCommandProcessor.java\"; I don't have latest develop, my guess it may be getting created in rest endpoint too...", "url": "https://github.com/apache/geode/pull/5285#discussion_r445095963", "createdAt": "2020-06-24T18:40:38Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEzNjkxNw==", "bodyText": "they both call DLockService.getOrCreateService, if it's already created, it will just get it. So, I guess whoever get to it first will create it.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445136917", "createdAt": "2020-06-24T19:58:02Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3MzMyMQ==", "bodyText": "Can that creating (getOrCreateService ) be done in one place, in \"LocatorClusterManagementService\" which seems to be right place for it...", "url": "https://github.com/apache/geode/pull/5285#discussion_r445173321", "createdAt": "2020-06-24T21:09:29Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIxNjE1OA==", "bodyText": "Then OnlineCommandProcessor needs to get ahold of LocatorClusterManagementService and get the dLock service from there? What if CMS is not started? Gfsh still needs to have this dLockService.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445216158", "createdAt": "2020-06-24T22:57:15Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg2NzcyNg==", "bodyText": "My understanding was, we have centralized configuration-management class, that is used by both gfsh and rest end-point to make the configuration changes, and I thought it was LocatorClusterManagementService, I guess I am wrong...\nIs it \"InternalConfigurationPersistenceService\" where both gfsh and end-point make the configuration changes...If so, can the dlock creation and unlocking/unlocking helper method be added there.\nI am trying to see if we can have the lock creation in one place, rather than in many clients/apis that make the configuration changes...", "url": "https://github.com/apache/geode/pull/5285#discussion_r445867726", "createdAt": "2020-06-25T22:12:56Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ3NDgwNA==", "bodyText": "Yes, the InternalConfigurationPersistenceService is used by both rest and gfsh to persist the configuration change in the region, and it already has its own dlockService to make sure update to the region is thread safe.\nWhat are trying to. make thread-safe in here is not just \"update to the region\", it's the \"update to the servers and then update the region\", which is a level above the persistence layer.  Both rest and gfsh does this and so both needs the same dlockService.", "url": "https://github.com/apache/geode/pull/5285#discussion_r446474804", "createdAt": "2020-06-27T02:44:52Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -113,7 +113,7 @@\n public class LocatorClusterManagementService implements ClusterManagementService {\n   @VisibleForTesting\n   // the dlock service name used by the CMS\n-  static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";\n+  public static final String CMS_DLOCK_SERVICE_NAME = \"CMS_DLOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4ODYzNw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDE3MTc5OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/GfshCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMToxMjoyMlrOGn_nsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMToxMjoyMlrOGn_nsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDAwMw==", "bodyText": "How about naming it as \"updatesClusterConfiguration\" (); they both are same, just another name to consider, its left to you.", "url": "https://github.com/apache/geode/pull/5285#discussion_r444590003", "createdAt": "2020-06-24T01:12:22Z", "author": {"login": "agingade"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/GfshCommand.java", "diffHunk": "@@ -59,6 +59,14 @@ public boolean isOnlineCommandAvailable() {\n     return gfsh.isConnectedAndReady();\n   }\n \n+  /**\n+   * For those commands that could possibly change the cluster configuration, they need to\n+   * override this method to return true.\n+   */\n+  public boolean affectsClusterConfiguration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDE3NDU0OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/CommandExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMToxMzo1OVrOGn_pRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzowMTo1NlrOGoBVUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDQwNA==", "bodyText": "How about combining all of the if into an AND condition.\nif (cmsDlockService == null && !(command instanceof GfshCommand) &&...)", "url": "https://github.com/apache/geode/pull/5285#discussion_r444590404", "createdAt": "2020-06-24T01:13:59Z", "author": {"login": "agingade"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/CommandExecutor.java", "diffHunk": "@@ -207,4 +219,32 @@ protected Object invokeCommand(Object command, GfshParseResult parseResult) {\n \n     return resultModel;\n   }\n+\n+  @VisibleForTesting\n+  boolean lockCMS(Object command) {\n+    if (cmsDlockService == null) {\n+      return false;\n+    }\n+    if (!(command instanceof GfshCommand)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYxODA2Ng==", "bodyText": "I think this reads better and I plan to add comments in each if block", "url": "https://github.com/apache/geode/pull/5285#discussion_r444618066", "createdAt": "2020-06-24T03:01:56Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/CommandExecutor.java", "diffHunk": "@@ -207,4 +219,32 @@ protected Object invokeCommand(Object command, GfshParseResult parseResult) {\n \n     return resultModel;\n   }\n+\n+  @VisibleForTesting\n+  boolean lockCMS(Object command) {\n+    if (cmsDlockService == null) {\n+      return false;\n+    }\n+    if (!(command instanceof GfshCommand)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDQwNA=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzMxMDY2OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODozOTozMVrOGoedww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDowOToyM1rOGohXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTM2Mw==", "bodyText": "This changes the public API, which could affect those gfsh commands that extend this class.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445095363", "createdAt": "2020-06-24T18:39:31Z", "author": {"login": "jchen21"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "diffHunk": "@@ -39,7 +42,11 @@\n    *        return value of your command method.\n    * @return a boolean indicating whether a change to the cluster configuration was persisted.\n    */\n-  public boolean updateConfigForGroup(String group, CacheConfig config, Object configObject) {\n-    return false;\n+  public abstract boolean updateConfigForGroup(String group, CacheConfig config,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0Mjc5OA==", "bodyText": "this class is @experimental", "url": "https://github.com/apache/geode/pull/5285#discussion_r445142798", "createdAt": "2020-06-24T20:09:23Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "diffHunk": "@@ -39,7 +42,11 @@\n    *        return value of your command method.\n    * @return a boolean indicating whether a change to the cluster configuration was persisted.\n    */\n-  public boolean updateConfigForGroup(String group, CacheConfig config, Object configObject) {\n-    return false;\n+  public abstract boolean updateConfigForGroup(String group, CacheConfig config,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTM2Mw=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzMxMDk4OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODozOTozOVrOGoeeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDowNzoyNFrOGohTIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTQyOQ==", "bodyText": "This changes the public API, which could affect those gfsh commands that extend this class.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445095429", "createdAt": "2020-06-24T18:39:39Z", "author": {"login": "jchen21"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "diffHunk": "@@ -39,7 +42,11 @@\n    *        return value of your command method.\n    * @return a boolean indicating whether a change to the cluster configuration was persisted.\n    */\n-  public boolean updateConfigForGroup(String group, CacheConfig config, Object configObject) {\n-    return false;\n+  public abstract boolean updateConfigForGroup(String group, CacheConfig config,\n+      Object configObject);\n+\n+  @Override\n+  public boolean affectsClusterConfiguration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MTc5NQ==", "bodyText": "It's marked as @experimental", "url": "https://github.com/apache/geode/pull/5285#discussion_r445141795", "createdAt": "2020-06-24T20:07:24Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/cli/SingleGfshCommand.java", "diffHunk": "@@ -39,7 +42,11 @@\n    *        return value of your command method.\n    * @return a boolean indicating whether a change to the cluster configuration was persisted.\n    */\n-  public boolean updateConfigForGroup(String group, CacheConfig config, Object configObject) {\n-    return false;\n+  public abstract boolean updateConfigForGroup(String group, CacheConfig config,\n+      Object configObject);\n+\n+  @Override\n+  public boolean affectsClusterConfiguration() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5NTQyOQ=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzM3NDU3OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/OnlineCommandProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1ODoxN1rOGofF9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDowODozOVrOGohVnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTY1NQ==", "bodyText": "This constructor is used only by tests. e.g. MemberCommandServiceTest. This also leads to adding a new constructor to a deprecated class MemberCommandService. And then changes to MemberCommandServiceTest. I wonder if it is necessary to make this change.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445105655", "createdAt": "2020-06-24T18:58:17Z", "author": {"login": "jchen21"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/OnlineCommandProcessor.java", "diffHunk": "@@ -53,14 +57,13 @@\n \n   private SecurityService securityService;\n \n-  private InternalCache cache;\n-\n   public OnlineCommandProcessor() {}\n \n   @VisibleForTesting\n-  public OnlineCommandProcessor(Properties cacheProperties, SecurityService securityService,\n-      CommandExecutor commandExecutor, InternalCache cache) {\n-    this.gfshParser = new GfshParser(new CommandManager(cacheProperties, cache));\n+  public OnlineCommandProcessor(GfshParser gfshParser,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MjQyOA==", "bodyText": "the change is necessary for the test to pass. All this change is because public methods in DlockService are static.", "url": "https://github.com/apache/geode/pull/5285#discussion_r445142428", "createdAt": "2020-06-24T20:08:39Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/remote/OnlineCommandProcessor.java", "diffHunk": "@@ -53,14 +57,13 @@\n \n   private SecurityService securityService;\n \n-  private InternalCache cache;\n-\n   public OnlineCommandProcessor() {}\n \n   @VisibleForTesting\n-  public OnlineCommandProcessor(Properties cacheProperties, SecurityService securityService,\n-      CommandExecutor commandExecutor, InternalCache cache) {\n-    this.gfshParser = new GfshParser(new CommandManager(cacheProperties, cache));\n+  public OnlineCommandProcessor(GfshParser gfshParser,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTY1NQ=="}, "originalCommit": {"oid": "1628cee1d84a1ecf78b0e6c6ad3f9fe542fc7d7a"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3860, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}