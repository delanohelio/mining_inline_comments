{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3OTcxNTQw", "number": 4639, "title": "GEODE-7728: Fix Assertion Failures in OQL", "bodyText": "Added unit and integration tests.\nBack off from the single index optimisation during join queries if\nwe can't find the (single) best filter, allowing the regular\nexecution to continue and use multiple indexes.\nIf there are multiple indexes, add the filter evaluable operand at\nthe beginning of the internal list to evaluate it first in the chain.\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-01-28T11:53:02Z", "url": "https://github.com/apache/geode/pull/4639", "merged": true, "mergeCommit": {"oid": "6e35c201ea605075433203d4e64ca887bafd8fcb"}, "closed": true, "closedAt": "2020-02-05T12:07:29Z", "author": {"login": "jujoramos"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-v43WgH2gAyMzY3OTcxNTQwOmYyM2NlYTYyYmQyY2Q0OWY0MmZjNGM4ZmZhZTE5MGNiNDdiYmEzODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBTEIfgH2gAyMzY3OTcxNTQwOmRhOGI2NmY3ZWYxN2YwN2EyODljZTcxNGRhOGM3NWY1M2NiMGE3MzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f23cea62bd2cd49f42fc4c8ffae190cb47bba384", "author": {"user": {"login": "jujoramos", "name": "Juan Jos\u00e9 Ramos"}}, "url": "https://github.com/apache/geode/commit/f23cea62bd2cd49f42fc4c8ffae190cb47bba384", "committedDate": "2020-01-28T11:45:53Z", "message": "GEODE-7728: Fix Assertion Failures in OQL\n\n- Added unit and integration tests.\n- Back off from the single index optimisation during join queries if\n  we can't find the (single) best filter, allowing the regular\n  execution to continue and use multiple indexes.\n- If there are multiple indexes, add the filter evaluable operand at\n  the beginning of the internal list to evaluate it first in the chain."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NTc0NTgx", "url": "https://github.com/apache/geode/pull/4639#pullrequestreview-349574581", "createdAt": "2020-01-28T17:44:29Z", "commit": {"oid": "f23cea62bd2cd49f42fc4c8ffae190cb47bba384"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0NDoyOVrOFiucRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0NDoyOVrOFiucRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1NjgwNQ==", "bodyText": "Just a question, should this condition be on it's own and does it make sense to give it a score of 0?  Should these types of conditions be waited more heavily or considered \"better?\"  I'm ok with 0 just curious if you tried different cases out :-)", "url": "https://github.com/apache/geode/pull/4639#discussion_r371956805", "createdAt": "2020-01-28T17:44:29Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/cache/query/internal/CompiledComparison.java", "diffHunk": "@@ -296,7 +296,7 @@ public boolean isRangeEvaluatable() {\n   public int getSizeEstimate(ExecutionContext context) throws FunctionDomainException,\n       TypeMismatchException, NameResolutionException, QueryInvocationTargetException {\n     IndexInfo[] idxInfo = getIndexInfo(context);\n-    if (idxInfo == null) {\n+    if ((idxInfo == null) || (idxInfo.length > 1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23cea62bd2cd49f42fc4c8ffae190cb47bba384"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97dfc084f47f278094d9be73abe0ef3d863cc751", "author": {"user": {"login": "jujoramos", "name": "Juan Jos\u00e9 Ramos"}}, "url": "https://github.com/apache/geode/commit/97dfc084f47f278094d9be73abe0ef3d863cc751", "committedDate": "2020-01-29T14:50:02Z", "message": "GEODE-7728: Improve weight calculation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDAzODI5", "url": "https://github.com/apache/geode/pull/4639#pullrequestreview-353403829", "createdAt": "2020-02-05T00:49:25Z", "commit": {"oid": "97dfc084f47f278094d9be73abe0ef3d863cc751"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDo0OToyNVrOFlohvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDo0OToyNVrOFlohvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwNTYyOQ==", "bodyText": "I think if the key is UNDEFINED and we have indexes present, the index actually has a mapping for UNDEFINED so the lookup should itself be really fast so 0 might be ok", "url": "https://github.com/apache/geode/pull/4639#discussion_r375005629", "createdAt": "2020-02-05T00:49:25Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/cache/query/internal/CompiledComparison.java", "diffHunk": "@@ -296,15 +296,23 @@ public boolean isRangeEvaluatable() {\n   public int getSizeEstimate(ExecutionContext context) throws FunctionDomainException,\n       TypeMismatchException, NameResolutionException, QueryInvocationTargetException {\n     IndexInfo[] idxInfo = getIndexInfo(context);\n-    if (idxInfo == null) {\n-      // Asif: This implies it is an independent condition. So evaluate it first\n-      // in filter operand\n+\n+    // Both operands are indexed, evaluate it first in the filter operand.\n+    if (idxInfo != null && idxInfo.length > 1) {\n       return 0;\n     }\n+\n+    // Asif: This implies it is an independent condition. So evaluate it second in filter operand.\n+    if (idxInfo == null) {\n+      return 1;\n+    }\n+\n     assert idxInfo.length == 1;\n     Object key = idxInfo[0].evaluateIndexKey(context);\n+\n+    // Evaluate it second as we do with the independent condition if key was not found.\n     if (key != null && key.equals(QueryService.UNDEFINED)) {\n-      return 0;\n+      return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dfc084f47f278094d9be73abe0ef3d863cc751"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7130a4e081e9d860245fca98c7c897317af636ce", "author": {"user": {"login": "jujoramos", "name": "Juan Jos\u00e9 Ramos"}}, "url": "https://github.com/apache/geode/commit/7130a4e081e9d860245fca98c7c897317af636ce", "committedDate": "2020-02-05T09:34:18Z", "message": "GEODE-7728: Better weighting for UNDEFINED"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da8b66f7ef17f07a289ce714da8c75f53cb0a736", "author": {"user": {"login": "jujoramos", "name": "Juan Jos\u00e9 Ramos"}}, "url": "https://github.com/apache/geode/commit/da8b66f7ef17f07a289ce714da8c75f53cb0a736", "committedDate": "2020-02-05T09:52:43Z", "message": "GEODE-7728: Fix test."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3738, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}