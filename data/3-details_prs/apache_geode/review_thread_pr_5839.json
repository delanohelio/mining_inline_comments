{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MzQxMTc1", "number": 5839, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NzoyOVrOFGaX3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNzozNjoxNFrOFMOeXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjY3ODcwOnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NzoyOVrOIHak0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NzoyOVrOIHak0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NjM1Mw==", "bodyText": "as I'm understanding this change, this section is the critical change to improve upon error reporting... I don't see unit testing for the improvement; there is a new test that looks for the above Exception string. Only it seems that a test could validate the expanded error information has been sent as well.", "url": "https://github.com/apache/geode/pull/5839#discussion_r544646353", "createdAt": "2020-12-16T21:47:29Z", "author": {"login": "echobravopapa"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "diffHunk": "@@ -383,40 +383,44 @@ public boolean join() throws MemberStartupException {\n             break;\n           }\n         }\n-        try {\n-          if (found && !state.hasContactedAJoinedLocator) {\n-            // if locators are restarting they may be handing out IDs from a stale view that\n-            // we should go through quickly. Otherwise we should sleep a bit to let failure\n-            // detection select a new coordinator\n-            if (state.possibleCoordinator.getVmViewId() < 0) {\n-              logger.debug(\"sleeping for {} before making another attempt to find the coordinator\",\n-                  retrySleep);\n-              Thread.sleep(retrySleep);\n-            } else {\n+        if (found && !state.hasContactedAJoinedLocator) {\n+          try {\n+            if (hasCoordinatorJoinedCluster(state.possibleCoordinator.getVmViewId(), retrySleep)) {\n               // since we were given a coordinator that couldn't be used we should keep trying\n               tries = 0;\n               giveupTime = System.currentTimeMillis() + timeout;\n             }\n+          } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            throw new MembershipConfigurationException(\n+                \"Retry sleep interrupted. Giving up on joining the distributed system.\");\n           }\n-        } catch (InterruptedException e) {\n-          logger.debug(\"retry sleep interrupted - giving up on joining the distributed system\");\n-          return false;\n         }\n       } // for\n \n       if (!this.isJoined) {\n         logger.debug(\"giving up attempting to join the distributed system after \"\n             + (System.currentTimeMillis() - startTime) + \"ms\");\n-      }\n \n-      // to preserve old behavior we need to throw a MemberStartupException if\n-      // unable to contact any of the locators\n-      if (!this.isJoined && state.hasContactedAJoinedLocator) {\n-        throw new MemberStartupException(\"Unable to join the distributed system in \"\n-            + (System.currentTimeMillis() - startTime) + \"ms\");\n-      }\n+        // to preserve old behavior we need to throw a MemberStartupException if\n+        // unable to contact any of the locators\n+        if (state.hasContactedAJoinedLocator) {\n+          throw new MemberStartupException(\"Unable to join the distributed system in \"\n+              + (System.currentTimeMillis() - startTime) + \"ms\");\n+        }\n \n-      return this.isJoined;\n+        if (state.locatorsContacted == 0) {\n+          throw new MembershipConfigurationException(\n+              \"Unable to join the distributed system. Could not contact any of the locators: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e3547296e82fe6ac69f2f300ad97813017ad1f8"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjY5OTA2OnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo1Mjo1MVrOIHawjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjoxNzozN1rOIJd2vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0OTM1OQ==", "bodyText": "looks like this extraction was test driven", "url": "https://github.com/apache/geode/pull/5839#discussion_r544649359", "createdAt": "2020-12-16T21:52:51Z", "author": {"login": "echobravopapa"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "diffHunk": "@@ -428,6 +432,24 @@ public boolean join() throws MemberStartupException {\n     }\n   }\n \n+  boolean hasCoordinatorJoinedCluster(int viewId, long retrySleep)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e3547296e82fe6ac69f2f300ad97813017ad1f8"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc5NzI0NQ==", "bodyText": "How about naming this something indicating that a sleep is going to be performed, like \"pauseIfThereIsNoCoordinator\"?", "url": "https://github.com/apache/geode/pull/5839#discussion_r546797245", "createdAt": "2020-12-21T16:17:37Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "diffHunk": "@@ -428,6 +432,24 @@ public boolean join() throws MemberStartupException {\n     }\n   }\n \n+  boolean hasCoordinatorJoinedCluster(int viewId, long retrySleep)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0OTM1OQ=="}, "originalCommit": {"oid": "3e3547296e82fe6ac69f2f300ad97813017ad1f8"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzU5OTUxOnYy", "diffSide": "RIGHT", "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNjozMVrOIJca4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNjozMVrOIJca4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MzcyOA==", "bodyText": "I like it - using a \"when\" to throw an InterruptedException", "url": "https://github.com/apache/geode/pull/5839#discussion_r546773728", "createdAt": "2020-12-21T15:36:31Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "diffHunk": "@@ -1441,24 +1435,74 @@ public void testCoordinatorFindRequestSuccess() throws Exception {\n   public void testCoordinatorFindRequestFailure() throws Exception {\n     try {\n       initMocks(false);\n-      HashSet<MemberIdentifier> registrants = new HashSet<>();\n-      registrants.add(mockMembers[0]);\n-      FindCoordinatorResponse fcr = new FindCoordinatorResponse(mockMembers[0], mockMembers[0],\n-          false, null, registrants, false, true, null);\n+      mockRequestToServer(eq(new HostAndPort(\"localhost\", 12346)));\n       GMSMembershipView view = createView();\n       JoinResponseMessage jrm = new JoinResponseMessage(mockMembers[0], view, 0);\n       gmsJoinLeave.setJoinResponseMessage(jrm);\n \n-      when(locatorClient.requestToServer(eq(new HostAndPort(\"localhost\", 12346)),\n-          isA(FindCoordinatorRequest.class), anyInt(), anyBoolean()))\n-              .thenReturn(fcr);\n-\n-      assertFalse(\"Should not be able to join \", gmsJoinLeave.join());\n+      assertThatThrownBy(() -> gmsJoinLeave.join())\n+          .isInstanceOf(MembershipConfigurationException.class);\n     } finally {\n-\n     }\n   }\n \n+  @Test\n+  public void testJoinFailureWhenSleepInterrupted() throws Exception {\n+    initMocks(false);\n+    mockRequestToServer(isA(HostAndPort.class));\n+\n+    when(mockConfig.getMemberTimeout()).thenReturn(100L);\n+    when(mockConfig.getJoinTimeout()).thenReturn(1000L);\n+\n+    GMSJoinLeave spyGmsJoinLeave = spy(gmsJoinLeave);\n+    when(spyGmsJoinLeave.hasCoordinatorJoinedCluster(-1, GMSJoinLeave.JOIN_RETRY_SLEEP))\n+        .thenThrow(new InterruptedException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f96d92b4122d5657c1a8256407f0dc0f6b81878"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzYwNjA0OnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozODoxM1rOIJceiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozODoxM1rOIJceiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NDY2NQ==", "bodyText": "nice change to make this a \"void\" method that throws an exception if it doesn't succeed in joining the cluster", "url": "https://github.com/apache/geode/pull/5839#discussion_r546774665", "createdAt": "2020-12-21T15:38:13Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -565,12 +565,7 @@ private void join() throws MemberStartupException {\n         this.isJoining = true; // added for bug #44373\n \n         // connect\n-        boolean ok = services.getJoinLeave().join();\n-\n-        if (!ok) {\n-          throw new MembershipConfigurationException(\"Unable to join the distributed system.  \"\n-              + \"Operation either timed out, was stopped or Locator does not exist.\");\n-        }\n+        services.getJoinLeave().join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f96d92b4122d5657c1a8256407f0dc0f6b81878"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzYxMjk2OnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/interfaces/JoinLeave.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo0MDowN1rOIJcifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo0MDowN1rOIJcifg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NTY3OA==", "bodyText": "This comment needs to be changed to reflect that the method now throws an exception if it's unable to join the cluster.  The comment should say which exception is thrown.  Should the exception be changed to be a checked exception instead of a runtime exception?", "url": "https://github.com/apache/geode/pull/5839#discussion_r546775678", "createdAt": "2020-12-21T15:40:07Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/interfaces/JoinLeave.java", "diffHunk": "@@ -29,7 +29,7 @@\n    * joins the distributed system and returns true if successful, false if not. Throws", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f96d92b4122d5657c1a8256407f0dc0f6b81878"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzY0MzgwOnYy", "diffSide": "RIGHT", "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNzozNjoxNVrOIP1o5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNzozNjoxNVrOIP1o5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ3ODM3Mg==", "bodyText": "typo:  \"startLocator\"", "url": "https://github.com/apache/geode/pull/5839#discussion_r553478372", "createdAt": "2021-01-07T17:36:15Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "diffHunk": "@@ -115,11 +117,18 @@ public void initMocks(boolean enableNetworkPartition) throws Exception {\n \n   public void initMocks(boolean enableNetworkPartition, boolean useTestGMSJoinLeave)\n       throws Exception {\n+    String locator = \"localhost[12345]\";\n+    initMocks(enableNetworkPartition, useTestGMSJoinLeave, locator, locator);\n+  }\n+\n+  public void initMocks(boolean enableNetworkPartition, boolean useTestGMSJoinLeave,\n+      String locators, String startLoactor)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4317d23794802642b7d92b8b7d59e6fec4fadeac"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4552, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}