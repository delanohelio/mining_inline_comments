{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTk4NjMx", "number": 5240, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1ODoxNlrOEEystw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1ODoxNlrOEEystw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDYwNDA3OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1ODoxNlrOGiov1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozMDo0MVrOGj93uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw==", "bodyText": "do a hstrlen on some other existing type (like a string or set) and confirm you get the expected error", "url": "https://github.com/apache/geode/pull/5240#discussion_r438972373", "createdAt": "2020-06-11T17:58:16Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java", "diffHunk": "@@ -150,6 +150,15 @@ public void testHDelDeletesKeyWhenHashIsEmpty() {\n     assertThat(jedis.exists(\"farm\")).isFalse();\n   }\n \n+  @Test\n+  public void testHStrLen() {\n+    jedis.hset(\"farm\", \"chicken\", \"little\");\n+\n+    assertThat(jedis.hstrlen(\"farm\", \"chicken\")).isEqualTo(\"little\".length());\n+    assertThat(jedis.hstrlen(\"farm\", \"unknown-field\")).isEqualTo(0);\n+    assertThat(jedis.hstrlen(\"unknown-key\", \"unknown-field\")).isEqualTo(0);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NDEzNg==", "bodyText": "do we have a way of testing the wrong number of arguments to a command? Will any of our redis clients even let that happen?", "url": "https://github.com/apache/geode/pull/5240#discussion_r438974136", "createdAt": "2020-06-11T18:01:30Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java", "diffHunk": "@@ -150,6 +150,15 @@ public void testHDelDeletesKeyWhenHashIsEmpty() {\n     assertThat(jedis.exists(\"farm\")).isFalse();\n   }\n \n+  @Test\n+  public void testHStrLen() {\n+    jedis.hset(\"farm\", \"chicken\", \"little\");\n+\n+    assertThat(jedis.hstrlen(\"farm\", \"chicken\")).isEqualTo(\"little\".length());\n+    assertThat(jedis.hstrlen(\"farm\", \"unknown-field\")).isEqualTo(0);\n+    assertThat(jedis.hstrlen(\"unknown-key\", \"unknown-field\")).isEqualTo(0);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw=="}, "originalCommit": {"oid": "5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NzAzNQ==", "bodyText": "We can do something like jedis.sendCommand(Command.STRLEN, \"foo\", \"bar\", ...) but we don't have explicit tests for command input lengths. They are tested implicitly through the parameter requirements defined against each command in RedisCommandType.", "url": "https://github.com/apache/geode/pull/5240#discussion_r440367035", "createdAt": "2020-06-15T18:30:41Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java", "diffHunk": "@@ -150,6 +150,15 @@ public void testHDelDeletesKeyWhenHashIsEmpty() {\n     assertThat(jedis.exists(\"farm\")).isFalse();\n   }\n \n+  @Test\n+  public void testHStrLen() {\n+    jedis.hset(\"farm\", \"chicken\", \"little\");\n+\n+    assertThat(jedis.hstrlen(\"farm\", \"chicken\")).isEqualTo(\"little\".length());\n+    assertThat(jedis.hstrlen(\"farm\", \"unknown-field\")).isEqualTo(0);\n+    assertThat(jedis.hstrlen(\"unknown-key\", \"unknown-field\")).isEqualTo(0);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw=="}, "originalCommit": {"oid": "5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3992, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}