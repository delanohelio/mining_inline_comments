{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTgzMjQz", "number": 4815, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MDo1M1rODwIzag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjowMDozN1rODwd5rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODAyNDc0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/cache/partition/PartitionRebalanceInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MDo1M1rOGC-IgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MDo1M1rOGC-IgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2ODMyMA==", "bodyText": "This name is confusing, since the method has nothing to do with primary buckets. A better name might be \"getNumberOfMembersExecutedOn\".", "url": "https://github.com/apache/geode/pull/4815#discussion_r405768320", "createdAt": "2020-04-08T19:40:53Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/cache/partition/PartitionRebalanceInfo.java", "diffHunk": "@@ -137,4 +137,11 @@\n    * @return the time, in milliseconds, spent transferring primaries for this region\n    */\n   long getPrimaryTransferTime();\n+\n+  /**\n+   * Returns the total number of members on which command is executed.\n+   *\n+   * @return the total number of members on which command is executed\n+   */\n+  int getPrimaryNumOfMembers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa86193969dd465e03a8774e0c5203890a1d2572"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODAzNDA0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/cache/control/RebalanceResults.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MzoyNFrOGC-N8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MzoyNFrOGC-N8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2OTcxMg==", "bodyText": "This method might be better named \"getTotalMembersExecutedOn\", or something else that makes it clear that it's specifically returning the number of members the command was executed on.", "url": "https://github.com/apache/geode/pull/4815#discussion_r405769712", "createdAt": "2020-04-08T19:43:24Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/cache/control/RebalanceResults.java", "diffHunk": "@@ -99,4 +99,11 @@\n    * @return the total time, in milliseconds, spent transferring primaries\n    */\n   long getTotalPrimaryTransferTime();\n+\n+  /**\n+   * Returns the total number of members on which command is executed.\n+   *\n+   * @return the total number of members on which command is executed\n+   */\n+  int getTotalNumOfMembers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa86193969dd465e03a8774e0c5203890a1d2572"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODAzODk3OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0NDo1MVrOGC-Q4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0NDo1MVrOGC-Q4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3MDQ2NQ==", "bodyText": "This description is potentially misleading, since the count is actually the number of members on which the rebalance was executed, which might be different from the total number of members in the system.", "url": "https://github.com/apache/geode/pull/4815#discussion_r405770465", "createdAt": "2020-04-08T19:44:51Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "diffHunk": "@@ -1873,6 +1873,8 @@\n       \"Total primaries transferred during this rebalance\";\n   public static final String REBALANCE__MSG__TOTALTIME =\n       \"Total time (in milliseconds) for this rebalance\";\n+  public static final String REBALANCE__MSG__MEMBER_COUNT =\n+      \"Total number of members in system during rebalance\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa86193969dd465e03a8774e0c5203890a1d2572"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODA0NTIxOnYy", "diffSide": "RIGHT", "path": "geode-management/src/main/java/org/apache/geode/management/runtime/RebalanceRegionResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0Njo1MVrOGC-UzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0Njo1MVrOGC-UzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc3MTQ2OA==", "bodyText": "Typo here, should be Of, not 0f", "url": "https://github.com/apache/geode/pull/4815#discussion_r405771468", "createdAt": "2020-04-08T19:46:51Z", "author": {"login": "DonalEvans"}, "path": "geode-management/src/main/java/org/apache/geode/management/runtime/RebalanceRegionResult.java", "diffHunk": "@@ -74,4 +74,9 @@\n    * Returns the time, in milliseconds, that the rebalance operation took for this region.\n    */\n   long getTimeInMilliseconds();\n+\n+  /**\n+   * Returns the number of members on which rebalance operation is executed.\n+   */\n+  int getNum0fMembers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa86193969dd465e03a8774e0c5203890a1d2572"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTQ4MTQyOnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/commands/RebalanceCommandDistributedTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjowMDozN1rOGDfMew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjoyMTo1N1rOGDf_LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMDAxMQ==", "bodyText": "This string should ideally be replaced with a reference to the REBALANCE__MSG__MEMBER_COUNT constant.", "url": "https://github.com/apache/geode/pull/4815#discussion_r406310011", "createdAt": "2020-04-09T16:00:37Z", "author": {"login": "DonalEvans"}, "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/commands/RebalanceCommandDistributedTestBase.java", "diffHunk": "@@ -94,6 +98,40 @@ public void testRebalanceResultOutput() {\n     rebalanceResult.hasRow(9).contains(CliStrings.REBALANCE__MSG__MEMBER_COUNT);\n   }\n \n+  @Test\n+  public void testRebalanceResultOutputMemberCount() {\n+    server3 = cluster.startServerVM(3, \"localhost\", locator.getPort());\n+    server3.invoke(() -> {\n+      Cache cache = ClusterStartupRule.getCache();\n+      RegionFactory<Integer, Integer> dataRegionFactory =\n+          cache.createRegionFactory(RegionShortcut.PARTITION);\n+      Region region = dataRegionFactory.create(\"region-1\");\n+      for (int i = 0; i < 100; i++) {\n+        region.put(\"key\" + (i + 400), \"value\" + (i + 400));\n+      }\n+    });\n+    // check if DistributedRegionMXBean is available so that command will not fail\n+    locator.waitUntilRegionIsReadyOnExactlyThisManyServers(\"/region-1\", 3);\n+\n+    Map<String, List<String>> listMembersResult = gfsh.executeAndAssertThat(\"list members\")\n+        .hasTableSection().getActual().getContent();\n+    assertThat(listMembersResult.get(\"Name\").size()).isEqualTo(4);\n+\n+    server3.forceDisconnect();\n+\n+    Map<String, List<String>> rebalanceResult = gfsh.executeAndAssertThat(\"rebalance\")\n+        .statusIsSuccess().hasTableSection().getActual().getContent();\n+    \n+    server3.waitTilFullyReconnected();\n+\n+    listMembersResult = gfsh.executeAndAssertThat(\"list members\")\n+        .hasTableSection().getActual().getContent();\n+    assertThat(listMembersResult.get(\"Name\").size()).isEqualTo(4);\n+    assertThat(rebalanceResult.get(\"Rebalanced Stats\").get(9))\n+        .isEqualTo(\"Total number of members in system on which rebalance is executed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3225a84a3d7b66f30146438ee8820f0c1000c03b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyMjk4OA==", "bodyText": "Done! :)", "url": "https://github.com/apache/geode/pull/4815#discussion_r406322988", "createdAt": "2020-04-09T16:21:57Z", "author": {"login": "mkevo"}, "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/commands/RebalanceCommandDistributedTestBase.java", "diffHunk": "@@ -94,6 +98,40 @@ public void testRebalanceResultOutput() {\n     rebalanceResult.hasRow(9).contains(CliStrings.REBALANCE__MSG__MEMBER_COUNT);\n   }\n \n+  @Test\n+  public void testRebalanceResultOutputMemberCount() {\n+    server3 = cluster.startServerVM(3, \"localhost\", locator.getPort());\n+    server3.invoke(() -> {\n+      Cache cache = ClusterStartupRule.getCache();\n+      RegionFactory<Integer, Integer> dataRegionFactory =\n+          cache.createRegionFactory(RegionShortcut.PARTITION);\n+      Region region = dataRegionFactory.create(\"region-1\");\n+      for (int i = 0; i < 100; i++) {\n+        region.put(\"key\" + (i + 400), \"value\" + (i + 400));\n+      }\n+    });\n+    // check if DistributedRegionMXBean is available so that command will not fail\n+    locator.waitUntilRegionIsReadyOnExactlyThisManyServers(\"/region-1\", 3);\n+\n+    Map<String, List<String>> listMembersResult = gfsh.executeAndAssertThat(\"list members\")\n+        .hasTableSection().getActual().getContent();\n+    assertThat(listMembersResult.get(\"Name\").size()).isEqualTo(4);\n+\n+    server3.forceDisconnect();\n+\n+    Map<String, List<String>> rebalanceResult = gfsh.executeAndAssertThat(\"rebalance\")\n+        .statusIsSuccess().hasTableSection().getActual().getContent();\n+    \n+    server3.waitTilFullyReconnected();\n+\n+    listMembersResult = gfsh.executeAndAssertThat(\"list members\")\n+        .hasTableSection().getActual().getContent();\n+    assertThat(listMembersResult.get(\"Name\").size()).isEqualTo(4);\n+    assertThat(rebalanceResult.get(\"Rebalanced Stats\").get(9))\n+        .isEqualTo(\"Total number of members in system on which rebalance is executed\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMxMDAxMQ=="}, "originalCommit": {"oid": "3225a84a3d7b66f30146438ee8820f0c1000c03b"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4374, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}