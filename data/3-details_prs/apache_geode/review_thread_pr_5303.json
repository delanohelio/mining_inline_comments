{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5OTY0MzM5", "number": 5303, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo1MTowNVrOEIufcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo1MDoxMlrOEIvr3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTg1Nzc5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo1MTowNVrOGo3MMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo1OTo1MVrOGo3dmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw==", "bodyText": "Please use the default timeout (5 minutes) set by GeodeAwaitility instead: await().untilAsserted() (without the timeout).", "url": "https://github.com/apache/geode/pull/5303#discussion_r445500467", "createdAt": "2020-06-25T11:51:05Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -129,7 +130,9 @@ public void testPingWrongServer() {\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").timeout(Duration.ofMinutes(1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54896cc7cb014cb9e814eee6702952b08956a3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMjY2Nw==", "bodyText": "I thought 5 minutes were too much for this case but if its ok for you, then I can change it, no problem.", "url": "https://github.com/apache/geode/pull/5303#discussion_r445502667", "createdAt": "2020-06-25T11:55:19Z", "author": {"login": "alb3rtobr"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -129,7 +130,9 @@ public void testPingWrongServer() {\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").timeout(Duration.ofMinutes(1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw=="}, "originalCommit": {"oid": "cc54896cc7cb014cb9e814eee6702952b08956a3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwNDkyMg==", "bodyText": "I agree in that 5 minutes might be \"too much\" for this test, but it's the current standard and there are only a handful of tests (8 I think) that overrides it, so I think is better to keep using the defaults for everything new.\nAs a side note, the poll occurs every 100 milliseconds anyway, so the condition should be met way sooner than 5 minutes.", "url": "https://github.com/apache/geode/pull/5303#discussion_r445504922", "createdAt": "2020-06-25T11:59:51Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -129,7 +130,9 @@ public void testPingWrongServer() {\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").timeout(Duration.ofMinutes(1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDQ2Nw=="}, "originalCommit": {"oid": "cc54896cc7cb014cb9e814eee6702952b08956a3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTg2MDY3OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo1MjowNFrOGo3ODg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMTo1MjowNFrOGo3ODg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUwMDk0Mg==", "bodyText": "The current preferred approach is to always use org.assertj.core.api.Assertions instead of org.junit.Assert, can you change it?.", "url": "https://github.com/apache/geode/pull/5303#discussion_r445500942", "createdAt": "2020-06-25T11:52:04Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -20,6 +20,8 @@\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.Assert.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54896cc7cb014cb9e814eee6702952b08956a3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA1MTY1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0OTo0M1rOGo5GBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxNzoyN1rOGo6OcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY1Mw==", "bodyText": "This logging message can be removed.", "url": "https://github.com/apache/geode/pull/5303#discussion_r445531653", "createdAt": "2020-06-25T12:49:43Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56c774f1be706d683f6f028ebe1519154602b462"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDE5Mg==", "bodyText": "done!", "url": "https://github.com/apache/geode/pull/5303#discussion_r445550192", "createdAt": "2020-06-25T13:17:27Z", "author": {"login": "alb3rtobr"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTY1Mw=="}, "originalCommit": {"oid": "56c774f1be706d683f6f028ebe1519154602b462"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NjA1MzQxOnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo1MDoxMlrOGo5HIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzoxNzozM1rOGo6Org==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTkzNw==", "bodyText": "This logging message can be removed.", "url": "https://github.com/apache/geode/pull/5303#discussion_r445531937", "createdAt": "2020-06-25T12:50:12Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);\n     server2.invoke(() -> {\n       assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().contains(proxyID))\n           .isFalse();\n-      assertEquals(0, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+          .isEqualTo(0);\n     });\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").untilAsserted(() -> assertThat(\n+          ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+              .isEqualTo(1));\n       ClientProxyMembershipID proxyIDFound =\n           ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().iterator().next();\n       logger.info(\"ProxyID found in clientHealthMonitor: \" + proxyIDFound);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56c774f1be706d683f6f028ebe1519154602b462"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MDI1NA==", "bodyText": "done!", "url": "https://github.com/apache/geode/pull/5303#discussion_r445550254", "createdAt": "2020-06-25T13:17:33Z", "author": {"login": "alb3rtobr"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/ClientServerMiscDUnitTest.java", "diffHunk": "@@ -117,19 +116,21 @@ public void testPingWrongServer() {\n     InternalDistributedMember server2ID = server2.invoke(\"get ID\", () -> cache.getMyId());\n     pool = (PoolImpl) createClientCache(NetworkUtils.getServerHostName(), PORT1);\n     // send the ping to server1 but use server2's identifier so the ping will be forwarded\n-\n     ClientProxyMembershipID proxyID = server1.invoke(\n         () -> CacheClientNotifier.getInstance().getClientProxies().iterator().next().getProxyID());\n     logger.info(\"ProxyID is : \" + proxyID);\n     server2.invoke(() -> {\n       assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().contains(proxyID))\n           .isFalse();\n-      assertEquals(0, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      assertThat(ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+          .isEqualTo(0);\n     });\n     PingOp.execute(pool, new ServerLocation(NetworkUtils.getServerHostName(), PORT1), server2ID);\n     // if the ping made it to server2 it will have the client's ID in its health monitor\n     server2.invoke(() -> {\n-      assertEquals(1, ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size());\n+      await(\"For heartbeat to be received\").untilAsserted(() -> assertThat(\n+          ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().size())\n+              .isEqualTo(1));\n       ClientProxyMembershipID proxyIDFound =\n           ClientHealthMonitor.getInstance().getClientHeartbeats().keySet().iterator().next();\n       logger.info(\"ProxyID found in clientHealthMonitor: \" + proxyIDFound);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTkzNw=="}, "originalCommit": {"oid": "56c774f1be706d683f6f028ebe1519154602b462"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3879, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}