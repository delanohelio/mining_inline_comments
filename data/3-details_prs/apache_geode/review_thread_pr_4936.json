{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjQ1NDg1", "number": 4936, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNToyNzo1OFrODxR3Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoyMToyNFrODxUO3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTk5NDk4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNToyNzo1OFrOGEqK-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzo1Mjo0NVrOGEu_Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzODQyNg==", "bodyText": "doesn't seem necessary to have this.", "url": "https://github.com/apache/geode/pull/4936#discussion_r407538426", "createdAt": "2020-04-13T15:27:58Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java", "diffHunk": "@@ -196,6 +196,7 @@ private void loadWebApplications() {\n       }\n     } else {\n       String pwFile = this.config.getJmxManagerPasswordFile();\n+      String springActiveProfile = \"spring.profiles.active\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxNzMxOA==", "bodyText": "I've removed it.", "url": "https://github.com/apache/geode/pull/4936#discussion_r407617318", "createdAt": "2020-04-13T17:52:45Z", "author": {"login": "demery-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java", "diffHunk": "@@ -196,6 +196,7 @@ private void loadWebApplications() {\n       }\n     } else {\n       String pwFile = this.config.getJmxManagerPasswordFile();\n+      String springActiveProfile = \"spring.profiles.active\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzODQyNg=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDEwMDE0OnYy", "diffSide": "RIGHT", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo1ODo0NFrOGErLBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOToyNjo1NVrOGEyJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg==", "bodyText": "hard to associate clientName with providerName, maybe rename the property to \"clientName\"?", "url": "https://github.com/apache/geode/pull/4936#discussion_r407554822", "createdAt": "2020-04-13T15:58:44Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java", "diffHunk": "@@ -84,16 +107,15 @@ public OAuth2AuthorizedClientRepository authorizedClientRepository(\n \n   private ClientRegistration clientRegistration() {\n     return ClientRegistration.withRegistrationId(providerId)\n-        .clientId(clientId)\n-        .clientSecret(clientSecret)\n         .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n         .redirectUriTemplate(\"{baseUrl}/login/oauth2/code/{registrationId}\")\n-        .scope(\"openid\", \"CLUSTER:READ\", \"CLUSTER:WRITE\", \"DATA:READ\", \"DATA:WRITE\")\n+        .clientId(clientId)\n+        .clientSecret(clientSecret)\n         .authorizationUri(authorizationUri)\n         .tokenUri(tokenUri)\n         .userInfoUri(userInfoUri)\n         .jwkSetUri(jwkSetUri)\n-        .clientName(\"Pulse\")\n+        .clientName(providerName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1MDQwMA==", "bodyText": "Despite the name of the method clientName(), the value really, really, really does name the provider. If you look at the ClientRegistration code (line 561), you'll see that the default value for \"client name\" is registrationId (aka provider id).\nGiven that, we have some options:\n\nName the property pulse.oauth.clientName. I think this name is very confusing for whoever writes the properties file.\nName the property pulse.oauth.providerName. This name is clearer for whoever writes the properties file, and is a bit of a puzzle for a Geode developer reading the OAuthSecurityConfig code. We could add a comment explaining the puzzle.\nName the property pulse.oauth.providerName, but name the field clientName. Then this method call becomes clearer. But then a Geode developer may wonder why the field name differs from the property name. Again, we could explain with a comment.\n\nWhich do you prefer?", "url": "https://github.com/apache/geode/pull/4936#discussion_r407650400", "createdAt": "2020-04-13T18:52:21Z", "author": {"login": "demery-pivotal"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java", "diffHunk": "@@ -84,16 +107,15 @@ public OAuth2AuthorizedClientRepository authorizedClientRepository(\n \n   private ClientRegistration clientRegistration() {\n     return ClientRegistration.withRegistrationId(providerId)\n-        .clientId(clientId)\n-        .clientSecret(clientSecret)\n         .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n         .redirectUriTemplate(\"{baseUrl}/login/oauth2/code/{registrationId}\")\n-        .scope(\"openid\", \"CLUSTER:READ\", \"CLUSTER:WRITE\", \"DATA:READ\", \"DATA:WRITE\")\n+        .clientId(clientId)\n+        .clientSecret(clientSecret)\n         .authorizationUri(authorizationUri)\n         .tokenUri(tokenUri)\n         .userInfoUri(userInfoUri)\n         .jwkSetUri(jwkSetUri)\n-        .clientName(\"Pulse\")\n+        .clientName(providerName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2OTAzMQ==", "bodyText": "2 with a comment probably would be better.", "url": "https://github.com/apache/geode/pull/4936#discussion_r407669031", "createdAt": "2020-04-13T19:26:55Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java", "diffHunk": "@@ -84,16 +107,15 @@ public OAuth2AuthorizedClientRepository authorizedClientRepository(\n \n   private ClientRegistration clientRegistration() {\n     return ClientRegistration.withRegistrationId(providerId)\n-        .clientId(clientId)\n-        .clientSecret(clientSecret)\n         .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n         .redirectUriTemplate(\"{baseUrl}/login/oauth2/code/{registrationId}\")\n-        .scope(\"openid\", \"CLUSTER:READ\", \"CLUSTER:WRITE\", \"DATA:READ\", \"DATA:WRITE\")\n+        .clientId(clientId)\n+        .clientSecret(clientSecret)\n         .authorizationUri(authorizationUri)\n         .tokenUri(tokenUri)\n         .userInfoUri(userInfoUri)\n         .jwkSetUri(jwkSetUri)\n-        .clientName(\"Pulse\")\n+        .clientName(providerName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM3Mzc1OnYy", "diffSide": "RIGHT", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxODo0MFrOGEt07w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODo0NDo1NlrOGEwwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ==", "bodyText": "I believe you don't need to implement LogoutSuccessHandler since SimpleUrlLogoutSuccessHandler already implements that\nyou don't need to implement ContextAware either, Spring should take care of auto-wiring for you if you declare\n\n@Autowired\nprivate Repository repository;", "url": "https://github.com/apache/geode/pull/4936#discussion_r407598319", "createdAt": "2020-04-13T17:18:40Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNjgzNA==", "bodyText": "I've removed the unnecessary implements LogoutSuccessHandler.\nRemoving ContextAware is trickier. Unfortunately, simply autowiring the repository this way causes a circular dependency that Spring can't resolve.\nIn my logout spike, I have fixed this by untangling the circular dependency. So here are the options I can think of:\n\nMove the dependency-untangling code from my logout spike into this PR. This involves changes to 8 or 9 files.\nLeave LogoutHandler implementing ContextAware for now, and fix it in a later PR.\n\nWhich would you prefer?", "url": "https://github.com/apache/geode/pull/4936#discussion_r407636834", "createdAt": "2020-04-13T18:27:50Z", "author": {"login": "demery-pivotal"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0NjI1OA==", "bodyText": "we can leave it for now", "url": "https://github.com/apache/geode/pull/4936#discussion_r407646258", "createdAt": "2020-04-13T18:44:56Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM3NTI5OnYy", "diffSide": "RIGHT", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxOTowNlrOGEt16w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxOTowNlrOGEt16w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODU3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private ApplicationContext applicationContext;\n          \n          \n            \n              @Autowired\n          \n          \n            \n              private Repository repository;", "url": "https://github.com/apache/geode/pull/4936#discussion_r407598571", "createdAt": "2020-04-13T17:19:06Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,\n+    ApplicationContextAware {\n   private static final Logger logger = LogManager.getLogger();\n+  private ApplicationContext applicationContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM3OTcxOnYy", "diffSide": "RIGHT", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoyMDoyNFrOGEt4tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODo0NTo1MVrOGEwyHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final Repository repository;\n          \n          \n            \n              @Autowired\n          \n          \n            \n              private Repository repository;", "url": "https://github.com/apache/geode/pull/4936#discussion_r407599284", "createdAt": "2020-04-13T17:20:24Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0MDcyNQ==", "bodyText": "How strongly do you feel about this? The general (strong) consensus is to avoid field injection. And we've found that constructor injection makes it way easier to write unit tests (if we ever get around to writing unit tests).", "url": "https://github.com/apache/geode/pull/4936#discussion_r407640725", "createdAt": "2020-04-13T18:34:55Z", "author": {"login": "demery-pivotal"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0Njc1MA==", "bodyText": "I only prefer field injection because it's less code. If this makes testing easier, I am OK with it.", "url": "https://github.com/apache/geode/pull/4936#discussion_r407646750", "createdAt": "2020-04-13T18:45:51Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA=="}, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM4MzAxOnYy", "diffSide": "RIGHT", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoyMToyNFrOGEt60g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoyMToyNFrOGEt60g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTgyNg==", "bodyText": "no need for this constructor if Repository variable is declared as autowired already.\nSame should be the same for all the service classes.", "url": "https://github.com/apache/geode/pull/4936#discussion_r407599826", "createdAt": "2020-04-13T17:21:24Z", "author": {"login": "jinmeiliao"}, "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;\n+\n+  @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4300, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}