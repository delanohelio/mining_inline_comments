{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Nzk0NDY1", "number": 4884, "title": "GEODE-7925: Add concurrency test to PubSubDUnitTest", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-03-30T17:32:07Z", "url": "https://github.com/apache/geode/pull/4884", "merged": true, "mergeCommit": {"oid": "9036ab930baf535d08101b625af1d1bc0dbe6373"}, "closed": true, "closedAt": "2020-04-01T15:22:38Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSx_41gH2gAyMzk1Nzk0NDY1OjBiNzliN2YxOGJlNWM4YzM0MDYwNjM5NTA4OGMwMmI5ZTJmM2I5NmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTZN-WAFqTM4NTY4NDgyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/0b79b7f18be5c8c340606395088c02b9e2f3b96c", "committedDate": "2020-03-30T17:31:51Z", "message": "GEODE-7925: Add concurrency test to PubSubDUnitTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Mjk0Nzc3", "url": "https://github.com/apache/geode/pull/4884#pullrequestreview-384294777", "createdAt": "2020-03-30T23:07:37Z", "commit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzowNzozN1rOF9_fEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzoxODowOFrOF9_tBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NzYwMA==", "bodyText": "Are these truly internal properties? Maybe there Redis module has it's own set of public properties.", "url": "https://github.com/apache/geode/pull/4884#discussion_r400547600", "createdAt": "2020-03-30T23:07:37Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/PubSubDUnitTest.java", "diffHunk": "@@ -46,13 +49,13 @@\n   public static void beforeClass() {\n     ports = AvailablePortHelper.getRandomAvailableTCPPorts(2);\n     Properties redisProps = new Properties();\n-    redisProps.put(\"redis-bind-address\", \"localhost\");\n+    redisProps.put(DistributionConfig.REDIS_BIND_ADDRESS_NAME, \"localhost\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0OTQyMQ==", "bodyText": "Why not have an ExecutorPool rather than a specific list of Threads...", "url": "https://github.com/apache/geode/pull/4884#discussion_r400549421", "createdAt": "2020-03-30T23:12:58Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/PubSubDUnitTest.java", "diffHunk": "@@ -88,4 +91,60 @@ public void testSubscribePublishUsingDifferentServers() throws Exception {\n     GeodeAwaitility.await().untilAsserted(subscriberThread2::join);\n   }\n \n+  @Test\n+  public void testConcurrentPubSub() throws Exception {\n+    Jedis subscriber1 = new Jedis(\"localhost\", ports[0]);\n+    Jedis subscriber2 = new Jedis(\"localhost\", ports[1]);\n+\n+    CountDownLatch latch = new CountDownLatch(2);\n+    MockSubscriber mockSubscriber1 = new MockSubscriber(latch);\n+    MockSubscriber mockSubscriber2 = new MockSubscriber(latch);\n+\n+    Runnable runnable1 = () -> subscriber1.subscribe(mockSubscriber1, CHANNEL_NAME);\n+    Thread subscriberThread1 = new Thread(runnable1);\n+    subscriberThread1.start();\n+\n+    Runnable runnable2 = () -> subscriber2.subscribe(mockSubscriber2, CHANNEL_NAME);\n+    Thread subscriberThread2 = new Thread(runnable2);\n+    subscriberThread2.start();\n+\n+    assertThat(latch.await(2, TimeUnit.SECONDS))\n+        .as(\"channel subscription was not received\")\n+        .isTrue();\n+\n+    int CLIENT_COUNT = 10;\n+    int ITERATIONS = 1000;\n+\n+    List<Jedis> clients = new ArrayList<>();\n+    List<Thread> threads = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MTE2Ng==", "bodyText": "Are these truly internal properties? Maybe there Redis module has it's own set of public properties.", "url": "https://github.com/apache/geode/pull/4884#discussion_r400551166", "createdAt": "2020-03-30T23:18:07Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/PubSubDUnitTest.java", "diffHunk": "@@ -46,13 +49,13 @@\n   public static void beforeClass() {\n     ports = AvailablePortHelper.getRandomAvailableTCPPorts(2);\n     Properties redisProps = new Properties();\n-    redisProps.put(\"redis-bind-address\", \"localhost\");\n+    redisProps.put(DistributionConfig.REDIS_BIND_ADDRESS_NAME, \"localhost\");\n \n     MemberVM locator = cluster.startLocatorVM(0);\n \n-    redisProps.put(\"redis-port\", Integer.toString(ports[0]));\n+    redisProps.put(DistributionConfig.REDIS_PORT_NAME, Integer.toString(ports[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1MTE3Mg==", "bodyText": "Are these truly internal properties? Maybe there Redis module has it's own set of public properties.", "url": "https://github.com/apache/geode/pull/4884#discussion_r400551172", "createdAt": "2020-03-30T23:18:08Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/PubSubDUnitTest.java", "diffHunk": "@@ -46,13 +49,13 @@\n   public static void beforeClass() {\n     ports = AvailablePortHelper.getRandomAvailableTCPPorts(2);\n     Properties redisProps = new Properties();\n-    redisProps.put(\"redis-bind-address\", \"localhost\");\n+    redisProps.put(DistributionConfig.REDIS_BIND_ADDRESS_NAME, \"localhost\");\n \n     MemberVM locator = cluster.startLocatorVM(0);\n \n-    redisProps.put(\"redis-port\", Integer.toString(ports[0]));\n+    redisProps.put(DistributionConfig.REDIS_PORT_NAME, Integer.toString(ports[0]));\n     server1 = cluster.startServerVM(1, redisProps, locator.getPort());\n-    redisProps.put(\"redis-port\", Integer.toString(ports[1]));\n+    redisProps.put(DistributionConfig.REDIS_PORT_NAME, Integer.toString(ports[1]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b79b7f18be5c8c340606395088c02b9e2f3b96c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3375a95418632a4ec2369f43f1b31e411269ce71", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/3375a95418632a4ec2369f43f1b31e411269ce71", "committedDate": "2020-04-01T03:49:42Z", "message": "Addressing review comments\n\n- Use ConfigurationProperties instead of DistributionConfig constants\n- Switch to using an ExecutorServiceRule instead of raw threads\n\nAuthored-by: Jens Deppe <jdeppe@vmware.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Njg0ODI0", "url": "https://github.com/apache/geode/pull/4884#pullrequestreview-385684824", "createdAt": "2020-04-01T15:13:32Z", "commit": {"oid": "3375a95418632a4ec2369f43f1b31e411269ce71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4719, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}