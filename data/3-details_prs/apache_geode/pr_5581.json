{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODU1NTgz", "number": 5581, "title": "GEODE-8559: Compute interest routing info after transaction committed.", "bodyText": "Compute interest routing info after transactional event has been\napplied to cache. This will make sure an interested client will\neither get the event through region snapshot taken or through\nHARegionQueue.\nAdd test coverage for CQ with transactional destroy event to make\nsure CQ routing is computed correctly.\nRemove sleep in exiting test code.\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-09-30T23:38:17Z", "url": "https://github.com/apache/geode/pull/5581", "merged": true, "mergeCommit": {"oid": "0cc4fa067d0a9ef4166c021b322a281986851ca5"}, "closed": true, "closedAt": "2020-10-12T16:10:19Z", "author": {"login": "pivotal-eshu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOFYAHgH2gAyNDk1ODU1NTgzOmM4MGVhYTMzYzUzNzZlZTQzYzZmZmY1ZGUyOTg3YzQxNjI3NzRiMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOoPM_gH2gAyNDk1ODU1NTgzOjg3ZTZjMjI2NDllYmM5NDZjY2QzZDE5YTg0YTUxODQ5ZTk4YmI2ZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c80eaa33c5376ee43c6fff5de2987c4162774b37", "author": {"user": {"login": "pivotal-eshu", "name": "Eric Shu"}}, "url": "https://github.com/apache/geode/commit/c80eaa33c5376ee43c6fff5de2987c4162774b37", "committedDate": "2020-09-30T23:27:55Z", "message": "GEODE-8559: Compute interest routing info after transaction committed.\n\n  * Compute interest routing info after transactional event has been\n    applied to cache. This will make sure an interested client will\n    either get the event through region snapshot taken or through\n    HARegionQueue.\n  * Add test coverage for CQ with transactional destroy event to make\n    sure CQ routing is computed correctly.\n  * Remove sleep in exiting test code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a34ee028b657e72b486473b851051b1a4a83d6", "author": {"user": {"login": "pivotal-eshu", "name": "Eric Shu"}}, "url": "https://github.com/apache/geode/commit/93a34ee028b657e72b486473b851051b1a4a83d6", "committedDate": "2020-10-01T01:26:37Z", "message": "fix a test mocking issue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzIxMTM3", "url": "https://github.com/apache/geode/pull/5581#pullrequestreview-500721137", "createdAt": "2020-10-01T21:11:04Z", "commit": {"oid": "93a34ee028b657e72b486473b851051b1a4a83d6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToxMTowNFrOHba9Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToxMTowNFrOHba9Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxNTIzNA==", "bodyText": "This can be simplified to return localFilterInfo == null;", "url": "https://github.com/apache/geode/pull/5581#discussion_r498515234", "createdAt": "2020-10-01T21:11:04Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/FilterProfile.java", "diffHunk": "@@ -1126,27 +1126,75 @@ public FilterRoutingInfo getFilterRoutingInfoPart1(CacheEvent event, Profile[] p\n    */\n   public FilterRoutingInfo getFilterRoutingInfoPart2(FilterRoutingInfo part1Info,\n       CacheEvent event) {\n+    return getFilterRoutingInfoPart2(part1Info, event, false);\n+  }\n+\n+  public FilterRoutingInfo getFilterRoutingInfoPart2(FilterRoutingInfo part1Info,\n+      CacheEvent event, boolean computeInterestRoutingInfo) {\n     FilterRoutingInfo result = part1Info;\n     if (localProfile.hasCacheServer) {\n       // bug #45520 - CQ events arriving out of order causes result set\n       // inconsistency, so don't compute routings for events in conflict\n       boolean isInConflict =\n           event.getOperation().isEntry() && ((EntryEventImpl) event).isConcurrencyConflict();\n       CqService cqService = getCqService(event.getRegion());\n-      if (!isInConflict && cqService.isRunning()\n-          && this.region != null /*\n-                                  * && !( this.region.isUsedForPartitionedRegionBucket() || //\n-                                  * partitioned region CQ this.region instanceof PartitionedRegion)\n-                                  */) { // processing is done in part 1\n+      if (!isInConflict && cqService.isRunning() && region != null) {\n         if (result == null) {\n           result = new FilterRoutingInfo();\n         }\n         if (logger.isDebugEnabled()) {\n           logger.debug(\"getting local cq matches for {}\", event);\n         }\n-        fillInCQRoutingInfo(event, true, NO_PROFILES, result);\n+        setLocalCQRoutingInfo(event, result);\n       }\n+      result = setLocalInterestRoutingInfo(event, result, computeInterestRoutingInfo);\n+    }\n+    return result;\n+  }\n+\n+  void setLocalCQRoutingInfo(CacheEvent event, FilterRoutingInfo result) {\n+    if (isCQRoutingNeeded(event)) {\n+      fillInCQRoutingInfo(event, true, NO_PROFILES, result);\n+    } else {\n+      result.setLocalFilterInfo(getLocalFilterInfo(event));\n+    }\n+  }\n+\n+  boolean isCQRoutingNeeded(CacheEvent event) {\n+    if (!isTransactionalEvent(event)) {\n+      return true;\n+    }\n+    FilterInfo localFilterInfo = getLocalFilterInfo(event);\n+    if (localFilterInfo != null) {\n+      return false;\n+    }\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a34ee028b657e72b486473b851051b1a4a83d6"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e6c22649ebc946ccd3d19a84a51849e98bb6d0", "author": {"user": {"login": "pivotal-eshu", "name": "Eric Shu"}}, "url": "https://github.com/apache/geode/commit/87e6c22649ebc946ccd3d19a84a51849e98bb6d0", "committedDate": "2020-10-02T16:04:59Z", "message": "fix a review comment."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4058, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}