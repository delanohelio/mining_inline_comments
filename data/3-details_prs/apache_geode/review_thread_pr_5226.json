{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDEzMjcy", "number": 5226, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozODo1N1rOED6YNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0MToyN1rOED6dWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTM3NjUzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozODo1N1rOGhNW1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMToxMTowMVrOGhcnTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NTAzMA==", "bodyText": "We should also add some security meta data here:\n@ResourceOperation(resource = ResourcePermission.Resource.DATA, operation = ResourcePermission.Operation.MANAGE);", "url": "https://github.com/apache/geode/pull/5226#discussion_r437475030", "createdAt": "2020-06-09T14:38:57Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.gfsh;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.springframework.shell.core.annotation.CliCommand;\n+import org.springframework.shell.core.annotation.CliOption;\n+\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.management.cli.SingleGfshCommand;\n+import org.apache.geode.management.internal.cli.result.model.ResultModel;\n+import org.apache.geode.management.internal.functions.CliFunctionResult;\n+\n+public class RedisCommand extends SingleGfshCommand {\n+  public static final String REDIS = \"redis\";\n+  public static final String REDIS__HELP =\n+      \"Commands related to the Redis API for Geode.\";\n+  public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS = \"enable-unsupported-commands\";\n+  public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS__HELP =\n+      \"Boolean value to determine \"\n+          + \"whether or not to enable unsupported commands. Unsupported commands have not been fully tested.\";\n+\n+  @CliCommand(value = {REDIS}, help = REDIS__HELP)\n+  public ResultModel enableUnsupportedCommands(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f910d9f8352351ec0d0d0f83fdf445395782bc34"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyNTAwNA==", "bodyText": "Updated it! Thank you!", "url": "https://github.com/apache/geode/pull/5226#discussion_r437725004", "createdAt": "2020-06-09T21:11:01Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommand.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.gfsh;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.springframework.shell.core.annotation.CliCommand;\n+import org.springframework.shell.core.annotation.CliOption;\n+\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.management.cli.SingleGfshCommand;\n+import org.apache.geode.management.internal.cli.result.model.ResultModel;\n+import org.apache.geode.management.internal.functions.CliFunctionResult;\n+\n+public class RedisCommand extends SingleGfshCommand {\n+  public static final String REDIS = \"redis\";\n+  public static final String REDIS__HELP =\n+      \"Commands related to the Redis API for Geode.\";\n+  public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS = \"enable-unsupported-commands\";\n+  public static final String REDIS__ENABLE_UNSUPPORTED_COMMANDS__HELP =\n+      \"Boolean value to determine \"\n+          + \"whether or not to enable unsupported commands. Unsupported commands have not been fully tested.\";\n+\n+  @CliCommand(value = {REDIS}, help = REDIS__HELP)\n+  public ResultModel enableUnsupportedCommands(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NTAzMA=="}, "originalCommit": {"oid": "f910d9f8352351ec0d0d0f83fdf445395782bc34"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTM4OTcxOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0MToyN1rOGhNe6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMToxMToxN1rOGhcntw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NzA5OA==", "bodyText": "For consistency with other cli-related functions we should extend CliFunction instead of implements Function. That class exposes an execute that just needs to return a CliFunctionResult. CliFunction also extends InternalFunction which is more secure (it cannot be user-invoked in any way - for example via gfsh).", "url": "https://github.com/apache/geode/pull/5226#discussion_r437477098", "createdAt": "2020-06-09T14:41:27Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.redis.internal.gfsh;\n+\n+import org.apache.geode.cache.execute.Function;\n+import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.internal.cache.InternalCache;\n+import org.apache.geode.management.internal.functions.CliFunctionResult;\n+import org.apache.geode.redis.internal.GeodeRedisService;\n+\n+public class RedisCommandFunction implements Function<Boolean> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f910d9f8352351ec0d0d0f83fdf445395782bc34"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyNTExMQ==", "bodyText": "I updated it, let me know what you think.", "url": "https://github.com/apache/geode/pull/5226#discussion_r437725111", "createdAt": "2020-06-09T21:11:17Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/gfsh/RedisCommandFunction.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.redis.internal.gfsh;\n+\n+import org.apache.geode.cache.execute.Function;\n+import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.internal.cache.InternalCache;\n+import org.apache.geode.management.internal.functions.CliFunctionResult;\n+import org.apache.geode.redis.internal.GeodeRedisService;\n+\n+public class RedisCommandFunction implements Function<Boolean> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NzA5OA=="}, "originalCommit": {"oid": "f910d9f8352351ec0d0d0f83fdf445395782bc34"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3977, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}