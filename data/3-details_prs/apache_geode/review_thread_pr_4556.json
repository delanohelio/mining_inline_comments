{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDM2MzQ1", "number": 4556, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMTo0MTo1MFrODVwd1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMTo0MTo1MFrODVwd1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTQwNzU4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/membership/MembershipDependenciesJUnitTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMTo0MTo1MFrOFaJ-CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxODozODozNVrOFalp9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3MDYzMg==", "bodyText": "Am I reading that this class is now an allowed dependency, because of its movement from geode-core into geode-common?", "url": "https://github.com/apache/geode/pull/4556#discussion_r362970632", "createdAt": "2020-01-03T21:41:50Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/membership/MembershipDependenciesJUnitTest.java", "diffHunk": "@@ -93,6 +93,7 @@\n               .or(resideInAPackage(\"org.apache.geode.logging.internal.executors..\"))\n               .or(resideInAPackage(\"org.apache.geode.distributed.internal.tcpserver..\"))\n               .or(type(LocalHostUtil.class))\n+              .or(type(JavaWorkarounds.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7062ee9d778a513f1da0ad898ff9e537065846b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxODA5MQ==", "bodyText": "Yes. Although this test should probably be written to specify what packages are allowed, not individual classes?", "url": "https://github.com/apache/geode/pull/4556#discussion_r363418091", "createdAt": "2020-01-06T18:23:55Z", "author": {"login": "upthewaterspout"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/membership/MembershipDependenciesJUnitTest.java", "diffHunk": "@@ -93,6 +93,7 @@\n               .or(resideInAPackage(\"org.apache.geode.logging.internal.executors..\"))\n               .or(resideInAPackage(\"org.apache.geode.distributed.internal.tcpserver..\"))\n               .or(type(LocalHostUtil.class))\n+              .or(type(JavaWorkarounds.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3MDYzMg=="}, "originalCommit": {"oid": "b7062ee9d778a513f1da0ad898ff9e537065846b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQyNDI0NA==", "bodyText": "@rhoughton-pivot Nope, just breaking the dependency the soon to be module membership would have on this class being in geode-core\n@upthewaterspout I'll adjust the ArchUnit exception to be package based, which might necessitate an ArchUnit test in geode-common to cross check , but maybe that's another Story", "url": "https://github.com/apache/geode/pull/4556#discussion_r363424244", "createdAt": "2020-01-06T18:38:35Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/membership/MembershipDependenciesJUnitTest.java", "diffHunk": "@@ -93,6 +93,7 @@\n               .or(resideInAPackage(\"org.apache.geode.logging.internal.executors..\"))\n               .or(resideInAPackage(\"org.apache.geode.distributed.internal.tcpserver..\"))\n               .or(type(LocalHostUtil.class))\n+              .or(type(JavaWorkarounds.class))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk3MDYzMg=="}, "originalCommit": {"oid": "b7062ee9d778a513f1da0ad898ff9e537065846b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3786, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}