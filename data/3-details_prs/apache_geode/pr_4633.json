{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjQ4ODg5", "number": 4633, "title": "GEODE-7109: add test case that multiple sessions can be maintained.", "bodyText": "", "createdAt": "2020-01-27T18:55:31Z", "url": "https://github.com/apache/geode/pull/4633", "merged": true, "mergeCommit": {"oid": "b254cace99e6e6c1ca294f865f545ae6f8f2b6fc"}, "closed": true, "closedAt": "2020-01-30T17:19:59Z", "author": {"login": "pivotal-eshu"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-hUnSgH2gAyMzY3NjQ4ODg5OjA0ZTNjM2YwYzQyNTk5ZmUzNzhkNzNmNTY3NDJkYmIyZDViNjE0NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-mWVIgFqTM0OTA3MDEwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04e3c3f0c42599fe378d73f56742dbb2d5b61476", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/04e3c3f0c42599fe378d73f56742dbb2d5b61476", "committedDate": "2020-01-27T18:47:37Z", "message": "GEODE-7109: add test case that multiple sessions can be maintained."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDcwMTAy", "url": "https://github.com/apache/geode/pull/4633#pullrequestreview-349070102", "createdAt": "2020-01-28T00:37:43Z", "commit": {"oid": "04e3c3f0c42599fe378d73f56742dbb2d5b61476"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDozNzo0NFrOFiWLaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDozNzo0NFrOFiWLaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1OTI3Mw==", "bodyText": "This would read better as \"but gets response value of {} from client {}. Waiting for update from server.\"", "url": "https://github.com/apache/geode/pull/4633#discussion_r371559273", "createdAt": "2020-01-28T00:37:44Z", "author": {"login": "DonalEvans"}, "path": "geode-assembly/src/distributedTest/java/org/apache/geode/session/tests/CargoTestBase.java", "diffHunk": "@@ -139,22 +150,25 @@ public void getKeyValueDataOnAllClients(String key, String expectedValue, String\n         String value = resp.getResponse();\n         if (!expectedValue.equals(value)) {\n           LogService.getLogger().info(\"verifying container {} for expected value of {}\"\n-              + \" for key {}, but gets response value of {}. Waiting for update from server.\", i,\n-              expectedValue, key, value);\n+              + \" for key {}, but gets response value of {}. Waiting for update from server. for client {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e3c3f0c42599fe378d73f56742dbb2d5b61476"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3730, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}