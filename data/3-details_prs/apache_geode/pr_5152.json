{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTU3Mzg0", "number": 5152, "title": "GEODE-8147: key commands implement Function-Delta", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-22T22:13:09Z", "url": "https://github.com/apache/geode/pull/5152", "merged": true, "mergeCommit": {"oid": "a9304cd32b0293484576411aa88fb980b7ee42ee"}, "closed": true, "closedAt": "2020-06-03T23:09:09Z", "author": {"login": "jhutchison"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcj6CY0AFqTQxNzIxMDg1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnv0UogH2gAyNDIyMTU3Mzg0OjgwZDRiOGUyY2VjODUxNjhjOWI4OTkxZWEzMDBmMTMxMDYzOTVjNmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjEwODUw", "url": "https://github.com/apache/geode/pull/5152#pullrequestreview-417210850", "createdAt": "2020-05-22T22:22:32Z", "commit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMjozMlrOGZlOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyOToyMFrOGZlUGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NzU3Nw==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477577", "createdAt": "2020-05-22T22:22:32Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "diffHunk": "@@ -84,10 +88,32 @@ protected Object compute(Region localRegion, ByteArrayWrapper key,\n         callable = () -> new RedisSetInRegion(localRegion).srem(key, membersToRemove);\n         break;\n       }\n-      case DEL:\n-        RedisDataType delType = (RedisDataType) args[1];\n-        callable = executeDel(key, localRegion, delType);\n+      case DEL: {\n+        callable = () -> new RedisKeyInRegion(localRegion, regionProvider).del(key);\n         break;\n+      }\n+      case EXISTS: {\n+        callable = () -> new RedisKeyInRegion(localRegion, regionProvider).exists(key);\n+        break;\n+      }\n+//      case RENAME: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3Nzg0Mw==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477843", "createdAt": "2020-05-22T22:23:56Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -46,12 +38,22 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n \n     ByteArrayWrapper key = command.getKey();\n     ByteArrayWrapper newKey = new ByteArrayWrapper(commandElems.get(2));\n+    RedisKeyCommands\n+        redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());\n \n-    try (@SuppressWarnings(\"unused\")\n-    AutoCloseableLock lockForOldKey = context.getLockService().lock(key)) {\n-      try (@SuppressWarnings(\"unused\")\n-      AutoCloseableLock lockForNewKey = context.getLockService().lock(newKey)) {\n+    List<ByteArrayWrapper> keysToLock = Arrays.asList(key,newKey);\n+    keysToLock.sort(ByteArrayWrapper::compareTo);\n+\n+\n+//    try (@SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3Nzk0MA==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477940", "createdAt": "2020-05-22T22:24:23Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -95,18 +84,18 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n           default:\n             break;\n         }\n-      } catch (InterruptedException e) {\n-        Thread.currentThread().interrupt();\n-        command.setResponse(\n-            Coder.getErrorResponse(context.getByteBufAllocator(), \"Thread interrupted.\"));\n-        return;\n-      }\n-    } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      command.setResponse(\n-          Coder.getErrorResponse(context.getByteBufAllocator(), \"Thread interrupted.\"));\n-      return;\n-    }\n+//      } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3ODkzOQ==", "bodyText": "Why was this change made? getLocalDataSet seems like what we want.", "url": "https://github.com/apache/geode/pull/5152#discussion_r429478939", "createdAt": "2020-05-22T22:29:20Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/SingleResultRedisFunction.java", "diffHunk": "@@ -40,7 +40,7 @@ public void execute(FunctionContext<Object[]> context) {\n         regionFunctionContext.getLocalDataSet(regionFunctionContext.getDataSet());\n     Object[] args = context.getArguments();\n     RedisCommandType command = (RedisCommandType) args[0];\n-    Object result = compute(localRegion, key, command, args);\n+    Object result = compute(regionFunctionContext.getDataSet(), key, command, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32cea4e9eb2283bf202acfd3b5092c345929d2a9", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/32cea4e9eb2283bf202acfd3b5092c345929d2a9", "committedDate": "2020-05-23T01:15:50Z", "message": "spotless"}, "afterCommit": {"oid": "2d6db7d79bf00e377b4142370b342122a64f1a35", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/2d6db7d79bf00e377b4142370b342122a64f1a35", "committedDate": "2020-05-23T01:52:14Z", "message": "rename now uses the new data model"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjU3NjU0", "url": "https://github.com/apache/geode/pull/5152#pullrequestreview-417257654", "createdAt": "2020-05-23T07:18:19Z", "commit": {"oid": "92ba7d039687ff29efb50bae1be3a263419db0bc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxODoxOVrOGZn9pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxOToxM1rOGZn9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyMjM0Mw==", "bodyText": "What if get returns null? I think in that case rename should immediately return false.", "url": "https://github.com/apache/geode/pull/5152#discussion_r429522343", "createdAt": "2020-05-23T07:18:19Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -46,4 +47,13 @@ public boolean del(ByteArrayWrapper key) {\n   public boolean exists(ByteArrayWrapper key) {\n     return localRegion.containsKey(key);\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+\n+    Object value = localRegion.get(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ba7d039687ff29efb50bae1be3a263419db0bc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyMjM3OQ==", "bodyText": "It looks like this impl will not work on String since they do not yet store their data in the region.\nIt might be best just to wait for the String work to complete", "url": "https://github.com/apache/geode/pull/5152#discussion_r429522379", "createdAt": "2020-05-23T07:19:13Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -46,4 +47,13 @@ public boolean del(ByteArrayWrapper key) {\n   public boolean exists(ByteArrayWrapper key) {\n     return localRegion.containsKey(key);\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+\n+    Object value = localRegion.get(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ba7d039687ff29efb50bae1be3a263419db0bc"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9992dac66848c0d064c5240380313f07f29845b", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/d9992dac66848c0d064c5240380313f07f29845b", "committedDate": "2020-06-01T20:18:45Z", "message": "WIP"}, "afterCommit": {"oid": "9a1d3b9adc8680988ad7fa49650d033979e303ff", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/9a1d3b9adc8680988ad7fa49650d033979e303ff", "committedDate": "2020-06-01T21:49:34Z", "message": "WIP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzk0MTcy", "url": "https://github.com/apache/geode/pull/5152#pullrequestreview-423794172", "createdAt": "2020-06-03T17:51:52Z", "commit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1MTo1MlrOGem_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1ODozOVrOGenO9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTM1Nw==", "bodyText": "use AbstractExecutor.getRedisKeyCommands(context) instead", "url": "https://github.com/apache/geode/pull/5152#discussion_r434749357", "createdAt": "2020-06-03T17:51:52Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -47,47 +35,15 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n \n     ByteArrayWrapper key = command.getKey();\n     ByteArrayWrapper newKey = new ByteArrayWrapper(commandElems.get(2));\n+    RedisKeyCommands redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTk3Nw==", "bodyText": "get rid of RegionProvider on this function. I think this is left over from when we had multiple regions.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434749977", "createdAt": "2020-06-03T17:52:57Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameFunction.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.redis.internal.executor;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.execute.Function;\n+import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.cache.partition.PartitionRegionHelper;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.internal.cache.LocalDataSet;\n+import org.apache.geode.internal.cache.PartitionedRegion;\n+import org.apache.geode.internal.cache.execute.RegionFunctionContextImpl;\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.RegionProvider;\n+import org.apache.geode.redis.internal.executor.set.RedisSet;\n+import org.apache.geode.redis.internal.executor.set.SingleResultCollector;\n+import org.apache.geode.redis.internal.executor.set.StripedExecutor;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class RenameFunction implements Function {\n+\n+  public static final String ID = \"REDIS_RENAME_FUNCTION\";\n+\n+  private final transient StripedExecutor stripedExecutor;\n+  private final RegionProvider regionProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDkxNw==", "bodyText": "change \"this associations\" to one of the following \"these associations\" or \"this association\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434750917", "createdAt": "2020-06-03T17:54:37Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -18,10 +18,11 @@\n \n import java.util.concurrent.Callable;\n \n+\n /**\n  * Allows users to \"stripe\" their execution in such a way that all tasks belonging to one stripe are\n  * executed in-order. A stripe is somehow associated with an Object called the \"stripeId\".\n- * It is upto the implementor of this interface to decide how to do this assocations.\n+ * It is up to the implementor of this interface to decide how to do this associations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MzI3MQ==", "bodyText": "consider getting rid of \"areSameStripe\" in favor of \"compareStripes(o1, o2) == 0\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434753271", "createdAt": "2020-06-03T17:58:39Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -35,4 +36,8 @@\n    */\n   public <T> T execute(Object stripeId,\n       Callable<T> callable);\n+\n+  public boolean areSameStripe(Object object1, Object object2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODAzOTgx", "url": "https://github.com/apache/geode/pull/5152#pullrequestreview-423803981", "createdAt": "2020-06-03T18:04:45Z", "commit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODowNDo0NVrOGendBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODowNDo0NVrOGendBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1Njg3MQ==", "bodyText": "If newKey is equal to oldKey it looks like this code will do the wrong thing. The redis rename docs say: \"<= 3.2.0: Before Redis 3.2.0, an error is returned if source and destination names are the same.\". Perhaps the best way to handle this is to check in the renameExecutor for equal keys and return \"OK\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434756871", "createdAt": "2020-06-03T18:04:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -102,4 +102,16 @@ protected RedisData getRedisDataOrDefault(ByteArrayWrapper key, RedisData defaul\n       return result;\n     }\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+    RedisData value = getRedisData(oldKey);\n+    if (value == null) {\n+      return false;\n+    }\n+\n+    region.put(newKey, value);\n+    region.remove(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/088633993ef84ab893bbf8348fe7ab26cc272e45", "committedDate": "2020-06-03T15:41:24Z", "message": "spotless, fix serializables"}, "afterCommit": {"oid": "4fb8b5eff346d6d54f8739a011611b10ee653689", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/4fb8b5eff346d6d54f8739a011611b10ee653689", "committedDate": "2020-06-03T18:07:24Z", "message": "Change Redis Rename Functions to Make use of Striped Executor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzODcwMTQz", "url": "https://github.com/apache/geode/pull/5152#pullrequestreview-423870143", "createdAt": "2020-06-03T19:37:11Z", "commit": {"oid": "2093d4f9d792a74900c5b2170db36abdd92f7239"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozNzoxMlrOGeqh1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozNzoxMlrOGeqh1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwNzI1NA==", "bodyText": "It would probably be better for you just to wait for: #5209. Otherwise this ignore will need to be removed in yet another pr.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434807254", "createdAt": "2020-06-03T19:37:12Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/ShutdownIntegrationTest.java", "diffHunk": "@@ -56,6 +57,7 @@ public void shutdownActuallyShutsDownTheServer() {\n   }\n \n   @Test\n+  @Ignore(\"will be remedied in: https://github.com/apache/geode/pull/5204\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2093d4f9d792a74900c5b2170db36abdd92f7239"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d59710e8132cc6456de513ea0e89842e165ee4f", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/6d59710e8132cc6456de513ea0e89842e165ee4f", "committedDate": "2020-06-03T20:06:54Z", "message": "Change Redis Rename Functions to Make use of Striped Executor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891f17aa780963e584ccbe1c2e39be6f81ebf374", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/891f17aa780963e584ccbe1c2e39be6f81ebf374", "committedDate": "2020-06-03T20:11:02Z", "message": "Unignores formerly flaky shutdown test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97424b21292967834019065b9a61ddfed1697da5", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/97424b21292967834019065b9a61ddfed1697da5", "committedDate": "2020-06-03T19:55:22Z", "message": "Updates sanctioned serializables"}, "afterCommit": {"oid": "891f17aa780963e584ccbe1c2e39be6f81ebf374", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/891f17aa780963e584ccbe1c2e39be6f81ebf374", "committedDate": "2020-06-03T20:11:02Z", "message": "Unignores formerly flaky shutdown test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80d4b8e2cec85168c9b8991ea300f13106395c6a", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/80d4b8e2cec85168c9b8991ea300f13106395c6a", "committedDate": "2020-06-03T20:51:49Z", "message": "Re-ignores flaky shutdown test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4575, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}