{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMjA2MzY0", "number": 5132, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozNzo1NVrOD-TSbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozODo0OFrOD-TUUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjU0MzE5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozNzo1NVrOGYUdFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozNzo1NVrOGYUdFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDEzMg==", "bodyText": "Instead of repeating this code in three places, comment-and-all, it would be better to have the three sites call a new method e.g. logFatal(\u2026). The method could have a block comment telling about what it's contract is etc.", "url": "https://github.com/apache/geode/pull/5132#discussion_r428154132", "createdAt": "2020-05-20T16:37:55Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -3054,7 +3058,9 @@ private void readMessage(ByteBuffer peerDataBuffer) {\n         failureMsg = \"Unexpected failure deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        logger.fatal(\"Unexpected failure deserializing message\", failureEx);\n+        // log at info level first in case fatal-level alert notification becomes blocked\n+        logger.info(failureMsg, failureEx);\n+        logger.fatal(failureMsg, failureEx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjU0ODAwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozODo0OFrOGYUgOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjo0NDo0MVrOGY6dzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDkzNw==", "bodyText": "why is toString() called explicitly in this case but not in the other two?", "url": "https://github.com/apache/geode/pull/5132#discussion_r428154937", "createdAt": "2020-05-20T16:38:48Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -3027,13 +3027,17 @@ private void readMessage(ByteBuffer peerDataBuffer) {\n         failureMsg = \"ClassNotFound deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        logger.fatal(\"ClassNotFound deserializing message: {}\", ex.toString());\n+        // log at info level first in case fatal-level alert notification becomes blocked\n+        logger.info(failureMsg, failureEx);\n+        logger.fatal(failureMsg, failureEx.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NjkxMQ==", "bodyText": "Beats me why the toString is there - I didn't add it.  I do want to see the full call stack when triaging a problem like this.  Maybe it has to do with alert listeners wanting one-liners?", "url": "https://github.com/apache/geode/pull/5132#discussion_r428776911", "createdAt": "2020-05-21T16:44:41Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -3027,13 +3027,17 @@ private void readMessage(ByteBuffer peerDataBuffer) {\n         failureMsg = \"ClassNotFound deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        logger.fatal(\"ClassNotFound deserializing message: {}\", ex.toString());\n+        // log at info level first in case fatal-level alert notification becomes blocked\n+        logger.info(failureMsg, failureEx);\n+        logger.fatal(failureMsg, failureEx.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDkzNw=="}, "originalCommit": {"oid": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4081, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}