{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Njk0MTI3", "number": 5351, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowODowMVrOENbcnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowODowMVrOENbcnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTE2NjM3OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/session/SessionDUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowODowMVrOGwG-5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjoyMzowMlrOGwHPyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTIzOQ==", "bodyText": "I'd prefer to see this retry logic happen in the Controller, but we can make that change later.", "url": "https://github.com/apache/geode/pull/5351#discussion_r453099239", "createdAt": "2020-07-10T22:08:01Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/session/SessionDUnitTest.java", "diffHunk": "@@ -144,26 +146,51 @@ protected String createNewSessionWithNote(int sessionApp, String note) {\n     HttpHeaders requestHeaders = new HttpHeaders();\n     requestHeaders.add(\"Cookie\", sessionCookie);\n     HttpEntity<String> request2 = new HttpEntity<>(\"\", requestHeaders);\n-\n-    return new RestTemplate()\n-        .exchange(\n-            \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n-            HttpMethod.GET,\n-            request2,\n-            String[].class)\n-        .getBody();\n+    boolean sesssionObtained = false;\n+    String[] responseBody = new String[0];\n+    do {\n+      try {\n+        responseBody = new RestTemplate()\n+            .exchange(\n+                \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n+                HttpMethod.GET,\n+                request2,\n+                String[].class)\n+            .getBody();\n+        sesssionObtained = true;\n+      } catch (HttpServerErrorException e) {\n+        if (e.getMessage().contains(\"Internal Server Error\")) {\n+          // retry\n+        } else {\n+          throw e;\n+        }\n+      }\n+    } while (!sesssionObtained);\n+    return responseBody;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eea2da922377fa0a4315cad6e16617519e5217e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwMzU2MQ==", "bodyText": "Is the Controller part of the product or part of this test app?", "url": "https://github.com/apache/geode/pull/5351#discussion_r453103561", "createdAt": "2020-07-10T22:23:02Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/session/SessionDUnitTest.java", "diffHunk": "@@ -144,26 +146,51 @@ protected String createNewSessionWithNote(int sessionApp, String note) {\n     HttpHeaders requestHeaders = new HttpHeaders();\n     requestHeaders.add(\"Cookie\", sessionCookie);\n     HttpEntity<String> request2 = new HttpEntity<>(\"\", requestHeaders);\n-\n-    return new RestTemplate()\n-        .exchange(\n-            \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n-            HttpMethod.GET,\n-            request2,\n-            String[].class)\n-        .getBody();\n+    boolean sesssionObtained = false;\n+    String[] responseBody = new String[0];\n+    do {\n+      try {\n+        responseBody = new RestTemplate()\n+            .exchange(\n+                \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n+                HttpMethod.GET,\n+                request2,\n+                String[].class)\n+            .getBody();\n+        sesssionObtained = true;\n+      } catch (HttpServerErrorException e) {\n+        if (e.getMessage().contains(\"Internal Server Error\")) {\n+          // retry\n+        } else {\n+          throw e;\n+        }\n+      }\n+    } while (!sesssionObtained);\n+    return responseBody;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTIzOQ=="}, "originalCommit": {"oid": "5eea2da922377fa0a4315cad6e16617519e5217e"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3912, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}