{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Mzc5Mzgw", "number": 4881, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjozMDo0OVrODs4Kag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjozMjo1OVrODs4M2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzg0MTA2OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjozMDo0OVrOF9-oGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMDoxMToxMlrOGBEpOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzMzUyOQ==", "bodyText": "Is this supposed to be \"classPatterns.uisEmpty() ? 0 : classPatterns.hashCode()\"\nAnyways the hashCode for empty set returns 0. Not sure if there if there are any performance benefits.", "url": "https://github.com/apache/geode/pull/4881#discussion_r400533529", "createdAt": "2020-03-30T22:30:49Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "diffHunk": "@@ -2417,9 +2417,9 @@ public int hashCode() {\n     final int prime = 31;\n     int result = 1;\n     result = prime * result + (checkPortability ? 1231 : 1237);\n-    result = prime * result + ((classPatterns == null) ? 0 : classPatterns.hashCode());\n-    result = prime * result + ((excludePatterns == null) ? 0 : excludePatterns.hashCode());\n-    result = prime * result + ((identityPatterns == null) ? 0 : identityPatterns.hashCode());\n+    result = prime * result + classPatterns.hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb005e20b035ae887fc7109548a113f5c85f3312"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3NzIyOQ==", "bodyText": "I went with thinking that hashCode implementation of HashSet is implemented by JDK and hence it must be designed in the already optimized state.", "url": "https://github.com/apache/geode/pull/4881#discussion_r403777229", "createdAt": "2020-04-06T00:06:26Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "diffHunk": "@@ -2417,9 +2417,9 @@ public int hashCode() {\n     final int prime = 31;\n     int result = 1;\n     result = prime * result + (checkPortability ? 1231 : 1237);\n-    result = prime * result + ((classPatterns == null) ? 0 : classPatterns.hashCode());\n-    result = prime * result + ((excludePatterns == null) ? 0 : excludePatterns.hashCode());\n-    result = prime * result + ((identityPatterns == null) ? 0 : identityPatterns.hashCode());\n+    result = prime * result + classPatterns.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzMzUyOQ=="}, "originalCommit": {"oid": "fb005e20b035ae887fc7109548a113f5c85f3312"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3Nzg0OA==", "bodyText": "Its also autogenerated code via the IDE", "url": "https://github.com/apache/geode/pull/4881#discussion_r403777848", "createdAt": "2020-04-06T00:11:12Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "diffHunk": "@@ -2417,9 +2417,9 @@ public int hashCode() {\n     final int prime = 31;\n     int result = 1;\n     result = prime * result + (checkPortability ? 1231 : 1237);\n-    result = prime * result + ((classPatterns == null) ? 0 : classPatterns.hashCode());\n-    result = prime * result + ((excludePatterns == null) ? 0 : excludePatterns.hashCode());\n-    result = prime * result + ((identityPatterns == null) ? 0 : identityPatterns.hashCode());\n+    result = prime * result + classPatterns.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzMzUyOQ=="}, "originalCommit": {"oid": "fb005e20b035ae887fc7109548a113f5c85f3312"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzg0NzMxOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjozMjo1OVrOF9-r3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMDoxMToyMFrOGBEpRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzNDQ5Mw==", "bodyText": "Can be made simple by having OR condition between all 3 checks. Its up to you what style you want to follow.", "url": "https://github.com/apache/geode/pull/4881#discussion_r400534493", "createdAt": "2020-03-30T22:32:59Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "diffHunk": "@@ -2434,20 +2434,11 @@ public boolean equals(Object obj) {\n     AutoSerializableManager other = (AutoSerializableManager) obj;\n     if (checkPortability != other.checkPortability)\n       return false;\n-    if (classPatterns == null) {\n-      if (other.classPatterns != null)\n-        return false;\n-    } else if (!classPatterns.equals(other.classPatterns))\n+    if (!classPatterns.equals(other.classPatterns))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb005e20b035ae887fc7109548a113f5c85f3312"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3Nzg2Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/geode/pull/4881#discussion_r403777863", "createdAt": "2020-04-06T00:11:20Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/pdx/internal/AutoSerializableManager.java", "diffHunk": "@@ -2434,20 +2434,11 @@ public boolean equals(Object obj) {\n     AutoSerializableManager other = (AutoSerializableManager) obj;\n     if (checkPortability != other.checkPortability)\n       return false;\n-    if (classPatterns == null) {\n-      if (other.classPatterns != null)\n-        return false;\n-    } else if (!classPatterns.equals(other.classPatterns))\n+    if (!classPatterns.equals(other.classPatterns))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUzNDQ5Mw=="}, "originalCommit": {"oid": "fb005e20b035ae887fc7109548a113f5c85f3312"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4458, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}