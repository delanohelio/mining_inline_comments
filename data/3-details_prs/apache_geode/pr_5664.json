{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MjAxNTUz", "number": 5664, "title": "GEODE-8650: Support multiple instances of DistributedReference", "bodyText": "Includes additional improvements for usage of DistributedReference\nin tests.", "createdAt": "2020-10-23T20:27:40Z", "url": "https://github.com/apache/geode/pull/5664", "merged": true, "mergeCommit": {"oid": "d9c859b1313d0aa2e9b6339563e7e2a8153fbeb1"}, "closed": true, "closedAt": "2020-10-26T20:46:48Z", "author": {"login": "kirklund"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVfUZjgFqTUxNjA5OTY3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWapfOgFqTUxNzE2MTk5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDk5Njcy", "url": "https://github.com/apache/geode/pull/5664#pullrequestreview-516099672", "createdAt": "2020-10-23T23:38:58Z", "commit": {"oid": "6f8bff1b948a18937c22a128c015fdb176be136a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzozODo1OVrOHnhDdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzozODo1OVrOHnhDdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODA2OQ==", "bodyText": "Could we not leverage method overloading here.\nInstead of toFalse((AtomicBoolean)object) we use close(object) and then have a close(AtomicBoolean) in the CompletionUtils?", "url": "https://github.com/apache/geode/pull/5664#discussion_r511198069", "createdAt": "2020-10-23T23:38:59Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/rules/DistributedReference.java", "diffHunk": "@@ -187,47 +197,76 @@ public V get() {\n    * @param newValue the new value\n    */\n   public DistributedReference<V> set(V newValue) {\n-    REFERENCE.set(newValue);\n+    REFERENCE.get().put(identity, newValue);\n     return this;\n   }\n \n+  @Override\n+  protected void before() {\n+    invoker().invokeInEveryVMAndController(() -> invokeBefore());\n+  }\n+\n   @Override\n   protected void after() {\n-    invoker().invokeInEveryVMAndController(this::invokeAfter);\n+    invoker().invokeInEveryVMAndController(() -> invokeAfter());\n+  }\n+\n+  protected void afterCreateVM(VM vm) {\n+    vm.invoke(() -> invokeBefore());\n+  }\n+\n+  protected void beforeBounceVM(VM vm) {\n+    // override if needed\n+  }\n+\n+  protected void afterBounceVM(VM vm) {\n+    vm.invoke(() -> invokeBefore());\n+  }\n+\n+  private void invokeBefore() {\n+    REFERENCE.compareAndSet(null, new HashMap<>());\n+    REFERENCE.get().putIfAbsent(identity, null);\n   }\n \n   private void invokeAfter() {\n-    V value = get();\n-    if (value == null) {\n+    Map<Integer, Object> references = REFERENCE.getAndSet(null);\n+    if (references == null) {\n+      return;\n+    }\n+\n+    for (Object object : references.values()) {\n+      invokeAfter(object);\n+    }\n+  }\n+\n+  private void invokeAfter(Object object) {\n+    if (object == null) {\n       return;\n     }\n-    REFERENCE.set(null);\n \n     if (autoClose.get()) {\n-      autoClose(value);\n+      autoClose(object);\n     }\n   }\n \n-  private void autoClose(V value) {\n-    if (value instanceof AutoCloseable) {\n-      close((AutoCloseable) value);\n+  private void autoClose(Object object) {\n+    if (object instanceof AutoCloseable) {\n+      close((AutoCloseable) object);\n \n-    } else if (hasMethod(value.getClass(), \"close\")) {\n-      invokeMethod(value, \"close\");\n+    } else if (object instanceof AtomicBoolean) {\n+      toFalse((AtomicBoolean) object);\n \n-    } else if (hasMethod(value.getClass(), \"disconnect\")) {\n-      invokeMethod(value, \"disconnect\");\n+    } else if (object instanceof CountDownLatch) {\n+      openLatch((CountDownLatch) object);\n \n-    } else if (hasMethod(value.getClass(), \"stop\")) {\n-      invokeMethod(value, \"stop\");\n-    }\n-  }\n+    } else if (hasMethod(object.getClass(), \"close\")) {\n+      invokeMethod(object, \"close\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f8bff1b948a18937c22a128c015fdb176be136a"}, "originalPosition": 136}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecd8bff893dc00848f98eb6289728012ffadbf0c", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/ecd8bff893dc00848f98eb6289728012ffadbf0c", "committedDate": "2020-10-24T00:38:54Z", "message": "GEODE-8650: Support multiple instances of DistributedReference\n\nIncludes additional improvements for usage of DistributedReference\nin tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f8bff1b948a18937c22a128c015fdb176be136a", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/6f8bff1b948a18937c22a128c015fdb176be136a", "committedDate": "2020-10-23T20:25:53Z", "message": "GEODE-8650: Support multiple instances of DistributedReference\n\nIncludes additional improvements for usage of DistributedReference\nin tests."}, "afterCommit": {"oid": "ecd8bff893dc00848f98eb6289728012ffadbf0c", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/ecd8bff893dc00848f98eb6289728012ffadbf0c", "committedDate": "2020-10-24T00:38:54Z", "message": "GEODE-8650: Support multiple instances of DistributedReference\n\nIncludes additional improvements for usage of DistributedReference\nin tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fa546320d448ff1e39407d758539bbb2a5355e3", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/4fa546320d448ff1e39407d758539bbb2a5355e3", "committedDate": "2020-10-26T17:31:58Z", "message": "* Rename all CompletionUtils to close\n* Annotate all overridden methods\n* Suppress false warnings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTYxOTkw", "url": "https://github.com/apache/geode/pull/5664#pullrequestreview-517161990", "createdAt": "2020-10-26T20:46:25Z", "commit": {"oid": "4fa546320d448ff1e39407d758539bbb2a5355e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3968, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}