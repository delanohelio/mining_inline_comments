{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3OTY5NjIx", "number": 4808, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoyNDozOFrODodA2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoyNzozMVrODodEjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzQ0OTg1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MultipleManagersRegressionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoyNDozOFrOF3Awdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDozNzowMFrOF3E15g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyODQwNg==", "bodyText": "I would like to see a description of the purpose and the approach of these tests.", "url": "https://github.com/apache/geode/pull/4808#discussion_r393228406", "createdAt": "2020-03-16T18:24:38Z", "author": {"login": "mhansonp"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MultipleManagersRegressionTest.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.geode.management;\n+\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static java.util.Arrays.asList;\n+import static javax.management.ObjectName.getInstance;\n+import static org.apache.geode.distributed.ConfigurationProperties.HTTP_SERVICE_PORT;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER_PORT;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER_START;\n+import static org.apache.geode.distributed.ConfigurationProperties.LOCATORS;\n+import static org.apache.geode.distributed.ConfigurationProperties.LOG_FILE;\n+import static org.apache.geode.distributed.ConfigurationProperties.MAX_WAIT_TIME_RECONNECT;\n+import static org.apache.geode.distributed.ConfigurationProperties.MEMBER_TIMEOUT;\n+import static org.apache.geode.internal.AvailablePortHelper.getRandomAvailableTCPPorts;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+import static org.apache.geode.test.dunit.VM.getVM;\n+import static org.apache.geode.test.dunit.VM.getVMId;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+\n+import java.io.File;\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import org.apache.geode.distributed.LocatorLauncher;\n+import org.apache.geode.distributed.internal.InternalLocator;\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.rules.DistributedRule;\n+import org.apache.geode.test.dunit.rules.SharedErrorCollector;\n+import org.apache.geode.test.junit.categories.JMXTest;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolder;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5NTMzNA==", "bodyText": "I've deleted MultipleManagersRegressionTest because it's redundant with coverage in JMXMBeanReconnectDUnitTest", "url": "https://github.com/apache/geode/pull/4808#discussion_r393295334", "createdAt": "2020-03-16T20:37:00Z", "author": {"login": "kirklund"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MultipleManagersRegressionTest.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.geode.management;\n+\n+import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n+import static java.util.Arrays.asList;\n+import static javax.management.ObjectName.getInstance;\n+import static org.apache.geode.distributed.ConfigurationProperties.HTTP_SERVICE_PORT;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER_PORT;\n+import static org.apache.geode.distributed.ConfigurationProperties.JMX_MANAGER_START;\n+import static org.apache.geode.distributed.ConfigurationProperties.LOCATORS;\n+import static org.apache.geode.distributed.ConfigurationProperties.LOG_FILE;\n+import static org.apache.geode.distributed.ConfigurationProperties.MAX_WAIT_TIME_RECONNECT;\n+import static org.apache.geode.distributed.ConfigurationProperties.MEMBER_TIMEOUT;\n+import static org.apache.geode.internal.AvailablePortHelper.getRandomAvailableTCPPorts;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+import static org.apache.geode.test.dunit.VM.getVM;\n+import static org.apache.geode.test.dunit.VM.getVMId;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+\n+import java.io.File;\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+import org.apache.geode.distributed.LocatorLauncher;\n+import org.apache.geode.distributed.internal.InternalLocator;\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.rules.DistributedRule;\n+import org.apache.geode.test.dunit.rules.SharedErrorCollector;\n+import org.apache.geode.test.junit.categories.JMXTest;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTemporaryFolder;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyODQwNg=="}, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzQ1NzEwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/management/internal/ManagementCacheListenerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoyNjo0NlrOF3A1Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo0MzozM1rOF3FCVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyOTYxMQ==", "bodyText": "I would like to see a description of the purpose and the approach of these tests.", "url": "https://github.com/apache/geode/pull/4808#discussion_r393229611", "createdAt": "2020-03-16T18:26:46Z", "author": {"login": "mhansonp"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/ManagementCacheListenerTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.management.internal;\n+\n+import static org.apache.geode.internal.cache.util.UncheckedUtils.cast;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.any;\n+import static org.mockito.Mockito.anyLong;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.same;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.mockito.quality.Strictness;\n+\n+import org.apache.geode.cache.EntryEvent;\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.distributed.DistributedMember;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5ODUxOQ==", "bodyText": "ManagementCacheListenerTest is part of #4807. It's duplicated in this PR only because #4808 builds upon #4807 and because Geode dev community no longer wants to allow a PR to have multiple commits.", "url": "https://github.com/apache/geode/pull/4808#discussion_r393298519", "createdAt": "2020-03-16T20:43:33Z", "author": {"login": "kirklund"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/ManagementCacheListenerTest.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.management.internal;\n+\n+import static org.apache.geode.internal.cache.util.UncheckedUtils.cast;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.any;\n+import static org.mockito.Mockito.anyLong;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.same;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.mockito.quality.Strictness;\n+\n+import org.apache.geode.cache.EntryEvent;\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.distributed.DistributedMember;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyOTYxMQ=="}, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzQ1OTM1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/management/internal/NotificationCacheListenerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODoyNzozMVrOF3A2tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMDo1MzoyOFrOF3FYqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMDAwNg==", "bodyText": "I would like to see a description of the purpose and the approach of these tests.", "url": "https://github.com/apache/geode/pull/4808#discussion_r393230006", "createdAt": "2020-03-16T18:27:31Z", "author": {"login": "mhansonp"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/NotificationCacheListenerTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.management.internal;\n+\n+import static org.apache.geode.internal.cache.util.UncheckedUtils.cast;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+\n+import javax.management.Notification;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.mockito.quality.Strictness;\n+\n+import org.apache.geode.cache.EntryEvent;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwNDIzNA==", "bodyText": "Java description has been added to each unit test class.", "url": "https://github.com/apache/geode/pull/4808#discussion_r393304234", "createdAt": "2020-03-16T20:53:28Z", "author": {"login": "kirklund"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/NotificationCacheListenerTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.management.internal;\n+\n+import static org.apache.geode.internal.cache.util.UncheckedUtils.cast;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+\n+import javax.management.Notification;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n+import org.mockito.quality.Strictness;\n+\n+import org.apache.geode.cache.EntryEvent;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMDAwNg=="}, "originalCommit": {"oid": "ca21b9c5806c2f3459c670843c8242a72a5e220a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4369, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}