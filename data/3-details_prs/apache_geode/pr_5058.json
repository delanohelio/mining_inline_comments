{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODMyNTE3", "number": 5058, "title": "GEODE-8089: more redis set ops use functions", "bodyText": "All set op executors should use the CommandFunction to route the op to the partitionRegion primary.\nThe following redis set commands have been changed to use functions in the PR:\nSCARD\nSISMEMBER\nSPOP\nSRANDMEMBER\nSSCAN\nThis pull request is a WIP to see how easy it would be to change the current implementation to one that uses functions.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-06T01:28:31Z", "url": "https://github.com/apache/geode/pull/5058", "merged": true, "mergeCommit": {"oid": "cf4c0ed16cd3a12bbcc8ce59f8536b6475d917b1"}, "closed": true, "closedAt": "2020-05-08T15:43:30Z", "author": {"login": "dschneider-pivotal"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfG-eKAH2gAyNDEzODMyNTE3OmYzZTE3ODI5NjU3ZDAzOTIwZjcyY2Y4OGU0YjI3YjkwOWI5NjdiYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfTviJgFqTQwODMyNjk5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f3e17829657d03920f72cf88e4b27b909b967bc6", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/f3e17829657d03920f72cf88e4b27b909b967bc6", "committedDate": "2020-05-08T00:45:24Z", "message": "scard now uses function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "149d2ae526c902c1639f5c99de31db291c066bb3", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/149d2ae526c902c1639f5c99de31db291c066bb3", "committedDate": "2020-05-08T00:53:52Z", "message": "sismember now uses function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad7135c5a72f39c1e7b6823c812651fbc06fee1d", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/ad7135c5a72f39c1e7b6823c812651fbc06fee1d", "committedDate": "2020-05-08T01:06:36Z", "message": "srandmember now uses a function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7084de70be2d4481a121145e1c8e768e465861f", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/a7084de70be2d4481a121145e1c8e768e465861f", "committedDate": "2020-05-08T01:16:57Z", "message": "spop now uses a function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39ac47a1a6fcb601623b2a9513a09ba6e46ed82f", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/39ac47a1a6fcb601623b2a9513a09ba6e46ed82f", "committedDate": "2020-05-08T01:19:59Z", "message": "fixed build warnings\nspop now removes RedisSet from region if it was emptied"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "464f6e09185dabb7730a64934346d26a44bd2ecc", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/464f6e09185dabb7730a64934346d26a44bd2ecc", "committedDate": "2020-05-08T01:26:54Z", "message": "sscan now uses a function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75d8f79f5c342f1f586209adc35bc1a17082de19", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/75d8f79f5c342f1f586209adc35bc1a17082de19", "committedDate": "2020-05-08T01:31:10Z", "message": "renamed members to smembers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac86d46a3835cd9007d4eebcd96f59a9ede20a52", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/ac86d46a3835cd9007d4eebcd96f59a9ede20a52", "committedDate": "2020-05-08T01:32:06Z", "message": "fixed compiliation issues from merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "831e94d0fa6420ed7b9a48fe33d0d245a83347c0", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/831e94d0fa6420ed7b9a48fe33d0d245a83347c0", "committedDate": "2020-05-08T01:32:54Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "committedDate": "2020-05-08T01:40:14Z", "message": "renamed members to smembers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5515fcc804c41c9d812d1511c23502bd53137640", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/5515fcc804c41c9d812d1511c23502bd53137640", "committedDate": "2020-05-07T22:01:13Z", "message": "fixed compiliation issues from merge"}, "afterCommit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/3c0703fe20aebc8c521e394a3d0a9dd5501641c7", "committedDate": "2020-05-08T01:40:14Z", "message": "renamed members to smembers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTcyNzc4", "url": "https://github.com/apache/geode/pull/5058#pullrequestreview-407972778", "createdAt": "2020-05-08T03:26:25Z", "commit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzoyNjoyNVrOGSXsvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzoyNjoyNVrOGSXsvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNTgzOQ==", "bodyText": "I don't think returnList can ever be null.  In that case, this check is unnecessary", "url": "https://github.com/apache/geode/pull/5058#discussion_r421915839", "createdAt": "2020-05-08T03:26:25Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/SScanExecutor.java", "diffHunk": "@@ -108,53 +99,17 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       return;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    List<ByteArrayWrapper> returnList =\n-        (List<ByteArrayWrapper>) getIteration(new ArrayList<>(set), matchPattern,\n-            count, cursor);\n-\n+    RedisSetCommands redisSetCommands =\n+        new RedisSetCommandsFunctionExecutor(context.getRegionProvider().getSetRegion());\n+    List<Object> returnList = redisSetCommands.sscan(key, matchPattern, count, cursor);\n+    if (returnList == null) {\n+      returnList = Collections.emptyList();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTc0MjAx", "url": "https://github.com/apache/geode/pull/5058#pullrequestreview-407974201", "createdAt": "2020-05-08T03:31:49Z", "commit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzozMTo0OVrOGSXyNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzozMTo0OVrOGSXyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzIzOA==", "bodyText": "does the calling code differentiate between null and an empty collection? If not, can we just return an empty collection and get rid of the upstream null checks.", "url": "https://github.com/apache/geode/pull/5058#discussion_r421917238", "createdAt": "2020-05-08T03:31:49Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/RedisSet.java", "diffHunk": "@@ -98,6 +102,156 @@ public static boolean del(Region<ByteArrayWrapper, RedisSet> region,\n     }\n   }\n \n+  public static int scard(Region<ByteArrayWrapper, RedisSet> region, ByteArrayWrapper key) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.size();\n+    } else {\n+      return -1;\n+    }\n+  }\n+\n+  public static boolean sismember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, ByteArrayWrapper member) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.contains(member);\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> srandmember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int count) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.srandmember(count);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> spop(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int popCount) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.doSpop(region, key, popCount);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static List<Object> sscan(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, Pattern matchPattern, int count, int cursor) {\n+    RedisSet RedisSet = region.get(key);\n+    if (RedisSet != null) {\n+      return RedisSet.doSscan(matchPattern, count, cursor);\n+    } else {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTc0MzQ1", "url": "https://github.com/apache/geode/pull/5058#pullrequestreview-407974345", "createdAt": "2020-05-08T03:32:25Z", "commit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzozMjoyNVrOGSXyrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzozMjoyNVrOGSXyrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxNzM1Ng==", "bodyText": "does the calling code differentiate between null and an empty collection? If not, can we just return an empty collection and get rid of the upstream null checks.", "url": "https://github.com/apache/geode/pull/5058#discussion_r421917356", "createdAt": "2020-05-08T03:32:25Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/RedisSet.java", "diffHunk": "@@ -98,6 +102,156 @@ public static boolean del(Region<ByteArrayWrapper, RedisSet> region,\n     }\n   }\n \n+  public static int scard(Region<ByteArrayWrapper, RedisSet> region, ByteArrayWrapper key) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.size();\n+    } else {\n+      return -1;\n+    }\n+  }\n+\n+  public static boolean sismember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, ByteArrayWrapper member) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.contains(member);\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> srandmember(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int count) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.srandmember(count);\n+    } else {\n+      return null;\n+    }\n+  }\n+\n+  public static Collection<ByteArrayWrapper> spop(Region<ByteArrayWrapper, RedisSet> region,\n+      ByteArrayWrapper key, int popCount) {\n+    RedisSet redisSet = region.get(key);\n+    if (redisSet != null) {\n+      return redisSet.doSpop(region, key, popCount);\n+    } else {\n+      return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0703fe20aebc8c521e394a3d0a9dd5501641c7"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96c75f8aa68497a054cfcc4d40330ac52db8e91", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/d96c75f8aa68497a054cfcc4d40330ac52db8e91", "committedDate": "2020-05-08T04:55:00Z", "message": "review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MzI2OTk5", "url": "https://github.com/apache/geode/pull/5058#pullrequestreview-408326999", "createdAt": "2020-05-08T15:37:51Z", "commit": {"oid": "d96c75f8aa68497a054cfcc4d40330ac52db8e91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4687, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}