{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0Nzk4NjI4", "number": 5767, "title": "GEODE-8717: INFO command returns specified sections", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n[ X] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n[ X] Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n[ X] Is your initial contribution a single, squashed commit?\n\n\n[ X] Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-11-20T16:01:17Z", "url": "https://github.com/apache/geode/pull/5767", "merged": true, "mergeCommit": {"oid": "c75a9eb6b737361bbc663081083192eebb087390"}, "closed": true, "closedAt": "2020-11-23T14:28:56Z", "author": {"login": "ringles"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeZcmrAH2gAyNTI0Nzk4NjI4OjU5NmQxMjhmMWQzNTk4NWMxNjVmZGFjNWRiYWFjYTI1MGVlMmMyNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfWAlLAFqTUzNjUyMTQzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "596d128f1d35985c165fdac5dbaaca250ee2c26d", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/596d128f1d35985c165fdac5dbaaca250ee2c26d", "committedDate": "2020-11-20T15:53:50Z", "message": "GEODE-8717: INFO command returns specified sections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7bb410da460b4e7ab40ad31a959f7786130a724", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/f7bb410da460b4e7ab40ad31a959f7786130a724", "committedDate": "2020-11-20T16:01:50Z", "message": "GEODE-8717: minor spA update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjMwNjE3", "url": "https://github.com/apache/geode/pull/5767#pullrequestreview-535630617", "createdAt": "2020-11-20T17:24:52Z", "commit": {"oid": "f7bb410da460b4e7ab40ad31a959f7786130a724"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjI4Nzcx", "url": "https://github.com/apache/geode/pull/5767#pullrequestreview-535628771", "createdAt": "2020-11-20T17:22:23Z", "commit": {"oid": "f7bb410da460b4e7ab40ad31a959f7786130a724"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyMjoyM1rOH3ZDlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyMjoyM1rOH3ZDlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0NDI0Ng==", "bodyText": "This is going to also modify ALL_PROPERTIES since nonStatsProperties is just a reference. I'd suggest making ALL_PROPERTIES immutable with something like\n.collect(Collectors.collectingAndThen(Collectors.toList(), Collections::unmodifiableList));\n\nand then it would be evident that you need to make a copy here and other places where this is happening.", "url": "https://github.com/apache/geode/pull/5767#discussion_r527844246", "createdAt": "2020-11-20T17:22:23Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractInfoIntegrationTest.java", "diffHunk": "@@ -98,71 +165,115 @@ public void shouldReturnClusterEnabledProperty() {\n     assertThat(actualResult).contains(expectedResult);\n   }\n \n-  final List<String> SERVER_PROPERTIES =\n-      Arrays.asList(\n-          \"# Server\",\n-          \"redis_version:\",\n-          \"tcp_port:\",\n-          \"redis_mode:\");\n-\n-  final List<String> PERSISTENCE_PROPERTIES =\n-      Arrays.asList(\n-          \"# Persistence\",\n-          \"loading:\");\n-\n-  final List<String> CLUSTER_PROPERTIES =\n-      Arrays.asList(\n-          \"# Cluster\",\n-          \"cluster_enabled:\");\n-\n   @Test\n-  public void shouldReturnServerSectionsGivenServerSectionParameter() {\n+  public void shouldReturnServerSections_givenServerSectionParameter() {\n+    List<String> nonServerProperties = ALL_PROPERTIES;\n+    nonServerProperties.removeAll(SERVER_PROPERTIES);\n+\n     String actualResult = jedis.info(\"server\");\n \n     assertThat(actualResult).contains(SERVER_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(CLUSTER_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(PERSISTENCE_PROPERTIES);\n+    assertThat(actualResult).doesNotContain(nonServerProperties);\n   }\n \n   @Test\n-  public void shouldReturnClusterSectionsGivenClusterSectionParameter() {\n+  public void shouldReturnClusterSections_givenClusterSectionParameter() {\n+    List<String> nonClusterProperties = ALL_PROPERTIES;\n+    nonClusterProperties.removeAll(CLUSTER_PROPERTIES);\n+\n     String actualResult = jedis.info(\"cluster\");\n \n     assertThat(actualResult).contains(CLUSTER_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(SERVER_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(PERSISTENCE_PROPERTIES);\n+    assertThat(actualResult).doesNotContain(nonClusterProperties);\n   }\n \n   @Test\n-  public void shouldReturnPersistenceSectionsGivenPersistenceSectionParameter() {\n+  public void shouldReturnPersistenceSections_givenPersistenceSectionParameter() {\n+    List<String> nonPersistenceProperties = ALL_PROPERTIES;\n+    nonPersistenceProperties.removeAll(PERSISTENCE_PROPERTIES);\n+\n     String actualResult = jedis.info(\"persistence\");\n \n     assertThat(actualResult).contains(PERSISTENCE_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(SERVER_PROPERTIES);\n-    assertThat(actualResult).doesNotContain(CLUSTER_PROPERTIES);\n+    assertThat(actualResult).doesNotContain(nonPersistenceProperties);\n+  }\n+\n+  @Test\n+  public void shouldReturnStatsSections_givenStatsSectionParameter() {\n+    List<String> nonStatsProperties = ALL_PROPERTIES;\n+    nonStatsProperties.removeAll(STATS_PROPERTIES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bb410da460b4e7ab40ad31a959f7786130a724"}, "originalPosition": 149}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28569d6b8c78842b5fe37e93d9c62c427f220801", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/28569d6b8c78842b5fe37e93d9c62c427f220801", "committedDate": "2020-11-20T18:10:38Z", "message": "GEODE-8717: make sure to copy unmodifiable list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a981b974949cfe9a5da17f5b185c5dab9860ad99", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/a981b974949cfe9a5da17f5b185c5dab9860ad99", "committedDate": "2020-11-20T19:45:21Z", "message": "GEODE-8717: needed spA by one character"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODI3MzMy", "url": "https://github.com/apache/geode/pull/5767#pullrequestreview-535827332", "createdAt": "2020-11-20T22:49:29Z", "commit": {"oid": "a981b974949cfe9a5da17f5b185c5dab9860ad99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjo0OTozMFrOH3jQuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjo0OTozMFrOH3jQuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAxMTQ1MQ==", "bodyText": "Wow... this seems so hard compared to list.addAll", "url": "https://github.com/apache/geode/pull/5767#discussion_r528011451", "createdAt": "2020-11-20T22:49:30Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/server/AbstractInfoIntegrationTest.java", "diffHunk": "@@ -39,6 +44,71 @@\n   private static final int REDIS_CLIENT_TIMEOUT =\n       Math.toIntExact(GeodeAwaitility.getTimeout().toMillis());\n \n+  final List<String> SERVER_PROPERTIES =\n+      Arrays.asList(\n+          \"# Server\",\n+          \"redis_version:\",\n+          \"redis_mode:\",\n+          \"tcp_port:\",\n+          \"uptime_in_days:\",\n+          \"uptime_in_seconds:\");\n+\n+  final List<String> PERSISTENCE_PROPERTIES =\n+      Arrays.asList(\n+          \"# Persistence\",\n+          \"rdb_changes_since_last_save\",\n+          \"rdb_last_save_time\",\n+          \"loading:\");\n+\n+  final List<String> REPLICATION_PROPERTIES =\n+      Arrays.asList(\n+          \"# Replication\",\n+          \"role:\",\n+          \"connected_slaves:\");\n+\n+  final List<String> CLUSTER_PROPERTIES =\n+      Arrays.asList(\n+          \"# Cluster\",\n+          \"cluster_enabled:\");\n+\n+  final List<String> CLIENTS_PROPERTIES =\n+      Arrays.asList(\n+          \"# Clients\",\n+          \"connected_clients:\",\n+          \"blocked_clients:\");\n+\n+  final List<String> MEMORY_PROPERTIES =\n+      Arrays.asList(\n+          \"# Memory\",\n+          \"used_memory:\",\n+          \"mem_fragmentation_ratio:\");\n+\n+  final List<String> KEYSPACE_PROPERTIES =\n+      Arrays.asList(\n+          \"# Keyspace\",\n+          \"db0:\");\n+\n+  final List<String> STATS_PROPERTIES =\n+      Arrays.asList(\n+          \"# Stats\",\n+          \"total_commands_processed:\",\n+          \"instantaneous_ops_per_sec:\",\n+          \"total_net_input_bytes:\",\n+          \"instantaneous_input_kbps:\",\n+          \"total_connections_received:\",\n+          \"keyspace_hits:\",\n+          \"keyspace_misses:\",\n+          \"evicted_keys:\",\n+          \"rejected_connections:\");\n+\n+\n+  final List<String> ALL_PROPERTIES =\n+      Stream.of(SERVER_PROPERTIES, PERSISTENCE_PROPERTIES, CLUSTER_PROPERTIES,\n+          MEMORY_PROPERTIES, CLIENTS_PROPERTIES, STATS_PROPERTIES, REPLICATION_PROPERTIES)\n+          .flatMap(Collection::stream)\n+          .collect(\n+              Collectors.collectingAndThen(Collectors.toList(), Collections::unmodifiableList));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a981b974949cfe9a5da17f5b185c5dab9860ad99"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NTIxNDMz", "url": "https://github.com/apache/geode/pull/5767#pullrequestreview-536521433", "createdAt": "2020-11-23T14:27:26Z", "commit": {"oid": "a981b974949cfe9a5da17f5b185c5dab9860ad99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3899, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}