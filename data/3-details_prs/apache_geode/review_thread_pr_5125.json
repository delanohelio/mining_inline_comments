{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODk4ODI0", "number": 5125, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxNzowOVrOD9cJlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxODoyNFrOD9cLmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzUwOTMzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/EmptyRedisHash.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxNzowOVrOGW73_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTo0NjozMVrOGW9HRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMjg0Nw==", "bodyText": "Do we still need this class? I'm not sure I fully understand it's usage since when I switched RedisHash.EMPTY to new RedisHash(Collections.emptyList()), HashesIntegrationTest still passes.", "url": "https://github.com/apache/geode/pull/5125#discussion_r426702847", "createdAt": "2020-05-18T15:17:09Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/EmptyRedisHash.java", "diffHunk": "@@ -26,41 +25,26 @@\n import org.apache.geode.redis.internal.executor.hash.RedisHash;\n \n public class EmptyRedisHash extends RedisHash {\n-  @Override\n-  public synchronized int hset(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToSet, boolean nx) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  @Override\n-  public synchronized int hdel(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToRemove) {\n-    return 0;\n-  }\n-\n-  @Override\n-  public synchronized Collection<ByteArrayWrapper> hgetall() {\n-    return emptyList();\n+  public EmptyRedisHash() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011864416cad9c589e3a39ef76b8be10e0cc4711"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyMjkzMQ==", "bodyText": "It is just an optimization. It gives us a single instance of RedisHash that represents an empty hash instead of having to create a new instance every time we want to represent an empty hash. We do this alot because we have a common pattern of not wanting to return null when we do the initial lookup of a RedisHash from the region.", "url": "https://github.com/apache/geode/pull/5125#discussion_r426722931", "createdAt": "2020-05-18T15:46:12Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/EmptyRedisHash.java", "diffHunk": "@@ -26,41 +25,26 @@\n import org.apache.geode.redis.internal.executor.hash.RedisHash;\n \n public class EmptyRedisHash extends RedisHash {\n-  @Override\n-  public synchronized int hset(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToSet, boolean nx) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  @Override\n-  public synchronized int hdel(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToRemove) {\n-    return 0;\n-  }\n-\n-  @Override\n-  public synchronized Collection<ByteArrayWrapper> hgetall() {\n-    return emptyList();\n+  public EmptyRedisHash() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMjg0Nw=="}, "originalCommit": {"oid": "011864416cad9c589e3a39ef76b8be10e0cc4711"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyMzE0Mg==", "bodyText": "We do have to be careful that our canonical instance is immutable", "url": "https://github.com/apache/geode/pull/5125#discussion_r426723142", "createdAt": "2020-05-18T15:46:31Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/EmptyRedisHash.java", "diffHunk": "@@ -26,41 +25,26 @@\n import org.apache.geode.redis.internal.executor.hash.RedisHash;\n \n public class EmptyRedisHash extends RedisHash {\n-  @Override\n-  public synchronized int hset(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToSet, boolean nx) {\n-    throw new UnsupportedOperationException();\n-  }\n-\n-  @Override\n-  public synchronized int hdel(Region<ByteArrayWrapper, RedisData> region, ByteArrayWrapper key,\n-      List<ByteArrayWrapper> fieldsToRemove) {\n-    return 0;\n-  }\n-\n-  @Override\n-  public synchronized Collection<ByteArrayWrapper> hgetall() {\n-    return emptyList();\n+  public EmptyRedisHash() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMjg0Nw=="}, "originalCommit": {"oid": "011864416cad9c589e3a39ef76b8be10e0cc4711"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NzUxNDQ4OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxODoyNFrOGW77Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTo0NzoxM1rOGW9I8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMzY2Ng==", "bodyText": "How is this used / invoked?", "url": "https://github.com/apache/geode/pull/5125#discussion_r426703666", "createdAt": "2020-05-18T15:18:24Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "diffHunk": "@@ -117,6 +118,32 @@ protected Object compute(Region localRegion, ByteArrayWrapper key,\n             () -> new RedisSetInRegion(localRegion).sscan(key, matchPattern, count, cursor);\n         break;\n       }\n+      case SCREATE: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011864416cad9c589e3a39ef76b8be10e0cc4711"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyMzU2OA==", "bodyText": "I think the place I was using it was refactored and now it is not used. I'll remove it.", "url": "https://github.com/apache/geode/pull/5125#discussion_r426723568", "createdAt": "2020-05-18T15:47:13Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "diffHunk": "@@ -117,6 +118,32 @@ protected Object compute(Region localRegion, ByteArrayWrapper key,\n             () -> new RedisSetInRegion(localRegion).sscan(key, matchPattern, count, cursor);\n         break;\n       }\n+      case SCREATE: {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMzY2Ng=="}, "originalCommit": {"oid": "011864416cad9c589e3a39ef76b8be10e0cc4711"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4072, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}