{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzI4NTM2", "number": 4833, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowNToxMVrODqhDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxNzo1NFrODqhTnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTA4Mjk4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowNToxMVrOF6UBiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoxMjo1OVrOF6WZRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTgwMw==", "bodyText": "Sorry, if i missed this in earlier comments. The \"onlyUseExistingCnx\" indicates no new connection to be created, by the time this gets checked, a create connection attempt will be made if \"tryCreate\" is true (above logic).\nIt seems right to keep the condition check as If(onlyUseExistingCnx) { throw new AllConnectionsInUseException();} if there are no connection to this server available, the exception may be handled differently based on the caller.", "url": "https://github.com/apache/geode/pull/4833#discussion_r396689803", "createdAt": "2020-03-23T19:05:11Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);\n         }\n \n         if (!onlyUseExistingCnx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwNTgyOQ==", "bodyText": "I introduced logic simular to borrowConnection, because if connectins in pool are not up to maximum, why we could not create new connection. And if \"onlyUseExistingCnx\" is set to false, we will create new connection, even if we exceed maximum.\nBut, I can return to previous implementation.", "url": "https://github.com/apache/geode/pull/4833#discussion_r396705829", "createdAt": "2020-03-23T19:33:59Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);\n         }\n \n         if (!onlyUseExistingCnx) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTgwMw=="}, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcyODY0NA==", "bodyText": "Agree with your thinking in relation to max-connection; but this arguments seems to enforce that only existing connection needs to be used.", "url": "https://github.com/apache/geode/pull/4833#discussion_r396728644", "createdAt": "2020-03-23T20:12:59Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);\n         }\n \n         if (!onlyUseExistingCnx) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTgwMw=="}, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTEyNDc3OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxNzo1NFrOF6Ucxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo0OToyM1rOF9qpQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Njc3NA==", "bodyText": "If the tryCreate() is true, and for any reason, unable to create connection, it should be in the loop till the specified timeout (server-timeout), right? throwing an exception here will return before the specified wait time.", "url": "https://github.com/apache/geode/pull/4833#discussion_r396696774", "createdAt": "2020-03-23T19:17:54Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTkyMA==", "bodyText": "It is simular to borrowConnection() implementation, so we are reatempting, until we can try to create connection (until pool size drops bellow maximum). If server is unreachable, we will throw exception.", "url": "https://github.com/apache/geode/pull/4833#discussion_r396711920", "createdAt": "2020-03-23T19:43:06Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Njc3NA=="}, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMTkxNg==", "bodyText": "OK, i get your point. I was thinking of the case, where server is busy when this connection is attempted. Also, do we need to handle GemFireSecurityException?", "url": "https://github.com/apache/geode/pull/4833#discussion_r396731916", "createdAt": "2020-03-23T20:19:38Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Njc3NA=="}, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwNjE0Ng==", "bodyText": "As I said, logic is the same as for borrowConnection(), so I would not change this logic.", "url": "https://github.com/apache/geode/pull/4833#discussion_r400206146", "createdAt": "2020-03-30T13:49:23Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/ConnectionManagerImpl.java", "diffHunk": "@@ -338,6 +335,10 @@ public PooledConnection borrowConnection(ServerLocation server, long acquireTime\n               }\n             }\n           }\n+          if (null != connection) {\n+            return connection;\n+          }\n+          throw new ServerConnectivityException(BORROW_CONN_ERROR_MSG + server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Njc3NA=="}, "originalCommit": {"oid": "0203011644e708bd3d8d8b6a3dc550638f357102"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4402, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}