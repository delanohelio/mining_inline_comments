{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5ODYzMjE4", "number": 5851, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMTozNTowOFrOFL6G3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNzo1Mzo0OFrOFMO2bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDMwNjg0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMTozNTowOFrOIPWwRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMTowNToyOFrOIP8Q8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3MjM1Nw==", "bodyText": "I think it would be better to change it so the only the we don't do if we are evicting is handleEntryNotFound(). When evicting we do not want an exception if the entry is already gone.\nSo I would change line 369 to just be an \"else\" and then put a \"if (!isEviction)\" on handleEntryNotFound (even better might be to change handleEntryNotFound to test isEviction and return since this is the only place it is called).\nThen you can get rid of your new code on 375 and 376.\nI do think it is probably correct to call removeEntryOrLeaveTombstone for an eviction just to make sure it follows the normal rules of scheduling a tombstone when concurrency checks are enabled. This method is already a noop if evicting without concurrency checks.", "url": "https://github.com/apache/geode/pull/5851#discussion_r552972357", "createdAt": "2021-01-06T21:35:08Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "diffHunk": "@@ -372,6 +372,8 @@ private void retryRemoveWithTombstone() {\n           } finally {\n             removeEntryOrLeaveTombstone();\n           }\n+        } else if (regionEntry == null && !newRegionEntry.isTombstone()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc8e59c3ddcde2dc7714af412b86e7fe0f406e9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzU4NjkyOA==", "bodyText": "I moved a bit fast here with the first solution, as it appears we fail to pass the unit test evictDestroyOfExistingTombstoneWithConcurrencyChecksReturnsFalse. Suggesting that we don't properly handle the case where we're in an eviction and already set the region entry as tombstone. If we break up the check on isEviction and newRegionEntry.isTombstone we cause more unit tests to fail.\nWith the current issue, we're trying to catch the specific case where we have concurrency checks enabled, we're in an eviction, and we've created a new region entry marked as tombstone. I've restructured retryRemoveWithTombstone some so eviction and non-evictions go down the same path, and avoids a clause with a lone call to removeEntryOrLeaveTombstone that addresses this issue and passes unit tests.", "url": "https://github.com/apache/geode/pull/5851#discussion_r553586928", "createdAt": "2021-01-07T21:05:28Z", "author": {"login": "luissson"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "diffHunk": "@@ -372,6 +372,8 @@ private void retryRemoveWithTombstone() {\n           } finally {\n             removeEntryOrLeaveTombstone();\n           }\n+        } else if (regionEntry == null && !newRegionEntry.isTombstone()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3MjM1Nw=="}, "originalCommit": {"oid": "2fc8e59c3ddcde2dc7714af412b86e7fe0f406e9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MzcwNTQxOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNzo1Mzo0OFrOIP2O5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxODoyMzo0NFrOIP3MBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ4ODEwMA==", "bodyText": "This is just a code style thing but add curlys around the return statement.", "url": "https://github.com/apache/geode/pull/5851#discussion_r553488100", "createdAt": "2021-01-07T17:53:48Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "diffHunk": "@@ -528,6 +528,9 @@ private void handleEntryNotFound() {\n     boolean throwException = false;\n     EntryNotFoundException entryNotFoundException = null;\n \n+    if(isEviction)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10b60d190d0372bc86fcbd23ca7cc79b71d86757"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUwMzc0OQ==", "bodyText": "done!", "url": "https://github.com/apache/geode/pull/5851#discussion_r553503749", "createdAt": "2021-01-07T18:23:44Z", "author": {"login": "luissson"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/map/RegionMapDestroy.java", "diffHunk": "@@ -528,6 +528,9 @@ private void handleEntryNotFound() {\n     boolean throwException = false;\n     EntryNotFoundException entryNotFoundException = null;\n \n+    if(isEviction)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ4ODEwMA=="}, "originalCommit": {"oid": "10b60d190d0372bc86fcbd23ca7cc79b71d86757"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4876, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}