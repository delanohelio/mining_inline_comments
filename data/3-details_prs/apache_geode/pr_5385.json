{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjc4ODgy", "number": 5385, "title": "GEODE-8370: Add test for maxInactiveInterval", "bodyText": "Write test verifying that maxInactiveInterval propagates correctly to all buckets", "createdAt": "2020-07-20T17:43:35Z", "url": "https://github.com/apache/geode/pull/5385", "merged": true, "mergeCommit": {"oid": "2a2c2aaf880a89b5cf9589ef56fa775b8153ae41"}, "closed": true, "closedAt": "2020-07-21T19:06:09Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc21RtJAH2gAyNDUzNjc4ODgyOmY4ZDY4NDdlZDAxY2VhYWViMmIyMDgzODljMmRmMzgyYWU4ZmE1ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3I26OAFqTQ1MjYzMjA2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f8d6847ed01ceaaeb2b208389c2df382ae8fa5ec", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/f8d6847ed01ceaaeb2b208389c2df382ae8fa5ec", "committedDate": "2020-07-20T17:42:18Z", "message": "GEODE-8370: Add test for maxInactiveInterval"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a56803cc528994ca90d0d5958bff4e2c24f7111", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/4a56803cc528994ca90d0d5958bff4e2c24f7111", "committedDate": "2020-07-20T17:47:21Z", "message": "removes sout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf10b0c37aef6ea6e394edf3bec23da025f25d92", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/cf10b0c37aef6ea6e394edf3bec23da025f25d92", "committedDate": "2020-07-20T18:02:25Z", "message": "tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f828df23af3d2b6b9f93e8669c3207b227cabe9c", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/f828df23af3d2b6b9f93e8669c3207b227cabe9c", "committedDate": "2020-07-20T18:10:05Z", "message": "Corrects ByteInputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0938a4c341c1f839d0c5fc84f7ac8205d30149d", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/d0938a4c341c1f839d0c5fc84f7ac8205d30149d", "committedDate": "2020-07-20T19:39:23Z", "message": "ignores irrelevant test in native redis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjEyODQz", "url": "https://github.com/apache/geode/pull/5385#pullrequestreview-452612843", "createdAt": "2020-07-21T16:08:20Z", "commit": {"oid": "d0938a4c341c1f839d0c5fc84f7ac8205d30149d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjowODoyMFrOG0_UDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjoxNDoyNFrOG0_kZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNjQ2MA==", "bodyText": "Normally when I see an ignore on a test I want to know why the test is being ignored. I think it is something we could fix and then have this test. In this case I think we are overriding a test that we will never do with native redis. It seems like the empty method impl takes care of that and you would not need the ignore. This is just my opinion, I'd be okay if you leave the ignore if you think that is best.", "url": "https://github.com/apache/geode/pull/5385#discussion_r458216460", "createdAt": "2020-07-21T16:08:20Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/acceptanceTest/java/session/NativeRedisSessionExpirationAcceptanceTest.java", "diffHunk": "@@ -50,4 +50,10 @@ public static void setup() {\n   public void sessionShouldTimeout_whenAppFailsOverToAnotherRedisServer() {\n     // Only using one server for Native Redis\n   }\n+\n+  @Test\n+  @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0938a4c341c1f839d0c5fc84f7ac8205d30149d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMDY0Ng==", "bodyText": "instead of the hard coded \"113\", ask the PartitionedRegion for its max bucket. See PartitionedRegion.getTotalNumberOfBuckets. This will help in the future when we allow the redis bucket count to be configured", "url": "https://github.com/apache/geode/pull/5385#discussion_r458220646", "createdAt": "2020-07-21T16:14:24Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/session/SessionExpirationDUnitTest.java", "diffHunk": "@@ -86,15 +100,78 @@ public void sessionShouldTimeout_whenAppFailsOverToAnotherRedisServer() {\n     }\n   }\n \n+  @Test\n+  public void sessionShouldNotTimeout_whenPersisted() {\n+    String sessionCookie = createNewSessionWithNote(APP2, \"note1\");\n+    setMaxInactiveInterval(APP2, sessionCookie, -1);\n+\n+    compareMaxInactiveIntervals();\n+  }\n+\n   private void waitForTheSessionToExpire(String sessionId) {\n     GeodeAwaitility.await().ignoreExceptions().atMost((SHORT_SESSION_TIMEOUT + 5), TimeUnit.SECONDS)\n         .until(\n-            () -> jedisConnetedToServer1.ttl(\"spring:session:sessions:expires:\" + sessionId) < 0);\n+            () -> jedisConnetedToServer1.ttl(\"spring:session:sessions:expires:\" + sessionId) == -2);\n   }\n \n   private void refreshSession(String sessionCookie, int sessionApp) {\n     GeodeAwaitility.await()\n         .during(SHORT_SESSION_TIMEOUT + 2, TimeUnit.SECONDS)\n         .until(() -> getSessionNotes(sessionApp, sessionCookie) != null);\n   }\n+\n+  void setMaxInactiveInterval(int sessionApp, String sessionCookie, int maxInactiveInterval) {\n+    HttpHeaders requestHeaders = new HttpHeaders();\n+    requestHeaders.add(\"Cookie\", sessionCookie);\n+    HttpEntity<Integer> request = new HttpEntity<>(maxInactiveInterval, requestHeaders);\n+    new RestTemplate()\n+        .postForEntity(\n+            \"http://localhost:\" + ports.get(sessionApp) + \"/setMaxInactiveInterval\",\n+            request,\n+            Integer.class)\n+        .getHeaders();\n+  }\n+\n+  private void compareMaxInactiveIntervals() {\n+    cluster.getVM(1).invoke(() -> {\n+      for (int j = 0; j < 113; j++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0938a4c341c1f839d0c5fc84f7ac8205d30149d"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be985ab3ba298db47a5083f154550ab37f3c9fa7", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/be985ab3ba298db47a5083f154550ab37f3c9fa7", "committedDate": "2020-07-21T16:27:29Z", "message": "PR review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjMyMDYz", "url": "https://github.com/apache/geode/pull/5385#pullrequestreview-452632063", "createdAt": "2020-07-21T16:31:08Z", "commit": {"oid": "be985ab3ba298db47a5083f154550ab37f3c9fa7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4230, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}