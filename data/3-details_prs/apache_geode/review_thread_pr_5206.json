{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjY1NTE3", "number": 5206, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowMzo0MVrOECap6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjo1NlrOECaseg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTY5MzIyOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowMzo0MVrOGe29Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDozODo0MlrOGfJO-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDg3NQ==", "bodyText": "I think this setReponse call should have been deleted", "url": "https://github.com/apache/geode/pull/5206#discussion_r435010875", "createdAt": "2020-06-04T06:03:41Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -81,31 +79,30 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       }\n       stringCommands.set(key, new ByteArrayWrapper(bytes), null);\n       command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxMDMyOA==", "bodyText": "Doh! Thanks.", "url": "https://github.com/apache/geode/pull/5206#discussion_r435310328", "createdAt": "2020-06-04T14:38:42Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -81,31 +79,30 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       }\n       stringCommands.set(key, new ByteArrayWrapper(bytes), null);\n       command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDg3NQ=="}, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTY5NTEyOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNDo0MVrOGe2-cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNDo0MVrOGe2-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTE4Nw==", "bodyText": "Should this setResponse be removed?", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011187", "createdAt": "2020-06-04T06:04:41Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java", "diffHunk": "@@ -47,27 +48,17 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       byte[] bitAr = commandElems.get(2);\n       bit = Coder.bytesToInt(bitAr);\n     } catch (NumberFormatException e) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));\n-      return;\n+      return RedisResponse.error(ERROR_NOT_INT);\n     }\n \n     if (bit != 0 && bit != 1) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_BIT));\n-      return;\n+      return RedisResponse.error(ERROR_BIT);\n     }\n \n     if (string == null || string.length() == 0) {\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit)); // Redis\n-      // returns\n-      // 0 when\n-      // key\n-      // does\n-      // not\n-      // exists\n-      // for\n-      // this\n-      // command\n-      return;\n+      // Redis returns 0 when key does not exists for this command\n+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTY5Nzk3OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjowMlrOGe3AMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjowMlrOGe3AMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTYzNQ==", "bodyText": "remove this setResponse calls", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011635", "createdAt": "2020-06-04T06:06:02Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -34,12 +35,13 @@\n       \"The offset is out of range, must be greater than or equal to 0  and at most 4294967295 (512MB)\";\n \n   @Override\n-  public void executeCommand(Command command, ExecutionHandlerContext context) {\n+  public RedisResponse executeCommandWithResponse(Command command,\n+      ExecutionHandlerContext context) {\n     List<byte[]> commandElems = command.getProcessedCommand();\n \n     if (commandElems.size() < 4) {\n       command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.SETBIT));\n-      return;\n+      return RedisResponse.error(ArityDef.SETBIT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTY5OTc4OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjo1NlrOGe3BVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjo1NlrOGe3BVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTkyNA==", "bodyText": "remove this setResponse call", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011924", "createdAt": "2020-06-04T06:06:56Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java", "diffHunk": "@@ -42,23 +44,24 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n     try {\n       setOptions = parseCommandElems(commandElems);\n     } catch (IllegalArgumentException ex) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ex.getMessage()));\n-      return;\n+      return RedisResponse.error(ex.getMessage());\n     }\n \n-    doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n+    return doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n   }\n \n-  private void doSet(Command command, ExecutionHandlerContext context, ByteArrayWrapper key,\n+  private RedisResponse doSet(Command command, ExecutionHandlerContext context,\n+      ByteArrayWrapper key,\n       ByteArrayWrapper value, RedisStringCommands redisStringCommands, SetOptions setOptions) {\n \n     boolean result = redisStringCommands.set(key, value, setOptions);\n \n     if (result) {\n       command.setResponse(Coder.getSimpleStringResponse(context.getByteBufAllocator(), SUCCESS));\n-    } else {\n-      command.setResponse(Coder.getNilResponse(context.getByteBufAllocator()));\n+      return RedisResponse.string(SUCCESS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3955, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}