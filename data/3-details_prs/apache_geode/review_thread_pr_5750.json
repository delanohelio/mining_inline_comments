{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTQyNDk5", "number": 5750, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0NDo1NVrOE5mqBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0NDo1NVrOE5mqBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODM3NjM5OnYy", "diffSide": "RIGHT", "path": "geode-wan/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventRemoteDispatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0NDo1NVrOH0KSzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoxODoxMlrOH0LjQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1NjY1NQ==", "bodyText": "Does this debug statement need to be moved inside the readLock too since it calls this.connection.getServer()?", "url": "https://github.com/apache/geode/pull/5750#discussion_r524456655", "createdAt": "2020-11-16T17:44:55Z", "author": {"login": "boglesby"}, "path": "geode-wan/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventRemoteDispatcher.java", "diffHunk": "@@ -295,9 +301,16 @@ public Connection getConnection(boolean startAckReaderThread) throws GatewaySend\n     // OR the connection's ServerLocation doesn't match with the one stored in sender\n     // THEN initialize the connection\n     if (!this.sender.isParallel()) {\n-      if (this.connection == null || this.connection.isDestroyed()\n-          || this.connection.getServer() == null\n-          || !this.connection.getServer().equals(this.sender.getServerLocation())) {\n+      boolean needToReconnect = false;\n+      getConnectionLifeCycleLock().readLock().lock();\n+      try {\n+        needToReconnect = this.connection == null || this.connection.isDestroyed()\n+            || this.connection.getServer() == null\n+            || !this.connection.getServer().equals(this.sender.getServerLocation());\n+      } finally {\n+        getConnectionLifeCycleLock().readLock().unlock();\n+      }\n+      if (needToReconnect) {\n         if (logger.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a64ab2e2e0a37954d660074170f5f72e2f0680bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3NzI0OA==", "bodyText": "No need, you see the original author used:\n(this.connection == null) ? \"null\" : ...\nThat means he realized this connection could be null here", "url": "https://github.com/apache/geode/pull/5750#discussion_r524477248", "createdAt": "2020-11-16T18:18:12Z", "author": {"login": "gesterzhou"}, "path": "geode-wan/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventRemoteDispatcher.java", "diffHunk": "@@ -295,9 +301,16 @@ public Connection getConnection(boolean startAckReaderThread) throws GatewaySend\n     // OR the connection's ServerLocation doesn't match with the one stored in sender\n     // THEN initialize the connection\n     if (!this.sender.isParallel()) {\n-      if (this.connection == null || this.connection.isDestroyed()\n-          || this.connection.getServer() == null\n-          || !this.connection.getServer().equals(this.sender.getServerLocation())) {\n+      boolean needToReconnect = false;\n+      getConnectionLifeCycleLock().readLock().lock();\n+      try {\n+        needToReconnect = this.connection == null || this.connection.isDestroyed()\n+            || this.connection.getServer() == null\n+            || !this.connection.getServer().equals(this.sender.getServerLocation());\n+      } finally {\n+        getConnectionLifeCycleLock().readLock().unlock();\n+      }\n+      if (needToReconnect) {\n         if (logger.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1NjY1NQ=="}, "originalCommit": {"oid": "a64ab2e2e0a37954d660074170f5f72e2f0680bc"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4503, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}