{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNjI5NDYx", "number": 5682, "title": "GEODE-8668: Implement Redis SELECT command", "bodyText": "Co-authored-by: Hale Bales hbales@pivotal.io\nWe are implementing SELECT because some Redis analysis tools (like Redis Insight) require the SELECT command in order to function properly.  SELECT returns ERR Only DB 0 supported if anything other than 0 is passed in as a DB index argument.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-10-28T15:20:26Z", "url": "https://github.com/apache/geode/pull/5682", "merged": true, "mergeCommit": {"oid": "7e095b8bd7e8a57e631415d32c3877e111353faf"}, "closed": true, "closedAt": "2020-11-02T14:21:15Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW_CpogH2gAyNTExNjI5NDYxOmQ2OTFhZjczZjkzZjIwMWRlNTI4MGRkODgwOTE1ZmJiMTFkMTlkYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXnsE2AFqTUyMDcyNDY2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d691af73f93f201de5280dd880915fbb11d19dc8", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/d691af73f93f201de5280dd880915fbb11d19dc8", "committedDate": "2020-10-28T15:10:29Z", "message": "GEODE-8668: Implement cluster mode version of Redis SELECT command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjY1MDEx", "url": "https://github.com/apache/geode/pull/5682#pullrequestreview-519665011", "createdAt": "2020-10-29T13:30:53Z", "commit": {"oid": "d691af73f93f201de5280dd880915fbb11d19dc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMDo1M1rOHqb4UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozNTozN1rOHqcFJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1OTAyNQ==", "bodyText": "No need to do this here since the super class handles the client setup.", "url": "https://github.com/apache/geode/pull/5682#discussion_r514259025", "createdAt": "2020-10-29T13:30:53Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/connection/SelectNativeRedisAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.redis.internal.executor.connection;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.rules.TestRule;\n+import org.testcontainers.containers.GenericContainer;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.test.junit.rules.IgnoreOnWindowsRule;\n+\n+public class SelectNativeRedisAcceptanceTest extends AbstractSelectIntegrationTest {\n+\n+  // Docker compose does not work on windows in CI. Ignore this test on windows\n+  // Using a RuleChain to make sure we ignore the test before the rule comes into play\n+  @ClassRule\n+  public static TestRule ignoreOnWindowsRule = new IgnoreOnWindowsRule();\n+\n+  private GenericContainer<?> redisContainer;\n+\n+  @Before\n+  public void setUp() {\n+    // starting redis in cluster mode\n+    redisContainer =\n+        new GenericContainer<>(\"grokzen/redis-cluster:5.0.9\")\n+            .withExposedPorts(7000)\n+            .withEnv(\"IP\", \"0.0.0.0\");\n+\n+    redisContainer.start();\n+    jedis = new Jedis(\"localhost\", getPort(), REDIS_CLIENT_TIMEOUT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d691af73f93f201de5280dd880915fbb11d19dc8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2MjMxMQ==", "bodyText": "I'm afraid that this error will be a bit misleading since it mentions cluster mode. I think the invalid DB index is better and we should document the limitation of only supporting DB 0. I do realize that this is a bit inconsistent with how native redis reports things.", "url": "https://github.com/apache/geode/pull/5682#discussion_r514262311", "createdAt": "2020-10-29T13:35:37Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisConstants.java", "diffHunk": "@@ -30,6 +30,8 @@\n   public static final String SERVER_ERROR_MESSAGE =\n       \"The server had an internal error please try again\";\n   public static final String SERVER_ERROR_SHUTDOWN = \"The server is shutting down\";\n+  public static final String ERROR_SELECT_CLUSTER_MODE = \"SELECT is not allowed in cluster mode\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d691af73f93f201de5280dd880915fbb11d19dc8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd58a8287fada51013a14c8669471ec348d8c3c9", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/fd58a8287fada51013a14c8669471ec348d8c3c9", "committedDate": "2020-10-29T14:09:36Z", "message": "Change redisContainer setup and teardown to class level methods in selectnative test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10fca8c7bd7d29a1ebc8ab43c23777addbe924d2", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/10fca8c7bd7d29a1ebc8ab43c23777addbe924d2", "committedDate": "2020-10-29T18:13:45Z", "message": "Change error returned by SELECT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1198ec4980f1e6006cff2bf81b3bd6d60eb19380", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/1198ec4980f1e6006cff2bf81b3bd6d60eb19380", "committedDate": "2020-10-29T18:24:09Z", "message": "Simplify select executor, remove unnecessary tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTYxMTAz", "url": "https://github.com/apache/geode/pull/5682#pullrequestreview-519961103", "createdAt": "2020-10-29T18:30:49Z", "commit": {"oid": "1198ec4980f1e6006cff2bf81b3bd6d60eb19380"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODozMDo0OVrOHqpUZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODozMDo0OVrOHqpUZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3OTIwNQ==", "bodyText": "I changed this so we are no longer parsing the long and just comparing the string value.  Let me know if you think this is the right approach.", "url": "https://github.com/apache/geode/pull/5682#discussion_r514479205", "createdAt": "2020-10-29T18:30:49Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/connection/SelectExecutor.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+package org.apache.geode.redis.internal.executor.connection;\n+\n+import static org.apache.geode.redis.internal.RedisConstants.ERROR_SELECT;\n+\n+import org.apache.geode.redis.internal.executor.AbstractExecutor;\n+import org.apache.geode.redis.internal.executor.RedisResponse;\n+import org.apache.geode.redis.internal.netty.Command;\n+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;\n+\n+public class SelectExecutor extends AbstractExecutor {\n+\n+  @Override\n+  public RedisResponse executeCommand(Command command, ExecutionHandlerContext context) {\n+    String dbIndexString = command.getStringKey();\n+\n+    if (!dbIndexString.equals(\"0\")) {\n+      return RedisResponse.error(ERROR_SELECT);\n+    }\n+\n+    return RedisResponse.ok();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1198ec4980f1e6006cff2bf81b3bd6d60eb19380"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzI0NjYz", "url": "https://github.com/apache/geode/pull/5682#pullrequestreview-520724663", "createdAt": "2020-10-30T14:31:56Z", "commit": {"oid": "1198ec4980f1e6006cff2bf81b3bd6d60eb19380"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3996, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}