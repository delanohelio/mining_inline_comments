{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NzI3MTA5", "number": 5598, "title": "GEODE-8579: Stop waiting locator-wait-time if all locators are available", "bodyText": "If we can contact all other locators, we should stop waiting for\nlocator-wait-time to elapse.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-10-06T17:52:30Z", "url": "https://github.com/apache/geode/pull/5598", "merged": true, "mergeCommit": {"oid": "faef81114d5a60bb1bcc4fdcb5c7fa7dd894bc86"}, "closed": true, "closedAt": "2020-10-08T21:54:30Z", "author": {"login": "upthewaterspout"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP8J1sgH2gAyNDk4NzI3MTA5OjdhZWMyZTU4YWQyYzcxMzgxNTk2NTJhNzBlYTViZDI5MGE1YmIyOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQAOfVgH2gAyNDk4NzI3MTA5Ojg2Y2Y4ZDQ5NmUxNDdkZWQ1YTdlZThjNTU5M2U1ZWFmZjk3NjU1ZDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b", "author": {"user": {"login": "upthewaterspout", "name": "Dan Smith"}}, "url": "https://github.com/apache/geode/commit/7aec2e58ad2c7138159652a70ea5bd290a5bb29b", "committedDate": "2020-10-06T17:51:09Z", "message": "GEODE-8579: Stop waiting locator-wait-time if all locators are available\n\nIf we can contact all other locators, we should stop waiting for\nlocator-wait-time to elapse."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjYxMDUw", "url": "https://github.com/apache/geode/pull/5598#pullrequestreview-503261050", "createdAt": "2020-10-06T18:46:45Z", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0Njo0NVrOHdVYSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyOTozMlrOHdW00g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMTAzNQ==", "bodyText": "better!", "url": "https://github.com/apache/geode/pull/5598#discussion_r500521035", "createdAt": "2020-10-06T18:46:45Z", "author": {"login": "Bill"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/shell/StatusLocatorExitCodeAcceptanceTest.java", "diffHunk": "@@ -57,7 +56,7 @@\n   @BeforeClass\n   public static void startLocator() throws IOException {\n     rootPath = gfshRule.getTemporaryFolder().getRoot().toPath();\n-    locatorPort = getRandomAvailablePort(SOCKET);\n+    locatorPort = AvailablePortHelper.getRandomAvailableTCPPort();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMzk0OQ==", "bodyText": "better (narrower) dependency!", "url": "https://github.com/apache/geode/pull/5598#discussion_r500523949", "createdAt": "2020-10-06T18:51:46Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/internal/AvailablePort.java", "diffHunk": "@@ -32,7 +32,7 @@\n import java.util.Random;\n \n import org.apache.geode.annotations.Immutable;\n-import org.apache.geode.distributed.internal.DistributionConfig;\n+import org.apache.geode.distributed.internal.membership.api.MembershipConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzOTcxMQ==", "bodyText": "This is a good test and it's acceptable as-is. I wonder though, if you'd be willing to entertain reducing run-time and increasing determinism by by injecting the (millisecond) time keeper and sleeper into the locator, the way it's done for PrimaryHandler?\nHere is the PR from August that added that injection: #5422\nAs of that PR (and now on develop) there are a couple functional interfaces defined in PrimaryHander that could be hoisted a little higher and used in MembershipLocator for your purposes, i.e. Sleeper, MillisecondProvider.\nWith those injected, this test could control time similar to how PrimaryHandlerTest does.", "url": "https://github.com/apache/geode/pull/5598#discussion_r500539711", "createdAt": "2020-10-06T19:20:11Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/MembershipIntegrationTest.java", "diffHunk": "@@ -272,6 +276,65 @@ public void secondMembershipPausesForLocatorWaitTime()\n     stop(coordinatorLocator, lateJoiningLocator);\n   }\n \n+  @Test\n+  public void locatorsStopWaitingForLocatorWaitTimeIfAllLocatorsContacted()\n+      throws IOException, MemberStartupException, InterruptedException, TimeoutException,\n+      ExecutionException {\n+\n+    final Supplier<ExecutorService> executorServiceSupplier =\n+        () -> LoggingExecutors.newCachedThreadPool(\"membership\", false);\n+\n+    int[] locatorPorts = AvailablePortHelper.getRandomAvailableTCPPorts(2);\n+\n+    int locatorWaitTime = (int) Duration.ofMinutes(5).getSeconds();\n+    final MembershipConfig config =\n+        createMembershipConfig(true, locatorWaitTime, locatorPorts[0], locatorPorts[1]);\n+\n+    CompletableFuture<Membership<MemberIdentifier>> createMembership0 =\n+        launchLocator(executorServiceSupplier, locatorPorts[0], config);\n+\n+    // Assert that membership 0 is waiting for the other locator to start\n+    Thread.sleep(5000);\n+    assertThat(createMembership0.getNow(null)).isNull();\n+\n+    CompletableFuture<Membership<MemberIdentifier>> createMembership1 =\n+        launchLocator(executorServiceSupplier, locatorPorts[1], config);\n+\n+    // Make sure the members are created in less than the locator-wait-time\n+    Membership<MemberIdentifier> membership0 = createMembership0.get(2, TimeUnit.MINUTES);\n+    Membership<MemberIdentifier> membership1 = createMembership1.get(2, TimeUnit.MINUTES);\n+\n+    // Make sure the members see each other in the view\n+    assertThat(membership0.getView().getMembers()).hasSize(2);\n+    assertThat(membership1.getView().getMembers()).hasSize(2);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0NDcyMg==", "bodyText": "verified when address cannot be resolved the exception causes exit code 1 (on macos) \u2713", "url": "https://github.com/apache/geode/pull/5598#discussion_r500544722", "createdAt": "2020-10-06T19:29:32Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/internal/AvailablePort.java", "diffHunk": "@@ -547,12 +548,7 @@ public static void main(String[] args) {\n \n     InetAddress addr = null;\n     if (addrString != null) {\n-      try {\n-        addr = InetAddress.getByName(addrString);\n-      } catch (Exception e) {\n-        e.printStackTrace();\n-        ExitCode.FATAL.doSystemExit();\n-      }\n+      addr = InetAddress.getByName(addrString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzI1ODI1", "url": "https://github.com/apache/geode/pull/5598#pullrequestreview-503325825", "createdAt": "2020-10-06T20:18:15Z", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoxODoxNVrOHdYaLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoxODoxNVrOHdYaLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3MDY2OQ==", "bodyText": "What symbol does geode-membership bring that geode-memcached is consuming?", "url": "https://github.com/apache/geode/pull/5598#discussion_r500570669", "createdAt": "2020-10-06T20:18:15Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-memcached/build.gradle", "diffHunk": "@@ -31,6 +31,7 @@ dependencies {\n   testImplementation('org.mockito:mockito-core')\n   testImplementation(project(':geode-junit'))\n \n+  integrationTestImplementation(project(':geode-membership'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzM5ODE0", "url": "https://github.com/apache/geode/pull/5598#pullrequestreview-503339814", "createdAt": "2020-10-06T20:38:41Z", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDozODo0MVrOHdZDbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDozODo0MVrOHdZDbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU4MTIyOQ==", "bodyText": "It looks like this evaluates to true any time we are able to contact all of the locators, even if one of those locators is part of an existing DS. In other words, if joinedMembersContacted is greater than zero but locatorsContacted is equal to locators.size() it tries to become the coordinator. Is that OK/can that even happen? I don't know enough about this code to say for sure.", "url": "https://github.com/apache/geode/pull/5598#discussion_r500581229", "createdAt": "2020-10-06T20:38:41Z", "author": {"login": "aaronlindsey"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeave.java", "diffHunk": "@@ -349,9 +349,9 @@ public boolean join() throws MemberStartupException {\n               && state.possibleCoordinator.equals(this.localAddress)) {\n             // if we haven't contacted a member of a cluster maybe this node should\n             // become the coordinator.\n-            if (state.joinedMembersContacted <= 0 && (now >= locatorGiveUpTime) &&\n-                (tries >= minimumRetriesBeforeBecomingCoordinator ||\n-                    state.locatorsContacted >= locators.size())) {\n+            if (state.joinedMembersContacted <= 0 && (now >= locatorGiveUpTime &&\n+                tries >= minimumRetriesBeforeBecomingCoordinator) ||\n+                state.locatorsContacted >= locators.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzQ1MzE5", "url": "https://github.com/apache/geode/pull/5598#pullrequestreview-503345319", "createdAt": "2020-10-06T20:46:44Z", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea2ce1ba2071ec325cb3c56ebebbea7b5252b06", "author": {"user": {"login": "upthewaterspout", "name": "Dan Smith"}}, "url": "https://github.com/apache/geode/commit/4ea2ce1ba2071ec325cb3c56ebebbea7b5252b06", "committedDate": "2020-10-06T21:14:05Z", "message": "Review comments - only become coordinator if no members are in the system\n\nWe should only become the coordinator if we have not contacted any joined members."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzcwMTMy", "url": "https://github.com/apache/geode/pull/5598#pullrequestreview-503370132", "createdAt": "2020-10-06T21:24:43Z", "commit": {"oid": "7aec2e58ad2c7138159652a70ea5bd290a5bb29b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86cf8d496e147ded5a7ee8c5593e5eaff97655d6", "author": {"user": {"login": "upthewaterspout", "name": "Dan Smith"}}, "url": "https://github.com/apache/geode/commit/86cf8d496e147ded5a7ee8c5593e5eaff97655d6", "committedDate": "2020-10-06T22:35:51Z", "message": "Updating RestrictUseOfInetAddressJUnitTest\n\nAvailablePort moved, so is no longer needed as a sanctioned class in this test."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4073, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}