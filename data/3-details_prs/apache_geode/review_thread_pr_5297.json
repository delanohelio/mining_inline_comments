{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MzQzNzUw", "number": 5297, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozNjoyM1rOEIdqQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozODo0NFrOEIdtXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzEwMDE2OnYy", "diffSide": "RIGHT", "path": "gradle/publish-java.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozNjoyM1rOGocU3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODowMzoxN1rOGodQZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MDMxOA==", "bodyText": "Is Attributes.put() what avoids re-writing the entire block?", "url": "https://github.com/apache/geode/pull/5297#discussion_r445060318", "createdAt": "2020-06-24T17:36:23Z", "author": {"login": "rhoughton-pivot"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->\n+        def geodeProject = projectDependency - \"-${version}.jar\"\n+        if (projectDependencies.contains(geodeProject)) {\n+          def parentProject = project(\":$geodeProject\" - \"-$version\")\n+          if (parentProject != null) {\n+            def collect = parentProject.configurations.runtimeClasspath.collect { it.name - \".jar\" }\n+            runtimeList.removeAll(collect)\n+            projectDependencies.removeAll(collect)\n+          }\n+        }\n+      }\n+\n+      manifest {\n+        attributes.put(\"Class-Path\", runtimeList.join(' '))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3NTE3Ng==", "bodyText": "Yes", "url": "https://github.com/apache/geode/pull/5297#discussion_r445075176", "createdAt": "2020-06-24T18:02:35Z", "author": {"login": "yozaner1324"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->\n+        def geodeProject = projectDependency - \"-${version}.jar\"\n+        if (projectDependencies.contains(geodeProject)) {\n+          def parentProject = project(\":$geodeProject\" - \"-$version\")\n+          if (parentProject != null) {\n+            def collect = parentProject.configurations.runtimeClasspath.collect { it.name - \".jar\" }\n+            runtimeList.removeAll(collect)\n+            projectDependencies.removeAll(collect)\n+          }\n+        }\n+      }\n+\n+      manifest {\n+        attributes.put(\"Class-Path\", runtimeList.join(' '))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MDMxOA=="}, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3NTU1Nw==", "bodyText": "yes..", "url": "https://github.com/apache/geode/pull/5297#discussion_r445075557", "createdAt": "2020-06-24T18:03:17Z", "author": {"login": "kohlmu-pivotal"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->\n+        def geodeProject = projectDependency - \"-${version}.jar\"\n+        if (projectDependencies.contains(geodeProject)) {\n+          def parentProject = project(\":$geodeProject\" - \"-$version\")\n+          if (parentProject != null) {\n+            def collect = parentProject.configurations.runtimeClasspath.collect { it.name - \".jar\" }\n+            runtimeList.removeAll(collect)\n+            projectDependencies.removeAll(collect)\n+          }\n+        }\n+      }\n+\n+      manifest {\n+        attributes.put(\"Class-Path\", runtimeList.join(' '))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MDMxOA=="}, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzEwODE0OnYy", "diffSide": "RIGHT", "path": "gradle/publish-java.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzozODo0NFrOGocZ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxOTo0MzozN1rOGogiFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MTYxOQ==", "bodyText": "Can we get a comment block on the logic of what is being pruned out from this list? I get it, but I also consulted on it in the first place", "url": "https://github.com/apache/geode/pull/5297#discussion_r445061619", "createdAt": "2020-06-24T17:38:44Z", "author": {"login": "rhoughton-pivot"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3NTg0MQ==", "bodyText": "ok.. we'll comment on what and how the pruning is happening.", "url": "https://github.com/apache/geode/pull/5297#discussion_r445075841", "createdAt": "2020-06-24T18:03:45Z", "author": {"login": "kohlmu-pivotal"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MTYxOQ=="}, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyOTIzNw==", "bodyText": "Perfect.", "url": "https://github.com/apache/geode/pull/5297#discussion_r445129237", "createdAt": "2020-06-24T19:43:37Z", "author": {"login": "rhoughton-pivot"}, "path": "gradle/publish-java.gradle", "diffHunk": "@@ -28,3 +28,41 @@ publishing {\n     }\n   }\n }\n+\n+gradle.taskGraph.whenReady({ graph ->\n+  tasks.withType(Jar).each { jar ->\n+    jar.doFirst {\n+      def projectDependencies = []\n+      def runtimeList = []\n+\n+      configurations.runtimeClasspath\n+              .collect { it.name - \".jar\" }\n+              .each { dependency ->\n+                if (dependency.startsWith(\"geode-\")) {\n+                  projectDependencies.add(dependency)\n+                } else {\n+                  runtimeList.add(dependency)\n+                }\n+              }\n+\n+      projectDependencies.clone().each { projectDependency ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MTYxOQ=="}, "originalCommit": {"oid": "1933531aa044e0cca0f49306f6e5c62c803760d7"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3869, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}