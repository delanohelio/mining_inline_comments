{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzAwMTYz", "number": 5055, "title": "GEODE-8073: Fix NPE after FetchKeysMessage failed.", "bodyText": "", "createdAt": "2020-05-05T19:09:42Z", "url": "https://github.com/apache/geode/pull/5055", "merged": true, "mergeCommit": {"oid": "643c617ec681918db3508030bd22922c76b87b25"}, "closed": true, "closedAt": "2020-05-06T15:56:21Z", "author": {"login": "pivotal-eshu"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceY11aAH2gAyNDEzNzAwMTYzOmQ2MWJhZTY2ZGU0ODYyNWRmYmZmNDVjZjE1OWI5ZmNiNTQ1Mjk4Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcedFjDgFqTQwNjIzMjkxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828", "author": {"user": {"login": "pivotal-eshu", "name": "Eric Shu"}}, "url": "https://github.com/apache/geode/commit/d61bae66de48625dfbff45cf159b9fcb54529828", "committedDate": "2020-05-05T19:00:20Z", "message": "GEODE-8073: Fix NPE after FetchKeysMessage failed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDk5MjQx", "url": "https://github.com/apache/geode/pull/5055#pullrequestreview-406099241", "createdAt": "2020-05-05T19:40:52Z", "commit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTo0MDo1MlrOGQ4wow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTo1NjozNVrOGQ5SKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MDM1NQ==", "bodyText": "The exception isn't ignored, so it shouldn't be called \"ignore.\"", "url": "https://github.com/apache/geode/pull/5055#discussion_r420360355", "createdAt": "2020-05-05T19:40:52Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java", "diffHunk": "@@ -4593,39 +4593,58 @@ void updateNodeToBucketMap(\n         buckets = bucketKeys.keySet();\n       }\n \n-      for (Integer bucket : buckets) {\n-        Set keys = null;\n-        if (bucketKeys == null) {\n-          try {\n-            FetchKeysResponse fkr = FetchKeysMessage.send(member, this, bucket, true);\n-            keys = fkr.waitForKeys();\n-          } catch (ForceReattemptException ignore) {\n-            failures.add(bucket);\n-          }\n-        } else {\n-          keys = bucketKeys.get(bucket);\n+      fetchKeysAndValues(values, servConn, failures, member, bucketKeys, buckets);\n+    }\n+    return failures;\n+  }\n+\n+  void fetchKeysAndValues(VersionedObjectList values, ServerConnection servConn,\n+      Set<Integer> failures, InternalDistributedMember member,\n+      HashMap<Integer, HashSet> bucketKeys, Set<Integer> buckets)\n+      throws IOException {\n+    for (Integer bucket : buckets) {\n+      Set keys = null;\n+      if (bucketKeys == null) {\n+        try {\n+          FetchKeysResponse fetchKeysResponse = getFetchKeysResponse(member, bucket);\n+          keys = fetchKeysResponse.waitForKeys();\n+        } catch (ForceReattemptException ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2NTg1NA==", "bodyText": "Here you should use a real Set instead of a mock.", "url": "https://github.com/apache/geode/pull/5055#discussion_r420365854", "createdAt": "2020-05-05T19:50:57Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    doThrow(new ForceReattemptException(\"\")).when(spyPartitionedRegion).getFetchKeysResponse(member,\n+        1);\n+\n+    spyPartitionedRegion.fetchKeysAndValues(values, serverConnection, failures, member, null,\n+        buckets);\n+\n+    verify(failures).add(1);\n+    verify(spyPartitionedRegion, never()).getValuesForKeys(values, serverConnection, null);\n+  }\n+\n+  @Test\n+  public void fetchKeysAndValuesInvokesGetValuesForKeys() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    FetchKeysMessage.FetchKeysResponse fetchKeysResponse =\n+        mock(FetchKeysMessage.FetchKeysResponse.class);\n+    doReturn(fetchKeysResponse).when(spyPartitionedRegion).getFetchKeysResponse(member, 1);\n+    Set keys = mock(Set.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODQ3Ng==", "bodyText": "It's best not to mock Collections. It's fine to just use an actual Set here.", "url": "https://github.com/apache/geode/pull/5055#discussion_r420368476", "createdAt": "2020-05-05T19:55:44Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODkzOQ==", "bodyText": "Here you should use a real Set instead of a mock.", "url": "https://github.com/apache/geode/pull/5055#discussion_r420368939", "createdAt": "2020-05-05T19:56:35Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    doThrow(new ForceReattemptException(\"\")).when(spyPartitionedRegion).getFetchKeysResponse(member,\n+        1);\n+\n+    spyPartitionedRegion.fetchKeysAndValues(values, serverConnection, failures, member, null,\n+        buckets);\n+\n+    verify(failures).add(1);\n+    verify(spyPartitionedRegion, never()).getValuesForKeys(values, serverConnection, null);\n+  }\n+\n+  @Test\n+  public void fetchKeysAndValuesInvokesGetValuesForKeys() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MTU0NDA0", "url": "https://github.com/apache/geode/pull/5055#pullrequestreview-406154404", "createdAt": "2020-05-05T21:04:42Z", "commit": {"oid": "d61bae66de48625dfbff45cf159b9fcb54529828"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "694e7ff4a14c7d5852acf014484ccaa205ec39f0", "author": {"user": {"login": "pivotal-eshu", "name": "Eric Shu"}}, "url": "https://github.com/apache/geode/commit/694e7ff4a14c7d5852acf014484ccaa205ec39f0", "committedDate": "2020-05-05T23:27:56Z", "message": "fix review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjMyOTEz", "url": "https://github.com/apache/geode/pull/5055#pullrequestreview-406232913", "createdAt": "2020-05-05T23:57:07Z", "commit": {"oid": "694e7ff4a14c7d5852acf014484ccaa205ec39f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}