{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDE0MjIx", "number": 5349, "title": "GEODE-8333: Fix PUBSUB hang", "bodyText": "PUBSUB hangs with concurrent publishers and subscribers on multiple\nservers. Changed Publish executor to execute publish on background\nthread (the DistributionManager's waiting pool is used). Removed separate separate subscriber group.  Added DUnit test to\nrecreate failure.\nTo preserve the order of incoming commands, even when some of them are running asynchronously in background threads, a command queue now exists. When an async commands comes in (currently only PUBLISH is async) then it goes in the queue and is started. Any other commands that come in while it is in progress are added to the a queue. Once the async command completes it also drains the command queue down to the next async command it finds in it.\nCo-authored-by: Murtuza Boxwala mboxwala@pivotal.io", "createdAt": "2020-07-06T21:34:45Z", "url": "https://github.com/apache/geode/pull/5349", "merged": true, "mergeCommit": {"oid": "067194e8f82414b6103c4335beb6567947edcfbc"}, "closed": true, "closedAt": "2020-07-24T22:04:30Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3dsMTAH2gAyNDQ1MDE0MjIxOmJlNWU5OGE4MTdkYjdjMjhiOGMzNTUzY2I5OTNjYjY1ZjI1YzhlNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4LXn6AFqTQ1NTIwNzY1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be5e98a817db7c28b8c3553cb993cb65f25c8e41", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/be5e98a817db7c28b8c3553cb993cb65f25c8e41", "committedDate": "2020-07-22T16:47:26Z", "message": "GEODE-8333: Fix PUBSUB hang\n\nPUBSUB hangs with concurrent publishers and subscribers on multiple\nservers. Changed Publish executor to execute publish on background\nthread. Removed separate separate subscriber group.  Added DUnit test to\nrecreate failure.\n\nCo-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4ae298880d7fa2035e3e352f0f80d9878db60a6", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/f4ae298880d7fa2035e3e352f0f80d9878db60a6", "committedDate": "2020-07-06T21:33:01Z", "message": "GEODE-8333: Fix PUBSUB hang\n\nPUBSUB hangs with concurrent publishers and subscribers on multiple\nservers. Changed Publish executor to execute publish on background\nthread. Removed separate separate subscriber group.  Added DUnit test to\nrecreate failure.\n\nCo-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>"}, "afterCommit": {"oid": "be5e98a817db7c28b8c3553cb993cb65f25c8e41", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/be5e98a817db7c28b8c3553cb993cb65f25c8e41", "committedDate": "2020-07-22T16:47:26Z", "message": "GEODE-8333: Fix PUBSUB hang\n\nPUBSUB hangs with concurrent publishers and subscribers on multiple\nservers. Changed Publish executor to execute publish on background\nthread. Removed separate separate subscriber group.  Added DUnit test to\nrecreate failure.\n\nCo-authored-by: Murtuza Boxwala <mboxwala@pivotal.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0a463339c4542f2eb1c7513b9da7cdc0d490f77", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/d0a463339c4542f2eb1c7513b9da7cdc0d490f77", "committedDate": "2020-07-22T21:09:23Z", "message": "A commandQueue is now used to preserve the order\nin which commands are executed even if a command\nif executed async. Currently the only async command\nis PUBLISH."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecea8bbdf966e475d4bb2ef61e1f9cd45af231f7", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/ecea8bbdf966e475d4bb2ef61e1f9cd45af231f7", "committedDate": "2020-07-23T21:38:51Z", "message": "pubsub dunit now passes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6b665614ac21b15a5f5dcbf48b85233bed9e976", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/f6b665614ac21b15a5f5dcbf48b85233bed9e976", "committedDate": "2020-07-23T23:53:27Z", "message": "now uses the geode waitingPool for background execution of async redis commands"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDExOTE1", "url": "https://github.com/apache/geode/pull/5349#pullrequestreview-455011915", "createdAt": "2020-07-24T16:09:56Z", "commit": {"oid": "f6b665614ac21b15a5f5dcbf48b85233bed9e976"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjowOTo1NlrOG21Usw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjowOTo1NlrOG21Usw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0OTkzOQ==", "bodyText": "Is there a test for this exception?", "url": "https://github.com/apache/geode/pull/5349#discussion_r460149939", "createdAt": "2020-07-24T16:09:56Z", "author": {"login": "ringles"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -191,38 +199,121 @@ public void channelInactive(ChannelHandlerContext ctx) {\n     ctx.close();\n   }\n \n-  private void executeCommand(ChannelHandlerContext ctx, Command command) {\n-    RedisResponse response;\n-\n-    if (!isAuthenticated()) {\n-      response = handleUnAuthenticatedCommand(command);\n-      writeToChannel(response);\n-      return;\n+  private void startAsyncCommandExecution(Command command) {\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\"Starting execution of async Redis command: {}\", command);\n     }\n+    final long start = redisStats.startCommand(command.getCommandType());\n+    command.setAsyncStartTime(start);\n+    command.execute(this);\n+  }\n \n-    if (command.isUnsupported() && !allowUnsupportedCommands()) {\n-      writeToChannel(\n-          RedisResponse.error(command.getCommandType() + RedisConstants.ERROR_UNSUPPORTED_COMMAND));\n-      return;\n+  public void endAsyncCommandExecution(Command command, ByteBuf response) {\n+    synchronized (commandQueue) {\n+      Command head = takeFromCommandQueue();\n+      if (head != command) {\n+        throw new IllegalStateException(\n+            \"expected \" + command + \" but found \" + head + \" in the queue\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6b665614ac21b15a5f5dcbf48b85233bed9e976"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "728832147739278ec8b9847bdf113b4478e59203", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/728832147739278ec8b9847bdf113b4478e59203", "committedDate": "2020-07-24T17:23:47Z", "message": "fixed a race in which a sync command could cut ahead\nof another command and be executed in the wrong order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTA5MDAw", "url": "https://github.com/apache/geode/pull/5349#pullrequestreview-455109000", "createdAt": "2020-07-24T18:43:56Z", "commit": {"oid": "728832147739278ec8b9847bdf113b4478e59203"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo0Mzo1NlrOG26B4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo0Njo0NlrOG26G0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNzA0MA==", "bodyText": "I think this might read a bit better like this:\n    synchronized (commandQueue) {\n      boolean isEmpty = commandQueue.isEmpty();\n      boolean isAsync = command.getCommandType().isAsync();\n      if (!isEmpty) {\n        commandQueue.offer(command);\n        return;\n      }\n      if (!isAsync) {\n        executeCommand(command);\n      } else {\n        commandQueue.offer(command);\n        startAsyncCommandExecution(command);\n      }\n    }", "url": "https://github.com/apache/geode/pull/5349#discussion_r460227040", "createdAt": "2020-07-24T18:43:56Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -113,17 +114,19 @@ public ChannelFuture writeToChannel(RedisResponse response) {\n   @Override\n   public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n     Command command = (Command) msg;\n-    try {\n-      if (logger.isDebugEnabled()) {\n-        logger.debug(\"Executing Redis command: {}\", command);\n+    command.setChannelHandlerContext(ctx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728832147739278ec8b9847bdf113b4478e59203"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyODMwNg==", "bodyText": "I'd prefer to create a RedisResponse so that we keep netty specifics out of the executors.", "url": "https://github.com/apache/geode/pull/5349#discussion_r460228306", "createdAt": "2020-07-24T18:46:46Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/pubsub/PublishExecutor.java", "diffHunk": "@@ -27,12 +30,34 @@\n   @Override\n   public RedisResponse executeCommand(Command command,\n       ExecutionHandlerContext context) {\n-    List<byte[]> args = command.getProcessedCommand();\n-\n-    long publishCount =\n-        context.getPubSub().publish(getDataRegion(context), args.get(1), args.get(2));\n-\n-    return RedisResponse.integer(publishCount);\n+    context.getBackgroundExecutor().submit(new PublishingRunnable(context, command));\n+    return null;\n   }\n \n+  public static class PublishingRunnable implements Runnable {\n+\n+    private final ExecutionHandlerContext context;\n+    private final Command command;\n+\n+    public PublishingRunnable(ExecutionHandlerContext context, Command command) {\n+      this.context = context;\n+      this.command = command;\n+    }\n+\n+    @Override\n+    public void run() {\n+      List<byte[]> args = command.getProcessedCommand();\n+      byte[] channelName = args.get(1);\n+      byte[] message = args.get(2);\n+      try {\n+        long publishCount =\n+            context.getPubSub()\n+                .publish(context.getRegionProvider().getDataRegion(), channelName, message);\n+        ByteBuf response = Coder.getIntegerResponse(context.getByteBufAllocator(), publishCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "728832147739278ec8b9847bdf113b4478e59203"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098a69913daadd9aaa30877ad5b0ac4d503dc989", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/098a69913daadd9aaa30877ad5b0ac4d503dc989", "committedDate": "2020-07-24T19:35:52Z", "message": "review feedback changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTQ2Mzkx", "url": "https://github.com/apache/geode/pull/5349#pullrequestreview-455146391", "createdAt": "2020-07-24T19:49:50Z", "commit": {"oid": "098a69913daadd9aaa30877ad5b0ac4d503dc989"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjA3NjUx", "url": "https://github.com/apache/geode/pull/5349#pullrequestreview-455207651", "createdAt": "2020-07-24T22:00:36Z", "commit": {"oid": "098a69913daadd9aaa30877ad5b0ac4d503dc989"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}