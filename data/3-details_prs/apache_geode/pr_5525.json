{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTc2Nzc5", "number": 5525, "title": "GEODE-8506: BufferPool returns byte buffers that may be much larger t\u2026", "bodyText": "\u2026han requested\nCreate a \"slice\" of the acquired buffer to return to the caller instead\nof returning a buffer larger than what was requested.  On return we fish\nout the parent buffer and put it back in the pool.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-09-17T23:10:17Z", "url": "https://github.com/apache/geode/pull/5525", "merged": true, "mergeCommit": {"oid": "a11b9c076a72609ff00802c010b6e32262228776"}, "closed": true, "closedAt": "2020-09-18T21:21:55Z", "author": {"login": "bschuchardt"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ5Q0ngH2gAyNDg4OTc2Nzc5OmI3YmEzZmY2OWZjMzY3NDNmNDc5YjEwMzIzMmY2MTQ0ZTRkZDJjMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKJUk_AH2gAyNDg4OTc2Nzc5OmQ2ZjUxNTMxNjA3NWQyYWUyOTdkNzUyNmNjOGE5MzViNDJhNGIwZmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/b7ba3ff69fc36743f479b103232f6144e4dd2c25", "committedDate": "2020-09-17T23:05:31Z", "message": "GEODE-8506: BufferPool returns byte buffers that may be much larger than requested\n\nCreate a \"slice\" of the acquired buffer to return to the caller instead\nof returning a buffer larger than what was requested.  On return we fish\nout the parent buffer and put it back in the pool."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDU0OTM4", "url": "https://github.com/apache/geode/pull/5525#pullrequestreview-491054938", "createdAt": "2020-09-17T23:29:55Z", "commit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyOTo1NVrOHT44EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMzoyOTo1NVrOHT44EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNjg0OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/geode/pull/5525#discussion_r490616848", "createdAt": "2020-09-17T23:29:55Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/BufferPool.java", "diffHunk": "@@ -98,14 +101,18 @@ private ByteBuffer acquireDirectBuffer(int size, boolean send) {\n \n     if (useDirectBuffers) {\n       if (size <= MEDIUM_BUFFER_SIZE) {\n-        return acquirePredefinedFixedBuffer(send, size);\n+        result = acquirePredefinedFixedBuffer(send, size);\n       } else {\n-        return acquireLargeBuffer(send, size);\n+        result = acquireLargeBuffer(send, size);\n       }\n-    } else {\n-      // if we are using heap buffers then don't bother with keeping them around\n-      result = ByteBuffer.allocate(size);\n+      if (result.capacity() > size) {\n+        result.position(0).limit(size);\n+        result = result.slice();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDkwMDky", "url": "https://github.com/apache/geode/pull/5525#pullrequestreview-491090092", "createdAt": "2020-09-18T01:26:01Z", "commit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMToyNjowMVrOHT6yNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMjowNDoyM1rOHT7ZqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY0ODExOA==", "bodyText": "These should be called something like smallBuffer and largerBuffer or something, based on this comment.", "url": "https://github.com/apache/geode/pull/5525#discussion_r490648118", "createdAt": "2020-09-18T01:26:01Z", "author": {"login": "Bill"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/BufferPoolTest.java", "diffHunk": "@@ -133,27 +135,42 @@ public void checkBufferSizeAfterAllocation() throws Exception {\n \n   @Test\n   public void checkBufferSizeAfterAcquire() throws Exception {\n+    // allocate a small buffer and a larger buffer. Check their sizes, etc and then\n+    // release and reacquire them. They should be from separate buffer pools so there\n+    // should still be a small buffer and a larger buffer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY0OTUzMQ==", "bodyText": "This test would make more sense if I knew where this magic number, 4096, came from. Recommend either referencing the pertinent constant directly or at least including a comment here.\nSame comment for 32768 on next line\u2026", "url": "https://github.com/apache/geode/pull/5525#discussion_r490649531", "createdAt": "2020-09-18T01:31:13Z", "author": {"login": "Bill"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/BufferPoolTest.java", "diffHunk": "@@ -133,27 +135,42 @@ public void checkBufferSizeAfterAllocation() throws Exception {\n \n   @Test\n   public void checkBufferSizeAfterAcquire() throws Exception {\n+    // allocate a small buffer and a larger buffer. Check their sizes, etc and then\n+    // release and reacquire them. They should be from separate buffer pools so there\n+    // should still be a small buffer and a larger buffer.\n     ByteBuffer buffer = bufferPool.acquireDirectReceiveBuffer(100);\n \n     ByteBuffer newBuffer =\n         bufferPool.acquireDirectReceiveBuffer(10000);\n-    assertThat(buffer.capacity()).isGreaterThanOrEqualTo(4096);\n-    assertThat(newBuffer.capacity()).isGreaterThanOrEqualTo(32768);\n+    assertThat(buffer.capacity()).isEqualTo(100);\n+    assertThat(newBuffer.capacity()).isEqualTo(10000);\n+    assertThat(buffer.isDirect()).isTrue();\n+    assertThat(newBuffer.isDirect()).isTrue();\n+    assertThat(bufferPool.getPoolableBuffer(buffer).capacity())\n+        .isGreaterThanOrEqualTo(4096);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY1NDIyMw==", "bodyText": "The comment on method acquirePredefinedFixedBuffer() now lies. It says:\n  /**\n   * Acquire direct buffer with predefined default capacity (4096 or 32768)\n   */\n\nBut that method no longer returns buffers with predefined capacity.\nAlso that method's name seems wrong since it doesn't return a buffer with a predefined capacity at all, rather, it returns a buffer of the specified size. brainf*rt\nIf I am understanding the method in question, perhaps this would be more accurate (also eliminates the word \"fixed\" from the method name since I don't think that is pertinent):\n  /**\n   * Acquire direct buffer of size <= MEDIUM_BUFFER_SIZE\n   *\n   * Caller ensures that size <= MEDIUM_BUFFER_SIZE on entry. This method\n   * will not check that!\n   */\n  private ByteBuffer acquireSmallToMediumBuffer(boolean send, int size) {", "url": "https://github.com/apache/geode/pull/5525#discussion_r490654223", "createdAt": "2020-09-18T01:49:09Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/BufferPool.java", "diffHunk": "@@ -98,14 +101,18 @@ private ByteBuffer acquireDirectBuffer(int size, boolean send) {\n \n     if (useDirectBuffers) {\n       if (size <= MEDIUM_BUFFER_SIZE) {\n-        return acquirePredefinedFixedBuffer(send, size);\n+        result = acquirePredefinedFixedBuffer(send, size);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY1ODIxNg==", "bodyText": "It is awful that this method has to reflect on every single returned ByteBuffer.\nWould it impose too much overhead for us to define our own hierarchy underneath that abstract class to do the work (polymorphically) of returning the buffer to the pool? I realize that would entail three classes. But I wonder if they would be small (in lines-of-code). That would eliminate the possibility of an InternalGemFireException here and that would be valuable.", "url": "https://github.com/apache/geode/pull/5525#discussion_r490658216", "createdAt": "2020-09-18T02:04:23Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/BufferPool.java", "diffHunk": "@@ -295,19 +302,48 @@ void releaseBuffer(BufferPool.BufferType type, ByteBuffer buffer) {\n   /**\n    * Releases a previously acquired buffer.\n    */\n-  private void releaseBuffer(ByteBuffer bb, boolean send) {\n-    if (bb.isDirect()) {\n-      BBSoftReference bbRef = new BBSoftReference(bb, send);\n-      if (bb.capacity() <= SMALL_BUFFER_SIZE) {\n+  private void releaseBuffer(ByteBuffer buffer, boolean send) {\n+    if (buffer.isDirect()) {\n+      buffer = getPoolableBuffer(buffer);\n+      BBSoftReference bbRef = new BBSoftReference(buffer, send);\n+      if (buffer.capacity() <= SMALL_BUFFER_SIZE) {\n         bufferSmallQueue.offer(bbRef);\n-      } else if (bb.capacity() <= MEDIUM_BUFFER_SIZE) {\n+      } else if (buffer.capacity() <= MEDIUM_BUFFER_SIZE) {\n         bufferMiddleQueue.offer(bbRef);\n       } else {\n         bufferLargeQueue.offer(bbRef);\n       }\n     } else {\n-      updateBufferStats(-bb.capacity(), send, false);\n+      updateBufferStats(-buffer.capacity(), send, false);\n+    }\n+  }\n+\n+  /**\n+   * If we hand out a buffer that is larger than the requested size we create a\n+   * \"slice\" of the buffer having the requested capacity and hand that out instead.\n+   * When we put the buffer back in the pool we need to find the original, non-sliced,\n+   * buffer. This is held in DirectBuffer in its \"attachment\" field, which is a public\n+   * method, though DirectBuffer is package-private.\n+   */\n+  @VisibleForTesting\n+  public ByteBuffer getPoolableBuffer(ByteBuffer buffer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNjIxNDE1", "url": "https://github.com/apache/geode/pull/5525#pullrequestreview-491621415", "createdAt": "2020-09-18T16:39:11Z", "commit": {"oid": "b7ba3ff69fc36743f479b103232f6144e4dd2c25"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f515316075d2ae297d7526cc8a935b42a4b0fc", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/d6f515316075d2ae297d7526cc8a935b42a4b0fc", "committedDate": "2020-09-18T17:48:06Z", "message": "cache reflection method, remove magic numbers in test and BufferPool"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4219, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}