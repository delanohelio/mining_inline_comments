{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTM0NzA1", "number": 5128, "title": "GEODE-8147: DELETE and EXISTS implement Function-Delta", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-18T14:20:50Z", "url": "https://github.com/apache/geode/pull/5128", "merged": true, "mergeCommit": {"oid": "7e222dfb163a331181dee007c588f23b52249287"}, "closed": true, "closedAt": "2020-05-19T23:45:30Z", "author": {"login": "prettyClouds"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchoDQ2gH2gAyNDE5NTM0NzA1OjMxNjZiZDIxMzVhNmE0ZTAyNzAxYmI2MTA4ZGZjYmMxMTIyYWIyMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci9MEfAFqTQxNDg5NTE2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3166bd2135a6a4e02701bb6108dfcbc1122ab22e", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/3166bd2135a6a4e02701bb6108dfcbc1122ab22e", "committedDate": "2020-05-15T20:25:21Z", "message": "refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ac638cec23c2cd6ad6130cfb1f262d9896e5c5", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/84ac638cec23c2cd6ad6130cfb1f262d9896e5c5", "committedDate": "2020-05-18T14:19:42Z", "message": "moving del to functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/ff84ae78b57f4533d2060953f62cc8adc40c9a98", "committedDate": "2020-05-18T15:27:43Z", "message": "remove the remove"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7665bf894d5e1585bb17730b7e0086cb6c7d5d7", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/a7665bf894d5e1585bb17730b7e0086cb6c7d5d7", "committedDate": "2020-05-18T15:50:28Z", "message": "fix issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzI2NTAz", "url": "https://github.com/apache/geode/pull/5128#pullrequestreview-413726503", "createdAt": "2020-05-18T15:54:32Z", "commit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNTo1NDozM1rOGW9dGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjoyNTo0MVrOGW-uRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyODczMQ==", "bodyText": "pull this out to its own file", "url": "https://github.com/apache/geode/pull/5128#discussion_r426728731", "createdAt": "2020-05-18T15:54:33Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/DelExecutor.java", "diffHunk": "@@ -32,24 +33,33 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       throw new UnsupportedOperationInTransactionException();\n     }\n \n-    List<byte[]> commandElems = command.getProcessedCommand();\n-    if (commandElems.size() < 2) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.DEL));\n-      return;\n-    }\n-\n-    int numRemoved = 0;\n+    List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();\n \n-    for (int i = 1; i < commandElems.size(); i++) {\n-      byte[] byteKey = commandElems.get(i);\n-      ByteArrayWrapper key = new ByteArrayWrapper(byteKey);\n-      RedisDataType type = context.getKeyRegistrar().getType(key);\n-      if (removeEntry(key, type, context)) {\n-        numRemoved++;\n-      }\n-    }\n+    long numRemoved = commandElems\n+        .subList(1, commandElems.size())\n+        .stream()\n+        .filter((key) -> new RedisKeyCommandsFunctionExecutor(\n+            context.getRegionProvider().getDataRegion()).del(key))\n+        .count();\n \n     command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numRemoved));\n   }\n \n+  public interface RedisKeyCommands {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyODk0OQ==", "bodyText": "pull this out to its own file (if you keep it here make it static)", "url": "https://github.com/apache/geode/pull/5128#discussion_r426728949", "createdAt": "2020-05-18T15:54:54Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/DelExecutor.java", "diffHunk": "@@ -32,24 +33,33 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       throw new UnsupportedOperationInTransactionException();\n     }\n \n-    List<byte[]> commandElems = command.getProcessedCommand();\n-    if (commandElems.size() < 2) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.DEL));\n-      return;\n-    }\n-\n-    int numRemoved = 0;\n+    List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();\n \n-    for (int i = 1; i < commandElems.size(); i++) {\n-      byte[] byteKey = commandElems.get(i);\n-      ByteArrayWrapper key = new ByteArrayWrapper(byteKey);\n-      RedisDataType type = context.getKeyRegistrar().getType(key);\n-      if (removeEntry(key, type, context)) {\n-        numRemoved++;\n-      }\n-    }\n+    long numRemoved = commandElems\n+        .subList(1, commandElems.size())\n+        .stream()\n+        .filter((key) -> new RedisKeyCommandsFunctionExecutor(\n+            context.getRegionProvider().getDataRegion()).del(key))\n+        .count();\n \n     command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), numRemoved));\n   }\n \n+  public interface RedisKeyCommands {\n+    boolean del(ByteArrayWrapper key);\n+  }\n+\n+  public class RedisKeyCommandsFunctionExecutor implements RedisKeyCommands {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcyOTU0OA==", "bodyText": "no longer need to get type type", "url": "https://github.com/apache/geode/pull/5128#discussion_r426729548", "createdAt": "2020-05-18T15:55:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/FlushAllExecutor.java", "diffHunk": "@@ -37,7 +37,7 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       try {\n         ByteArrayWrapper skey = e.getKey();\n         RedisDataType type = e.getValue().getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0OTUwOQ==", "bodyText": "Think about making this classes name consistent with RedisKeyCommands. Should they both be \"Key\" or both be \"Data\"?", "url": "https://github.com/apache/geode/pull/5128#discussion_r426749509", "createdAt": "2020-05-18T16:25:41Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisDataInRegion.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.RedisData;\n+import org.apache.geode.redis.internal.RegionProvider;\n+\n+class RedisDataInRegion {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff84ae78b57f4533d2060953f62cc8adc40c9a98"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed01aebc4ea40fa73eeb2b19009fef5479c13f87", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/ed01aebc4ea40fa73eeb2b19009fef5479c13f87", "committedDate": "2020-05-18T17:11:09Z", "message": "Adds function/delta support for EXISTS command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5c04f42acdee84b1e7290307e394e996bb738e9", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/b5c04f42acdee84b1e7290307e394e996bb738e9", "committedDate": "2020-05-18T17:36:12Z", "message": "ci-trigger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0abb511331ca4e588e1df128f5319e331709bf7", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/c0abb511331ca4e588e1df128f5319e331709bf7", "committedDate": "2020-05-18T18:55:25Z", "message": "Adds Apache license to new files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/7b31aa1a401685cbdea9989858014ca8b8a3ff31", "committedDate": "2020-05-18T19:28:21Z", "message": "Removes RedisKeyCommands class from DelExecutor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjM4OTYw", "url": "https://github.com/apache/geode/pull/5128#pullrequestreview-414638960", "createdAt": "2020-05-19T16:50:20Z", "commit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjo1MDoyMFrOGXph2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzowMDowMFrOGXp6_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1MDg0Mg==", "bodyText": "consider converting this if/elseif chain to a switch statement", "url": "https://github.com/apache/geode/pull/5128#discussion_r427450842", "createdAt": "2020-05-19T16:50:20Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RegionProvider.java", "diffHunk": "@@ -218,21 +216,16 @@ public boolean removeKey(ByteArrayWrapper key, RedisDataType type, boolean cance\n       if (!typeStoresDataInKeyRegistrar(type)) {\n         keyRegistrar.unregister(key);\n       }\n+      RedisKeyCommands redisKeyCommands = new RedisKeyCommandsFunctionExecutor(dataRegion);\n       try {\n         if (type == RedisDataType.REDIS_STRING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1MjE1OA==", "bodyText": "This makes me happy that we didn't pass the key to the RedisKeyCommandsFunctionExecutor constructor", "url": "https://github.com/apache/geode/pull/5128#discussion_r427452158", "createdAt": "2020-05-19T16:52:16Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/ExistsExecutor.java", "diffHunk": "@@ -20,22 +20,19 @@\n import org.apache.geode.redis.internal.Coder;\n import org.apache.geode.redis.internal.Command;\n import org.apache.geode.redis.internal.ExecutionHandlerContext;\n-import org.apache.geode.redis.internal.RedisConstants.ArityDef;\n \n public class ExistsExecutor extends AbstractExecutor {\n \n   @Override\n   public void executeCommand(Command command, ExecutionHandlerContext context) {\n     List<ByteArrayWrapper> commandElems = command.getProcessedCommandWrappers();\n-    if (commandElems.size() < 2) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.EXISTS));\n-      return;\n-    }\n+    RedisKeyCommands redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());\n \n     long existsCount = commandElems\n         .subList(1, commandElems.size())\n         .stream()\n-        .filter(key -> context.getKeyRegistrar().isRegistered(key))\n+        .filter(key -> redisKeyCommands.exists(key))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1NzI3OA==", "bodyText": "Something I find slightly confusing on CommandFunction is that is has a static method named execute. When looking at a Function I tend to look for its \"instance\" method named execute. Something we could consider is having all our *FunctionExecutor classes, subclass a common class that has the code from the static CommandFunction execute. I think that could also simplify how much we need to pass to this method (we would no longer need to pass the region since we could access it from the instance). Let me know what you think. No need to do this on this PR", "url": "https://github.com/apache/geode/pull/5128#discussion_r427457278", "createdAt": "2020-05-19T17:00:00Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyCommandsFunctionExecutor.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.RedisCommandType;\n+import org.apache.geode.redis.internal.RedisData;\n+\n+public class RedisKeyCommandsFunctionExecutor implements RedisKeyCommands {\n+  private Region<ByteArrayWrapper, RedisData> region;\n+\n+  public RedisKeyCommandsFunctionExecutor(\n+      Region<ByteArrayWrapper, RedisData> region) {\n+    this.region = region;\n+  }\n+\n+  @Override\n+  public boolean del(ByteArrayWrapper key) {\n+    return (boolean) CommandFunction.execute(RedisCommandType.DEL, key, new Object[] {}, region);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODk1MTY0", "url": "https://github.com/apache/geode/pull/5128#pullrequestreview-414895164", "createdAt": "2020-05-19T23:36:54Z", "commit": {"oid": "7b31aa1a401685cbdea9989858014ca8b8a3ff31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4548, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}