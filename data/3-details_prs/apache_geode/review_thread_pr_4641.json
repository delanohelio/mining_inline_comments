{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MTM5MDM2", "number": 4641, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0ODoxNlrODbUGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0OTozNFrODbUH2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY3NDM5OnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0ODoxNlrOFiuj-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzoxODowNlrOFjQwxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1ODc3OQ==", "bodyText": "I thought we were encouraging people to use the ClusterStartupRule instead of DistributedRule... did that change?.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371958779", "createdAt": "2020-01-28T17:48:16Z", "author": {"login": "jujoramos"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -72,158 +90,74 @@\n   private static final int REPLACE_KEY = ENTRIES - 4;\n   private static final int INVALIDATE_KEY = ENTRIES - 5;\n   private static final QueryObject TEST_VALUE = new QueryObject(999, \"name_999\");\n-  private File logFile;\n-  protected MemberVM server;\n-  protected ClientVM client;\n-  private static TestCqListener cqListener = null;\n+\n+  private static volatile CountingCqListener cqListener;\n+  private static volatile ServerLauncher serverLauncher;\n+  private static volatile ClientCache clientCache;\n+\n+  private VM serverVM;\n+  private VM clientVM;\n+\n+  private String regionName;\n+  private String queryString;\n \n   @Rule\n-  public ClusterStartupRule cluster = new ClusterStartupRule();\n+  public DistributedRule distributedRule = new DistributedRule();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5NjYwMQ==", "bodyText": "Actually, we're encouraging people t use DistributedRule with Geode APIs instead of ClusterStartupRule. ClusterStartupRule provides an entire new API layer for Geode and I'm 100% against that approach for writing tests.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371996601", "createdAt": "2020-01-28T19:02:22Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -72,158 +90,74 @@\n   private static final int REPLACE_KEY = ENTRIES - 4;\n   private static final int INVALIDATE_KEY = ENTRIES - 5;\n   private static final QueryObject TEST_VALUE = new QueryObject(999, \"name_999\");\n-  private File logFile;\n-  protected MemberVM server;\n-  protected ClientVM client;\n-  private static TestCqListener cqListener = null;\n+\n+  private static volatile CountingCqListener cqListener;\n+  private static volatile ServerLauncher serverLauncher;\n+  private static volatile ClientCache clientCache;\n+\n+  private VM serverVM;\n+  private VM clientVM;\n+\n+  private String regionName;\n+  private String queryString;\n \n   @Rule\n-  public ClusterStartupRule cluster = new ClusterStartupRule();\n+  public DistributedRule distributedRule = new DistributedRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1ODc3OQ=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI3OTkxOA==", "bodyText": "Okay, good to know this... so, as the rule of thumb, we should use DisributedRule and CacheRule for distributed tests, and ServerStarterRule / LocatorStarterRule for integration tests, is that right?.", "url": "https://github.com/apache/geode/pull/4641#discussion_r372279918", "createdAt": "2020-01-29T09:45:17Z", "author": {"login": "jujoramos"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -72,158 +90,74 @@\n   private static final int REPLACE_KEY = ENTRIES - 4;\n   private static final int INVALIDATE_KEY = ENTRIES - 5;\n   private static final QueryObject TEST_VALUE = new QueryObject(999, \"name_999\");\n-  private File logFile;\n-  protected MemberVM server;\n-  protected ClientVM client;\n-  private static TestCqListener cqListener = null;\n+\n+  private static volatile CountingCqListener cqListener;\n+  private static volatile ServerLauncher serverLauncher;\n+  private static volatile ClientCache clientCache;\n+\n+  private VM serverVM;\n+  private VM clientVM;\n+\n+  private String regionName;\n+  private String queryString;\n \n   @Rule\n-  public ClusterStartupRule cluster = new ClusterStartupRule();\n+  public DistributedRule distributedRule = new DistributedRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1ODc3OQ=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUxOTEwOQ==", "bodyText": "I would just DistributedRule for distributed tests. Don't even use CacheRule. I set ServerLauncher and LocatorLauncher statics or fields in the test for starting Server and Locator. These are the same APIs that a User would use (or GFSH).", "url": "https://github.com/apache/geode/pull/4641#discussion_r372519109", "createdAt": "2020-01-29T17:18:06Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -72,158 +90,74 @@\n   private static final int REPLACE_KEY = ENTRIES - 4;\n   private static final int INVALIDATE_KEY = ENTRIES - 5;\n   private static final QueryObject TEST_VALUE = new QueryObject(999, \"name_999\");\n-  private File logFile;\n-  protected MemberVM server;\n-  protected ClientVM client;\n-  private static TestCqListener cqListener = null;\n+\n+  private static volatile CountingCqListener cqListener;\n+  private static volatile ServerLauncher serverLauncher;\n+  private static volatile ClientCache clientCache;\n+\n+  private VM serverVM;\n+  private VM clientVM;\n+\n+  private String regionName;\n+  private String queryString;\n \n   @Rule\n-  public ClusterStartupRule cluster = new ClusterStartupRule();\n+  public DistributedRule distributedRule = new DistributedRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1ODc3OQ=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY3NzMyOnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0OToxN1rOFiul4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo1MTowNFrOFiupdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTI2Nw==", "bodyText": "The fix: Use new inner class with AtomicIntegers instead of TestCqListener which is not thread safe.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371959267", "createdAt": "2020-01-28T17:49:17Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -378,4 +418,28 @@ public boolean authorize(Method method, Object target) {\n       return authorizedMethods.contains(method.getName());\n     }\n   }\n+\n+  private static class CountingCqListener implements CqListener {\n+\n+    private final AtomicInteger eventCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 564}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MDE4Mw==", "bodyText": "It's possible that changing to Geode and JMX APIs may have contributed to fixing the flakiness.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371960183", "createdAt": "2020-01-28T17:51:04Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -378,4 +418,28 @@ public boolean authorize(Method method, Object target) {\n       return authorizedMethods.contains(method.getName());\n     }\n   }\n+\n+  private static class CountingCqListener implements CqListener {\n+\n+    private final AtomicInteger eventCount = new AtomicInteger();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTI2Nw=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 564}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY3ODM1OnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo0OTozNFrOFiumgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNzoxNzowMVrOFjQucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg==", "bodyText": "The set of parameters is duplicated across the test, I believe the previous approach of having a specific method to return the full list of parameters is easier to read. Am I missing something here?.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371959426", "createdAt": "2020-01-28T17:49:34Z", "author": {"login": "jujoramos"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5Njk4Mw==", "bodyText": "I can restore this. The reason I did this was because the JUnitParams parameter methods are always detected as unused by the IDE, so then you have to mark it with SuppressWarnings(\"unused\").", "url": "https://github.com/apache/geode/pull/4641#discussion_r371996983", "createdAt": "2020-01-28T19:03:11Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5NzU3Ng==", "bodyText": "I also prefer to see the parameters with the test method instead of looking for another method. I could try to find a 3rd way to provide the parameters to the tests that isn't redundant.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371997576", "createdAt": "2020-01-28T19:04:31Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5ODk2MQ==", "bodyText": "I am don't like the duplication, but I think this way is easier to read. I think it doesn't matter a lot in this case. if the test were getting duplicated a lot or if this was in core (not test) code, I might object more.", "url": "https://github.com/apache/geode/pull/4641#discussion_r371998961", "createdAt": "2020-01-28T19:07:21Z", "author": {"login": "mhansonp"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI3OTk3MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/geode/pull/4641#discussion_r372279971", "createdAt": "2020-01-29T09:45:24Z", "author": {"login": "jujoramos"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUxODUxMw==", "bodyText": "I ended up replacing it with NamedParameters method.", "url": "https://github.com/apache/geode/pull/4641#discussion_r372518513", "createdAt": "2020-01-29T17:17:01Z", "author": {"login": "kirklund"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/internal/QueryConfigurationServiceConstraintsDistributedTest.java", "diffHunk": "@@ -233,41 +167,57 @@ private void createClientCq(String queryString, boolean executeWithInitialResult\n    * The operations should succeed, the CQ should fire 'onEvent' and no errors should be logged.\n    */\n   @Test\n-  @Parameters(method = \"getRegionTypeOperationsAndCqExecutionType\")\n-  @TestCaseName(\"[{index}] {method}(RegionType:{0};Operation:{1},ExecuteWithInitialResults:{2})\")\n+  @Parameters({\n+      \"REPLICATE, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"REPLICATE, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"REPLICATE, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"REPLICATE, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"REPLICATE, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"REPLICATE, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"REPLICATE, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\",\n+      \"PARTITION, PUT, true\", \"REPLICATE, PUT, false\",\n+      \"PARTITION, CREATE, true\", \"REPLICATE, CREATE, false\",\n+      \"PARTITION, REMOVE, true\", \"REPLICATE, REMOVE, false\",\n+      \"PARTITION, DESTROY, true\", \"REPLICATE, DESTROY, false\",\n+      \"PARTITION, UPDATE, true\", \"REPLICATE, UPDATE, false\",\n+      \"PARTITION, REPLACE, true\", \"REPLICATE, REPLACE, false\",\n+      \"PARTITION, INVALIDATE, true\", \"REPLICATE, INVALIDATE, false\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk1OTQyNg=="}, "originalCommit": {"oid": "605eed483f94cba6eec6277d28cc190ac073abf1"}, "originalPosition": 307}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3733, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}