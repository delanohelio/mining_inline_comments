{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTE4Mzc3", "number": 4736, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzowNTowNVrODj-fDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzowNzo1OFrODj-g1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDUwNTExOnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/ConnectCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzowNTowNVrOFwFQnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowMzoyMVrOFwtZkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2MjE0Mw==", "bodyText": "Like we discussed in the meeting, maybe checks for empty strings for username and password here as well, so that you don't need to deal with them anymore.", "url": "https://github.com/apache/geode/pull/4736#discussion_r385962143", "createdAt": "2020-02-28T23:05:05Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/ConnectCommand.java", "diffHunk": "@@ -124,6 +126,14 @@ public ResultModel connect(\n       useSsl = true;\n     }\n \n+    if (\"\".equals(token)) {\n+      return ResultModel.createError(\"--token requires a value, for example --token=foo\");\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxOTc5NA==", "bodyText": "I think the current code on this branch is correct. We were very careful to not change the existing behavior of --user and --password in order to be backwards compatible. But we also wanted to be able to tell if both --token and --user or --password were used together. That is why we added a specified default of \"\" for --user and --password. But the old behavior if you specified --user with no value was to just ignore it (it was not flagged as an error). If we do want to say this old behavior is a bug that needs to be fixed lets do that with its own ticket instead of trying to add it into this PR that is about adding --token support.", "url": "https://github.com/apache/geode/pull/4736#discussion_r386619794", "createdAt": "2020-03-02T20:03:21Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/ConnectCommand.java", "diffHunk": "@@ -124,6 +126,14 @@ public ResultModel connect(\n       useSsl = true;\n     }\n \n+    if (\"\".equals(token)) {\n+      return ResultModel.createError(\"--token requires a value, for example --token=foo\");\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2MjE0Mw=="}, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDUwOTE5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzowNzozOVrOFwFTEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowNDoyOFrOFwtbjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2Mjc3MA==", "bodyText": "this probably is not good. maybe use a unique string based on the token would be nice.", "url": "https://github.com/apache/geode/pull/4736#discussion_r385962770", "createdAt": "2020-02-28T23:07:39Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "diffHunk": "@@ -48,13 +48,16 @@ public JMXShiroAuthenticator(SecurityService securityService) {\n \n   @Override\n   public Subject authenticate(Object credentials) {\n-    String username = null;\n+    String username;\n     Properties credProps = new Properties();\n     if (credentials instanceof String[]) {\n       final String[] aCredentials = (String[]) credentials;\n       username = aCredentials[0];\n       credProps.setProperty(ResourceConstants.USER_NAME, aCredentials[0]);\n       credProps.setProperty(ResourceConstants.PASSWORD, aCredentials[1]);\n+    } else if (credentials instanceof String) {\n+      username = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMDMwMw==", "bodyText": "I addressed this by setting username to \"token-\" + credential.hashCode()", "url": "https://github.com/apache/geode/pull/4736#discussion_r386620303", "createdAt": "2020-03-02T20:04:28Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "diffHunk": "@@ -48,13 +48,16 @@ public JMXShiroAuthenticator(SecurityService securityService) {\n \n   @Override\n   public Subject authenticate(Object credentials) {\n-    String username = null;\n+    String username;\n     Properties credProps = new Properties();\n     if (credentials instanceof String[]) {\n       final String[] aCredentials = (String[]) credentials;\n       username = aCredentials[0];\n       credProps.setProperty(ResourceConstants.USER_NAME, aCredentials[0]);\n       credProps.setProperty(ResourceConstants.PASSWORD, aCredentials[1]);\n+    } else if (credentials instanceof String) {\n+      username = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2Mjc3MA=="}, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDUwOTY0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMzowNzo1OFrOFwFTXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzoyNTozNVrOFwoR_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2Mjg0NA==", "bodyText": "did we decide to do something about this now or later?", "url": "https://github.com/apache/geode/pull/4736#discussion_r385962844", "createdAt": "2020-02-28T23:07:58Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "diffHunk": "@@ -48,13 +48,16 @@ public JMXShiroAuthenticator(SecurityService securityService) {\n \n   @Override\n   public Subject authenticate(Object credentials) {\n-    String username = null;\n+    String username;\n     Properties credProps = new Properties();\n     if (credentials instanceof String[]) {\n       final String[] aCredentials = (String[]) credentials;\n       username = aCredentials[0];\n       credProps.setProperty(ResourceConstants.USER_NAME, aCredentials[0]);\n       credProps.setProperty(ResourceConstants.PASSWORD, aCredentials[1]);\n+    } else if (credentials instanceof String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUzNTkzMg==", "bodyText": "I think we should do this later when we need it. It is not clear that we will ever need a more general container (for example a Map) of these properties.", "url": "https://github.com/apache/geode/pull/4736#discussion_r386535932", "createdAt": "2020-03-02T17:25:35Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/security/shiro/JMXShiroAuthenticator.java", "diffHunk": "@@ -48,13 +48,16 @@ public JMXShiroAuthenticator(SecurityService securityService) {\n \n   @Override\n   public Subject authenticate(Object credentials) {\n-    String username = null;\n+    String username;\n     Properties credProps = new Properties();\n     if (credentials instanceof String[]) {\n       final String[] aCredentials = (String[]) credentials;\n       username = aCredentials[0];\n       credProps.setProperty(ResourceConstants.USER_NAME, aCredentials[0]);\n       credProps.setProperty(ResourceConstants.PASSWORD, aCredentials[1]);\n+    } else if (credentials instanceof String) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2Mjg0NA=="}, "originalCommit": {"oid": "97d0621cef5b445b464b16657db741ff2daa5301"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4464, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}