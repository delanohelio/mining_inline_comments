{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjkxNzY0", "number": 5309, "title": "GEODE-8250: Create new custom log config acceptance tests", "bodyText": "Resubmit new acceptance tests after reverting initial commit.\nServerWithCustomLogConfigAcceptanceTest was failing on Windows because it was attempting to use locators=\"\" in the command to launch the Server. Empty string is the default so explicitly specifying this is not necessary. I deleted it and the test started passing on Windows.", "createdAt": "2020-06-25T22:39:15Z", "url": "https://github.com/apache/geode/pull/5309", "merged": true, "mergeCommit": {"oid": "5e6c9e953ae6b43a9551ccda0b01c5857b137f50"}, "closed": true, "closedAt": "2020-07-02T17:29:55Z", "author": {"login": "kirklund"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu3lLRgFqTQzNzkzMjQ3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwuCFAgH2gAyNDQwMjkxNzY0OjU0Nzk4NDU4NDljNGRlZWFhYmY5NDYyODA0MTBiZDM2NTZlNGEwYjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTMyNDcy", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437932472", "createdAt": "2020-06-25T23:51:59Z", "commit": {"oid": "50ddbee271dac215f209e0577e04ecef0b9e88dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzo1MTo1OVrOGpPfbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzo1MTo1OVrOGpPfbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg5ODYwNQ==", "bodyText": "startServerCommand?", "url": "https://github.com/apache/geode/pull/5309#discussion_r445898605", "createdAt": "2020-06-25T23:51:59Z", "author": {"login": "jchen21"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/logging/ServerWithCustomLogConfigAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,209 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.logging;\n+\n+import static java.nio.file.Files.copy;\n+import static org.apache.geode.test.assertj.LogFileAssert.assertThat;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+import static org.apache.geode.test.util.ResourceUtils.createFileFromResource;\n+import static org.apache.geode.test.util.ResourceUtils.getResource;\n+\n+import java.nio.file.Path;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.rules.TestName;\n+\n+import org.apache.geode.test.junit.rules.gfsh.GfshRule;\n+\n+public class ServerWithCustomLogConfigAcceptanceTest {\n+\n+  private static final String CONFIG_WITH_GEODE_PLUGINS_FILE_NAME =\n+      \"ServerWithCustomLogConfigAcceptanceTestWithGeodePlugins.xml\";\n+  private static final String CONFIG_WITHOUT_GEODE_PLUGINS_FILE_NAME =\n+      \"ServerWithCustomLogConfigAcceptanceTestWithoutGeodePlugins.xml\";\n+\n+  private String serverName;\n+  private Path workingDir;\n+  private Path configWithGeodePluginsFile;\n+  private Path configWithoutGeodePluginsFile;\n+  private Path serverLogFile;\n+  private Path customLogFile;\n+  private TemporaryFolder temporaryFolder;\n+\n+  @Rule\n+  public GfshRule gfshRule = new GfshRule();\n+  @Rule\n+  public TestName testName = new TestName();\n+\n+  @Before\n+  public void setUpLogConfigFiles() {\n+    temporaryFolder = gfshRule.getTemporaryFolder();\n+\n+    configWithGeodePluginsFile = createFileFromResource(\n+        getResource(CONFIG_WITH_GEODE_PLUGINS_FILE_NAME), temporaryFolder.getRoot(),\n+        CONFIG_WITH_GEODE_PLUGINS_FILE_NAME)\n+            .toPath();\n+\n+    configWithoutGeodePluginsFile = createFileFromResource(\n+        getResource(CONFIG_WITHOUT_GEODE_PLUGINS_FILE_NAME), temporaryFolder.getRoot(),\n+        CONFIG_WITHOUT_GEODE_PLUGINS_FILE_NAME)\n+            .toPath();\n+  }\n+\n+  @Before\n+  public void setUpOutputFiles() {\n+    temporaryFolder = gfshRule.getTemporaryFolder();\n+\n+    serverName = testName.getMethodName();\n+\n+    workingDir = temporaryFolder.getRoot().toPath().toAbsolutePath();\n+    serverLogFile = workingDir.resolve(serverName + \".log\");\n+    customLogFile = workingDir.resolve(\"custom.log\");\n+  }\n+\n+  @Test\n+  public void serverLauncherUsesDefaultLoggingConfig() {\n+    String startLocatorCommand = String.join(\" \",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50ddbee271dac215f209e0577e04ecef0b9e88dd"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM2NDQ0", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437936444", "createdAt": "2020-06-26T00:04:18Z", "commit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNDoxOFrOGpPsuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNDoxOFrOGpPsuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjAwOA==", "bodyText": "Delete RequiresGeodeHome", "url": "https://github.com/apache/geode/pull/5309#discussion_r445902008", "createdAt": "2020-06-26T00:04:18Z", "author": {"login": "kirklund"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorAcceptanceTest.java", "diffHunk": "@@ -14,43 +14,84 @@\n  */\n package org.apache.geode.management.internal.cli.commands;\n \n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.getTimeout;\n import static org.assertj.core.api.Assertions.assertThat;\n \n+import java.nio.file.Path;\n+\n+import org.junit.After;\n+import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n \n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.test.junit.rules.RequiresGeodeHome;\n import org.apache.geode.test.junit.rules.gfsh.GfshExecution;\n import org.apache.geode.test.junit.rules.gfsh.GfshRule;\n import org.apache.geode.test.junit.rules.gfsh.GfshScript;\n \n public class StartLocatorAcceptanceTest {\n+\n+  private int locatorPort;\n+  private int httpServicePort;\n+  private Process locator;\n+  private Path geodeDependencies;\n+  private Path stdoutFile;\n+  private Path locatorLogFile;\n+  private Path pulseLogFile;\n+  private Path javaBin;\n+\n   @Rule\n   public GfshRule gfshRule = new GfshRule();\n+  @Rule\n+  public RequiresGeodeHome requiresGeodeHome = new RequiresGeodeHome();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM2NTcz", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437936573", "createdAt": "2020-06-26T00:04:41Z", "commit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNDo0MVrOGpPtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNDo0MVrOGpPtGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjEwNQ==", "bodyText": "Delete stopLocator(). I must've only removed these from the other test.", "url": "https://github.com/apache/geode/pull/5309#discussion_r445902105", "createdAt": "2020-06-26T00:04:41Z", "author": {"login": "kirklund"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorAcceptanceTest.java", "diffHunk": "@@ -14,43 +14,84 @@\n  */\n package org.apache.geode.management.internal.cli.commands;\n \n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.getTimeout;\n import static org.assertj.core.api.Assertions.assertThat;\n \n+import java.nio.file.Path;\n+\n+import org.junit.After;\n+import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n \n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.test.junit.rules.RequiresGeodeHome;\n import org.apache.geode.test.junit.rules.gfsh.GfshExecution;\n import org.apache.geode.test.junit.rules.gfsh.GfshRule;\n import org.apache.geode.test.junit.rules.gfsh.GfshScript;\n \n public class StartLocatorAcceptanceTest {\n+\n+  private int locatorPort;\n+  private int httpServicePort;\n+  private Process locator;\n+  private Path geodeDependencies;\n+  private Path stdoutFile;\n+  private Path locatorLogFile;\n+  private Path pulseLogFile;\n+  private Path javaBin;\n+\n   @Rule\n   public GfshRule gfshRule = new GfshRule();\n+  @Rule\n+  public RequiresGeodeHome requiresGeodeHome = new RequiresGeodeHome();\n+  @Rule\n+  public TemporaryFolder temporaryFolder = new TemporaryFolder();\n+\n+  @Before\n+  public void setUpRandomPorts() {\n+    int[] ports = AvailablePortHelper.getRandomAvailableTCPPorts(2);\n+    locatorPort = ports[0];\n+    httpServicePort = ports[1];\n+  }\n+\n+  @After\n+  public void stopLocator() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM3ODQ5", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437937849", "createdAt": "2020-06-26T00:08:59Z", "commit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowODo1OVrOGpPxbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowODo1OVrOGpPxbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMzIxNQ==", "bodyText": "Note: The workingDir for gfshScript is the workingDir for the GFSH process spawned by the JUnit test. GFSH then spawns the Locator and Server which is running in a subfolder. This change makes it easy for GfshRule to stop ALL Locators and Servers anywhere in the TemporaryFolder. Since only one gfshScript is executed at a time, the GFSH workingDir should be ok as temporaryFolder.getRoot().\nOn the off-chance that this does cause a problem, it would have to be for other GFSH commands that write something to the current workingDir of GFSH. I'm fairly confident we don't have tests that will have disk artifacts colliding just because of this little change.", "url": "https://github.com/apache/geode/pull/5309#discussion_r445903215", "createdAt": "2020-06-26T00:08:59Z", "author": {"login": "kirklund"}, "path": "geode-junit/src/main/java/org/apache/geode/test/junit/rules/gfsh/GfshRule.java", "diffHunk": "@@ -145,9 +145,7 @@ public GfshExecution execute(GfshScript gfshScript, File workingDir) {\n \n   public GfshExecution execute(GfshScript gfshScript) {\n     try {\n-      File workingDir = new File(temporaryFolder.getRoot(), gfshScript.getName());\n-      workingDir.mkdirs();\n-      return execute(gfshScript, workingDir);\n+      return execute(gfshScript, temporaryFolder.getRoot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTM4Mjcz", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437938273", "createdAt": "2020-06-26T00:10:23Z", "commit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoxMDoyM1rOGpPyvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoxMDoyM1rOGpPyvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMzU0OQ==", "bodyText": "I didn't mean to edit this class. Sigh.", "url": "https://github.com/apache/geode/pull/5309#discussion_r445903549", "createdAt": "2020-06-26T00:10:23Z", "author": {"login": "kirklund"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/management/internal/cli/commands/StartLocatorAcceptanceTest.java", "diffHunk": "@@ -14,43 +14,84 @@\n  */\n package org.apache.geode.management.internal.cli.commands;\n \n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.getTimeout;\n import static org.assertj.core.api.Assertions.assertThat;\n \n+import java.nio.file.Path;\n+\n+import org.junit.After;\n+import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n \n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.test.junit.rules.RequiresGeodeHome;\n import org.apache.geode.test.junit.rules.gfsh.GfshExecution;\n import org.apache.geode.test.junit.rules.gfsh.GfshRule;\n import org.apache.geode.test.junit.rules.gfsh.GfshScript;\n \n public class StartLocatorAcceptanceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTcwMTM5", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-437970139", "createdAt": "2020-06-26T02:05:32Z", "commit": {"oid": "b6ce020712aa3be1e2d9a06c4ce18f8e98d65af2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowNTozMlrOGpRcig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjowNTozMlrOGpRcig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzMDYzNA==", "bodyText": "so basically all scripts executed under the same gfshRule would use the same gfsh working dir instead of each execution has its own. I think this is a good change.", "url": "https://github.com/apache/geode/pull/5309#discussion_r445930634", "createdAt": "2020-06-26T02:05:32Z", "author": {"login": "jinmeiliao"}, "path": "geode-junit/src/main/java/org/apache/geode/test/junit/rules/gfsh/GfshRule.java", "diffHunk": "@@ -145,9 +145,7 @@ public GfshExecution execute(GfshScript gfshScript, File workingDir) {\n \n   public GfshExecution execute(GfshScript gfshScript) {\n     try {\n-      File workingDir = new File(temporaryFolder.getRoot(), gfshScript.getName());\n-      workingDir.mkdirs();\n-      return execute(gfshScript, workingDir);\n+      return execute(gfshScript, temporaryFolder.getRoot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMzIxNQ=="}, "originalCommit": {"oid": "9280ffa3702580af2e6db3ae6455727335e9de5f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDY4MjE5", "url": "https://github.com/apache/geode/pull/5309#pullrequestreview-438468219", "createdAt": "2020-06-26T17:22:01Z", "commit": {"oid": "b6ce020712aa3be1e2d9a06c4ce18f8e98d65af2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fa8b11737097e4a7ae02a4522fdb83ffa0dff7c", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/0fa8b11737097e4a7ae02a4522fdb83ffa0dff7c", "committedDate": "2020-06-30T18:34:39Z", "message": "GEODE-8250: Create new custom log config acceptance tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e06a7458182ba69e19e34b511816959557ce73d", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/5e06a7458182ba69e19e34b511816959557ce73d", "committedDate": "2020-06-30T18:34:39Z", "message": "Remove empty locators property which breaks on Windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b068cdbd9eb0702ae2b60374b0a4752a83a582f0", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/b068cdbd9eb0702ae2b60374b0a4752a83a582f0", "committedDate": "2020-06-30T18:34:39Z", "message": "Adjust GfshRule use of TemporaryFolder and use it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1370fea8c02747aeb2309142452c6299cfdc7b60", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/1370fea8c02747aeb2309142452c6299cfdc7b60", "committedDate": "2020-06-30T18:34:39Z", "message": "Fix some variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ff22cda44577d5ac2f3c2b623e59598f1a1356", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/f8ff22cda44577d5ac2f3c2b623e59598f1a1356", "committedDate": "2020-06-30T18:34:39Z", "message": "Revert accidental changes to StartLocatorAcceptanceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a4440d5352f071bab73dbcbd4f80ce285967be", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/35a4440d5352f071bab73dbcbd4f80ce285967be", "committedDate": "2020-06-30T18:34:39Z", "message": "Fixup failures involving GfshRule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada7b2d5619db872f216fbd9977191fda0a28b16", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/ada7b2d5619db872f216fbd9977191fda0a28b16", "committedDate": "2020-06-30T18:34:39Z", "message": "Fix GfshRuleIntegrationTest pathing in StressNewTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe762253b1902dabc0e71af80e9233e480ed4ec3", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/fe762253b1902dabc0e71af80e9233e480ed4ec3", "committedDate": "2020-06-30T18:37:47Z", "message": "Fixup GfshRuleIntegrationTest, VersionManager, and VersionManagerJUnitTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58e75df3962257d492dcf59a7dfeb95ea44556bc", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/58e75df3962257d492dcf59a7dfeb95ea44556bc", "committedDate": "2020-06-30T18:37:49Z", "message": "Add geode-old-versions to integrationTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c1395ca067f1f08ce8ceeb4c6c9ea660614dff5", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/8c1395ca067f1f08ce8ceeb4c6c9ea660614dff5", "committedDate": "2020-06-30T18:37:49Z", "message": "Print directory tree under bellsoft java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a36fb7c3cd12339bdb5a7ea3d45d5cb4cadc95f", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/9a36fb7c3cd12339bdb5a7ea3d45d5cb4cadc95f", "committedDate": "2020-06-30T18:37:49Z", "message": "Use System.out to print directory tree"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "481271a7db51da6188251be9d49638c30ff21671", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/481271a7db51da6188251be9d49638c30ff21671", "committedDate": "2020-06-30T18:37:49Z", "message": "Debugging"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff46176d0f72d43f5f5f8a5107b2facfc648a069", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/ff46176d0f72d43f5f5f8a5107b2facfc648a069", "committedDate": "2020-06-30T18:22:55Z", "message": "Debugging"}, "afterCommit": {"oid": "481271a7db51da6188251be9d49638c30ff21671", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/481271a7db51da6188251be9d49638c30ff21671", "committedDate": "2020-06-30T18:37:49Z", "message": "Debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44dc405858a08ea0e3a22d18eaebdef4a268a23f", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/44dc405858a08ea0e3a22d18eaebdef4a268a23f", "committedDate": "2020-06-30T21:10:56Z", "message": "Fix spotless format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5479845849c4deeaabf946280410bd3656e4a0b6", "author": {"user": {"login": "kirklund", "name": "Kirk Lund"}}, "url": "https://github.com/apache/geode/commit/5479845849c4deeaabf946280410bd3656e4a0b6", "committedDate": "2020-07-01T17:52:21Z", "message": "Fixup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4332, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}