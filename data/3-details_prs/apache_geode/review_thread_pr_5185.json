{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjk5MjIz", "number": 5185, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyNTo0MFrOEBBwPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozODoxOFrOEBB9Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTEyNzY2OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyNTo0MFrOGcrCUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1NjowMlrOGctZQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxODQxOQ==", "bodyText": "Should this SHUTDOWN command code be moved to after we check of unsupported commands are allowed? I think SHUTDOWN is unsupported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432718419", "createdAt": "2020-05-29T20:25:40Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -196,22 +197,26 @@ public void channelInactive(ChannelHandlerContext ctx) {\n \n   private void executeCommand(ChannelHandlerContext ctx, Command command) throws Exception {\n     RedisResponse response;\n-    if (isAuthenticated) {\n-      if (command.isOfType(RedisCommandType.SHUTDOWN)) {\n-        this.server.shutdown();\n-        return;\n-      }\n \n-      response = command.execute(this);\n+    if (command.isOfType(RedisCommandType.SHUTDOWN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NzA1Nw==", "bodyText": "Good catch.", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757057", "createdAt": "2020-05-29T21:56:02Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -196,22 +197,26 @@ public void channelInactive(ChannelHandlerContext ctx) {\n \n   private void executeCommand(ChannelHandlerContext ctx, Command command) throws Exception {\n     RedisResponse response;\n-    if (isAuthenticated) {\n-      if (command.isOfType(RedisCommandType.SHUTDOWN)) {\n-        this.server.shutdown();\n-        return;\n-      }\n \n-      response = command.execute(this);\n+    if (command.isOfType(RedisCommandType.SHUTDOWN)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxODQxOQ=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE0MTA1OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMDo0NVrOGcrKxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1NjoyOVrOGctZwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDU4Mg==", "bodyText": "PERSIST should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720582", "createdAt": "2020-05-29T20:30:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NzE4NA==", "bodyText": "Fixed", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757184", "createdAt": "2020-05-29T21:56:29Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDU4Mg=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE0MTk0OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMTowOVrOGcrLWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1Njo0MFrOGctZ9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDczMA==", "bodyText": "PTTL should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720730", "createdAt": "2020-05-29T20:31:09Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NzIzOQ==", "bodyText": "Fixed", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757239", "createdAt": "2020-05-29T21:56:40Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDczMA=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE0MjUwOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMToyMVrOGcrLrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMToyMVrOGcrLrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDgxNA==", "bodyText": "TTL should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720814", "createdAt": "2020-05-29T20:31:21Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),\n+  SCAN(new ScanExecutor(), false),\n+  TTL(new TTLExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE0MzAxOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMTozNFrOGcrL_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1Njo1N1rOGctaXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDg5Mg==", "bodyText": "TYPE should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720892", "createdAt": "2020-05-29T20:31:34Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),\n+  SCAN(new ScanExecutor(), false),\n+  TTL(new TTLExecutor(), false),\n+  TYPE(new TypeExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NzM0Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757343", "createdAt": "2020-05-29T21:56:57Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),\n+  SCAN(new ScanExecutor(), false),\n+  TTL(new TTLExecutor(), false),\n+  TYPE(new TypeExecutor(), false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDg5Mg=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE0NzgxOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMzoyNFrOGcrO-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1NzoyM1rOGctbCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMTY1OA==", "bodyText": "Since we support FLUSHALL and FLUSHDB uses the FlushAllExecutor should we support it?", "url": "https://github.com/apache/geode/pull/5185#discussion_r432721658", "createdAt": "2020-05-29T20:33:24Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1NzUxNA==", "bodyText": "Seems right. I've included it.", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757514", "createdAt": "2020-05-29T21:57:23Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMTY1OA=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTE2MDc1OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/SupportedCommandsJUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozODoxOFrOGcrWyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMTo1ODoyM1rOGctcag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMzY1Nw==", "bodyText": "This seems painful but might be okay. I just don't like that we have to update two places (the enum and these lists) anytime we change what we support. But it probably will not happen that often.", "url": "https://github.com/apache/geode/pull/5185#discussion_r432723657", "createdAt": "2020-05-29T20:38:18Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/SupportedCommandsJUnitTest.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Test;\n+\n+public class SupportedCommandsJUnitTest {\n+\n+  private final String[] supportedCommands = new String[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1Nzg2Ng==", "bodyText": "Definitely painful but at least it makes it a bit more deliberate when marking commands as un/supported. Should catch any inadvertent changes.", "url": "https://github.com/apache/geode/pull/5185#discussion_r432757866", "createdAt": "2020-05-29T21:58:23Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/SupportedCommandsJUnitTest.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Test;\n+\n+public class SupportedCommandsJUnitTest {\n+\n+  private final String[] supportedCommands = new String[] {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMzY1Nw=="}, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3935, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}