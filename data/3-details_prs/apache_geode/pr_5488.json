{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTkwODY2", "number": 5488, "title": "GEODE-8333: Change Redis adapter threading model - fixes pubsub issues", "bodyText": "Do not use Netty threads for the entire request lifecycle. Each\ninstance of ExecutionHandlerContext (essentially each client\nconnection) uses a command queue which is actioned by a single thread\ntaken from the Geode 'waiting pool'.\nEvery SUBSCRIBEed client is moved to a separate EventGroupLoop so that\nPUBLISHed messages are not sent back using the 'normal' Worker\nEventLoopGroup. This avoids a deadlock issue where PUBLISHed messages\nneed to be sent using the same thread that the PUBLISH response needs\nto happen on.\nFix issues with PubSub where switching the EventLoopGroup may fail\n(because a client has already closed the connection) thus resulting in\nhanging PUBLISHers waiting for a Subscription to be marked as\nreadyForPublish.\nConsolidate various MockSubscriber classes\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-08-31T00:52:38Z", "url": "https://github.com/apache/geode/pull/5488", "merged": true, "mergeCommit": {"oid": "27b8e47e9f6e433dc71bffc5420ebcb51f79797e"}, "closed": true, "closedAt": "2020-08-31T23:22:12Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEH4ZUAH2gAyNDc1OTkwODY2OmRkMmUzYjAxMGVmNTc0Zjk4NzczOTEzYWQ4YTUxMjk1NmExMTYxNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEY-SGgH2gAyNDc1OTkwODY2OjIzNWNmODMwNTkwNDlhYWVmNjQ4YzljMDBiMzhjZjFjNmQwMDQ5MGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/dd2e3b010ef574f98773913ad8a512956a116159", "committedDate": "2020-08-31T00:43:52Z", "message": "GEODE-8333: Change Redis adapter threading model - fixes pubsub issues\n\n- Do not use Netty threads for the entire request lifecycle. Each\n  instance of ExecutionHandlerContext (essentially each client\n  connection) uses a command queue which is actioned by a single thread\n  taken from the Geode 'waiting pool'.\n- Every SUBSCRIBEed client is moved to a separate EventGroupLoop so that\n  PUBLISHed messages are not sent back using the 'normal' Worker\n  EventLoopGroup. This avoids a deadlock issue where PUBLISHed messages\n  need to be sent using the same thread that the PUBLISH response needs\n  to happen on.\n- Fix issues with PubSub where switching the EventLoopGroup may fail\n  (because a client has already closed the connection) thus resulting in\n  hanging PUBLISHers waiting for a Subscription to be marked as\n  'readyForPublish'.\n- Consolidate various MockSubscriber classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NzQzMTc1", "url": "https://github.com/apache/geode/pull/5488#pullrequestreview-478743175", "createdAt": "2020-08-31T16:01:35Z", "commit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMTozNVrOHJ-4mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjoxNTozNFrOHJ_Xfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyOTUyOA==", "bodyText": "Instead of \"100\" should this be \"MAX_QUEUED_COMMANDS\"?", "url": "https://github.com/apache/geode/pull/5488#discussion_r480229528", "createdAt": "2020-08-31T16:01:35Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -61,17 +64,22 @@\n public class ExecutionHandlerContext extends ChannelInboundHandlerAdapter {\n \n   private static final Logger logger = LogService.getLogger();\n+  private static final Command TERMINATE_COMMAND = new Command();\n \n   private final Client client;\n   private final Channel channel;\n   private final RegionProvider regionProvider;\n   private final PubSub pubsub;\n-  private final EventLoopGroup subscriberGroup;\n   private final ByteBufAllocator byteBufAllocator;\n   private final byte[] authPassword;\n   private final Supplier<Boolean> allowUnsupportedSupplier;\n   private final Runnable shutdownInvoker;\n   private final RedisStats redisStats;\n+  private final EventLoopGroup subscriberGroup;\n+  private final int MAX_QUEUED_COMMANDS =\n+      Integer.getInteger(\"geode.redis.commandQueueSize\", 1000);\n+  private final LinkedBlockingQueue<Command> commandQueue =\n+      new LinkedBlockingQueue<>(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzMTkxNw==", "bodyText": "I'd like to discuss what this should synchronize on. The method syncs on this (ExecutionHandlerContext) but the future it creates syncs on the channel. I think it would be better to sync on \"channel\" on this method instead of \"this\"", "url": "https://github.com/apache/geode/pull/5488#discussion_r480231917", "createdAt": "2020-08-31T16:05:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -139,6 +164,33 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n     }\n   }\n \n+  public EventLoopGroup getSubscriberGroup() {\n+    return subscriberGroup;\n+  }\n+\n+  public synchronized void changeChannelEventLoopGroup(EventLoopGroup newGroup,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNDM3Ng==", "bodyText": "Does this warning message make sense? It might but I thought it would just say it FAILED I'm not sure about \"to return\"", "url": "https://github.com/apache/geode/pull/5488#discussion_r480234376", "createdAt": "2020-08-31T16:10:11Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -247,25 +306,16 @@ private RedisResponse handleUnAuthenticatedCommand(Command command) {\n     return response;\n   }\n \n-  public EventLoopGroup getSubscriberGroup() {\n-    return subscriberGroup;\n-  }\n-\n-  public void changeChannelEventLoopGroup(EventLoopGroup newGroup) {\n-    if (newGroup.equals(channel.eventLoop())) {\n-      // already registered with newGroup\n-      return;\n-    }\n-    channel.deregister().addListener((ChannelFutureListener) future -> {\n-      newGroup.register(channel).sync();\n-    });\n-  }\n-\n-  private void logResponse(RedisResponse response) {\n+  private void logResponse(RedisResponse response, String extraMessage, Throwable cause) {\n     if (logger.isDebugEnabled() && response != null) {\n       ByteBuf buf = response.encode(new UnpooledByteBufAllocator(false));\n-      logger.debug(\"Redis command returned: {}\",\n-          Command.getHexEncodedString(buf.array(), buf.readableBytes()));\n+      if (cause == null) {\n+        logger.debug(\"Redis command returned: {} - {}\",\n+            Command.getHexEncodedString(buf.array(), buf.readableBytes()), extraMessage);\n+      } else {\n+        logger.warn(\"Redis command FAILED to return: {} - {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzNzQzOQ==", "bodyText": "I think we should review the commandQueue code and see if we might continue to process commands in the queue after this happens. For example this code adds TERMINATE_COMMAND to the end of the queue so do we end up still processing any commands already queued? We should also check that the \"quit\" command does not allow commands queued after it to still be processed on the server", "url": "https://github.com/apache/geode/pull/5488#discussion_r480237439", "createdAt": "2020-08-31T16:15:34Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/ExecutionHandlerContext.java", "diffHunk": "@@ -192,43 +244,50 @@ public void channelInactive(ChannelHandlerContext ctx) {\n     if (logger.isDebugEnabled()) {\n       logger.debug(\"GeodeRedisServer-Connection closing with \" + ctx.channel().remoteAddress());\n     }\n+    commandQueue.offer(TERMINATE_COMMAND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2e3b010ef574f98773913ad8a512956a116159"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40903cbc7083523f65f7c8f92d97ee25dc2ae2f", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/e40903cbc7083523f65f7c8f92d97ee25dc2ae2f", "committedDate": "2020-08-31T17:24:21Z", "message": "Review updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c3ef922254deb0da971a66ae9745ebaf9aca5e", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/f2c3ef922254deb0da971a66ae9745ebaf9aca5e", "committedDate": "2020-08-31T19:48:01Z", "message": "Here we go again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTE2NzEz", "url": "https://github.com/apache/geode/pull/5488#pullrequestreview-478916713", "createdAt": "2020-08-31T20:06:03Z", "commit": {"oid": "f2c3ef922254deb0da971a66ae9745ebaf9aca5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "235cf83059049aaef648c9c00b38cf1c6d00490f", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/235cf83059049aaef648c9c00b38cf1c6d00490f", "committedDate": "2020-08-31T20:38:41Z", "message": "Move synchronize back to the method level"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4176, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}