{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDk5MDA4", "number": 5271, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0OTo0NVrOEGh3zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozMDoyM1rOEGic_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjgxODY5OnYy", "diffSide": "RIGHT", "path": "ci/bin/concourse_job_performance.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0OTo0NVrOGlYnwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowODo0NFrOGlZFSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1Mzg4OQ==", "bodyText": "You might want to rename the variable if now you are looking at failed and succeeded builds.", "url": "https://github.com/apache/geode/pull/5271#discussion_r441853889", "createdAt": "2020-06-17T21:49:45Z", "author": {"login": "mhansonp"}, "path": "ci/bin/concourse_job_performance.py", "diffHunk": "@@ -58,7 +60,7 @@ def main(url, team, pipeline, job, number_of_builds, authorization_cookie, threa\n     builds = get_builds_summary_sheet(url, team, pipeline, job, number_of_builds+10, authorization_cookie)\n \n     build_to_examine = get_builds_to_examine(builds, number_of_builds)\n-    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] == 'failed']\n+    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] in ['failed', 'succeeded']]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2MTQ1MA==", "bodyText": "done", "url": "https://github.com/apache/geode/pull/5271#discussion_r441861450", "createdAt": "2020-06-17T22:08:44Z", "author": {"login": "rhoughton-pivot"}, "path": "ci/bin/concourse_job_performance.py", "diffHunk": "@@ -58,7 +60,7 @@ def main(url, team, pipeline, job, number_of_builds, authorization_cookie, threa\n     builds = get_builds_summary_sheet(url, team, pipeline, job, number_of_builds+10, authorization_cookie)\n \n     build_to_examine = get_builds_to_examine(builds, number_of_builds)\n-    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] == 'failed']\n+    expected_failed_builds = [int(b['name']) for b in build_to_examine if b['status'] in ['failed', 'succeeded']]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1Mzg4OQ=="}, "originalCommit": {"oid": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjg0NDk2OnYy", "diffSide": "RIGHT", "path": "ci/pipelines/meta/deploy_meta.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowMDoyMlrOGlY4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowODo0MFrOGlZFJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODE3Nw==", "bodyText": "Please also add enableFeature mass-test-run to ci/pipelines/meta/deploy_meta.sh line ~285 just below where pr is enabled", "url": "https://github.com/apache/geode/pull/5271#discussion_r441858177", "createdAt": "2020-06-17T22:00:22Z", "author": {"login": "onichols-pivotal"}, "path": "ci/pipelines/meta/deploy_meta.sh", "diffHunk": "@@ -256,6 +256,7 @@ set +x\n if [[ \"${GEODE_FORK}\" != \"${UPSTREAM_FORK}\" ]]; then\n   echo \"Disabling unnecessary jobs for forks.\"\n   pauseJobs ${META_PIPELINE} set-reaper-pipeline\n+  pauseJobs ${META_PIPELINE} set-mass-test-run-pipeline", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2MTQxMg==", "bodyText": "done", "url": "https://github.com/apache/geode/pull/5271#discussion_r441861412", "createdAt": "2020-06-17T22:08:40Z", "author": {"login": "rhoughton-pivot"}, "path": "ci/pipelines/meta/deploy_meta.sh", "diffHunk": "@@ -256,6 +256,7 @@ set +x\n if [[ \"${GEODE_FORK}\" != \"${UPSTREAM_FORK}\" ]]; then\n   echo \"Disabling unnecessary jobs for forks.\"\n   pauseJobs ${META_PIPELINE} set-reaper-pipeline\n+  pauseJobs ${META_PIPELINE} set-mass-test-run-pipeline", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODE3Nw=="}, "originalCommit": {"oid": "7b45b4e6d6dec91b31b5e00915d886c5d4897aa0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjkxMzkwOnYy", "diffSide": "RIGHT", "path": "ci/pipelines/shared/jinja.variables.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjozMDoyM1rOGlZjaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo0NjowNFrOGl71-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ==", "bodyText": "@mhansonp I know there's been discussion in the past about how much value we get out of 100 vs 200.  Can you mention the benefits of 200 vs 100?  My back-of-the-envelope calculations suggest 200 takes about 4 days, while 100 could be finished in a weekend (and about $900 cheaper, if anyone cares)", "url": "https://github.com/apache/geode/pull/5271#discussion_r441869161", "createdAt": "2020-06-17T22:30:23Z", "author": {"login": "onichols-pivotal"}, "path": "ci/pipelines/shared/jinja.variables.yml", "diffHunk": "@@ -67,6 +67,7 @@ java_test_versions:\n \n metadata:\n   initial_version: 1.14.0-((semver-prerelease-token)).0\n+  mass_test_run_iterations: 200", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNzczMw==", "bodyText": "Basically, 200 gives us a big enough sample size to tell the 1 off from the 2 or more. I think running 100 might be fine. Especially if the report generator script is doing a last 200 check.", "url": "https://github.com/apache/geode/pull/5271#discussion_r441907733", "createdAt": "2020-06-18T00:45:21Z", "author": {"login": "mhansonp"}, "path": "ci/pipelines/shared/jinja.variables.yml", "diffHunk": "@@ -67,6 +67,7 @@ java_test_versions:\n \n metadata:\n   initial_version: 1.14.0-((semver-prerelease-token)).0\n+  mass_test_run_iterations: 200", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}, "originalCommit": {"oid": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyOTY4OA==", "bodyText": "Why would I run 100 jobs against SHA abcdef and then run a report containing 200 jobs mixed of abcdef and 123456 ?", "url": "https://github.com/apache/geode/pull/5271#discussion_r442429688", "createdAt": "2020-06-18T18:43:38Z", "author": {"login": "rhoughton-pivot"}, "path": "ci/pipelines/shared/jinja.variables.yml", "diffHunk": "@@ -67,6 +67,7 @@ java_test_versions:\n \n metadata:\n   initial_version: 1.14.0-((semver-prerelease-token)).0\n+  mass_test_run_iterations: 200", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}, "originalCommit": {"oid": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQzMDk2OA==", "bodyText": "So you would use the SHA as normal, but you would run 100 tests and report against the last 200. That will give us a historical result set for the last two weeks. Or to just keep it simple, we can just do 100 and report on 100.", "url": "https://github.com/apache/geode/pull/5271#discussion_r442430968", "createdAt": "2020-06-18T18:46:04Z", "author": {"login": "mhansonp"}, "path": "ci/pipelines/shared/jinja.variables.yml", "diffHunk": "@@ -67,6 +67,7 @@ java_test_versions:\n \n metadata:\n   initial_version: 1.14.0-((semver-prerelease-token)).0\n+  mass_test_run_iterations: 200", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg2OTE2MQ=="}, "originalCommit": {"oid": "b559ae6b149e3aa4ee11ea20b6ec37aba1526b44"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4018, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}