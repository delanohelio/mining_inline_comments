{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTUwOTk0", "number": 5863, "title": "GEODE-8798: Improve output from export logs command", "bodyText": "Validate the format of the --start-time and --end-time arguments\nValidate that the --start-time and --end-time arguments can be\ncorrectly parsed\nOutput the values for --start-time and --end-time as used by the\nfunction to allow users to check that they're as expected when specified\nUpdate documentation to reflect the new output and better explain the\nbehaviour when the arguments are provided\n\nAuthored-by: Donal Evans doevans@vmware.com\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n[N/A] If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-12-17T02:03:59Z", "url": "https://github.com/apache/geode/pull/5863", "merged": true, "mergeCommit": {"oid": "94c3aea4821eed49ab2420333cd2544d81b0094f"}, "closed": true, "closedAt": "2021-01-08T23:13:37Z", "author": {"login": "DonalEvans"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdtPH-jgFqTU2MjAyNDYzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABduQ5gtgFqTU2NDYzNjk1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMDI0NjMx", "url": "https://github.com/apache/geode/pull/5863#pullrequestreview-562024631", "createdAt": "2021-01-05T18:20:27Z", "commit": {"oid": "9d52ed20de9adbddc824f1f85deac043fad54e09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoyMDoyN1rOIOiJ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODoyMDoyN1rOIOiJ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExMDU2NQ==", "bodyText": "I'd like to see these format descriptions/improvements in the description of the parameters.\nI think that your wording is adequate, but I came up with this possibility for a rewrite of the added info for the end time info.  Use it if you like.\n\"An end time specified by only a date implements a time of 00:00. This exports logs written up until 23:59:59.999 on the date prior to the one specified.\"", "url": "https://github.com/apache/geode/pull/5863#discussion_r552110565", "createdAt": "2021-01-05T18:20:27Z", "author": {"login": "karensmolermiller"}, "path": "geode-docs/tools_modules/gfsh/command-pages/export.html.md.erb", "diffHunk": "@@ -183,7 +183,9 @@ Latest\\server1\\region2_20121001.gfd on host : 192.0.2.0\n \n Export logs to a given directory.\n \n-All files that have logs in the specified time range will be exported. If no time range is specified, all logs will be exported.\n+All files that have logs in the specified time range will be exported. If no time range is specified, all logs will be exported. It should be noted that when specifying an `--end-time` argument using a date only, the time is assumed to be `00:00`, meaning that no logs that were written on the date provided will be exported, only those written up until `23:59:59.999` on the day prior.\n+\n+When using the `yyyy/MM/dd/HH/mm/ss/SSS/z` format for `--start-time` or `--end-time`, the time zone, denoted `z`, should be specified as either a 3-letter time zone such as `PST` or as an offset to GMT/UTC such as `GMT+08:00`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52ed20de9adbddc824f1f85deac043fad54e09"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a49bd785a07b6eeb0eff949afb45f40f071dc9", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/72a49bd785a07b6eeb0eff949afb45f40f071dc9", "committedDate": "2021-01-05T19:22:42Z", "message": "GEODE-8798: Improve output from export logs command\n\n- Validate the format of the --start-time and --end-time arguments\n- Validate that the --start-time and --end-time arguments can be\ncorrectly parsed\n- Output the values for --start-time and --end-time as used by the\nfunction to allow users to check that they're as expected when specified\n- Update documentation to reflect the new output and better explain the\nbehaviour when the arguments are provided\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d52ed20de9adbddc824f1f85deac043fad54e09", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/9d52ed20de9adbddc824f1f85deac043fad54e09", "committedDate": "2020-12-17T02:01:24Z", "message": "GEODE-8798: Improve output from export logs command\n\n- Validate the format of the --start-time and --end-time arguments\n- Validate that the --start-time and --end-time arguments can be\ncorrectly parsed\n- Output the values for --start-time and --end-time as used by the\nfunction to allow users to check that they're as expected when specified\n- Update documentation to reflect the new output and better explain the\nbehaviour when the arguments are provided\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}, "afterCommit": {"oid": "2cc200da0ac53c3082b7d89b7f9b691ed0c83ec6", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/2cc200da0ac53c3082b7d89b7f9b691ed0c83ec6", "committedDate": "2021-01-05T19:22:42Z", "message": "Address review comments on docs changes\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/47901eeafe9313bcc9fab65f6e0b5afcd441fab3", "committedDate": "2021-01-05T21:18:57Z", "message": "Address review comments on docs changes\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cc200da0ac53c3082b7d89b7f9b691ed0c83ec6", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/2cc200da0ac53c3082b7d89b7f9b691ed0c83ec6", "committedDate": "2021-01-05T19:22:42Z", "message": "Address review comments on docs changes\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}, "afterCommit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/47901eeafe9313bcc9fab65f6e0b5afcd441fab3", "committedDate": "2021-01-05T21:18:57Z", "message": "Address review comments on docs changes\n\nAuthored-by: Donal Evans <doevans@vmware.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMTQ3ODU3", "url": "https://github.com/apache/geode/pull/5863#pullrequestreview-562147857", "createdAt": "2021-01-05T21:24:58Z", "commit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMTY3ODUx", "url": "https://github.com/apache/geode/pull/5863#pullrequestreview-562167851", "createdAt": "2021-01-05T21:59:40Z", "commit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NjIxNTIw", "url": "https://github.com/apache/geode/pull/5863#pullrequestreview-564621520", "createdAt": "2021-01-08T22:18:04Z", "commit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NjM2OTU3", "url": "https://github.com/apache/geode/pull/5863#pullrequestreview-564636957", "createdAt": "2021-01-08T22:58:16Z", "commit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQyMjo1ODoxNlrOIQj9Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQyMjo1ODo1OFrOIQj9_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDIzNzE5MQ==", "bodyText": "Might be a nitpick. Is it possible to append the ParseException error message as well?", "url": "https://github.com/apache/geode/pull/5863#discussion_r554237191", "createdAt": "2021-01-08T22:58:16Z", "author": {"login": "pivotal-eshu"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/ExportLogsInterceptor.java", "diffHunk": "@@ -106,8 +159,78 @@ public ResultModel postExecution(GfshParseResult parseResult, ResultModel comman\n     }\n \n     // if there is no downloaded file. File is saved on the locator/manager.\n-    return ResultModel.createInfo(\n-        \"Logs exported to the connected member's file system: \"\n-            + commandResult.getFileToDownload().toString());\n+    output.append(\"Logs exported to the connected member's file system: \")\n+        .append(commandResult.getFileToDownload().toString());\n+    return ResultModel.createInfo(output.toString());\n+  }\n+\n+  private ResultModel checkStartAndEndFormat(String start, String end) {\n+    StringBuilder formatErrorMessage = new StringBuilder();\n+    boolean formatError = false;\n+    if (start != null && !DATE_AND_TIME_PATTERN.matcher(start).matches()\n+        && !DATE_ONLY_PATTERN.matcher(start).matches()) {\n+      formatErrorMessage.append(EXPORT_LOGS__STARTTIME);\n+      formatError = true;\n+    }\n+\n+    if (end != null && !DATE_AND_TIME_PATTERN.matcher(end).matches()\n+        && !DATE_ONLY_PATTERN.matcher(end).matches()) {\n+      if (formatError) {\n+        formatErrorMessage.append(\" and \");\n+      }\n+      formatErrorMessage.append(EXPORT_LOGS__ENDTIME);\n+      formatError = true;\n+    }\n+\n+    if (formatError) {\n+      formatErrorMessage.append(\" had incorrect format. Valid formats are \")\n+          .append(ONLY_DATE_FORMAT).append(\" and \").append(FORMAT);\n+      return ResultModel.createError(formatErrorMessage.toString());\n+    }\n+    return null;\n+  }\n+\n+  private ResultModel checkStartAndEndParsing(String start, String end) {\n+    StringBuilder parseErrorMessage = new StringBuilder();\n+    boolean parseError = false;\n+\n+    SimpleDateFormat dateAndTimeFormat = new SimpleDateFormat(FORMAT);\n+    SimpleDateFormat dateOnlyFormat = new SimpleDateFormat(ONLY_DATE_FORMAT);\n+    if (start != null) {\n+      try {\n+        // If the input is intended to be parsed as date and time, use the date and time format\n+        if (start.length() > 10) {\n+          dateAndTimeFormat.parse(start);\n+        } else {\n+          dateOnlyFormat.parse(start);\n+        }\n+      } catch (ParseException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDIzNzQzNg==", "bodyText": "Same here as well.", "url": "https://github.com/apache/geode/pull/5863#discussion_r554237436", "createdAt": "2021-01-08T22:58:58Z", "author": {"login": "pivotal-eshu"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/ExportLogsInterceptor.java", "diffHunk": "@@ -106,8 +159,78 @@ public ResultModel postExecution(GfshParseResult parseResult, ResultModel comman\n     }\n \n     // if there is no downloaded file. File is saved on the locator/manager.\n-    return ResultModel.createInfo(\n-        \"Logs exported to the connected member's file system: \"\n-            + commandResult.getFileToDownload().toString());\n+    output.append(\"Logs exported to the connected member's file system: \")\n+        .append(commandResult.getFileToDownload().toString());\n+    return ResultModel.createInfo(output.toString());\n+  }\n+\n+  private ResultModel checkStartAndEndFormat(String start, String end) {\n+    StringBuilder formatErrorMessage = new StringBuilder();\n+    boolean formatError = false;\n+    if (start != null && !DATE_AND_TIME_PATTERN.matcher(start).matches()\n+        && !DATE_ONLY_PATTERN.matcher(start).matches()) {\n+      formatErrorMessage.append(EXPORT_LOGS__STARTTIME);\n+      formatError = true;\n+    }\n+\n+    if (end != null && !DATE_AND_TIME_PATTERN.matcher(end).matches()\n+        && !DATE_ONLY_PATTERN.matcher(end).matches()) {\n+      if (formatError) {\n+        formatErrorMessage.append(\" and \");\n+      }\n+      formatErrorMessage.append(EXPORT_LOGS__ENDTIME);\n+      formatError = true;\n+    }\n+\n+    if (formatError) {\n+      formatErrorMessage.append(\" had incorrect format. Valid formats are \")\n+          .append(ONLY_DATE_FORMAT).append(\" and \").append(FORMAT);\n+      return ResultModel.createError(formatErrorMessage.toString());\n+    }\n+    return null;\n+  }\n+\n+  private ResultModel checkStartAndEndParsing(String start, String end) {\n+    StringBuilder parseErrorMessage = new StringBuilder();\n+    boolean parseError = false;\n+\n+    SimpleDateFormat dateAndTimeFormat = new SimpleDateFormat(FORMAT);\n+    SimpleDateFormat dateOnlyFormat = new SimpleDateFormat(ONLY_DATE_FORMAT);\n+    if (start != null) {\n+      try {\n+        // If the input is intended to be parsed as date and time, use the date and time format\n+        if (start.length() > 10) {\n+          dateAndTimeFormat.parse(start);\n+        } else {\n+          dateOnlyFormat.parse(start);\n+        }\n+      } catch (ParseException e) {\n+        parseErrorMessage.append(EXPORT_LOGS__STARTTIME);\n+        parseError = true;\n+      }\n+    }\n+\n+    if (end != null) {\n+      try {\n+        // If the input is intended to be parsed as date and time, use the date and time format\n+        if (end.length() > 10) {\n+          dateAndTimeFormat.parse(end);\n+        } else {\n+          dateOnlyFormat.parse(end);\n+        }\n+      } catch (ParseException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47901eeafe9313bcc9fab65f6e0b5afcd441fab3"}, "originalPosition": 175}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4288, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}