{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDM3Nzkx", "number": 5858, "title": "GEODE-8795: Lucene queries should utilize post-processing if enabled", "bodyText": "This now relies on the principal being available in the\nFunctionContext.\nPDX objects are passed directly to the post-processor thus avoiding\nany possible serialization issues.\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-12-16T21:04:14Z", "url": "https://github.com/apache/geode/pull/5858", "merged": true, "mergeCommit": {"oid": "8785b84efcabf9a74691ae65d7c1015a9c698893"}, "closed": true, "closedAt": "2021-01-05T19:17:53Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmvieUgH2gAyNTQxNDM3NzkxOmI5YzZhZGJjNDAwOWRmNmU2NmY0OTE3MjczMzFkZWRmODNlMzkyNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds7hlTgFqTU2MTI4NDg3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9c6adbc4009df6e66f491727331dedf83e39246", "author": {"user": {"login": "nabarunnag", "name": "Nabarun Nag"}}, "url": "https://github.com/apache/geode/commit/b9c6adbc4009df6e66f491727331dedf83e39246", "committedDate": "2020-12-16T14:09:33Z", "message": "GEM-3111: Initial attempt at the fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b988d39b048ef05524ae4d815dec4856d3c44e", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/28b988d39b048ef05524ae4d815dec4856d3c44e", "committedDate": "2020-12-16T19:58:48Z", "message": "Some adjustments to the initial implementation\n\n- This now relies on the principal being available in the\n  FunctionContext.\n- PDX objects are passed directly to the post-processor thus avoiding\n  any possible serialization issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8f23bc72f33e4b5a0f87c4cc99b56f09829e5c9", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/f8f23bc72f33e4b5a0f87c4cc99b56f09829e5c9", "committedDate": "2020-12-16T23:13:03Z", "message": "Fix failing test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjg0ODcx", "url": "https://github.com/apache/geode/pull/5858#pullrequestreview-561284871", "createdAt": "2021-01-04T19:30:43Z", "commit": {"oid": "f8f23bc72f33e4b5a0f87c4cc99b56f09829e5c9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTozMDo0M1rOIN-M1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTozMDo0M1rOIN-M1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUyMTQ5NQ==", "bodyText": "I'm a little concerned that value here might be a CachedDeserializable in some cases. I think this whole function and PageEntry class are designed to try to pass the value back to the user without deserializing it if it can.\nHowever I can't think of a case that you didn't test already, so I guess it's doing the right thing.", "url": "https://github.com/apache/geode/pull/5858#discussion_r551521495", "createdAt": "2021-01-04T19:30:43Z", "author": {"login": "upthewaterspout"}, "path": "geode-lucene/src/main/java/org/apache/geode/cache/lucene/internal/results/LuceneGetPageFunction.java", "diffHunk": "@@ -65,15 +70,19 @@ public void execute(FunctionContext context) {\n     }\n   }\n \n-  protected PageEntry getEntry(final Region region, final Object key) {\n+  protected PageEntry getEntry(final Region region, final Object key,\n+      SecurityService securityService, Object principal) {\n     final EntrySnapshot entry = (EntrySnapshot) region.getEntry(key);\n     if (entry == null) {\n       return null;\n     }\n \n-    final Object value = entry.getRegionEntry().getValue(null);\n+    Object value = entry.getRegionEntry().getValue(null);\n     if (value == null || Token.isInvalidOrRemoved(value)) {\n       return null;\n+    } else if (securityService.needPostProcess()) {\n+      value = securityService.postProcess(principal, region.getFullPath(), key, entry.getValue(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8f23bc72f33e4b5a0f87c4cc99b56f09829e5c9"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4280, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}