{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MjY2MDc4", "number": 4798, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDo1MDoxOVrODntnkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDo1MDoxOVrODntnkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTY4NDY3OnYy", "diffSide": "RIGHT", "path": "geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/ServerCQImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNDo1MDoxOVrOF13jog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDozMDoyMFrOF2tvNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyOTA5MA==", "bodyText": "Not for this diff, but it would be nice to have both cache types set initialized at the same place \ud83e\udd37\u200d\u2642", "url": "https://github.com/apache/geode/pull/4798#discussion_r392029090", "createdAt": "2020-03-13T04:50:19Z", "author": {"login": "jhuynh1"}, "path": "geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/ServerCQImpl.java", "diffHunk": "@@ -232,17 +218,17 @@ public void registerCq(ClientProxyMembershipID p_clientProxyId, CacheClientNotif\n \n     // Initialize CQ results (key) cache.\n     if (CqServiceProvider.MAINTAIN_KEYS) {\n-      this.cqResultKeys = new HashMap<>();\n       // Currently the CQ Result keys are not cached for the Partitioned\n       // Regions. Supporting this with PR needs more work like forcing\n       // query execution on primary buckets only; and handling the bucket\n       // re-balancing. Once this is added remove the check with PR region.\n       // Only the events which are seen during event processing is\n       // added to the results cache (not from the CQ Results).\n       if (this.isPR) {\n-        this.setCqResultsCacheInitialized();\n+        serverCQCache = new ServerCQCachePartitionRegionImpl();\n+        setCqResultsCacheInitialized();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f4074c065c7e64fc26b9a223220f1cf288b81e2"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkxNjc5MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/geode/pull/4798#discussion_r392916791", "createdAt": "2020-03-16T10:30:20Z", "author": {"login": "jujoramos"}, "path": "geode-cq/src/main/java/org/apache/geode/cache/query/cq/internal/ServerCQImpl.java", "diffHunk": "@@ -232,17 +218,17 @@ public void registerCq(ClientProxyMembershipID p_clientProxyId, CacheClientNotif\n \n     // Initialize CQ results (key) cache.\n     if (CqServiceProvider.MAINTAIN_KEYS) {\n-      this.cqResultKeys = new HashMap<>();\n       // Currently the CQ Result keys are not cached for the Partitioned\n       // Regions. Supporting this with PR needs more work like forcing\n       // query execution on primary buckets only; and handling the bucket\n       // re-balancing. Once this is added remove the check with PR region.\n       // Only the events which are seen during event processing is\n       // added to the results cache (not from the CQ Results).\n       if (this.isPR) {\n-        this.setCqResultsCacheInitialized();\n+        serverCQCache = new ServerCQCachePartitionRegionImpl();\n+        setCqResultsCacheInitialized();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyOTA5MA=="}, "originalCommit": {"oid": "8f4074c065c7e64fc26b9a223220f1cf288b81e2"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4358, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}