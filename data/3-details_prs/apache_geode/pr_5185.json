{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjk5MjIz", "number": 5185, "title": "GEODE-8205: Feature flag unsupported Redis commands", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-29T19:56:38Z", "url": "https://github.com/apache/geode/pull/5185", "merged": true, "mergeCommit": {"oid": "2883e976c2dea72d92de1bd941f1ccd3fae45b9d"}, "closed": true, "closedAt": "2020-06-01T22:39:52Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmH9lCAH2gAyNDI1Mjk5MjIzOjY4MjAyNWJhMzM1NjUyMGY3NzBiMjNlNWIyMjYwYTlmYTViOTZkNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnGXvAgH2gAyNDI1Mjk5MjIzOjhmYmViMmQ5MDY4YTFjNGJhYmUzMGViNmEwNGVmMTQ2ZDcwYTFkMTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "682025ba3356520f770b23e5b2260a9fa5b96d64", "author": {"user": {"login": "jhutchison", "name": "John Hutchison"}}, "url": "https://github.com/apache/geode/commit/682025ba3356520f770b23e5b2260a9fa5b96d64", "committedDate": "2020-05-29T19:51:48Z", "message": "GEODE-8205: Feature flag unsupported Redis commands\n\n- In order to enable unsupported Redis commands, set the Java\n  system parameter `enable-unsupported-redis-commands=true`.\n- The list of un/supported commands can be seen in `RedisCommandType`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/e23f10e4d161709f3ea9bed28e82d56352add376", "committedDate": "2020-05-29T19:51:48Z", "message": "Introduce RedisClusterStartupRule\n\nRemoves boiler plate code for starting a Redis server. By default starts\non an ephemeral port.\n- Expose getRedisPort()\n- Expose setEnableUnsupported()\n\nAuthored-by: Jens Deppe <jdeppe@vmware.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjY1NTM3", "url": "https://github.com/apache/geode/pull/5185#pullrequestreview-421265537", "createdAt": "2020-05-29T20:25:40Z", "commit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyNTo0MFrOGcrCUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozODoxOFrOGcrWyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxODQxOQ==", "bodyText": "Should this SHUTDOWN command code be moved to after we check of unsupported commands are allowed? I think SHUTDOWN is unsupported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432718419", "createdAt": "2020-05-29T20:25:40Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -196,22 +197,26 @@ public void channelInactive(ChannelHandlerContext ctx) {\n \n   private void executeCommand(ChannelHandlerContext ctx, Command command) throws Exception {\n     RedisResponse response;\n-    if (isAuthenticated) {\n-      if (command.isOfType(RedisCommandType.SHUTDOWN)) {\n-        this.server.shutdown();\n-        return;\n-      }\n \n-      response = command.execute(this);\n+    if (command.isOfType(RedisCommandType.SHUTDOWN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDU4Mg==", "bodyText": "PERSIST should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720582", "createdAt": "2020-05-29T20:30:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDczMA==", "bodyText": "PTTL should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720730", "createdAt": "2020-05-29T20:31:09Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDgxNA==", "bodyText": "TTL should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720814", "createdAt": "2020-05-29T20:31:21Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),\n+  SCAN(new ScanExecutor(), false),\n+  TTL(new TTLExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDg5Mg==", "bodyText": "TYPE should be supported", "url": "https://github.com/apache/geode/pull/5185#discussion_r432720892", "createdAt": "2020-05-29T20:31:34Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),\n+  PERSIST(new PersistExecutor(), false),\n+  PTTL(new PTTLExecutor(), false),\n+  SCAN(new ScanExecutor(), false),\n+  TTL(new TTLExecutor(), false),\n+  TYPE(new TypeExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMTY1OA==", "bodyText": "Since we support FLUSHALL and FLUSHDB uses the FlushAllExecutor should we support it?", "url": "https://github.com/apache/geode/pull/5185#discussion_r432721658", "createdAt": "2020-05-29T20:33:24Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -107,132 +107,161 @@\n  */\n public enum RedisCommandType {\n \n+  /***************************************\n+   *** Supported Commands ***\n+   ***************************************/\n+\n+  /*************** Keys ******************/\n+\n+  AUTH(new AuthExecutor(), true),\n+  DEL(new DelExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXISTS(new ExistsExecutor(), true, new MinimumParameterRequirements(2)),\n+  EXPIRE(new ExpireExecutor(), true),\n+  EXPIREAT(new ExpireAtExecutor(), true),\n+  FLUSHALL(new FlushAllExecutor(), true),\n+  KEYS(new KeysExecutor(), true),\n+  PEXPIRE(new PExpireExecutor(), true),\n+  PEXPIREAT(new PExpireAtExecutor(), true),\n+  RENAME(new RenameExecutor(), true),\n+\n+  /************* Strings *****************/\n+\n+  APPEND(new AppendExecutor(), true, new ExactParameterRequirements(3)),\n+  GET(new GetExecutor(), true, new ExactParameterRequirements(2)),\n+  SET(new SetExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /************* Hashes *****************/\n+\n+  HGETALL(new HGetAllExecutor(), true, new ExactParameterRequirements(2)),\n+  HMSET(new HMSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+  HSET(new HSetExecutor(), true,\n+      new MinimumParameterRequirements(4).and(new EvenParameterRequirements())),\n+\n+  /************* Sets *****************/\n+\n+  SADD(new SAddExecutor(), true, new MinimumParameterRequirements(3)),\n+  SMEMBERS(new SMembersExecutor(), true, new ExactParameterRequirements(2)),\n+  SREM(new SRemExecutor(), true, new MinimumParameterRequirements(3)),\n+\n+  /********** Publish Subscribe **********/\n+\n+  SUBSCRIBE(new SubscribeExecutor(), true),\n+  PUBLISH(new PublishExecutor(), true),\n+  UNSUBSCRIBE(new UnsubscribeExecutor(), true),\n+  PSUBSCRIBE(new PsubscribeExecutor(), true),\n+  PUNSUBSCRIBE(new PunsubscribeExecutor(), true),\n+\n+  /*************** Server ****************/\n+\n+  PING(new PingExecutor(), true),\n+  QUIT(new QuitExecutor(), true),\n+  UNKNOWN(new UnknownExecutor(), true),\n+\n+\n+  /***************************************\n+   *** Unsupported Commands ***\n+   ***************************************/\n+\n   /***************************************\n    *************** Keys ******************\n    ***************************************/\n \n-  AUTH(new AuthExecutor()),\n-  DEL(new DelExecutor(), new MinimumParameterRequirements(2)),\n-  EXISTS(new ExistsExecutor(), new MinimumParameterRequirements(2)),\n-  EXPIRE(new ExpireExecutor()),\n-  EXPIREAT(new ExpireAtExecutor()),\n-  FLUSHALL(new FlushAllExecutor()),\n-  FLUSHDB(new FlushAllExecutor()),\n-  KEYS(new KeysExecutor()),\n-  PERSIST(new PersistExecutor()),\n-  PEXPIRE(new PExpireExecutor()),\n-  PEXPIREAT(new PExpireAtExecutor()),\n-  PTTL(new PTTLExecutor()),\n-  RENAME(new RenameExecutor()),\n-  SCAN(new ScanExecutor()),\n-  TTL(new TTLExecutor()),\n-  TYPE(new TypeExecutor()),\n+  FLUSHDB(new FlushAllExecutor(), false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMzY1Nw==", "bodyText": "This seems painful but might be okay. I just don't like that we have to update two places (the enum and these lists) anytime we change what we support. But it probably will not happen that often.", "url": "https://github.com/apache/geode/pull/5185#discussion_r432723657", "createdAt": "2020-05-29T20:38:18Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/SupportedCommandsJUnitTest.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Test;\n+\n+public class SupportedCommandsJUnitTest {\n+\n+  private final String[] supportedCommands = new String[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e23f10e4d161709f3ea9bed28e82d56352add376"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "189ed24070f1d628d6a37f0a586243db0cabc0d9", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/189ed24070f1d628d6a37f0a586243db0cabc0d9", "committedDate": "2020-05-29T21:55:29Z", "message": "Review updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzE5MTk5", "url": "https://github.com/apache/geode/pull/5185#pullrequestreview-421319199", "createdAt": "2020-05-29T21:58:04Z", "commit": {"oid": "189ed24070f1d628d6a37f0a586243db0cabc0d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fbeb2d9068a1c4babe30eb6a04ef146d70a1d12", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/8fbeb2d9068a1c4babe30eb6a04ef146d70a1d12", "committedDate": "2020-06-01T20:34:29Z", "message": "FLUSHALL and FLUSHDB are now unsupported"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4393, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}