{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTA1NTIz", "number": 4601, "title": "GEODE-7715: Introduce Transport and Config interfaces to ClusterManagementServiceBuilder", "bodyText": "This introduces several new interfaces to the ClusterManagementService. These are:\n\nClusterManagmentServiceTransport which represents the message exchange between client and endpoint.\nClusterManagementServiceConnectionConfig which is a data object and represents various properties required to establish a connection.\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-01-17T00:10:35Z", "url": "https://github.com/apache/geode/pull/4601", "merged": true, "mergeCommit": {"oid": "efe5f70cf7641e42a9892cf9a949e46f9a989a5e"}, "closed": true, "closedAt": "2020-01-21T23:31:36Z", "author": {"login": "yozaner1324"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7DRbqgH2gAyMzYzOTA1NTIzOjI4MDVkOTA4NGZhYzY1MmFiOTE5YTU2YWQ5OWUyMWRlYzUxYmRlOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8nyM7gFqTM0NjE5Mzk1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2805d9084fac652ab919a56ad99e21dec51bde8c", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/2805d9084fac652ab919a56ad99e21dec51bde8c", "committedDate": "2020-01-17T00:05:13Z", "message": "Refactor ClusterManagementService and ClusterManagementServiceBuilder to allow injecting a custom transport."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49856f6409cb9fd7dc64598bdef7f41e38a76cf3", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/49856f6409cb9fd7dc64598bdef7f41e38a76cf3", "committedDate": "2020-01-17T00:09:18Z", "message": "Updated  tests, comments, and imports from ClusterManagementService refactor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/90880b1989dbdb5095fdda1f8337a1f123287d51", "committedDate": "2020-01-17T00:50:27Z", "message": "Update assembly_contents and serializables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjY1MTc1", "url": "https://github.com/apache/geode/pull/4601#pullrequestreview-344665175", "createdAt": "2020-01-17T15:44:16Z", "commit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTo0NDoxN1rOFe9Byg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTo0NDoxN1rOFe9Byg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwMTQ4Mg==", "bodyText": "this pretty much holds the same stuff as BasicClusterManagementServiceConnectionConfig. Is there anyway to make this delegate to that or inherit that?", "url": "https://github.com/apache/geode/pull/4601#discussion_r368001482", "createdAt": "2020-01-17T15:44:17Z", "author": {"login": "jinmeiliao"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/GeodeClusterManagementServiceConnectionConfig.java", "diffHunk": "@@ -44,62 +48,105 @@\n import org.apache.geode.internal.net.SocketCreatorFactory;\n import org.apache.geode.internal.security.SecurableCommunicationChannel;\n import org.apache.geode.logging.internal.log4j.api.LogService;\n-import org.apache.geode.management.api.ClusterManagementService;\n-import org.apache.geode.management.builder.ClusterManagementServiceBuilder;\n-import org.apache.geode.management.internal.PlainClusterManagementServiceBuilder;\n+import org.apache.geode.management.api.ClusterManagementServiceConnectionConfig;\n+import org.apache.geode.management.client.ClusterManagementServiceBuilder;\n import org.apache.geode.management.internal.SSLUtil;\n import org.apache.geode.management.internal.configuration.messages.ClusterManagementServiceInfo;\n import org.apache.geode.management.internal.configuration.messages.ClusterManagementServiceInfoRequest;\n import org.apache.geode.management.internal.functions.GetMemberInformationFunction;\n import org.apache.geode.management.runtime.MemberInformation;\n import org.apache.geode.security.AuthInitialize;\n \n+/**\n+ * Concrete implementation of {@link ClusterManagementServiceConnectionConfig} which can be used\n+ * to derive most (if not all) of the connection properties from an existing {@link Cache} or\n+ * {@link ClientCache}.\n+ *\n+ * @see ClusterManagementServiceBuilder\n+ */\n+@Experimental\n+public class GeodeClusterManagementServiceConnectionConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzI4MTI5", "url": "https://github.com/apache/geode/pull/4601#pullrequestreview-344728129", "createdAt": "2020-01-17T17:23:59Z", "commit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNzoyNDowMFrOFe_9IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNzoyNDowMFrOFe_9IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA0OTQ0MQ==", "bodyText": "shouldn't this be just \"build()\"?", "url": "https://github.com/apache/geode/pull/4601#discussion_r368049441", "createdAt": "2020-01-17T17:24:00Z", "author": {"login": "jinmeiliao"}, "path": "geode-assembly/src/acceptanceTest/resources/ManagementClientCreateRegion.java", "diffHunk": "@@ -31,14 +31,15 @@ public static void main(String[] args) throws Exception {\n     if (useSsl) {\n       // The default SSLContext will pull in all necessary javax.net.ssl properties\n       cms =\n-          ClusterManagementServiceBuilder.buildWithHostAddress()\n-              .setHostAddress(\"localhost\", httpPort)\n-              .setSslContext(SSLContext.getDefault()).build();\n+          new ClusterManagementServiceBuilder().setConnectionConfig(\n+              new BasicClusterManagementServiceConnectionConfig(\"localhost\", port)\n+                  .setSslContext(SSLContext.getDefault()))\n+              .buildWithHostAddress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzI5NzM4", "url": "https://github.com/apache/geode/pull/4601#pullrequestreview-344729738", "createdAt": "2020-01-17T17:27:04Z", "commit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNzoyNzowNFrOFfAB7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNzoyNzowNFrOFfAB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA1MDY3MQ==", "bodyText": "\"BasicClusterManagementServiceConnectionConfig\" seems like an awful long name? Any thing shorter and sweeter? Preferably not something \"Basic\" :-).\nMaybe just ConnectionConfig and CacheConnectionConfig", "url": "https://github.com/apache/geode/pull/4601#discussion_r368050671", "createdAt": "2020-01-17T17:27:04Z", "author": {"login": "jinmeiliao"}, "path": "geode-assembly/src/distributedTest/java/org/apache/geode/management/internal/rest/DeployToMultiGroupDUnitTest.java", "diffHunk": "@@ -64,10 +65,10 @@ public static void beforeClass() throws Exception {\n     server1 = cluster.startServerVM(1, \"group1\", locator.getPort());\n     server2 = cluster.startServerVM(2, \"group2\", locator.getPort());\n \n-    client =\n-        ClusterManagementServiceBuilder.buildWithHostAddress()\n-            .setHostAddress(\"localhost\", locator.getHttpPort())\n-            .build();\n+    client = new ClusterManagementServiceBuilder().setConnectionConfig(\n+        new BasicClusterManagementServiceConnectionConfig(\"localhost\", locator.getHttpPort()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2749265a401a58508103eaf4a5f99b1a6e8c5ab6", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/2749265a401a58508103eaf4a5f99b1a6e8c5ab6", "committedDate": "2020-01-17T18:18:32Z", "message": "Address feedback and fix failing test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzUzMTgz", "url": "https://github.com/apache/geode/pull/4601#pullrequestreview-344753183", "createdAt": "2020-01-17T18:12:28Z", "commit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODoxMjoyOVrOFfBHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxODoxNjo1OFrOFfBOXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA2ODQxMQ==", "bodyText": "Is there a strong reason not to use Class<? extends ClusterManagementListOperationsResult<V> for responseType? If not, please use that.", "url": "https://github.com/apache/geode/pull/4601#discussion_r368068411", "createdAt": "2020-01-17T18:12:29Z", "author": {"login": "demery-pivotal"}, "path": "geode-management/src/main/java/org/apache/geode/management/api/ClusterManagementServiceTransport.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.management.api;\n+\n+import org.apache.geode.annotations.Experimental;\n+import org.apache.geode.management.configuration.AbstractConfiguration;\n+import org.apache.geode.management.runtime.OperationResult;\n+import org.apache.geode.management.runtime.RuntimeInfo;\n+\n+/**\n+ * Interface which abstracts the transport between the CMS client and the endpoint. Currently only\n+ * an http implementation exists. However it does allow for different implementations; perhaps\n+ * something that doesn't use {@code RestTemplate}. This interface supports the operations from\n+ * {@link ClusterManagementService}.\n+ */\n+@Experimental\n+public interface ClusterManagementServiceTransport {\n+\n+  /**\n+   * Submit a message with a specific command. This supports the\n+   * {@link ClusterManagementService#create}\n+   * and {@link ClusterManagementService#delete} commands.\n+   *\n+   * @param configMessage configuration object\n+   * @param command the command to use\n+   * @param responseType the expected response class\n+   * @param <T> configuration object which extends {@link AbstractConfiguration}\n+   * @return {@link ClusterManagementRealizationResult}\n+   */\n+  <T extends AbstractConfiguration<?>> ClusterManagementRealizationResult submitMessage(\n+      T configMessage, CommandType command,\n+      Class<? extends ClusterManagementRealizationResult> responseType);\n+\n+  /**\n+   * Submit a message with a specific command which returns a list result. This supports the\n+   * {@link ClusterManagementService#list(AbstractConfiguration)} command.\n+   *\n+   * @param configMessage configuration object\n+   * @param responseType the expected response class\n+   * @param <T> configuration object which extends {@link AbstractConfiguration}\n+   * @return {@link ClusterManagementListResult}\n+   */\n+  <T extends AbstractConfiguration<R>, R extends RuntimeInfo> ClusterManagementListResult<T, R> submitMessageForList(\n+      T configMessage, Class<? extends ClusterManagementListResult> responseType);\n+\n+  /**\n+   * Submit a message with a specific command which returns a single result. This supports the\n+   * {@link ClusterManagementService#get} command.\n+   *\n+   * @param configMessage configuration object\n+   * @param responseType the expected response class\n+   * @param <T> configuration object which extends {@link AbstractConfiguration}\n+   * @return {@link ClusterManagementGetResult}\n+   */\n+  <T extends AbstractConfiguration<R>, R extends RuntimeInfo> ClusterManagementGetResult<T, R> submitMessageForGet(\n+      T configMessage, Class<? extends ClusterManagementGetResult> responseType);\n+\n+  /**\n+   * Submit a message for a specific command which returns a list result of operations in progress.\n+   * This supports the {@link ClusterManagementService#list(ClusterManagementOperation)} command.\n+   *\n+   * @param responseType the expected response class\n+   * @param <A> operation of type {@link ClusterManagementOperation}\n+   * @return {@link ClusterManagementListResult}\n+   */\n+  <A extends ClusterManagementOperation<V>, V extends OperationResult> ClusterManagementListOperationsResult<V> submitMessageForListOperation(\n+      A opType, Class<? extends ClusterManagementListOperationsResult> responseType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA3MDIzOQ==", "bodyText": "These tests seem to verify only that the builder doesn't throw. Surely there's something more test here.", "url": "https://github.com/apache/geode/pull/4601#discussion_r368070239", "createdAt": "2020-01-17T18:16:58Z", "author": {"login": "demery-pivotal"}, "path": "geode-management/src/test/java/org/apache/geode/management/client/ClusterManagementServiceBuilderTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management.client;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.springframework.web.client.RestTemplate;\n+\n+import org.apache.geode.management.api.BasicClusterManagementServiceConnectionConfig;\n+import org.apache.geode.management.api.ClusterManagementServiceConnectionConfig;\n+import org.apache.geode.management.api.RestTemplateClusterManagementServiceTransport;\n+\n+public class ClusterManagementServiceBuilderTest {\n+\n+  private static ClusterManagementServiceConnectionConfig connectionConfig;\n+\n+  @BeforeClass\n+  public static void setup() {\n+    connectionConfig = new BasicClusterManagementServiceConnectionConfig(\"localhost\", 7777);\n+  }\n+\n+  @Test\n+  public void buildWithTransportOnlyHavingConnectionConfig() {\n+    new ClusterManagementServiceBuilder().setTransport(\n+        new RestTemplateClusterManagementServiceTransport(connectionConfig)).build();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90880b1989dbdb5095fdda1f8337a1f123287d51"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66811bac80def6ac609fea0b30453bb2ded18435", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/66811bac80def6ac609fea0b30453bb2ded18435", "committedDate": "2020-01-17T20:07:30Z", "message": "Address additional feedback and update assembly contents."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e689b7ffcccfe983e6ce83866c4fd65588baae", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/d0e689b7ffcccfe983e6ce83866c4fd65588baae", "committedDate": "2020-01-18T00:20:47Z", "message": "Add followRedirects to ConnectionConfig and add more tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01193e5d8c74bc70a8e49e08c73a8890ec27c146", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/01193e5d8c74bc70a8e49e08c73a8890ec27c146", "committedDate": "2020-01-18T00:47:49Z", "message": "Update ClusterManagementServiceBuilderTest.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTkzOTU5", "url": "https://github.com/apache/geode/pull/4601#pullrequestreview-346193959", "createdAt": "2020-01-21T21:11:31Z", "commit": {"oid": "01193e5d8c74bc70a8e49e08c73a8890ec27c146"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}