{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDc0NDQ2", "number": 5085, "title": "GEODE-8090: implement function/delta for redis Hash ops", "bodyText": "Only a few of the hash ops use function/delta. But all the others also work with the new data model.\nThe hash ops that use function delta now are:\nHDEL\nDEL\nHSET\nHMSET\nHSETNX\nHGETALL\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-08T23:31:38Z", "url": "https://github.com/apache/geode/pull/5085", "merged": true, "mergeCommit": {"oid": "904a08a6bf64d9ddca6c3f750ffab1e50d6dac14"}, "closed": true, "closedAt": "2020-05-12T17:53:20Z", "author": {"login": "dschneider-pivotal"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgTxqbAH2gAyNDE1NDc0NDQ2OjhlZjYxODFjNjIzYjZhZDVhNTI4ZjkwZDYxYjE5YmIxMTNmNThkNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgkCdwAFqTQxMDAyNDA2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ef6181c623b6ad5a528f90d61b19bb113f58d6d", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/8ef6181c623b6ad5a528f90d61b19bb113f58d6d", "committedDate": "2020-05-11T18:14:06Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c5560396ef94de02a1bdf5e1e3bbe591fdfaaea", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/0c5560396ef94de02a1bdf5e1e3bbe591fdfaaea", "committedDate": "2020-05-11T18:15:31Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea59f32cf97d970bb077d521509d3bac785cfdde", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/ea59f32cf97d970bb077d521509d3bac785cfdde", "committedDate": "2020-05-11T18:16:04Z", "message": "wip: executors for hash del, hdel, hset, hmset, and hgetall now use functions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7773aec28a5c5fe3ac80212a830939fe52c2ff8", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/b7773aec28a5c5fe3ac80212a830939fe52c2ff8", "committedDate": "2020-05-11T18:16:04Z", "message": "implemented basic ops in RedishHash. Deltas are now implemented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a9e50e0876dc348b5c6b2eb59a49c7acef4242a", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/8a9e50e0876dc348b5c6b2eb59a49c7acef4242a", "committedDate": "2020-05-11T18:17:52Z", "message": "all hash commands now deal with RedisHash instead of a Map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eec973ee3be706a86f4a94c6a1b46d384a398f0", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/0eec973ee3be706a86f4a94c6a1b46d384a398f0", "committedDate": "2020-05-11T18:20:03Z", "message": "HashesIntegrationTest now passes.\nBuilds cleanly. Time to create a PR."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b", "committedDate": "2020-05-11T18:20:51Z", "message": "fixed serialization issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70532a24dc1cfadfd1797207a5ae605d3ed6b72a", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/70532a24dc1cfadfd1797207a5ae605d3ed6b72a", "committedDate": "2020-05-11T18:08:10Z", "message": "spotless and fixed unresolved conflicts"}, "afterCommit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b", "committedDate": "2020-05-11T18:20:51Z", "message": "fixed serialization issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTExODIx", "url": "https://github.com/apache/geode/pull/5085#pullrequestreview-409511821", "createdAt": "2020-05-11T20:37:56Z", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNzo1NlrOGTsdzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNzo1NlrOGTsdzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwNDY1Mw==", "bodyText": "can we deprecate this method?", "url": "https://github.com/apache/geode/pull/5085#discussion_r423304653", "createdAt": "2020-05-11T20:37:56Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/HashExecutor.java", "diffHunk": "@@ -42,14 +41,14 @@\n    * @param key the region hash key region:<key>\n    * @return the map data\n    */\n-  protected Map<ByteArrayWrapper, ByteArrayWrapper> getMap(ExecutionHandlerContext context,\n+  protected RedisHash getMap(ExecutionHandlerContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTE1ODEz", "url": "https://github.com/apache/geode/pull/5085#pullrequestreview-409515813", "createdAt": "2020-05-11T20:43:54Z", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDo0Mzo1NVrOGTsqEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDo0Mzo1NVrOGTsqEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwNzc5NQ==", "bodyText": "i think it would be nice if hgetall returned a collection of enttries.  That has more semantic meaning, but I understand that the caller would end up just flattening it to send it over the wire.", "url": "https://github.com/apache/geode/pull/5085#discussion_r423307795", "createdAt": "2020-05-11T20:43:55Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/RedisHashCommands.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.hash;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+\n+public interface RedisHashCommands {\n+  int hset(ByteArrayWrapper key, List<ByteArrayWrapper> fieldsToSet, boolean NX);\n+\n+  int hdel(ByteArrayWrapper key, List<ByteArrayWrapper> fieldsToRemove);\n+\n+  // TODO: refactor this onto something like RedisKeyCommands\n+  boolean del(ByteArrayWrapper key);\n+\n+  Collection<ByteArrayWrapper> hgetall(ByteArrayWrapper key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTMxMTYz", "url": "https://github.com/apache/geode/pull/5085#pullrequestreview-409531163", "createdAt": "2020-05-11T21:06:49Z", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNjo1MFrOGTtZjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNjo1MFrOGTtZjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxOTk0OA==", "bodyText": "this class is going to grow with each new command added.  Is there any way we can break this up?", "url": "https://github.com/apache/geode/pull/5085#discussion_r423319948", "createdAt": "2020-05-11T21:06:50Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "diffHunk": "@@ -16,26 +16,53 @@\n \n package org.apache.geode.redis.internal.executor;\n \n+import static org.apache.geode.redis.internal.RedisCommandType.HSET;\n+\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.regex.Pattern;\n \n import org.apache.geode.cache.Region;\n import org.apache.geode.cache.execute.Function;\n import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.cache.execute.ResultCollector;\n import org.apache.geode.cache.execute.ResultSender;\n import org.apache.geode.internal.cache.execute.RegionFunctionContextImpl;\n import org.apache.geode.redis.internal.ByteArrayWrapper;\n import org.apache.geode.redis.internal.RedisCommandType;\n+import org.apache.geode.redis.internal.RedisDataType;\n+import org.apache.geode.redis.internal.executor.hash.RedisHash;\n import org.apache.geode.redis.internal.executor.set.RedisSet;\n import org.apache.geode.redis.internal.executor.set.StripedExecutor;\n+import org.apache.geode.redis.internal.executor.set.SynchronizedStripedExecutor;\n \n public class CommandFunction implements Function<Object[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTcyNjgy", "url": "https://github.com/apache/geode/pull/5085#pullrequestreview-409572682", "createdAt": "2020-05-11T22:22:41Z", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMDI0MDY1", "url": "https://github.com/apache/geode/pull/5085#pullrequestreview-410024065", "createdAt": "2020-05-12T13:10:56Z", "commit": {"oid": "2a9ffe9a7ca8dfa38bd18866f7e676b2fda3405b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4506, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}