{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDUxODA4", "number": 5081, "title": "GEODE-8043 - Created JBossModuleService and implemented loadModule.", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-08T22:00:42Z", "url": "https://github.com/apache/geode/pull/5081", "merged": true, "mergeCommit": {"oid": "a2ec73c6c5d24f4fc666eb7e9cdaf51ee74b7683"}, "closed": true, "closedAt": "2020-05-19T22:01:13Z", "author": {"login": "yozaner1324"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci3OAVgBqjMzNTI3NTExMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci70WOgFqTQxNDg1NDgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e388fbcae5f0ca2026197714df7883d8485cc266", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/e388fbcae5f0ca2026197714df7883d8485cc266", "committedDate": "2020-05-18T21:09:53Z", "message": "GEODE-8043 - Update expected jars, assembly contents, and dependency classapth."}, "afterCommit": {"oid": "aa91bae9b12e1890bc678dec51bd1844226c78d5", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/aa91bae9b12e1890bc678dec51bd1844226c78d5", "committedDate": "2020-05-19T16:38:33Z", "message": "GEODE-8043 - Update return type of loadService."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa91bae9b12e1890bc678dec51bd1844226c78d5", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/aa91bae9b12e1890bc678dec51bd1844226c78d5", "committedDate": "2020-05-19T16:38:33Z", "message": "GEODE-8043 - Update return type of loadService."}, "afterCommit": {"oid": "5641421a53db27ca03933109447815f1babb9caa", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/5641421a53db27ca03933109447815f1babb9caa", "committedDate": "2020-05-19T16:53:12Z", "message": "GEODE-8043 - Create JBossModuleService and implement loadModule."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0Njk5ODU0", "url": "https://github.com/apache/geode/pull/5081#pullrequestreview-414699854", "createdAt": "2020-05-19T18:08:08Z", "commit": {"oid": "5641421a53db27ca03933109447815f1babb9caa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowODowOFrOGXsjMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODoxMjowN1rOGXssgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMDMzOA==", "bodyText": "why are these showing up here?", "url": "https://github.com/apache/geode/pull/5081#discussion_r427500338", "createdAt": "2020-05-19T18:08:08Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-assembly/src/integrationTest/resources/expected_jars.txt", "diffHunk": "@@ -75,6 +76,8 @@ lucene-queries\n lucene-queryparser\n mapstruct\n micrometer-core\n+module1.jar\n+module2.jar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5641421a53db27ca03933109447815f1babb9caa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMTY0Nw==", "bodyText": "I don't think it should exposed outside of the original module", "url": "https://github.com/apache/geode/pull/5081#discussion_r427501647", "createdAt": "2020-05-19T18:10:17Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-assembly/build.gradle", "diffHunk": "@@ -577,6 +579,9 @@ distributions {\n         from {project(':geode-core').tasks.named('raJar')}\n         from {project(':geode-core').tasks.named('jcaJar')}\n \n+        from project(':geode-modules').tasks.named('module1Jar')\n+        from project(':geode-modules').tasks.named('module2Jar')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5641421a53db27ca03933109447815f1babb9caa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwMjcyMg==", "bodyText": "possibly we need to remove these add them into their respective JIRA", "url": "https://github.com/apache/geode/pull/5081#discussion_r427502722", "createdAt": "2020-05-19T18:12:07Z", "author": {"login": "kohlmu-pivotal"}, "path": "geode-modules/src/main/java/org/apache/geode/services/module/impl/JBossModuleService.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.services.module.impl;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.jar.JarFile;\n+\n+import org.apache.logging.log4j.Logger;\n+import org.jboss.modules.LocalDependencySpecBuilder;\n+import org.jboss.modules.Module;\n+import org.jboss.modules.ModuleDependencySpecBuilder;\n+import org.jboss.modules.ModuleLoadException;\n+import org.jboss.modules.ModuleSpec;\n+import org.jboss.modules.ResourceLoader;\n+import org.jboss.modules.ResourceLoaderSpec;\n+import org.jboss.modules.ResourceLoaders;\n+import org.jboss.modules.Version;\n+\n+import org.apache.geode.annotations.Experimental;\n+import org.apache.geode.logging.internal.log4j.api.LogService;\n+import org.apache.geode.services.module.ModuleDescriptor;\n+import org.apache.geode.services.module.ModuleService;\n+\n+/**\n+ * Implementation of {@link ModuleService} using JBoss-Modules.\n+ */\n+@Experimental\n+public class JBossModuleService implements ModuleService {\n+\n+  private final Map<String, Module> modules = new HashMap<>();\n+\n+  private final GeodeModuleLoader moduleLoader = new GeodeModuleLoader();\n+\n+  private final Logger logger;\n+\n+  public JBossModuleService() {\n+    this(LogService.getLogger());\n+  }\n+\n+  public JBossModuleService(Logger logger) {\n+    this.logger = logger;\n+  }\n+\n+  public Module getModule(String name) {\n+    return modules.get(name);\n+  }\n+\n+  @Override\n+  public boolean loadModule(ModuleDescriptor moduleDescriptor) {\n+    logger.debug(String.format(\"Beginning to load module %s\", moduleDescriptor.getVersionedName()));\n+\n+    if (modules.containsKey(moduleDescriptor.getVersionedName())) {\n+      logger\n+          .warn(String.format(\"Module %s is already loaded.\", moduleDescriptor.getVersionedName()));\n+      return false;\n+    }\n+\n+    ModuleSpec.Builder builder = ModuleSpec.build(moduleDescriptor.getVersionedName());\n+    builder.setVersion(Version.parse(moduleDescriptor.getVersion()));\n+    builder.addDependency(new LocalDependencySpecBuilder()\n+        .setImportServices(true)\n+        .setExport(true)\n+        .build());\n+\n+    moduleDescriptor.getDependedOnModules().forEach(dependency -> {\n+      logger.debug(String.format(\"Adding dependency on module %s\", dependency));\n+      builder.addDependency(new ModuleDependencySpecBuilder()\n+          .setName(dependency)\n+          .build());\n+    });\n+\n+    try {\n+      for (String source : moduleDescriptor.getSources()) {\n+        logger.debug(String.format(\"Adding resource %s to module\", source));\n+        ResourceLoader resourceLoader =\n+            ResourceLoaders.createJarResourceLoader(new JarFile(source));\n+        builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(resourceLoader));\n+      }\n+    } catch (IOException e) {\n+      logger.error(e);\n+      return false;\n+    }\n+\n+    ModuleSpec moduleSpec = builder.create();\n+    moduleLoader.addModuleSpec(moduleSpec);\n+\n+    try {\n+      modules.put(moduleDescriptor.getVersionedName(),\n+          moduleLoader.loadModule(moduleSpec.getName()));\n+    } catch (ModuleLoadException e) {\n+      logger.error(e);\n+      return false;\n+    }\n+\n+    logger\n+        .debug(String.format(\"Module %s successfully loaded\", moduleDescriptor.getVersionedName()));\n+\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean unloadModule(String moduleName) {\n+    return false;\n+  }\n+\n+  @Override\n+  public <T> List<T> loadService(Class<T> service) {\n+    return null;\n+  }\n+\n+  @Override\n+  public <T> List<T> loadService(String serviceName) {\n+    return null;\n+  }\n+\n+  @Override\n+  public boolean unloadService(String serviceName) {\n+    return false;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5641421a53db27ca03933109447815f1babb9caa"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f43b312957ec4ee4137dd348cb92709bcb278b55", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/f43b312957ec4ee4137dd348cb92709bcb278b55", "committedDate": "2020-05-19T18:38:19Z", "message": "GEODE-8043 - Create JBossModuleService and implement loadModule."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5641421a53db27ca03933109447815f1babb9caa", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/5641421a53db27ca03933109447815f1babb9caa", "committedDate": "2020-05-19T16:53:12Z", "message": "GEODE-8043 - Create JBossModuleService and implement loadModule."}, "afterCommit": {"oid": "f43b312957ec4ee4137dd348cb92709bcb278b55", "author": {"user": {"login": "yozaner1324", "name": "Patrick Johnson"}}, "url": "https://github.com/apache/geode/commit/f43b312957ec4ee4137dd348cb92709bcb278b55", "committedDate": "2020-05-19T18:38:19Z", "message": "GEODE-8043 - Create JBossModuleService and implement loadModule."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODU0ODI5", "url": "https://github.com/apache/geode/pull/5081#pullrequestreview-414854829", "createdAt": "2020-05-19T22:01:05Z", "commit": {"oid": "f43b312957ec4ee4137dd348cb92709bcb278b55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4713, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}