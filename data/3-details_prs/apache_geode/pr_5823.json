{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjI4ODYy", "number": 5823, "title": "GEODE-8771: invalidate should acquire the lock before initIndex", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-12-08T18:07:16Z", "url": "https://github.com/apache/geode/pull/5823", "merged": true, "mergeCommit": {"oid": "fec54719ae6e0d753f6e50f901b3a25279c62740"}, "closed": true, "closedAt": "2020-12-11T17:24:00Z", "author": {"login": "jinmeiliao"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkOFQJgH2gAyNTM0NjI4ODYyOjY4NzljOGIwZWM4ZDVmZjMyZTQxNDU1Y2Y2MmRiNDlhMjc5ZTE2NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlLPlugFqTU1MDMxNzkzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6879c8b0ec8d5ff32e41455cf62db49a279e165f", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/6879c8b0ec8d5ff32e41455cf62db49a279e165f", "committedDate": "2020-12-08T18:02:55Z", "message": "GEODE-8771: invalidate should acquire the lock before initIndex"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTQ3MDU0", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-547547054", "createdAt": "2020-12-08T19:10:08Z", "commit": {"oid": "6879c8b0ec8d5ff32e41455cf62db49a279e165f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTQ4MDg1", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-547548085", "createdAt": "2020-12-08T19:11:35Z", "commit": {"oid": "6879c8b0ec8d5ff32e41455cf62db49a279e165f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToxMTozNVrOIBxx4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOToxMTozNVrOIBxx4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODczNTA3Mw==", "bodyText": "I would like a name that better describes the intention of the test. It looks as if the concurrent puts and invalidates are important. So maybe something like doesNotHangWhenClearedWithConcurrentPutsAndInvalidates().", "url": "https://github.com/apache/geode/pull/5823#discussion_r538735073", "createdAt": "2020-12-08T19:11:35Z", "author": {"login": "demery-pivotal"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRClearIntegrationTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.cache.query.partitioned;\n+\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.IntStream;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.EntryNotFoundException;\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.internal.cache.InternalCache;\n+import org.apache.geode.test.junit.rules.ExecutorServiceRule;\n+import org.apache.geode.test.junit.rules.ServerStarterRule;\n+\n+public class PRClearIntegrationTest {\n+\n+  @Rule\n+  public ServerStarterRule server = new ServerStarterRule().withAutoStart();\n+\n+  @Rule\n+  public ExecutorServiceRule executor = new ExecutorServiceRule();\n+\n+  @Test\n+  public void shouldNotHang() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6879c8b0ec8d5ff32e41455cf62db49a279e165f"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/593fde93d6c07f244f4fb45497051d9bd79c04c3", "committedDate": "2020-12-08T21:17:01Z", "message": "rename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NjcwODk2", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-547670896", "createdAt": "2020-12-08T22:04:23Z", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzI3MTg1", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-547727185", "createdAt": "2020-12-08T23:44:54Z", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzo0NDo1NFrOIB7hFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzo0NDo1NFrOIB7hFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5NDYxMg==", "bodyText": "I am not sure I understand why the code change here can fix the hang, and not causing a different type of hang. I do see the two-line comment above. But it does not answer my question. It would be helpful for the reviewers to understand it, if there is some explanation of root cause analysis and the fix in the pull request description or in the JIRA. It will also help for future code maintenance.", "url": "https://github.com/apache/geode/pull/5823#discussion_r538894612", "createdAt": "2020-12-08T23:44:54Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java", "diffHunk": "@@ -1282,14 +1282,18 @@ public boolean invalidate(EntryEventImpl event, boolean invokeCallbacks, boolean\n     DiskRegion dr = owner.getDiskRegion();\n     boolean ownerIsInitialized = owner.isInitialized();\n \n+    // lock before waitForIndexInit so that we should wait\n+    // till a concurrent clear to finish\n+    lockForCacheModification(owner, event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTYxOTE3", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-548561917", "createdAt": "2020-12-09T20:03:08Z", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDowMzowOFrOICnCEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDowMzowOFrOICnCEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwNzU2OA==", "bodyText": "Since you moved this up to be before \"waitForIndexInit\" is called you need to add a try/finally that started right after lockForCacheModification returns and the finally should be way down past the finally for the try that started right after \"lockWhenRegionIsInitializing\" returns. If you look at the finally for that try you will see it calls releaseCacheModificationLock. This needs to instead be called in your new finally block so that it corresponds to the lockForCacheModification call.\nIt should have probably been done this way already (two finally blocks; one that calls releaseCacheModificationLock and another that calls unlockWhenRegionIsInitializing) but it is needed now because waitForIndexInit can throw an exception because it calls checkCancelInProgress.", "url": "https://github.com/apache/geode/pull/5823#discussion_r539607568", "createdAt": "2020-12-09T20:03:08Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java", "diffHunk": "@@ -1282,14 +1282,18 @@ public boolean invalidate(EntryEventImpl event, boolean invokeCallbacks, boolean\n     DiskRegion dr = owner.getDiskRegion();\n     boolean ownerIsInitialized = owner.isInitialized();\n \n+    // lock before waitForIndexInit so that we should wait\n+    // till a concurrent clear to finish\n+    lockForCacheModification(owner, event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjA3NTYw", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-548607560", "createdAt": "2020-12-09T21:04:46Z", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjA5OTUy", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-548609952", "createdAt": "2020-12-09T21:08:06Z", "commit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTowODowNlrOICph0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTowODowNlrOICph0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0ODQ2Ng==", "bodyText": "Can we add some kind of validation to make sure put/invalidate and clear is performed as expected. By looking at region contents?", "url": "https://github.com/apache/geode/pull/5823#discussion_r539648466", "createdAt": "2020-12-09T21:08:06Z", "author": {"login": "agingade"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/cache/query/partitioned/PRClearIntegrationTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.cache.query.partitioned;\n+\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.IntStream;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.EntryNotFoundException;\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.internal.cache.InternalCache;\n+import org.apache.geode.test.junit.rules.ExecutorServiceRule;\n+import org.apache.geode.test.junit.rules.ServerStarterRule;\n+\n+public class PRClearIntegrationTest {\n+\n+  @Rule\n+  public ServerStarterRule server = new ServerStarterRule().withAutoStart();\n+\n+  @Rule\n+  public ExecutorServiceRule executor = new ExecutorServiceRule();\n+\n+  @Test\n+  public void doesNotHangWhenClearWithConcurrentPutsAndInvalidates() throws Exception {\n+    InternalCache cache = server.getCache();\n+    Region<Object, Object> region = server.createPartitionRegion(\"regionA\", f -> {\n+    }, f -> f.setTotalNumBuckets(1));\n+    cache.getQueryService().createIndex(\"indexA\", \"r\", \"/regionA r\");\n+    region.put(0, \"value0\");\n+\n+    CompletableFuture<Void> put = executor.runAsync(() -> {\n+      Thread.currentThread().setName(\"put-Thread\");\n+      IntStream.range(0, 10).forEach(i -> region.put(i, \"value\" + i));\n+    });\n+\n+    CompletableFuture<Void> invalidate = executor.runAsync(() -> {\n+      Thread.currentThread().setName(\"invalidate-Thread\");\n+      IntStream.range(0, 10).forEach(i -> {\n+        try {\n+          region.invalidate(i);\n+        } catch (EntryNotFoundException e) {\n+          // ignore\n+        }\n+      });\n+    });\n+\n+    CompletableFuture<Void> clear = executor.runAsync(() -> {\n+      Thread.currentThread().setName(\"Clear-Thread\");\n+      region.clear();\n+    });\n+\n+    put.get(5, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "593fde93d6c07f244f4fb45497051d9bd79c04c3"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a218b50ed33e6ae7a6ad1eb9b60850dd62623f76", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/a218b50ed33e6ae7a6ad1eb9b60850dd62623f76", "committedDate": "2020-12-09T23:20:36Z", "message": "put waitForIndexInit in the try block"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a79280ecb5ca806ffc19ec757344a190721fba", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/23a79280ecb5ca806ffc19ec757344a190721fba", "committedDate": "2020-12-09T22:32:53Z", "message": "put waitForIndexInit in the try block"}, "afterCommit": {"oid": "a218b50ed33e6ae7a6ad1eb9b60850dd62623f76", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/a218b50ed33e6ae7a6ad1eb9b60850dd62623f76", "committedDate": "2020-12-09T23:20:36Z", "message": "put waitForIndexInit in the try block"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMzE3OTM2", "url": "https://github.com/apache/geode/pull/5823#pullrequestreview-550317936", "createdAt": "2020-12-11T17:18:25Z", "commit": {"oid": "a218b50ed33e6ae7a6ad1eb9b60850dd62623f76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3935, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}