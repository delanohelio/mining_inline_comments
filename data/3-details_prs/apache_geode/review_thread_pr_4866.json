{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTY3NjI3", "number": 4866, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDo0NDoyNlrODsXaww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyNzo0OFrOEBgNhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODQ3NjE5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDo0NDoyNlrOF9NcqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMTozNDowOFrOF9NqlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ==", "bodyText": "I don\u2019t think there is even a reason this class implements equals. I\u2019d say just let them be default.", "url": "https://github.com/apache/geode/pull/4866#discussion_r399727785", "createdAt": "2020-03-29T00:44:26Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java", "diffHunk": "@@ -146,6 +146,11 @@ public boolean equals(Object o) {\n       return false;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMDUzOA==", "bodyText": "This was implemented as a refactoring of the ConnectionManagerImpl as a part of improving performance.\nI believe that we cannot use the default implementation because it needs to store the first connection which was removed from the deque while executing  removeFirstOccurrence method in Deque.", "url": "https://github.com/apache/geode/pull/4866#discussion_r399730538", "createdAt": "2020-03-29T01:22:49Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java", "diffHunk": "@@ -146,6 +146,11 @@ public boolean equals(Object o) {\n       return false;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ=="}, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMTM0OA==", "bodyText": "Oh yes, that is correct. I didn't notice this was that special inner class. Thanks!", "url": "https://github.com/apache/geode/pull/4866#discussion_r399731348", "createdAt": "2020-03-29T01:34:08Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java", "diffHunk": "@@ -146,6 +146,11 @@ public boolean equals(Object o) {\n       return false;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ=="}, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODQ3NzA1OnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDo0NjowM1rOF9NdFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMTozNDo1NlrOF9NqwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw==", "bodyText": "This implementation seems to violate the general rules of hashcode. It would use the same members as equals to generate a hashcode.", "url": "https://github.com/apache/geode/pull/4866#discussion_r399727893", "createdAt": "2020-03-29T00:46:03Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java", "diffHunk": "@@ -1032,6 +1032,11 @@ public boolean equals(Object obj) {\n     return this.props.equals(function.getConfig());\n   }\n \n+  @Override\n+  public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMDk0Nw==", "bodyText": "Fixed. We now depend on the hashcode of the properties map,  if they have the same properties then they are equal and will have the same hashcode.", "url": "https://github.com/apache/geode/pull/4866#discussion_r399730947", "createdAt": "2020-03-29T01:28:27Z", "author": {"login": "nabarunnag"}, "path": "geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java", "diffHunk": "@@ -1032,6 +1032,11 @@ public boolean equals(Object obj) {\n     return this.props.equals(function.getConfig());\n   }\n \n+  @Override\n+  public int hashCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw=="}, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMTM5Mw==", "bodyText": "I think the same issue exists on the other hashcodes added in this commit.", "url": "https://github.com/apache/geode/pull/4866#discussion_r399731393", "createdAt": "2020-03-29T01:34:56Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java", "diffHunk": "@@ -1032,6 +1032,11 @@ public boolean equals(Object obj) {\n     return this.props.equals(function.getConfig());\n   }\n \n+  @Override\n+  public int hashCode() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw=="}, "originalCommit": {"oid": "144c22c6138b49affa76775d81c48bd1b343e416"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDY1NTU0OnYy", "diffSide": "RIGHT", "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxNDowMFrOGb-7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNzoxNDowMFrOGb-7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NTY4Mg==", "bodyText": "Could this be formatted slightly neater? The following seems to make spotless happy on my machine:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int result =\n          \n          \n            \n                    Objects\n          \n          \n            \n                        .hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool, w_byte,\n          \n          \n            \n                            w_short,\n          \n          \n            \n                            w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list, c_set,\n          \n          \n            \n                            c_queue, c_deque, m_empByCity, day);\n          \n          \n            \n            int result = Objects.hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool,\n          \n          \n            \n                    w_byte, w_short, w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list,\n          \n          \n            \n                    c_set, c_queue, c_deque, m_empByCity, day);", "url": "https://github.com/apache/geode/pull/4866#discussion_r431995682", "createdAt": "2020-05-28T17:14:00Z", "author": {"login": "DonalEvans"}, "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "diffHunk": "@@ -992,6 +993,34 @@ boolean compareMaps(Map m1, Map m2) {\n     return true;\n   }\n \n+  @Override\n+  public int hashCode() {\n+    int result =\n+        Objects\n+            .hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool, w_byte,\n+                w_short,\n+                w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list, c_set,\n+                c_queue, c_deque, m_empByCity, day);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "598d886b9c3beae173cc223167f2a0e9cdb70ca4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDExNzgzOnYy", "diffSide": "RIGHT", "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyNzo0OFrOGdY-KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyNzo0OFrOGdY-KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ3MTAxNw==", "bodyText": "What about:\nreturn Arrays.deepHashCode(new Object[] {p_pool, p_poolArray, ...});", "url": "https://github.com/apache/geode/pull/4866#discussion_r433471017", "createdAt": "2020-06-01T20:27:48Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "diffHunk": "@@ -992,6 +993,31 @@ boolean compareMaps(Map m1, Map m2) {\n     return true;\n   }\n \n+  @Override\n+  public int hashCode() {\n+    int result = Objects.hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10782d7b30554f86395811780bcdb73df20a4272"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4438, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}