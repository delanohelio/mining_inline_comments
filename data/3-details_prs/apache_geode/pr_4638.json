{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3Nzc5Njg2", "number": 4638, "title": "GEODE-7683: introduce BR.cmnClearRegion", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-01-28T01:04:49Z", "url": "https://github.com/apache/geode/pull/4638", "merged": true, "mergeCommit": {"oid": "8bf3899e0363428b080fdbdc41f3fadc4d18a4c3"}, "closed": true, "closedAt": "2020-02-11T18:34:36Z", "author": {"login": "gesterzhou"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-2E5DgFqTM0OTYyMjY2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDWFNBgFqTM1Njg5MzI0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NjIyNjY3", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-349622667", "createdAt": "2020-01-28T18:58:27Z", "commit": {"oid": "debcb4ddde543f6e8396b4cdb895642b4474d27b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODo1ODoyN1rOFiwv_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODo1ODoyN1rOFiwv_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5NDYyMQ==", "bodyText": "Since we locked the primary bucket just now, should we first unlock it before we throw due to the primary no longer being where we expect?", "url": "https://github.com/apache/geode/pull/4638#discussion_r371994621", "createdAt": "2020-01-28T18:58:27Z", "author": {"login": "BenjaminPerryRoss"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +558,42 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    boolean enableRVV = useRVV && getConcurrencyChecksEnabled();\n+    RegionVersionVector rvv = null;\n+    if (enableRVV) {\n+      rvv = getVersionVector();\n+    }\n+\n+    // lock the primary from moving\n+    DistributedLockService lockService = DistributedLockService\n+        .getServiceNamed(PartitionedRegionHelper.PARTITION_LOCK_SERVICE_NAME);\n+    String lockName = this.getFullPath();\n+    while (!lockService.lock(lockName, 100, -1)) {\n+      if (!getBucketAdvisor().isPrimary()) {\n+        PartitionedRegionException pre =\n+            new PartitionedRegionException(\n+                \"The bucket \" + this.getId() + \" is no longer a primary. Retry the clear\");\n+        throw pre;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "debcb4ddde543f6e8396b4cdb895642b4474d27b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDAwNzcw", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-353400770", "createdAt": "2020-02-05T00:39:17Z", "commit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDozOToxN1rOFloXtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMDo0NDo1MlrOFlodDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwMzA2Mg==", "bodyText": "This is opposite of what the comment says", "url": "https://github.com/apache/geode/pull/4638#discussion_r375003062", "createdAt": "2020-02-05T00:39:17Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,34 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (getBucketAdvisor().isPrimary()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwMzQ4NA==", "bodyText": "Does this call just return null if it's not enabled?  Do we need the if check?", "url": "https://github.com/apache/geode/pull/4638#discussion_r375003484", "createdAt": "2020-02-05T00:41:07Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,34 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (getBucketAdvisor().isPrimary()) {\n+      logger.info(\"Not primary bucket when doing clear, do nothing\");\n+      return;\n+    }\n+\n+    boolean enableRVV = useRVV && getConcurrencyChecksEnabled();\n+    RegionVersionVector rvv = null;\n+    if (enableRVV) {\n+      rvv = getVersionVector();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwMzg4OA==", "bodyText": "Shouldn't it only be the origin that distributes?", "url": "https://github.com/apache/geode/pull/4638#discussion_r375003888", "createdAt": "2020-02-05T00:42:48Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,34 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (getBucketAdvisor().isPrimary()) {\n+      logger.info(\"Not primary bucket when doing clear, do nothing\");\n+      return;\n+    }\n+\n+    boolean enableRVV = useRVV && getConcurrencyChecksEnabled();\n+    RegionVersionVector rvv = null;\n+    if (enableRVV) {\n+      rvv = getVersionVector();\n+    }\n+\n+    // get rvvLock\n+    Set<InternalDistributedMember> participants =\n+        getCacheDistributionAdvisor().adviseInvalidateRegion();\n+    try {\n+      obtainWriteLocksForClear(regionEvent, participants);\n+      clearRegionLocally(regionEvent, cacheWrite, null);\n+      if (!regionEvent.isOriginRemote() && regionEvent.getOperation().isDistributed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwNDQyOQ==", "bodyText": "Not part of this diff, but I assume we are taking a less granular lock earlier in the process for the entire partitioned region?", "url": "https://github.com/apache/geode/pull/4638#discussion_r375004429", "createdAt": "2020-02-05T00:44:52Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/DistributedRegion.java", "diffHunk": "@@ -2081,10 +2081,12 @@ private void distributedUnlockForClear() {\n   /**\n    * obtain locks preventing generation of new versions in other members\n    */\n-  private void obtainWriteLocksForClear(RegionEventImpl regionEvent,\n+  protected void obtainWriteLocksForClear(RegionEventImpl regionEvent,\n       Set<InternalDistributedMember> participants) {\n     lockLocallyForClear(getDistributionManager(), getMyId(), regionEvent);\n-    DistributedClearOperation.lockAndFlushToOthers(regionEvent, participants);\n+    if (!isUsedForPartitionedRegionBucket()) {\n+      DistributedClearOperation.lockAndFlushToOthers(regionEvent, participants);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDAxMjA1", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-354001205", "createdAt": "2020-02-05T19:59:08Z", "commit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDI5Mjgy", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-354029282", "createdAt": "2020-02-05T20:47:55Z", "commit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDo0Nzo1NVrOFmGpZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDo0Nzo1NVrOFmGpZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5OTExMA==", "bodyText": "I see you made reindexUserDataRegion public. Is this something you need to call here?", "url": "https://github.com/apache/geode/pull/4638#discussion_r375499110", "createdAt": "2020-02-05T20:47:55Z", "author": {"login": "boglesby"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,32 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (!getBucketAdvisor().isPrimary()) {\n+      logger.info(\"Not primary bucket when doing clear, do nothing\");\n+      return;\n+    }\n+\n+    boolean enableRVV = useRVV && getConcurrencyChecksEnabled();\n+    RegionVersionVector rvv = null;\n+    if (enableRVV) {\n+      rvv = getVersionVector();\n+    }\n+\n+    // get rvvLock\n+    Set<InternalDistributedMember> participants =\n+        getCacheDistributionAdvisor().adviseInvalidateRegion();\n+    try {\n+      obtainWriteLocksForClear(regionEvent, participants);\n+      clearRegionLocally(regionEvent, cacheWrite, rvv);\n+      distributeClearOperation(regionEvent, rvv, participants);\n+\n+      // TODO: call reindexUserDataRegion if there're lucene indexes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDcwOTIx", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-354070921", "createdAt": "2020-02-05T21:59:38Z", "commit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMTo1OTozOFrOFmIqnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMTo1OTozOFrOFmIqnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzMjE4OQ==", "bodyText": "There is no need to change the scope to public, at least not in this pull request.", "url": "https://github.com/apache/geode/pull/4638#discussion_r375532189", "createdAt": "2020-02-05T21:59:38Z", "author": {"login": "jchen21"}, "path": "geode-lucene/src/main/java/org/apache/geode/cache/lucene/internal/IndexRepositoryFactory.java", "diffHunk": "@@ -152,7 +152,7 @@ protected IndexWriter buildIndexWriter(int bucketId, BucketRegion fileAndChunkBu\n     return new IndexWriter(dir, config);\n   }\n \n-  private boolean reindexUserDataRegion(Integer bucketId, PartitionedRegion userRegion,\n+  public boolean reindexUserDataRegion(Integer bucketId, PartitionedRegion userRegion,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDcxNDY0", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-354071464", "createdAt": "2020-02-05T22:00:30Z", "commit": {"oid": "ad9169097ca662d38e34ea9fb61a5cc314176c9f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37f09c965c89c3f6a01134edf7e94270a1a9c09f", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/37f09c965c89c3f6a01134edf7e94270a1a9c09f", "committedDate": "2020-02-05T23:14:40Z", "message": "add more tests"}, "afterCommit": {"oid": "11afea7c2d2f2320e908972ce34ddf5d3bf3daf9", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/11afea7c2d2f2320e908972ce34ddf5d3bf3daf9", "committedDate": "2020-02-05T23:16:44Z", "message": "GEODE-7683: introduce BR.cmnClearRegion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTgwMjY2", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-354180266", "createdAt": "2020-02-06T03:20:31Z", "commit": {"oid": "11afea7c2d2f2320e908972ce34ddf5d3bf3daf9"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzoyMDozMVrOFmON7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMzoyNTo0NFrOFmORlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyMzE1MA==", "bodyText": "This is not quite the same.  Is there a reason why we removed the if check?  We will now always set oldMemValue even if it's been initialized?\nwhy wasn't this just a removal of the else and leave the else if? Just want to understand the logic here a bit...", "url": "https://github.com/apache/geode/pull/4638#discussion_r375623150", "createdAt": "2020-02-06T03:20:31Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -2087,19 +2113,10 @@ void updateSizeOnClearRegion(int sizeBeforeClear) {\n     if (isDestroyed || isDestroyingDiskRegion) {\n       // If this region is destroyed, mark the stat as destroyed.\n       oldMemValue = bytesInMemory.getAndSet(BUCKET_DESTROYED);\n-\n-    } else if (!isInitialized()) {\n-      // This case is rather special. We clear the region if the GII failed.\n-      // In the case of bucket regions, we know that there will be no concurrent operations\n-      // if GII has failed, because there is not primary. So it's safe to set these\n-      // counters to 0.\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11afea7c2d2f2320e908972ce34ddf5d3bf3daf9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYyNDA4NQ==", "bodyText": "Lets think of the case where useRVV is false.\nif (false) {}\nrvv is already null, so rvv ends up null;\nOR\n//remove the if check\nrvv = getVersionVector() <-returns null anyways\nThe end result is the same.  why have the if check?", "url": "https://github.com/apache/geode/pull/4638#discussion_r375624085", "createdAt": "2020-02-06T03:25:44Z", "author": {"login": "jhuynh1"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,34 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (getBucketAdvisor().isPrimary()) {\n+      logger.info(\"Not primary bucket when doing clear, do nothing\");\n+      return;\n+    }\n+\n+    boolean enableRVV = useRVV && getConcurrencyChecksEnabled();\n+    RegionVersionVector rvv = null;\n+    if (enableRVV) {\n+      rvv = getVersionVector();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAwMzQ4NA=="}, "originalCommit": {"oid": "a6328f2e5d073d9682ef37a01409c4e45275a116"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTY1ODI5", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-355165829", "createdAt": "2020-02-07T13:47:56Z", "commit": {"oid": "11afea7c2d2f2320e908972ce34ddf5d3bf3daf9"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0Nzo1NlrOFm9gPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMzo0Nzo1NlrOFm9gPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5Nzg4NQ==", "bodyText": "Do we need to log this message using info level?.\nUsers won't be able to do anything if they see it anyway, so I think we should either delete it or log it as debug.", "url": "https://github.com/apache/geode/pull/4638#discussion_r376397885", "createdAt": "2020-02-07T13:47:56Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/BucketRegion.java", "diffHunk": "@@ -557,6 +557,32 @@ public boolean virtualPut(EntryEventImpl event, boolean ifNew, boolean ifOld,\n     }\n   }\n \n+  @Override\n+  void cmnClearRegion(RegionEventImpl regionEvent, boolean cacheWrite, boolean useRVV) {\n+    if (!getBucketAdvisor().isPrimary()) {\n+      logger.info(\"Not primary bucket when doing clear, do nothing\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11afea7c2d2f2320e908972ce34ddf5d3bf3daf9"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d304b7f829e2f7c7253d1c79c8c61350333d819", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/4d304b7f829e2f7c7253d1c79c8c61350333d819", "committedDate": "2020-02-11T06:33:09Z", "message": "primary does not need to dominate its own rvv. Use getCloneForTransmission to distributed rvv"}, "afterCommit": {"oid": "5fafebd0d90945f690bc9ce283f5e3cec7e57722", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/5fafebd0d90945f690bc9ce283f5e3cec7e57722", "committedDate": "2020-02-11T06:38:45Z", "message": "GEODE-7683: introduce BR.cmnClearRegion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTYwNDk2", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-356560496", "createdAt": "2020-02-11T10:49:01Z", "commit": {"oid": "90e6714561d6cc43a9ab7ab9be6bafcf6192cc4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf3899e0363428b080fdbdc41f3fadc4d18a4c3", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/8bf3899e0363428b080fdbdc41f3fadc4d18a4c3", "committedDate": "2020-02-11T17:20:37Z", "message": "GEODE-7683: introduce BR.cmnClearRegion"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90e6714561d6cc43a9ab7ab9be6bafcf6192cc4f", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/90e6714561d6cc43a9ab7ab9be6bafcf6192cc4f", "committedDate": "2020-02-11T06:49:35Z", "message": "fix the test case accordingly"}, "afterCommit": {"oid": "8bf3899e0363428b080fdbdc41f3fadc4d18a4c3", "author": {"user": {"login": "gesterzhou", "name": "Xiaojian Zhou"}}, "url": "https://github.com/apache/geode/commit/8bf3899e0363428b080fdbdc41f3fadc4d18a4c3", "committedDate": "2020-02-11T17:20:37Z", "message": "GEODE-7683: introduce BR.cmnClearRegion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODkzMjQ5", "url": "https://github.com/apache/geode/pull/4638#pullrequestreview-356893249", "createdAt": "2020-02-11T18:31:27Z", "commit": {"oid": "8bf3899e0363428b080fdbdc41f3fadc4d18a4c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3736, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}