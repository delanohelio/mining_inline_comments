{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTQwOTUw", "number": 5491, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDoxMlrOEiM1VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDozMVrOEiM13A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mjk3MzAxOnYy", "diffSide": "RIGHT", "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDoxMlrOHP8bhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDoxMlrOHP8bhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MDc3NQ==", "bodyText": "you tested it all!", "url": "https://github.com/apache/geode/pull/5491#discussion_r486480775", "createdAt": "2020-09-10T16:34:12Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -396,6 +399,18 @@ public void testMulticastAllowedWithNewVersionViewMember() {\n     assertThat(manager.getGMSManager().isMulticastAllowed()).isTrue();\n   }\n \n+  @Test\n+  public void membershipInvokesUpstreamListenerDuringForcedDisconnect() {\n+    // have an exception interrupt the shutdown process and ensure that a thread is\n+    // launched to inform the cache of shutdown\n+    IllegalStateException expectedException = new IllegalStateException();\n+    doThrow(expectedException).when(services).emergencyClose();\n+    assertThatThrownBy(() -> manager.uncleanShutdown(\"For testing\",\n+        new MemberDisconnectedException(\"For Testing\")))\n+            .isEqualTo(expectedException);\n+    verify(listener).membershipFailure(isA(String.class), isA(Throwable.class));\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffa5a21061197f1d7b5621a178a7a7848dae262"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mjk3NDM2OnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDozMVrOHP8cXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjozNDozMVrOHP8cXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MDk5MA==", "bodyText": "solid", "url": "https://github.com/apache/geode/pull/5491#discussion_r486480990", "createdAt": "2020-09-10T16:34:31Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -1267,25 +1267,27 @@ public void shutdown() {\n   public void uncleanShutdown(String reason, final Exception e) {\n     inhibitForcedDisconnectLogging(false);\n \n-    if (services.getShutdownCause() == null) {\n-      services.setShutdownCause(e);\n-    }\n-\n-    if (cleanupTimer != null && !cleanupTimer.isShutdown()) {\n-      cleanupTimer.shutdownNow();\n-    }\n+    try {\n+      if (services.getShutdownCause() == null) {\n+        services.setShutdownCause(e);\n+      }\n \n-    lifecycleListener.disconnect(e);\n+      if (cleanupTimer != null && !cleanupTimer.isShutdown()) {\n+        cleanupTimer.shutdownNow();\n+      }\n \n-    // first shut down communication so we don't do any more harm to other\n-    // members\n-    services.emergencyClose();\n+      lifecycleListener.disconnect(e);\n \n-    if (e != null) {\n-      try {\n-        listener.membershipFailure(reason, e);\n-      } catch (RuntimeException re) {\n-        logger.warn(\"Exception caught while shutting down\", re);\n+      // first shut down communication so we don't do any more harm to other\n+      // members\n+      services.emergencyClose();\n+    } finally {\n+      if (e != null) {\n+        try {\n+          listener.membershipFailure(reason, e);\n+        } catch (RuntimeException re) {\n+          logger.warn(\"Exception caught while shutting down\", re);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffa5a21061197f1d7b5621a178a7a7848dae262"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4768, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}