{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTI0NDc1", "number": 5370, "title": "GEODE-8298: Member version comparison sense inconsistent when deciding on multicast", "bodyText": "GEODE-8298\nThese changes fix inconsistent version comparison in GMSMembership.processView().\nThe goal of the comparison is to find the oldest Geode version and if that version is older than the local version, disable multicast. The code responsible for this was extracted from processView to a new method containsOldVersionMember to allow for better unit testing.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-07-14T21:31:09Z", "url": "https://github.com/apache/geode/pull/5370", "merged": true, "mergeCommit": {"oid": "fd76cc0b7dbf97dfb84d11e67b37e33c0a9e7fb2"}, "closed": true, "closedAt": "2020-07-20T15:30:38Z", "author": {"login": "kamilla1201"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0-KvBgFqTQ0ODUxMjQzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc19cT4AH2gAyNDQ5MTI0NDc1OjlmZjEwZmEzMDlhN2M3Mjk1ZTdlNTQxMGE0ZWM4MDllNzQ3MDBlMzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTEyNDM5", "url": "https://github.com/apache/geode/pull/5370#pullrequestreview-448512439", "createdAt": "2020-07-14T22:35:34Z", "commit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjozNTozNFrOGxnucw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjo1NToxOFrOGxoKDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4NDI3NQ==", "bodyText": "Please put private members after all public ones.", "url": "https://github.com/apache/geode/pull/5370#discussion_r454684275", "createdAt": "2020-07-14T22:35:34Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -328,4 +330,58 @@ public void noDispatchWhenSick() throws MemberShunnedException, MemberStartupExc\n     assertThat(spy.getStartupEvents()).isEmpty();\n   }\n \n+  private void addSurpriseMemberWithVersion(Version version) {\n+    MemberIdentifier surpriseMember = myMemberId;\n+    surpriseMember.setVmViewId(3);\n+    surpriseMember.setVersionObjectForTest(version);\n+    manager.addSurpriseMember(surpriseMember);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4NzMwMQ==", "bodyText": "It is not clear from looking at this method that it is ok to mutate the object referenced by myMemberId. Off-hand it seems like that field refers to a member id representing the \"local\" member. So either way it seems wrong to modify it here to be the surprise member.\nI recommend you construct a new member id here for one-time use.", "url": "https://github.com/apache/geode/pull/5370#discussion_r454687301", "createdAt": "2020-07-14T22:44:10Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -328,4 +330,58 @@ public void noDispatchWhenSick() throws MemberShunnedException, MemberStartupExc\n     assertThat(spy.getStartupEvents()).isEmpty();\n   }\n \n+  private void addSurpriseMemberWithVersion(Version version) {\n+    MemberIdentifier surpriseMember = myMemberId;\n+    surpriseMember.setVmViewId(3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDgzMw==", "bodyText": "This test and the next two all follow the same pattern. Can you refactor out the commonality?", "url": "https://github.com/apache/geode/pull/5370#discussion_r454690833", "createdAt": "2020-07-14T22:53:45Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -328,4 +330,58 @@ public void noDispatchWhenSick() throws MemberShunnedException, MemberStartupExc\n     assertThat(spy.getStartupEvents()).isEmpty();\n   }\n \n+  private void addSurpriseMemberWithVersion(Version version) {\n+    MemberIdentifier surpriseMember = myMemberId;\n+    surpriseMember.setVmViewId(3);\n+    surpriseMember.setVersionObjectForTest(version);\n+    manager.addSurpriseMember(surpriseMember);\n+  }\n+\n+  @Test\n+  public void testMulticastWithOldVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = new MembershipView<>(myMemberId, 2, members);\n+    addSurpriseMemberWithVersion(Version.GEODE_1_1_0);\n+\n+    assertTrue(manager.containsOldVersionMember(view, Version.CURRENT));\n+  }\n+\n+  @Test\n+  public void testMulticastWithCurrentVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = new MembershipView<>(myMemberId, 2, members);\n+    addSurpriseMemberWithVersion(Version.CURRENT);\n+\n+    assertFalse(manager.containsOldVersionMember(view, Version.CURRENT));\n+  }\n+\n+  @Test\n+  public void testMulticastWithHigherVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = new MembershipView<>(myMemberId, 2, members);\n+    addSurpriseMemberWithVersion(Version.CURRENT);\n+\n+    assertFalse(manager.containsOldVersionMember(view, Version.GEODE_1_1_0));\n+  }\n+\n+  @Test\n+  public void testMulticastWithOldVersionViewMember() {\n+    members.get(0).setVersionObjectForTest(Version.GEODE_1_1_0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MDk5Mg==", "bodyText": "This test and the next two follow the same pattern. Can you factor out the common code?", "url": "https://github.com/apache/geode/pull/5370#discussion_r454690992", "createdAt": "2020-07-14T22:54:14Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -328,4 +330,58 @@ public void noDispatchWhenSick() throws MemberShunnedException, MemberStartupExc\n     assertThat(spy.getStartupEvents()).isEmpty();\n   }\n \n+  private void addSurpriseMemberWithVersion(Version version) {\n+    MemberIdentifier surpriseMember = myMemberId;\n+    surpriseMember.setVmViewId(3);\n+    surpriseMember.setVersionObjectForTest(version);\n+    manager.addSurpriseMember(surpriseMember);\n+  }\n+\n+  @Test\n+  public void testMulticastWithOldVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = new MembershipView<>(myMemberId, 2, members);\n+    addSurpriseMemberWithVersion(Version.GEODE_1_1_0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MTEwMA==", "bodyText": "great to get rid of the superfluous parameter!", "url": "https://github.com/apache/geode/pull/5370#discussion_r454691100", "createdAt": "2020-07-14T22:54:34Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -359,7 +360,7 @@ boolean isDistributionMessage() {\n   /**\n    * Analyze a given view object, generate events as appropriate\n    */\n-  public void processView(long newViewId, MembershipView<ID> newView) {\n+  public void processView(MembershipView<ID> newView) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5MTM0MQ==", "bodyText": "yess", "url": "https://github.com/apache/geode/pull/5370#discussion_r454691341", "createdAt": "2020-07-14T22:55:18Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -531,6 +515,12 @@ public void processView(long newViewId, MembershipView<ID> newView) {\n     }\n   }\n \n+  protected boolean containsOldVersionMember(MembershipView<ID> newView,\n+      VersionOrdinal referenceVersion) {\n+    return Stream.concat(surpriseMembers.keySet().stream(), newView.getMembers().stream())\n+        .anyMatch(member -> referenceVersion.isNewerThan(member.getVersionOrdinalObject()));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8392accfc75ba05993ee6311e345ac313488b6"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDgwMDA4", "url": "https://github.com/apache/geode/pull/5370#pullrequestreview-449080008", "createdAt": "2020-07-15T15:37:42Z", "commit": {"oid": "1882966b93cbc9227945cb35c906b5763e47456b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzo0MlrOGyD-ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzo0MlrOGyD-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzIwMw==", "bodyText": "A small point: this routine will set every member's version to memberVersion. I think it would be a better test if only one member's version was set to memberVersion and the rest were set to Version.CURRENT.", "url": "https://github.com/apache/geode/pull/5370#discussion_r455147203", "createdAt": "2020-07-15T15:37:42Z", "author": {"login": "Bill"}, "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -328,4 +332,63 @@ public void noDispatchWhenSick() throws MemberShunnedException, MemberStartupExc\n     assertThat(spy.getStartupEvents()).isEmpty();\n   }\n \n+  @Test\n+  public void testIsMulticastAllowedWithOldVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = createMembershipView(Version.CURRENT);\n+    manager.addSurpriseMember(createSurpriseMember(OLDER_THAN_CURRENT_VERSION));\n+\n+    manager.processView(view);\n+\n+    assertThat(manager.getGMSManager().isMulticastAllowed()).isFalse();\n+  }\n+\n+  @Test\n+  public void testIsMulticastAllowedWithCurrentVersionSurpriseMember() {\n+    MembershipView<MemberIdentifier> view = createMembershipView(Version.CURRENT);\n+    manager.addSurpriseMember(createSurpriseMember(Version.CURRENT));\n+\n+    manager.processView(view);\n+\n+    assertThat(manager.getGMSManager().isMulticastAllowed()).isTrue();\n+  }\n+\n+  @Test\n+  public void testIsMulticastAllowedWithOldVersionViewMember() {\n+    MembershipView<MemberIdentifier> view = createMembershipView(OLDER_THAN_CURRENT_VERSION);\n+\n+    manager.processView(view);\n+\n+    assertThat(manager.getGMSManager().isMulticastAllowed()).isFalse();\n+  }\n+\n+  @Test\n+  public void testMulticastAllowedWithCurrentVersionViewMember() {\n+    MembershipView<MemberIdentifier> view = createMembershipView(Version.CURRENT);\n+\n+    manager.processView(view);\n+\n+    assertThat(manager.getGMSManager().isMulticastAllowed()).isTrue();\n+  }\n+\n+  private MemberIdentifier createSurpriseMember(Version version) {\n+    MemberIdentifier surpriseMember = createMemberID(DEFAULT_PORT + 5);\n+    surpriseMember.setVmViewId(3);\n+    surpriseMember.setVersionObjectForTest(version);\n+    return surpriseMember;\n+  }\n+\n+  private MembershipView<MemberIdentifier> createMembershipView(Version version) {\n+    List<MemberIdentifier> viewMembers = createMemberIdentifiers(version);\n+    return new MembershipView<>(myMemberId, 2, viewMembers);\n+  }\n+\n+  private List<MemberIdentifier> createMemberIdentifiers(Version memberVersion) {\n+    List<MemberIdentifier> viewMembers = new ArrayList<>();\n+    for (int i = 0; i < 2; ++i) {\n+      MemberIdentifier memberIdentifier = createMemberID(DEFAULT_PORT + 6 + i);\n+      memberIdentifier.setVersionObjectForTest(memberVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1882966b93cbc9227945cb35c906b5763e47456b"}, "originalPosition": 180}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTg1NTgw", "url": "https://github.com/apache/geode/pull/5370#pullrequestreview-449985580", "createdAt": "2020-07-16T15:53:12Z", "commit": {"oid": "12991bc5ae47d92e5f2b2bf4b8fd2560a3b70517"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzoxMlrOGyxbyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzoxMlrOGyxbyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MTkxNA==", "bodyText": "Let's set versionOrdinal (object reference) directly here and eliminate MemberData.setVersionOrdinal(short) entirely. The method shouldn't exist at all. We should not be passing a short ordinal to a MemberData.\nThere are three places MemberData.setVersionOrdinal(short) is called:\n\nhere: just set the field directly\nreadEssentialData(): replace setVersionOrdinal(VersioningIO.readOrdinal(in)); with setVersion(Versioning. getVersionOrdinal(VersioningIO.readOrdinal(in)))\nGMSMemberDataVersionJUnitTest.testSetVersionOrdinal(): delete this test method", "url": "https://github.com/apache/geode/pull/5370#discussion_r455891914", "createdAt": "2020-07-16T15:53:12Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMemberData.java", "diffHunk": "@@ -507,8 +507,8 @@ public void setVmKind(int vmKind) {\n \n \n   @Override\n-  public void setVersion(Version v) {\n-    setVersionOrdinal(v.ordinal());\n+  public void setVersion(VersionOrdinal versionOrdinal) {\n+    setVersionOrdinal(versionOrdinal.ordinal());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12991bc5ae47d92e5f2b2bf4b8fd2560a3b70517"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzA2MjM5", "url": "https://github.com/apache/geode/pull/5370#pullrequestreview-450306239", "createdAt": "2020-07-17T00:48:22Z", "commit": {"oid": "df8c980763b2ea0b2e1e973572d91d92a5a33e25"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9085d3a43902741c63c612bd693847e6a3749b6", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/f9085d3a43902741c63c612bd693847e6a3749b6", "committedDate": "2020-07-18T00:10:30Z", "message": "Fixed version comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68188d93752ae42d92b2447ab7841313ab443257", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/68188d93752ae42d92b2447ab7841313ab443257", "committedDate": "2020-07-18T00:10:31Z", "message": "Remove unused argument"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25084897b22a74e7248ead0e89364b1e7c001d6b", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/25084897b22a74e7248ead0e89364b1e7c001d6b", "committedDate": "2020-07-18T00:10:31Z", "message": "Tests with version higher than the current"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47717d0d4b0501f1f63035bd94b83efbe54af818", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/47717d0d4b0501f1f63035bd94b83efbe54af818", "committedDate": "2020-07-18T00:10:31Z", "message": "Refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b95fb96ef3f3740f3c34037e95463a00cd076f", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/09b95fb96ef3f3740f3c34037e95463a00cd076f", "committedDate": "2020-07-18T00:10:32Z", "message": "Fixes after the code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175b9a8616fe769979ae862112818d9d064575ac", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/175b9a8616fe769979ae862112818d9d064575ac", "committedDate": "2020-07-18T00:14:57Z", "message": "Changes after the code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903fa5a102769f3915a0ea4b9637b698d81c83ea", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/903fa5a102769f3915a0ea4b9637b698d81c83ea", "committedDate": "2020-07-18T00:21:40Z", "message": "Get rid of MemberData.setVersionOrdinal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df8c980763b2ea0b2e1e973572d91d92a5a33e25", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/df8c980763b2ea0b2e1e973572d91d92a5a33e25", "committedDate": "2020-07-16T17:15:45Z", "message": "Get rid of MemberData.setVersionOrdinal"}, "afterCommit": {"oid": "903fa5a102769f3915a0ea4b9637b698d81c83ea", "author": {"user": {"login": "kamilla1201", "name": "Kamilla Aslami"}}, "url": "https://github.com/apache/geode/commit/903fa5a102769f3915a0ea4b9637b698d81c83ea", "committedDate": "2020-07-18T00:21:40Z", "message": "Get rid of MemberData.setVersionOrdinal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ff10fa309a7c7295e7e5410a4ec809e74700e31", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/9ff10fa309a7c7295e7e5410a4ec809e74700e31", "committedDate": "2020-07-18T00:39:12Z", "message": "GEODE-8298: rebased on develop"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4383, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}