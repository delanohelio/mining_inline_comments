{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMTU3Mzg0", "number": 5152, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMjozMlrOD_FeNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozNzoxMlrOECSzRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDc2NTMzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMjozMlrOGZlOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMjozMlrOGZlOyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NzU3Nw==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477577", "createdAt": "2020-05-22T22:22:32Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/CommandFunction.java", "diffHunk": "@@ -84,10 +88,32 @@ protected Object compute(Region localRegion, ByteArrayWrapper key,\n         callable = () -> new RedisSetInRegion(localRegion).srem(key, membersToRemove);\n         break;\n       }\n-      case DEL:\n-        RedisDataType delType = (RedisDataType) args[1];\n-        callable = executeDel(key, localRegion, delType);\n+      case DEL: {\n+        callable = () -> new RedisKeyInRegion(localRegion, regionProvider).del(key);\n         break;\n+      }\n+      case EXISTS: {\n+        callable = () -> new RedisKeyInRegion(localRegion, regionProvider).exists(key);\n+        break;\n+      }\n+//      case RENAME: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDc2NzA5OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMzo1NlrOGZlP0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyMzo1NlrOGZlP0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3Nzg0Mw==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477843", "createdAt": "2020-05-22T22:23:56Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -46,12 +38,22 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n \n     ByteArrayWrapper key = command.getKey();\n     ByteArrayWrapper newKey = new ByteArrayWrapper(commandElems.get(2));\n+    RedisKeyCommands\n+        redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());\n \n-    try (@SuppressWarnings(\"unused\")\n-    AutoCloseableLock lockForOldKey = context.getLockService().lock(key)) {\n-      try (@SuppressWarnings(\"unused\")\n-      AutoCloseableLock lockForNewKey = context.getLockService().lock(newKey)) {\n+    List<ByteArrayWrapper> keysToLock = Arrays.asList(key,newKey);\n+    keysToLock.sort(ByteArrayWrapper::compareTo);\n+\n+\n+//    try (@SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDc2NzcxOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyNDoyM1rOGZlQNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyNDoyM1rOGZlQNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3Nzk0MA==", "bodyText": "remove this deadcode", "url": "https://github.com/apache/geode/pull/5152#discussion_r429477940", "createdAt": "2020-05-22T22:24:23Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -95,18 +84,18 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n           default:\n             break;\n         }\n-      } catch (InterruptedException e) {\n-        Thread.currentThread().interrupt();\n-        command.setResponse(\n-            Coder.getErrorResponse(context.getByteBufAllocator(), \"Thread interrupted.\"));\n-        return;\n-      }\n-    } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      command.setResponse(\n-          Coder.getErrorResponse(context.getByteBufAllocator(), \"Thread interrupted.\"));\n-      return;\n-    }\n+//      } catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDc3NDIzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/SingleResultRedisFunction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyOToyMFrOGZlUGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoyOToyMFrOGZlUGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3ODkzOQ==", "bodyText": "Why was this change made? getLocalDataSet seems like what we want.", "url": "https://github.com/apache/geode/pull/5152#discussion_r429478939", "createdAt": "2020-05-22T22:29:20Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/SingleResultRedisFunction.java", "diffHunk": "@@ -40,7 +40,7 @@ public void execute(FunctionContext<Object[]> context) {\n         regionFunctionContext.getLocalDataSet(regionFunctionContext.getDataSet());\n     Object[] args = context.getArguments();\n     RedisCommandType command = (RedisCommandType) args[0];\n-    Object result = compute(localRegion, key, command, args);\n+    Object result = compute(regionFunctionContext.getDataSet(), key, command, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad81b1f93a4c0ee3d83706d351a92ad9b2f0147c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTA4MTc2OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxODoxOVrOGZn9pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxODoxOVrOGZn9pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyMjM0Mw==", "bodyText": "What if get returns null? I think in that case rename should immediately return false.", "url": "https://github.com/apache/geode/pull/5152#discussion_r429522343", "createdAt": "2020-05-23T07:18:19Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -46,4 +47,13 @@ public boolean del(ByteArrayWrapper key) {\n   public boolean exists(ByteArrayWrapper key) {\n     return localRegion.containsKey(key);\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+\n+    Object value = localRegion.get(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ba7d039687ff29efb50bae1be3a263419db0bc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTA4MjAzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxOToxM1rOGZn9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwNzoxOToxM1rOGZn9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyMjM3OQ==", "bodyText": "It looks like this impl will not work on String since they do not yet store their data in the region.\nIt might be best just to wait for the String work to complete", "url": "https://github.com/apache/geode/pull/5152#discussion_r429522379", "createdAt": "2020-05-23T07:19:13Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -46,4 +47,13 @@ public boolean del(ByteArrayWrapper key) {\n   public boolean exists(ByteArrayWrapper key) {\n     return localRegion.containsKey(key);\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+\n+    Object value = localRegion.get(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92ba7d039687ff29efb50bae1be3a263419db0bc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODA1NDk1OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1MTo1MlrOGem_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODo0OToxNlrOGeo-cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTM1Nw==", "bodyText": "use AbstractExecutor.getRedisKeyCommands(context) instead", "url": "https://github.com/apache/geode/pull/5152#discussion_r434749357", "createdAt": "2020-06-03T17:51:52Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -47,47 +35,15 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n \n     ByteArrayWrapper key = command.getKey();\n     ByteArrayWrapper newKey = new ByteArrayWrapper(commandElems.get(2));\n+    RedisKeyCommands redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4MTgxMA==", "bodyText": "oh cool, just updated it!", "url": "https://github.com/apache/geode/pull/5152#discussion_r434781810", "createdAt": "2020-06-03T18:49:16Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameExecutor.java", "diffHunk": "@@ -47,47 +35,15 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n \n     ByteArrayWrapper key = command.getKey();\n     ByteArrayWrapper newKey = new ByteArrayWrapper(commandElems.get(2));\n+    RedisKeyCommands redisKeyCommands =\n+        new RedisKeyCommandsFunctionExecutor(context.getRegionProvider().getDataRegion());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTM1Nw=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODA1ODY0OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameFunction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1Mjo1N1rOGenCGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODo1MDozMFrOGepBKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTk3Nw==", "bodyText": "get rid of RegionProvider on this function. I think this is left over from when we had multiple regions.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434749977", "createdAt": "2020-06-03T17:52:57Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameFunction.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.redis.internal.executor;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.execute.Function;\n+import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.cache.partition.PartitionRegionHelper;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.internal.cache.LocalDataSet;\n+import org.apache.geode.internal.cache.PartitionedRegion;\n+import org.apache.geode.internal.cache.execute.RegionFunctionContextImpl;\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.RegionProvider;\n+import org.apache.geode.redis.internal.executor.set.RedisSet;\n+import org.apache.geode.redis.internal.executor.set.SingleResultCollector;\n+import org.apache.geode.redis.internal.executor.set.StripedExecutor;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class RenameFunction implements Function {\n+\n+  public static final String ID = \"REDIS_RENAME_FUNCTION\";\n+\n+  private final transient StripedExecutor stripedExecutor;\n+  private final RegionProvider regionProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4MjUwNw==", "bodyText": "It is! Thank you for catching that.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434782507", "createdAt": "2020-06-03T18:50:30Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RenameFunction.java", "diffHunk": "@@ -0,0 +1,254 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.redis.internal.executor;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.execute.Function;\n+import org.apache.geode.cache.execute.FunctionContext;\n+import org.apache.geode.cache.execute.FunctionService;\n+import org.apache.geode.cache.partition.PartitionRegionHelper;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.internal.cache.LocalDataSet;\n+import org.apache.geode.internal.cache.PartitionedRegion;\n+import org.apache.geode.internal.cache.execute.RegionFunctionContextImpl;\n+import org.apache.geode.redis.internal.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.RegionProvider;\n+import org.apache.geode.redis.internal.executor.set.RedisSet;\n+import org.apache.geode.redis.internal.executor.set.SingleResultCollector;\n+import org.apache.geode.redis.internal.executor.set.StripedExecutor;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class RenameFunction implements Function {\n+\n+  public static final String ID = \"REDIS_RENAME_FUNCTION\";\n+\n+  private final transient StripedExecutor stripedExecutor;\n+  private final RegionProvider regionProvider;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0OTk3Nw=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODA2NDMzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1NDozN1rOGenFxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODo1MjoxNlrOGepFAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDkxNw==", "bodyText": "change \"this associations\" to one of the following \"these associations\" or \"this association\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434750917", "createdAt": "2020-06-03T17:54:37Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -18,10 +18,11 @@\n \n import java.util.concurrent.Callable;\n \n+\n /**\n  * Allows users to \"stripe\" their execution in such a way that all tasks belonging to one stripe are\n  * executed in-order. A stripe is somehow associated with an Object called the \"stripeId\".\n- * It is upto the implementor of this interface to decide how to do this assocations.\n+ * It is up to the implementor of this interface to decide how to do this associations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4MzQ4OA==", "bodyText": "good catch, I'll update it.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434783488", "createdAt": "2020-06-03T18:52:16Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -18,10 +18,11 @@\n \n import java.util.concurrent.Callable;\n \n+\n /**\n  * Allows users to \"stripe\" their execution in such a way that all tasks belonging to one stripe are\n  * executed in-order. A stripe is somehow associated with an Object called the \"stripeId\".\n- * It is upto the implementor of this interface to decide how to do this assocations.\n+ * It is up to the implementor of this interface to decide how to do this associations.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDkxNw=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODA3ODU2OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzo1ODozOVrOGenO9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTowMzoxMlrOGepbmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MzI3MQ==", "bodyText": "consider getting rid of \"areSameStripe\" in favor of \"compareStripes(o1, o2) == 0\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434753271", "createdAt": "2020-06-03T17:58:39Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -35,4 +36,8 @@\n    */\n   public <T> T execute(Object stripeId,\n       Callable<T> callable);\n+\n+  public boolean areSameStripe(Object object1, Object object2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4OTI3Mg==", "bodyText": "Sounds good, I'll update it", "url": "https://github.com/apache/geode/pull/5152#discussion_r434789272", "createdAt": "2020-06-03T19:03:12Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/StripedExecutor.java", "diffHunk": "@@ -35,4 +36,8 @@\n    */\n   public <T> T execute(Object stripeId,\n       Callable<T> callable);\n+\n+  public boolean areSameStripe(Object object1, Object object2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MzI3MQ=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODA5OTM5OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODowNDo0NVrOGendBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozMDoxNFrOGeqTKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1Njg3MQ==", "bodyText": "If newKey is equal to oldKey it looks like this code will do the wrong thing. The redis rename docs say: \"<= 3.2.0: Before Redis 3.2.0, an error is returned if source and destination names are the same.\". Perhaps the best way to handle this is to check in the renameExecutor for equal keys and return \"OK\".", "url": "https://github.com/apache/geode/pull/5152#discussion_r434756871", "createdAt": "2020-06-03T18:04:45Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -102,4 +102,16 @@ protected RedisData getRedisDataOrDefault(ByteArrayWrapper key, RedisData defaul\n       return result;\n     }\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+    RedisData value = getRedisData(oldKey);\n+    if (value == null) {\n+      return false;\n+    }\n+\n+    region.put(newKey, value);\n+    region.remove(oldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3MzgyNQ==", "bodyText": "we actually added some logic into the RedisKeyCommandsFunctionExecutor for if the key does not exist...we can probably add this here", "url": "https://github.com/apache/geode/pull/5152#discussion_r434773825", "createdAt": "2020-06-03T18:34:32Z", "author": {"login": "prettyClouds"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -102,4 +102,16 @@ protected RedisData getRedisDataOrDefault(ByteArrayWrapper key, RedisData defaul\n       return result;\n     }\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+    RedisData value = getRedisData(oldKey);\n+    if (value == null) {\n+      return false;\n+    }\n+\n+    region.put(newKey, value);\n+    region.remove(oldKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1Njg3MQ=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwMzQ5Nw==", "bodyText": "Updating this and adding a test.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434803497", "createdAt": "2020-06-03T19:30:14Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/RedisKeyInRegion.java", "diffHunk": "@@ -102,4 +102,16 @@ protected RedisData getRedisDataOrDefault(ByteArrayWrapper key, RedisData defaul\n       return result;\n     }\n   }\n+\n+  public boolean rename(ByteArrayWrapper oldKey, ByteArrayWrapper newKey) {\n+    RedisData value = getRedisData(oldKey);\n+    if (value == null) {\n+      return false;\n+    }\n+\n+    region.put(newKey, value);\n+    region.remove(oldKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1Njg3MQ=="}, "originalCommit": {"oid": "088633993ef84ab893bbf8348fe7ab26cc272e45"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwODQwNjQ3OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/ShutdownIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozNzoxMlrOGeqh1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMDoxNjo0N1rOGer0Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwNzI1NA==", "bodyText": "It would probably be better for you just to wait for: #5209. Otherwise this ignore will need to be removed in yet another pr.", "url": "https://github.com/apache/geode/pull/5152#discussion_r434807254", "createdAt": "2020-06-03T19:37:12Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/ShutdownIntegrationTest.java", "diffHunk": "@@ -56,6 +57,7 @@ public void shutdownActuallyShutsDownTheServer() {\n   }\n \n   @Test\n+  @Ignore(\"will be remedied in: https://github.com/apache/geode/pull/5204\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2093d4f9d792a74900c5b2170db36abdd92f7239"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyODM3NA==", "bodyText": "Merged it in!", "url": "https://github.com/apache/geode/pull/5152#discussion_r434828374", "createdAt": "2020-06-03T20:16:47Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/ShutdownIntegrationTest.java", "diffHunk": "@@ -56,6 +57,7 @@ public void shutdownActuallyShutsDownTheServer() {\n   }\n \n   @Test\n+  @Ignore(\"will be remedied in: https://github.com/apache/geode/pull/5204\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwNzI1NA=="}, "originalCommit": {"oid": "2093d4f9d792a74900c5b2170db36abdd92f7239"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4097, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}