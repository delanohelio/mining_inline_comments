{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzQ3NTg1", "number": 4958, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToxNDozNlrODxyUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyMjo0MVrODxyfOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTMxMTY5OnYy", "diffSide": "RIGHT", "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToxNDozNlrOGFdMPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMToyODozM1rOGFhnfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3NDMzMg==", "bodyText": "do we need this log in the test output?", "url": "https://github.com/apache/geode/pull/4958#discussion_r408374332", "createdAt": "2020-04-14T19:14:36Z", "author": {"login": "Bill"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -107,9 +111,18 @@ public void before() throws IOException, InterruptedException {\n \n   }\n \n+  @After\n+  public void after() throws Exception {\n+    String output =\n+        docker.exec(options(\"-T\"), \"geode\", arguments(\"cat\", \"server-dolores/server-dolores.log\"));\n+    System.out.println(\"Server log file--------------------------------\\n\" + output);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0Njg0NQ==", "bodyText": "Dan thought it was a good idea for the SingleServer test & I thought so, too.  If something goes wrong you probably want this output in the logs.", "url": "https://github.com/apache/geode/pull/4958#discussion_r408446845", "createdAt": "2020-04-14T21:28:33Z", "author": {"login": "bschuchardt"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -107,9 +111,18 @@ public void before() throws IOException, InterruptedException {\n \n   }\n \n+  @After\n+  public void after() throws Exception {\n+    String output =\n+        docker.exec(options(\"-T\"), \"geode\", arguments(\"cat\", \"server-dolores/server-dolores.log\"));\n+    System.out.println(\"Server log file--------------------------------\\n\" + output);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3NDMzMg=="}, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTMzMjIxOnYy", "diffSide": "RIGHT", "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyMDozMVrOGFdZAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTo1OTowNFrOGFifkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3NzYwMA==", "bodyText": "Now that we have NotOnWindowsDockerRule, we have the ability for a test to start containers once and to break actual testing into multiple test methods. We do it that way (in SingleServerSNIAcceptanceTest and DualServerSNIAcceptanceTest) for performance reasons\u2014we don't want to take too many minutes out of our CI pipeline, for SNI testing.\nSo for these reasons I think we should do one of two things:\n\nuse NotOnWindowsDockerRule here, and break these tests into multiple test methods\ngo further, and transfer these CQ tests over to the SingleServerSNIAcceptanceTest class (eliminating this test class entirely)\n\nI can see why we might want to do (1) even though it will add more Docker startup/teardown time (versus (2)), since there is some CQ-specific stuff here: 3 fields and an inner (CqListener) class.", "url": "https://github.com/apache/geode/pull/4958#discussion_r408377600", "createdAt": "2020-04-14T19:20:31Z", "author": {"login": "Bill"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -22,6 +22,7 @@\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_REQUIRE_AUTHENTICATION;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE_PASSWORD;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0ODE0Ng==", "bodyText": "There's only one test in this class.  No need for the ClassRule, though we could standardize on using it if we want.  The SingleServer test expects the same content to be in the server cache for each test, so I don't think it would be appropriate to add this test to it without addressing that.  I would rather keep this class and have it focus on subscriptions.", "url": "https://github.com/apache/geode/pull/4958#discussion_r408448146", "createdAt": "2020-04-14T21:31:08Z", "author": {"login": "bschuchardt"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -22,6 +22,7 @@\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_REQUIRE_AUTHENTICATION;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE_PASSWORD;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3NzYwMA=="}, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MTIwMA==", "bodyText": "I've changed this to a ClassRule", "url": "https://github.com/apache/geode/pull/4958#discussion_r408461200", "createdAt": "2020-04-14T21:59:04Z", "author": {"login": "bschuchardt"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -22,6 +22,7 @@\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_REQUIRE_AUTHENTICATION;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE;\n import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE_PASSWORD;\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3NzYwMA=="}, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTMzNjcxOnYy", "diffSide": "RIGHT", "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyMTo0MlrOGFdbrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTozMjowMVrOGFhuOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3ODI4Nw==", "bodyText": "do we need/want these stats in the test output?", "url": "https://github.com/apache/geode/pull/4958#discussion_r408378287", "createdAt": "2020-04-14T19:21:42Z", "author": {"login": "Bill"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -152,6 +165,21 @@ public void performSimpleCQOverSNIProxy()\n \n     assertThat(eventUpdateCounter.get()).isEqualTo(62);\n \n+    // verify that the server cleans up when the client connection to the gateway is destroyed\n+    ((PoolImpl) cache.getDefaultPool()).killPrimaryEndpoint();\n+    // since we can't run code in the server let's grab the CQ statistics and verify that\n+    // the CQ has been closed. StatArchiveReader has a main() that we can use to get a printout\n+    // of stat values\n+    await().untilAsserted(() -> {\n+      String stats = docker.exec(options(\"-T\"), \"geode\",\n+          arguments(\"java\", \"-cp\", \"/geode/lib/geode-dependencies.jar\",\n+              \"org.apache.geode.internal.statistics.StatArchiveReader\",\n+              \"stat\", \"server-dolores/statArchive.gfs\", \"CqServiceStats.numCqsClosed\"));\n+      System.out.println(\"stats from server are :\" + stats);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0ODU3MQ==", "bodyText": "Yes, if something goes wrong we can see why things didn't match in the awaitility failure message.  Helped me a lot.", "url": "https://github.com/apache/geode/pull/4958#discussion_r408448571", "createdAt": "2020-04-14T21:32:01Z", "author": {"login": "bschuchardt"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNICQAcceptanceTest.java", "diffHunk": "@@ -152,6 +165,21 @@ public void performSimpleCQOverSNIProxy()\n \n     assertThat(eventUpdateCounter.get()).isEqualTo(62);\n \n+    // verify that the server cleans up when the client connection to the gateway is destroyed\n+    ((PoolImpl) cache.getDefaultPool()).killPrimaryEndpoint();\n+    // since we can't run code in the server let's grab the CQ statistics and verify that\n+    // the CQ has been closed. StatArchiveReader has a main() that we can use to get a printout\n+    // of stat values\n+    await().untilAsserted(() -> {\n+      String stats = docker.exec(options(\"-T\"), \"geode\",\n+          arguments(\"java\", \"-cp\", \"/geode/lib/geode-dependencies.jar\",\n+              \"org.apache.geode.internal.statistics.StatArchiveReader\",\n+              \"stat\", \"server-dolores/statArchive.gfs\", \"CqServiceStats.numCqsClosed\"));\n+      System.out.println(\"stats from server are :\" + stats);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3ODI4Nw=="}, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTM0MDA4OnYy", "diffSide": "RIGHT", "path": "geode-assembly/src/acceptanceTest/resources/org/apache/geode/client/sni/geode-config/gemfire.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyMjo0MVrOGFddyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTozMjo0M1rOGFhviA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3ODgyNw==", "bodyText": "this turns on stats for all our SNI tests\u2014not just this one. I assume that is ok but just wanted to remind everybody", "url": "https://github.com/apache/geode/pull/4958#discussion_r408378827", "createdAt": "2020-04-14T19:22:41Z", "author": {"login": "Bill"}, "path": "geode-assembly/src/acceptanceTest/resources/org/apache/geode/client/sni/geode-config/gemfire.properties", "diffHunk": "@@ -15,4 +15,5 @@\n # limitations under the License.\n #\n \n-#empty\n+statistic-sampling-enabled=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0ODkwNA==", "bodyText": "yes, it does.  I think that's okay.", "url": "https://github.com/apache/geode/pull/4958#discussion_r408448904", "createdAt": "2020-04-14T21:32:43Z", "author": {"login": "bschuchardt"}, "path": "geode-assembly/src/acceptanceTest/resources/org/apache/geode/client/sni/geode-config/gemfire.properties", "diffHunk": "@@ -15,4 +15,5 @@\n # limitations under the License.\n #\n \n-#empty\n+statistic-sampling-enabled=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3ODgyNw=="}, "originalCommit": {"oid": "23a09ad96fa586f42cc88f572429568da5594e9a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4316, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}