{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDMwMTcx", "number": 4852, "title": "GEODE-7914: create missing unit test for Redis Module Expire Command", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-03-26T21:20:44Z", "url": "https://github.com/apache/geode/pull/4852", "merged": true, "mergeCommit": {"oid": "fb2c273c3e9307e8956c7127d208a50b4bbb1a43"}, "closed": true, "closedAt": "2020-03-30T17:50:27Z", "author": {"login": "jhutchison"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRi1UGAH2gAyMzk0NDMwMTcxOjZlYmI4ODlmMWRhMTNkOTdlODAxMDFkYmVkNTUzZWIyMTMzN2M5MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSwbttAH2gAyMzk0NDMwMTcxOjU5YzRiMGNkMGFkYjc1ZjE5MTc2YTE1Y2JmZjgxZjhiMGFlNmVkMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ebb889f1da13d97e80101dbed553eb21337c916", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/6ebb889f1da13d97e80101dbed553eb21337c916", "committedDate": "2020-03-26T21:17:48Z", "message": "GEODE-7914: create missing unit test for Redis Module Expire Command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMDI4OTMx", "url": "https://github.com/apache/geode/pull/4852#pullrequestreview-383028931", "createdAt": "2020-03-27T16:45:18Z", "commit": {"oid": "6ebb889f1da13d97e80101dbed553eb21337c916"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo0NToxOFrOF85erw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjo0OTo1NVrOF85qXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwMDYyMw==", "bodyText": "This and import org.apache.geode.redis.internal.executor.string.GetRangeExecutor are unused according to spotless", "url": "https://github.com/apache/geode/pull/4852#discussion_r399400623", "createdAt": "2020-03-27T16:45:18Z", "author": {"login": "moleske"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/ExpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static java.nio.charset.Charset.defaultCharset;\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.nio.charset.Charset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ebb889f1da13d97e80101dbed553eb21337c916"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwMzYxMg==", "bodyText": "The default for verify is times(1), so you can remove the explicit times(1) (same for the tests below)", "url": "https://github.com/apache/geode/pull/4852#discussion_r399403612", "createdAt": "2020-03-27T16:49:55Z", "author": {"login": "moleske"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/ExpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static java.nio.charset.Charset.defaultCharset;\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.nio.charset.Charset;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+\n+import org.apache.geode.redis.internal.Command;\n+import org.apache.geode.redis.internal.ExecutionHandlerContext;\n+import org.apache.geode.redis.internal.Executor;\n+import org.apache.geode.redis.internal.executor.ExpireExecutor;\n+import org.apache.geode.redis.internal.executor.string.GetRangeExecutor;\n+\n+public class ExpireExecutorJUnitTest {\n+\n+  private ExecutionHandlerContext context;\n+  private Command command;\n+  private UnpooledByteBufAllocator byteBuf;\n+\n+  @Before\n+  public void setUp() {\n+    context = mock(ExecutionHandlerContext.class);\n+    command = mock(Command.class);\n+    byteBuf = new UnpooledByteBufAllocator(false);\n+  }\n+\n+  @Test\n+  public void calledWithTooFewCommandArguments_returnsError() {\n+    Executor executor = new ExpireExecutor();\n+    List<byte[]> commandsAsBytesWithTooFewArguments = new ArrayList<>();\n+    commandsAsBytesWithTooFewArguments.add(\"EXPIRE\".getBytes());\n+    commandsAsBytesWithTooFewArguments.add(\"key\".getBytes());\n+\n+    ArgumentCaptor<ByteBuf> argsErrorCaptor = ArgumentCaptor.forClass(ByteBuf.class);\n+\n+    when(context.getByteBufAllocator()).thenReturn(byteBuf);\n+    when(command.getProcessedCommand()).thenReturn(commandsAsBytesWithTooFewArguments);\n+\n+    executor.executeCommand(command, context);\n+    verify(command, times(1)).setResponse(argsErrorCaptor.capture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ebb889f1da13d97e80101dbed553eb21337c916"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4cb7f09d871448e14039790301ada94d59b2bf8", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/c4cb7f09d871448e14039790301ada94d59b2bf8", "committedDate": "2020-03-27T17:46:18Z", "message": "empty commit to trigger CI build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59c4b0cd0adb75f19176a15cbff81f8b0ae6ed01", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/59c4b0cd0adb75f19176a15cbff81f8b0ae6ed01", "committedDate": "2020-03-30T15:42:26Z", "message": "Spotless"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4928, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}