{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Njg3MjQy", "number": 5639, "title": "GEODE-8627: Redis not unsubscribing and punsubscribing correctly when no channel/pattern provided", "bodyText": "Geode Redis should unsubscribe from all channels (not including patterns) when no channel is provided and punsubscribe from all patterns (not including channels) when no pattern is provided.", "createdAt": "2020-10-19T05:26:07Z", "url": "https://github.com/apache/geode/pull/5639", "merged": true, "mergeCommit": {"oid": "7a0fd2ee590c3ec0168f4e73e3610ce4820e34b2"}, "closed": true, "closedAt": "2020-10-21T15:46:06Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdT9RXBAH2gAyNTA1Njg3MjQyOjAzODFmN2UxNjVhOGZkMGRlMmQyNWI1YWQ3ZTI3ODBiZTEwYzk0MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUthzLAH2gAyNTA1Njg3MjQyOjFmZGRhZGFiZWE3ZmQyZTU2OTAxZTJmMDM1NDk3M2ZjMWUxOTIxZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0381f7e165a8fd0de2d25b5ad7e2780be10c9408", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/0381f7e165a8fd0de2d25b5ad7e2780be10c9408", "committedDate": "2020-10-19T05:24:58Z", "message": "GEODE-8627: Redis not unsubscribing and punsubscribing correctly when no channel/pattern provided"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNDIwMzU2", "url": "https://github.com/apache/geode/pull/5639#pullrequestreview-511420356", "createdAt": "2020-10-19T05:28:13Z", "commit": {"oid": "0381f7e165a8fd0de2d25b5ad7e2780be10c9408"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyODoxM1rOHj9yVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyODoxM1rOHj9yVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3NDUxNg==", "bodyText": "It might make sense to move these tests to AbstractPubSubIntegrationTest.java once 8577 is resolved.", "url": "https://github.com/apache/geode/pull/5639#discussion_r507474516", "createdAt": "2020-10-19T05:28:13Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/pubsub/AbstractSubscriptionsIntegrationTest.java", "diffHunk": "@@ -88,18 +111,91 @@ public void multiSubscribe() {\n         .untilAsserted(() -> assertThat(mockSubscriber.getReceivedPMessages()).hasSize(1));\n     assertThat(mockSubscriber.getReceivedEvents()).containsExactly(\"message\", \"pmessage\");\n     mockSubscriber.unsubscribe();\n-    client.close();\n   }\n \n   @Test\n-  public void unallowedCommandsWhileSubscribed() {\n-    Jedis client = new Jedis(\"localhost\", getPort());\n+  public void unsubscribingImplicitlyFromAllChannels_doesNotUnsubscribeFromPatterns() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0381f7e165a8fd0de2d25b5ad7e2780be10c9408"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODExMjI0", "url": "https://github.com/apache/geode/pull/5639#pullrequestreview-511811224", "createdAt": "2020-10-19T14:16:31Z", "commit": {"oid": "0381f7e165a8fd0de2d25b5ad7e2780be10c9408"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoyMDowM1rOHkQ8PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoyMDowM1rOHkQ8PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4ODM0OQ==", "bodyText": "I can see that you want the method name to be more expressive, but I don't think it's good practice to have an API where some methods return null depending on what type of object you're using. That opens the door for a dev to easily make a mistake. I'd prefer to keep a single method but give it a more descriptive name. Perhaps getSubscriptionName() or getChannelOrPattern().", "url": "https://github.com/apache/geode/pull/5639#discussion_r507788349", "createdAt": "2020-10-19T14:20:03Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/pubsub/Subscription.java", "diffHunk": "@@ -53,11 +53,15 @@ void publishMessage(byte[] channel, byte[] message,\n   List<Object> createResponse(byte[] channel, byte[] message);\n \n   /**\n-   * Return the subscription name. In the case of a pattern the string representation of the\n-   * pattern is returned.\n+   * Return the channel name. In the case of a pattern null is returned.\n    */\n   byte[] getChannelName();\n \n+  /**\n+   * Return the pattern name. In the case of a channel null is returned.\n+   */\n+  byte[] getPatternName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0381f7e165a8fd0de2d25b5ad7e2780be10c9408"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6fef77e15efddc367d333d1aeac2be4aee2749d", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/d6fef77e15efddc367d333d1aeac2be4aee2749d", "committedDate": "2020-10-20T13:51:34Z", "message": "review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f1aa9b8fa0dd92890f8ce0d43a32f66f13da18e", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/4f1aa9b8fa0dd92890f8ce0d43a32f66f13da18e", "committedDate": "2020-10-20T14:34:21Z", "message": "Correct serializables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTM1MzMw", "url": "https://github.com/apache/geode/pull/5639#pullrequestreview-513135330", "createdAt": "2020-10-20T21:08:44Z", "commit": {"oid": "d6fef77e15efddc367d333d1aeac2be4aee2749d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMTowODo0NVrOHlRLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMToxMDo1OFrOHlRPyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0MDc3Mw==", "bodyText": "Only if you need to push another change: I think this should be findSubscriptionNames and the double ; at the end of the line. No biggy.", "url": "https://github.com/apache/geode/pull/5639#discussion_r508840773", "createdAt": "2020-10-20T21:08:45Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/pubsub/PubSub.java", "diffHunk": "@@ -81,19 +81,19 @@ long publish(\n   long punsubscribe(GlobPattern pattern, Client client);\n \n   /**\n-   * Return a list of channel names that a client has subscribed to\n+   * Return a list of channel names or patterns that a client has subscribed to\n    *\n    * @param client the Client which is to be queried\n-   * @return the list of channels\n+   * @return the list of channels or patterns\n    */\n-  List<byte[]> findSubscribedChannels(Client client);\n+  List<byte[]> findSubscriptionsNames(Client client, Subscription.Type type);\n \n   /**\n-   * Return a list of pattern names that a client has subscribed to\n+   * Return a list of channel names and patterns that a client has subscribed to\n    *\n    * @param client the Client which is to be queried\n-   * @return the list of patterns\n+   * @return the list of channels and patterns\n    */\n-  List<byte[]> findSubscribedPatterns(Client client);\n+  List<byte[]> findSubscriptionsNames(Client client);;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6fef77e15efddc367d333d1aeac2be4aee2749d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0MTkyOA==", "bodyText": "Also no biggy, but for enum equality it's slightly better to use == since it's also null safe. Under the covers the JDK ends up doing == in any case.", "url": "https://github.com/apache/geode/pull/5639#discussion_r508841928", "createdAt": "2020-10-20T21:10:58Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/pubsub/PubSubImpl.java", "diffHunk": "@@ -140,18 +139,17 @@ public long punsubscribe(GlobPattern pattern, Client client) {\n   }\n \n   @Override\n-  public List<byte[]> findSubscribedChannels(Client client) {\n+  public List<byte[]> findSubscriptionsNames(Client client) {\n     return subscriptions.findSubscriptions(client).stream()\n-        .map(Subscription::getChannelName)\n-        .filter(Objects::nonNull)\n+        .map(Subscription::getSubscriptionName)\n         .collect(Collectors.toList());\n   }\n \n   @Override\n-  public List<byte[]> findSubscribedPatterns(Client client) {\n+  public List<byte[]> findSubscriptionsNames(Client client, Subscription.Type type) {\n     return subscriptions.findSubscriptions(client).stream()\n-        .map(Subscription::getPatternName)\n-        .filter(Objects::nonNull)\n+        .filter(s -> s.getType().equals(type))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6fef77e15efddc367d333d1aeac2be4aee2749d"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fddadabea7fd2e56901e2f0354973fc1e1921ea", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/1fddadabea7fd2e56901e2f0354973fc1e1921ea", "committedDate": "2020-10-21T13:38:22Z", "message": "Review edits"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4123, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}