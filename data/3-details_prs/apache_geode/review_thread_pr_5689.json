{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTk4NzY2", "number": 5689, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTowNzo0N1rOE2SLkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTowNzo0N1rOE2SLkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzU2NDM1OnYy", "diffSide": "LEFT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMTowNzo0N1rOHvBxdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzo1NzoyN1rOH-6n0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw==", "bodyText": "This fix is incorrect. It only caused the empty oplog (created by the offline compaction) is not deleted by the recovery's auto compaction.\nI modified the dunit test a little bit and proved it.\nUnfortunately, there's no flag or status to show that a compaction is just finished. Even we want to use the empty oplog created by offline compaction, we need to careful arrange the logic. Such as:\nchange  needsCompaction to return int. 1: need to compact, -1: no need to compact, 0: there's one empty file,  only need to delete it.\nBut maybe there's better ideas.", "url": "https://github.com/apache/geode/pull/5689#discussion_r519074167", "createdAt": "2020-11-07T01:07:47Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "diffHunk": "@@ -5789,9 +5789,8 @@ boolean needsCompaction() {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n-    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb77f01cc840e8aa70a834a99986842736d274c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4ODU0MQ==", "bodyText": "The new fix is good.\nShould use \"} else if (hasNoLiveValues()) {\" instead.\nAnd it's better to add a few comments here.", "url": "https://github.com/apache/geode/pull/5689#discussion_r533588541", "createdAt": "2020-12-01T17:23:13Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "diffHunk": "@@ -5789,9 +5789,8 @@ boolean needsCompaction() {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n-    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}, "originalCommit": {"oid": "fb77f01cc840e8aa70a834a99986842736d274c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMjczMQ==", "bodyText": "Darrel and I discussed again. We might need to re-fix it the other way:\nSince the trouble is caused by offline compaction wrote totalCount=0 into krf, there's a potential bug that we restart with totalCount=0, but totalLiveCount=1, then with your current code change this oplog will never get a chance to compact until the only live entry is destroyed.\nSo a better fix maybe: when restart and found totalCount=0, then update totalCount to be totalLiveCount. With this fix, you don't need to change needsCompaction() any more.", "url": "https://github.com/apache/geode/pull/5689#discussion_r533822731", "createdAt": "2020-12-02T00:55:34Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "diffHunk": "@@ -5789,9 +5789,8 @@ boolean needsCompaction() {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n-    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}, "originalCommit": {"oid": "fb77f01cc840e8aa70a834a99986842736d274c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNDIyNg==", "bodyText": "I have changed readKrf() function. So that at the end of this function, when totalCount and totalLiveCount is updated after reading krf file, it will check if totalCount is 0 and totalLiveCount is greater than 0, and update totalCount accordingly.", "url": "https://github.com/apache/geode/pull/5689#discussion_r535734226", "createdAt": "2020-12-03T23:57:27Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "diffHunk": "@@ -5789,9 +5789,8 @@ boolean needsCompaction() {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n-    } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}, "originalCommit": {"oid": "fb77f01cc840e8aa70a834a99986842736d274c4"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4606, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}