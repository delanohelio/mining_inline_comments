{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzYxMDA2", "number": 5557, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxMzo0MVrOEor6QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxNzowNFrOEor_Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDk3OTIwOnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/rules/tests/DistributedBlackboardDistributedTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxMzo0MVrOHZ68mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzoxMzozMlrOHaGOYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk0MjIzMw==", "bodyText": "You have no idea how much I appreciate you naming these messages. Thank you!", "url": "https://github.com/apache/geode/pull/5557#discussion_r496942233", "createdAt": "2020-09-29T18:13:41Z", "author": {"login": "demery-pivotal"}, "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/rules/tests/DistributedBlackboardDistributedTest.java", "diffHunk": "@@ -0,0 +1,297 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.test.dunit.rules.tests;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static org.apache.geode.test.dunit.VM.getController;\n+import static org.apache.geode.test.dunit.VM.getVM;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+\n+import java.io.Serializable;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.rules.DistributedBlackboard;\n+import org.apache.geode.test.dunit.rules.DistributedRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@SuppressWarnings({\"serial\", \"CodeBlock2Expr\"})\n+public class DistributedBlackboardDistributedTest implements Serializable {\n+\n+  @Rule\n+  public DistributedRule distributedRule = new DistributedRule();\n+  @Rule\n+  public DistributedBlackboard blackboard = new DistributedBlackboard();\n+  @Rule\n+  public SerializableTestName testName = new SerializableTestName();\n+\n+  @Test\n+  public void canPassDataBetweenVMs() {\n+    VM vm0 = getVM(0);\n+    VM vm1 = getVM(1);\n+\n+    vm0.invoke(\"put data in mailbox\", () -> blackboard.setMailbox(mailbox(), value()));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b5ff247c5936de13ebf9fb154b3698617ae1f28"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEyNzAwOQ==", "bodyText": "I copied that from Bruce's original test ;)", "url": "https://github.com/apache/geode/pull/5557#discussion_r497127009", "createdAt": "2020-09-29T23:13:32Z", "author": {"login": "kirklund"}, "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/rules/tests/DistributedBlackboardDistributedTest.java", "diffHunk": "@@ -0,0 +1,297 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.test.dunit.rules.tests;\n+\n+import static java.util.Arrays.asList;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static org.apache.geode.test.dunit.VM.getController;\n+import static org.apache.geode.test.dunit.VM.getVM;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+\n+import java.io.Serializable;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.rules.DistributedBlackboard;\n+import org.apache.geode.test.dunit.rules.DistributedRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@SuppressWarnings({\"serial\", \"CodeBlock2Expr\"})\n+public class DistributedBlackboardDistributedTest implements Serializable {\n+\n+  @Rule\n+  public DistributedRule distributedRule = new DistributedRule();\n+  @Rule\n+  public DistributedBlackboard blackboard = new DistributedBlackboard();\n+  @Rule\n+  public SerializableTestName testName = new SerializableTestName();\n+\n+  @Test\n+  public void canPassDataBetweenVMs() {\n+    VM vm0 = getVM(0);\n+    VM vm1 = getVM(1);\n+\n+    vm0.invoke(\"put data in mailbox\", () -> blackboard.setMailbox(mailbox(), value()));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk0MjIzMw=="}, "originalCommit": {"oid": "7b5ff247c5936de13ebf9fb154b3698617ae1f28"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDk5MTQ2OnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/rules/DistributedBlackboard.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxNzowNFrOHZ7ETw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzoyOToxOVrOHaG6zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk0NDIwNw==", "bodyText": "DistributedBlackboard", "url": "https://github.com/apache/geode/pull/5557#discussion_r496944207", "createdAt": "2020-09-29T18:17:04Z", "author": {"login": "demery-pivotal"}, "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/rules/DistributedBlackboard.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.test.dunit.rules;\n+\n+import java.io.Serializable;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.apache.geode.test.dunit.Blackboard;\n+import org.apache.geode.test.dunit.DUnitBlackboard;\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.internal.InternalBlackboard;\n+import org.apache.geode.test.dunit.internal.InternalBlackboardImpl;\n+\n+/**\n+ * BlackboardRule provides mailboxes and synchronization gateways for distributed tests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b5ff247c5936de13ebf9fb154b3698617ae1f28"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzEzODM4Mw==", "bodyText": "Thanks for catching that!", "url": "https://github.com/apache/geode/pull/5557#discussion_r497138383", "createdAt": "2020-09-29T23:29:19Z", "author": {"login": "kirklund"}, "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/rules/DistributedBlackboard.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.test.dunit.rules;\n+\n+import java.io.Serializable;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.apache.geode.test.dunit.Blackboard;\n+import org.apache.geode.test.dunit.DUnitBlackboard;\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.internal.InternalBlackboard;\n+import org.apache.geode.test.dunit.internal.InternalBlackboardImpl;\n+\n+/**\n+ * BlackboardRule provides mailboxes and synchronization gateways for distributed tests.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk0NDIwNw=="}, "originalCommit": {"oid": "7b5ff247c5936de13ebf9fb154b3698617ae1f28"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4648, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}