{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDE3NDg1", "number": 4618, "title": "GEODE-7663: Fix delta update inconsistency in client cache.", "bodyText": "When performing delta update on client, there is a possibility that\nsome delta update is not yet applied on client cache.\nIf apply delta update, some queued delta update would be lost -- as\nentry versioning will discard these delta updates when received later.\nNow it will check if there is a versioning mismatch, if it happened,\nthe full value from server will be applied instead of just the delta.", "createdAt": "2020-01-22T19:12:10Z", "url": "https://github.com/apache/geode/pull/4618", "merged": true, "mergeCommit": {"oid": "51a8039c91cd329895b3ab4703f3e92b6c487f5b"}, "closed": true, "closedAt": "2020-01-24T19:06:04Z", "author": {"login": "pivotal-eshu"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb86ikLAH2gAyMzY2MDE3NDg1OjBmNjAxNzJkZGNiNDI3YWY0NzFhMDYyYTU2MDYzMWU5MTEwYjYwNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9jnC1AFqTM0ODE1NTQ1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f60172ddcb427af471a062a560631e9110b6069", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/0f60172ddcb427af471a062a560631e9110b6069", "committedDate": "2020-01-22T19:02:38Z", "message": "GEODE-7663: Fix delta update inconsistency in client cache.\n\n * When performing delta update on client, there is a possibility that\n   some delta update is not yet applied on client cache.\n * If apply delta update, some queued delta update would be lost -- as\n   entry versioning will discard these delta updates when received later.\n * Now it will check if there is a versioning mismatch, if it happened,\n   the full value from server will be applied instead of just the delta."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDkxNjM1", "url": "https://github.com/apache/geode/pull/4618#pullrequestreview-347491635", "createdAt": "2020-01-23T17:51:16Z", "commit": {"oid": "0f60172ddcb427af471a062a560631e9110b6069"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzo1MToxNlrOFhHOcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzo1MToxNlrOFhHOcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NTcxNQ==", "bodyText": "I think this method can be entirely removed now that there is an event field in the test, and calls to it can be replaced with usages of the field.", "url": "https://github.com/apache/geode/pull/4618#discussion_r370265715", "createdAt": "2020-01-23T17:51:16Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/test/java/org/apache/geode/cache/client/internal/PutOpJUnitTest.java", "diffHunk": "@@ -16,19 +16,38 @@\n \n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n+import org.junit.Before;\n import org.junit.Test;\n-import org.mockito.Mockito;\n \n import org.apache.geode.cache.Operation;\n import org.apache.geode.internal.cache.EntryEventImpl;\n import org.apache.geode.internal.cache.EventID;\n+import org.apache.geode.internal.cache.RegionEntry;\n+import org.apache.geode.internal.cache.versions.VersionStamp;\n+import org.apache.geode.internal.cache.versions.VersionTag;\n \n public class PutOpJUnitTest {\n+  private final EntryEventImpl event = mock(EntryEventImpl.class);\n+  private final VersionTag versionTag = mock(VersionTag.class);\n+  private final RegionEntry entry = mock(RegionEntry.class);\n+  private final VersionStamp versionStamp = mock(VersionStamp.class);\n+  private final Connection connection = mock(Connection.class);\n+\n+  @Before\n+  public void setup() {\n+    when(event.getEventId()).thenReturn(new EventID());\n+    when(entry.getVersionStamp()).thenReturn(versionStamp);\n+  }\n \n   private EntryEventImpl getEntryEvent() {\n-    EntryEventImpl entryEvent = Mockito.mock(EntryEventImpl.class);\n-    Mockito.when(entryEvent.getEventId()).thenReturn(new EventID());\n+    EntryEventImpl entryEvent = mock(EntryEventImpl.class);\n+    when(entryEvent.getEventId()).thenReturn(new EventID());\n     return entryEvent;\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f60172ddcb427af471a062a560631e9110b6069"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3Njk5ODA0", "url": "https://github.com/apache/geode/pull/4618#pullrequestreview-347699804", "createdAt": "2020-01-24T00:45:28Z", "commit": {"oid": "0f60172ddcb427af471a062a560631e9110b6069"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMDo0NToyOFrOFhRKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMDo0NToyOFrOFhRKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQyODU1Mw==", "bodyText": "It should be \">\" not \"!=\", in the case of \"<\", you should not call the get.", "url": "https://github.com/apache/geode/pull/4618#discussion_r370428553", "createdAt": "2020-01-24T00:45:28Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/PutOp.java", "diffHunk": "@@ -299,13 +300,39 @@ protected Object processResponse(Message msg, Connection con) throws Exception {\n           VersionTag tag = (VersionTag) msg.getPart(partIdx).getObject();\n           // we use the client's ID since we apparently don't track the server's ID in connections\n           tag.replaceNullIDs((InternalDistributedMember) con.getEndpoint().getMemberId());\n-          event.setVersionTag(tag);\n+          checkForDeltaConflictAndSetVersionTag(tag, con);\n         }\n         return oldValue;\n       }\n       return null;\n     }\n \n+    void checkForDeltaConflictAndSetVersionTag(VersionTag versionTag, Connection connection)\n+        throws Exception {\n+      RegionEntry regionEntry = ((EntryEventImpl) event).getRegionEntry();\n+      if (regionEntry == null) {\n+        event.setVersionTag(versionTag);\n+        return;\n+      }\n+      VersionStamp versionStamp = regionEntry.getVersionStamp();\n+      if (deltaSent && versionTag.getEntryVersion() != versionStamp.getEntryVersion() + 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f60172ddcb427af471a062a560631e9110b6069"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eedf5edaef9e8bc6e4f5224091979501e40acd52", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/eedf5edaef9e8bc6e4f5224091979501e40acd52", "committedDate": "2020-01-24T01:11:50Z", "message": "fix review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MTU1NDU5", "url": "https://github.com/apache/geode/pull/4618#pullrequestreview-348155459", "createdAt": "2020-01-24T18:53:38Z", "commit": {"oid": "eedf5edaef9e8bc6e4f5224091979501e40acd52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3866, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}