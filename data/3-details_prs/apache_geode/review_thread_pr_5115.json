{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NjcwMDc5", "number": 5115, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowMjoyNVrOD8l3-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToyNjozOFrOECnT2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODYxNjkwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowMjoyNVrOGVoMIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODozMzowNVrOGcBmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng==", "bodyText": "I would like to see some javadoc comments explaining both\n\nwhy a breaking change was justified, and\ndocumentation of property names and suitable values for each that need to be in this Properties object", "url": "https://github.com/apache/geode/pull/5115#discussion_r425331746", "createdAt": "2020-05-14T18:02:25Z", "author": {"login": "onichols-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NDI0MA==", "bodyText": "why a breaking change was justified\n\nThink of this change as taking something that was internal and making it public API. The original introduction of this API was intended to be public but included components that are internal thus making it effectively an internal API.", "url": "https://github.com/apache/geode/pull/5115#discussion_r425344240", "createdAt": "2020-05-14T18:24:35Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NDk1MA==", "bodyText": "documentation of property names and suitable values for each that need to be in this Properties object\n\n@mivanac If you can name these then I think it justifies the request I had to have a concrete domain object for this API rather than a wide open property bag.", "url": "https://github.com/apache/geode/pull/5115#discussion_r425344950", "createdAt": "2020-05-14T18:25:50Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1NTU1OA==", "bodyText": "As described in https://cwiki.apache.org/confluence/display/GEODE/Introduction+of+SSL+Parameter+Extension,\nidea was to implement generic solution for modification of SSL parameters. If the user wishes to manipulate SSL Parameters they would need to define class which implements new interface.\nAs such, Properties was used as generic input argument, and user will define which parameter he is interested in. For our case, parameter of interest is DISTRIBUTED_SYSTEM_ID.", "url": "https://github.com/apache/geode/pull/5115#discussion_r425655558", "createdAt": "2020-05-15T08:44:53Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5NTE3Ng==", "bodyText": "The system properties isn't really a good API though. I really think we should make a concrete class, even if over time we have to evolve it to have more information. It's controlled and strongly typed.", "url": "https://github.com/apache/geode/pull/5115#discussion_r425895176", "createdAt": "2020-05-15T15:54:56Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyMDU2OQ==", "bodyText": "@pivotal-jbarrett , you are proposing that Properties be replaced with a concrete class, wrapping a map? You did not request a change to the PR, so I'm otherwise ready to merge this as-is, and get it onto the 1.13 branch before it goes out, too.", "url": "https://github.com/apache/geode/pull/5115#discussion_r431420569", "createdAt": "2020-05-27T20:24:50Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMDA4Nw==", "bodyText": "I\u2019m not sure what the consensus is reading the threads. I see myself and a +1 in favor of something more strongly defined. I see the original PR for just properties with an approval by the same person that +1 the suggested change. shrug", "url": "https://github.com/apache/geode/pull/5115#discussion_r432030087", "createdAt": "2020-05-28T18:15:30Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMTEwMQ==", "bodyText": "I suggest we leave the argument type as Properties but mark it @Experimental and get it into 1.13.0 in that state for now", "url": "https://github.com/apache/geode/pull/5115#discussion_r432031101", "createdAt": "2020-05-28T18:17:31Z", "author": {"login": "onichols-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMzk3Nw==", "bodyText": "Then why change it at all for 1.13. It\u2019s broken now. It will be broken later if we add @experimental knowing we will change it in the next release. Might as well save the trouble and skip this PR for 1.13 entirely and do it right in 1.14.", "url": "https://github.com/apache/geode/pull/5115#discussion_r432033977", "createdAt": "2020-05-28T18:22:51Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzODMxNw==", "bodyText": "Using an internal class in a public API is \"more broken\", and we want to address that immediately.  It remains unclear what a long-term solution should look like.  Properties may be distasteful to some but seems sufficient to fix the internal API leakage.  Adding @experimental now allows us to refine the API in the future and hopefully deprecate the use of Properties someday.", "url": "https://github.com/apache/geode/pull/5115#discussion_r432038317", "createdAt": "2020-05-28T18:30:45Z", "author": {"login": "onichols-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzOTU4MA==", "bodyText": "@pivotal-jbarrett can you share a code snippet of what you think a concrete class might look like?  I don't have the domain expertise to understand how restricting the ssl properties now might bite us in the future if additional properties become needed.", "url": "https://github.com/apache/geode/pull/5115#discussion_r432039580", "createdAt": "2020-05-28T18:33:05Z", "author": {"login": "onichols-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, "originalCommit": {"oid": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDg3MDkyOnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1NDowNFrOGeHrHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMjozMjowOVrOGev0QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNjE4OA==", "bodyText": "While this addresses the compile time discovery of the value it doesn't address its typing or issues with runtime existence of the value in the map like a concrete object would. The Map contract on get says it will return null if the key does not exist. At runtime I must check for null results and respond appropriately. A non-null value must then be cast to the correct type at runtime, possibly resulting an a runtime exception. What initializes this Map with default values? If we address all those issue we now have a class.", "url": "https://github.com/apache/geode/pull/5115#discussion_r434236188", "createdAt": "2020-06-02T23:54:04Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java", "diffHunk": "@@ -216,17 +217,18 @@ public void uncaughtException(final Thread thread, final Throwable throwable) {\n   }\n \n   public static class MySSLParameterExtension implements SSLParameterExtension {\n-    DistributionConfig config;\n+    Map<SSLParameterExtensionTypes, Object> config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48c7bdf8bf54085da324312fa9ddce158b4d89af"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5Mzg4OA==", "bodyText": "@pivotal-jbarrett I have submitted changes to address this. Please re-review and provide further feedback.", "url": "https://github.com/apache/geode/pull/5115#discussion_r434893888", "createdAt": "2020-06-03T22:32:09Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java", "diffHunk": "@@ -216,17 +217,18 @@ public void uncaughtException(final Thread thread, final Throwable throwable) {\n   }\n \n   public static class MySSLParameterExtension implements SSLParameterExtension {\n-    DistributionConfig config;\n+    Map<SSLParameterExtensionTypes, Object> config;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNjE4OA=="}, "originalCommit": {"oid": "48c7bdf8bf54085da324312fa9ddce158b4d89af"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTEwMDMwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QyMzo1NDoxMFrOGexURQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToxNToxNlrOGfK6lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODQ2OQ==", "bodyText": "is it necessary for this to be a mutable class?  I don't see setDistributedSystemId called anywhere.  If the constructor and getter are sufficient, I would discourage a setter...", "url": "https://github.com/apache/geode/pull/5115#discussion_r434918469", "createdAt": "2020-06-03T23:54:10Z", "author": {"login": "onichols-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;\n+\n+public class SSLParameterExtensionContextImpl implements SSLParameterExtensionContext {\n+  private int distributedSystemId;\n+\n+  public SSLParameterExtensionContextImpl(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }\n+\n+  @Override\n+  public int getDistributedSystemId() {\n+    return distributedSystemId;\n+  }\n+\n+  public void setDistributedSystemId(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzNzg3OA==", "bodyText": "At the moment, with only one value contained, there is not a compelling reason to need a setter. But I assume it will be expanded in the future to contain other context parameters for SSL, and that users will not want to pass (n) number or arguments into the constructor. Thus, a setter. Or we can over-engineer (IMO) and create a builder for a class containing one value.\nThat said, maybe the setter at this stage is also over-engineering.", "url": "https://github.com/apache/geode/pull/5115#discussion_r435337878", "createdAt": "2020-06-04T15:15:16Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;\n+\n+public class SSLParameterExtensionContextImpl implements SSLParameterExtensionContext {\n+  private int distributedSystemId;\n+\n+  public SSLParameterExtensionContextImpl(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }\n+\n+  @Override\n+  public int getDistributedSystemId() {\n+    return distributedSystemId;\n+  }\n+\n+  public void setDistributedSystemId(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODQ2OQ=="}, "originalCommit": {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTc2NjY1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNToyNjozOFrOGfLb5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0NjowOVrOGfMaTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg==", "bodyText": "The impl class needs to be in an \"internal\" package for convention or made package private to the factory that creates it.", "url": "https://github.com/apache/geode/pull/5115#discussion_r435346406", "createdAt": "2020-06-04T15:26:38Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1Nzk5MQ==", "bodyText": "Thank you. I'll change the package.", "url": "https://github.com/apache/geode/pull/5115#discussion_r435357991", "createdAt": "2020-06-04T15:40:07Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg=="}, "originalCommit": {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MjM4Mw==", "bodyText": "Moving this to internal lessens the impact of removing the setter at this stage. I'll do that as well.", "url": "https://github.com/apache/geode/pull/5115#discussion_r435362383", "createdAt": "2020-06-04T15:46:09Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg=="}, "originalCommit": {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4057, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}