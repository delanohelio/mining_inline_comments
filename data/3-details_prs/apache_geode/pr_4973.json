{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzgyODQ5", "number": 4973, "title": "improvement/GEODE-8002 Refactor: Extract class to encapsulate concurrent execution", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-04-17T23:33:17Z", "url": "https://github.com/apache/geode/pull/4973", "merged": true, "mergeCommit": {"oid": "7dbd9705970db2fe07bff8d21ed4bd0dc00fa8b0"}, "closed": true, "closedAt": "2020-04-22T13:08:08Z", "author": {"login": "prettyClouds"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYpzlbgH2gAyNDA1MzgyODQ5OmEwZjhlNGVlMTJmYjcyZmExYTBkOTAxZjY5MzRlODIzY2MyZjBkOTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaH7MLAFqTM5ODE2NTk5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a0f8e4ee12fb72fa1a0d901f6934e823cc2f0d90", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/a0f8e4ee12fb72fa1a0d901f6934e823cc2f0d90", "committedDate": "2020-04-17T23:22:43Z", "message": "refactor looping threads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf3ab0f5b5ff849caf18cce0d34807135b9a398", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/acf3ab0f5b5ff849caf18cce0d34807135b9a398", "committedDate": "2020-04-17T23:30:00Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc29fe6ad5400e8c203deee99c88ffb4a4697684", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/bc29fe6ad5400e8c203deee99c88ffb4a4697684", "committedDate": "2020-04-17T23:31:12Z", "message": "try again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e35a26cd33f34d035548f8a87f642908602bf2", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/17e35a26cd33f34d035548f8a87f642908602bf2", "committedDate": "2020-04-20T13:51:42Z", "message": "suppress warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0163d1b0eb1257a525e54a78c7f8ccbfdc91368a", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/0163d1b0eb1257a525e54a78c7f8ccbfdc91368a", "committedDate": "2020-04-20T14:19:15Z", "message": "suppress warnings correctly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzAwNjU1", "url": "https://github.com/apache/geode/pull/4973#pullrequestreview-396700655", "createdAt": "2020-04-20T18:20:37Z", "commit": {"oid": "0163d1b0eb1257a525e54a78c7f8ccbfdc91368a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoyMDozN1rOGIhn-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoyMDozN1rOGIhn-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MjY5Ng==", "bodyText": "Should the call of Thread.yield be optional? I'm not sure you would always want this", "url": "https://github.com/apache/geode/pull/4973#discussion_r411592696", "createdAt": "2020-04-20T18:20:37Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/LoopingThreads.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n+public class LoopingThreads {\n+  private final int iterationCount;\n+  private final Function<Integer, Object>[] functions;\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public LoopingThreads(int iterationCount,\n+      Function... functions) {\n+    this.iterationCount = iterationCount;\n+    this.functions = (Function<Integer, Object>[]) functions;\n+  }\n+\n+  public void run() {\n+    CountDownLatch latch = new CountDownLatch(1);\n+    Stream<LoopingThread> loopingThreadStream = Arrays\n+        .stream(functions)\n+        .map((r) -> new LoopingThread(r, iterationCount, latch))\n+        .map((t) -> {\n+          t.start();\n+          return t;\n+        });\n+\n+    latch.countDown();\n+\n+    loopingThreadStream.forEach(loopingThread -> {\n+      try {\n+        loopingThread.join();\n+      } catch (InterruptedException e) {\n+        throw new RuntimeException(e);\n+      }\n+    });\n+\n+  }\n+\n+  private class LoopingRunnable implements Runnable {\n+    private final Function<Integer, Object> runnable;\n+    private final int iterationCount;\n+    private CountDownLatch startLatch;\n+\n+    public LoopingRunnable(Function<Integer, Object> runnable, int iterationCount,\n+        CountDownLatch startLatch) {\n+      this.runnable = runnable;\n+      this.iterationCount = iterationCount;\n+      this.startLatch = startLatch;\n+    }\n+\n+    @Override\n+    public void run() {\n+      try {\n+        startLatch.await();\n+      } catch (InterruptedException e) {\n+        throw new RuntimeException(e);\n+      }\n+      for (int i = 0; i < iterationCount; i++) {\n+        runnable.apply(i);\n+        Thread.yield();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0163d1b0eb1257a525e54a78c7f8ccbfdc91368a"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eafe5dd4bfcdb09eea2412d9e01b4c7965dd167", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/3eafe5dd4bfcdb09eea2412d9e01b4c7965dd167", "committedDate": "2020-04-20T19:15:42Z", "message": "Use LoopingThreads for Hashes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f444275b2f5cb8cc6795cf19bf91d945121264", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/22f444275b2f5cb8cc6795cf19bf91d945121264", "committedDate": "2020-04-20T19:18:51Z", "message": "rename looping threads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "948bb59f30ba0023f8e86ec895b1a5df8ce9e9aa", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/948bb59f30ba0023f8e86ec895b1a5df8ce9e9aa", "committedDate": "2020-04-20T20:23:12Z", "message": "suppress warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492b6c3248251e8ba4e8cf49c246d6a74825e3e2", "author": {"user": {"login": "prettyClouds", "name": "Murtuza Boxwala"}}, "url": "https://github.com/apache/geode/commit/492b6c3248251e8ba4e8cf49c246d6a74825e3e2", "committedDate": "2020-04-20T21:01:44Z", "message": "fix type issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTY1OTk0", "url": "https://github.com/apache/geode/pull/4973#pullrequestreview-398165994", "createdAt": "2020-04-22T13:02:06Z", "commit": {"oid": "492b6c3248251e8ba4e8cf49c246d6a74825e3e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4832, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}