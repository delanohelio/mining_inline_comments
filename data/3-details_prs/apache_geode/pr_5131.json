{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTkyMjk4", "number": 5131, "title": "GEODE-8144: endpoint identification in servers is not working", "bodyText": "Set the SNI server-name field in SSL parameters for p2p communications,\nallowing endpoint identification to work properly.\nI modified one of the SNI haproxy tests to have keystores with the\nproper subject-alternative-names for p2p communications in the docker\ncontainers and for client/server off-platform communications and enabled\nendpoint identification in the test.  I used Sai's keystore/truststore construction\nCertificateMaterial/CertStores classes to generate the stores...\n  .sanDnsName(\"geode\") // for inside the docker container\n  .sanDnsName(\"localhost\") // for inside the docker container\n  .sanIpAddress(InetAddress.getByName(\"0.0.0.0\")) // for inside the docker container\n  .sanDnsName(certName) // for client endpoint validation (locator-maeve for instance)\n\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-19T15:24:05Z", "url": "https://github.com/apache/geode/pull/5131", "merged": true, "mergeCommit": {"oid": "b22df8cf0f11b73237dd88dc1de9217f5f7cc8c3"}, "closed": true, "closedAt": "2020-05-26T14:51:19Z", "author": {"login": "bschuchardt"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci2GyuAH2gAyNDIwMTkyMjk4Ojg4ZTdmZDkzYjUwNTJmN2RiZmI3ZTVlYzdjMzQ1M2EwZDU4MjVkMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj1s5DAH2gAyNDIwMTkyMjk4OjZkYzI5ZmRjZTc1NTQ4MmIzMzQ2YWVlOTI0YjdhNGViNzg3MmZhNjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88e7fd93b5052f7dbfb7e5ec7c3453a0d5825d32", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/88e7fd93b5052f7dbfb7e5ec7c3453a0d5825d32", "committedDate": "2020-05-19T15:21:48Z", "message": "GEODE-8144: endpoint identification in servers is not working\n\nSet the SNI server-name field in SSL parameters for p2p communications,\nallowing endpoint identification to work properly.\n\nI modified one of the SNI haproxy tests to have keystores with the\nproper subject-alternative-names for p2p communications in the docker\ncontainers and for client/server off-platform communications.  I used\nSai's keystore/truststore construction CertificateMaterial/CertStores\nclasses to generate the stores...\n\n      .sanDnsName(\"geode\") // for inside the docker container\n      .sanDnsName(\"localhost\") // for inside the docker container\n      .sanIpAddress(InetAddress.getByName(\"0.0.0.0\")) // for inside the docker container\n      .sanDnsName(certName) // for client endpoint validation (locator-maeve for instance)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26827452337899bcccf3211bcb6c089a7e23cbb8", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/26827452337899bcccf3211bcb6c089a7e23cbb8", "committedDate": "2020-05-21T21:16:11Z", "message": "modified SocketCreator to look for a hostname if one is not present and endpoint verification is enabled\n\nThis fixes some problems when running in docker containers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4c6a7a1ec4a4ccca8df1d137cf3432f328cb26", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/3b4c6a7a1ec4a4ccca8df1d137cf3432f328cb26", "committedDate": "2020-05-21T22:05:42Z", "message": "removed test shell script"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjAyMDE2", "url": "https://github.com/apache/geode/pull/5131#pullrequestreview-416602016", "createdAt": "2020-05-22T02:00:30Z", "commit": {"oid": "26827452337899bcccf3211bcb6c089a7e23cbb8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowMDozMFrOGZIYsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowMDozMFrOGZIYsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNDk3OQ==", "bodyText": "This strikes me as a security issue. Let's say I issued a start server with locators=1.2.3.4, which is bad but stick with me. Then here we lookup 1.2.3.4's PTR record. What if someone has maliciously inserted themselves into my DNS resolution path, easy to do with out greater adoption of DNSSEC. So my reverse lookup finds 1.2.3.4 PTR locator1.malicious.com and adds \"locator1.malicious.com\" to the SNI and proceeds to connect. Then connection is established to what our network stack thinks is 1.2.3.4, but is really our malicious router redirecting the connection. Now the malicious host will respond with a valid signed certificate for \"locator1.malicious.com\" and we will happily verify it. Of course that assumes also that the malicious certificate is signed by someone in our chain of trust. So, not a likely attack vector since we don't trust the root signers by default but not something a service that does trust the roots should ever do.", "url": "https://github.com/apache/geode/pull/5131#discussion_r429004979", "createdAt": "2020-05-22T02:00:30Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/SocketCreator.java", "diffHunk": "@@ -791,7 +792,19 @@ private boolean setServerNames(SSLParameters modifiedParams, HostAndPort addr) {\n       return false;\n     }\n \n-    serverNames.add(new SNIHostName(addr.getHostName()));\n+    String hostName = addr.getHostName();\n+    if (this.sslConfig.doEndpointIdentification()\n+        && InetAddressValidator.getInstance().isValid(hostName)) {\n+      // endpoint validation typically uses a hostname in the sniServer parameter that the handshake\n+      // will compare against the subject alternative addresses in the server's certificate. Here\n+      // we attempt to get a hostname instead of the proffered numeric address\n+      try {\n+        hostName = InetAddress.getByName(hostName).getCanonicalHostName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26827452337899bcccf3211bcb6c089a7e23cbb8"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDAyMzQ2", "url": "https://github.com/apache/geode/pull/5131#pullrequestreview-417002346", "createdAt": "2020-05-22T15:32:07Z", "commit": {"oid": "3b4c6a7a1ec4a4ccca8df1d137cf3432f328cb26"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dc29fdce755482b3346aee924b7a4eb7872fa61", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/6dc29fdce755482b3346aee924b7a4eb7872fa61", "committedDate": "2020-05-22T17:27:26Z", "message": "sanction used of getCanonicalHostName() in SocketCreator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4552, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}