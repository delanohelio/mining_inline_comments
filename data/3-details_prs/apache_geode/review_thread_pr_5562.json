{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDE1NzYw", "number": 5562, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowOTowOFrOEoKKyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMTowOFrOEoKOQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTQ1MDk2OnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjowOTowOFrOHZFm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDo0NTo0MlrOHZw76A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2ODMxNg==", "bodyText": "I don't know why this code was changed to make the second connection (instead of the first), the old version connection. But the resulting code seems just as correct as the old code  \u2713", "url": "https://github.com/apache/geode/pull/5562#discussion_r496068316", "createdAt": "2020-09-28T16:09:08Z", "author": {"login": "Bill"}, "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "diffHunk": "@@ -92,9 +117,9 @@ protected BaseMsgStreamer createMsgStreamer(boolean mixedDestinationVersions) {\n     when(connection2.getRemoteAddress()).thenReturn(member2);\n     when(connection2.getSendBufferSize()).thenReturn(Connection.SMALL_BUFFER_SIZE);\n     if (mixedDestinationVersions) {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n     } else {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae5ed125bd6235de8cf508a3b897e0b079444e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5NTk5OQ==", "bodyText": "connection2 does not seem to be used in the test cases", "url": "https://github.com/apache/geode/pull/5562#discussion_r496195999", "createdAt": "2020-09-28T19:54:32Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "diffHunk": "@@ -92,9 +117,9 @@ protected BaseMsgStreamer createMsgStreamer(boolean mixedDestinationVersions) {\n     when(connection2.getRemoteAddress()).thenReturn(member2);\n     when(connection2.getSendBufferSize()).thenReturn(Connection.SMALL_BUFFER_SIZE);\n     if (mixedDestinationVersions) {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n     } else {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2ODMxNg=="}, "originalCommit": {"oid": "77ae5ed125bd6235de8cf508a3b897e0b079444e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3ODIxNg==", "bodyText": "@Bill the version for connection1 was already established.  The if/else statement is to establish the version for connection2.  This was a cut and paste error that I fixed.", "url": "https://github.com/apache/geode/pull/5562#discussion_r496778216", "createdAt": "2020-09-29T14:45:42Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "diffHunk": "@@ -92,9 +117,9 @@ protected BaseMsgStreamer createMsgStreamer(boolean mixedDestinationVersions) {\n     when(connection2.getRemoteAddress()).thenReturn(member2);\n     when(connection2.getSendBufferSize()).thenReturn(Connection.SMALL_BUFFER_SIZE);\n     if (mixedDestinationVersions) {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.GEODE_1_12_0);\n     } else {\n-      when(connection1.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);\n+      when(connection2.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2ODMxNg=="}, "originalCommit": {"oid": "77ae5ed125bd6235de8cf508a3b897e0b079444e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTQ1NTc1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMDoxNVrOHZFpyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMDoxNVrOHZFpyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2OTA2NA==", "bodyText": "This test could be stronger if the requested message size was MAX_MSG_SIZE + 1. As it stands this test allows a lot of wiggle-room for the implementation.", "url": "https://github.com/apache/geode/pull/5562#discussion_r496069064", "createdAt": "2020-09-28T16:10:15Z", "author": {"login": "Bill"}, "path": "geode-core/src/test/java/org/apache/geode/internal/tcp/MsgStreamerTest.java", "diffHunk": "@@ -77,6 +77,31 @@ public void streamerListReleaseWithException() throws IOException {\n     verify(pool, times(2)).releaseSenderBuffer(isA(ByteBuffer.class));\n   }\n \n+  @Test\n+  public void streamerRespectsMaxMessageSize() {\n+    InternalDistributedMember member1;\n+    member1 = new InternalDistributedMember(\"localhost\", 1234);\n+\n+    DistributionMessage message = new SerialAckedMessage();\n+    message.setRecipients(Arrays.asList(member1));\n+\n+    when(connection1.getRemoteAddress()).thenReturn(member1);\n+    when(connection1.getRemoteVersion()).thenReturn(KnownVersion.CURRENT);\n+    // create a streamer for a Connection that has a buffer size that's larger than the\n+    // biggest message we can actually send. This is picked up by the MsgStreamer to allocate\n+    // a buffer\n+    when(connection1.getSendBufferSize()).thenReturn(Connection.MAX_MSG_SIZE * 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae5ed125bd6235de8cf508a3b897e0b079444e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTQ1OTg2OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/MsgStreamer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMTowOFrOHZFsNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMTowOFrOHZFsNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2OTY4NQ==", "bodyText": "since this class is in the same package as Connection this seems like appropriate coupling \u2713", "url": "https://github.com/apache/geode/pull/5562#discussion_r496069685", "createdAt": "2020-09-28T16:11:08Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/MsgStreamer.java", "diffHunk": "@@ -129,7 +130,8 @@ public ConnectExceptions getConnectExceptions() {\n     this.stats = stats;\n     this.msg = msg;\n     this.cons = cons;\n-    this.buffer = bufferPool.acquireDirectSenderBuffer(sendBufferSize);\n+    int bufferSize = Math.min(sendBufferSize, Connection.MAX_MSG_SIZE);\n+    this.buffer = bufferPool.acquireDirectSenderBuffer(bufferSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ae5ed125bd6235de8cf508a3b897e0b079444e"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}