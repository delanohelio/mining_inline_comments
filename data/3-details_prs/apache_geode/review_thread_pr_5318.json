{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODE1NjU0", "number": 5318, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzowMDowNVrOEL3nnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzowMDowNVrOEL3nnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODgxMDUzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/internal/executor/set/SetsAndCrashesDUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzowMDowNVrOGtpqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMzowMDowNVrOGtpqVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyMTY4Ng==", "bodyText": "The HashesAndCrashes test now tests hashes, sets, and strings. Do we still need SetsAndCrashesDUnitTest?\nOr should we change HashesAndCrashes to only test hashes and add another test for strings?\nI'm okay either way but we should probably do one or the other instead of both", "url": "https://github.com/apache/geode/pull/5318#discussion_r450521686", "createdAt": "2020-07-06T23:00:05Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/internal/executor/set/SetsAndCrashesDUnitTest.java", "diffHunk": "@@ -0,0 +1,231 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.apache.geode.redis.internal.executor.set;\n+\n+import static org.apache.geode.distributed.ConfigurationProperties.MAX_WAIT_TIME_RECONNECT;\n+import static org.apache.geode.distributed.ConfigurationProperties.REDIS_BIND_ADDRESS;\n+import static org.apache.geode.distributed.ConfigurationProperties.REDIS_ENABLED;\n+import static org.apache.geode.distributed.ConfigurationProperties.REDIS_PORT;\n+import static org.apache.geode.redis.internal.GeodeRedisServer.ENABLE_REDIS_UNSUPPORTED_COMMANDS_PARAM;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Properties;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.function.Consumer;\n+\n+import io.lettuce.core.ClientOptions;\n+import io.lettuce.core.RedisClient;\n+import io.lettuce.core.api.sync.RedisCommands;\n+import io.lettuce.core.resource.ClientResources;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import org.apache.geode.cache.control.RebalanceFactory;\n+import org.apache.geode.cache.control.RebalanceResults;\n+import org.apache.geode.cache.control.ResourceManager;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.logging.internal.log4j.api.LogService;\n+import org.apache.geode.redis.session.springRedisTestApplication.config.DUnitSocketAddressResolver;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.rules.ExecutorServiceRule;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+\n+public class SetsAndCrashesDUnitTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d8c4a6972fc3dad63183350e4c039d6c981c88f"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3890, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}