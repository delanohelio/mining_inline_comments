{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjE2OTUy", "number": 5049, "title": "GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR", "bodyText": "For greater consistency across the codebase, the Region.SEPARATOR and Region.SEPARATOR_CHAR constants should be used instead of hardcoded \"/\" and '/' in region names/paths.\nAuthored-by: Donal Evans doevans@pivotal.io\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-04T22:23:56Z", "url": "https://github.com/apache/geode/pull/5049", "merged": true, "mergeCommit": {"oid": "8f0650e83e22d4c22d9bf9b15beffff0fcb451d2"}, "closed": true, "closedAt": "2020-05-09T01:44:09Z", "author": {"login": "DonalEvans"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce7EENgFqTQwNzM0ODkyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfUf35gBqjMzMTc1OTc0MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzQ4OTI1", "url": "https://github.com/apache/geode/pull/5049#pullrequestreview-407348925", "createdAt": "2020-05-07T10:35:18Z", "commit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "state": "APPROVED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDozNToxOVrOGR4mFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDo0MTo0OFrOGR4y-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNjIzMQ==", "bodyText": "Maybe just delete this line as it's commented out?.", "url": "https://github.com/apache/geode/pull/5049#discussion_r421406231", "createdAt": "2020-05-07T10:35:19Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/InterestListEndpointDUnitTest.java", "diffHunk": "@@ -284,7 +285,7 @@ public static void stopILEndpointServer() {\n       Iterator iter_prox = bs.getAcceptor().getCacheClientNotifier().getClientProxies().iterator();\n       if (iter_prox.hasNext()) {\n         CacheClientProxy proxy = (CacheClientProxy) iter_prox.next();\n-        // if (proxy._interestList._keysOfInterest.get(\"/\"+REGION_NAME) != null) {\n+        // if (proxy._interestList._keysOfInterest.get(SEPARATOR+REGION_NAME) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNjM0OA==", "bodyText": "Maybe just delete this line as it's commented out?.", "url": "https://github.com/apache/geode/pull/5049#discussion_r421406348", "createdAt": "2020-05-07T10:35:32Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/InterestListEndpointDUnitTest.java", "diffHunk": "@@ -398,9 +399,9 @@ public static void verifyIfNotInterestListEndpointAndThenPut() {\n       // only one server thats why if and not while\n       if (iter.hasNext()) {\n         CacheClientProxy proxy = (CacheClientProxy) iter.next();\n-        // if (proxy._interestList._keysOfInterest.get(\"/\"+ REGION_NAME) == null) {\n+        // if (proxy._interestList._keysOfInterest.get(SEPARATOR+ REGION_NAME) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNjYxNQ==", "bodyText": "Maybe just delete this line as it's commented out?.", "url": "https://github.com/apache/geode/pull/5049#discussion_r421406615", "createdAt": "2020-05-07T10:36:01Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/tier/sockets/RegionCloseDUnitTest.java", "diffHunk": "@@ -224,7 +225,7 @@ public String description() {\n       }\n     };\n     GeodeAwaitility.await().untilAsserted(ev);\n-    // assertNull(c.getRegion(\"/\"+clientMembershipId));\n+    // assertNull(c.getRegion(SEPARATOR+clientMembershipId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNzIwMg==", "bodyText": "Nitpick: since we're using String.format here, wouldn't it be better (performance wise) to include and extra parameter within the String instead of the concatenation?.", "url": "https://github.com/apache/geode/pull/5049#discussion_r421407202", "createdAt": "2020-05-07T10:37:07Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/QueryDataDUnitTest.java", "diffHunk": "@@ -313,7 +314,8 @@ public void testErrors() {\n           distributedSystemMXBean.queryData(regionsNotFoundOnMembersQuery, member1.getId(), 2);\n       assertThat(regionsNotFoundOnMembersResult, isJson(withJsonPath(\"$.message\",\n           equalTo(\n-              String.format(\"Cannot find regions %s in specified members\", \"/\" + regionName)))));\n+              String.format(\"Cannot find regions %s in specified members\",\n+                  SEPARATOR + regionName)))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNzUwNg==", "bodyText": "Scratch that, it's just a test...", "url": "https://github.com/apache/geode/pull/5049#discussion_r421407506", "createdAt": "2020-05-07T10:37:42Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/QueryDataDUnitTest.java", "diffHunk": "@@ -313,7 +314,8 @@ public void testErrors() {\n           distributedSystemMXBean.queryData(regionsNotFoundOnMembersQuery, member1.getId(), 2);\n       assertThat(regionsNotFoundOnMembersResult, isJson(withJsonPath(\"$.message\",\n           equalTo(\n-              String.format(\"Cannot find regions %s in specified members\", \"/\" + regionName)))));\n+              String.format(\"Cannot find regions %s in specified members\",\n+                  SEPARATOR + regionName)))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwNzIwMg=="}, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTA3MQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409071", "createdAt": "2020-05-07T10:40:53Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -245,7 +246,8 @@ public void testScenario3() throws Exception {\n       jtaObj.getRegionFromCache(\"region1\");\n \n       String current_fullpath = jtaObj.currRegion.getFullPath();\n-      assertEquals(\"failed retrieving current region fullpath\", \"/\" + DEFAULT_RGN + \"/region1\",\n+      assertEquals(\"failed retrieving current region fullpath\",\n+          SEPARATOR + DEFAULT_RGN + \"/region1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTExNQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409115", "createdAt": "2020-05-07T10:41:01Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -255,7 +257,8 @@ public void testScenario3() throws Exception {\n       assertEquals(\"get failed for corresponding put\", \"\\\"value1\\\"\", tok);\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n-      assertEquals(\"failed retrieving current region fullpath\", \"/\" + DEFAULT_RGN + \"/region1\",\n+      assertEquals(\"failed retrieving current region fullpath\",\n+          SEPARATOR + DEFAULT_RGN + \"/region1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTE0OQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409149", "createdAt": "2020-05-07T10:41:05Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -276,7 +279,7 @@ public void testScenario3() throws Exception {\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n       assertEquals(\"failed retrieving current region fullpath after txn commit\",\n-          \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+          SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTE4MQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409181", "createdAt": "2020-05-07T10:41:10Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -341,7 +344,7 @@ public void testScenario4() throws Exception {\n       String current_fullpath = jtaObj.currRegion.getFullPath();\n       assertEquals(\n           \"failed retrieving current region fullpath after doing getRegionFromCache(region1)\",\n-          \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+          SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTIyNw==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409227", "createdAt": "2020-05-07T10:41:16Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -352,7 +355,8 @@ public void testScenario4() throws Exception {\n       assertEquals(\"get value do not match with the put\", \"\\\"value1\\\"\", tok);\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n-      assertEquals(\"failed retrieving current region fullpath\", \"/\" + DEFAULT_RGN + \"/region1\",\n+      assertEquals(\"failed retrieving current region fullpath\",\n+          SEPARATOR + DEFAULT_RGN + \"/region1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTI2OQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409269", "createdAt": "2020-05-07T10:41:22Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -372,7 +376,7 @@ public void testScenario4() throws Exception {\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n       assertEquals(\"failed retirieving current region fullpath after txn rollback\",\n-          \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+          SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTMzNg==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409336", "createdAt": "2020-05-07T10:41:28Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -440,7 +444,7 @@ public void testScenario5() throws Exception {\n       // now current region should point to region1, as done from within\n       // getRegionFromCache method...\n       String current_fullpath = jtaObj.currRegion.getFullPath();\n-      assertEquals(\"failed retirieving current fullpath\", \"/\" + DEFAULT_RGN + \"/region1\",\n+      assertEquals(\"failed retirieving current fullpath\", SEPARATOR + DEFAULT_RGN + \"/region1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTM4Mg==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409382", "createdAt": "2020-05-07T10:41:34Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -454,7 +458,7 @@ public void testScenario5() throws Exception {\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n       assertEquals(\"failed retrieving current fullpath, current fullpath: \" + current_fullpath,\n-          \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+          SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTQyNQ==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409425", "createdAt": "2020-05-07T10:41:39Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -505,7 +509,7 @@ public void testScenario5() throws Exception {\n         String current_fullpath = jtaObj.currRegion.getFullPath();\n         assertEquals(\n             \"failed retrieving current fullpath after rollback, fullpath is: \" + current_fullpath,\n-            \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+            SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTQ3Ng==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409476", "createdAt": "2020-05-07T10:41:43Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -577,7 +582,8 @@ public void testScenario7() throws Exception {\n       assertEquals(\"get value mismatch with put\", \"\\\"value1\\\"\", tok);\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n-      assertEquals(\"failed retrieving current region fullpath\", \"/\" + DEFAULT_RGN + \"/region1\",\n+      assertEquals(\"failed retrieving current region fullpath\",\n+          SEPARATOR + DEFAULT_RGN + \"/region1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQwOTUyOA==", "bodyText": "Did you miss this one?, shouldn't it be SEPARATOR + DEFAULT_RGN + SEPARATOR + \"region1\"?", "url": "https://github.com/apache/geode/pull/5049#discussion_r421409528", "createdAt": "2020-05-07T10:41:48Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/internal/jta/functional/CacheJUnitTest.java", "diffHunk": "@@ -590,7 +596,7 @@ public void testScenario7() throws Exception {\n \n       current_fullpath = jtaObj.currRegion.getFullPath();\n       assertEquals(\"failed retrieving current region fullpath after txn commit, fullpath is: \"\n-          + current_region, \"/\" + DEFAULT_RGN + \"/region1\", current_fullpath);\n+          + current_region, SEPARATOR + DEFAULT_RGN + \"/region1\", current_fullpath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjIwNjYz", "url": "https://github.com/apache/geode/pull/5049#pullrequestreview-407620663", "createdAt": "2020-05-07T16:05:31Z", "commit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a6af5b4c56158d05c6aa7e99591cd8dcdc88c5c", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/3a6af5b4c56158d05c6aa7e99591cd8dcdc88c5c", "committedDate": "2020-05-08T00:01:01Z", "message": "GEODE-7864: Replace uses of hardcoded \"/\" with Region.SEPARATOR\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd780342d998392fd5198cdc1e3f416dd145d89", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/1fd780342d998392fd5198cdc1e3f416dd145d89", "committedDate": "2020-05-08T00:01:01Z", "message": "Fix typo in integration test\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83cce15db338141c12e1e82c0a14d83ed678e636", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/83cce15db338141c12e1e82c0a14d83ed678e636", "committedDate": "2020-05-05T16:05:46Z", "message": "Fix typo in integration test\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}, "afterCommit": {"oid": "3f81ddb68654a32878250efae2d771c82a7a71cd", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/3f81ddb68654a32878250efae2d771c82a7a71cd", "committedDate": "2020-05-08T16:07:44Z", "message": "Applying review feedback\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00bd6e18c9d773a4dbde94a7d8ecd1865eee6e3c", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/00bd6e18c9d773a4dbde94a7d8ecd1865eee6e3c", "committedDate": "2020-05-08T16:30:25Z", "message": "Applying review feedback\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f81ddb68654a32878250efae2d771c82a7a71cd", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/3f81ddb68654a32878250efae2d771c82a7a71cd", "committedDate": "2020-05-08T16:07:44Z", "message": "Applying review feedback\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}, "afterCommit": {"oid": "00bd6e18c9d773a4dbde94a7d8ecd1865eee6e3c", "author": {"user": {"login": "DonalEvans", "name": "Donal Evans"}}, "url": "https://github.com/apache/geode/commit/00bd6e18c9d773a4dbde94a7d8ecd1865eee6e3c", "committedDate": "2020-05-08T16:30:25Z", "message": "Applying review feedback\n\nAuthored-by: Donal Evans <doevans@pivotal.io>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4674, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}