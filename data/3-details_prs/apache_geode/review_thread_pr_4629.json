{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTA1NjI5", "number": 4629, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTo1NToxOFrODfmZFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0NDo0NlrODfnmoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDYxNDYxOnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/tcp/TCPConduitDUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTo1NToxOFrOFpZVDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTo1NToxOFrOFpZVDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1MDkyNw==", "bodyText": "can this be turned into an await()?  Thread.sleep() often causes tests to fail.", "url": "https://github.com/apache/geode/pull/4629#discussion_r378950927", "createdAt": "2020-02-13T15:55:18Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/tcp/TCPConduitDUnitTest.java", "diffHunk": "@@ -113,6 +114,46 @@ public void basicAcceptConnection() throws Exception {\n     }\n   }\n \n+\n+  @Test\n+  public void testClosingOfSenderConnections() throws Exception {\n+    final VM vm1 = VM.getVM(1);\n+    final VM vm2 = VM.getVM(2);\n+    final VM vm3 = VM.getVM(3);\n+\n+    disconnectAllFromDS();\n+\n+    int port = startLocator();\n+    properties.put(ConfigurationProperties.LOCATORS, \"localhost[\" + port + \"]\");\n+\n+    vm1.invoke(() -> startServer(properties));\n+    vm2.invoke(() -> startServer(properties));\n+    vm3.invoke(() -> startServer(properties));\n+\n+    Thread.sleep(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDczNTk2OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNTowOFrOFpag5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo0Njo0MlrOFpdeHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDM0MA==", "bodyText": "The (!isHandShakeReader) test was added here to fix a race condition between the handshake thread and an application thread using the thread-owned Connection.  I think this test needs to remain in place.", "url": "https://github.com/apache/geode/pull/4629#discussion_r378970340", "createdAt": "2020-02-13T16:25:08Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -1692,10 +1700,8 @@ private void readMessages() {\n         }\n       }\n     } finally {\n-      if (!isHandShakeReader) {\n-        synchronized (stateLock) {\n-          connectionState = STATE_IDLE;\n-        }\n+      synchronized (stateLock) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAxODc4Mg==", "bodyText": "thanks for comments. I will return check on !isHandShakeReader.", "url": "https://github.com/apache/geode/pull/4629#discussion_r379018782", "createdAt": "2020-02-13T17:46:42Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -1692,10 +1700,8 @@ private void readMessages() {\n         }\n       }\n     } finally {\n-      if (!isHandShakeReader) {\n-        synchronized (stateLock) {\n-          connectionState = STATE_IDLE;\n-        }\n+      synchronized (stateLock) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MDM0MA=="}, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDgwMTI5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0MToyNlrOFpbKhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzo0Nzo1NlrOFpdgmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4MDk5OA==", "bodyText": "handshakeRead and handshakeCancelled are only set to true in notifyHandshakeWaiter().  Why do we need to call that method again in this spot?", "url": "https://github.com/apache/geode/pull/4629#discussion_r378980998", "createdAt": "2020-02-13T16:41:26Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -1637,8 +1640,13 @@ private void readMessages() {\n               }\n             }\n             isHandShakeReader = true;\n-            // Once we have read the handshake the reader can go away\n-            break;\n+            notifyHandshakeWaiter(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAxOTQxNw==", "bodyText": "updated", "url": "https://github.com/apache/geode/pull/4629#discussion_r379019417", "createdAt": "2020-02-13T17:47:56Z", "author": {"login": "mivanac"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -1637,8 +1640,13 @@ private void readMessages() {\n               }\n             }\n             isHandShakeReader = true;\n-            // Once we have read the handshake the reader can go away\n-            break;\n+            notifyHandshakeWaiter(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4MDk5OA=="}, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDgxMzEyOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0NDo0NlrOFpbSVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0NDo0NlrOFpbSVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4Mjk5Nw==", "bodyText": "good change here.  It shouldn't be needed since a sharedResource will only invoke this method if isReaderThread==true but having an explicit test is a good idea.", "url": "https://github.com/apache/geode/pull/4629#discussion_r378982997", "createdAt": "2020-02-13T16:44:46Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -1637,8 +1640,13 @@ private void readMessages() {\n               }\n             }\n             isHandShakeReader = true;\n-            // Once we have read the handshake the reader can go away\n-            break;\n+            notifyHandshakeWaiter(false);\n+            // Once we have read the handshake for unshared connections, the reader can skip\n+            // processing messages\n+            if (!sharedResource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e9c7d46e58ef1fc08a7ad7bacd9356aa70ff225"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3716, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}