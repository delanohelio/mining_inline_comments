{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MDU5ODEw", "number": 5821, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDoxODo0OFrOFCk7MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMjo0M1rOFDGJ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjQ2NDQ5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/AbstractGatewaySender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDoxODo0OFrOIB0XEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDoxODo0OFrOIB0XEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc3NzM2MQ==", "bodyText": "Refer line#1035", "url": "https://github.com/apache/geode/pull/5821#discussion_r538777361", "createdAt": "2020-12-08T20:18:48Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/AbstractGatewaySender.java", "diffHunk": "@@ -1068,8 +1068,8 @@ public void distribute(EnumListenerEvent operation, EntryEventImpl event,\n           if (isDebugEnabled) {\n             logger.debug(\"Returning back without putting into the gateway sender queue:\" + event);\n           }\n-          if (this.eventProcessor != null) {\n-            this.eventProcessor.registerEventDroppedInPrimaryQueue(event);\n+          if (this.eventProcessor != null && this.isPrimary()) {\n+            recordDroppedEvent(clonedEvent);\n           }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ed0c93e122d081ef2549333f7bd26a5b3d6d50a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTExODA4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo0NToyNlrOICLlqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTo0NToyNlrOICLlqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE1NzkzMA==", "bodyText": "Same logic as in basicHandlePrimaryEntry", "url": "https://github.com/apache/geode/pull/5821#discussion_r539157930", "createdAt": "2020-12-09T09:45:26Z", "author": {"login": "nabarunnag"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "diffHunk": "@@ -638,6 +639,17 @@ protected boolean basicHandlePrimaryDestroy(final EventID eventId) {\n         ew.event.release();\n         statistics.incUnprocessedEventsRemovedByPrimary();\n         return true;\n+      } else if (addToUnprocessedTokens) {\n+        // Secondary event may not have arrived\n+        Long mapValue =\n+            Long.valueOf(System.currentTimeMillis() + AbstractGatewaySender.TOKEN_TIMEOUT);\n+        Long oldv = this.unprocessedTokens.put(eventId, mapValue);\n+        if (oldv == null) {\n+          statistics.incUnprocessedTokensAddedByPrimary();\n+        } else {\n+          // its ok for oldv to be non-null\n+          // this shouldn't happen anymore @todo add an assertion here\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5953baa6de17ff13d1342b60559f15a7b3a952b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzgyNDI1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowMzo0MlrOICksMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowMzo0MlrOICksMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2OTIwMw==", "bodyText": "This empty block can probably be replaced with just a comment.", "url": "https://github.com/apache/geode/pull/5821#discussion_r539569203", "createdAt": "2020-12-09T19:03:42Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "diffHunk": "@@ -638,6 +639,17 @@ protected boolean basicHandlePrimaryDestroy(final EventID eventId) {\n         ew.event.release();\n         statistics.incUnprocessedEventsRemovedByPrimary();\n         return true;\n+      } else if (addToUnprocessedTokens) {\n+        // Secondary event may not have arrived\n+        Long mapValue =\n+            Long.valueOf(System.currentTimeMillis() + AbstractGatewaySender.TOKEN_TIMEOUT);\n+        Long oldv = this.unprocessedTokens.put(eventId, mapValue);\n+        if (oldv == null) {\n+          statistics.incUnprocessedTokensAddedByPrimary();\n+        } else {\n+          // its ok for oldv to be non-null\n+          // this shouldn't happen anymore @todo add an assertion here\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5953baa6de17ff13d1342b60559f15a7b3a952b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzgyNDg5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowMzo1MlrOICkskQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowMzo1MlrOICkskQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2OTI5Nw==", "bodyText": "This can just be Long mapValue = System.currentTimeMillis() + AbstractGatewaySender.TOKEN_TIMEOUT;", "url": "https://github.com/apache/geode/pull/5821#discussion_r539569297", "createdAt": "2020-12-09T19:03:52Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/serial/SerialGatewaySenderEventProcessor.java", "diffHunk": "@@ -638,6 +639,17 @@ protected boolean basicHandlePrimaryDestroy(final EventID eventId) {\n         ew.event.release();\n         statistics.incUnprocessedEventsRemovedByPrimary();\n         return true;\n+      } else if (addToUnprocessedTokens) {\n+        // Secondary event may not have arrived\n+        Long mapValue =\n+            Long.valueOf(System.currentTimeMillis() + AbstractGatewaySender.TOKEN_TIMEOUT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5953baa6de17ff13d1342b60559f15a7b3a952b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Nzg0MTc3OnYy", "diffSide": "RIGHT", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/serial/SerialWANPersistenceEnabledGatewaySenderDUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowNzo0MlrOICk2Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowNzo0MlrOICk2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MTc5MA==", "bodyText": "These variables are never used, so I think it should be okay to change these to just\nvm4.invoke(\"Creating DS\", () -> WANTestBase.createSenderWithDiskStore(\"ln\", 2, false, 100, 10, \nfalse, true, null, null, true));\nvm5.invoke(\"Creating DS\", () -> WANTestBase.createSenderWithDiskStore(\"ln\", 2, false, 100, 10, \nfalse, true, null, null, true));", "url": "https://github.com/apache/geode/pull/5821#discussion_r539571790", "createdAt": "2020-12-09T19:07:42Z", "author": {"login": "DonalEvans"}, "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/serial/SerialWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -577,17 +577,15 @@ public void testReplicatedRegionPersistentWanGateway_restartSenderWithCleanQueue\n     Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n \n     createCacheInVMs(nyPort, vm2, vm3);\n-    createReceiverInVMs(vm2, vm3);\n \n     createCacheInVMs(lnPort, vm4, vm5, vm6, vm7);\n \n-    String firstDStore = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n-        false, 100, 10, false, true, null, null, true));\n-    String secondDStore = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n-        false, 100, 10, false, true, null, null, true));\n-\n-    logger.info(\"The first ds is \" + firstDStore);\n-    logger.info(\"The second ds is \" + secondDStore);\n+    String firstDStore =\n+        (String) vm4.invoke(\"Creating DS\", () -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+            false, 100, 10, false, true, null, null, true));\n+    String secondDStore =\n+        (String) vm5.invoke(\"Creating DS\", () -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+            false, 100, 10, false, true, null, null, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5953baa6de17ff13d1342b60559f15a7b3a952b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzkwODc0OnYy", "diffSide": "RIGHT", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/serial/SerialWANPersistenceEnabledGatewaySenderDUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMjo0M1rOIClcTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMjo0M1rOIClcTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4MTUxOQ==", "bodyText": "The compiler warning here can be fixed by using AsyncInvocation<?> inv1.", "url": "https://github.com/apache/geode/pull/5821#discussion_r539581519", "createdAt": "2020-12-09T19:22:43Z", "author": {"login": "DonalEvans"}, "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/serial/SerialWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -605,26 +603,21 @@ public void testReplicatedRegionPersistentWanGateway_restartSenderWithCleanQueue\n     vm7.invoke(() -> WANTestBase.createPersistentReplicatedRegion(getTestMethodName() + \"_RR\", \"ln\",\n         isOffHeap()));\n \n-    vm4.invoke(() -> WANTestBase.pauseSender(\"ln\"));\n-    vm5.invoke(() -> WANTestBase.pauseSender(\"ln\"));\n-\n-    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName() + \"_RR\", 1000));\n-\n-    logger.info(\"Completed puts in the region\");\n+    vm4.invoke(\"Puts in the region\" + getTestMethodName() + \"_RR\",\n+        () -> WANTestBase.doPuts(getTestMethodName() + \"_RR\", 1000));\n \n-    vm4.invoke(() -> WANTestBase.stopSender(\"ln\"));\n-    vm5.invoke(() -> WANTestBase.stopSender(\"ln\"));\n \n+    vm4.invoke(\"Stopping ln sender\", () -> WANTestBase.stopSender(\"ln\"));\n+    vm5.invoke(\"Stopping ln sender\", () -> WANTestBase.stopSender(\"ln\"));\n \n-    logger.info(\"Stopped all the senders. \");\n-\n-    AsyncInvocation inv1 = vm4.invokeAsync(() -> WANTestBase.startSenderwithCleanQueues(\"ln\"));\n-    logger.info(\"Started the sender in vm 4\");\n+    createReceiverInVMs(vm2, vm3);\n \n-    vm5.invoke(() -> WANTestBase.startSenderwithCleanQueues(\"ln\"));\n-    logger.info(\"Started the sender in vm 5\");\n+    AsyncInvocation inv1 = vm4.invokeAsync(\"Starting sender with clean queues\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5953baa6de17ff13d1342b60559f15a7b3a952b"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4544, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}