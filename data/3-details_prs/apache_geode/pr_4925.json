{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTYwNzM1", "number": 4925, "title": "GEODE-7852: test SNI client agin a geode (2-node) cluster", "bodyText": "Automated tests for GEODE-7852: this PR sets up a dockerized 2-node Geode cluster and uses groups to target content to one node or the other.\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?", "createdAt": "2020-04-08T00:07:19Z", "url": "https://github.com/apache/geode/pull/4925", "merged": true, "mergeCommit": {"oid": "4f2a6047d5b272982595e3b7e71c624d61c69415"}, "closed": true, "closedAt": "2020-04-09T18:17:12Z", "author": {"login": "Bill"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVsabhgFqTM5MDIzMjE2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV-sabgBqjMyMTg5NDQ4MzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjMyMTY0", "url": "https://github.com/apache/geode/pull/4925#pullrequestreview-390232164", "createdAt": "2020-04-08T18:36:45Z", "commit": {"oid": "5f2e10550267faf00c85d4fc259779cd6d202555"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODozNjo0NVrOGC7-QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo0MjowMlrOGC8KoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczMjkyOQ==", "bodyText": "I would not have spelled that name correctly, kudos William", "url": "https://github.com/apache/geode/pull/4925#discussion_r405732929", "createdAt": "2020-04-08T18:36:45Z", "author": {"login": "echobravopapa"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java", "diffHunk": "@@ -87,7 +87,7 @@ public void connectToSNIProxyDocker() {\n         .port(15443)\n         .getExternalPort();\n     ClientCache cache = new ClientCacheFactory(gemFireProps)\n-        .addPoolLocator(\"locator\", 10334)\n+        .addPoolLocator(\"locator-maeve\", 10334)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f2e10550267faf00c85d4fc259779cd6d202555"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNjA5Ng==", "bodyText": "other than a reason to reference clementine what is dualServerTest2 accomplishing?\nI wonder if a test that is meant to fail where we attempt to cross the streams would be a useful addition....", "url": "https://github.com/apache/geode/pull/4925#discussion_r405736096", "createdAt": "2020-04-08T18:42:02Z", "author": {"login": "echobravopapa"}, "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/DualServerSNIAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.client.sni;\n+\n+import static com.palantir.docker.compose.execution.DockerComposeExecArgument.arguments;\n+import static com.palantir.docker.compose.execution.DockerComposeExecOption.options;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_ENABLED_COMPONENTS;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_ENDPOINT_IDENTIFICATION_ENABLED;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_KEYSTORE_TYPE;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_REQUIRE_AUTHENTICATION;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE;\n+import static org.apache.geode.distributed.ConfigurationProperties.SSL_TRUSTSTORE_PASSWORD;\n+import static org.apache.geode.test.util.ResourceUtils.createTempFileFromResource;\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Properties;\n+\n+import com.palantir.docker.compose.DockerComposeRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TestRule;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.client.ClientCache;\n+import org.apache.geode.cache.client.ClientCacheFactory;\n+import org.apache.geode.cache.client.ClientRegionShortcut;\n+import org.apache.geode.cache.client.proxy.ProxySocketFactories;\n+import org.apache.geode.test.junit.rules.IgnoreOnWindowsRule;\n+\n+public class DualServerSNIAcceptanceTest {\n+\n+  private static final URL DOCKER_COMPOSE_PATH =\n+      ClientSNIAcceptanceTest.class.getResource(\"docker-compose.yml\");\n+\n+  // Docker compose does not work on windows in CI. Ignore this test on windows\n+  // Using a RuleChain to make sure we ignore the test before the rule comes into play\n+  @ClassRule\n+  public static TestRule ignoreOnWindowsRule = new IgnoreOnWindowsRule();\n+\n+  @Rule\n+  public DockerComposeRule docker = DockerComposeRule.builder()\n+      .file(DOCKER_COMPOSE_PATH.getPath())\n+      .build();\n+\n+  private Properties gemFireProps;\n+  private ClientCache cache;\n+\n+  @Before\n+  public void before() throws IOException, InterruptedException {\n+    docker.exec(options(\"-T\"), \"geode\",\n+        arguments(\"gfsh\", \"run\", \"--file=/geode/scripts/geode-starter-2.gfsh\"));\n+\n+    final String trustStorePath =\n+        createTempFileFromResource(ClientSNIAcceptanceTest.class,\n+            \"geode-config/truststore.jks\")\n+                .getAbsolutePath();\n+\n+    gemFireProps = new Properties();\n+    gemFireProps.setProperty(SSL_ENABLED_COMPONENTS, \"all\");\n+    gemFireProps.setProperty(SSL_KEYSTORE_TYPE, \"jks\");\n+    gemFireProps.setProperty(SSL_REQUIRE_AUTHENTICATION, \"false\");\n+\n+    gemFireProps.setProperty(SSL_TRUSTSTORE, trustStorePath);\n+    gemFireProps.setProperty(SSL_TRUSTSTORE_PASSWORD, \"geode\");\n+    gemFireProps.setProperty(SSL_ENDPOINT_IDENTIFICATION_ENABLED, \"true\");\n+  }\n+\n+\n+  @After\n+  public void after() {\n+    if (cache != null) {\n+      cache.close();\n+      cache = null;\n+    }\n+  }\n+\n+  @Test\n+  public void dualServerTest() {\n+    verifyPutAndGet(\"group-dolores\", \"region-dolores\");\n+  }\n+\n+  @Test\n+  public void dualServerTest2() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f2e10550267faf00c85d4fc259779cd6d202555"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjM3NDg2", "url": "https://github.com/apache/geode/pull/4925#pullrequestreview-390237486", "createdAt": "2020-04-08T18:44:01Z", "commit": {"oid": "5f2e10550267faf00c85d4fc259779cd6d202555"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzUwNjk3", "url": "https://github.com/apache/geode/pull/4925#pullrequestreview-390350697", "createdAt": "2020-04-08T21:37:54Z", "commit": {"oid": "71fddf503ac4e3b0b09877794c1b5d5f9c76181e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzczMTAy", "url": "https://github.com/apache/geode/pull/4925#pullrequestreview-390373102", "createdAt": "2020-04-08T22:24:04Z", "commit": {"oid": "71fddf503ac4e3b0b09877794c1b5d5f9c76181e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be80c3a93e6592547d646558342b06768a15dba5", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/be80c3a93e6592547d646558342b06768a15dba5", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE-7852-test-cluster: 2 node docker test cluster running"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4a62192d074a4ad4218e8fb9c3f1a1f552798d", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/ec4a62192d074a4ad4218e8fb9c3f1a1f552798d", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE-7852-test-cluster: using groups to target servers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c46e22e78689c93bf0e5ea4d4904e9af46d3483b", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/c46e22e78689c93bf0e5ea4d4904e9af46d3483b", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE-7852-test-cluster: add license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da42ab845271028ec400be66a81143e5a21e217f", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/da42ab845271028ec400be66a81143e5a21e217f", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE_7852-test-cluster: added negative (unreachability) tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80435bb2c8b082fdfa2b546e4fc9369928e217f2", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/80435bb2c8b082fdfa2b546e4fc9369928e217f2", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE-7852-test-cluster: added documentation describing two tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa3fd70d1feb335509a6d8338c9f62d39914bb68", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/aa3fd70d1feb335509a6d8338c9f62d39914bb68", "committedDate": "2020-04-08T22:59:24Z", "message": "GEODE-7852-test-cluster: added documentation describing two tests"}, "afterCommit": {"oid": "80435bb2c8b082fdfa2b546e4fc9369928e217f2", "author": {"user": {"login": "Bill", "name": "Bill Burcham"}}, "url": "https://github.com/apache/geode/commit/80435bb2c8b082fdfa2b546e4fc9369928e217f2", "committedDate": "2020-04-09T15:55:28Z", "message": "GEODE-7852-test-cluster: added documentation describing two tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4771, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}