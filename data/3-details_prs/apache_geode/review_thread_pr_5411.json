{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4Njc5NTI2", "number": 5411, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTowMDoxOVrOETbNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTowMDoxOVrOETbNvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODA0Mjg2OnYy", "diffSide": "RIGHT", "path": "geode-management/src/main/java/org/apache/geode/management/api/RestTemplateClusterManagementServiceTransport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTowMDoxOVrOG5J_Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTowMDoxOVrOG5J_Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4NTY0Ng==", "bodyText": "I think this comment is overly specific. If we don't set the charset, the request will use some default, but it may not be ISO-8859. I've been able to change the default on my Mac and in docker images by:\n\nsetting the LC_ALL shell variable.\nspecifying the file.encoding JVM option (which I think overrides LC_ALL, but I'm not sure).\n\nConsider removing the comment. To me, setDefaultCharset(UTF_8) is clear enough without it.\nBut if you want a comment, consider: \"... which may not be UTF-8.\"", "url": "https://github.com/apache/geode/pull/5411#discussion_r462585646", "createdAt": "2020-07-29T21:00:19Z", "author": {"login": "demery-pivotal"}, "path": "geode-management/src/main/java/org/apache/geode/management/api/RestTemplateClusterManagementServiceTransport.java", "diffHunk": "@@ -73,6 +75,27 @@\n   public RestTemplateClusterManagementServiceTransport(RestTemplate restTemplate) {\n     this.restTemplate = restTemplate;\n     this.restTemplate.setErrorHandler(DEFAULT_ERROR_HANDLER);\n+\n+    // configur the rest template to use a speciic jackson converter\n+    List<HttpMessageConverter<?>> messageConverters = restTemplate.getMessageConverters();\n+    MappingJackson2HttpMessageConverter jackson2HttpMessageConverter = messageConverters.stream()\n+        .filter(MappingJackson2HttpMessageConverter.class::isInstance)\n+        .map(MappingJackson2HttpMessageConverter.class::cast)\n+        .findFirst().orElse(null);\n+\n+    if (jackson2HttpMessageConverter == null) {\n+      jackson2HttpMessageConverter = new MappingJackson2HttpMessageConverter();\n+      messageConverters.add(jackson2HttpMessageConverter);\n+    }\n+\n+    jackson2HttpMessageConverter.setPrettyPrint(false);\n+    // the client should use a mapper that would ignore unknown properties in case the server\n+    // is a newer version than the client\n+    jackson2HttpMessageConverter\n+        .setObjectMapper(GeodeJsonMapper.getMapperIgnoringUnknownProperties());\n+    // if we don't set the default charset here, the request will use ServletRequest's default\n+    // charset which is ISO-8859", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a4eb3014b81ae99852d2477135089976de29554"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4828, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}