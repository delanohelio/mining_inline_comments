{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Njk0MTI3", "number": 5351, "title": "GEODE-8338: Redis commands may be repeated when server dies", "bodyText": "Since we have one redundant copy of the data, and since we modify the data using a function, I think we may have a data corruption issue with non-idempotent operations. What can happen is that an operation like APPEND can:\n0) executor called on non-primary redis server,\n\nmodify the primary (by sending a function exec to it),\nmodify the secondary (by sending a geode delta to it),\nthe primary server fails now (before the function executing on it completes),\nthe non-primary redis server sees the function fail and that it is marked as HA so it retries it. This time it sends it the secondary, which is the new primary, but the operation was actually done on the secondary so this retry will end up doing the operation twice.\n\nThis may be okay for certain ops (like SADD) that are idempotent (but even they could cause extra key events in the future), but for ops like APPEND we end up appending twice.\nThis will only happen when a server executing a function dies and our function service retries the function on another server because it is marked HA. The easy way to fix this is to change our function to not be HA. This is just a single one line change.\nNote that our clients can already see exceptions/errors if the server they are connected to dies. When that happens the operation they requested may have happened, and if they have multiple geode redis servers running it may have been stored and still in memory. So clients will need some logic to decide if they should redo such an operation or not (because it is already done).\nNote: By making the function non-HA, it should just give the client another case in which they need to handle a server crash. It can now be for servers they were not connected to but that were involved in performing the operation they requested.", "createdAt": "2020-07-07T21:26:42Z", "url": "https://github.com/apache/geode/pull/5351", "merged": true, "mergeCommit": {"oid": "25bb3b53fdb31a28bde5376bb105ee0ed2414c9a"}, "closed": true, "closedAt": "2020-07-10T22:31:17Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcysrrzAH2gAyNDQ1Njk0MTI3OjFmOTVlOGUxMDcyMzg3YTJmZGJjZDhkYjljMzQxMTc1MTU0OWNjOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczrFeVgFqTQ0NjcyNjU0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f95e8e1072387a2fdbcd8db9c3411751549cc8c", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/1f95e8e1072387a2fdbcd8db9c3411751549cc8c", "committedDate": "2020-07-07T21:25:50Z", "message": "GEODE-8338: Redis commands may be repeated when server dies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1d9088dc54b3c89a356446e0ae832ca2e57b902", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/b1d9088dc54b3c89a356446e0ae832ca2e57b902", "committedDate": "2020-07-07T22:02:11Z", "message": "fixed HashAndCrashes test by adding exception handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15aa38c7d12674f07a6714f1ab8efeccdde56f50", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/15aa38c7d12674f07a6714f1ab8efeccdde56f50", "committedDate": "2020-07-08T06:04:11Z", "message": "CommandFunction invoke will now retry if BucketMoved is thrown.\nAdded a sleep before returning an error that a server crashed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da6e5f7a7d000d52a431c7282c25996851c5ad5e", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/da6e5f7a7d000d52a431c7282c25996851c5ad5e", "committedDate": "2020-07-08T15:16:33Z", "message": "Adds retry logic to session dunit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce36bb81c6fd1be6ba2e19bf9a69a00fdd20ee4d", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/ce36bb81c6fd1be6ba2e19bf9a69a00fdd20ee4d", "committedDate": "2020-07-08T16:10:15Z", "message": "now retries function on PrimaryBucketException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce70326d1335bd3fd7d0ff4bd45e262490e8365", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/6ce70326d1335bd3fd7d0ff4bd45e262490e8365", "committedDate": "2020-07-08T16:40:49Z", "message": "now handles FunctionException with nested BucketMovedException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7288a5d70ab0728915547c25411ae3edcf3a55f", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/e7288a5d70ab0728915547c25411ae3edcf3a55f", "committedDate": "2020-07-08T17:02:34Z", "message": "more exception handling retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8cf6ed2308aea91cbdf202cd9db3b22dad72896", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/a8cf6ed2308aea91cbdf202cd9db3b22dad72896", "committedDate": "2020-07-08T17:37:17Z", "message": "fixed index out of bounds exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "345491c85e87d4a2d90c966b66806e1aa9ef4f66", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/345491c85e87d4a2d90c966b66806e1aa9ef4f66", "committedDate": "2020-07-08T21:23:39Z", "message": "more exception handling work\nalso fixed a race in registering the function after the region is created\nalso added retry logic to some tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5927c11499ae62a9cebc9ae94661ddf0843a5b7f", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/5927c11499ae62a9cebc9ae94661ddf0843a5b7f", "committedDate": "2020-07-08T23:18:32Z", "message": "more test retry logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7ccb675b030ae57f7bf575d85e7b052486831d5", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/e7ccb675b030ae57f7bf575d85e7b052486831d5", "committedDate": "2020-07-09T16:57:07Z", "message": "improved handling of FunctionInvocationTargetException\nwe no longer retry on this acception since the application\nneeds to decide if the op needs to be done again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37097e67bc8c941a9017619a02ca00d811844c6c", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/37097e67bc8c941a9017619a02ca00d811844c6c", "committedDate": "2020-07-09T18:10:58Z", "message": "test now do a better job of handling retry if a server departs\nremoved a sleep that was added before failing due to a server departing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29b3d9e686ef696186977850dbf253723e8f4ae", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/c29b3d9e686ef696186977850dbf253723e8f4ae", "committedDate": "2020-07-09T22:11:14Z", "message": "refactored how functions are invoked so that both\nthe CommandFunction and RenameFunction would have consistent retry logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e9ad68d2415fefabe1ffac3c42a836621b0fa90", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/8e9ad68d2415fefabe1ffac3c42a836621b0fa90", "committedDate": "2020-07-09T22:29:24Z", "message": "added missing file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1220716df44d7dee12925d147559a051e812f66", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/b1220716df44d7dee12925d147559a051e812f66", "committedDate": "2020-07-09T23:36:28Z", "message": "fixed some compiler warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eea2da922377fa0a4315cad6e16617519e5217e", "author": {"user": {"login": "dschneider-pivotal", "name": "Darrel Schneider"}}, "url": "https://github.com/apache/geode/commit/5eea2da922377fa0a4315cad6e16617519e5217e", "committedDate": "2020-07-10T17:20:45Z", "message": "changed computeWithPrimaryLocked to throw new PrimaryBucketLockException\nif it fails to lock the primary down for computation.\nThe function invoke retry logic now only retries if it sees\na PrimaryBucketLockException or if the function is not\nregistered yet."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzI2NTQ5", "url": "https://github.com/apache/geode/pull/5351#pullrequestreview-446726549", "createdAt": "2020-07-10T22:08:01Z", "commit": {"oid": "5eea2da922377fa0a4315cad6e16617519e5217e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowODowMVrOGwG-5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjowODowMVrOGwG-5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTIzOQ==", "bodyText": "I'd prefer to see this retry logic happen in the Controller, but we can make that change later.", "url": "https://github.com/apache/geode/pull/5351#discussion_r453099239", "createdAt": "2020-07-10T22:08:01Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/session/SessionDUnitTest.java", "diffHunk": "@@ -144,26 +146,51 @@ protected String createNewSessionWithNote(int sessionApp, String note) {\n     HttpHeaders requestHeaders = new HttpHeaders();\n     requestHeaders.add(\"Cookie\", sessionCookie);\n     HttpEntity<String> request2 = new HttpEntity<>(\"\", requestHeaders);\n-\n-    return new RestTemplate()\n-        .exchange(\n-            \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n-            HttpMethod.GET,\n-            request2,\n-            String[].class)\n-        .getBody();\n+    boolean sesssionObtained = false;\n+    String[] responseBody = new String[0];\n+    do {\n+      try {\n+        responseBody = new RestTemplate()\n+            .exchange(\n+                \"http://localhost:\" + ports.get(sessionApp) + \"/getSessionNotes\",\n+                HttpMethod.GET,\n+                request2,\n+                String[].class)\n+            .getBody();\n+        sesssionObtained = true;\n+      } catch (HttpServerErrorException e) {\n+        if (e.getMessage().contains(\"Internal Server Error\")) {\n+          // retry\n+        } else {\n+          throw e;\n+        }\n+      }\n+    } while (!sesssionObtained);\n+    return responseBody;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eea2da922377fa0a4315cad6e16617519e5217e"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4362, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}