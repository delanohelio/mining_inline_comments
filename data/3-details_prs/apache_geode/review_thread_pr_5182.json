{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTA2Nzc1", "number": 5182, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTozNTowOFrOEDAKsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMToyMjo0OVrOEED8ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTgzOTIwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTozNTowOFrOGfzZcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoyNDowM1rOGg6YFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwMTEzOA==", "bodyText": "pauses like this often cause tests to periodically fail in CI.  Waiting for a semaphore to be triggered by the executor thread might be better.", "url": "https://github.com/apache/geode/pull/5182#discussion_r436001138", "createdAt": "2020-06-05T15:35:08Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "diffHunk": "@@ -370,6 +371,33 @@ public void testWaitForViewInstallation() {\n         .untilAsserted(() -> assertThat(waitForViewInstallationDone.get()).isTrue());\n   }\n \n+  /**\n+   * show that waitForViewInstallation works as expected when distribution manager is closed\n+   * while waiting for the latest membership view to install\n+   */\n+  @Test\n+  public void testWaitForViewInstallationDisconnectDS() {\n+    InternalDistributedSystem system = getSystem();\n+    ClusterDistributionManager dm = (ClusterDistributionManager) system.getDM();\n+    MembershipView<InternalDistributedMember> view = dm.getDistribution().getView();\n+\n+    AtomicBoolean waitForViewInstallationDone = new AtomicBoolean();\n+    executorService.submit(() -> {\n+      try {\n+        dm.waitForViewInstallation(view.getViewId() + 1);\n+        waitForViewInstallationDone.set(true);\n+      } catch (InterruptedException e) {\n+        errorCollector.addError(e);\n+      }\n+    });\n+\n+    await().timeout(2000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "756b4592ad78226f02ea10e91b116f50d1159479"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAzMzAxNw==", "bodyText": "I don't think await() without an until of some sort does anything. It's the until clauses that start the waiting. I recommend using a CyclicBarrier to sync up the actions of the two threads and a Future to wait for completion:\nCyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n\nFuture<Void> future = executorService.submit(() -> {\n  try {\n    cyclicBarrier.await(getTimeout().toMillis(), MILLISECONDS);\n    dm.waitForViewInstallation(view.getViewId() + 1);\n  } catch (InterruptedException e) {\n    errorCollector.addError(e);\n  }\n});\n\ncyclicBarrier.await(getTimeout().toMillis(), MILLISECONDS);\nsystem.disconnect();\n\nfuture.getTimeout().toMillis(), MILLISECONDS);\n\nThere's still no guarantee that the executor thread will actually be deep inside dm.waitForViewInstallation when the main thread calls disconnect, but there will be some percentage of CI runs that are hitting this scenario as desired. So as long as the test remains passing 100% of the time, we're confident enough that the scenario is tested and passing.\nTo really guarantee the exact combination of two threads being in specific places would require some crazy test hooks down in dm and/or system which would probably require some unnatural acts of coding (not recommended). Another approach is to write an IntegrationTest or UnitTest in which some of the classes involved are mocks or spies but even then it's nice to have the dunit coverage as well.", "url": "https://github.com/apache/geode/pull/5182#discussion_r436033017", "createdAt": "2020-06-05T16:31:28Z", "author": {"login": "kirklund"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "diffHunk": "@@ -370,6 +371,33 @@ public void testWaitForViewInstallation() {\n         .untilAsserted(() -> assertThat(waitForViewInstallationDone.get()).isTrue());\n   }\n \n+  /**\n+   * show that waitForViewInstallation works as expected when distribution manager is closed\n+   * while waiting for the latest membership view to install\n+   */\n+  @Test\n+  public void testWaitForViewInstallationDisconnectDS() {\n+    InternalDistributedSystem system = getSystem();\n+    ClusterDistributionManager dm = (ClusterDistributionManager) system.getDM();\n+    MembershipView<InternalDistributedMember> view = dm.getDistribution().getView();\n+\n+    AtomicBoolean waitForViewInstallationDone = new AtomicBoolean();\n+    executorService.submit(() -> {\n+      try {\n+        dm.waitForViewInstallation(view.getViewId() + 1);\n+        waitForViewInstallationDone.set(true);\n+      } catch (InterruptedException e) {\n+        errorCollector.addError(e);\n+      }\n+    });\n+\n+    await().timeout(2000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwMTEzOA=="}, "originalCommit": {"oid": "756b4592ad78226f02ea10e91b116f50d1159479"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2NDA1NQ==", "bodyText": "Thank you both for the comments and elaborate proposal! I will update test as Kirk suggested.", "url": "https://github.com/apache/geode/pull/5182#discussion_r437164055", "createdAt": "2020-06-09T06:24:03Z", "author": {"login": "jvarenina"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "diffHunk": "@@ -370,6 +371,33 @@ public void testWaitForViewInstallation() {\n         .untilAsserted(() -> assertThat(waitForViewInstallationDone.get()).isTrue());\n   }\n \n+  /**\n+   * show that waitForViewInstallation works as expected when distribution manager is closed\n+   * while waiting for the latest membership view to install\n+   */\n+  @Test\n+  public void testWaitForViewInstallationDisconnectDS() {\n+    InternalDistributedSystem system = getSystem();\n+    ClusterDistributionManager dm = (ClusterDistributionManager) system.getDM();\n+    MembershipView<InternalDistributedMember> view = dm.getDistribution().getView();\n+\n+    AtomicBoolean waitForViewInstallationDone = new AtomicBoolean();\n+    executorService.submit(() -> {\n+      try {\n+        dm.waitForViewInstallation(view.getViewId() + 1);\n+        waitForViewInstallationDone.set(true);\n+      } catch (InterruptedException e) {\n+        errorCollector.addError(e);\n+      }\n+    });\n+\n+    await().timeout(2000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwMTEzOA=="}, "originalCommit": {"oid": "756b4592ad78226f02ea10e91b116f50d1159479"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjk0NDM1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMToyMjo0OVrOGhc8xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo0NDoyNFrOGhoz2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczMDUwMg==", "bodyText": "You can delete the catch-block and use of errorCollector in the main thread. You only need to do that inside the Runnable that you submitted. From line 400 on, it's better to just let the Exceptions percolate out of the test method and let junit catch it.", "url": "https://github.com/apache/geode/pull/5182#discussion_r437730502", "createdAt": "2020-06-09T21:22:49Z", "author": {"login": "kirklund"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "diffHunk": "@@ -370,6 +377,36 @@ public void testWaitForViewInstallation() {\n         .untilAsserted(() -> assertThat(waitForViewInstallationDone.get()).isTrue());\n   }\n \n+  /**\n+   * show that waitForViewInstallation works as expected when distribution manager is closed\n+   * while waiting for the latest membership view to install\n+   */\n+  @Test\n+  public void testWaitForViewInstallationDisconnectDS() {\n+    InternalDistributedSystem system = getSystem();\n+    ClusterDistributionManager dm = (ClusterDistributionManager) system.getDM();\n+    MembershipView<InternalDistributedMember> view = dm.getDistribution().getView();\n+\n+    CyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n+    Future future = executorService.submit(() -> {\n+      try {\n+        cyclicBarrier.await(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+        dm.waitForViewInstallation(view.getViewId() + 1);\n+      } catch (InterruptedException | BrokenBarrierException | TimeoutException e) {\n+        errorCollector.addError(e);\n+      }\n+    });\n+\n+    try {\n+      cyclicBarrier.await(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+      system.disconnect();\n+      future.get(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+    } catch (InterruptedException | TimeoutException | ExecutionException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bfa40da4785acef81eec0b5419124d731b1822b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkyNDgyNg==", "bodyText": "You are right! Done.", "url": "https://github.com/apache/geode/pull/5182#discussion_r437924826", "createdAt": "2020-06-10T07:44:24Z", "author": {"login": "jvarenina"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/internal/ClusterDistributionManagerDUnitTest.java", "diffHunk": "@@ -370,6 +377,36 @@ public void testWaitForViewInstallation() {\n         .untilAsserted(() -> assertThat(waitForViewInstallationDone.get()).isTrue());\n   }\n \n+  /**\n+   * show that waitForViewInstallation works as expected when distribution manager is closed\n+   * while waiting for the latest membership view to install\n+   */\n+  @Test\n+  public void testWaitForViewInstallationDisconnectDS() {\n+    InternalDistributedSystem system = getSystem();\n+    ClusterDistributionManager dm = (ClusterDistributionManager) system.getDM();\n+    MembershipView<InternalDistributedMember> view = dm.getDistribution().getView();\n+\n+    CyclicBarrier cyclicBarrier = new CyclicBarrier(2);\n+    Future future = executorService.submit(() -> {\n+      try {\n+        cyclicBarrier.await(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+        dm.waitForViewInstallation(view.getViewId() + 1);\n+      } catch (InterruptedException | BrokenBarrierException | TimeoutException e) {\n+        errorCollector.addError(e);\n+      }\n+    });\n+\n+    try {\n+      cyclicBarrier.await(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+      system.disconnect();\n+      future.get(getTimeout().toMillis(), TimeUnit.MILLISECONDS);\n+    } catch (InterruptedException | TimeoutException | ExecutionException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczMDUwMg=="}, "originalCommit": {"oid": "4bfa40da4785acef81eec0b5419124d731b1822b"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4113, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}