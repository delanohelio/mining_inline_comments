{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDQxNzEy", "number": 5142, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTowNToxN1rOD-cPxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoxMDowOFrOD-znkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAxMDk0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTowNToxN1rOGYi56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo1Mzo0NFrOGYxqoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDg5MA==", "bodyText": "Is the default now 6379? Also I think you want a \".\" at the end of the sentence.", "url": "https://github.com/apache/geode/pull/5142#discussion_r428390890", "createdAt": "2020-05-21T01:05:17Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java", "diffHunk": "@@ -1312,11 +1313,13 @@ static Class _getAttributeType(String attName) {\n     m.put(MEMCACHED_BIND_ADDRESS,\n         \"The address the GemFireMemcachedServer will listen on for remote connections. Default is \\\"\\\" which causes the GemFireMemcachedServer to listen on the host's default address. This property is ignored if memcached-port is \\\"0\\\".\");\n     m.put(REDIS_PORT,\n-        \"The port GeodeRedisServer will listen on. Default is 0. Set to zero to disable GeodeRedisServer.\");\n+        \"The port Redis API for Geode will listen on. Default is 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzMjczNg==", "bodyText": "Yes. Thank you for finding this!", "url": "https://github.com/apache/geode/pull/5142#discussion_r428632736", "createdAt": "2020-05-21T12:53:44Z", "author": {"login": "sabbey37"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java", "diffHunk": "@@ -1312,11 +1313,13 @@ static Class _getAttributeType(String attName) {\n     m.put(MEMCACHED_BIND_ADDRESS,\n         \"The address the GemFireMemcachedServer will listen on for remote connections. Default is \\\"\\\" which causes the GemFireMemcachedServer to listen on the host's default address. This property is ignored if memcached-port is \\\"0\\\".\");\n     m.put(REDIS_PORT,\n-        \"The port GeodeRedisServer will listen on. Default is 0. Set to zero to disable GeodeRedisServer.\");\n+        \"The port Redis API for Geode will listen on. Default is 0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDg5MA=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAxNTg4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTowODo0N1rOGYi8-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo1OTo1N1rOGYx2rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTY3Mw==", "bodyText": "For gfsh start server I thought the default would be 6379", "url": "https://github.com/apache/geode/pull/5142#discussion_r428391673", "createdAt": "2020-05-21T01:08:47Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "diffHunk": "@@ -2557,14 +2557,14 @@\n       \"The gemfire.properties file for configuring the Cache Server's distributed system. The file's path can be absolute or relative to the gfsh working directory.\";\n   public static final String START_SERVER__REDIS_PORT = ConfigurationProperties.REDIS_PORT;\n   public static final String START_SERVER__REDIS_PORT__HELP =\n-      \"Sets the port that the Geode Redis service listens on for Redis clients.\";\n+      \"Sets the port that the Redis API for Geode server listens on for Redis clients. The default is an ephemeral port\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNTgyMQ==", "bodyText": "Yes!", "url": "https://github.com/apache/geode/pull/5142#discussion_r428635821", "createdAt": "2020-05-21T12:59:57Z", "author": {"login": "sabbey37"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "diffHunk": "@@ -2557,14 +2557,14 @@\n       \"The gemfire.properties file for configuring the Cache Server's distributed system. The file's path can be absolute or relative to the gfsh working directory.\";\n   public static final String START_SERVER__REDIS_PORT = ConfigurationProperties.REDIS_PORT;\n   public static final String START_SERVER__REDIS_PORT__HELP =\n-      \"Sets the port that the Geode Redis service listens on for Redis clients.\";\n+      \"Sets the port that the Redis API for Geode server listens on for Redis clients. The default is an ephemeral port\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTY3Mw=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAxOTY1OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxMTowMVrOGYi_MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzozNDowOVrOGYy9Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA==", "bodyText": "I see this checking the password and bindAddress setting. But shouldn't it also be checking the redisPort? The comment says port and bind-address. Perhaps any redis option (including password) should enable redis.", "url": "https://github.com/apache/geode/pull/5142#discussion_r428392240", "createdAt": "2020-05-21T01:11:01Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java", "diffHunk": "@@ -301,6 +301,13 @@ ResultModel doStartServer(String memberName, Boolean assignBuckets, String bindA\n         ConfigurationProperties.HTTP_SERVICE_PORT, httpServicePort);\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n+\n+    // if redis-port or redis-bind-address are specified in the command line,\n+    // REDIS_SERVICE_ENABLED should be set to true\n+    if (StringUtils.isNotBlank(redisPassword) || StringUtils.isNotBlank(redisBindAddress)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNzcxMA==", "bodyText": "You are right. What do you think? Maybe it would make sense to enable it if any redis option is specified?", "url": "https://github.com/apache/geode/pull/5142#discussion_r428637710", "createdAt": "2020-05-21T13:03:52Z", "author": {"login": "sabbey37"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java", "diffHunk": "@@ -301,6 +301,13 @@ ResultModel doStartServer(String memberName, Boolean assignBuckets, String bindA\n         ConfigurationProperties.HTTP_SERVICE_PORT, httpServicePort);\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n+\n+    // if redis-port or redis-bind-address are specified in the command line,\n+    // REDIS_SERVICE_ENABLED should be set to true\n+    if (StringUtils.isNotBlank(redisPassword) || StringUtils.isNotBlank(redisBindAddress)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1Mzg4Mg==", "bodyText": "Updated it!", "url": "https://github.com/apache/geode/pull/5142#discussion_r428653882", "createdAt": "2020-05-21T13:34:09Z", "author": {"login": "sabbey37"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java", "diffHunk": "@@ -301,6 +301,13 @@ ResultModel doStartServer(String memberName, Boolean assignBuckets, String bindA\n         ConfigurationProperties.HTTP_SERVICE_PORT, httpServicePort);\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n+\n+    // if redis-port or redis-bind-address are specified in the command line,\n+    // REDIS_SERVICE_ENABLED should be set to true\n+    if (StringUtils.isNotBlank(redisPassword) || StringUtils.isNotBlank(redisBindAddress)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAyMzAxOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxMzoyMVrOGYjBQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowODoyMFrOGYyGmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5Mjc2OQ==", "bodyText": "Should this use RANDOM_PORT_INDICATOR instead of 0?", "url": "https://github.com/apache/geode/pull/5142#discussion_r428392769", "createdAt": "2020-05-21T01:13:21Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -241,7 +241,7 @@ private int setNumWorkerThreads() {\n    * to the first non-loopback address\n    */\n   public GeodeRedisServer() {\n-    this(null, -1, null);\n+    this(null, 0, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzOTg5OQ==", "bodyText": "Definitely.", "url": "https://github.com/apache/geode/pull/5142#discussion_r428639899", "createdAt": "2020-05-21T13:08:20Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -241,7 +241,7 @@ private int setNumWorkerThreads() {\n    * to the first non-loopback address\n    */\n   public GeodeRedisServer() {\n-    this(null, -1, null);\n+    this(null, 0, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5Mjc2OQ=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAyNjc2OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToxNTo1M1rOGYjDnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowOTozNFrOGYyJBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzM3NQ==", "bodyText": "Is it correct that if it is < RANDOM_PORT_INDICATOR it will use the default? I couldn't find the code that made that happen but it seems odd if I say -33456 it will listen on 6379. I think I'd prefer an IllegalArgumentException", "url": "https://github.com/apache/geode/pull/5142#discussion_r428393375", "createdAt": "2020-05-21T01:15:53Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -275,7 +275,8 @@ public GeodeRedisServer(String bindAddress, int port) {\n    *\n    * @param bindAddress The address to which the server will attempt to bind to\n    * @param port The port the server will bind to, will use {@value #DEFAULT_REDIS_SERVER_PORT}\n-   *        by default if argument is less than -1. If the port is {@value #RANDOM_PORT_INDICATOR}\n+   *        by default if argument is less than {@value #RANDOM_PORT_INDICATOR}. If the port is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MDUxNg==", "bodyText": "That is currently what happens. I like what you're suggesting though.", "url": "https://github.com/apache/geode/pull/5142#discussion_r428640516", "createdAt": "2020-05-21T13:09:34Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -275,7 +275,8 @@ public GeodeRedisServer(String bindAddress, int port) {\n    *\n    * @param bindAddress The address to which the server will attempt to bind to\n    * @param port The port the server will bind to, will use {@value #DEFAULT_REDIS_SERVER_PORT}\n-   *        by default if argument is less than -1. If the port is {@value #RANDOM_PORT_INDICATOR}\n+   *        by default if argument is less than {@value #RANDOM_PORT_INDICATOR}. If the port is", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzM3NQ=="}, "originalCommit": {"oid": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTg0MDE4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoxMDowOFrOGZIgyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo0NTo1N1rOGZXqNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNzA1MA==", "bodyText": "Why add in the word \"service\" here? Why not just \"redis-enabled\". None of the other redis properties use the word \"service\". I think consistent naming conventions are really important to avoid confusion.", "url": "https://github.com/apache/geode/pull/5142#discussion_r429007050", "createdAt": "2020-05-22T02:10:08Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java", "diffHunk": "@@ -1943,6 +1931,36 @@\n    * <U>Default</U>: \"\"\n    */\n   String REDIS_PASSWORD = \"redis-password\";\n+  /**\n+   * The static String definition of the <i>\"redis-port\"</i> property <a name=\"redis-port\"/a>\n+   * </p>\n+   * <U>Description</U>: Specifies the port used by Redis API for Geode which enables Redis\n+   * clients to connect and store data in GemFire distributed system. A value of 0 will select a\n+   * random port.\n+   * </p>\n+   * <U>Default</U>: \"6379\"\n+   * </p>\n+   * <U>Allowed values</U>: 0..65535\n+   */\n+  String REDIS_PORT = \"redis-port\";\n+  /**\n+   * The static String definition of the <i>\"redis-service-enabled\"</i> property <a\n+   * name=\"redis-service-enabled\"/a>\n+   * </p>\n+   * <U>Description</U>: When the default value of false, the Redis API for Geode is not available.\n+   * Set to true to enable the Redis API for Geode.</td>\n+   * </p>\n+   * <U>Default</U>: false\n+   * <td>redis-service-enabled</td>\n+   * <td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.\n+   * Set\n+   * to true to enable the Redis API for <%=vars.product_name%>.</td>\n+   * <td>S</td>\n+   * <td>false</td>\n+   * </tr>\n+   * </p>\n+   */\n+  String REDIS_SERVICE_ENABLED = \"redis-service-enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9538c719bf89c6033b02e4e9d1258e9548cf95a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NTIyMQ==", "bodyText": "Yeah, we can make it redis-enabled", "url": "https://github.com/apache/geode/pull/5142#discussion_r429255221", "createdAt": "2020-05-22T13:45:57Z", "author": {"login": "sabbey37"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java", "diffHunk": "@@ -1943,6 +1931,36 @@\n    * <U>Default</U>: \"\"\n    */\n   String REDIS_PASSWORD = \"redis-password\";\n+  /**\n+   * The static String definition of the <i>\"redis-port\"</i> property <a name=\"redis-port\"/a>\n+   * </p>\n+   * <U>Description</U>: Specifies the port used by Redis API for Geode which enables Redis\n+   * clients to connect and store data in GemFire distributed system. A value of 0 will select a\n+   * random port.\n+   * </p>\n+   * <U>Default</U>: \"6379\"\n+   * </p>\n+   * <U>Allowed values</U>: 0..65535\n+   */\n+  String REDIS_PORT = \"redis-port\";\n+  /**\n+   * The static String definition of the <i>\"redis-service-enabled\"</i> property <a\n+   * name=\"redis-service-enabled\"/a>\n+   * </p>\n+   * <U>Description</U>: When the default value of false, the Redis API for Geode is not available.\n+   * Set to true to enable the Redis API for Geode.</td>\n+   * </p>\n+   * <U>Default</U>: false\n+   * <td>redis-service-enabled</td>\n+   * <td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.\n+   * Set\n+   * to true to enable the Redis API for <%=vars.product_name%>.</td>\n+   * <td>S</td>\n+   * <td>false</td>\n+   * </tr>\n+   * </p>\n+   */\n+  String REDIS_SERVICE_ENABLED = \"redis-service-enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNzA1MA=="}, "originalCommit": {"oid": "e9538c719bf89c6033b02e4e9d1258e9548cf95a"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}