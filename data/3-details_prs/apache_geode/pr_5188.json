{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MzgyMTky", "number": 5188, "title": "GEODE-8099: add dlock around cms create/delete operations.", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-05-30T00:10:35Z", "url": "https://github.com/apache/geode/pull/5188", "merged": true, "mergeCommit": {"oid": "0f763eadfbbe4ce25c0628370199ba0850f6d630"}, "closed": true, "closedAt": "2020-06-15T23:51:29Z", "author": {"login": "jinmeiliao"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnI9N1ABqjMzOTUyNTQyMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrpkqrgFqTQzMTA2NzE0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7958cb452ba210d0e8eafe0d59795aa323538703", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/7958cb452ba210d0e8eafe0d59795aa323538703", "committedDate": "2020-05-30T00:10:13Z", "message": "GEODE-8099: add dlock around cms create/delete operations."}, "afterCommit": {"oid": "1344f6c2a2f054520c5cacec585fce9f066019d7", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/1344f6c2a2f054520c5cacec585fce9f066019d7", "committedDate": "2020-06-01T21:08:28Z", "message": "GEODE-8099: add dlock around cms create/delete operations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51249618c93781f7637d3ebc84eed92f27dca2b8", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/51249618c93781f7637d3ebc84eed92f27dca2b8", "committedDate": "2020-06-02T16:00:49Z", "message": "GEODE-8099: add dlock around cms create/delete operations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTU4MDYw", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-422958060", "createdAt": "2020-06-02T18:39:48Z", "commit": {"oid": "1344f6c2a2f054520c5cacec585fce9f066019d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODozOTo0OVrOGd_RrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTowODo0NlrOGeAQhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5ODYwNA==", "bodyText": "This code change could loose code coverage for the constructor LocatorClusterManagementService(InternalCache cache, InternalConfigurationPersistenceService persistenceService). I don't see this constructor is covered anywhere else.", "url": "https://github.com/apache/geode/pull/5188#discussion_r434098604", "createdAt": "2020-06-02T18:39:49Z", "author": {"login": "jchen21"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java", "diffHunk": "@@ -125,22 +127,48 @@ public void before() throws Exception {\n     doReturn(true).when(persistenceService).lockSharedConfiguration();\n     doNothing().when(persistenceService).unlockSharedConfiguration();\n     operationManager = mock(OperationManager.class);\n+    dLockService = mock(DistributedLockService.class);\n+\n     service =\n         spy(new LocatorClusterManagementService(cache, persistenceService, managers, validators,\n             memberValidator, cacheElementValidator, operationManager));\n+    doReturn(dLockService).when(service).getCmsDlockService();\n \n     regionConfig = new Region();\n     regionConfig.setName(\"region1\");\n \n     rebalanceOperation = new RebalanceOperation();\n   }\n \n+  @Test\n+  public void lockAndUnlockCalledAtCreate() {\n+    try {\n+      service.create(regionConfig);\n+    } catch (Exception ignore) {\n+    }\n+\n+    verify(dLockService).lock(LocatorClusterManagementService.CMS_NAME, -1, -1);\n+    verify(dLockService).unlock(LocatorClusterManagementService.CMS_NAME);\n+  }\n+\n+  @Test\n+  public void lockAndUnlockCalledAtDelete() {\n+    try {\n+      service.delete(regionConfig);\n+    } catch (Exception ignore) {\n+    }\n+\n+    verify(dLockService).lock(LocatorClusterManagementService.CMS_NAME, -1, -1);\n+    verify(dLockService).unlock(LocatorClusterManagementService.CMS_NAME);\n+  }\n+\n   @Test\n   public void create_persistenceIsNull() {\n     org.apache.geode.cache.Region<Object, Object> region =\n         mock(org.apache.geode.cache.Region.class);\n     when(cache.getRegion(any())).thenReturn(region);\n-    service = new LocatorClusterManagementService(cache, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1344f6c2a2f054520c5cacec585fce9f066019d7"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDExNDY5Mg==", "bodyText": "It would be better to add some comment for this constant.", "url": "https://github.com/apache/geode/pull/5188#discussion_r434114692", "createdAt": "2020-06-02T19:08:46Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -105,7 +107,12 @@\n import org.apache.geode.management.runtime.OperationResult;\n import org.apache.geode.management.runtime.RuntimeInfo;\n \n+/**\n+ * each locator will have one instance of this running if enabled\n+ */\n public class LocatorClusterManagementService implements ClusterManagementService {\n+  @VisibleForTesting\n+  static final String CMS_NAME = \"CMS_LOCK_SERVICE\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1344f6c2a2f054520c5cacec585fce9f066019d7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/2ce5ccb05c54fd2edc292fc9d68dc54db25992fd", "committedDate": "2020-06-03T21:31:35Z", "message": "review changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1344f6c2a2f054520c5cacec585fce9f066019d7", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/1344f6c2a2f054520c5cacec585fce9f066019d7", "committedDate": "2020-06-01T21:08:28Z", "message": "GEODE-8099: add dlock around cms create/delete operations."}, "afterCommit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/2ce5ccb05c54fd2edc292fc9d68dc54db25992fd", "committedDate": "2020-06-03T21:31:35Z", "message": "review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NTE2ODk4", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-425516898", "createdAt": "2020-06-05T18:06:05Z", "commit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODowNjowNlrOGf4RnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoxMTo0NVrOGf4gxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4MTA1Mg==", "bodyText": "I recommend moving all the field and var creations at the top, then move all the when blocks together, order both blocks in some way (I alphabetize), and then consider moving the subject(s) under test to the bottom of the setup method.\nI also recommend cleaning up any statics in tearDown that you've configured in setUp. For example: how to undo this statement in tearDown:\nBaseManagementService.setManagementService(cache, managementService);\n\nThe statics will still have this configured after each test completes.", "url": "https://github.com/apache/geode/pull/5188#discussion_r436081052", "createdAt": "2020-06-05T18:06:06Z", "author": {"login": "kirklund"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorClusterManagementServiceIntegrationTest.java", "diffHunk": "@@ -56,13 +57,38 @@ public void tearDown() {\n     }\n   }\n \n+  @Before\n+  public void setup() throws URISyntaxException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NDkzNQ==", "bodyText": "Let's move away from lazy-initializing and mutable fields and just make it final.\nI'm assuming you made it mutable for testing. This is where you typically want to chain more than one constructor. One of the constructors needs @VisibleForTesting and pass in the DistributedLockService (as a mock or whatever). The main public constructor can then create the DistributedLockService and pass it as a parameter to the next constructor. The test would use the next constructor that accepts a DistributedLockService.", "url": "https://github.com/apache/geode/pull/5188#discussion_r436084935", "createdAt": "2020-06-05T18:11:45Z", "author": {"login": "kirklund"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -114,6 +122,7 @@\n   private final MemberValidator memberValidator;\n   private final CommonConfigurationValidator commonValidator;\n   private final InternalCache cache;\n+  private DistributedLockService cmsDlockService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjgxOTM4", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-425681938", "createdAt": "2020-06-05T23:45:33Z", "commit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzo0NTozM1rOGgAD7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzo0NTozM1rOGgAD7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwODYyMA==", "bodyText": "With these changes does this test need to become a unit test rather than an integration test?", "url": "https://github.com/apache/geode/pull/5188#discussion_r436208620", "createdAt": "2020-06-05T23:45:33Z", "author": {"login": "mhansonp"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorClusterManagementServiceIntegrationTest.java", "diffHunk": "@@ -56,13 +57,38 @@ public void tearDown() {\n     }\n   }\n \n+  @Before\n+  public void setup() throws URISyntaxException {\n+    distributionConfig = mock(DistributionConfigImpl.class);\n+    cache = mock(InternalCacheForClientAccess.class);\n+    managementService = mock(BaseManagementService.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce5ccb05c54fd2edc292fc9d68dc54db25992fd"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "533e365eb93fef1a7fcb95525d17334c716183be", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/533e365eb93fef1a7fcb95525d17334c716183be", "committedDate": "2020-06-08T20:10:20Z", "message": "review update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/b43402ca618b8f9a25edbe7c2bbdbc40da34925d", "committedDate": "2020-06-08T21:07:46Z", "message": "revert back to lazy dlock initialization\n\nSo many tests are affected by the previous change set. They are lots of integration tests that is not easy to update to inject the dlock service."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzU2NzM3", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-428356737", "createdAt": "2020-06-10T19:17:49Z", "commit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToxNzo0OVrOGiC9iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToxNzo0OVrOGiC9iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM1MzI5MQ==", "bodyText": "Looking at BaseManagementService, this is the only instances.remove statement to remove an entry from the HashMap. Entries are put to the HashMap, but never removed individually. There is instances.clear, but it removes everything in the HashMap. This concern maybe outside the scope of this JIRA ticket though.", "url": "https://github.com/apache/geode/pull/5188#discussion_r438353291", "createdAt": "2020-06-10T19:17:49Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/BaseManagementService.java", "diffHunk": "@@ -94,6 +94,13 @@ public static void setManagementService(InternalCacheForClientAccess cache,\n     }\n   }\n \n+  @VisibleForTesting\n+  public static void clearManagementService(InternalCacheForClientAccess cache) {\n+    synchronized (instances) {\n+      instances.remove(cache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzg5Mzcy", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-430789372", "createdAt": "2020-06-15T16:07:50Z", "commit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowNzo1MFrOGj49Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjoxMDoxM1rOGj5DIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NjU1MQ==", "bodyText": "Is create expected to throw some Exception every time this test runs? If not, then let's remove the try-catch and add throws Exception clause to the method.", "url": "https://github.com/apache/geode/pull/5188#discussion_r440286551", "createdAt": "2020-06-15T16:07:50Z", "author": {"login": "kirklund"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java", "diffHunk": "@@ -125,16 +127,41 @@ public void before() throws Exception {\n     doReturn(true).when(persistenceService).lockSharedConfiguration();\n     doNothing().when(persistenceService).unlockSharedConfiguration();\n     operationManager = mock(OperationManager.class);\n+    dLockService = mock(DistributedLockService.class);\n+\n     service =\n         spy(new LocatorClusterManagementService(cache, persistenceService, managers, validators,\n             memberValidator, cacheElementValidator, operationManager));\n+    doReturn(dLockService).when(service).getCmsDlockService();\n \n     regionConfig = new Region();\n     regionConfig.setName(\"region1\");\n \n     rebalanceOperation = new RebalanceOperation();\n   }\n \n+  @Test\n+  public void lockAndUnlockCalledAtCreate() {\n+    try {\n+      service.create(regionConfig);\n+    } catch (Exception ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4Njg4OA==", "bodyText": "Can we remove try-block and use throws Exception?", "url": "https://github.com/apache/geode/pull/5188#discussion_r440286888", "createdAt": "2020-06-15T16:08:24Z", "author": {"login": "kirklund"}, "path": "geode-core/src/test/java/org/apache/geode/management/internal/api/LocatorClusterManagementServiceTest.java", "diffHunk": "@@ -125,16 +127,41 @@ public void before() throws Exception {\n     doReturn(true).when(persistenceService).lockSharedConfiguration();\n     doNothing().when(persistenceService).unlockSharedConfiguration();\n     operationManager = mock(OperationManager.class);\n+    dLockService = mock(DistributedLockService.class);\n+\n     service =\n         spy(new LocatorClusterManagementService(cache, persistenceService, managers, validators,\n             memberValidator, cacheElementValidator, operationManager));\n+    doReturn(dLockService).when(service).getCmsDlockService();\n \n     regionConfig = new Region();\n     regionConfig.setName(\"region1\");\n \n     rebalanceOperation = new RebalanceOperation();\n   }\n \n+  @Test\n+  public void lockAndUnlockCalledAtCreate() {\n+    try {\n+      service.create(regionConfig);\n+    } catch (Exception ignore) {\n+    }\n+\n+    verify(dLockService).lock(LocatorClusterManagementService.CMS_DLOCK_SERVICE_NAME, -1, -1);\n+    verify(dLockService).unlock(LocatorClusterManagementService.CMS_DLOCK_SERVICE_NAME);\n+  }\n+\n+  @Test\n+  public void lockAndUnlockCalledAtDelete() {\n+    try {\n+      service.delete(regionConfig);\n+    } catch (Exception ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4ODAzMw==", "bodyText": "This method should be synchronized since cmsDlockService is lazy initialized.", "url": "https://github.com/apache/geode/pull/5188#discussion_r440288033", "createdAt": "2020-06-15T16:10:13Z", "author": {"login": "kirklund"}, "path": "geode-core/src/main/java/org/apache/geode/management/internal/api/LocatorClusterManagementService.java", "diffHunk": "@@ -154,6 +163,24 @@ public LocatorClusterManagementService(\n     this.operationManager = operationManager;\n   }\n \n+  @VisibleForTesting\n+  DistributedLockService getCmsDlockService() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43402ca618b8f9a25edbe7c2bbdbc40da34925d"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5f87d877e95973ec44dbf4325e6e930e9cffde8", "author": {"user": {"login": "jinmeiliao", "name": "Jinmei Liao"}}, "url": "https://github.com/apache/geode/commit/b5f87d877e95973ec44dbf4325e6e930e9cffde8", "committedDate": "2020-06-15T16:54:51Z", "message": "review update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDY3MTQ5", "url": "https://github.com/apache/geode/pull/5188#pullrequestreview-431067149", "createdAt": "2020-06-15T23:50:59Z", "commit": {"oid": "b5f87d877e95973ec44dbf4325e6e930e9cffde8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4401, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}