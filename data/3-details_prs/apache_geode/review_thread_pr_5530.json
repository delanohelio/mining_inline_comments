{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjY5NzQ0", "number": 5530, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjo1MjoxM1rOEmLXMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjo1MjoxM1rOEmLXMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NDY3NTA2OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjo1MjoxM1rOHWDjgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOToxNTo0OFrOHeB8Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODk2Mg==", "bodyText": "I think this need a conditional check.\nif (version >= KnownVersion.GEODE_1_14_0.ordinal()) {\n}\nSo that it will not send data that old version server can not deserialize.", "url": "https://github.com/apache/geode/pull/5530#discussion_r492888962", "createdAt": "2020-09-22T16:52:13Z", "author": {"login": "pivotal-eshu"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java", "diffHunk": "@@ -710,7 +710,7 @@ public int getDSFID() {\n   @Override\n   public void toData(DataOutput out,\n       SerializationContext context) throws IOException {\n-    toDataPre_GEODE_1_13_0_0(out, context);\n+    toDataPre_GEODE_1_14_0_0(out, context);\n     boolean hasTransaction = this.transactionId != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f973151fc70448079c5eff8d053a44398c883868"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyMDQ1Mg==", "bodyText": "The version in toData() is 0. So it will not help. I added \"if (version == 0 || version >= KnownVersion.GEODE_1_14_0.ordinal()) {\" too. The result is the same. It did not improve on reproducing 49196.", "url": "https://github.com/apache/geode/pull/5530#discussion_r495220452", "createdAt": "2020-09-25T20:40:23Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java", "diffHunk": "@@ -710,7 +710,7 @@ public int getDSFID() {\n   @Override\n   public void toData(DataOutput out,\n       SerializationContext context) throws IOException {\n-    toDataPre_GEODE_1_13_0_0(out, context);\n+    toDataPre_GEODE_1_14_0_0(out, context);\n     boolean hasTransaction = this.transactionId != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODk2Mg=="}, "originalCommit": {"oid": "f973151fc70448079c5eff8d053a44398c883868"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1MTA5OQ==", "bodyText": "There is no need for condition check here. The appropriate version of toData() is invoked by  DSFIDSerializerImpl.invokeToData() and InternalDataSerializer.invokeToData(). Similarly, there is no need from condition check in fromData().", "url": "https://github.com/apache/geode/pull/5530#discussion_r501251099", "createdAt": "2020-10-07T19:15:48Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/GatewaySenderEventImpl.java", "diffHunk": "@@ -710,7 +710,7 @@ public int getDSFID() {\n   @Override\n   public void toData(DataOutput out,\n       SerializationContext context) throws IOException {\n-    toDataPre_GEODE_1_13_0_0(out, context);\n+    toDataPre_GEODE_1_14_0_0(out, context);\n     boolean hasTransaction = this.transactionId != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODk2Mg=="}, "originalCommit": {"oid": "f973151fc70448079c5eff8d053a44398c883868"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4811, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}