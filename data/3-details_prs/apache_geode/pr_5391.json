{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NzUxMzM2", "number": 5391, "title": "GEODE-7846: Adding Stats for Partitioned Region Clear", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-07-21T21:17:34Z", "url": "https://github.com/apache/geode/pull/5391", "merged": true, "mergeCommit": {"oid": "6e7b949d83407aca094546b96a3d74dc9f9343c4"}, "closed": true, "closedAt": "2020-08-19T21:40:10Z", "author": {"login": "BenjaminPerryRoss"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3zMx3AFqTQ1NDMzNDY1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAf-uIABqjM2NzIxMTkzMzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzM0NjUx", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-454334651", "createdAt": "2020-07-23T17:10:00Z", "commit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMDowMVrOG2T0qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzo1MDoxM1rOG2VP4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMTA2NQ==", "bodyText": "I feel like the calls to incClearCount() and incClearDuration() should be made at the same time, since there should be a consistent approach to when a clear is \"done.\"", "url": "https://github.com/apache/geode/pull/5391#discussion_r459601065", "createdAt": "2020-07-23T17:10:01Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -162,6 +162,7 @@ protected void waitForPrimary(PartitionedRegion.RetryTimeKeeper retryTimer) {\n         doAfterClear(regionEvent);\n       }\n     }\n+    incClearCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMjk1NA==", "bodyText": "If the name of this statistic is changed, then geode-docs/reference/statistics_list.html.md.erb should be updated to reflect the new name. Also, it might be good to document the newly added statistics too.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459602954", "createdAt": "2020-07-23T17:13:12Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/CachePerfStats.java", "diffHunk": "@@ -442,7 +451,10 @@\n             f.createIntCounter(\"retries\",\n                 \"Number of times a concurrent destroy followed by a create has caused an entry operation to need to retry.\",\n                 \"operations\"),\n-            f.createLongCounter(\"clears\", clearsDesc, \"operations\"),\n+            f.createLongCounter(\"regionClears\", regionClearsDesc, \"operations\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwNTQ4OA==", "bodyText": "Remove this logging.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459605488", "createdAt": "2020-07-23T17:17:26Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -367,12 +370,38 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n           releaseLockForClear(regionEvent);\n         }\n       }\n-\n     } finally {\n       releaseDistributedClearLock(lockName);\n+      incClearDuration(System.nanoTime() - clearStartTime);\n+    }\n+  }\n+\n+  void incClearCount() {\n+    if (partitionedRegion != null && partitionedRegion.getDataStore() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions().size() != 0) {\n+      CachePerfStats stats = partitionedRegion.getCachePerfStats();\n+      if (stats != null) {\n+        logger.info(\"BR inc PR Region count:\" + stats.getClass().getName() + \":\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwNTYwMg==", "bodyText": "Remove this logging.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459605602", "createdAt": "2020-07-23T17:17:37Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -367,12 +370,38 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n           releaseLockForClear(regionEvent);\n         }\n       }\n-\n     } finally {\n       releaseDistributedClearLock(lockName);\n+      incClearDuration(System.nanoTime() - clearStartTime);\n+    }\n+  }\n+\n+  void incClearCount() {\n+    if (partitionedRegion != null && partitionedRegion.getDataStore() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions().size() != 0) {\n+      CachePerfStats stats = partitionedRegion.getCachePerfStats();\n+      if (stats != null) {\n+        logger.info(\"BR inc PR Region count:\" + stats.getClass().getName() + \":\"\n+            + partitionedRegion.getFullPath(), new Exception());\n+        stats.incClearCount();\n+      }\n     }\n   }\n \n+  void incClearDuration(long durationNanos) {\n+    if (partitionedRegion != null && partitionedRegion.getTotalNumberOfBuckets() != 0) {\n+      CachePerfStats stats = partitionedRegion.getCachePerfStats();\n+      if (stats != null) {\n+        logger.info(\"BR inc PR Duration by + \" + durationNanos + \" ns:\" + stats.getClass().getName()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwOTI0OA==", "bodyText": "I'm not sure that all these null checks are required. I would think that if the region is null at this point, then we would expect that something has gone wrong and that we should throw an exception rather than just silently not incrementing the stats. Also, I'm not sure I understand why we only increment the stats if getAllLocalBucketRegions() returns a non-empty set. Are there scenarios where we could call clear, it could complete without an exception, bringing us to this method, and then getAllLocalBucketRegions() returns empty?", "url": "https://github.com/apache/geode/pull/5391#discussion_r459609248", "createdAt": "2020-07-23T17:24:08Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -367,12 +370,38 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n           releaseLockForClear(regionEvent);\n         }\n       }\n-\n     } finally {\n       releaseDistributedClearLock(lockName);\n+      incClearDuration(System.nanoTime() - clearStartTime);\n+    }\n+  }\n+\n+  void incClearCount() {\n+    if (partitionedRegion != null && partitionedRegion.getDataStore() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions().size() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxMDQwMw==", "bodyText": "See my other comment about the possibility of hitting the scenario being checked for. Is it actually possible that we get to where this method is called and getTotalNumberOfBuckets() is zero? If it is, do we want to throw an exception instead of just quietly not incrementing the stats?", "url": "https://github.com/apache/geode/pull/5391#discussion_r459610403", "createdAt": "2020-07-23T17:26:02Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -367,12 +370,38 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n           releaseLockForClear(regionEvent);\n         }\n       }\n-\n     } finally {\n       releaseDistributedClearLock(lockName);\n+      incClearDuration(System.nanoTime() - clearStartTime);\n+    }\n+  }\n+\n+  void incClearCount() {\n+    if (partitionedRegion != null && partitionedRegion.getDataStore() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions() != null\n+        && partitionedRegion.getDataStore().getAllLocalBucketRegions().size() != 0) {\n+      CachePerfStats stats = partitionedRegion.getCachePerfStats();\n+      if (stats != null) {\n+        logger.info(\"BR inc PR Region count:\" + stats.getClass().getName() + \":\"\n+            + partitionedRegion.getFullPath(), new Exception());\n+        stats.incClearCount();\n+      }\n     }\n   }\n \n+  void incClearDuration(long durationNanos) {\n+    if (partitionedRegion != null && partitionedRegion.getTotalNumberOfBuckets() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxNjIyOQ==", "bodyText": "I think this may possibly be incorrect. incRegionClearCount() is being overridden from RegionStats but every other method in this class is overriding methods from CachePerfStats. I think the correct methods might be incClearCount() which calls cachePerfStats.incClearCount() and incBucketClearCount() which calls cachePerfStats.incBucketClearCount().", "url": "https://github.com/apache/geode/pull/5391#discussion_r459616229", "createdAt": "2020-07-23T17:36:10Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/RegionPerfStats.java", "diffHunk": "@@ -519,9 +519,15 @@ public void incEvictWorkTime(long delta) {\n     cachePerfStats.incEvictWorkTime(delta);\n   }\n \n+  @Override\n+  public void incRegionClearCount() {\n+    stats.incLong(regionClearsId, 1L);\n+    cachePerfStats.incClearCount();\n+  }\n+\n   @Override\n   public void incClearCount() {\n-    stats.incLong(clearsId, 1L);\n+    stats.incLong(bucketClearsId, 1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxNjg1OQ==", "bodyText": "This method should have remained as incClearCount(), I think, to remain consistent with CachePerfStats.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459616859", "createdAt": "2020-07-23T17:37:15Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/RegionStats.java", "diffHunk": "@@ -135,7 +135,9 @@\n \n   void incEvictWorkTime(long delta);\n \n-  void incClearCount();\n+  void incBucketClearCount();\n+\n+  void incRegionClearCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxODM2OA==", "bodyText": "This method is never used.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459618368", "createdAt": "2020-07-23T17:39:56Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/PartitionedRegionClearDUnitTest.java", "diffHunk": "@@ -170,6 +170,13 @@ private void verifyClientRegionSize(int expectedNum) {\n     return destroys;\n   };\n \n+  SerializableCallableIF<Integer> getStatClearCount = () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyMjY2NQ==", "bodyText": "Rather than just comparing the clear counts of the buckets between eachother, it might be better to compare all of them to the expected clear count. The current check just asserts that the clear counts for all the buckets are equal, but not that that value is necessarily correct.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459622665", "createdAt": "2020-07-23T17:47:11Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/PartitionedRegionClearDUnitTest.java", "diffHunk": "@@ -330,6 +337,101 @@ public void normalClearFromAccessorWithoutWriterButWithWriterOnDataStore() {\n         .isEqualTo(0);\n   }\n \n+  @Test\n+  public void normalClearFromDataStoreUpdatesStats() {\n+    configureServers(false, true);\n+    client1.invoke(this::initClientCache);\n+    client2.invoke(this::initClientCache);\n+\n+    // Verify no clears have been recorded in stats\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        long clearCount = bucket.getCachePerfStats().getRegionClearCount();\n+        assertThat(clearCount).isEqualTo(0);\n+      }\n+    });\n+\n+    accessor.invoke(() -> feed(false));\n+    verifyServerRegionSize(NUM_ENTRIES);\n+    dataStore1.invoke(() -> getRegion(false).clear());\n+    verifyServerRegionSize(0);\n+\n+    // Verify the stats were properly updated for the bucket regions\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyMzQ1OA==", "bodyText": "This invocation is executed on all three datastores. It might simplify the test to extract it to a method.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459623458", "createdAt": "2020-07-23T17:48:30Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/PartitionedRegionClearDUnitTest.java", "diffHunk": "@@ -330,6 +337,101 @@ public void normalClearFromAccessorWithoutWriterButWithWriterOnDataStore() {\n         .isEqualTo(0);\n   }\n \n+  @Test\n+  public void normalClearFromDataStoreUpdatesStats() {\n+    configureServers(false, true);\n+    client1.invoke(this::initClientCache);\n+    client2.invoke(this::initClientCache);\n+\n+    // Verify no clears have been recorded in stats\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        long clearCount = bucket.getCachePerfStats().getRegionClearCount();\n+        assertThat(clearCount).isEqualTo(0);\n+      }\n+    });\n+\n+    accessor.invoke(() -> feed(false));\n+    verifyServerRegionSize(NUM_ENTRIES);\n+    dataStore1.invoke(() -> getRegion(false).clear());\n+    verifyServerRegionSize(0);\n+\n+    // Verify the stats were properly updated for the bucket regions\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        if (clearCount == 0) {\n+          clearCount = bucket.getCachePerfStats().getBucketClearCount();\n+        }\n+        assertThat(bucket.getCachePerfStats().getBucketClearCount()).isEqualTo(clearCount)\n+            .isNotEqualTo(0);\n+      }\n+\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(1);\n+      assertThat(region.getCachePerfStats().getPartitionedRegionClearDuration()).isGreaterThan(0);\n+    });\n+\n+    dataStore2.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        if (clearCount == 0) {\n+          clearCount = bucket.getCachePerfStats().getBucketClearCount();\n+        }\n+        assertThat(bucket.getCachePerfStats().getBucketClearCount()).isEqualTo(clearCount)\n+            .isNotEqualTo(0);\n+      }\n+\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYyNDQxOA==", "bodyText": "I'm not sure what this section has to do with stats. I think it can safely be removed from this test case.", "url": "https://github.com/apache/geode/pull/5391#discussion_r459624418", "createdAt": "2020-07-23T17:50:13Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/internal/cache/PartitionedRegionClearDUnitTest.java", "diffHunk": "@@ -330,6 +337,101 @@ public void normalClearFromAccessorWithoutWriterButWithWriterOnDataStore() {\n         .isEqualTo(0);\n   }\n \n+  @Test\n+  public void normalClearFromDataStoreUpdatesStats() {\n+    configureServers(false, true);\n+    client1.invoke(this::initClientCache);\n+    client2.invoke(this::initClientCache);\n+\n+    // Verify no clears have been recorded in stats\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        long clearCount = bucket.getCachePerfStats().getRegionClearCount();\n+        assertThat(clearCount).isEqualTo(0);\n+      }\n+    });\n+\n+    accessor.invoke(() -> feed(false));\n+    verifyServerRegionSize(NUM_ENTRIES);\n+    dataStore1.invoke(() -> getRegion(false).clear());\n+    verifyServerRegionSize(0);\n+\n+    // Verify the stats were properly updated for the bucket regions\n+    dataStore1.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        if (clearCount == 0) {\n+          clearCount = bucket.getCachePerfStats().getBucketClearCount();\n+        }\n+        assertThat(bucket.getCachePerfStats().getBucketClearCount()).isEqualTo(clearCount)\n+            .isNotEqualTo(0);\n+      }\n+\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(1);\n+      assertThat(region.getCachePerfStats().getPartitionedRegionClearDuration()).isGreaterThan(0);\n+    });\n+\n+    dataStore2.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        if (clearCount == 0) {\n+          clearCount = bucket.getCachePerfStats().getBucketClearCount();\n+        }\n+        assertThat(bucket.getCachePerfStats().getBucketClearCount()).isEqualTo(clearCount)\n+            .isNotEqualTo(0);\n+      }\n+\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(1);\n+    });\n+\n+    dataStore3.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      long clearCount = 0L;\n+\n+      for (BucketRegion bucket : region.getDataStore().getAllLocalBucketRegions()) {\n+        if (clearCount == 0) {\n+          clearCount = bucket.getCachePerfStats().getBucketClearCount();\n+        }\n+        assertThat(bucket.getCachePerfStats().getBucketClearCount()).isEqualTo(clearCount)\n+            .isNotEqualTo(0);\n+      }\n+\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(1);\n+    });\n+\n+\n+    // The accessor shouldn't increment the region clear count\n+    accessor.invoke(() -> {\n+      PartitionedRegion region = (PartitionedRegion) getRegion(false);\n+      assertThat(region.getCachePerfStats().getRegionClearCount()).isEqualTo(0);\n+    });\n+\n+    // do the region destroy to compare that the same callbacks will be triggered\n+    dataStore1.invoke(() -> {\n+      Region region = getRegion(false);\n+      region.destroyRegion();\n+    });\n+\n+    assertThat(dataStore1.invoke(getWriterDestroys)).isEqualTo(dataStore1.invoke(getWriterClears))\n+        .isEqualTo(0);\n+    assertThat(dataStore2.invoke(getWriterDestroys)).isEqualTo(dataStore2.invoke(getWriterClears))\n+        .isEqualTo(0);\n+    assertThat(dataStore3.invoke(getWriterDestroys)).isEqualTo(dataStore3.invoke(getWriterClears))\n+        .isEqualTo(0);\n+    assertThat(accessor.invoke(getWriterDestroys)).isEqualTo(accessor.invoke(getWriterClears))\n+        .isEqualTo(1);\n+\n+    assertThat(accessor.invoke(getBucketRegionWriterDestroys))\n+        .isEqualTo(accessor.invoke(getBucketRegionWriterClears))\n+        .isEqualTo(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdfafa122b8744bc4e667dd8fd506c8f3af386dd"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTYyMDM0", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-457962034", "createdAt": "2020-07-29T23:18:31Z", "commit": {"oid": "e244dd930a2dabc3eb0e56dc81ca0ad89d4243f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzoxODozMVrOG5NiIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMzoxODozMVrOG5NiIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY0Mzc0Ng==", "bodyText": "Changing this from Long to long will fix the LGTM alert introduced by this PR.", "url": "https://github.com/apache/geode/pull/5391#discussion_r462643746", "createdAt": "2020-07-29T23:18:31Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -123,6 +123,7 @@ protected void waitForPrimary(PartitionedRegion.RetryTimeKeeper retryTimer) {\n \n   public Set<Integer> clearRegionLocal(RegionEventImpl regionEvent) {\n     Set<Integer> clearedBuckets = new HashSet<>();\n+    Long clearStartTime = System.nanoTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e244dd930a2dabc3eb0e56dc81ca0ad89d4243f8"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0c5743e5381480cfe6d4a3befadbe6567859c8f", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/f0c5743e5381480cfe6d4a3befadbe6567859c8f", "committedDate": "2020-07-30T21:21:19Z", "message": "Added new durtation stat and addressed additional feedback"}, "afterCommit": {"oid": "2146ae992aea620646301cba893be8b64ff23593", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/2146ae992aea620646301cba893be8b64ff23593", "committedDate": "2020-07-30T21:24:04Z", "message": "Added new durtation stat and addressed additional feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzcyMjI4", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-458772228", "createdAt": "2020-07-30T21:33:50Z", "commit": {"oid": "2146ae992aea620646301cba893be8b64ff23593"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjAyNDQ1", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-460202445", "createdAt": "2020-08-03T17:19:46Z", "commit": {"oid": "4c1c3244da4a391135fdf0d2a2f1feab0f3623f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzoxOTo0NlrOG7B9GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzoxOTo0NlrOG7B9GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU1MTE5Mg==", "bodyText": "Usually we use:  if (owner.isUsedForPartitionedRegionBucket()) { instead.", "url": "https://github.com/apache/geode/pull/5391#discussion_r464551192", "createdAt": "2020-08-03T17:19:46Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/AbstractRegionMap.java", "diffHunk": "@@ -344,7 +344,12 @@ void incClearCount(LocalRegion lr) {\n     if (lr != null && !(lr instanceof HARegion)) {\n       CachePerfStats stats = lr.getCachePerfStats();\n       if (stats != null) {\n-        stats.incClearCount();\n+        if (lr instanceof BucketRegion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1c3244da4a391135fdf0d2a2f1feab0f3623f2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjQyOTg5", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-460242989", "createdAt": "2020-08-03T18:17:32Z", "commit": {"oid": "4c1c3244da4a391135fdf0d2a2f1feab0f3623f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODoxNzozMlrOG7D7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODoxNzozMlrOG7D7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MzUwMg==", "bodyText": "we have to follow other duration stats's timeunit. If other duration stats used nanoseconds, we use it too. Otherwise, we should not.", "url": "https://github.com/apache/geode/pull/5391#discussion_r464583502", "createdAt": "2020-08-03T18:17:32Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/CachePerfStats.java", "diffHunk": "@@ -274,7 +278,14 @@\n         \"Current number of regions configured for reliablity that are missing required roles with Limited access\";\n     final String reliableRegionsMissingNoAccessDesc =\n         \"Current number of regions configured for reliablity that are missing required roles with No access\";\n-    final String clearsDesc = \"The total number of times a clear has been done on this cache.\";\n+    final String regionClearsDesc =\n+        \"The total number of times a clear has been done on this cache.\";\n+    final String bucketClearsDesc =\n+        \"The total number of times a clear has been done on this region and it's bucket regions\";\n+    final String partitionedRegionClearLocalDurationDesc =\n+        \"The time in nanoseconds partitioned region clear has been running for the region on this member\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1c3244da4a391135fdf0d2a2f1feab0f3623f2"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4aebf16386d9e09295032d4cb10cc5d28cdaab06", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/4aebf16386d9e09295032d4cb10cc5d28cdaab06", "committedDate": "2020-08-03T21:01:03Z", "message": "Made changes based on feedback"}, "afterCommit": {"oid": "28582c867edb75e0592e253b5918654af5bde113", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/28582c867edb75e0592e253b5918654af5bde113", "committedDate": "2020-08-03T21:06:40Z", "message": "Made changes based on feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzk1Mzcy", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-460395372", "createdAt": "2020-08-03T23:10:09Z", "commit": {"oid": "28582c867edb75e0592e253b5918654af5bde113"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28582c867edb75e0592e253b5918654af5bde113", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/28582c867edb75e0592e253b5918654af5bde113", "committedDate": "2020-08-03T21:06:40Z", "message": "Made changes based on feedback"}, "afterCommit": {"oid": "7607ba71c4f8a9ffbbaa7b558c27a4defed6a66f", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/7607ba71c4f8a9ffbbaa7b558c27a4defed6a66f", "committedDate": "2020-08-12T20:54:11Z", "message": "Fixed issue with stats being added to cache instead of region stats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MzUzMDE0", "url": "https://github.com/apache/geode/pull/5391#pullrequestreview-466353014", "createdAt": "2020-08-12T23:58:39Z", "commit": {"oid": "32d82faa466b2067e6c556a403979e5528870385"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo1ODozOVrOG_21Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo1ODozOVrOG_21Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMTgwMw==", "bodyText": "I think that the null check on partitionedRegion.getCachePerfStats() is no longer necessary with this change, since it's not them we're updating.", "url": "https://github.com/apache/geode/pull/5391#discussion_r469611803", "createdAt": "2020-08-12T23:58:39Z", "author": {"login": "DonalEvans"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -378,8 +378,11 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n     } finally {\n       releaseDistributedClearLock(lockName);\n       if (partitionedRegion.getCachePerfStats() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d82faa466b2067e6c556a403979e5528870385"}, "originalPosition": 3}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32d82faa466b2067e6c556a403979e5528870385", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/32d82faa466b2067e6c556a403979e5528870385", "committedDate": "2020-08-12T23:44:42Z", "message": "Fixed NPE in test"}, "afterCommit": {"oid": "861980078d73e34d675cee9ec448427cf3cd5535", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/861980078d73e34d675cee9ec448427cf3cd5535", "committedDate": "2020-08-13T16:09:33Z", "message": "Fixed NPE in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7b48dfd3343d2324b6bd67b3b33d3c7bab797ec", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/d7b48dfd3343d2324b6bd67b3b33d3c7bab797ec", "committedDate": "2020-08-17T21:48:44Z", "message": "Added test for clear count stats and debug output for issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab8d657e50f875db7f5a67487c1c7e15c0dd67e", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/fab8d657e50f875db7f5a67487c1c7e15c0dd67e", "committedDate": "2020-08-17T21:48:44Z", "message": "Added stats and improved testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc3ad0b458f7e5230833cf5ebfe59269f6d5690", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/3bc3ad0b458f7e5230833cf5ebfe59269f6d5690", "committedDate": "2020-08-17T21:48:45Z", "message": "Updated Unit test for CachePerfStats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2302667037cafc15965e659d8bb5883956e5306", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/d2302667037cafc15965e659d8bb5883956e5306", "committedDate": "2020-08-17T21:48:45Z", "message": "Fixed test failure and made changes based on PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71f5ba26a81bf162ddd8941f8cb54f8c88f05403", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/71f5ba26a81bf162ddd8941f8cb54f8c88f05403", "committedDate": "2020-08-17T21:48:45Z", "message": "Addressing PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "929d54912fe311759d57f80282080fdeb94dff5e", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/929d54912fe311759d57f80282080fdeb94dff5e", "committedDate": "2020-08-17T21:48:45Z", "message": "Added new durtation stat and addressed additional feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0be44479bf8a0bcc97e849805e88e56e7ae1728", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/f0be44479bf8a0bcc97e849805e88e56e7ae1728", "committedDate": "2020-08-17T21:48:45Z", "message": "Fix test issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47b7493d9bd2603621a8487a1cf5786b553c9f40", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/47b7493d9bd2603621a8487a1cf5786b553c9f40", "committedDate": "2020-08-17T21:48:45Z", "message": "Made changes based on feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b75133dcef1197d9a80ef3b76db203d4203eac3d", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/b75133dcef1197d9a80ef3b76db203d4203eac3d", "committedDate": "2020-08-17T21:48:45Z", "message": "Fixed issue with stats being added to cache instead of region stats"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f06cb291a7f7d8b3c8b2103f84eba0ac44b8b025", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/f06cb291a7f7d8b3c8b2103f84eba0ac44b8b025", "committedDate": "2020-08-17T21:48:45Z", "message": "Fixed NPE in test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89080f2af9be319f46351f53bddd0b50d830920b", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/89080f2af9be319f46351f53bddd0b50d830920b", "committedDate": "2020-08-13T20:51:30Z", "message": "Fixed unnessessary conditional"}, "afterCommit": {"oid": "7416df4b531b0dae3078d840eff3ab408bdf55e6", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/7416df4b531b0dae3078d840eff3ab408bdf55e6", "committedDate": "2020-08-17T21:48:45Z", "message": "Fixed unnessessary conditional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7416df4b531b0dae3078d840eff3ab408bdf55e6", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/7416df4b531b0dae3078d840eff3ab408bdf55e6", "committedDate": "2020-08-17T21:48:45Z", "message": "Fixed unnessessary conditional"}, "afterCommit": {"oid": "ed8848f4e5f7c06008938af18225e0bac755ffb2", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/ed8848f4e5f7c06008938af18225e0bac755ffb2", "committedDate": "2020-08-19T16:21:12Z", "message": "Fixed unnessessary conditional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a94b7cfe2e1b82cd50ac7a88a86405de5cdcd2ce", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/a94b7cfe2e1b82cd50ac7a88a86405de5cdcd2ce", "committedDate": "2020-08-19T18:32:22Z", "message": "Fixed unnessessary conditional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed8848f4e5f7c06008938af18225e0bac755ffb2", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/ed8848f4e5f7c06008938af18225e0bac755ffb2", "committedDate": "2020-08-19T16:21:12Z", "message": "Fixed unnessessary conditional"}, "afterCommit": {"oid": "a94b7cfe2e1b82cd50ac7a88a86405de5cdcd2ce", "author": {"user": {"login": "BenjaminPerryRoss", "name": null}}, "url": "https://github.com/apache/geode/commit/a94b7cfe2e1b82cd50ac7a88a86405de5cdcd2ce", "committedDate": "2020-08-19T18:32:22Z", "message": "Fixed unnessessary conditional"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4233, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}