{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1Nzk1Nzg2", "number": 5442, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDozNzozOFrOEbHhxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1NDowNlrOEbIBhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODcwMzQwOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDozNzozOFrOHE8i8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDozNzozOFrOHE8i8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk0ODMzOA==", "bodyText": "This log output could be a little more descriptive. Possibly something like \"Got SQL string:{} with key:{} value:{}\"?", "url": "https://github.com/apache/geode/pull/5442#discussion_r474948338", "createdAt": "2020-08-21T20:37:38Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java", "diffHunk": "@@ -255,6 +265,10 @@ private PreparedStatement getPreparedStatement(Connection connection,\n       TableMetaDataView tableMetaData, EntryColumnData entryColumnData, Operation operation)\n       throws SQLException {\n     String sqlStr = getSqlString(tableMetaData, entryColumnData, operation);\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\"SQL:{} key:{} value:{}\", sqlStr, entryColumnData.getEntryKeyColumnData(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc2MjQxOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0OToyNFrOHE9Jig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0OToyNFrOHE9Jig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODIxOA==", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958218", "createdAt": "2020-08-21T20:49:24Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -158,8 +181,21 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc2NDU5OnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0OTo1NlrOHE9LIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo0OTo1NlrOHE9LIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODYyNg==", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958626", "createdAt": "2020-08-21T20:49:56Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -274,8 +315,28 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc3MTg4OnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MToyNVrOHE9P2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MToyNVrOHE9P2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1OTgzNQ==", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474959835", "createdAt": "2020-08-21T20:51:25Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc3NDgzOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MjowMFrOHE9R2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MjowMFrOHE9R2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MDM0Nw==", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474960347", "createdAt": "2020-08-21T20:52:00Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdxEmployee1);\n+    awaitUntil(() -> assertThat(jdbcWriter.getSuccessfulEvents()).isEqualTo(1));\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    employees.put(\"1\", illegalPdxEmployee);\n+\n+    awaitUntil(() -> assertThat(jdbcWriter.getFailedEvents()).isEqualTo(1));\n+    awaitUntil(() -> assertThat(jdbcWriter.getTotalEvents()).isEqualTo(2));\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 200}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc4MDQyOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MzowOVrOHE9VjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MzowOVrOHE9VjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTI5Mw==", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961293", "createdAt": "2020-08-21T20:53:09Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -268,6 +283,18 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc4MjAwOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MzozMFrOHE9WnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1MzozMFrOHE9WnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTU2NA==", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961564", "createdAt": "2020-08-21T20:53:30Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -370,6 +397,24 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc4MzM0OnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1Mzo0N1rOHE9XfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1Mzo0N1rOHE9XfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTc4OA==", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961788", "createdAt": "2020-08-21T20:53:47Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODc4NDcwOnYy", "diffSide": "RIGHT", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1NDowNlrOHE9Ydw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1NDowNlrOHE9Ydw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MjAzOQ==", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474962039", "createdAt": "2020-08-21T20:54:06Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdx1);\n+\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    Throwable thrown = catchThrowable(() -> employees.put(\"1\", illegalPdx));\n+\n+    assertThat(thrown).isInstanceOf(JdbcConnectorException.class);\n+    assertThat(thrown.getMessage()).startsWith(getDataTooLongSqlErrorMessage());\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4847, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}