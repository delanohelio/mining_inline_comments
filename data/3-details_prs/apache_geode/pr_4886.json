{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTE3MzA0", "number": 4886, "title": "GEODE-7927: create tests to ensure feature-parity with Redis PEXPIRE \u2026", "bodyText": "\u2026command\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-03-30T21:36:21Z", "url": "https://github.com/apache/geode/pull/4886", "merged": true, "mergeCommit": {"oid": "faece9a3d634d3a8757257e0c16f9338cd130f66"}, "closed": true, "closedAt": "2020-03-31T20:46:30Z", "author": {"login": "jhutchison"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS1-DcAFqTM4NDI2MTQ3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTHQKdABqjMxODQ1NzYzNjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjYxNDcy", "url": "https://github.com/apache/geode/pull/4886#pullrequestreview-384261472", "createdAt": "2020-03-30T21:57:28Z", "commit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo1NzoyOFrOF99viA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNjo0NlrOF99_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxOTA0OA==", "bodyText": "port is looks to be defined above as a static constant but is overridden below in the @BeforeClass.  Pretty sure you don't want it defined as 6379 up here, just a private static int port declaration.  Noticed other integration tests doing it so assuming it was just a copy/pasta type thing.  Though it also looks like port is only used in the @BeforeEach so maybe just make it a local variable and call it done?", "url": "https://github.com/apache/geode/pull/4886#discussion_r400519048", "createdAt": "2020-03-30T21:57:28Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMjA1MA==", "bodyText": "10000000 is a timeout I think?  I saw in PubSubIntegrationTest the 10000000 was assigned to a constant of REDIS_CLIENT_TIMEOUT which would make it a little clearer without diving into the constructor (thought Intellij tells me what the parameter is so not too worried about it)", "url": "https://github.com/apache/geode/pull/4886#discussion_r400522050", "createdAt": "2020-03-30T22:04:09Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;\n+\n+  @BeforeClass\n+  public static void setUp() {\n+    port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    server = new GeodeRedisServer(\"localhost\", port);\n+    server.start();\n+    jedis = new Jedis(\"localhost\", port, 10000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMjEzMw==", "bodyText": "Thank you for a very clear test name!", "url": "https://github.com/apache/geode/pull/4886#discussion_r400522133", "createdAt": "2020-03-30T22:04:23Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;\n+\n+  @BeforeClass\n+  public static void setUp() {\n+    port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    server = new GeodeRedisServer(\"localhost\", port);\n+    server.start();\n+    jedis = new Jedis(\"localhost\", port, 10000000);\n+  }\n+\n+\n+  @AfterClass\n+  public static void tearDown() {\n+    jedis.close();\n+    server.shutdown();\n+  }\n+\n+  @Test\n+  public void Should_SetExpiration_givenKeyTo_StringValueInMilliSeconds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMzE2Ng==", "bodyText": "I'm sure this test is important, but it seems odd that there's nothing else to test other than it is an instanceof", "url": "https://github.com/apache/geode/pull/4886#discussion_r400523166", "createdAt": "2020-03-30T22:06:46Z", "author": {"login": "moleske"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/PexpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.redis.internal.Executor;\n+import org.apache.geode.redis.internal.executor.ExpireExecutor;\n+import org.apache.geode.redis.internal.executor.PExpireExecutor;\n+\n+public class PexpireExecutorJUnitTest {\n+\n+  @Test\n+  public void isAnInstanceOfExpireClass() {\n+    Executor subject = new PExpireExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423e7f4e143990cc5cd50f5b77e9109452deb3fc", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/423e7f4e143990cc5cd50f5b77e9109452deb3fc", "committedDate": "2020-03-31T18:16:51Z", "message": "GEODE-7927: create tests to ensure feature-parity with Redis PEXPIRE command"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec", "committedDate": "2020-03-30T21:35:24Z", "message": "GEODE-7927: create tests to ensure feature-parity with Redis PEXPIRE command"}, "afterCommit": {"oid": "423e7f4e143990cc5cd50f5b77e9109452deb3fc", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/423e7f4e143990cc5cd50f5b77e9109452deb3fc", "committedDate": "2020-03-31T18:16:51Z", "message": "GEODE-7927: create tests to ensure feature-parity with Redis PEXPIRE command"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}