{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NDM3MzM1", "number": 5403, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NjowOVrOESlacw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1NTo1MVrOETAsQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTIyODAzOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo0NjowOVrOG32Nww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1MzoxOFrOG4QoUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzEyMw==", "bodyText": "comment lies now that this returns void", "url": "https://github.com/apache/geode/pull/5403#discussion_r461213123", "createdAt": "2020-07-27T22:46:09Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1784,19 +1784,15 @@ private String prettifyReason(String r) {\n   /**\n    * Returns true if id was removed. Returns false if it was not in the list of managers.\n    */\n-  private boolean removeManager(InternalDistributedMember theId, boolean crashed, String p_reason) {\n-    String reason = p_reason;\n-\n-    reason = prettifyReason(reason);\n+  private void removeManager(InternalDistributedMember theId, boolean crashed, String p_reason) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY0NTkwNw==", "bodyText": "I've in-lined this method.  Its name no longer made sense and it was only used by handleManagerDeparture()", "url": "https://github.com/apache/geode/pull/5403#discussion_r461645907", "createdAt": "2020-07-28T14:53:18Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1784,19 +1784,15 @@ private String prettifyReason(String r) {\n   /**\n    * Returns true if id was removed. Returns false if it was not in the list of managers.\n    */\n-  private boolean removeManager(InternalDistributedMember theId, boolean crashed, String p_reason) {\n-    String reason = p_reason;\n-\n-    reason = prettifyReason(reason);\n+  private void removeManager(InternalDistributedMember theId, boolean crashed, String p_reason) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxMzEyMw=="}, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTI1Nzk4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo1OTowNFrOG32f1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMjo1OTowNFrOG32f1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxNzc1MA==", "bodyText": "\u2713 ok to this block of code\u2014I confirmed it's the same as the old block that was under the conditional but no conditional is needed now that removeManager() returns void (and it used to always return true) \u2713", "url": "https://github.com/apache/geode/pull/5403#discussion_r461217750", "createdAt": "2020-07-27T22:59:04Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,41 +1862,54 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason, false);\n   }\n \n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n-\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);\n+\n     int vmType = theId.getVmKind();\n     if (vmType == ADMIN_ONLY_DM_TYPE) {\n-      removeUnfinishedStartup(theId, true);\n-      handleConsoleShutdown(theId, p_crashed, p_reason);\n+      handleConsoleShutdown(theId, memberCrashed, reason);\n       return;\n     }\n \n-    removeUnfinishedStartup(theId, true);\n-\n-    if (removeManager(theId, p_crashed, p_reason)) {\n-      if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n-        stats.incNodes(-1);\n+    if (!fromViewChange) {\n+      if (!isCurrentMember(theId)) {\n+        // this is notification from a shutdown message received from a member that is no longer\n+        // part of the cluster\n+        return;\n       }\n-      String msg;\n-      if (p_crashed && !shouldInhibitMembershipWarnings()) {\n-        msg =\n-            \"Member at {} unexpectedly left the distributed cache: {}\";\n-        addMemberEvent(new MemberCrashedEvent(theId, p_reason));\n-      } else {\n-        msg =\n-            \"Member at {} gracefully left the distributed cache: {}\";\n-        addMemberEvent(new MemberDepartedEvent(theId, p_reason));\n+      // else this is from a shutdown message so continue & notify listeners\n+    } else {\n+      if (!memberCrashed) {\n+        // member left the view normally - we've already received a shutdown message and notified\n+        // listeners, so there's nothing more to do here\n+        return;\n       }\n-      logger.info(msg, new Object[] {theId, prettifyReason(p_reason)});\n+    }\n \n-      executors.handleManagerDeparture(theId);\n+    removeManager(theId, memberCrashed, reason);\n+    if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n+      stats.incNodes(-1);\n+    }\n+    String msg;\n+    if (memberCrashed && !shouldInhibitMembershipWarnings()) {\n+      msg =\n+          \"Member at {} unexpectedly left the distributed cache: {}\";\n+      addMemberEvent(new MemberCrashedEvent(theId, reason));\n+    } else {\n+      msg =\n+          \"Member at {} gracefully left the distributed cache: {}\";\n+      addMemberEvent(new MemberDepartedEvent(theId, reason));\n     }\n+    logger.info(msg, new Object[] {theId, prettifyReason(reason)});\n+\n+    executors.handleManagerDeparture(theId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTI2NDY4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzowMTo1MlrOG32jwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDoxODowMVrOG4O6Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxODc1Mg==", "bodyText": "why did this statement move? should it be in a finally block?", "url": "https://github.com/apache/geode/pull/5403#discussion_r461218752", "createdAt": "2020-07-27T23:01:52Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -2366,10 +2375,10 @@ public void memberDeparted(InternalDistributedMember theId, boolean crashed, Str\n           message.setReason(reason); // added for #37950\n           handleIncomingDMsg(message);\n         }\n-        dm.handleManagerDeparture(theId, crashed, reason);\n       } catch (DistributedSystemDisconnectedException se) {\n         // let's not get huffy about it\n       }\n+      dm.handleManagerDeparture(theId, crashed, reason, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNzY2Nw==", "bodyText": "that change was unnecessary - I'll revert it.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461617667", "createdAt": "2020-07-28T14:18:01Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -2366,10 +2375,10 @@ public void memberDeparted(InternalDistributedMember theId, boolean crashed, Str\n           message.setReason(reason); // added for #37950\n           handleIncomingDMsg(message);\n         }\n-        dm.handleManagerDeparture(theId, crashed, reason);\n       } catch (DistributedSystemDisconnectedException se) {\n         // let's not get huffy about it\n       }\n+      dm.handleManagerDeparture(theId, crashed, reason, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIxODc1Mg=="}, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTI4MjE4OnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMemberData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzowOToxOVrOG32uAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDoxMzo0NlrOG4OpTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyMTM3OA==", "bodyText": "Why did the name change to \"GMSMember\" here? It was \"MemberData\" which kinda made sense because GMSMemberData isa MemberData. I could see leaving it alone or maybe making it GMSMemberData.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461221378", "createdAt": "2020-07-27T23:09:19Z", "author": {"login": "Bill"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMemberData.java", "diffHunk": "@@ -399,11 +399,11 @@ public int hashCode() {\n   public String toString() {\n     StringBuilder sb = new StringBuilder(100);\n \n-    sb.append(\"MemberData[\");\n+    sb.append(\"GMSMember[\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxMzM5MQ==", "bodyText": "I think that's an artifact of my doing this work on an old SHA and then rebasing onto develop.  I'll revert that change", "url": "https://github.com/apache/geode/pull/5403#discussion_r461613391", "createdAt": "2020-07-28T14:13:46Z", "author": {"login": "bschuchardt"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMemberData.java", "diffHunk": "@@ -399,11 +399,11 @@ public int hashCode() {\n   public String toString() {\n     StringBuilder sb = new StringBuilder(100);\n \n-    sb.append(\"MemberData[\");\n+    sb.append(\"GMSMember[\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyMTM3OA=="}, "originalCommit": {"oid": "d80d2b15aa7d0ab75aaef0ac308eecd1ea476e4d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjE3MDQzOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNToyMjowOFrOG4R9vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNToyMjowOFrOG4R9vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY2Nzc3Mg==", "bodyText": "nice", "url": "https://github.com/apache/geode/pull/5403#discussion_r461667772", "createdAt": "2020-07-28T15:22:08Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,41 +1848,45 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason, false);\n   }\n \n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n-\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a2d355b763a9a7c50388c20010801bbf3fc0c49"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjE3NDExOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNToyMjo1OVrOG4SAEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNToyMjo1OVrOG4SAEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY2ODM2OQ==", "bodyText": "\u2713 inlined removeManager()", "url": "https://github.com/apache/geode/pull/5403#discussion_r461668369", "createdAt": "2020-07-28T15:22:59Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,41 +1848,45 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason, false);\n   }\n \n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n-\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);\n+\n     int vmType = theId.getVmKind();\n     if (vmType == ADMIN_ONLY_DM_TYPE) {\n-      removeUnfinishedStartup(theId, true);\n-      handleConsoleShutdown(theId, p_crashed, p_reason);\n+      handleConsoleShutdown(theId, memberCrashed, reason);\n       return;\n     }\n \n-    removeUnfinishedStartup(theId, true);\n-\n-    if (removeManager(theId, p_crashed, p_reason)) {\n-      if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n-        stats.incNodes(-1);\n-      }\n-      String msg;\n-      if (p_crashed && !shouldInhibitMembershipWarnings()) {\n-        msg =\n-            \"Member at {} unexpectedly left the distributed cache: {}\";\n-        addMemberEvent(new MemberCrashedEvent(theId, p_reason));\n-      } else {\n-        msg =\n-            \"Member at {} gracefully left the distributed cache: {}\";\n-        addMemberEvent(new MemberDepartedEvent(theId, p_reason));\n-      }\n-      logger.info(msg, new Object[] {theId, prettifyReason(p_reason)});\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\"DistributionManager: removing member <{}>; crashed {}; reason = {}\", theId,\n+          memberCrashed, prettifyReason(reason));\n+    }\n+    removeHostedLocators(theId);\n+    redundancyZones.remove(theId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a2d355b763a9a7c50388c20010801bbf3fc0c49"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkyMTc0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozMjo0M1rOG4ZVsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1NzoxNlrOG4ceow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODU5Mw==", "bodyText": "Why this is not handleManagerDeparture(theId, false, reason, true)? handleManagerDeparture(theId, false, reason) will not update the stats in line 1887.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461788593", "createdAt": "2020-07-28T18:32:43Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,39 +1848,56 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b04ff3688d14ce69d65220c03c9541cdefedd6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg0MDAzNQ==", "bodyText": "Sorry, I don't understand the question.  We want to decrement the node count once, but this method will be invoked multiple times for the same departing node.  If we restrict the decrement to view-changes it will only be decremented once because we only notify memberDeparted once for a member that's left the view.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461840035", "createdAt": "2020-07-28T19:57:16Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,39 +1848,56 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODU5Mw=="}, "originalCommit": {"oid": "c1b04ff3688d14ce69d65220c03c9541cdefedd6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjk0MzEwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozODo0M1rOG4ZjPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMToyMDozMVrOG4fUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjA2Mw==", "bodyText": "Would it better to move the logger.info out of the if statement? So regardless the value of fromViewChange, it logs the member departure. It will be helpful when analyzing the logs.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461792063", "createdAt": "2020-07-28T18:38:43Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,39 +1848,56 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason);\n   }\n \n+  /*\n+   * handleManagerDeparted may be invoked multiple times for a member identifier.\n+   * We allow this and inform listeners on each invocation, but only perform some\n+   * actions (such as decrementing the node count) if the change came from a\n+   * membership view.\n+   */\n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason) {\n+    handleManagerDeparture(theId, memberCrashed, reason, false);\n+  }\n \n+  private void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);\n+\n     int vmType = theId.getVmKind();\n     if (vmType == ADMIN_ONLY_DM_TYPE) {\n-      removeUnfinishedStartup(theId, true);\n-      handleConsoleShutdown(theId, p_crashed, p_reason);\n+      handleConsoleShutdown(theId, memberCrashed, reason);\n       return;\n     }\n \n-    removeUnfinishedStartup(theId, true);\n-\n-    if (removeManager(theId, p_crashed, p_reason)) {\n-      if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n-        stats.incNodes(-1);\n-      }\n-      String msg;\n-      if (p_crashed && !shouldInhibitMembershipWarnings()) {\n-        msg =\n-            \"Member at {} unexpectedly left the distributed cache: {}\";\n-        addMemberEvent(new MemberCrashedEvent(theId, p_reason));\n-      } else {\n-        msg =\n-            \"Member at {} gracefully left the distributed cache: {}\";\n-        addMemberEvent(new MemberDepartedEvent(theId, p_reason));\n-      }\n-      logger.info(msg, new Object[] {theId, prettifyReason(p_reason)});\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\n+          \"DistributionManager: removing member <{}>; crashed {}; reason = {} fromView = {}\", theId,\n+          memberCrashed, prettifyReason(reason), fromViewChange);\n+    }\n+    removeHostedLocators(theId);\n+    redundancyZones.remove(theId);\n \n+    if (fromViewChange && theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n+      stats.incNodes(-1);\n+    }\n+    String msg;\n+    if (memberCrashed && !shouldInhibitMembershipWarnings()) {\n+      msg =\n+          \"Member at {} unexpectedly left the distributed cache: {}\";\n+      addMemberEvent(new MemberCrashedEvent(theId, reason));\n+    } else {\n+      msg =\n+          \"Member at {} gracefully left the distributed cache: {}\";\n+      addMemberEvent(new MemberDepartedEvent(theId, reason));\n+    }\n+    if (fromViewChange) {\n+      logger.info(msg, new Object[] {theId, prettifyReason(reason)});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b04ff3688d14ce69d65220c03c9541cdefedd6"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzOTE5MQ==", "bodyText": "If I move it out of the if statement it will log the departure on every invocation of this method, and I don't want to do that.  I think it will be confusing.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461839191", "createdAt": "2020-07-28T19:55:44Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,39 +1848,56 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason);\n   }\n \n+  /*\n+   * handleManagerDeparted may be invoked multiple times for a member identifier.\n+   * We allow this and inform listeners on each invocation, but only perform some\n+   * actions (such as decrementing the node count) if the change came from a\n+   * membership view.\n+   */\n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason) {\n+    handleManagerDeparture(theId, memberCrashed, reason, false);\n+  }\n \n+  private void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);\n+\n     int vmType = theId.getVmKind();\n     if (vmType == ADMIN_ONLY_DM_TYPE) {\n-      removeUnfinishedStartup(theId, true);\n-      handleConsoleShutdown(theId, p_crashed, p_reason);\n+      handleConsoleShutdown(theId, memberCrashed, reason);\n       return;\n     }\n \n-    removeUnfinishedStartup(theId, true);\n-\n-    if (removeManager(theId, p_crashed, p_reason)) {\n-      if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n-        stats.incNodes(-1);\n-      }\n-      String msg;\n-      if (p_crashed && !shouldInhibitMembershipWarnings()) {\n-        msg =\n-            \"Member at {} unexpectedly left the distributed cache: {}\";\n-        addMemberEvent(new MemberCrashedEvent(theId, p_reason));\n-      } else {\n-        msg =\n-            \"Member at {} gracefully left the distributed cache: {}\";\n-        addMemberEvent(new MemberDepartedEvent(theId, p_reason));\n-      }\n-      logger.info(msg, new Object[] {theId, prettifyReason(p_reason)});\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\n+          \"DistributionManager: removing member <{}>; crashed {}; reason = {} fromView = {}\", theId,\n+          memberCrashed, prettifyReason(reason), fromViewChange);\n+    }\n+    removeHostedLocators(theId);\n+    redundancyZones.remove(theId);\n \n+    if (fromViewChange && theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n+      stats.incNodes(-1);\n+    }\n+    String msg;\n+    if (memberCrashed && !shouldInhibitMembershipWarnings()) {\n+      msg =\n+          \"Member at {} unexpectedly left the distributed cache: {}\";\n+      addMemberEvent(new MemberCrashedEvent(theId, reason));\n+    } else {\n+      msg =\n+          \"Member at {} gracefully left the distributed cache: {}\";\n+      addMemberEvent(new MemberDepartedEvent(theId, reason));\n+    }\n+    if (fromViewChange) {\n+      logger.info(msg, new Object[] {theId, prettifyReason(reason)});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjA2Mw=="}, "originalCommit": {"oid": "c1b04ff3688d14ce69d65220c03c9541cdefedd6"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg4NjU4OQ==", "bodyText": "I've simplified the method now, so it no longer has fromViewChange.  We'll be notifying listeners of departures when we get a shutdown message.  The subsequent view change won't trigger listener invocation.", "url": "https://github.com/apache/geode/pull/5403#discussion_r461886589", "createdAt": "2020-07-28T21:20:31Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/ClusterDistributionManager.java", "diffHunk": "@@ -1866,39 +1848,56 @@ public void handleConsoleShutdown(InternalDistributedMember theId, boolean crash\n   void shutdownMessageReceived(InternalDistributedMember theId, String reason) {\n     removeHostedLocators(theId);\n     distribution.shutdownMessageReceived(theId, reason);\n+    handleManagerDeparture(theId, false, reason);\n   }\n \n+  /*\n+   * handleManagerDeparted may be invoked multiple times for a member identifier.\n+   * We allow this and inform listeners on each invocation, but only perform some\n+   * actions (such as decrementing the node count) if the change came from a\n+   * membership view.\n+   */\n   @Override\n-  public void handleManagerDeparture(InternalDistributedMember theId, boolean p_crashed,\n-      String p_reason) {\n+  public void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason) {\n+    handleManagerDeparture(theId, memberCrashed, reason, false);\n+  }\n \n+  private void handleManagerDeparture(InternalDistributedMember theId, boolean memberCrashed,\n+      String reason, boolean fromViewChange) {\n     alertingService.removeAlertListener(theId);\n \n+    removeUnfinishedStartup(theId, true);\n+\n     int vmType = theId.getVmKind();\n     if (vmType == ADMIN_ONLY_DM_TYPE) {\n-      removeUnfinishedStartup(theId, true);\n-      handleConsoleShutdown(theId, p_crashed, p_reason);\n+      handleConsoleShutdown(theId, memberCrashed, reason);\n       return;\n     }\n \n-    removeUnfinishedStartup(theId, true);\n-\n-    if (removeManager(theId, p_crashed, p_reason)) {\n-      if (theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n-        stats.incNodes(-1);\n-      }\n-      String msg;\n-      if (p_crashed && !shouldInhibitMembershipWarnings()) {\n-        msg =\n-            \"Member at {} unexpectedly left the distributed cache: {}\";\n-        addMemberEvent(new MemberCrashedEvent(theId, p_reason));\n-      } else {\n-        msg =\n-            \"Member at {} gracefully left the distributed cache: {}\";\n-        addMemberEvent(new MemberDepartedEvent(theId, p_reason));\n-      }\n-      logger.info(msg, new Object[] {theId, prettifyReason(p_reason)});\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\n+          \"DistributionManager: removing member <{}>; crashed {}; reason = {} fromView = {}\", theId,\n+          memberCrashed, prettifyReason(reason), fromViewChange);\n+    }\n+    removeHostedLocators(theId);\n+    redundancyZones.remove(theId);\n \n+    if (fromViewChange && theId.getVmKind() != ClusterDistributionManager.LOCATOR_DM_TYPE) {\n+      stats.incNodes(-1);\n+    }\n+    String msg;\n+    if (memberCrashed && !shouldInhibitMembershipWarnings()) {\n+      msg =\n+          \"Member at {} unexpectedly left the distributed cache: {}\";\n+      addMemberEvent(new MemberCrashedEvent(theId, reason));\n+    } else {\n+      msg =\n+          \"Member at {} gracefully left the distributed cache: {}\";\n+      addMemberEvent(new MemberDepartedEvent(theId, reason));\n+    }\n+    if (fromViewChange) {\n+      logger.info(msg, new Object[] {theId, prettifyReason(reason)});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MjA2Mw=="}, "originalCommit": {"oid": "c1b04ff3688d14ce69d65220c03c9541cdefedd6"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzY5NzMwOnYy", "diffSide": "RIGHT", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1NTo1MVrOG4gpYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTo1NTo1MVrOG4gpYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwODMyMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/geode/pull/5403#discussion_r461908320", "createdAt": "2020-07-28T21:55:51Z", "author": {"login": "jchen21"}, "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -688,7 +688,11 @@ private void removeWithViewLock(ID dm, boolean crashed, String reason) {\n       return; // Explicit deletion, no upcall.\n     }\n \n-    listener.memberDeparted(dm, crashed, reason);\n+    if (!shutdownMembers.containsKey(dm)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63d7ab5e0ec8ea399b73afd873f0c3b4866433a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4825, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}