{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDgxMDg1", "number": 5000, "title": "GEODE-7963: solution for faulty bucket metrics", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn case we are creating persistent colocated region, and parent region is already initialized,\nshow metrics per server will show incorrect values for totalBucketCount and totalPrimaryCount.\nThis is the solution.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n[*] Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n[*] Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n[*] Is your initial contribution a single, squashed commit?\n\n\n[*] Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-04-26T13:08:43Z", "url": "https://github.com/apache/geode/pull/5000", "merged": true, "mergeCommit": {"oid": "1b4b60ca66867a995a593eb0727404e0d89ab9c9"}, "closed": true, "closedAt": "2020-05-10T08:45:43Z", "author": {"login": "mivanac"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdCE01AFqTQwNDE2NDM1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcff_PYABqjMzMTkwMzczMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MTY0MzU4", "url": "https://github.com/apache/geode/pull/5000#pullrequestreview-404164358", "createdAt": "2020-05-01T13:41:31Z", "commit": {"oid": "a68648b49231d55077094f888ab3e58547f03510"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMzo0MTozMVrOGPJ--A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMzo0OTo0M1rOGPKMaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0NTQwMA==", "bodyText": "The exception is never thrown, it can be deleted.", "url": "https://github.com/apache/geode/pull/5000#discussion_r418545400", "createdAt": "2020-05-01T13:41:31Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MemberMXBeanDistributedTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management;\n+\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+\n+import java.io.Serializable;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.rules.TestName;\n+\n+import org.apache.geode.cache.Cache;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.categories.GfshTest;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@Category({GfshTest.class})\n+public class MemberMXBeanDistributedTest implements\n+    Serializable {\n+\n+  private static MemberVM locator, server1, server2, server3, server4;\n+\n+  @ClassRule\n+  public static ClusterStartupRule lsRule = new ClusterStartupRule();\n+\n+  @ClassRule\n+  public static GfshCommandRule gfsh = new GfshCommandRule();\n+\n+  @Rule\n+  public TestName testName = new SerializableTestName();\n+\n+  @BeforeClass\n+  public static void before() throws Exception {\n+    locator = lsRule.startLocatorVM(0);\n+    server1 = lsRule.startServerVM(1, \"\", locator.getPort());\n+    server2 = lsRule.startServerVM(2, \"\", locator.getPort());\n+    server3 = lsRule.startServerVM(3, \"\", locator.getPort());\n+    server4 = lsRule.startServerVM(4, \"\", locator.getPort());\n+\n+    gfsh.connectAndVerify(locator);\n+  }\n+\n+  @Test\n+  public void testBucketCount() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68648b49231d55077094f888ab3e58547f03510"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0NTkyNQ==", "bodyText": "Unused variable, it can be deleted.", "url": "https://github.com/apache/geode/pull/5000#discussion_r418545925", "createdAt": "2020-05-01T13:42:45Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MemberMXBeanDistributedTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management;\n+\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+\n+import java.io.Serializable;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.rules.TestName;\n+\n+import org.apache.geode.cache.Cache;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.categories.GfshTest;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@Category({GfshTest.class})\n+public class MemberMXBeanDistributedTest implements\n+    Serializable {\n+\n+  private static MemberVM locator, server1, server2, server3, server4;\n+\n+  @ClassRule\n+  public static ClusterStartupRule lsRule = new ClusterStartupRule();\n+\n+  @ClassRule\n+  public static GfshCommandRule gfsh = new GfshCommandRule();\n+\n+  @Rule\n+  public TestName testName = new SerializableTestName();\n+\n+  @BeforeClass\n+  public static void before() throws Exception {\n+    locator = lsRule.startLocatorVM(0);\n+    server1 = lsRule.startServerVM(1, \"\", locator.getPort());\n+    server2 = lsRule.startServerVM(2, \"\", locator.getPort());\n+    server3 = lsRule.startServerVM(3, \"\", locator.getPort());\n+    server4 = lsRule.startServerVM(4, \"\", locator.getPort());\n+\n+    gfsh.connectAndVerify(locator);\n+  }\n+\n+  @Test\n+  public void testBucketCount() throws InterruptedException {\n+    String regionName = \"testCreateRegion\";\n+\n+    gfsh.executeAndAssertThat(\"create region\"\n+        + \" --name=\" + regionName\n+        + \" --type=PARTITION_PERSISTENT\"\n+        + \" --total-num-buckets=1000\").statusIsSuccess();\n+\n+    gfsh.executeAndAssertThat(\"query --query=\\\"select * from /\" + regionName + \"\\\"\")\n+        .statusIsSuccess();\n+\n+    server1.invoke(() -> waitBucketsToInitialize(245));\n+    server2.invoke(() -> waitBucketsToInitialize(245));\n+    server3.invoke(() -> waitBucketsToInitialize(245));\n+    server4.invoke(() -> waitBucketsToInitialize(245));\n+\n+    for (int i = 1; i < 4; i++) {\n+      final String tempname = \"/\" + regionName + i;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68648b49231d55077094f888ab3e58547f03510"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0NjgyMg==", "bodyText": "You don't need to execute the query for buckets to get created, it's easier (and cleaner) to execute PartitionRegionHelper.assignBucketsToPartitions(Region<?, ?> region).\nYou can have a look at PartitionedRegionAttributesMutatorDUnitTest for examples.", "url": "https://github.com/apache/geode/pull/5000#discussion_r418546822", "createdAt": "2020-05-01T13:44:54Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MemberMXBeanDistributedTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management;\n+\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+\n+import java.io.Serializable;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.rules.TestName;\n+\n+import org.apache.geode.cache.Cache;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.categories.GfshTest;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@Category({GfshTest.class})\n+public class MemberMXBeanDistributedTest implements\n+    Serializable {\n+\n+  private static MemberVM locator, server1, server2, server3, server4;\n+\n+  @ClassRule\n+  public static ClusterStartupRule lsRule = new ClusterStartupRule();\n+\n+  @ClassRule\n+  public static GfshCommandRule gfsh = new GfshCommandRule();\n+\n+  @Rule\n+  public TestName testName = new SerializableTestName();\n+\n+  @BeforeClass\n+  public static void before() throws Exception {\n+    locator = lsRule.startLocatorVM(0);\n+    server1 = lsRule.startServerVM(1, \"\", locator.getPort());\n+    server2 = lsRule.startServerVM(2, \"\", locator.getPort());\n+    server3 = lsRule.startServerVM(3, \"\", locator.getPort());\n+    server4 = lsRule.startServerVM(4, \"\", locator.getPort());\n+\n+    gfsh.connectAndVerify(locator);\n+  }\n+\n+  @Test\n+  public void testBucketCount() throws InterruptedException {\n+    String regionName = \"testCreateRegion\";\n+\n+    gfsh.executeAndAssertThat(\"create region\"\n+        + \" --name=\" + regionName\n+        + \" --type=PARTITION_PERSISTENT\"\n+        + \" --total-num-buckets=1000\").statusIsSuccess();\n+\n+    gfsh.executeAndAssertThat(\"query --query=\\\"select * from /\" + regionName + \"\\\"\")\n+        .statusIsSuccess();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68648b49231d55077094f888ab3e58547f03510"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU0ODg0Mw==", "bodyText": "The test might become flaky due to the assertions used (waitBucketsToInitialize(X) -> getTotalBucketCount() >= X). Maybe it's better to assert the total number of buckets instead?.", "url": "https://github.com/apache/geode/pull/5000#discussion_r418548843", "createdAt": "2020-05-01T13:49:43Z", "author": {"login": "jujoramos"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/management/MemberMXBeanDistributedTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management;\n+\n+import static org.apache.geode.test.awaitility.GeodeAwaitility.await;\n+\n+import java.io.Serializable;\n+\n+import javax.management.ObjectName;\n+\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.rules.TestName;\n+\n+import org.apache.geode.cache.Cache;\n+import org.apache.geode.distributed.DistributedMember;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.categories.GfshTest;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+import org.apache.geode.test.junit.rules.serializable.SerializableTestName;\n+\n+@Category({GfshTest.class})\n+public class MemberMXBeanDistributedTest implements", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68648b49231d55077094f888ab3e58547f03510"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a68648b49231d55077094f888ab3e58547f03510", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/a68648b49231d55077094f888ab3e58547f03510", "committedDate": "2020-04-29T09:01:26Z", "message": "GEODE-7963: added UT"}, "afterCommit": {"oid": "56088a4b2917eb05e08d33ab587c66f5d8866631", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/56088a4b2917eb05e08d33ab587c66f5d8866631", "committedDate": "2020-05-01T15:14:45Z", "message": "GEODE-7963: update after comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56088a4b2917eb05e08d33ab587c66f5d8866631", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/56088a4b2917eb05e08d33ab587c66f5d8866631", "committedDate": "2020-05-01T15:14:45Z", "message": "GEODE-7963: update after comments"}, "afterCommit": {"oid": "12918b96629e12db658e1b5d384e97147d0ec58a", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/12918b96629e12db658e1b5d384e97147d0ec58a", "committedDate": "2020-05-01T18:18:00Z", "message": "GEODE-7963: update after comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12918b96629e12db658e1b5d384e97147d0ec58a", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/12918b96629e12db658e1b5d384e97147d0ec58a", "committedDate": "2020-05-01T18:18:00Z", "message": "GEODE-7963: update after comments"}, "afterCommit": {"oid": "31d1d6b12d9faa564faab828f8971193e69114cd", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/31d1d6b12d9faa564faab828f8971193e69114cd", "committedDate": "2020-05-01T19:10:30Z", "message": "GEODE-7963: update after comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDU2MzY2", "url": "https://github.com/apache/geode/pull/5000#pullrequestreview-408056366", "createdAt": "2020-05-08T07:33:58Z", "commit": {"oid": "31d1d6b12d9faa564faab828f8971193e69114cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31d1d6b12d9faa564faab828f8971193e69114cd", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/31d1d6b12d9faa564faab828f8971193e69114cd", "committedDate": "2020-05-01T19:10:30Z", "message": "GEODE-7963: update after comments"}, "afterCommit": {"oid": "345739e1ddc54c7d405802b23f1a41f4fc7974cb", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/345739e1ddc54c7d405802b23f1a41f4fc7974cb", "committedDate": "2020-05-08T18:36:25Z", "message": "GEODE-7963: small updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bee2251a89f6a9551a316d1786205569f05b621", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/1bee2251a89f6a9551a316d1786205569f05b621", "committedDate": "2020-05-09T05:38:08Z", "message": "GEODE-7963: solution for faulty bucket metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed13ac3a24849f87ba62bca51587e9db027e9d3f", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/ed13ac3a24849f87ba62bca51587e9db027e9d3f", "committedDate": "2020-05-09T05:38:08Z", "message": "GEODE-7963: added test to reproduce fault"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e880fd8bda96f87afaeb1ae5bd869c25964a211", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/4e880fd8bda96f87afaeb1ae5bd869c25964a211", "committedDate": "2020-05-09T05:38:08Z", "message": "GEODE-7963: added UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d41badf1e18acec110ab84f8c6a23ba3f09b2b", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/27d41badf1e18acec110ab84f8c6a23ba3f09b2b", "committedDate": "2020-05-09T05:38:08Z", "message": "GEODE-7963: update after comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28e2ad159ef0a884ea6b785788764eb47b5a2d81", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/28e2ad159ef0a884ea6b785788764eb47b5a2d81", "committedDate": "2020-05-09T05:53:19Z", "message": "GEODE-7963: small updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "345739e1ddc54c7d405802b23f1a41f4fc7974cb", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/345739e1ddc54c7d405802b23f1a41f4fc7974cb", "committedDate": "2020-05-08T18:36:25Z", "message": "GEODE-7963: small updates"}, "afterCommit": {"oid": "28e2ad159ef0a884ea6b785788764eb47b5a2d81", "author": {"user": {"login": "mivanac", "name": "Mario Ivanac"}}, "url": "https://github.com/apache/geode/commit/28e2ad159ef0a884ea6b785788764eb47b5a2d81", "committedDate": "2020-05-09T05:53:19Z", "message": "GEODE-7963: small updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4627, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}