{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDc5OTIz", "number": 4622, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzo0NjoxN1rODaQfYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzowNzowN1rODaV0Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODU5NzQ3OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzo0NjoxN1rOFhHFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyNzozOFrOFhNMkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2MzM4NQ==", "bodyText": "If isSystemConnected returns false, that means the test will pass immediately. Is that your intention?", "url": "https://github.com/apache/geode/pull/4622#discussion_r370263385", "createdAt": "2020-01-23T17:46:17Z", "author": {"login": "upthewaterspout"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n     vm2.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n \n-    if (vm1.invoke(() -> system.getDistributedMember().equals(getView().getCreator()))) {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> !system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    } else {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    }\n+    await().untilAsserted(() -> {\n+      MemberIdentifier viewCreator = vm1.invoke(() -> getView().getCreator());\n+      MemberIdentifier viewCreator2 = vm1.invoke(() -> getView().getCreator());\n+\n+      if (isSystemConnected()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9844568cd7782956d67527c0302cd1c096a2bd94"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MzUzNg==", "bodyText": "uh, nope... I was just guarding against the NPE that was happening...", "url": "https://github.com/apache/geode/pull/4622#discussion_r370363536", "createdAt": "2020-01-23T21:27:38Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n     vm2.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n \n-    if (vm1.invoke(() -> system.getDistributedMember().equals(getView().getCreator()))) {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> !system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    } else {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    }\n+    await().untilAsserted(() -> {\n+      MemberIdentifier viewCreator = vm1.invoke(() -> getView().getCreator());\n+      MemberIdentifier viewCreator2 = vm1.invoke(() -> getView().getCreator());\n+\n+      if (isSystemConnected()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2MzM4NQ=="}, "originalCommit": {"oid": "9844568cd7782956d67527c0302cd1c096a2bd94"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODYxODAwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzo1MzoxMVrOFhHR-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMToyODoyNlrOFhNN6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NjYxNg==", "bodyText": "I think that waitUntilLocatorBecomesCoordinator should also use view.getCreator(), not view.getCoordinator().  This is allowing the test to proceed past these checks before a locator is actually coordinator - the view merely thinks that one of the locators should become the coordinator.", "url": "https://github.com/apache/geode/pull/4622#discussion_r370266616", "createdAt": "2020-01-23T17:53:11Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9844568cd7782956d67527c0302cd1c096a2bd94"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2Mzg4Mw==", "bodyText": "I'll have a look at that one too, thx", "url": "https://github.com/apache/geode/pull/4622#discussion_r370363883", "createdAt": "2020-01-23T21:28:26Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1314,21 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI2NjYxNg=="}, "originalCommit": {"oid": "9844568cd7782956d67527c0302cd1c096a2bd94"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTQ2OTUxOnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzowNzowN1rOFhPj_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMzowNzowN1rOFhPj_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQwMjMwMQ==", "bodyText": "Remove commented out code.", "url": "https://github.com/apache/geode/pull/4622#discussion_r370402301", "createdAt": "2020-01-23T23:07:07Z", "author": {"login": "upthewaterspout"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/distributed/LocatorDUnitTest.java", "diffHunk": "@@ -1314,17 +1319,20 @@ public void run() {\n     vm1.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n     vm2.invoke(\"waitUntilLocatorBecomesCoordinator\", this::waitUntilLocatorBecomesCoordinator);\n \n-    if (vm1.invoke(() -> system.getDistributedMember().equals(getView().getCreator()))) {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> !system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    } else {\n-      vm2.invoke(() -> {\n-        GeodeAwaitility.await()\n-            .until(() -> system.getDistributedMember().equals(getView().getCreator()));\n-      });\n-    }\n+    await().untilAsserted(() -> {\n+      MemberIdentifier viewCreator = vm1.invoke(() -> getView().getCreator());\n+      MemberIdentifier viewCreator2 = vm1.invoke(() -> getView().getCreator());\n+\n+      // return (InternalDistributedMember) MembershipManagerHelper.getCreator(system);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5ea0daeeb83ffb4e7073e1f5b6de353486bf616"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}