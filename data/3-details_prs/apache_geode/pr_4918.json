{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDk5ODQ0", "number": 4918, "title": "GEODE-7965: Modify Redis SADD command to use region.compute", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-04-07T21:00:41Z", "url": "https://github.com/apache/geode/pull/4918", "merged": true, "mergeCommit": {"oid": "464c7495c35c62241cfd20ace5722c873ff5068b"}, "closed": true, "closedAt": "2020-04-09T20:38:36Z", "author": {"login": "jhutchison"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVaNTKgBqjMyMTE2OTk1MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWBKavAFqTM5MTA0OTQyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ad812d81348768ce659c3b1e47dd1ae15f3d654", "author": {"user": {"login": "ringles", "name": "Ray Ingles"}}, "url": "https://github.com/apache/geode/commit/4ad812d81348768ce659c3b1e47dd1ae15f3d654", "committedDate": "2020-04-07T20:59:22Z", "message": "GEODE-7965: Modify Redis SADD command to use region.compute"}, "afterCommit": {"oid": "a210defd36dcea32acbeeeada0c0a724f74a4f65", "author": {"user": {"login": "ringles", "name": "Ray Ingles"}}, "url": "https://github.com/apache/geode/commit/a210defd36dcea32acbeeeada0c0a724f74a4f65", "committedDate": "2020-04-07T21:30:20Z", "message": "GEODE-7965: Modify Redis SADD command to use region.compute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164", "author": {"user": {"login": "ringles", "name": "Ray Ingles"}}, "url": "https://github.com/apache/geode/commit/d9958ac4ae57c70a13a3683146e60e320a4e2164", "committedDate": "2020-04-08T17:58:54Z", "message": "GEODE-7965: Modify Redis SADD command to use region.compute"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fbb0cbed89d6cd2090341d7f7982b678f904f4d", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/5fbb0cbed89d6cd2090341d7f7982b678f904f4d", "committedDate": "2020-04-08T15:27:06Z", "message": "Trigger CI"}, "afterCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164", "author": {"user": {"login": "ringles", "name": "Ray Ingles"}}, "url": "https://github.com/apache/geode/commit/d9958ac4ae57c70a13a3683146e60e320a4e2164", "committedDate": "2020-04-08T17:58:54Z", "message": "GEODE-7965: Modify Redis SADD command to use region.compute"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzk4ODQ1", "url": "https://github.com/apache/geode/pull/4918#pullrequestreview-390398845", "createdAt": "2020-04-08T23:31:00Z", "commit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzozMTowMFrOGDEgTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzozOToxMlrOGDEqWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MjcxNg==", "bodyText": "Remove this printStackTrace. logger.error will log a stack trace if you do this: logger.error(\"description of context\", e);\nBasically we never want to see e.printStackTrace in geode code. Always use a logger instead.", "url": "https://github.com/apache/geode/pull/4918#discussion_r405872716", "createdAt": "2020-04-08T23:31:00Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -146,6 +146,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception\n       executeCommand(ctx, command);\n     } catch (Exception e) {\n       logger.error(e);\n+      e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MzM5Nw==", "bodyText": "Remove this printStackTrace call. Since \"t\" is given to ToDataException it seems like that should be enough. If you do need something here use the logger but I would advise against that and leave it up to the handler of the ToDataException to display the cause.", "url": "https://github.com/apache/geode/pull/4918#discussion_r405873397", "createdAt": "2020-04-08T23:33:09Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/InternalDataSerializer.java", "diffHunk": "@@ -1506,7 +1506,9 @@ public static void writeDSFID(DataSerializableFixedID o, DataOutput out) throws\n       // error condition, so you also need to check to see if the JVM\n       // is still usable:\n       SystemFailure.checkFailure();\n+      t.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3MzczMQ==", "bodyText": "delete this blank line", "url": "https://github.com/apache/geode/pull/4918#discussion_r405873731", "createdAt": "2020-04-08T23:34:02Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/InternalDataSerializer.java", "diffHunk": "@@ -1506,7 +1506,9 @@ public static void writeDSFID(DataSerializableFixedID o, DataOutput out) throws\n       // error condition, so you also need to check to see if the JVM\n       // is still usable:\n       SystemFailure.checkFailure();\n+      t.printStackTrace();\n       throw new ToDataException(\"toData failed on dsfid=\" + dsfid + \" msg:\" + t.getMessage(), t);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3NDQzOA==", "bodyText": "Do these tests still fail intermittently even with the compute fix?", "url": "https://github.com/apache/geode/pull/4918#discussion_r405874438", "createdAt": "2020-04-08T23:36:22Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/distributedTest/java/org/apache/geode/redis/RedisDistDUnitTest.java", "diffHunk": "@@ -84,7 +89,62 @@ public static void setup() {\n     client2 = cluster.getVM(4);\n   }\n \n+  class ConcurrentSADDOperation extends ClientTestBase {\n+\n+    private final Collection<String> strings;\n+    private final String key;\n+\n+    protected ConcurrentSADDOperation(int port, String key, Collection<String> strings) {\n+      super(port);\n+      this.strings = strings;\n+      this.key = key;\n+    }\n+\n+    @Override\n+    public void run() {\n+      Jedis jedis = new Jedis(LOCALHOST, port, JEDIS_TIMEOUT);\n+      for (String member : strings) {\n+        jedis.sadd(key, member);\n+      }\n+    }\n+  }\n+\n   @Test\n+  public void testConcurrentSaddOperations_runWithoutException_orDataLoss()\n+      throws InterruptedException {\n+    List<String> set1 = new ArrayList<>();\n+    List<String> set2 = new ArrayList<>();\n+    int setSize = populateSetValueArrays(set1, set2);\n+\n+    final String setName = \"keyset\";\n+\n+    AsyncInvocation<Void> remoteSaddInvocation =\n+        client1.invokeAsync(new ConcurrentSADDOperation(server1Port, setName, set1));\n+\n+    client2.invoke(new ConcurrentSADDOperation(server2Port, setName, set2));\n+\n+    remoteSaddInvocation.await();\n+\n+    Jedis jedis = new Jedis(LOCALHOST, server1Port, JEDIS_TIMEOUT);\n+\n+    Set<String> smembers = jedis.smembers(setName);\n+\n+    assertThat(smembers).hasSize(setSize * 2);\n+    assertThat(smembers).contains(set1.toArray(new String[] {}));\n+    assertThat(smembers).contains(set2.toArray(new String[] {}));\n+  }\n+\n+  private int populateSetValueArrays(List<String> set1, List<String> set2) {\n+    int setSize = 5000;\n+    for (int i = 0; i < setSize; i++) {\n+      set1.add(\"SETA-\" + i);\n+      set2.add(\"SETB-\" + i);\n+    }\n+    return setSize;\n+  }\n+\n+  @Test\n+  @Ignore(\"GEODE-7905\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg3NTI4OA==", "bodyText": "It seems like you are expecting a certain exception here. Can it be made more specific than \"Exception\"?", "url": "https://github.com/apache/geode/pull/4918#discussion_r405875288", "createdAt": "2020-04-08T23:39:12Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/SetsIntegrationTest.java", "diffHunk": "@@ -98,6 +101,42 @@ public void testSAddSCard() {\n     assertThat(jedis.scard(key)).isEqualTo(strings.size());\n   }\n \n+  @Rule\n+  public ExpectedException exceptionRule = ExpectedException.none();\n+\n+  @Test\n+  public void testSAdd_withExistingKey_ofWrongType_shouldReturnError() {\n+    String key = \"key\";\n+    String stringValue = \"preexistingValue\";\n+    String[] setValue = new String[1];\n+    setValue[0] = \"set value that should never get added\";\n+\n+    exceptionRule.expect(JedisDataException.class);\n+    exceptionRule.expectMessage(RedisConstants.ERROR_WRONG_TYPE);\n+\n+    jedis.set(key, stringValue);\n+    jedis.sadd(key, setValue);\n+  }\n+\n+  @Test\n+  public void testSAdd_withExistingKey_ofWrongType_shouldNotOverWriteExistingKey() {\n+    String key = \"key\";\n+    String stringValue = \"preexistingValue\";\n+    String[] setValue = new String[1];\n+    setValue[0] = \"set value that should never get added\";\n+\n+    jedis.set(key, stringValue);\n+\n+    try {\n+      jedis.sadd(key, setValue);\n+    } catch (Exception exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9958ac4ae57c70a13a3683146e60e320a4e2164"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66c1b8c73ad16d2e9625671492723b6ae8772b94", "author": {"user": null}, "url": "https://github.com/apache/geode/commit/66c1b8c73ad16d2e9625671492723b6ae8772b94", "committedDate": "2020-04-09T18:24:31Z", "message": "correct issues related to comments in commit review;  remove byteArrayWrapper from sanctionedSerializable.txt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDQ5NDIy", "url": "https://github.com/apache/geode/pull/4918#pullrequestreview-391049422", "createdAt": "2020-04-09T18:53:42Z", "commit": {"oid": "66c1b8c73ad16d2e9625671492723b6ae8772b94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}