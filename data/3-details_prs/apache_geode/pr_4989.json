{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3OTgwNjYy", "number": 4989, "title": "GEODE-8014: Sets and Hashes should be deleted once they are empty", "bodyText": "Redis completely removes keys for sets and hashes once they are empty.\u00a0 Currently the implementation leaves a key for an empty set/hash once the last element is removed.", "createdAt": "2020-04-23T14:58:55Z", "url": "https://github.com/apache/geode/pull/4989", "merged": true, "mergeCommit": {"oid": "3aa36591d2c5f0610f5a819cdd4552037caf1c0b"}, "closed": true, "closedAt": "2020-04-28T18:24:20Z", "author": {"login": "sabbey37"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaeK5XAH2gAyNDA3OTgwNjYyOjc4NDQ0Mjc0MThkZGYwODExM2IzOGFjODk3MzMyZGM4ZDYxZjBjOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccIG1YAFqTQwMjA5ODI1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/7844427418ddf08113b38ac897332dc8d61f0c8a", "committedDate": "2020-04-23T14:57:10Z", "message": "GEODE 8014: Sets and Hashes should be deleted once they are empty"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzIzNTU0", "url": "https://github.com/apache/geode/pull/4989#pullrequestreview-399323554", "createdAt": "2020-04-23T17:31:37Z", "commit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozMTozOFrOGKz4tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzo0MTozN1rOGK0SjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA==", "bodyText": "Instead of \".size() == 0\" I think \".isEmpty()\" is better.", "url": "https://github.com/apache/geode/pull/4989#discussion_r413989044", "createdAt": "2020-04-23T17:31:38Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MjQ4Mw==", "bodyText": "Calling \"hgetall\" and then checking the size does not seem thread safe. Couldn't another  thread add to this set and find the existing one we emptied out and add to it right after this thread checks the size and then we will unregister a non-empty hash?\nIf we do have a concurrency issue I'm still okay with this change since it fixes the non-concurrent case. Maybe we could just add a TODO comment that concurrency needs to be addressed?", "url": "https://github.com/apache/geode/pull/4989#discussion_r413992483", "createdAt": "2020-04-23T17:36:49Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().size() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4OTA0NA=="}, "originalCommit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDg3OQ==", "bodyText": "It seems like this code should only unregister if the current type is REDIS_HASH. I thought you were unregistering here but does getRegionProvider().removeKey change the keyRegistar? I will talk with Sarah about this. I might just not understand this code", "url": "https://github.com/apache/geode/pull/4989#discussion_r413994879", "createdAt": "2020-04-23T17:40:34Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().size() == 0) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NTY2MA==", "bodyText": "Same comments on this block as the above hdel", "url": "https://github.com/apache/geode/pull/4989#discussion_r413995660", "createdAt": "2020-04-23T17:41:37Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,15 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n       return newValue;\n     });\n+\n+    if (members().size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7844427418ddf08113b38ac897332dc8d61f0c8a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/29b17c22b6f878380537f9a0db909b3a6b5a2c35", "committedDate": "2020-04-24T16:12:48Z", "message": "Makes suggested PR review changes and adds concurrent HDel and SRem tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMzgzMzQy", "url": "https://github.com/apache/geode/pull/4989#pullrequestreview-401383342", "createdAt": "2020-04-27T22:54:24Z", "commit": {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMjo1NDoyNFrOGM7ENw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMjo1NDo1M1rOGM7E5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzgzMQ==", "bodyText": "It seems wrong here to refetch the RedisDataType and then blow it away without checking if the type is what we expect. For example here should we check to see if it is == REDIS_SET before calling removeKey?", "url": "https://github.com/apache/geode/pull/4989#discussion_r416203831", "createdAt": "2020-04-27T22:54:24Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,19 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n+      // if(newValue.isEmpty()) {\n+      // context.getRegionProvider().removeKey(key, context.getKeyRegistrar().getType(key));\n+      // }\n+\n       return newValue;\n     });\n+\n+    if (members().isEmpty()) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwMzkwNg==", "bodyText": "It seems wrong here to refetch the RedisDataType and then blow it away without checking if the type is what we expect. For example here should we check to see if it is == REDIS_HASH before calling removeKey?", "url": "https://github.com/apache/geode/pull/4989#discussion_r416203906", "createdAt": "2020-04-27T22:54:38Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/hash/GeodeRedisHashSynchronized.java", "diffHunk": "@@ -89,6 +89,11 @@ public int hdel(List<ByteArrayWrapper> subList) {\n       numDeleted.set(oldHash.size() - newHash.size());\n       return newHash;\n     });\n+\n+    if (hgetall().isEmpty()) {\n+      RedisDataType type = context.getKeyRegistrar().getType(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjIwNDAwNQ==", "bodyText": "should this commented out code be removed?", "url": "https://github.com/apache/geode/pull/4989#discussion_r416204005", "createdAt": "2020-04-27T22:54:53Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/set/GeodeRedisSetSynchronized.java", "diffHunk": "@@ -59,8 +60,19 @@ public long srem(Collection<ByteArrayWrapper> membersToRemove) {\n       Set<ByteArrayWrapper> newValue = createSet(oldValue);\n       newValue.removeAll(membersToRemove);\n       removedCount.set(oldValue.size() - newValue.size());\n+\n+      // if(newValue.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b17c22b6f878380537f9a0db909b3a6b5a2c35"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6fcea8f7cb9a188ae8d2556eb3ddb222c0cef28", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/a6fcea8f7cb9a188ae8d2556eb3ddb222c0cef28", "committedDate": "2020-04-28T13:57:00Z", "message": "Adds tests for key that has a value that is the wrong data type getting passed to SREM and HDEL, updates HDEL to check data type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "226c62c7fc66d075912a40f2dacc4e8c6ca5512b", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/226c62c7fc66d075912a40f2dacc4e8c6ca5512b", "committedDate": "2020-04-28T15:37:49Z", "message": "Removes unit test case that was already covered in an integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd33ce0b2593c49a30296c9cef47bb89d1e637f7", "author": {"user": {"login": "sabbey37", "name": "Sarah"}}, "url": "https://github.com/apache/geode/commit/bd33ce0b2593c49a30296c9cef47bb89d1e637f7", "committedDate": "2020-04-28T15:54:36Z", "message": "Updates HDEL and SREM to check region type again before removing key"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDk4MjU0", "url": "https://github.com/apache/geode/pull/4989#pullrequestreview-402098254", "createdAt": "2020-04-28T18:22:40Z", "commit": {"oid": "bd33ce0b2593c49a30296c9cef47bb89d1e637f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4615, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}