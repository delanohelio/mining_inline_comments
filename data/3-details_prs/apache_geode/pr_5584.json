{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MzE4MDkz", "number": 5584, "title": "GEODE-8566: Redis native tests should not also stand up a Geode server", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-10-01T14:45:17Z", "url": "https://github.com/apache/geode/pull/5584", "merged": true, "mergeCommit": {"oid": "fb3bcac1a5b34e3f082a63ac1d5042b7bf7e9f7e"}, "closed": true, "closedAt": "2020-10-05T16:55:30Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOSeHxAH2gAyNDk2MzE4MDkzOmIzNTdiNjQzNTQ1ZTc4MmIyMDNhNGFiODk2M2ZjY2JlNjgxYmU1MWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPmwKhAFqTUwMjI0NjE2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b357b643545e782b203a4ab8963fccbe681be51c", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/b357b643545e782b203a4ab8963fccbe681be51c", "committedDate": "2020-10-01T14:43:22Z", "message": "GEODE-8566: Redis native tests should not also stand up a Geode server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eaff118b82b0885f4b8299dd160c64423671de6", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/8eaff118b82b0885f4b8299dd160c64423671de6", "committedDate": "2020-10-01T15:13:33Z", "message": "Remove spurious annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDcxMDUx", "url": "https://github.com/apache/geode/pull/5584#pullrequestreview-500471051", "createdAt": "2020-10-01T15:31:28Z", "commit": {"oid": "8eaff118b82b0885f4b8299dd160c64423671de6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNTozMToyOFrOHbP_-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzozNjowMVrOHbUigA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzNTczOQ==", "bodyText": "Should @Override be added to this method?", "url": "https://github.com/apache/geode/pull/5584#discussion_r498335739", "createdAt": "2020-10-01T15:31:28Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/pubsub/PubSubNativeRedisAcceptanceTest.java", "diffHunk": "@@ -15,31 +15,14 @@\n \n package org.apache.geode.redis.internal.executor.pubsub;\n \n-\n-\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n import org.junit.ClassRule;\n-import redis.clients.jedis.Jedis;\n \n import org.apache.geode.NativeRedisTestRule;\n \n-public class PubSubNativeRedisAcceptanceTest extends PubSubIntegrationTest {\n+public class PubSubNativeRedisAcceptanceTest extends AbstractPubSubIntegrationTest {\n   @ClassRule\n   public static NativeRedisTestRule redis = new NativeRedisTestRule();\n \n-  @BeforeClass\n-  public static void setUp() {\n-    subscriber = new Jedis(\"localhost\", redis.getPort(), JEDIS_TIMEOUT);\n-    publisher = new Jedis(\"localhost\", redis.getPort(), JEDIS_TIMEOUT);\n-  }\n-\n-  @AfterClass\n-  public static void tearDown() {\n-    subscriber.close();\n-    publisher.close();\n-  }\n-\n   public int getPort() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eaff118b82b0885f4b8299dd160c64423671de6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMDExMg==", "bodyText": "This is not related to this PR, but I guess we should go through and make sure these timeouts are all set to Math.toIntExact(GeodeAwaitility.getTimeout().toMillis()); at some point.", "url": "https://github.com/apache/geode/pull/5584#discussion_r498410112", "createdAt": "2020-10-01T17:36:01Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/internal/executor/key/AbstractExpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,339 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.key;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.test.dunit.rules.RedisPortSupplier;\n+\n+public abstract class AbstractExpireIntegrationTest implements RedisPortSupplier {\n+\n+  private Jedis jedis;\n+  private static int REDIS_CLIENT_TIMEOUT = 10000000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b357b643545e782b203a4ab8963fccbe681be51c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzAyMzc1", "url": "https://github.com/apache/geode/pull/5584#pullrequestreview-500702375", "createdAt": "2020-10-01T20:41:24Z", "commit": {"oid": "8eaff118b82b0885f4b8299dd160c64423671de6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo0MToyNFrOHbaH-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDo0MToyNFrOHbaH-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUwMTYyNQ==", "bodyText": "Should we move this test out of the AbstractRenameIntegrationTest file and into RenameIntegrationTest file like the leakedSubscriptions test (which is just in the SubscriptionsIntegrationTest file)?  Not sure which is better.", "url": "https://github.com/apache/geode/pull/5584#discussion_r498501625", "createdAt": "2020-10-01T20:41:24Z", "author": {"login": "sabbey37"}, "path": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/key/RenameNativeRedisAcceptanceTest.java", "diffHunk": "@@ -14,30 +14,25 @@\n  */\n package org.apache.geode.redis.internal.executor.key;\n \n-import java.util.Random;\n-\n-import org.junit.BeforeClass;\n import org.junit.ClassRule;\n import org.junit.Ignore;\n import org.junit.Test;\n-import redis.clients.jedis.Jedis;\n \n import org.apache.geode.NativeRedisTestRule;\n \n-public class RenameNativeRedisAcceptanceTest extends RenameIntegrationTest {\n+public class RenameNativeRedisAcceptanceTest extends AbstractRenameIntegrationTest {\n+\n   @ClassRule\n   public static NativeRedisTestRule redis = new NativeRedisTestRule();\n \n-  @BeforeClass\n-  public static void setUp() {\n-    rand = new Random();\n-    jedis = new Jedis(\"localhost\", redis.getPort(), 10000000);\n-    jedis2 = new Jedis(\"localhost\", redis.getPort(), 10000000);\n-    jedis3 = new Jedis(\"localhost\", redis.getPort(), 10000000);\n+  @Override\n+  public int getPort() {\n+    return redis.getPort();\n   }\n \n   @Override\n   @Test\n   @Ignore(\"native redis does implement renamenx\")\n   public void renamenxIsUnimplemented() {}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eaff118b82b0885f4b8299dd160c64423671de6"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c90f119401d56a9ee08a96bd9d904f240cb7def6", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/c90f119401d56a9ee08a96bd9d904f240cb7def6", "committedDate": "2020-10-02T20:45:12Z", "message": "Review feedback plus some more tests that did not have native counterparts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjQzNjAx", "url": "https://github.com/apache/geode/pull/5584#pullrequestreview-502243601", "createdAt": "2020-10-05T16:51:43Z", "commit": {"oid": "c90f119401d56a9ee08a96bd9d904f240cb7def6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjQ2MTY1", "url": "https://github.com/apache/geode/pull/5584#pullrequestreview-502246165", "createdAt": "2020-10-05T16:55:06Z", "commit": {"oid": "c90f119401d56a9ee08a96bd9d904f240cb7def6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}