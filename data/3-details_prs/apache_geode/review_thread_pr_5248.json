{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MDM1MzAw", "number": 5248, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzozOTozNFrOEFTPZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzo0MDoyMFrOEFTPmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTkzNTczOnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzozOTozNFrOGjbWGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzozOTozNFrOGjbWGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMTM3MA==", "bodyText": "Please change names, e.g. onEventCalls -> onEventCreateCalls, onEventUPDATE -> onEventUpdateCalls", "url": "https://github.com/apache/geode/pull/5248#discussion_r439801370", "createdAt": "2020-06-14T07:39:34Z", "author": {"login": "mkevo"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "diffHunk": "@@ -196,6 +252,32 @@ public void close() {\n     }\n   }\n \n+  private class TestCqListener2 implements CqListener, Serializable {\n+    public int onEventCalls = 0;\n+    public int onEventUPDATE = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45da33251c2124faf4087856b4bff61581cd628"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTkzNjAzOnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzo0MDowNVrOGjbWPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzo0MDowNVrOGjbWPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMTQwNw==", "bodyText": "remove blank line", "url": "https://github.com/apache/geode/pull/5248#discussion_r439801407", "createdAt": "2020-06-14T07:40:05Z", "author": {"login": "mkevo"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "diffHunk": "@@ -196,6 +252,32 @@ public void close() {\n     }\n   }\n \n+  private class TestCqListener2 implements CqListener, Serializable {\n+    public int onEventCalls = 0;\n+    public int onEventUPDATE = 0;\n+\n+    @Override\n+    public void onEvent(CqEvent aCqEvent) {\n+      Operation queryOperation = aCqEvent.getQueryOperation();\n+      if (queryOperation.isCreate()) {\n+        onEventCalls++;\n+      } else if (queryOperation.isUpdate()) {\n+        onEventUPDATE++;\n+      }\n+    }\n+\n+    @Override\n+    public void onError(CqEvent aCqEvent) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45da33251c2124faf4087856b4bff61581cd628"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTkzNjI0OnYy", "diffSide": "RIGHT", "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzo0MDoyMFrOGjbWVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwNzo1MToyMVrOGjbZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMTQzMA==", "bodyText": "remove blank line", "url": "https://github.com/apache/geode/pull/5248#discussion_r439801430", "createdAt": "2020-06-14T07:40:20Z", "author": {"login": "mkevo"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "diffHunk": "@@ -196,6 +252,32 @@ public void close() {\n     }\n   }\n \n+  private class TestCqListener2 implements CqListener, Serializable {\n+    public int onEventCalls = 0;\n+    public int onEventUPDATE = 0;\n+\n+    @Override\n+    public void onEvent(CqEvent aCqEvent) {\n+      Operation queryOperation = aCqEvent.getQueryOperation();\n+      if (queryOperation.isCreate()) {\n+        onEventCalls++;\n+      } else if (queryOperation.isUpdate()) {\n+        onEventUPDATE++;\n+      }\n+    }\n+\n+    @Override\n+    public void onError(CqEvent aCqEvent) {\n+\n+    }\n+\n+    @Override\n+    public void close() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45da33251c2124faf4087856b4bff61581cd628"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMjAyOA==", "bodyText": "Thanks for comments. Updated", "url": "https://github.com/apache/geode/pull/5248#discussion_r439802028", "createdAt": "2020-06-14T07:48:07Z", "author": {"login": "mivanac"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "diffHunk": "@@ -196,6 +252,32 @@ public void close() {\n     }\n   }\n \n+  private class TestCqListener2 implements CqListener, Serializable {\n+    public int onEventCalls = 0;\n+    public int onEventUPDATE = 0;\n+\n+    @Override\n+    public void onEvent(CqEvent aCqEvent) {\n+      Operation queryOperation = aCqEvent.getQueryOperation();\n+      if (queryOperation.isCreate()) {\n+        onEventCalls++;\n+      } else if (queryOperation.isUpdate()) {\n+        onEventUPDATE++;\n+      }\n+    }\n+\n+    @Override\n+    public void onError(CqEvent aCqEvent) {\n+\n+    }\n+\n+    @Override\n+    public void close() {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMTQzMA=="}, "originalCommit": {"oid": "c45da33251c2124faf4087856b4bff61581cd628"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMjI3OA==", "bodyText": "Thanks!", "url": "https://github.com/apache/geode/pull/5248#discussion_r439802278", "createdAt": "2020-06-14T07:51:21Z", "author": {"login": "mkevo"}, "path": "geode-cq/src/distributedTest/java/org/apache/geode/cache/query/cq/CQDistributedTest.java", "diffHunk": "@@ -196,6 +252,32 @@ public void close() {\n     }\n   }\n \n+  private class TestCqListener2 implements CqListener, Serializable {\n+    public int onEventCalls = 0;\n+    public int onEventUPDATE = 0;\n+\n+    @Override\n+    public void onEvent(CqEvent aCqEvent) {\n+      Operation queryOperation = aCqEvent.getQueryOperation();\n+      if (queryOperation.isCreate()) {\n+        onEventCalls++;\n+      } else if (queryOperation.isUpdate()) {\n+        onEventUPDATE++;\n+      }\n+    }\n+\n+    @Override\n+    public void onError(CqEvent aCqEvent) {\n+\n+    }\n+\n+    @Override\n+    public void close() {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMTQzMA=="}, "originalCommit": {"oid": "c45da33251c2124faf4087856b4bff61581cd628"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3998, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}