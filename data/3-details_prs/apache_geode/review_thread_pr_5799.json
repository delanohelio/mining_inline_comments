{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjI5NTcw", "number": 5799, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjozNFrOFAdXWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjozNFrOFAdXWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI1NDMzOnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjozNFrOH-w91Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODoxODo1NlrOH_chCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjAyMQ==", "bodyText": "Is it better to initialize latch to CountDownLatch(0) instead of null? Also initialize it in line 45, when latch is declared?", "url": "https://github.com/apache/geode/pull/5799#discussion_r535576021", "createdAt": "2020-12-03T20:32:34Z", "author": {"login": "jchen21"}, "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java", "diffHunk": "@@ -40,12 +41,20 @@\n \n   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();\n \n-  private static final AtomicReference<Long> threadId = new AtomicReference<>();\n+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);\n   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n \n   @Rule\n   public DistributedRule distributedRule = new DistributedRule();\n \n+  @Before\n+  public void setUp() {\n+    getVM(0).invoke(() -> {\n+      latch.set(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09b1e4bf79ca3918c5310a561ffffc9d03cf34e4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1MjU1OQ==", "bodyText": "Yes, it would be better to avoid nulls and use CountDownLatch(0). Thanks!", "url": "https://github.com/apache/geode/pull/5799#discussion_r535752559", "createdAt": "2020-12-04T00:45:10Z", "author": {"login": "kirklund"}, "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java", "diffHunk": "@@ -40,12 +41,20 @@\n \n   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();\n \n-  private static final AtomicReference<Long> threadId = new AtomicReference<>();\n+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);\n   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n \n   @Rule\n   public DistributedRule distributedRule = new DistributedRule();\n \n+  @Before\n+  public void setUp() {\n+    getVM(0).invoke(() -> {\n+      latch.set(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjAyMQ=="}, "originalCommit": {"oid": "09b1e4bf79ca3918c5310a561ffffc9d03cf34e4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI4OTU0Nw==", "bodyText": "I think I've resolved this. Please take a look. Thanks!", "url": "https://github.com/apache/geode/pull/5799#discussion_r536289547", "createdAt": "2020-12-04T18:18:56Z", "author": {"login": "kirklund"}, "path": "geode-dunit/src/distributedTest/java/org/apache/geode/test/dunit/tests/AsyncInvocationTimeoutDistributedTest.java", "diffHunk": "@@ -40,12 +41,20 @@\n \n   private static final long TIMEOUT_MILLIS = getTimeout().toMillis();\n \n-  private static final AtomicReference<Long> threadId = new AtomicReference<>();\n+  private static final AtomicReference<Long> threadId = new AtomicReference<>(0L);\n   private static final AtomicReference<CountDownLatch> latch = new AtomicReference<>();\n \n   @Rule\n   public DistributedRule distributedRule = new DistributedRule();\n \n+  @Before\n+  public void setUp() {\n+    getVM(0).invoke(() -> {\n+      latch.set(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjAyMQ=="}, "originalCommit": {"oid": "09b1e4bf79ca3918c5310a561ffffc9d03cf34e4"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4528, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}