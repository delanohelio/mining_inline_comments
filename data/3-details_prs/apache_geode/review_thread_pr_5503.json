{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMjMzNTQ3", "number": 5503, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo0MzoyMVrOEimGgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo0MzoyMVrOEimGgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzExMjk4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/control/InternalResourceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTo0MzoyMVrOHQkHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyOTo0M1rOHQpcJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDkzNw==", "bodyText": "Can this be achieved by changing startupTasks to CopyOnWriteArrayList.", "url": "https://github.com/apache/geode/pull/5503#discussion_r487130937", "createdAt": "2020-09-11T15:43:21Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/control/InternalResourceManager.java", "diffHunk": "@@ -637,7 +638,9 @@ private ThreadsMonitoring getThreadMonitorObj() {\n    */\n   public void addStartupTask(CompletableFuture<Void> startupTask) {\n     Objects.requireNonNull(startupTask);\n-    startupTasks.add(startupTask);\n+    synchronized (startupTasks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e1a7291f40880d559e5e0a4894c80d62f8d065"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODIxMw==", "bodyText": "CopyOnWriteArrayList makes a fresh copy of the underlying array for every mutative operation such as add. This is too costly for this use case.", "url": "https://github.com/apache/geode/pull/5503#discussion_r487218213", "createdAt": "2020-09-11T18:29:43Z", "author": {"login": "jchen21"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/control/InternalResourceManager.java", "diffHunk": "@@ -637,7 +638,9 @@ private ThreadsMonitoring getThreadMonitorObj() {\n    */\n   public void addStartupTask(CompletableFuture<Void> startupTask) {\n     Objects.requireNonNull(startupTask);\n-    startupTasks.add(startupTask);\n+    synchronized (startupTasks) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDkzNw=="}, "originalCommit": {"oid": "41e1a7291f40880d559e5e0a4894c80d62f8d065"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4787, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}