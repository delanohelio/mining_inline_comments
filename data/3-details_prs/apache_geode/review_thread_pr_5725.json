{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NDQ4Mzkz", "number": 5725, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzozMzowMVrOE3VcFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjozNTozMFrOE3yC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDU4Mzg5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzozMzowMVrOHwnstQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTo1MDo0NlrOHww_WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw==", "bodyText": "JUnit has ExpectedException which I think works better than try catch statements.  There are some examples in the Geode code base if you want some inspiration", "url": "https://github.com/apache/geode/pull/5725#discussion_r520744117", "createdAt": "2020-11-10T17:33:01Z", "author": {"login": "moleske"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NzI0Ng==", "bodyText": "Thanks for the comment! TBH I\u2019ve never used JUnit or mockito before, so any comments are welcome!", "url": "https://github.com/apache/geode/pull/5725#discussion_r520747246", "createdAt": "2020-11-10T17:37:45Z", "author": {"login": "gaussianrecurrence"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, "originalCommit": {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1MDMzNw==", "bodyText": "Always glad to provide new learning opportunities for folks \ud83d\ude04\nPlus no time like the present to learn new things!", "url": "https://github.com/apache/geode/pull/5725#discussion_r520750337", "createdAt": "2020-11-10T17:42:28Z", "author": {"login": "moleske"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, "originalCommit": {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MzYwMw==", "bodyText": "AssertJ also has a very convenient assertThatThrownBy() which lets you assert on the type of exception thrown as well as specific messages, causes, etc. There are numerous examples throughout the test code.", "url": "https://github.com/apache/geode/pull/5725#discussion_r520873603", "createdAt": "2020-11-10T21:06:02Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, "originalCommit": {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5NjM0NQ==", "bodyText": "Finally went for AssertJ choice. Now the test is more more clear. Thanks!", "url": "https://github.com/apache/geode/pull/5725#discussion_r520896345", "createdAt": "2020-11-10T21:50:46Z", "author": {"login": "gaussianrecurrence"}, "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, "originalCommit": {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTI3MDA3OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjozNToxOVrOHxU9xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjozNToyNFrOHxgyUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA==", "bodyText": "You should just use the exception here instead of e.getCause() otherwise you're discarding one of the stack frames in the exception chain.", "url": "https://github.com/apache/geode/pull/5725#discussion_r521485764", "createdAt": "2020-11-11T16:35:19Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bcccc932b678041a857bd4eb339cb016f36ccfe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MDExMQ==", "bodyText": "Wouldn't the message then be duplicated? I am asking out of ignorance :S\nI mean probably it should be something like:\nthrow new GemFireConfigException(\"Configuration exception while starting up distribution\", e);\n?", "url": "https://github.com/apache/geode/pull/5725#discussion_r521490111", "createdAt": "2020-11-11T16:41:56Z", "author": {"login": "gaussianrecurrence"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA=="}, "originalCommit": {"oid": "7bcccc932b678041a857bd4eb339cb016f36ccfe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3OTQ0Mw==", "bodyText": "The actual message (string) would be duplicated, but that's OK. You wouldn't be losing part of the full stack trace however. It's not a big deal since you're typically only concerned with the root cause, but it's always better to leave information which may be helpful for debugging.\nAnd, yes your example throw is what I'd suggest. That's also what happens just a few lines higher up.", "url": "https://github.com/apache/geode/pull/5725#discussion_r521679443", "createdAt": "2020-11-11T22:35:24Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA=="}, "originalCommit": {"oid": "7bcccc932b678041a857bd4eb339cb016f36ccfe"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTI3MDk0OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjozNTozMFrOHxU-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjozNTozMFrOHxU-SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTg5Ng==", "bodyText": "Ditto", "url": "https://github.com/apache/geode/pull/5725#discussion_r521485896", "createdAt": "2020-11-11T16:35:30Z", "author": {"login": "jdeppe-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());\n     } catch (MemberStartupException e) {\n-      throw new SystemConnectException(e.getMessage());\n+      throw new SystemConnectException(e.getMessage(), e.getCause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bcccc932b678041a857bd4eb339cb016f36ccfe"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4620, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}