{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDcyNDk4", "number": 4792, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToyODo1NVrODn3_Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTozMDo1NFrODn4CFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTM4MzMxOnYy", "diffSide": "RIGHT", "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/HeadlessGfsh.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToyODo1NVrOF2IEYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDowNDoxOVrOF2WVhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5OTYxNg==", "bodyText": "Isn't there a new warning for an empty catch block?", "url": "https://github.com/apache/geode/pull/4792#discussion_r392299616", "createdAt": "2020-03-13T15:28:55Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/HeadlessGfsh.java", "diffHunk": "@@ -260,16 +259,12 @@ public boolean hasError() {\n     public void promptLoop() {\n       lock.lock();\n       try {\n-        while (true) {\n-          try {\n-            endOfShell.await();\n-          } catch (InterruptedException e) {\n-            // e.printStackTrace();\n-          }\n-          this.exitShellRequest = ExitShellRequest.NORMAL_EXIT;\n-          setShellStatus(Status.SHUTTING_DOWN);\n-          break;\n+        try {\n+          endOfShell.await();\n+        } catch (InterruptedException ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a5098509409c610705499589d1c3ceb095c224"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzMzM4MA==", "bodyText": "Not in the compiler but in IJ and other tools. IJ is ok if you name it ignore.", "url": "https://github.com/apache/geode/pull/4792#discussion_r392533380", "createdAt": "2020-03-14T00:04:19Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-dunit/src/main/java/org/apache/geode/management/internal/cli/HeadlessGfsh.java", "diffHunk": "@@ -260,16 +259,12 @@ public boolean hasError() {\n     public void promptLoop() {\n       lock.lock();\n       try {\n-        while (true) {\n-          try {\n-            endOfShell.await();\n-          } catch (InterruptedException e) {\n-            // e.printStackTrace();\n-          }\n-          this.exitShellRequest = ExitShellRequest.NORMAL_EXIT;\n-          setShellStatus(Status.SHUTTING_DOWN);\n-          break;\n+        try {\n+          endOfShell.await();\n+        } catch (InterruptedException ignore) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5OTYxNg=="}, "originalCommit": {"oid": "61a5098509409c610705499589d1c3ceb095c224"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTM5MDkzOnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/NetstatDUnitTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTozMDo1NFrOF2IJPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDozODo1NVrOF2WsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMDg2MQ==", "bodyText": "Do we have a JIRA to replace this test with one using the non-deprecated code path? I understand that work is beyond the scope of 7869", "url": "https://github.com/apache/geode/pull/4792#discussion_r392300861", "createdAt": "2020-03-13T15:30:54Z", "author": {"login": "rhoughton-pivot"}, "path": "geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/NetstatDUnitTest.java", "diffHunk": "@@ -165,6 +166,7 @@ public void testOutputWithLsofToFile() throws Exception {\n \n     File outputFile = new File(temp.newFolder(), \"command.log.txt\");\n \n+    @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61a5098509409c610705499589d1c3ceb095c224"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzOTE0OQ==", "bodyText": "No. I think I am going to propose that any code changes after this point that produce a deprecation failure should be addressed correctly. Also many of these deprecated items will be stripped from the code in the next major, forcing this issue. The goal of this ticket is to not make this problem worse over time. A committer deprecating code will be forced to address it before it will build. If they use suppression it will be obvious in the PR and should be challenged.", "url": "https://github.com/apache/geode/pull/4792#discussion_r392539149", "createdAt": "2020-03-14T00:38:55Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/NetstatDUnitTest.java", "diffHunk": "@@ -165,6 +166,7 @@ public void testOutputWithLsofToFile() throws Exception {\n \n     File outputFile = new File(temp.newFolder(), \"command.log.txt\");\n \n+    @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwMDg2MQ=="}, "originalCommit": {"oid": "61a5098509409c610705499589d1c3ceb095c224"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4355, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}