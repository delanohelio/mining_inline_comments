{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTYxNjgy", "number": 5552, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1NjowNFrOEng2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1NjowNFrOEng2LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODY4MDc2OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/CommandPipeliningIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1NjowNFrOHYJbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowMDoxNlrOHYJmNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4MjMzMg==", "bodyText": "NUMBER_OF_COMMAND_IN_PIPELINE looks like a constant, but isn't. It should be something like \"numberOfCommands\" or \"numberOfCommandsInPipeline\".", "url": "https://github.com/apache/geode/pull/5552#discussion_r495082332", "createdAt": "2020-09-25T15:56:04Z", "author": {"login": "ringles"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/CommandPipeliningIntegrationTest.java", "diffHunk": "@@ -93,6 +98,42 @@ public void whenPipelining_commandResponsesAreNotCorrupted() {\n     assertThat(mockSubscriber.getReceivedMessages()).isEqualTo(expectedMessages);\n   }\n \n+\n+  @Test\n+  public void should_returnResultsOfPipelinedCommands_inCorrectOrder() {\n+    Logger logger = LogManager.getLogger(\"org.apache.geode.redis.internal\");\n+    Configurator.setAllLevels(logger.getName(), Level.getLevel(\"DEBUG\"));\n+    FastLogger.setDelegating(true);\n+\n+    Jedis jedis = new Jedis(\"localhost\", server.getPort(), 10000000);\n+    int NUMBER_OF_COMMANDS_IN_PIPELINE = 100;\n+    int numberOfPipeLineRequests = 1000;\n+\n+    do {\n+      Pipeline p = jedis.pipelined();\n+      for (int i = 0; i < NUMBER_OF_COMMANDS_IN_PIPELINE; i++) {\n+        p.echo(String.valueOf(i));\n+      }\n+\n+      List<Object> results = p.syncAndReturnAll();\n+\n+      verifyResultOrder(NUMBER_OF_COMMANDS_IN_PIPELINE, results);\n+      numberOfPipeLineRequests--;\n+    } while (numberOfPipeLineRequests > 0);\n+\n+    jedis.flushAll();\n+    jedis.close();\n+  }\n+\n+  private void verifyResultOrder(int NUMBER_OF_COMMAND_IN_PIPELINE, List<Object> results) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5f4737ab851b4aae41987255a42b2926e8be39"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4NTEwOA==", "bodyText": "made final.  Thanks!", "url": "https://github.com/apache/geode/pull/5552#discussion_r495085108", "createdAt": "2020-09-25T16:00:16Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/CommandPipeliningIntegrationTest.java", "diffHunk": "@@ -93,6 +98,42 @@ public void whenPipelining_commandResponsesAreNotCorrupted() {\n     assertThat(mockSubscriber.getReceivedMessages()).isEqualTo(expectedMessages);\n   }\n \n+\n+  @Test\n+  public void should_returnResultsOfPipelinedCommands_inCorrectOrder() {\n+    Logger logger = LogManager.getLogger(\"org.apache.geode.redis.internal\");\n+    Configurator.setAllLevels(logger.getName(), Level.getLevel(\"DEBUG\"));\n+    FastLogger.setDelegating(true);\n+\n+    Jedis jedis = new Jedis(\"localhost\", server.getPort(), 10000000);\n+    int NUMBER_OF_COMMANDS_IN_PIPELINE = 100;\n+    int numberOfPipeLineRequests = 1000;\n+\n+    do {\n+      Pipeline p = jedis.pipelined();\n+      for (int i = 0; i < NUMBER_OF_COMMANDS_IN_PIPELINE; i++) {\n+        p.echo(String.valueOf(i));\n+      }\n+\n+      List<Object> results = p.syncAndReturnAll();\n+\n+      verifyResultOrder(NUMBER_OF_COMMANDS_IN_PIPELINE, results);\n+      numberOfPipeLineRequests--;\n+    } while (numberOfPipeLineRequests > 0);\n+\n+    jedis.flushAll();\n+    jedis.close();\n+  }\n+\n+  private void verifyResultOrder(int NUMBER_OF_COMMAND_IN_PIPELINE, List<Object> results) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4MjMzMg=="}, "originalCommit": {"oid": "5c5f4737ab851b4aae41987255a42b2926e8be39"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4642, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}