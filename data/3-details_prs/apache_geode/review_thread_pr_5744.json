{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTgxODQy", "number": 5744, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjoxMjo0MVrOE4X-TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoyNDo0M1rOE43gWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTQ4NDkzOnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjoxMjo0MVrOHyQalQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjoxNjoyMVrOHy0rtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1OTc5Nw==", "bodyText": "I'm not saying this test is invalid, but it doesn't validate the fix below in InternalLocator i.e. if one comments out that code the test still passes...", "url": "https://github.com/apache/geode/pull/5744#discussion_r522459797", "createdAt": "2020-11-12T22:12:41Z", "author": {"login": "echobravopapa"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -137,6 +137,18 @@ public void startedLocatorHasLocator() throws IOException {\n     assertThat(InternalLocator.hasLocator()).isTrue();\n   }\n \n+  @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0634f843b8a26b40855583979540cf66e1e6232"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA1NDAwNg==", "bodyText": "I think that, in fact, the test is invalid.  I'll post a better one.", "url": "https://github.com/apache/geode/pull/5744#discussion_r523054006", "createdAt": "2020-11-13T16:16:21Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -137,6 +137,18 @@ public void startedLocatorHasLocator() throws IOException {\n     assertThat(InternalLocator.hasLocator()).isTrue();\n   }\n \n+  @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1OTc5Nw=="}, "originalCommit": {"oid": "b0634f843b8a26b40855583979540cf66e1e6232"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDYzNTQ1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/distributedTest/java/org/apache/geode/cache30/ReconnectDUnitTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoxNTozOFrOHzCf4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoxNTozOFrOHzCf4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDM1Mg==", "bodyText": "Now that the (broken) regexp is no longer hiding exceptions, and you've explicitly added expectations for all of them, this test serves a good documentation for these exceptions and their role in reconnect.", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280352", "createdAt": "2020-11-13T23:15:38Z", "author": {"login": "Bill"}, "path": "geode-core/src/distributedTest/java/org/apache/geode/cache30/ReconnectDUnitTest.java", "diffHunk": "@@ -1115,6 +1118,9 @@ public String description() {\n    */\n   @Test\n   public void testReconnectFailsDueToBadCacheXML() throws Exception {\n+    IgnoredException.addIgnoredException(DistributedSystemDisconnectedException.class);\n+    IgnoredException.addIgnoredException(\"Cause parsing to fail\");\n+    IgnoredException.addIgnoredException(\"Exception while initializing an instance\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDYzNjUyOnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoxNjoxNVrOHzCgeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzozMDo1MFrOHzCvPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDUwNQ==", "bodyText": "I assume this is done to speed up the test. I like it!\nBut shouldn't we be restoring the system property after the test runs? I believe we have a JUnit rule for that?", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280505", "createdAt": "2020-11-13T23:16:15Z", "author": {"login": "Bill"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -69,6 +70,8 @@\n \n   @Before\n   public void setUp() throws IOException {\n+    // set a property to tell membership to create a new cluster\n+    System.setProperty(GMSJoinLeave.BYPASS_DISCOVERY_PROPERTY, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NDI4Ng==", "bodyText": "I just noticed that @bschuchardt did add a RestoreSystemProperties rule so this is all good now", "url": "https://github.com/apache/geode/pull/5744#discussion_r523284286", "createdAt": "2020-11-13T23:30:50Z", "author": {"login": "Bill"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -69,6 +70,8 @@\n \n   @Before\n   public void setUp() throws IOException {\n+    // set a property to tell membership to create a new cluster\n+    System.setProperty(GMSJoinLeave.BYPASS_DISCOVERY_PROPERTY, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDUwNQ=="}, "originalCommit": {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDYzODEwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoxNzoxMFrOHzChbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoxNzoxMFrOHzChbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDc0OA==", "bodyText": "My read of InternalLocator is that it's ok to provide null log writers to the constructor \u2713", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280748", "createdAt": "2020-11-13T23:17:10Z", "author": {"login": "Bill"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -97,16 +118,16 @@ public void constructs() {\n \n     assertThatCode(() -> {\n       internalLocator =\n-          new InternalLocator(port, loggingSession, logFile, logWriter, securityLogWriter,\n+          new InternalLocator(port, loggingSession, logFile, null, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDY1MTEzOnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoyNDo0M1rOHzCo-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMzoyNDo0M1rOHzCo-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MjY4MQ==", "bodyText": "I guess we had the reconnect cases covered (in the DUnit test) and this new test is for the no-reconnect case \u2713", "url": "https://github.com/apache/geode/pull/5744#discussion_r523282681", "createdAt": "2020-11-13T23:24:43Z", "author": {"login": "Bill"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -88,6 +91,24 @@ public void tearDown() {\n     }\n   }\n \n+  @Test\n+  public void startedLocatorDoesNotAttemptReconnect() throws IOException, InterruptedException {\n+    // start a locator that's not part of a cluster\n+    final boolean joinCluster = false;\n+    internalLocator = InternalLocator.startLocator(port, logFile, null,\n+        null, bindAddress, joinCluster,\n+        distributedSystemProperties, hostnameForClients, workingDirectory);\n+    port = internalLocator.getPort();\n+    // the locator shouldn't attempt a reconnect because it's not part of a cluster\n+    internalLocator.stoppedForReconnect = true;\n+    assertThat(internalLocator.attemptReconnect()).isFalse();\n+    String output = FileUtils.readFileToString(logFile, Charset.defaultCharset());\n+    assertThat(output).isNotEmpty();\n+    assertThat(output).contains(InternalLocator.IGNORING_RECONNECT_REQUEST);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4494, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}