{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTE3MzA0", "number": 4886, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo1NzoyOFrODs3mbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNjo0NlrODs3wfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzc0ODkyOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo1NzoyOFrOF99viA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoxNDowM1rOF-iMaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxOTA0OA==", "bodyText": "port is looks to be defined above as a static constant but is overridden below in the @BeforeClass.  Pretty sure you don't want it defined as 6379 up here, just a private static int port declaration.  Noticed other integration tests doing it so assuming it was just a copy/pasta type thing.  Though it also looks like port is only used in the @BeforeEach so maybe just make it a local variable and call it done?", "url": "https://github.com/apache/geode/pull/4886#discussion_r400519048", "createdAt": "2020-03-30T21:57:28Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwMjE0MQ==", "bodyText": "When will I learn - copy/paste is not my friend ?!?  Point taken...", "url": "https://github.com/apache/geode/pull/4886#discussion_r401102141", "createdAt": "2020-03-31T17:50:45Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxOTA0OA=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNTg5OA==", "bodyText": "corrected.  Thanks for the call out", "url": "https://github.com/apache/geode/pull/4886#discussion_r401115898", "createdAt": "2020-03-31T18:13:27Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxOTA0OA=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNjI2NQ==", "bodyText": "(oops sorry-  not pushed yet... my over-eager fingers)", "url": "https://github.com/apache/geode/pull/4886#discussion_r401116265", "createdAt": "2020-03-31T18:14:03Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxOTA0OA=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzc2NzY5OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNDowOVrOF997Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoxODowNlrOF-iViA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMjA1MA==", "bodyText": "10000000 is a timeout I think?  I saw in PubSubIntegrationTest the 10000000 was assigned to a constant of REDIS_CLIENT_TIMEOUT which would make it a little clearer without diving into the constructor (thought Intellij tells me what the parameter is so not too worried about it)", "url": "https://github.com/apache/geode/pull/4886#discussion_r400522050", "createdAt": "2020-03-30T22:04:09Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;\n+\n+  @BeforeClass\n+  public static void setUp() {\n+    port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    server = new GeodeRedisServer(\"localhost\", port);\n+    server.start();\n+    jedis = new Jedis(\"localhost\", port, 10000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExODYwMA==", "bodyText": "corrected-  thx", "url": "https://github.com/apache/geode/pull/4886#discussion_r401118600", "createdAt": "2020-03-31T18:18:06Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;\n+\n+  @BeforeClass\n+  public static void setUp() {\n+    port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    server = new GeodeRedisServer(\"localhost\", port);\n+    server.start();\n+    jedis = new Jedis(\"localhost\", port, 10000000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMjA1MA=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzc2ODIzOnYy", "diffSide": "RIGHT", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNDoyM1rOF997lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNDoyM1rOF997lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMjEzMw==", "bodyText": "Thank you for a very clear test name!", "url": "https://github.com/apache/geode/pull/4886#discussion_r400522133", "createdAt": "2020-03-30T22:04:23Z", "author": {"login": "moleske"}, "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/general/PexpireIntegrationTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.general;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.redis.GeodeRedisServer;\n+\n+public class PexpireIntegrationTest {\n+\n+  private static Jedis jedis;\n+  private static GeodeRedisServer server;\n+  private static GemFireCache cache;\n+  private static int port = 6379;\n+\n+  @BeforeClass\n+  public static void setUp() {\n+    port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    server = new GeodeRedisServer(\"localhost\", port);\n+    server.start();\n+    jedis = new Jedis(\"localhost\", port, 10000000);\n+  }\n+\n+\n+  @AfterClass\n+  public static void tearDown() {\n+    jedis.close();\n+    server.shutdown();\n+  }\n+\n+  @Test\n+  public void Should_SetExpiration_givenKeyTo_StringValueInMilliSeconds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mzc3NDY5OnYy", "diffSide": "RIGHT", "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/PexpireExecutorJUnitTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjowNjo0NlrOF99_ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzo1NjoyNVrOF-hjKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMzE2Ng==", "bodyText": "I'm sure this test is important, but it seems odd that there's nothing else to test other than it is an instanceof", "url": "https://github.com/apache/geode/pull/4886#discussion_r400523166", "createdAt": "2020-03-30T22:06:46Z", "author": {"login": "moleske"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/PexpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.redis.internal.Executor;\n+import org.apache.geode.redis.internal.executor.ExpireExecutor;\n+import org.apache.geode.redis.internal.executor.PExpireExecutor;\n+\n+public class PexpireExecutorJUnitTest {\n+\n+  @Test\n+  public void isAnInstanceOfExpireClass() {\n+    Executor subject = new PExpireExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwMjE5Nw==", "bodyText": "Not sure how to make this more clear- this idea is that there is a base class (expireExecutor) where 99% of functionality happens.   The Pexpireexecutor class calls uses the default base class for all functionality except for converting the seconds paramater to milliseconds.  SO we tests the millisecond functionality in the  extended integration test for the pexpire class, and test that it is extending its parent.  I was a little unsure about this one, but it didn;t seem that it was worth having all of the other unit tests to test the underlying base class (again).  Suggestions welcome...", "url": "https://github.com/apache/geode/pull/4886#discussion_r401102197", "createdAt": "2020-03-31T17:50:50Z", "author": {"login": "jhutchison"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/PexpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.redis.internal.Executor;\n+import org.apache.geode.redis.internal.executor.ExpireExecutor;\n+import org.apache.geode.redis.internal.executor.PExpireExecutor;\n+\n+public class PexpireExecutorJUnitTest {\n+\n+  @Test\n+  public void isAnInstanceOfExpireClass() {\n+    Executor subject = new PExpireExecutor();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMzE2Ng=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNTcwNQ==", "bodyText": "Oh the test is fine! I meant it was just weird to me that there wasn't anything else to test.  Sorry for the confusion!  Thank you for the clarifying response explaining that all the cool stuff happens in the base class", "url": "https://github.com/apache/geode/pull/4886#discussion_r401105705", "createdAt": "2020-03-31T17:56:25Z", "author": {"login": "moleske"}, "path": "geode-redis/src/test/java/org/apache/geode/redis/internal/executor/general/PexpireExecutorJUnitTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.general;\n+\n+import static org.assertj.core.api.AssertionsForInterfaceTypes.assertThat;\n+\n+import org.junit.Test;\n+\n+import org.apache.geode.redis.internal.Executor;\n+import org.apache.geode.redis.internal.executor.ExpireExecutor;\n+import org.apache.geode.redis.internal.executor.PExpireExecutor;\n+\n+public class PexpireExecutorJUnitTest {\n+\n+  @Test\n+  public void isAnInstanceOfExpireClass() {\n+    Executor subject = new PExpireExecutor();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMzE2Ng=="}, "originalCommit": {"oid": "cf3b8b4923404e6c67a8dbad42e9f709bf5fc0ec"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4225, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}