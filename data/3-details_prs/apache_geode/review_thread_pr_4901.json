{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODcxMzk5", "number": 4901, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzo1NDozMFrODvWNog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDowMjo0OFrODvWUMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTczNjAyOnYy", "diffSide": "RIGHT", "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzo1NDozMFrOGBuGHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0Mjo1MlrOGCaBzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1Njk5MA==", "bodyText": "This is less noisy and reads better:\nimport static org.hamcrest.Matchers.startsWith;\n...\nstartsWith(BASE_URL + \"/customers/\")", "url": "https://github.com/apache/geode/pull/4901#discussion_r404456990", "createdAt": "2020-04-06T23:54:30Z", "author": {"login": "demery-pivotal"}, "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "diffHunk": "@@ -620,11 +639,13 @@ public void postRegions() throws Exception {\n   @SuppressWarnings(\"unchecked\")\n   @Test\n   @WithMockUser\n-  public void getCustomers() throws Exception {\n+  public void getAllCustomers() throws Exception {\n     putAll();\n     mockMvc.perform(get(\"/v1/customers?limit=ALL\")\n         .with(POST_PROCESSOR))\n         .andExpect(status().isOk())\n+        .andExpect(\n+            header().string(\"Content-Location\", new StringStartsWith(BASE_URL + \"/customers/\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676ae358960159f374e6ef41b64f1124b150ff62"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3Njc4MQ==", "bodyText": "Yes! thank you", "url": "https://github.com/apache/geode/pull/4901#discussion_r405176781", "createdAt": "2020-04-07T23:42:52Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "diffHunk": "@@ -620,11 +639,13 @@ public void postRegions() throws Exception {\n   @SuppressWarnings(\"unchecked\")\n   @Test\n   @WithMockUser\n-  public void getCustomers() throws Exception {\n+  public void getAllCustomers() throws Exception {\n     putAll();\n     mockMvc.perform(get(\"/v1/customers?limit=ALL\")\n         .with(POST_PROCESSOR))\n         .andExpect(status().isOk())\n+        .andExpect(\n+            header().string(\"Content-Location\", new StringStartsWith(BASE_URL + \"/customers/\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1Njk5MA=="}, "originalCommit": {"oid": "676ae358960159f374e6ef41b64f1124b150ff62"}, "originalPosition": 236}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc0NzcwOnYy", "diffSide": "RIGHT", "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDowMDowN1rOGBuNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo1MTo0NFrOGCaMpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1ODc5Mg==", "bodyText": "I think you can use AssertJ's Map assertions on regions:\nassertThat(customerRegion)\n    .hasSize(60)\n    .containsKeys(\"2\", \"3\", \"4\", \"5\");\n\nThis will make the assertion failures more helpful.", "url": "https://github.com/apache/geode/pull/4901#discussion_r404458792", "createdAt": "2020-04-07T00:00:07Z", "author": {"login": "demery-pivotal"}, "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "diffHunk": "@@ -740,12 +889,76 @@ public void deleteMultipleKeys() throws Exception {\n \n   @Test\n   @WithMockUser\n-  public void deleteMultipleKeysWithSlashes() throws Exception {\n-    putAllWithSlashes();\n-    mockMvc.perform(delete(\"/v1/customers/1\" + SLASH + \",2\" + SLASH + \",3\"\n-        + SLASH + \",4\" + SLASH + \",5\" + SLASH)\n-            .with(POST_PROCESSOR))\n+  public void deleteMultipleKeysWithQueryParam() throws Exception {\n+    putAll();\n+    assertThat(customerRegion.size()).isEqualTo(60);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676ae358960159f374e6ef41b64f1124b150ff62"}, "originalPosition": 424}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTU1OQ==", "bodyText": "I changed over to hasSize.", "url": "https://github.com/apache/geode/pull/4901#discussion_r405179559", "createdAt": "2020-04-07T23:51:44Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "diffHunk": "@@ -740,12 +889,76 @@ public void deleteMultipleKeys() throws Exception {\n \n   @Test\n   @WithMockUser\n-  public void deleteMultipleKeysWithSlashes() throws Exception {\n-    putAllWithSlashes();\n-    mockMvc.perform(delete(\"/v1/customers/1\" + SLASH + \",2\" + SLASH + \",3\"\n-        + SLASH + \",4\" + SLASH + \",5\" + SLASH)\n-            .with(POST_PROCESSOR))\n+  public void deleteMultipleKeysWithQueryParam() throws Exception {\n+    putAll();\n+    assertThat(customerRegion.size()).isEqualTo(60);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1ODc5Mg=="}, "originalCommit": {"oid": "676ae358960159f374e6ef41b64f1124b150ff62"}, "originalPosition": 424}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTc1MjgyOnYy", "diffSide": "RIGHT", "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDowMjo0OFrOGBuQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDowMjo0OFrOGBuQMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1OTU2OA==", "bodyText": "I like the helper methods. They keep the test methods clean and focused.", "url": "https://github.com/apache/geode/pull/4901#discussion_r404459568", "createdAt": "2020-04-07T00:02:48Z", "author": {"login": "demery-pivotal"}, "path": "geode-web-api/src/integrationTest/java/org/apache/geode/rest/internal/web/controllers/RestAccessControllerTest.java", "diffHunk": "@@ -110,6 +118,30 @@\n   private static Region<?, ?> orderRegion;\n   private static Region<String, PdxInstance> customerRegion;\n \n+  private static String createKey(int keyNumber) {\n+    return KEY_PREFIX + \"KEY\" + Integer.toString(keyNumber) + KEY_SUFFIX;\n+  }\n+\n+  private static String createEncodedKey(int keyNumber) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676ae358960159f374e6ef41b64f1124b150ff62"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4243, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}