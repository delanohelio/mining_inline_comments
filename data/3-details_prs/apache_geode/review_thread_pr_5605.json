{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTc4MDI4", "number": 5605, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTozNjozNlrOErrCcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzo0MzozMlrOEruKZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjI5MzYyOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTozNjozNlrOHekkXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTo1ODoxN1rOHelgOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODQ2MQ==", "bodyText": "Is there anything that needs to be done, if write throws exception...Sorry I may be asking wrong question as I don't have much context here.", "url": "https://github.com/apache/geode/pull/5605#discussion_r501818461", "createdAt": "2020-10-08T15:36:36Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -2588,17 +2592,20 @@ void writeFully(SocketChannel channel, ByteBuffer buffer, boolean forceAsync,\n           }\n           // fall through\n         }\n-        ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n-        while (wrappedBuffer.remaining() > 0) {\n-          int amtWritten = 0;\n-          long start = stats.startSocketWrite(true);\n-          try {\n-            amtWritten = channel.write(wrappedBuffer);\n-          } finally {\n-            stats.endSocketWrite(true, start, amtWritten, 0);\n+        // synchronize on the ioFilter while using its network buffer\n+        synchronized (ioFilter) {\n+          ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n+          while (wrappedBuffer.remaining() > 0) {\n+            int amtWritten = 0;\n+            long start = stats.startSocketWrite(true);\n+            try {\n+              amtWritten = channel.write(wrappedBuffer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ee1568dc0b510ba03e98295c28d6ed87305fae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMzc4NA==", "bodyText": "handlers for declared exceptions are already in place", "url": "https://github.com/apache/geode/pull/5605#discussion_r501833784", "createdAt": "2020-10-08T15:58:17Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -2588,17 +2592,20 @@ void writeFully(SocketChannel channel, ByteBuffer buffer, boolean forceAsync,\n           }\n           // fall through\n         }\n-        ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n-        while (wrappedBuffer.remaining() > 0) {\n-          int amtWritten = 0;\n-          long start = stats.startSocketWrite(true);\n-          try {\n-            amtWritten = channel.write(wrappedBuffer);\n-          } finally {\n-            stats.endSocketWrite(true, start, amtWritten, 0);\n+        // synchronize on the ioFilter while using its network buffer\n+        synchronized (ioFilter) {\n+          ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n+          while (wrappedBuffer.remaining() > 0) {\n+            int amtWritten = 0;\n+            long start = stats.startSocketWrite(true);\n+            try {\n+              amtWritten = channel.write(wrappedBuffer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODQ2MQ=="}, "originalCommit": {"oid": "46ee1568dc0b510ba03e98295c28d6ed87305fae"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjI5NjIyOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTozNzowOFrOHekmCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNTo1NzoyMlrOHeldvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODg5MA==", "bodyText": "This should be info or debug level log? just checking...", "url": "https://github.com/apache/geode/pull/5605#discussion_r501818890", "createdAt": "2020-10-08T15:37:08Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -396,9 +402,17 @@ public synchronized void close(SocketChannel socketChannel) {\n     } catch (IOException e) {\n       throw new GemFireIOException(\"exception closing SSL session\", e);\n     } finally {\n-      bufferPool.releaseBuffer(TRACKED_SENDER, myNetData);\n-      bufferPool.releaseBuffer(TRACKED_RECEIVER, peerAppData);\n+      logger.info(\"NioSSLEngine releasing two buffers myNetData={}({}), peerAppData={}({})\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ee1568dc0b510ba03e98295c28d6ed87305fae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMzE0OQ==", "bodyText": "thanks for catching that Anil - that's debug output that I meant to delete", "url": "https://github.com/apache/geode/pull/5605#discussion_r501833149", "createdAt": "2020-10-08T15:57:22Z", "author": {"login": "bschuchardt"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -396,9 +402,17 @@ public synchronized void close(SocketChannel socketChannel) {\n     } catch (IOException e) {\n       throw new GemFireIOException(\"exception closing SSL session\", e);\n     } finally {\n-      bufferPool.releaseBuffer(TRACKED_SENDER, myNetData);\n-      bufferPool.releaseBuffer(TRACKED_RECEIVER, peerAppData);\n+      logger.info(\"NioSSLEngine releasing two buffers myNetData={}({}), peerAppData={}({})\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODg5MA=="}, "originalCommit": {"oid": "46ee1568dc0b510ba03e98295c28d6ed87305fae"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjgwNTQ5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzo0MzozMlrOHepiiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoxODoyMVrOHeq5UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5OTkxMw==", "bodyText": "did you consider adding \".asReadOnlyBuffer()\" so that this would be immutable?", "url": "https://github.com/apache/geode/pull/5605#discussion_r501899913", "createdAt": "2020-10-08T17:43:32Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -52,6 +53,11 @@\n public class NioSslEngine implements NioFilter {\n   private static final Logger logger = LogService.getLogger();\n \n+  // this variable requires the MakeImmutable annotation but the buffer is empty and\n+  // not really modifiable\n+  @MakeImmutable\n+  private static final ByteBuffer EMPTY_BUFFER = ByteBuffer.allocate(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c2037a8f55c20f157348d89c6a4d95bf51bf52f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyMjEyOA==", "bodyText": "That won't satisfy PMD (since it returns a ByteBuffer which is not considered an immutable object by PMD) but it still might be valuable.", "url": "https://github.com/apache/geode/pull/5605#discussion_r501922128", "createdAt": "2020-10-08T18:18:21Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -52,6 +53,11 @@\n public class NioSslEngine implements NioFilter {\n   private static final Logger logger = LogService.getLogger();\n \n+  // this variable requires the MakeImmutable annotation but the buffer is empty and\n+  // not really modifiable\n+  @MakeImmutable\n+  private static final ByteBuffer EMPTY_BUFFER = ByteBuffer.allocate(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5OTkxMw=="}, "originalCommit": {"oid": "3c2037a8f55c20f157348d89c6a4d95bf51bf52f"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4688, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}