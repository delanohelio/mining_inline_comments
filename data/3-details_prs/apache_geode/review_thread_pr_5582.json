{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODY3OTUz", "number": 5582, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToxOToyOVrOEtMB-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToyMjoxMVrOEtMGPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODE4NDg4OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToxOToyOVrOHg11gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowNDoyMVrOHhcvzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5ODUzMQ==", "bodyText": "Does this need to swallow IOExceptions?", "url": "https://github.com/apache/geode/pull/5582#discussion_r504198531", "createdAt": "2020-10-13T19:19:29Z", "author": {"login": "upthewaterspout"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java", "diffHunk": "@@ -101,26 +101,36 @@ public ResultModel deploy(\n     for (DistributedMember member : targetMembers) {\n       List<RemoteInputStream> remoteStreams = new ArrayList<>();\n       List<String> jarNames = new ArrayList<>();\n-      for (String jarFullPath : jarFullPaths) {\n-        remoteStreams\n-            .add(exporter.export(new SimpleRemoteInputStream(new FileInputStream(jarFullPath))));\n-        jarNames.add(FilenameUtils.getName(jarFullPath));\n-      }\n-\n-      // this deploys the jars to all the matching servers\n-      ResultCollector<?, ?> resultCollector =\n-          executeFunction(this.deployFunction, new Object[] {jarNames, remoteStreams}, member);\n-\n-      @SuppressWarnings(\"unchecked\")\n-      final List<List<Object>> resultCollectorResult =\n-          (List<List<Object>>) resultCollector.getResult();\n-      results.add(resultCollectorResult.get(0));\n+      try {\n+        for (String jarFullPath : jarFullPaths) {\n+          FileInputStream fileInputStream = null;\n+          try {\n+            fileInputStream = new FileInputStream(jarFullPath);\n+            remoteStreams.add(exporter.export(new SimpleRemoteInputStream(fileInputStream)));\n+            jarNames.add(FilenameUtils.getName(jarFullPath));\n+          } catch (Exception ex) {\n+            if (fileInputStream != null) {\n+              fileInputStream.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzNjA0NQ==", "bodyText": "Fixed", "url": "https://github.com/apache/geode/pull/5582#discussion_r504836045", "createdAt": "2020-10-14T17:04:21Z", "author": {"login": "DonalEvans"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java", "diffHunk": "@@ -101,26 +101,36 @@ public ResultModel deploy(\n     for (DistributedMember member : targetMembers) {\n       List<RemoteInputStream> remoteStreams = new ArrayList<>();\n       List<String> jarNames = new ArrayList<>();\n-      for (String jarFullPath : jarFullPaths) {\n-        remoteStreams\n-            .add(exporter.export(new SimpleRemoteInputStream(new FileInputStream(jarFullPath))));\n-        jarNames.add(FilenameUtils.getName(jarFullPath));\n-      }\n-\n-      // this deploys the jars to all the matching servers\n-      ResultCollector<?, ?> resultCollector =\n-          executeFunction(this.deployFunction, new Object[] {jarNames, remoteStreams}, member);\n-\n-      @SuppressWarnings(\"unchecked\")\n-      final List<List<Object>> resultCollectorResult =\n-          (List<List<Object>>) resultCollector.getResult();\n-      results.add(resultCollectorResult.get(0));\n+      try {\n+        for (String jarFullPath : jarFullPaths) {\n+          FileInputStream fileInputStream = null;\n+          try {\n+            fileInputStream = new FileInputStream(jarFullPath);\n+            remoteStreams.add(exporter.export(new SimpleRemoteInputStream(fileInputStream)));\n+            jarNames.add(FilenameUtils.getName(jarFullPath));\n+          } catch (Exception ex) {\n+            if (fileInputStream != null) {\n+              fileInputStream.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5ODUzMQ=="}, "originalCommit": {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODE5NTgyOnYy", "diffSide": "RIGHT", "path": "geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToyMjoxMVrOHg17uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowNDoxMFrOHhcvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMDEyMQ==", "bodyText": "Could this have used a try-with-resources?", "url": "https://github.com/apache/geode/pull/5582#discussion_r504200121", "createdAt": "2020-10-13T19:22:11Z", "author": {"login": "upthewaterspout"}, "path": "geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java", "diffHunk": "@@ -200,21 +200,28 @@ public Object requestToServer(HostAndPort addr, Object request, int timeout,\n       out.flush();\n \n       if (replyExpected) {\n-        DataInputStream in = new DataInputStream(sock.getInputStream());\n-        if (debugVersionMessage != null && logger.isDebugEnabled()) {\n-          logger.debug(debugVersionMessage);\n-        }\n-        in = new VersionedDataInputStream(in, serverVersion);\n+        DataInputStream in = null;\n         try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzNTk0Mw==", "bodyText": "Good catch, thanks.", "url": "https://github.com/apache/geode/pull/5582#discussion_r504835943", "createdAt": "2020-10-14T17:04:10Z", "author": {"login": "DonalEvans"}, "path": "geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java", "diffHunk": "@@ -200,21 +200,28 @@ public Object requestToServer(HostAndPort addr, Object request, int timeout,\n       out.flush();\n \n       if (replyExpected) {\n-        DataInputStream in = new DataInputStream(sock.getInputStream());\n-        if (debugVersionMessage != null && logger.isDebugEnabled()) {\n-          logger.debug(debugVersionMessage);\n-        }\n-        in = new VersionedDataInputStream(in, serverVersion);\n+        DataInputStream in = null;\n         try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMDEyMQ=="}, "originalCommit": {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4669, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}