{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjY1NTE3", "number": 5206, "title": "GEODE-8219: Apply RedisResponse to all redis string commands", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-06-03T15:06:02Z", "url": "https://github.com/apache/geode/pull/5206", "merged": true, "mergeCommit": {"oid": "80ad8dd9bb4618faf071cf61ec7ab6dc49436723"}, "closed": true, "closedAt": "2020-06-04T16:52:37Z", "author": {"login": "jdeppe-pivotal"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnqyVNgH2gAyNDI3MjY1NTE3OmY0MDZlNDc0YzIzNjI5OTBhOWViNjY0YTNlZGY1MWFlYWY0NWIxNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoAWXegFqTQyNDYwNzQ1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f406e474c2362990a9eb664a3edf51aeaf45b16d", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/f406e474c2362990a9eb664a3edf51aeaf45b16d", "committedDate": "2020-06-03T15:00:07Z", "message": "GEODE-8219: Apply RedisResponse to all redis string commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "committedDate": "2020-06-03T20:46:08Z", "message": "Fix spotless and failing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTI0ODky", "url": "https://github.com/apache/geode/pull/5206#pullrequestreview-424124892", "createdAt": "2020-06-04T06:03:41Z", "commit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowMzo0MVrOGe29Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjowNjo1NlrOGe3BVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDg3NQ==", "bodyText": "I think this setReponse call should have been deleted", "url": "https://github.com/apache/geode/pull/5206#discussion_r435010875", "createdAt": "2020-06-04T06:03:41Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -81,31 +79,30 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       }\n       stringCommands.set(key, new ByteArrayWrapper(bytes), null);\n       command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTE4Nw==", "bodyText": "Should this setResponse be removed?", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011187", "createdAt": "2020-06-04T06:04:41Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java", "diffHunk": "@@ -47,27 +48,17 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       byte[] bitAr = commandElems.get(2);\n       bit = Coder.bytesToInt(bitAr);\n     } catch (NumberFormatException e) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));\n-      return;\n+      return RedisResponse.error(ERROR_NOT_INT);\n     }\n \n     if (bit != 0 && bit != 1) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_BIT));\n-      return;\n+      return RedisResponse.error(ERROR_BIT);\n     }\n \n     if (string == null || string.length() == 0) {\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit)); // Redis\n-      // returns\n-      // 0 when\n-      // key\n-      // does\n-      // not\n-      // exists\n-      // for\n-      // this\n-      // command\n-      return;\n+      // Redis returns 0 when key does not exists for this command\n+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTYzNQ==", "bodyText": "remove this setResponse calls", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011635", "createdAt": "2020-06-04T06:06:02Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -34,12 +35,13 @@\n       \"The offset is out of range, must be greater than or equal to 0  and at most 4294967295 (512MB)\";\n \n   @Override\n-  public void executeCommand(Command command, ExecutionHandlerContext context) {\n+  public RedisResponse executeCommandWithResponse(Command command,\n+      ExecutionHandlerContext context) {\n     List<byte[]> commandElems = command.getProcessedCommand();\n \n     if (commandElems.size() < 4) {\n       command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.SETBIT));\n-      return;\n+      return RedisResponse.error(ArityDef.SETBIT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTkyNA==", "bodyText": "remove this setResponse call", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011924", "createdAt": "2020-06-04T06:06:56Z", "author": {"login": "dschneider-pivotal"}, "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java", "diffHunk": "@@ -42,23 +44,24 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n     try {\n       setOptions = parseCommandElems(commandElems);\n     } catch (IllegalArgumentException ex) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ex.getMessage()));\n-      return;\n+      return RedisResponse.error(ex.getMessage());\n     }\n \n-    doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n+    return doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n   }\n \n-  private void doSet(Command command, ExecutionHandlerContext context, ByteArrayWrapper key,\n+  private RedisResponse doSet(Command command, ExecutionHandlerContext context,\n+      ByteArrayWrapper key,\n       ByteArrayWrapper value, RedisStringCommands redisStringCommands, SetOptions setOptions) {\n \n     boolean result = redisStringCommands.set(key, value, setOptions);\n \n     if (result) {\n       command.setResponse(Coder.getSimpleStringResponse(context.getByteBufAllocator(), SUCCESS));\n-    } else {\n-      command.setResponse(Coder.getNilResponse(context.getByteBufAllocator()));\n+      return RedisResponse.string(SUCCESS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "author": {"user": {"login": "jdeppe-pivotal", "name": "Jens Deppe"}}, "url": "https://github.com/apache/geode/commit/762d0a6d1f9c8747b85e52f77b34b45e6301df11", "committedDate": "2020-06-04T14:37:34Z", "message": "Removed redundant lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NjA3NDUx", "url": "https://github.com/apache/geode/pull/5206#pullrequestreview-424607451", "createdAt": "2020-06-04T16:07:29Z", "commit": {"oid": "762d0a6d1f9c8747b85e52f77b34b45e6301df11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4419, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}