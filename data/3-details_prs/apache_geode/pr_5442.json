{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1Nzk1Nzg2", "number": 5442, "title": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter", "bodyText": "Thank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-08-11T00:24:19Z", "url": "https://github.com/apache/geode/pull/5442", "merged": true, "mergeCommit": {"oid": "084ec6ae9695d2054f898274e369a14340d340c3"}, "closed": true, "closedAt": "2020-08-22T17:51:44Z", "author": {"login": "masaki-yamakawa"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9wC2SgH2gAyNDY1Nzk1Nzg2OjA1ZWRhN2U0OTZjMGY5MDhmYTIyZmQ0ZGNjOTA3ODc2MTZiZjAwZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBW90yAH2gAyNDY1Nzk1Nzg2Ojg1MGViYmQxMjdiYmMyNzU2ODRjYzM5MTJjN2QwOThlNjdmNTE4NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "author": {"user": {"login": "masaki-yamakawa", "name": "Masaki Yamakawa"}}, "url": "https://github.com/apache/geode/commit/05eda7e496c0f908fa22fd4dcc90787616bf00ea", "committedDate": "2020-08-11T05:34:01Z", "message": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "505d5307ec1871ef45e9dcec0bceda04dbc1c3e8", "author": {"user": {"login": "masaki-yamakawa", "name": "Masaki Yamakawa"}}, "url": "https://github.com/apache/geode/commit/505d5307ec1871ef45e9dcec0bceda04dbc1c3e8", "committedDate": "2020-08-11T00:18:23Z", "message": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter"}, "afterCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "author": {"user": {"login": "masaki-yamakawa", "name": "Masaki Yamakawa"}}, "url": "https://github.com/apache/geode/commit/05eda7e496c0f908fa22fd4dcc90787616bf00ea", "committedDate": "2020-08-11T05:34:01Z", "message": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODA1MjM2", "url": "https://github.com/apache/geode/pull/5442#pullrequestreview-472805236", "createdAt": "2020-08-21T20:37:37Z", "commit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDozNzozOFrOHE8i8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDo1NDowNlrOHE9Ydw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk0ODMzOA==", "bodyText": "This log output could be a little more descriptive. Possibly something like \"Got SQL string:{} with key:{} value:{}\"?", "url": "https://github.com/apache/geode/pull/5442#discussion_r474948338", "createdAt": "2020-08-21T20:37:38Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java", "diffHunk": "@@ -255,6 +265,10 @@ private PreparedStatement getPreparedStatement(Connection connection,\n       TableMetaDataView tableMetaData, EntryColumnData entryColumnData, Operation operation)\n       throws SQLException {\n     String sqlStr = getSqlString(tableMetaData, entryColumnData, operation);\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\"SQL:{} key:{} value:{}\", sqlStr, entryColumnData.getEntryKeyColumnData(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODIxOA==", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958218", "createdAt": "2020-08-21T20:49:24Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -158,8 +181,21 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODYyNg==", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958626", "createdAt": "2020-08-21T20:49:56Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -274,8 +315,28 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1OTgzNQ==", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474959835", "createdAt": "2020-08-21T20:51:25Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MDM0Nw==", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474960347", "createdAt": "2020-08-21T20:52:00Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdxEmployee1);\n+    awaitUntil(() -> assertThat(jdbcWriter.getSuccessfulEvents()).isEqualTo(1));\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    employees.put(\"1\", illegalPdxEmployee);\n+\n+    awaitUntil(() -> assertThat(jdbcWriter.getFailedEvents()).isEqualTo(1));\n+    awaitUntil(() -> assertThat(jdbcWriter.getTotalEvents()).isEqualTo(2));\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTI5Mw==", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961293", "createdAt": "2020-08-21T20:53:09Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -268,6 +283,18 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTU2NA==", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961564", "createdAt": "2020-08-21T20:53:30Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -370,6 +397,24 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTc4OA==", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961788", "createdAt": "2020-08-21T20:53:47Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MjAzOQ==", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "url": "https://github.com/apache/geode/pull/5442#discussion_r474962039", "createdAt": "2020-08-21T20:54:06Z", "author": {"login": "DonalEvans"}, "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdx1);\n+\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    Throwable thrown = catchThrowable(() -> employees.put(\"1\", illegalPdx));\n+\n+    assertThat(thrown).isInstanceOf(JdbcConnectorException.class);\n+    assertThat(thrown.getMessage()).startsWith(getDataTooLongSqlErrorMessage());\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "850ebbd127bbc275684cc3912c7d098e67f51864", "author": {"user": {"login": "masaki-yamakawa", "name": "Masaki Yamakawa"}}, "url": "https://github.com/apache/geode/commit/850ebbd127bbc275684cc3912c7d098e67f51864", "committedDate": "2020-08-22T10:36:36Z", "message": "Improve the sql log output & improve the test method name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}