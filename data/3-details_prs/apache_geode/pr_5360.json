{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjMzOTUw", "number": 5360, "title": "GEODE-8329: Fix for durable CQ reqistration recovery", "bodyText": "This change solves the issue when the client without configured HA is\nwrongly re-registering durable CQs as non durable during the server\nfailover.\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-07-09T05:50:20Z", "url": "https://github.com/apache/geode/pull/5360", "merged": true, "mergeCommit": {"oid": "38139fbb00cbea872348d3554f9589bd7c5bfdde"}, "closed": true, "closedAt": "2020-12-07T11:35:50Z", "author": {"login": "jvarenina"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczIFdAgH2gAyNDQ2NjMzOTUwOmY4NjA2N2U2MjNmYjVmY2U2N2NkMTlhODAyMTY1ODc5ZDhkMDA1ZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjw-qGAH2gAyNDQ2NjMzOTUwOjZiMDZlYjgxNjllNWQzOTk5M2NjZDRjOWFhOWQyZGRlNzg5Yjg1NWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f86067e623fb5fce67cd19a802165879d8d005e5", "author": {"user": {"login": "jvarenina", "name": "Jakov Varenina"}}, "url": "https://github.com/apache/geode/commit/f86067e623fb5fce67cd19a802165879d8d005e5", "committedDate": "2020-07-09T05:21:25Z", "message": "GEODE-8329: Fix for durable CQ reqistration recovery\n\nThis change solves the issue when the client without configured HA is\nwrongly re-registering durable CQs as non durable during the server\nfailover."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "692b7e7eb1cfd6ad7b3d31219dbec5f8529ec93b", "author": {"user": {"login": "jvarenina", "name": "Jakov Varenina"}}, "url": "https://github.com/apache/geode/commit/692b7e7eb1cfd6ad7b3d31219dbec5f8529ec93b", "committedDate": "2020-07-09T12:56:30Z", "message": "Fix for stressTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDI3NDQ2", "url": "https://github.com/apache/geode/pull/5360#pullrequestreview-446027446", "createdAt": "2020-07-09T23:13:05Z", "commit": {"oid": "692b7e7eb1cfd6ad7b3d31219dbec5f8529ec93b"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoxMzowNlrOGvkxzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoxMzowNlrOGvkxzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzODgyOQ==", "bodyText": "The value for \"isDurable\" is passed by the caller. If you look into the only caller of this method; it calls the \"recoverCQs\" twice if the client is durable, with isDurable value as true. Not sure why its doing twice...\nThis method is also called while satisfying the redundancy-level, which is not related to client durability.\nSay if the redundancy is set to 5 and there are only 3 servers available; when a new server is added to the cluster this code is executed to satisfy the redundancy. You could try adding test scenario for this.\nAlso, isDurable is the meta-info sent to server to say if its durable client (in this context).\nIn QueueManagerImpl can you try changing the following method:\nprivate void recoverAllInterestTypes(final Connection recoveredConnection,\n      boolean isFirstNewConnection) {\n    if (PoolImpl.BEFORE_RECOVER_INTEREST_CALLBACK_FLAG) {\n      ClientServerObserver bo = ClientServerObserverHolder.getInstance();\n      bo.beforeInterestRecovery();\n    }\n    recoverInterestList(recoveredConnection, false, true, isFirstNewConnection);\n    recoverInterestList(recoveredConnection, false, false, isFirstNewConnection);\n    recoverCqs(recoveredConnection, false);\n    if (getPool().isDurableClient()) {\n      recoverInterestList(recoveredConnection, true, true, isFirstNewConnection);\n      recoverInterestList(recoveredConnection, true, false, isFirstNewConnection);\n      recoverCqs(recoveredConnection, true);\n    }\n  }\n\nTO\n\n private void recoverAllInterestTypes(final Connection recoveredConnection,\n      boolean isFirstNewConnection) {\n    if (PoolImpl.BEFORE_RECOVER_INTEREST_CALLBACK_FLAG) {\n      ClientServerObserver bo = ClientServerObserverHolder.getInstance();\n      bo.beforeInterestRecovery();\n    }\n\n    boolean isDurableClient = getPool().isDurableClient();\n    recoverInterestList(recoveredConnection, isDurableClient, true, isFirstNewConnection);\n    recoverInterestList(recoveredConnection, isDurableClient, false, isFirstNewConnection);\n    recoverCqs(recoveredConnection, isDurableClient);\n  }", "url": "https://github.com/apache/geode/pull/5360#discussion_r452538829", "createdAt": "2020-07-09T23:13:06Z", "author": {"login": "agingade"}, "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/QueueManagerImpl.java", "diffHunk": "@@ -1112,7 +1112,8 @@ private void recoverCqs(Connection recoveredConnection, boolean isDurable) {\n             .set(((DefaultQueryService) this.pool.getQueryService()).getUserAttributes(name));\n       }\n       try {\n-        if (((CqStateImpl) cqi.getState()).getState() != CqStateImpl.INIT) {\n+        if (((CqStateImpl) cqi.getState()).getState() != CqStateImpl.INIT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692b7e7eb1cfd6ad7b3d31219dbec5f8529ec93b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MzY4OTQ5", "url": "https://github.com/apache/geode/pull/5360#pullrequestreview-469368949", "createdAt": "2020-08-18T12:15:23Z", "commit": {"oid": "692b7e7eb1cfd6ad7b3d31219dbec5f8529ec93b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b06eb8169e5d39993ccd4c9aa9d2dde789b855b", "author": {"user": {"login": "jvarenina", "name": "Jakov Varenina"}}, "url": "https://github.com/apache/geode/commit/6b06eb8169e5d39993ccd4c9aa9d2dde789b855b", "committedDate": "2020-12-07T08:08:28Z", "message": "empty commit to re-launch CI"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4369, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}