{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mzc2ODY5", "number": 5187, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0Nzo0OFrOEDnyWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjowNDoyMlrOEE3W9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjMzMDQ5OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDo0Nzo0OFrOGgv1mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNzo0OFrOGg_9cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MTM4NQ==", "bodyText": "anyway to not hardcode these two conditions? maybe based the decision on \"do not remove = sign if it's in the quotes\"?", "url": "https://github.com/apache/geode/pull/5187#discussion_r436991385", "createdAt": "2020-06-08T20:47:48Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -122,21 +122,30 @@ else if (insideQuoteOf == c) {\n     List<String> splitWithWhiteSpaces = splitWithWhiteSpace(userInput);\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n+    boolean doNotRemoveEqualsInNextToken = false;\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n-      int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      if (doNotRemoveEqualsInNextToken) {\n         furtherSplitWithEquals.add(token);\n+        doNotRemoveEqualsInNextToken = false;\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        // if this token has equal sign, split around the first occurrence of it\n+        int indexOfFirstEqual = token.indexOf('=');\n+        if (indexOfFirstEqual < 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n+      if (token.equals(\"--query\") || token.equals(\"--J\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01012e65424fd9d6a66129bc9be20806d0a2bdb9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NTUzNg==", "bodyText": "good point, I have changed the solution. Thanks!", "url": "https://github.com/apache/geode/pull/5187#discussion_r437255536", "createdAt": "2020-06-09T09:07:48Z", "author": {"login": "alb3rtobr"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -122,21 +122,30 @@ else if (insideQuoteOf == c) {\n     List<String> splitWithWhiteSpaces = splitWithWhiteSpace(userInput);\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n+    boolean doNotRemoveEqualsInNextToken = false;\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n-      int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      if (doNotRemoveEqualsInNextToken) {\n         furtherSplitWithEquals.add(token);\n+        doNotRemoveEqualsInNextToken = false;\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        // if this token has equal sign, split around the first occurrence of it\n+        int indexOfFirstEqual = token.indexOf('=');\n+        if (indexOfFirstEqual < 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n+      if (token.equals(\"--query\") || token.equals(\"--J\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MTM4NQ=="}, "originalCommit": {"oid": "01012e65424fd9d6a66129bc9be20806d0a2bdb9"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTM2NzU3OnYy", "diffSide": "RIGHT", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjowNDoyMlrOGiwXkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMjoxMlrOGi8qjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzIzNQ==", "bodyText": "this entire for loop can be simplified to:\nfor (String token : splitWithWhiteSpaces) {\n      // do not split with \"=\" if this part starts with quotes or is part of -D\n      if(token.startsWith(\"'\") || token.startsWith(\"\\\"\") || token.startsWith(\"-D\")) {\n        furtherSplitWithEquals.add(token);\n        continue;\n      }\n      // if this token has equal sign, split around the first occurrence of it\n      int indexOfFirstEqual = token.indexOf('=');\n      if (indexOfFirstEqual < 0) {\n        furtherSplitWithEquals.add(token);\n        continue;\n      }\n      String left = token.substring(0, indexOfFirstEqual);\n      String right = token.substring(indexOfFirstEqual + 1);\n      if (left.length() > 0) {\n        furtherSplitWithEquals.add(left);\n      }\n      if (right.length() > 0) {\n        furtherSplitWithEquals.add(right);\n      }\n    }", "url": "https://github.com/apache/geode/pull/5187#discussion_r439097235", "createdAt": "2020-06-11T22:04:22Z", "author": {"login": "jinmeiliao"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -123,18 +123,25 @@ else if (insideQuoteOf == c) {\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n       int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      int indexOfFirstDoubleQuote = token.indexOf('\"');\n+      int indexOfFirstSingleQuote = token.indexOf('\\'');\n+      if (indexOfFirstEqual < 0 || token.startsWith(\"-D\")) {\n         furtherSplitWithEquals.add(token);\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        if (indexOfFirstDoubleQuote == 0 || indexOfFirstSingleQuote == 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else if ((indexOfFirstDoubleQuote < 0 && indexOfFirstSingleQuote < 0)\n+            || (indexOfFirstEqual < indexOfFirstDoubleQuote)\n+            || (indexOfFirstEqual < indexOfFirstSingleQuote)) {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b034a50dfd3988eeb721836bb9abebe2e0431b9f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODcwMw==", "bodyText": "thanks!", "url": "https://github.com/apache/geode/pull/5187#discussion_r439298703", "createdAt": "2020-06-12T09:02:12Z", "author": {"login": "alb3rtobr"}, "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -123,18 +123,25 @@ else if (insideQuoteOf == c) {\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n       int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      int indexOfFirstDoubleQuote = token.indexOf('\"');\n+      int indexOfFirstSingleQuote = token.indexOf('\\'');\n+      if (indexOfFirstEqual < 0 || token.startsWith(\"-D\")) {\n         furtherSplitWithEquals.add(token);\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        if (indexOfFirstDoubleQuote == 0 || indexOfFirstSingleQuote == 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else if ((indexOfFirstDoubleQuote < 0 && indexOfFirstSingleQuote < 0)\n+            || (indexOfFirstEqual < indexOfFirstDoubleQuote)\n+            || (indexOfFirstEqual < indexOfFirstSingleQuote)) {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzIzNQ=="}, "originalCommit": {"oid": "b034a50dfd3988eeb721836bb9abebe2e0431b9f"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3937, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}