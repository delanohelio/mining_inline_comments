{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNzc2MjAy", "number": 5334, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTozMjozNFrOEKj1Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMjowMlrOEKog3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTA4MzE4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/membership/InternalDistributedMember.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTozMjozNFrOGrrARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTozMjozNFrOGrrARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ0NjUzNA==", "bodyText": "this equals() method needed repair after the git cherry-pick, in order to get GMSJoinLeaveJUnitTest passing here in 1.12", "url": "https://github.com/apache/geode/pull/5334#discussion_r448446534", "createdAt": "2020-07-01T15:32:34Z", "author": {"login": "Bill"}, "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/membership/InternalDistributedMember.java", "diffHunk": "@@ -440,15 +441,21 @@ public boolean isPartial() {\n   }\n \n   @Override\n-  public boolean equals(Object o) {\n+  public boolean equals(final Object o) {\n     if (this == o) {\n       return true;\n     }\n-    if (o == null || getClass() != o.getClass()) {\n+    if (o == null) {\n+      return false;\n+    }\n+    if (o instanceof InternalDistributedMember) {\n+      final InternalDistributedMember that = (InternalDistributedMember) o;\n+      return memberIdentifier.equals(that.memberIdentifier);\n+    } else if (o instanceof MemberIdentifier) {\n+      return memberIdentifier.equals(o);\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9bdfbb7a285abe3a6ac8bdd7d138e0b7e2fb4a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTg0NTE1OnYy", "diffSide": "RIGHT", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMDoxOFrOGryb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMDoxOFrOGryb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2ODMxOA==", "bodyText": "this is the new unit test for GEODE-8240", "url": "https://github.com/apache/geode/pull/5334#discussion_r448568318", "createdAt": "2020-07-01T19:20:18Z", "author": {"login": "Bill"}, "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/membership/GMSJoinLeaveJUnitTest.java", "diffHunk": "@@ -1589,6 +1590,36 @@ public void testMulticastDiscoveryNotAllowed() {\n     }\n   }\n \n+  // GEODE-8240 could cause this member's identifier to have the wrong version so patch it up\n+  @Test\n+  public void repairWrongVersionInView() throws Exception {\n+\n+    initMocks();\n+\n+    List<MemberIdentifier> viewmembers =\n+        Arrays.asList(new MemberIdentifier[] {mockMembers[0], gmsJoinLeaveMemberId});\n+\n+    final GMSMembershipView<MemberIdentifier> viewWithWrongVersion =\n+        new GMSMembershipView<>(mockMembers[0], 2, viewmembers);\n+\n+    // clone member ID\n+    final MemberIdentifierImpl myMemberIDWithWrongVersion =\n+        new MemberIdentifierImpl(gmsJoinLeaveMemberId.getMemberData());\n+\n+    // this test must live in the 1.12 and later lines so pick a pre-1.12 version\n+    final Version oldVersion = Version.GEODE_1_11_0;\n+    myMemberIDWithWrongVersion.setVersionObjectForTest(oldVersion);\n+\n+    viewWithWrongVersion.remove(gmsJoinLeaveMemberId);\n+    viewWithWrongVersion.add(myMemberIDWithWrongVersion);\n+\n+    gmsJoinLeave.installView(viewWithWrongVersion);\n+\n+    assertThat(\n+        gmsJoinLeave.getView().getCanonicalID(gmsJoinLeaveMemberId).getVersionOrdinalObject())\n+            .isEqualTo(Version.getCurrentVersion());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9bdfbb7a285abe3a6ac8bdd7d138e0b7e2fb4a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTg0OTg5OnYy", "diffSide": "RIGHT", "path": "geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradeDUnitTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMjowMlrOGrye3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMjowMlrOGrye3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2OTA1NQ==", "bodyText": "This is the new rolling upgrade test logic that verifies that after the upgrade, all the MemberIdentifiers in the view, report the current version (not an old version.)\nThis is adapted from the original Ericsson PR that showed us the bug that became GEODE-8240. Rather than use gfsh, we are delving into the IDM directly here.", "url": "https://github.com/apache/geode/pull/5334#discussion_r448569055", "createdAt": "2020-07-01T19:22:02Z", "author": {"login": "Bill"}, "path": "geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradeDUnitTest.java", "diffHunk": "@@ -205,6 +210,22 @@ void doTestRollAll(String regionType, String objectType, String startingVersion)\n       verifyValues(objectType, regionName, 0, 10, server2);\n       putAndVerify(objectType, server2, regionName, 15, 25, server1);\n \n+      final short versionOrdinalAfterUpgrade = Version.getCurrentVersion().ordinal();\n+      locator.invoke(() -> {\n+\n+        final Locator theLocator = Locator.getLocator();\n+        final DistributedSystem distributedSystem = theLocator.getDistributedSystem();\n+        final InternalDistributedSystem ids =\n+            (InternalDistributedSystem) distributedSystem;\n+        final DistributionManager distributionManager = ids.getDistributionManager();\n+        final MembershipView<InternalDistributedMember> view =\n+            distributionManager.getDistribution().getView();\n+\n+        for (final InternalDistributedMember member : view.getMembers()) {\n+          assertThat(member.getVersionOrdinal()).isEqualTo(versionOrdinalAfterUpgrade);\n+        }\n+      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f9bdfbb7a285abe3a6ac8bdd7d138e0b7e2fb4a"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3902, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}