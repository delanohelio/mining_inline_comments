{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NjQ3NDEz", "number": 5464, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMToxMjo0NlrOEZqV7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMToxOToyNVrOEZqeGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MzQzNTk4OnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMToxMjo0NlrOHCm4XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjozMjo0MlrOHCo9Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ5NjIyMQ==", "bodyText": "Should not use value.getRegion() here as it will still cause the hang.", "url": "https://github.com/apache/geode/pull/5464#discussion_r472496221", "createdAt": "2020-08-18T21:12:46Z", "author": {"login": "pivotal-eshu"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "diffHunk": "@@ -693,15 +693,19 @@ public boolean put(Object object) throws InterruptedException, CacheException {\n \n     boolean isDREvent = isDREvent(sender.getCache(), value);\n \n-    Region region = value.getRegion();\n-    String regionPath = null;\n-    if (isDREvent) {\n-      regionPath = region.getFullPath();\n-    } else {\n+    String regionPath = value.getRegionPath();\n+    if (!isDREvent) {\n+      Region region = sender.getCache().getRegion(regionPath);\n+      if (region == null) {\n+        if (isDebugEnabled) {\n+          logger.debug(\"The PR \" + regionPath + \" has not finished initializing.\");\n+        }\n+        region = value.getRegion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ea51eb55f7833ca5a2b867f2acb331895ca1ec"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUzMDE4Nw==", "bodyText": "After I use getRegion(path, true), I don't need to call value.getRegion().\nOtherwise, value.getRegion() is still necessary. When code arrived here, it's normal enqueue (not syncWith enqueue), the event.getRegion() will never be null.", "url": "https://github.com/apache/geode/pull/5464#discussion_r472530187", "createdAt": "2020-08-18T22:32:42Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "diffHunk": "@@ -693,15 +693,19 @@ public boolean put(Object object) throws InterruptedException, CacheException {\n \n     boolean isDREvent = isDREvent(sender.getCache(), value);\n \n-    Region region = value.getRegion();\n-    String regionPath = null;\n-    if (isDREvent) {\n-      regionPath = region.getFullPath();\n-    } else {\n+    String regionPath = value.getRegionPath();\n+    if (!isDREvent) {\n+      Region region = sender.getCache().getRegion(regionPath);\n+      if (region == null) {\n+        if (isDebugEnabled) {\n+          logger.debug(\"The PR \" + regionPath + \" has not finished initializing.\");\n+        }\n+        region = value.getRegion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ5NjIyMQ=="}, "originalCommit": {"oid": "39ea51eb55f7833ca5a2b867f2acb331895ca1ec"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MzQ1NjkwOnYy", "diffSide": "RIGHT", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMToxOToyNVrOHCnEkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjoyOTo0MVrOHCo40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ5OTM0NA==", "bodyText": "sender.getCache().getRegion(regionPath) should not be null due to initialization as it invokes region.waitOnInitialization(). If region is null, I think it indicates region is destroyed.", "url": "https://github.com/apache/geode/pull/5464#discussion_r472499344", "createdAt": "2020-08-18T21:19:25Z", "author": {"login": "pivotal-eshu"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "diffHunk": "@@ -693,15 +693,19 @@ public boolean put(Object object) throws InterruptedException, CacheException {\n \n     boolean isDREvent = isDREvent(sender.getCache(), value);\n \n-    Region region = value.getRegion();\n-    String regionPath = null;\n-    if (isDREvent) {\n-      regionPath = region.getFullPath();\n-    } else {\n+    String regionPath = value.getRegionPath();\n+    if (!isDREvent) {\n+      Region region = sender.getCache().getRegion(regionPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ea51eb55f7833ca5a2b867f2acb331895ca1ec"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUyOTEwNQ==", "bodyText": "I will change to sender.getCache().getRegion(regionPath,true).\nIt will be null. In the test, the region is destroyed. But we still need to get the root region. The event will be ignored later by if (!this.userRegionNameToShadowPRMap.containsKey(regionPath)) {", "url": "https://github.com/apache/geode/pull/5464#discussion_r472529105", "createdAt": "2020-08-18T22:29:41Z", "author": {"login": "gesterzhou"}, "path": "geode-core/src/main/java/org/apache/geode/internal/cache/wan/parallel/ParallelGatewaySenderQueue.java", "diffHunk": "@@ -693,15 +693,19 @@ public boolean put(Object object) throws InterruptedException, CacheException {\n \n     boolean isDREvent = isDREvent(sender.getCache(), value);\n \n-    Region region = value.getRegion();\n-    String regionPath = null;\n-    if (isDREvent) {\n-      regionPath = region.getFullPath();\n-    } else {\n+    String regionPath = value.getRegionPath();\n+    if (!isDREvent) {\n+      Region region = sender.getCache().getRegion(regionPath);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ5OTM0NA=="}, "originalCommit": {"oid": "39ea51eb55f7833ca5a2b867f2acb331895ca1ec"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4744, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}