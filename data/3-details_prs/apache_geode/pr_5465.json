{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5Njc0Nzg3", "number": 5465, "title": "GEODE-8419: SSL/TLS protocol and cipher suite configuration is ignored", "bodyText": "Configure cipher suites when creating an SSLEngine\nThank you for submitting a contribution to Apache Geode.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced in the commit message?\n\n\n Has your PR been rebased against the latest commit within the target branch (typically develop)?\n\n\n Is your initial contribution a single, squashed commit?\n\n\n Does gradlew build run cleanly?\n\n\n Have you written or updated unit tests to verify your changes?\n\n\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n\n\nNote:\nPlease ensure that once the PR is submitted, check Concourse for build issues and\nsubmit an update to your PR as soon as possible. If you need help, please send an\nemail to dev@geode.apache.org.", "createdAt": "2020-08-18T18:48:37Z", "url": "https://github.com/apache/geode/pull/5465", "merged": true, "mergeCommit": {"oid": "537721ff815cf40eff85fde65db9b5e787471c89"}, "closed": true, "closedAt": "2020-08-19T22:27:08Z", "author": {"login": "bschuchardt"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdALlh5gH2gAyNDY5Njc0Nzg3OmY2ZDEyMWFlYzc0ZmY1ZDMzNTg2MjIxNWYxNmQ1MDQ1NDUzNDQ0YWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAf_ElgFqTQ3MDczNDM4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6d121aec74ff5d335862215f16d5045453444ab", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/f6d121aec74ff5d335862215f16d5045453444ab", "committedDate": "2020-08-18T18:47:11Z", "message": "GEODE-8419: SSL/TLS protocol and cipher suite configuration is ignored\n\nConfigure cipher suites when creating an SSLEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e9dea895d997b8245db50666bd3c5449b91b70", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/02e9dea895d997b8245db50666bd3c5449b91b70", "committedDate": "2020-08-18T20:05:23Z", "message": "addressing test issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d240a666801930cb54e2f9ccd5ed4fa2f2c7aad", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/3d240a666801930cb54e2f9ccd5ed4fa2f2c7aad", "committedDate": "2020-08-18T20:48:05Z", "message": "fixing error in SSLSocket endpoint validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODY1MzI4", "url": "https://github.com/apache/geode/pull/5465#pullrequestreview-469865328", "createdAt": "2020-08-18T22:10:21Z", "commit": {"oid": "3d240a666801930cb54e2f9ccd5ed4fa2f2c7aad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjoxMDoyMVrOHCocSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjoxMTowMFrOHCodSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUyMTgwMg==", "bodyText": "Should we verify that it is called with a String[] only containing the \"someCipher\"?", "url": "https://github.com/apache/geode/pull/5465#discussion_r472521802", "createdAt": "2020-08-18T22:10:21Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/SocketCreatorJUnitTest.java", "diffHunk": "@@ -98,6 +102,30 @@ private void testBindExceptionMessageFormatting(InetAddress inetAddress) throws\n     }\n   }\n \n+  @Test\n+  public void configureSSLEngine() {\n+    SSLConfig config = new SSLConfig.Builder().setCiphers(\"someCipher\").setEnabled(true)\n+        .setProtocols(\"someProtocol\").setRequireAuth(true).setKeystore(\"someKeystore.jks\")\n+        .setAlias(\"someAlias\").setTruststore(\"someTruststore.jks\")\n+        .setEndpointIdentificationEnabled(true).build();\n+    SSLContext context = mock(SSLContext.class);\n+    SSLParameters parameters = mock(SSLParameters.class);\n+\n+    SocketCreator socketCreator = new SocketCreator(config, context);\n+\n+    SSLEngine engine = mock(SSLEngine.class);\n+    when(engine.getSSLParameters()).thenReturn(parameters);\n+\n+    engine.setEnableSessionCreation(true);\n+    socketCreator.configureSSLEngine(engine, \"somehost\", 12345, true);\n+\n+    verify(engine).setUseClientMode(isA(Boolean.class));\n+    verify(engine).setSSLParameters(parameters);\n+    verify(engine).setEnabledCipherSuites(isA(String[].class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d240a666801930cb54e2f9ccd5ed4fa2f2c7aad"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUyMjA1OQ==", "bodyText": "What about a test for \"any\"?", "url": "https://github.com/apache/geode/pull/5465#discussion_r472522059", "createdAt": "2020-08-18T22:11:00Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/SocketCreatorJUnitTest.java", "diffHunk": "@@ -98,6 +102,30 @@ private void testBindExceptionMessageFormatting(InetAddress inetAddress) throws\n     }\n   }\n \n+  @Test\n+  public void configureSSLEngine() {\n+    SSLConfig config = new SSLConfig.Builder().setCiphers(\"someCipher\").setEnabled(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d240a666801930cb54e2f9ccd5ed4fa2f2c7aad"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4638eca502bea68894d5b6e694a0a88a6e5721", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/ec4638eca502bea68894d5b6e694a0a88a6e5721", "committedDate": "2020-08-18T22:57:38Z", "message": "addressing Jake's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODkwNzc0", "url": "https://github.com/apache/geode/pull/5465#pullrequestreview-469890774", "createdAt": "2020-08-18T23:12:50Z", "commit": {"oid": "ec4638eca502bea68894d5b6e694a0a88a6e5721"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoxMjo1MFrOHCpxGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoxMjo1MFrOHCpxGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0MzUxNA==", "bodyText": "Are you familiar with ArgumentCaptors in Mokito? I find it to be more readable approach to the argument validation than doAnswer approach.\nhttps://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#verify-T-", "url": "https://github.com/apache/geode/pull/5465#discussion_r472543514", "createdAt": "2020-08-18T23:12:50Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/SocketCreatorJUnitTest.java", "diffHunk": "@@ -98,6 +106,65 @@ private void testBindExceptionMessageFormatting(InetAddress inetAddress) throws\n     }\n   }\n \n+  @Test\n+  public void configureSSLEngine() {\n+    SSLConfig config = new SSLConfig.Builder().setCiphers(\"someCipher\").setEnabled(true)\n+        .setProtocols(\"someProtocol\").setRequireAuth(true).setKeystore(\"someKeystore.jks\")\n+        .setAlias(\"someAlias\").setTruststore(\"someTruststore.jks\")\n+        .setEndpointIdentificationEnabled(true).build();\n+    SSLContext context = mock(SSLContext.class);\n+    SSLParameters parameters = mock(SSLParameters.class);\n+\n+    SocketCreator socketCreator = new SocketCreator(config, context);\n+\n+    SSLEngine engine = mock(SSLEngine.class);\n+    when(engine.getSSLParameters()).thenReturn(parameters);\n+\n+    final Object[] setProtocols = new Object[1];\n+    doAnswer((Answer<Void>) invocation -> {\n+      setProtocols[0] = invocation.getArgument(0);\n+      return null;\n+    }).when(engine).setEnabledProtocols(any(String[].class));\n+\n+    final Object[] setCiphers = new Object[1];\n+    doAnswer((Answer<Void>) invocation -> {\n+      setCiphers[0] = invocation.getArgument(0);\n+      return null;\n+    }).when(engine).setEnabledCipherSuites(any(String[].class));\n+\n+    socketCreator.configureSSLEngine(engine, \"somehost\", 12345, true);\n+\n+    verify(engine).setUseClientMode(isA(Boolean.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec4638eca502bea68894d5b6e694a0a88a6e5721"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b47b5fc3b383adbf04b87c4b82d27b9e330f83", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/c7b47b5fc3b383adbf04b87c4b82d27b9e330f83", "committedDate": "2020-08-19T15:26:40Z", "message": "change test to use ArgumentCaptor - thanks Jake\\!"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNTk5MzY2", "url": "https://github.com/apache/geode/pull/5465#pullrequestreview-470599366", "createdAt": "2020-08-19T15:55:26Z", "commit": {"oid": "c7b47b5fc3b383adbf04b87c4b82d27b9e330f83"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTo1NToyNlrOHDN65g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTo1NToyNlrOHDN65g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEzNTg0Ng==", "bodyText": "You will want separate captors for each of these and then assert the values.\nArgumentCaptor<String[]> enabledProtocols = ArgumentCaptor.forClass(String[].class);\nverify(engine).setEnabledProtocols(enabledProtocols.capture());\nassertThat(enabledProtocols.getValue()).containsExactly(\"someProtocol\");\n\nArgumentCaptor<String[]> enabledCipherSuites = ArgumentCaptor.forClass(String[].class);\nverify(engine). setEnabledCipherSuites(enabledCipherSuites.capture());\nassertThat(enabledCipherSuites.getValue()).containsExactly(\"someCipher\");", "url": "https://github.com/apache/geode/pull/5465#discussion_r473135846", "createdAt": "2020-08-19T15:55:26Z", "author": {"login": "pivotal-jbarrett"}, "path": "geode-core/src/test/java/org/apache/geode/internal/net/SocketCreatorJUnitTest.java", "diffHunk": "@@ -120,28 +117,14 @@ public void configureSSLEngine() {\n     SSLEngine engine = mock(SSLEngine.class);\n     when(engine.getSSLParameters()).thenReturn(parameters);\n \n-    final Object[] setProtocols = new Object[1];\n-    doAnswer((Answer<Void>) invocation -> {\n-      setProtocols[0] = invocation.getArgument(0);\n-      return null;\n-    }).when(engine).setEnabledProtocols(any(String[].class));\n-\n-    final Object[] setCiphers = new Object[1];\n-    doAnswer((Answer<Void>) invocation -> {\n-      setCiphers[0] = invocation.getArgument(0);\n-      return null;\n-    }).when(engine).setEnabledCipherSuites(any(String[].class));\n+    ArgumentCaptor<String[]> engineArgumentCaptor = ArgumentCaptor.forClass(String[].class);\n \n     socketCreator.configureSSLEngine(engine, \"somehost\", 12345, true);\n \n     verify(engine).setUseClientMode(isA(Boolean.class));\n     verify(engine).setSSLParameters(parameters);\n-    verify(engine).setEnabledCipherSuites(isA(String[].class));\n-    assertThat(setProtocols[0]).isNotNull();\n-    String[] protocolStrings = (String[]) setProtocols[0];\n-    assertThat(protocolStrings[0].equals(\"someProtocol\"));\n-    String[] cipherStrings = (String[]) setCiphers[0];\n-    assertThat(cipherStrings[0].equals(\"someCipher\"));\n+    verify(engine).setEnabledProtocols(engineArgumentCaptor.capture());\n+    verify(engine).setEnabledCipherSuites(engineArgumentCaptor.capture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b47b5fc3b383adbf04b87c4b82d27b9e330f83"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "318e4a36f963b1d964a71068c168b9efc26b8e72", "author": {"user": {"login": "bschuchardt", "name": "Bruce Schuchardt"}}, "url": "https://github.com/apache/geode/commit/318e4a36f963b1d964a71068c168b9efc26b8e72", "committedDate": "2020-08-19T17:19:53Z", "message": "check captured argument content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzM0Mzg1", "url": "https://github.com/apache/geode/pull/5465#pullrequestreview-470734385", "createdAt": "2020-08-19T18:33:11Z", "commit": {"oid": "318e4a36f963b1d964a71068c168b9efc26b8e72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4150, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}