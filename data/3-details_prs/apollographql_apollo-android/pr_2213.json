{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzUxOTgy", "number": 2213, "title": "Take nullity into account to generate correct code", "bodyText": "Fixes #2209", "createdAt": "2020-04-24T20:31:44Z", "url": "https://github.com/apollographql/apollo-android/pull/2213", "merged": true, "mergeCommit": {"oid": "c1f0050ea805df7b017ea553a086396159e141f2"}, "closed": true, "closedAt": "2020-04-25T06:26:59Z", "author": {"login": "tasomaniac"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca3jEoAH2gAyNDA4NzUxOTgyOmRkNWE4YjdlMGVlZmI2MGE1MjMyZjk2ZTZjM2FiZWQ2YmU3ZjFkMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABca7dGlAFqTQwMDM0MDA3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13", "committedDate": "2020-04-24T20:31:12Z", "message": "Take nullity into account to generate correct code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjg4NDE1", "url": "https://github.com/apollographql/apollo-android/pull/2213#pullrequestreview-400288415", "createdAt": "2020-04-24T21:42:49Z", "commit": {"oid": "dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzExMDUx", "url": "https://github.com/apollographql/apollo-android/pull/2213#pullrequestreview-400311051", "createdAt": "2020-04-24T22:45:12Z", "commit": {"oid": "dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo0NToxMlrOGLrssw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo0NToxMlrOGLrssw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMzQ3NQ==", "bodyText": "hm, that strange why do we have this in ResponseWriter:\ninterface ListWriter<T> {\n    fun write(items: List<T>?, listItemWriter: ListItemWriter)\n  }\n\nI have to double check, as it looks like it should be:\ninterface ListWriter<T> {\n    fun write(items: List<T>, listItemWriter: ListItemWriter)\n  }\n\nAnd the reason why I'm confused is that we check for null before:\n  override fun <T> writeList(field: ResponseField, values: List<T>?, listWriter: ResponseWriter.ListWriter<T>) {\n    if (values == null) {\n      data[field.responseName] = null\n    } else {\n      val listItemWriter = CustomListItemWriter(scalarTypeAdapters)\n      listWriter.write(values, listItemWriter)\n      data[field.responseName] = listItemWriter.data\n    }\n  }", "url": "https://github.com/apollographql/apollo-android/pull/2213#discussion_r414903475", "createdAt": "2020-04-24T22:45:12Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGen.kt", "diffHunk": "@@ -331,25 +347,31 @@ internal object KotlinCodeGen {\n     }\n   }\n \n-  private val FieldType.writeListItemCode: CodeBlock\n+  private val FieldType.Array.writeListItemCode: CodeBlock\n     get() {\n-      return when (this) {\n-        is FieldType.Scalar -> when (this) {\n+      val safeValue = if (isOptional) \"value?\" else \"value\"\n+      return when (rawType) {\n+        is FieldType.Scalar -> when (rawType) {\n           is FieldType.Scalar.String -> CodeBlock.of(\"listItemWriter.writeString(value)\")\n           is FieldType.Scalar.Int -> CodeBlock.of(\"listItemWriter.writeInt(value)\")\n           is FieldType.Scalar.Boolean -> CodeBlock.of(\"listItemWriter.writeBoolean(value)\")\n           is FieldType.Scalar.Float -> CodeBlock.of(\"listItemWriter.writeDouble(value)\")\n-          is FieldType.Scalar.Enum -> CodeBlock.of(\"listItemWriter.writeString(value?.rawValue)\")\n-          is FieldType.Scalar.Custom -> CodeBlock.of(\"listItemWriter.writeCustom(%T.%L, value)\", customEnumType.asTypeName(),\n-              customEnumConst)\n+          is FieldType.Scalar.Enum -> CodeBlock.of(\"listItemWriter.writeString($safeValue.rawValue)\")\n+          is FieldType.Scalar.Custom -> {\n+            CodeBlock.of(\"listItemWriter.writeCustom(%T.%L, value)\", rawType.customEnumType.asTypeName(), rawType.customEnumConst)\n+          }\n         }\n-        is FieldType.Object -> CodeBlock.of(\"listItemWriter.writeObject(value?.marshaller())\", asTypeName())\n+        is FieldType.Object -> CodeBlock.of(\"listItemWriter.writeObject($safeValue.marshaller())\", asTypeName())\n         is FieldType.Array -> {\n           CodeBlock.builder()\n               .beginControlFlow(\n                   \"listItemWriter.writeList(value)\u00b7{ value, listItemWriter ->\",\n-                  List::class.asClassName().parameterizedBy(rawType.asTypeName()))\n-              .beginControlFlow(\"value?.forEach\u00b7{ value ->\", List::class.asClassName().parameterizedBy(rawType.asTypeName()))\n+                  List::class.asClassName().parameterizedBy(rawType.rawType.asTypeName())\n+              )\n+              .beginControlFlow(\n+                  \"value?.forEach\u00b7{ value ->\", // value always nullable in ListItemWriter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzQwMDc0", "url": "https://github.com/apollographql/apollo-android/pull/2213#pullrequestreview-400340074", "createdAt": "2020-04-25T01:04:18Z", "commit": {"oid": "dd5a8b7e0eefb60a5232f96e6c3abed6be7f1d13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3973, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}