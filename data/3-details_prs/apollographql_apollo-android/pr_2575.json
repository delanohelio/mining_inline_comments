{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NTAyNjIx", "number": 2575, "title": "[Plugin] Add an option to fail on deprecated usages", "bodyText": "Add\napollo {\n  warnOnDeprecatedUsages.set(true) // true by default\n  failOnWarnings.set(true) // false by default\n}\n\nFixes #2489\nUsing the w: $file: ($line, $column): $message format, intelliJ will display it nicely in the \"Run\" panel:\n\nSomehow the warnings are not clickable in the \"Run\" panel but are in the build output, not really sure how to make IntelliJ pick them up.\nAlso, this PR only checks deprecated fields usages. Checking for deprecated enums could be done too but that's more complex so will be done in a future PR.\nPing @kenyee, sorry it took so long, I wanted to get the multi-module PR in first to avoid too many conflicts.", "createdAt": "2020-09-14T10:18:02Z", "url": "https://github.com/apollographql/apollo-android/pull/2575", "merged": true, "mergeCommit": {"oid": "344e60e29b7ce256b7936a511e750ceae83bf396"}, "closed": true, "closedAt": "2020-09-21T14:04:12Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIwAkxAH2gAyNDg2NTAyNjIxOjNkMjczOWY3MWVmZmQyZTZjNGFlZThjMzgwNDA1Y2I0MGRlODIwMzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJL1aZgFqTQ4ODkzOTkwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3d2739f71effd2e6c4aee8c380405cb40de82039", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/3d2739f71effd2e6c4aee8c380405cb40de82039", "committedDate": "2020-09-14T09:44:42Z", "message": "added 'warnOnDeprecatedUsages' and 'failOnWarnings':"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e685b72e4f4e6bca2bebd730c91bab4253bd52db", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e685b72e4f4e6bca2bebd730c91bab4253bd52db", "committedDate": "2020-09-14T10:00:41Z", "message": "fix off by one error when clicking in the IDE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d1b00b732537deafb81364de20300fd36e0718e", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/4d1b00b732537deafb81364de20300fd36e0718e", "committedDate": "2020-09-14T10:02:41Z", "message": "update metalava"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c5dfdef8ef9bc58f6fa5fc2c67f639e26937f3a", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/5c5dfdef8ef9bc58f6fa5fc2c67f639e26937f3a", "committedDate": "2020-09-14T10:13:09Z", "message": "use the fieldName, not the aliased name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12296bc0a06e7c81aa085c293fb12229fda821a9", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/12296bc0a06e7c81aa085c293fb12229fda821a9", "committedDate": "2020-09-14T12:09:56Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTMxMzc0", "url": "https://github.com/apollographql/apollo-android/pull/2575#pullrequestreview-488131374", "createdAt": "2020-09-14T20:51:07Z", "commit": {"oid": "12296bc0a06e7c81aa085c293fb12229fda821a9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo1MTowN1rOHRmHBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo1MTowN1rOHRmHBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxMjIyOA==", "bodyText": "I wonder if this can be done via tailrec fun in Kotlin.  If possible, Kotlin allows recursion without the possibility of stack overflow since it optimizes the bytecode.\nIm just curious. And the end, it might look slightly better. That's all \ud83d\ude0a", "url": "https://github.com/apollographql/apollo-android/pull/2575#discussion_r488212228", "createdAt": "2020-09-14T20:51:07Z", "author": {"login": "tasomaniac"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/GraphQLCompiler.kt", "diffHunk": "@@ -139,6 +160,31 @@ class GraphQLCompiler {\n     }\n   }\n \n+  private class DeprecatedUsage(val filePath: String, val sourceLocation: SourceLocation, val field: Field)\n+\n+  private fun DocumentParseResult.collectDeprecatedUsages(): List<DeprecatedUsage> {\n+    return operations.flatMap { it.fields.collectDeprecatedUsages(it.filePath) } +\n+        fragments.flatMap { it.fields.collectDeprecatedUsages(it.filePath) }\n+  }\n+\n+  /**\n+   * walk the list and return any deprecated fields\n+   * TODO: add support for deprecated enums\n+   */\n+  private fun List<Field>.collectDeprecatedUsages(filePath: String): List<DeprecatedUsage> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12296bc0a06e7c81aa085c293fb12229fda821a9"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4OTM5OTA0", "url": "https://github.com/apollographql/apollo-android/pull/2575#pullrequestreview-488939904", "createdAt": "2020-09-15T18:09:51Z", "commit": {"oid": "12296bc0a06e7c81aa085c293fb12229fda821a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4272, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}