{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTk5MDkx", "number": 2053, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMjoyMzo0NlrODmDijA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMjoyMzo0NlrODmDijA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjMwNDc2OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMjoyMzo0NlrOFzSAFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QyMjo0MjowOVrOFzSD0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ==", "bodyText": "@silencecorner @tasomaniac Do you know if there's a specific reason to use system properties (-D) over project properties (-P) ? There's a bunch of both in the project and I feel it would be more clean to use the same everywhere but maybe not ?", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389316631", "createdAt": "2020-03-07T22:23:46Z", "author": {"login": "martinbonnin"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjc1NA==", "bodyText": "As far as I know, it is harder to put project properties as persistent. Like putting them in gradle.properties\nI had this in mind while reviewing the prev PR. But I've seen other -D in the project. I didn't know we also have -P. I would also go for consistency.", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389316754", "createdAt": "2020-03-07T22:26:29Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ=="}, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjkxMA==", "bodyText": "If wish there were a single way to do it :).\nI'll move the downloadSchema task config to -D so we have -D everywhere", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389316910", "createdAt": "2020-03-07T22:29:32Z", "author": {"login": "martinbonnin"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ=="}, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNzIxNw==", "bodyText": "I saw you were using task inputs as parameters which works even without -P or -D.", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389317217", "createdAt": "2020-03-07T22:35:19Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ=="}, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNzM2Nw==", "bodyText": "Ah yes, that's even better \ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389317367", "createdAt": "2020-03-07T22:38:06Z", "author": {"login": "martinbonnin"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ=="}, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNzU4Nw==", "bodyText": "I think we can have 2. Either that which looks much better. Or -D for the things that are more persistent. Like timeout setting.", "url": "https://github.com/apollographql/apollo-android/pull/2053#discussion_r389317587", "createdAt": "2020-03-07T22:42:09Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -200,17 +200,22 @@ apollo {\n You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json\n ```\n \n If your endpoint requires authentication, you can pass query parameters and/or custom HTTP headers:\n \n ```\n-./gradlew :shared:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n+./gradlew :module:downloadApolloSchema -Pcom.apollographql.apollo.endpoint=https://your.graphql.endpoint -Pcom.apollographql.apollo.schema=src/main/graphql/com/example/schema.json  \"-Pcom.apollographql.apollo.headers=Authorization=Bearer YOUR_TOKEN\" \"-Pcom.apollographql.apollo.query_params=key1=value1&key2=value2\"\n ```\n \n The `com.apollographql.apollo.headers` and `com.apollographql.apollo.query_params` properties both take a query string where key and values should be URL encoded.\n \n+The default timeout for download operation is 1 minute. If you have a large `schema.json`, you may want to increase the timeout. Do that by adding the following into `gradle.properties`:\n+```\n+org.gradle.jvmargs=-DokHttp.connectTimeout=60 -DokHttp.readTimeout=60", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjYzMQ=="}, "originalCommit": {"oid": "b2ee6d90a764699033092a625596c80a012a8c97"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3295, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}