{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjIzMTAx", "number": 2592, "title": "[Compiler] Handle lists in arguments", "bodyText": "Generate Kotlin Lists for GraphQL lists arguments so that RealCacheKeyBuilder can traverse them and replace variables when needed.\nFor an exemple, the below query would not replace the tags_filter_1 and tags_filter_2 variables:\nquery getContent(\n  $vendors: [Int!],\n  $tags_filter_1: [Int!],\n  $tags_filter_2: [Int!]\n) {\n  content(\n    where:{\n      state: {_eq: \"available\"},\n      vendor_id: {_in: $vendors},\n      _and : [\n        { recipe_tags : { tag_id: {_in: $tags_filter_1}}},\n        { recipe_tags : { tag_id: {_in: $tags_filter_2}}}\n      ]\n    }\n  ) {id}\n}\ncloses #2589", "createdAt": "2020-09-21T11:22:01Z", "url": "https://github.com/apollographql/apollo-android/pull/2592", "merged": true, "mergeCommit": {"oid": "5a1ba3da1ea9e0e0cc6c99024052dca78fb5c2d8"}, "closed": true, "closedAt": "2020-09-24T07:41:59Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLBrRHAFqTQ5MjUwMDc5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdL4HZfAFqTQ5NTE4NDQ3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTAwNzk5", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-492500799", "createdAt": "2020-09-21T11:27:34Z", "commit": {"oid": "92e556bf29139a768b44db3c19b7f1392a37515c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToyNzozNFrOHVLX-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToyNzozNFrOHVLX-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2ODUwNQ==", "bodyText": "I also took this opportunity to map GraphQL's Int and Float to Kotlin's Int and Double for better typing. While I believe it's more correct, it's a behaviour change so I'm happy to revert if we think this is risky.", "url": "https://github.com/apollographql/apollo-android/pull/2592#discussion_r491968505", "createdAt": "2020-09-21T11:27:34Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/arguments_complex/TestQuery.kt", "diffHunk": "@@ -170,21 +171,34 @@ data class TestQuery(\n           ResponseField.forObject(\"heroWithReview\", \"heroWithReview\", mapOf<String, Any>(\n             \"episode\" to mapOf<String, Any>(\n               \"kind\" to \"Variable\",\n-              \"variableName\" to \"episode\"),\n+              \"variableName\" to \"episode\"\n+            ),\n             \"review\" to mapOf<String, Any>(\n               \"stars\" to mapOf<String, Any>(\n                 \"kind\" to \"Variable\",\n-                \"variableName\" to \"stars\"),\n+                \"variableName\" to \"stars\"\n+              ),\n               \"favoriteColor\" to mapOf<String, Any>(\n-                \"red\" to \"0\",\n+                \"red\" to 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92e556bf29139a768b44db3c19b7f1392a37515c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46dde50109e565dbd055b800627642950cbe6369", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/46dde50109e565dbd055b800627642950cbe6369", "committedDate": "2020-09-21T11:44:52Z", "message": "InputTypes should not contain variables themselves, no need to recurse\nhere"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02284678f7be8dc3f8ecce45192757faf3f1583a", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/02284678f7be8dc3f8ecce45192757faf3f1583a", "committedDate": "2020-09-21T11:44:52Z", "message": "add a (currently-failing) test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a30e0c2995d99d083c585438a4f42c982da6b79b", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/a30e0c2995d99d083c585438a4f42c982da6b79b", "committedDate": "2020-09-21T11:44:52Z", "message": "Generate Kotlin lists for Graphql lists argument values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d0d26732fcdea4d5d87ba79b2fc0c5613cd1c9e", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/6d0d26732fcdea4d5d87ba79b2fc0c5613cd1c9e", "committedDate": "2020-09-21T11:44:52Z", "message": "handle Lists in arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ca943b15e565a1e61575485ae6f958c387b712", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/80ca943b15e565a1e61575485ae6f958c387b712", "committedDate": "2020-09-21T11:44:52Z", "message": "update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50845e2641e5f530efbfa046e0dcb41e1ba0961", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e50845e2641e5f530efbfa046e0dcb41e1ba0961", "committedDate": "2020-09-21T11:44:52Z", "message": "keep numbers encoded as Strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0842204c4269f53b629be9e5a1e717b61a655844", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0842204c4269f53b629be9e5a1e717b61a655844", "committedDate": "2020-09-21T11:44:52Z", "message": "remove indentation fix to keep the model as close as possible to their\nprevious state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed6a247a33a3ab7bd119cdd820f7cdbec9fbf46", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0ed6a247a33a3ab7bd119cdd820f7cdbec9fbf46", "committedDate": "2020-09-21T11:44:52Z", "message": "update test fixtures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92e556bf29139a768b44db3c19b7f1392a37515c", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/92e556bf29139a768b44db3c19b7f1392a37515c", "committedDate": "2020-09-21T11:10:59Z", "message": "update tests"}, "afterCommit": {"oid": "0ed6a247a33a3ab7bd119cdd820f7cdbec9fbf46", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0ed6a247a33a3ab7bd119cdd820f7cdbec9fbf46", "committedDate": "2020-09-21T11:44:52Z", "message": "update test fixtures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/04a162648359692b9becd6843ca5c55c2646aa6b", "committedDate": "2020-09-21T13:13:53Z", "message": "add a comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTg5NjI1", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-494989625", "createdAt": "2020-09-23T19:39:46Z", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozOTo0NlrOHW-KEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozOTo0NlrOHW-KEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0OTEwNw==", "bodyText": "toSortedMap() fits also\nhttps://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/to-sorted-map.html", "url": "https://github.com/apollographql/apollo-android/pull/2592#discussion_r493849107", "createdAt": "2020-09-23T19:39:46Z", "author": {"login": "akelix"}, "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/RealCacheKeyBuilder.kt", "diffHunk": "@@ -29,34 +29,39 @@ class RealCacheKeyBuilder : CacheKeyBuilder {\n   }\n \n   @Suppress(\"UNCHECKED_CAST\")\n-  private fun resolveArguments(objectMap: Map<String, Any?>, variables: Operation.Variables): Map<String, Any?> {\n-    return objectMap.mapValues { (_, value) ->\n-      if (value is Map<*, *>) {\n-        val nestedObjectMap = value as Map<String, Any?>\n-        if (isArgumentValueVariableType(nestedObjectMap)) {\n-          resolveVariableArgument(nestedObjectMap, variables)\n+  private fun resolveVariables(value: Any?, variables: Operation.Variables): Any? {\n+    return when (value) {\n+      null -> null\n+      is Map<*, *> -> {\n+        value as Map<String, Any?>\n+        if (isArgumentValueVariableType(value)) {\n+          resolveVariable(value, variables)\n         } else {\n-          resolveArguments(nestedObjectMap, variables)\n+          value.mapValues {\n+            resolveVariables(it.value, variables)\n+          }.toList()\n+              .sortedBy { it.first }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTk1NjMw", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-494995630", "createdAt": "2020-09-23T19:48:34Z", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTExODky", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-495111892", "createdAt": "2020-09-23T23:10:33Z", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxMDozM1rOHXEGHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxMDozM1rOHXEGHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NjM5Ng==", "bodyText": "sanity check: why these lines were removed?", "url": "https://github.com/apollographql/apollo-android/pull/2592#discussion_r493946396", "createdAt": "2020-09-23T23:10:33Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/RealCacheKeyBuilder.kt", "diffHunk": "@@ -29,34 +29,39 @@ class RealCacheKeyBuilder : CacheKeyBuilder {\n   }\n \n   @Suppress(\"UNCHECKED_CAST\")\n-  private fun resolveArguments(objectMap: Map<String, Any?>, variables: Operation.Variables): Map<String, Any?> {\n-    return objectMap.mapValues { (_, value) ->\n-      if (value is Map<*, *>) {\n-        val nestedObjectMap = value as Map<String, Any?>\n-        if (isArgumentValueVariableType(nestedObjectMap)) {\n-          resolveVariableArgument(nestedObjectMap, variables)\n+  private fun resolveVariables(value: Any?, variables: Operation.Variables): Any? {\n+    return when (value) {\n+      null -> null\n+      is Map<*, *> -> {\n+        value as Map<String, Any?>\n+        if (isArgumentValueVariableType(value)) {\n+          resolveVariable(value, variables)\n         } else {\n-          resolveArguments(nestedObjectMap, variables)\n+          value.mapValues {\n+            resolveVariables(it.value, variables)\n+          }.toList()\n+              .sortedBy { it.first }\n+              .toMap()\n+        }\n+      }\n+      is List<*> -> {\n+        value.map {\n+          resolveVariables(it, variables)\n         }\n-      } else {\n-        value\n       }\n-    }.toList()\n-        .sortedBy { it.first }\n-        .toMap()\n+      else -> value\n+    }\n   }\n \n   @Suppress(\"UNCHECKED_CAST\")\n-  private fun resolveVariableArgument(objectMap: Map<String, Any?>, variables: Operation.Variables): Any? {\n+  private fun resolveVariable(objectMap: Map<String, Any?>, variables: Operation.Variables): Any? {\n     val variable = objectMap[ResponseField.VARIABLE_NAME_KEY]\n \n     return when (val resolvedVariable = variables.valueMap()[variable]) {\n-      null -> null\n-      is Map<*, *> -> resolveArguments(resolvedVariable as Map<String, Any?>, variables)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTEyNTI4", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-495112528", "createdAt": "2020-09-23T23:12:19Z", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxMjoxOVrOHXEKOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMzoxMjoxOVrOHXEKOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk0NzQ0OQ==", "bodyText": "don't really remember why but looks like this was launching recursion for nested map arguments resolution for input type. We this change we dont do this anymore, is it right?", "url": "https://github.com/apollographql/apollo-android/pull/2592#discussion_r493947449", "createdAt": "2020-09-23T23:12:19Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/RealCacheKeyBuilder.kt", "diffHunk": "@@ -29,34 +29,39 @@ class RealCacheKeyBuilder : CacheKeyBuilder {\n   }\n \n   @Suppress(\"UNCHECKED_CAST\")\n-  private fun resolveArguments(objectMap: Map<String, Any?>, variables: Operation.Variables): Map<String, Any?> {\n-    return objectMap.mapValues { (_, value) ->\n-      if (value is Map<*, *>) {\n-        val nestedObjectMap = value as Map<String, Any?>\n-        if (isArgumentValueVariableType(nestedObjectMap)) {\n-          resolveVariableArgument(nestedObjectMap, variables)\n+  private fun resolveVariables(value: Any?, variables: Operation.Variables): Any? {\n+    return when (value) {\n+      null -> null\n+      is Map<*, *> -> {\n+        value as Map<String, Any?>\n+        if (isArgumentValueVariableType(value)) {\n+          resolveVariable(value, variables)\n         } else {\n-          resolveArguments(nestedObjectMap, variables)\n+          value.mapValues {\n+            resolveVariables(it.value, variables)\n+          }.toList()\n+              .sortedBy { it.first }\n+              .toMap()\n+        }\n+      }\n+      is List<*> -> {\n+        value.map {\n+          resolveVariables(it, variables)\n         }\n-      } else {\n-        value\n       }\n-    }.toList()\n-        .sortedBy { it.first }\n-        .toMap()\n+      else -> value\n+    }\n   }\n \n   @Suppress(\"UNCHECKED_CAST\")\n-  private fun resolveVariableArgument(objectMap: Map<String, Any?>, variables: Operation.Variables): Any? {\n+  private fun resolveVariable(objectMap: Map<String, Any?>, variables: Operation.Variables): Any? {\n     val variable = objectMap[ResponseField.VARIABLE_NAME_KEY]\n \n     return when (val resolvedVariable = variables.valueMap()[variable]) {\n-      null -> null\n-      is Map<*, *> -> resolveArguments(resolvedVariable as Map<String, Any?>, variables)\n       is InputType -> {\n         val inputFieldMapWriter = SortedInputFieldMapWriter()\n         resolvedVariable.marshaller().marshal(inputFieldMapWriter)\n-        resolveArguments(inputFieldMapWriter.map(), variables)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTg0NDc4", "url": "https://github.com/apollographql/apollo-android/pull/2592#pullrequestreview-495184478", "createdAt": "2020-09-24T02:53:10Z", "commit": {"oid": "04a162648359692b9becd6843ca5c55c2646aa6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4275, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}