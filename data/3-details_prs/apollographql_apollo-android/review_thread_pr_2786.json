{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTk3NTU2", "number": 2786, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0OTo0MVrOFAH8bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo1Mjo0NFrOFAIEbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Njc0NDc4OnYy", "diffSide": "LEFT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/backend/codegen/FragmentType.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0OTo0MVrOH-PVKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzowOTo0NlrOH--1AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAyNDkzNg==", "bodyText": "\ud83d\udc4d I guess we don't need that ?", "url": "https://github.com/apollographql/apollo-android/pull/2786#discussion_r535024936", "createdAt": "2020-12-03T09:49:41Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/backend/codegen/FragmentType.kt", "diffHunk": "@@ -71,12 +83,5 @@ internal fun CodeGenerationAst.FragmentType.implementationTypeSpec(generateAsInt\n       .toBuilder()\n       .addSuperinterface(GraphqlFragment::class)\n       .applyIf(generateAsInternal) { addModifiers(KModifier.INTERNAL) }\n-      .addType(TypeSpec.companionObjectBuilder()\n-          .addProperty(PropertySpec.builder(\"FRAGMENT_DEFINITION\", String::class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6cfa53de377745b007a574b9042e3c62f10fc9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwMzEzNg==", "bodyText": "Yep, for named fragment default implementation we don't need graphql definition as it already declared in interface", "url": "https://github.com/apollographql/apollo-android/pull/2786#discussion_r535803136", "createdAt": "2020-12-04T03:09:46Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/backend/codegen/FragmentType.kt", "diffHunk": "@@ -71,12 +83,5 @@ internal fun CodeGenerationAst.FragmentType.implementationTypeSpec(generateAsInt\n       .toBuilder()\n       .addSuperinterface(GraphqlFragment::class)\n       .applyIf(generateAsInternal) { addModifiers(KModifier.INTERNAL) }\n-      .addType(TypeSpec.companionObjectBuilder()\n-          .addProperty(PropertySpec.builder(\"FRAGMENT_DEFINITION\", String::class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAyNDkzNg=="}, "originalCommit": {"oid": "4a6cfa53de377745b007a574b9042e3c62f10fc9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Njc2NTI1OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarship.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo1Mjo0NFrOH-PiqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzoxODozMVrOH--_jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAyODM5Mw==", "bodyText": "That sounds like a little bit too much \ud83d\ude43 . Feels like this shouldn't be generated", "url": "https://github.com/apollographql/apollo-android/pull/2786#discussion_r535028393", "createdAt": "2020-12-03T09:52:44Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarship.kt", "diffHunk": "@@ -233,8 +229,33 @@ class AllStarship : Query<AllStarship.Data, Operation.Variables> {\n \n                         override fun marshaller(): ResponseFieldMarshaller\n                       }\n+\n+                      companion object {\n+                        fun Homeworld.planetFragment(): PlanetFragment? = this as? PlanetFragment\n+\n+                        fun Homeworld.pilotFragmentHomeworldPlanet():\n+                            PilotFragment.Homeworld.Planet? = this as?\n+                            PilotFragment.Homeworld.Planet\n+\n+                        fun Homeworld.starshipFragmentPilotConnectionEdgesNodePersonHomeworldPlanet():", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a6cfa53de377745b007a574b9042e3c62f10fc9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwNTgzOQ==", "bodyText": "Yeah, I guess we need to skip generating accessors for nested named fragments. Only accessors for top level fragments.", "url": "https://github.com/apollographql/apollo-android/pull/2786#discussion_r535805839", "createdAt": "2020-12-04T03:18:31Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarship.kt", "diffHunk": "@@ -233,8 +229,33 @@ class AllStarship : Query<AllStarship.Data, Operation.Variables> {\n \n                         override fun marshaller(): ResponseFieldMarshaller\n                       }\n+\n+                      companion object {\n+                        fun Homeworld.planetFragment(): PlanetFragment? = this as? PlanetFragment\n+\n+                        fun Homeworld.pilotFragmentHomeworldPlanet():\n+                            PilotFragment.Homeworld.Planet? = this as?\n+                            PilotFragment.Homeworld.Planet\n+\n+                        fun Homeworld.starshipFragmentPilotConnectionEdgesNodePersonHomeworldPlanet():", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAyODM5Mw=="}, "originalCommit": {"oid": "4a6cfa53de377745b007a574b9042e3c62f10fc9"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2986, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}