{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTI3OTgz", "number": 2447, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMToyOTowN1rOEP5Hkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMToyOTowN1rOEP5Hkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MDk5OTIyOnYy", "diffSide": "RIGHT", "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/SortedInputFieldMapWriter.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMToyOTowN1rOGzyfbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMTo0ODo0MlrOGzymMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1NzgwNg==", "bodyText": "nit: should buffer.toSortedMap() do the same?", "url": "https://github.com/apollographql/apollo-android/pull/2447#discussion_r456957806", "createdAt": "2020-07-19T21:29:07Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/SortedInputFieldMapWriter.kt", "diffHunk": "@@ -3,18 +3,14 @@ package com.apollographql.apollo.cache.normalized.internal\n import com.apollographql.apollo.api.ScalarType\n import com.apollographql.apollo.api.internal.InputFieldMarshaller\n import com.apollographql.apollo.api.internal.InputFieldWriter\n-import com.apollographql.apollo.api.internal.Utils.__checkNotNull\n-import java.io.IOException\n-import java.util.ArrayList\n-import java.util.Collections\n-import java.util.Comparator\n-import java.util.TreeMap\n+import com.apollographql.apollo.api.internal.Throws\n+import okio.IOException\n \n-class SortedInputFieldMapWriter(private val fieldNameComparator: Comparator<String>) : InputFieldWriter {\n-  private val buffer = TreeMap<String, Any?>(fieldNameComparator)\n+class SortedInputFieldMapWriter() : InputFieldWriter {\n+  private val buffer = mutableMapOf<String, Any?>()\n \n   fun map(): Map<String, Any?> {\n-    return Collections.unmodifiableMap(buffer)\n+    return buffer.toList().sortedBy { it.first }.toMap()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dca6a6ae7cfab65030b822ce908f1eb0344e474"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1OTUzNw==", "bodyText": "I didn't find a toSortedMap for iOS :(", "url": "https://github.com/apollographql/apollo-android/pull/2447#discussion_r456959537", "createdAt": "2020-07-19T21:48:42Z", "author": {"login": "martinbonnin"}, "path": "apollo-normalized-cache/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/internal/SortedInputFieldMapWriter.kt", "diffHunk": "@@ -3,18 +3,14 @@ package com.apollographql.apollo.cache.normalized.internal\n import com.apollographql.apollo.api.ScalarType\n import com.apollographql.apollo.api.internal.InputFieldMarshaller\n import com.apollographql.apollo.api.internal.InputFieldWriter\n-import com.apollographql.apollo.api.internal.Utils.__checkNotNull\n-import java.io.IOException\n-import java.util.ArrayList\n-import java.util.Collections\n-import java.util.Comparator\n-import java.util.TreeMap\n+import com.apollographql.apollo.api.internal.Throws\n+import okio.IOException\n \n-class SortedInputFieldMapWriter(private val fieldNameComparator: Comparator<String>) : InputFieldWriter {\n-  private val buffer = TreeMap<String, Any?>(fieldNameComparator)\n+class SortedInputFieldMapWriter() : InputFieldWriter {\n+  private val buffer = mutableMapOf<String, Any?>()\n \n   fun map(): Map<String, Any?> {\n-    return Collections.unmodifiableMap(buffer)\n+    return buffer.toList().sortedBy { it.first }.toMap()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1NzgwNg=="}, "originalCommit": {"oid": "3dca6a6ae7cfab65030b822ce908f1eb0344e474"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3057, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}