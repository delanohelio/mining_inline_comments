{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MzA5MTE4", "number": 1922, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzozODoxMlrODZfmnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMzo1NlrODZkW9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDU4NzgxOnYy", "diffSide": "RIGHT", "path": "docs/source/advanced/no-runtime.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzozODoxMlrOFf6OBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMjozMVrOFgBthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDAzOQ==", "bodyText": "I thought operation here would be more correct. Query was referring to a generated type, right?", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369004039", "createdAt": "2020-01-21T13:38:12Z", "author": {"login": "tasomaniac"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -10,13 +10,15 @@ For this, remove the `com.apollographql.apollo:apollo-runtime`dependency and rep\n   implementation(\"com.apollographql.apollo:apollo-api:x.y.z\")\n ```\n \n+## Parsing HTTP body\n+\n All `Operation` instances provide an API to parse `Response` from raw `okio.BufferedSource` source that represents http response body returned by the GraphQL server.\n If for some reason you want to use your own network layer and don't want to use fully featured `ApolloClient` provided by `apollo-runtime` you can use this API:\n \n ```java\n     okhttp3.Response httpResponse = ...;\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source());\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNjc5MA==", "bodyText": "I think Query was referring to https://github.com/apollographql/apollo-android/blob/65c4fff8b98f9c8f5949adb6a3b2e694489dfee0/apollo-api/src/main/java/com/apollographql/apollo/api/Query.java.\nBut this all should work with Mutation as well so using Operation.Data seems better \ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369126790", "createdAt": "2020-01-21T17:02:31Z", "author": {"login": "martinbonnin"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -10,13 +10,15 @@ For this, remove the `com.apollographql.apollo:apollo-runtime`dependency and rep\n   implementation(\"com.apollographql.apollo:apollo-api:x.y.z\")\n ```\n \n+## Parsing HTTP body\n+\n All `Operation` instances provide an API to parse `Response` from raw `okio.BufferedSource` source that represents http response body returned by the GraphQL server.\n If for some reason you want to use your own network layer and don't want to use fully featured `ApolloClient` provided by `apollo-runtime` you can use this API:\n \n ```java\n     okhttp3.Response httpResponse = ...;\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source());\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDAzOQ=="}, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTM2NjkyOnYy", "diffSide": "RIGHT", "path": "docs/source/advanced/no-runtime.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMzo1NlrOFgBwiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzowMjo0OFrOFgSL9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw==", "bodyText": "Does that belong to the no-runtime doc ? I think the original use case was for testing with a mock server. Not sure where to put it though... \ud83d\ude05", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369127563", "createdAt": "2020-01-21T17:03:56Z", "author": {"login": "martinbonnin"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE3NTEyMg==", "bodyText": "Suggestions are welcome. All of the stuff mentioned in this doc are in api module rather than runtime. I didn't really want to create a new file.", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369175122", "createdAt": "2020-01-21T18:40:59Z", "author": {"login": "tasomaniac"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE3NTIwMQ==", "bodyText": "Should I move out?", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369175201", "createdAt": "2020-01-21T18:41:10Z", "author": {"login": "tasomaniac"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMwOTMxNw==", "bodyText": "I don't really have a better idea where to put this doc. Maybe at some point do a 'testing' page ? But I guess no-runtime is fine for now, sorry for the noise.", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369309317", "createdAt": "2020-01-22T00:03:45Z", "author": {"login": "martinbonnin"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM5NjcyNg==", "bodyText": "Not at all. It's useful feedback.", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369396726", "createdAt": "2020-01-22T07:02:48Z", "author": {"login": "tasomaniac"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw=="}, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3243, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}