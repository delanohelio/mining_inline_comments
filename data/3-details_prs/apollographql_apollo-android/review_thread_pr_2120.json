{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Mjg0MDU1", "number": 2120, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozMzowOFrODumbTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTo0MTozMVrODumjfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTkwNjY5OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGenUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozMzowOFrOGAqWLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMTo1MzowNVrOGAuEkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Njk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            val MULTIPLATFORM_THROWS = ClassName.bestGuess(\"com.apollographql.apollo.api.internal.Throws\")\n          \n          \n            \n            private val MULTIPLATFORM_THROWS = ClassName(\"com.apollographql.apollo.api.internal\", \"Throws\")\n          \n      \n    \n    \n  \n\nbestGuess works the same but the \"guess\" part is a bit misleading as it implies this might fail (while it won't)", "url": "https://github.com/apollographql/apollo-android/pull/2120#discussion_r403346991", "createdAt": "2020-04-03T21:33:08Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGenUtil.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.apollographql.apollo.compiler.codegen.kotlin\n+\n+import com.squareup.kotlinpoet.AnnotationSpec\n+import com.squareup.kotlinpoet.ClassName\n+import com.squareup.kotlinpoet.FunSpec\n+\n+val MULTIPLATFORM_THROWS = ClassName.bestGuess(\"com.apollographql.apollo.api.internal.Throws\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132839a722d6b5ba7e8015ba79a8fb62eba5a22c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQwODAxNg==", "bodyText": "I didn't see the constructor when writing this. \ud83d\ude0a", "url": "https://github.com/apollographql/apollo-android/pull/2120#discussion_r403408016", "createdAt": "2020-04-04T01:53:05Z", "author": {"login": "tasomaniac"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGenUtil.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.apollographql.apollo.compiler.codegen.kotlin\n+\n+import com.squareup.kotlinpoet.AnnotationSpec\n+import com.squareup.kotlinpoet.ClassName\n+import com.squareup.kotlinpoet.FunSpec\n+\n+val MULTIPLATFORM_THROWS = ClassName.bestGuess(\"com.apollographql.apollo.api.internal.Throws\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0Njk5MQ=="}, "originalCommit": {"oid": "132839a722d6b5ba7e8015ba79a8fb62eba5a22c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTkwNzA1OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGenUtil.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozMzoxOVrOGAqWbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozMzoxOVrOGAqWbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NzA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            val MULTIPLATFORM_IO_EXCEPTION = ClassName.bestGuess(\"okio.IOException\")\n          \n          \n            \n            private val MULTIPLATFORM_IO_EXCEPTION = ClassName(\"okio\", \"IOException\")", "url": "https://github.com/apollographql/apollo-android/pull/2120#discussion_r403347055", "createdAt": "2020-04-03T21:33:19Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/codegen/kotlin/KotlinCodeGenUtil.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.apollographql.apollo.compiler.codegen.kotlin\n+\n+import com.squareup.kotlinpoet.AnnotationSpec\n+import com.squareup.kotlinpoet.ClassName\n+import com.squareup.kotlinpoet.FunSpec\n+\n+val MULTIPLATFORM_THROWS = ClassName.bestGuess(\"com.apollographql.apollo.api.internal.Throws\")\n+val MULTIPLATFORM_IO_EXCEPTION = ClassName.bestGuess(\"okio.IOException\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "132839a722d6b5ba7e8015ba79a8fb62eba5a22c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTkyNzY2OnYy", "diffSide": "RIGHT", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTo0MTozMVrOGAqieA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTo0MTozMVrOGAqieA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MDEzNg==", "bodyText": "\ud83d\udc4d  very nice to have that by default !", "url": "https://github.com/apollographql/apollo-android/pull/2120#discussion_r403350136", "createdAt": "2020-04-03T21:41:31Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -104,12 +105,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n     }\n   }\n \n-  fun generateKotlinModels(): Boolean {\n-    return generateKotlinModels.orElse(service.generateKotlinModels).orElse(apolloExtension.generateKotlinModels).getOrElse(false)\n+  fun generateKotlinModels(): Boolean = when {\n+    project.isKotlinMultiplatform -> true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789fd5b7f46cceba9670b9f2a5aca8187e81ae96"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3173, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}