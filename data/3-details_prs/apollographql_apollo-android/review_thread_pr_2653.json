{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxOTgzMjQ3", "number": 2653, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyMDowOFrOEtZOxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTozMzoxMlrOEtvjZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM0NzU4OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyMDowOFrOHhKBpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOToxODozM1rOHh-Zhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw==", "bodyText": "Double check: passing ParseResult(result = emptyList())) as parentFields is ok I think because there's no polymorphism on the root query and the parent fields will be merged in all cases?  @sav007 does that sound good to you?", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504529317", "createdAt": "2020-10-14T09:20:08Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {\n+    val rawRootParentType = schema.rootTypeForOperationType(operationType) ?: throw ParseException(\n+        message = \"Invalid operation type `${operationType}`\"\n+    )\n+    val rootParentType = schema.resolveType(schema.resolveType(rawRootParentType))\n+\n+    return this\n+        ?.selection()\n+        ?.mapNotNull { ctx ->\n+          ctx.inlineFragment()?.parse(parentSchemaType = rootParentType, ParseResult(result = emptyList()))?.result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjI2Mg==", "bodyText": "hm, not sure about this. I think we need to pass parent fields as we are merging them. For example:\nquery {\n  hero {\n    name\n    ... on Human {\n      height\n   }\n }\n}\n\nwe will merge  parent field name and height for inline fragment", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505112262", "createdAt": "2020-10-15T01:31:41Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {\n+    val rawRootParentType = schema.rootTypeForOperationType(operationType) ?: throw ParseException(\n+        message = \"Invalid operation type `${operationType}`\"\n+    )\n+    val rootParentType = schema.resolveType(schema.resolveType(rawRootParentType))\n+\n+    return this\n+        ?.selection()\n+        ?.mapNotNull { ctx ->\n+          ctx.inlineFragment()?.parse(parentSchemaType = rootParentType, ParseResult(result = emptyList()))?.result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEyNDE1NQ==", "bodyText": "I think d665d93 addresses this? Hopefully I'm on the right track.", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505124155", "createdAt": "2020-10-15T02:17:33Z", "author": {"login": "tylerbwong"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {\n+    val rawRootParentType = schema.rootTypeForOperationType(operationType) ?: throw ParseException(\n+        message = \"Invalid operation type `${operationType}`\"\n+    )\n+    val rootParentType = schema.resolveType(schema.resolveType(rawRootParentType))\n+\n+    return this\n+        ?.selection()\n+        ?.mapNotNull { ctx ->\n+          ctx.inlineFragment()?.parse(parentSchemaType = rootParentType, ParseResult(result = emptyList()))?.result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4NzM5OA==", "bodyText": "d665d93 looks good to me even though I don't think it's strictly required.\n@sav007 your sample will take a different path as the inline fragment it contains is on a field. This PR is about inline fragments on the root query. So more something like:\nquery {\n  episode\n  someOtherField\n\n  ... on Query  {\n    hero {\n      height\n   }\n }\n}\n\nI'd say in all cases, the root \"query\" type will always resolve to a single concrete type so all the fields will end up merged anyways? I'm good with either d665d93 or without. @tylerbwong Maybe put a comment linking back here in case our future selves bump into something weird?", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505387398", "createdAt": "2020-10-15T09:18:33Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {\n+    val rawRootParentType = schema.rootTypeForOperationType(operationType) ?: throw ParseException(\n+        message = \"Invalid operation type `${operationType}`\"\n+    )\n+    val rootParentType = schema.resolveType(schema.resolveType(rawRootParentType))\n+\n+    return this\n+        ?.selection()\n+        ?.mapNotNull { ctx ->\n+          ctx.inlineFragment()?.parse(parentSchemaType = rootParentType, ParseResult(result = emptyList()))?.result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyOTMxNw=="}, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM1NjUyOnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToyMjoxMVrOHhKHEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTo1OTozNVrOHhLh3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMDcwNA==", "bodyText": "I think we want the result to be a List<ParseResult<InlineFragment>> to correctly track the used types. If you do something like:\nquery TestQuery {\n  ... on Query {\n    hero {\n      appearsIn\n    }\n  }\n}\n\nappearsIn is an enum type that needs to be generated but won't be if the \"usedTypes\" are not \"bubbled\" up.", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504530704", "createdAt": "2020-10-14T09:22:11Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU1Mzk0OA==", "bodyText": "Whoops, should be fixed by 0ed96fb!", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r504553948", "createdAt": "2020-10-14T09:59:35Z", "author": {"login": "tylerbwong"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/parser/graphql/GraphQLDocumentParser.kt", "diffHunk": "@@ -371,6 +374,20 @@ class GraphQLDocumentParser(\n         ?: emptyList()\n   }\n \n+  private fun GraphQLParser.SelectionSetContext?.inlineFragments(operationType: String): List<InlineFragment> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzMDcwNA=="}, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDAwNDg3OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/test/graphql/com/example/root_query_inline_fragment/TestOperation.graphql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTozMzoxMlrOHhtoew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTozNzoxNVrOHhtsnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjY5OQ==", "bodyText": "should we omit named fragment to make this test fixture more simple? As I understood we testing just a case when inline fragment is used as root.", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505112699", "createdAt": "2020-10-15T01:33:12Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/root_query_inline_fragment/TestOperation.graphql", "diffHunk": "@@ -0,0 +1,26 @@\n+query TestQuery {\n+  ... on Query {\n+    __typename\n+    hero {\n+      ...heroFragment\n+    }\n+    droid(id: 1) {\n+      ...droidFragment\n+    }\n+    human(id: 1) {\n+      ... on Human {\n+       name\n+       homePlanet\n+      }\n+    }\n+  }\n+}\n+\n+fragment heroFragment on Character {\n+  name\n+}\n+\n+fragment droidFragment on Droid {\n+  name\n+  primaryFunction\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMzc1Nw==", "bodyText": "Sure! Removed in 6fbb8af.", "url": "https://github.com/apollographql/apollo-android/pull/2653#discussion_r505113757", "createdAt": "2020-10-15T01:37:15Z", "author": {"login": "tylerbwong"}, "path": "apollo-compiler/src/test/graphql/com/example/root_query_inline_fragment/TestOperation.graphql", "diffHunk": "@@ -0,0 +1,26 @@\n+query TestQuery {\n+  ... on Query {\n+    __typename\n+    hero {\n+      ...heroFragment\n+    }\n+    droid(id: 1) {\n+      ...droidFragment\n+    }\n+    human(id: 1) {\n+      ... on Human {\n+       name\n+       homePlanet\n+      }\n+    }\n+  }\n+}\n+\n+fragment heroFragment on Character {\n+  name\n+}\n+\n+fragment droidFragment on Droid {\n+  name\n+  primaryFunction\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExMjY5OQ=="}, "originalCommit": {"oid": "fe2f01a422128a3a02907d9878f277875d0b49fb"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2938, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}