{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDM1NDQ5", "number": 2007, "title": "Coroutines: make sure we do not crash when calling `offer`", "bodyText": "Closes #2005\nSee Kotlin/kotlinx.coroutines#974\nSee #1585", "createdAt": "2020-02-20T23:49:57Z", "url": "https://github.com/apollographql/apollo-android/pull/2007", "merged": true, "mergeCommit": {"oid": "9e2a24f43c9c74a3912e87cd1c1389c061838038"}, "closed": true, "closedAt": "2020-02-24T19:50:39Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGT_XPAH2gAyMzc4MDM1NDQ5OjQ1ZjQxN2UyMWUxMGZkOGFlMmUwYzhjNzdjZTQzYTM0YTRmMzg1ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcG-38jgFqTM2MzA2MDM5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc", "committedDate": "2020-02-20T23:47:02Z", "message": "catch offer exceptions. See https://github.com/Kotlin/kotlinx.coroutines/issues/974"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzIwNzcw", "url": "https://github.com/apollographql/apollo-android/pull/2007#pullrequestreview-362320770", "createdAt": "2020-02-20T23:59:47Z", "commit": {"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1OTo0OFrOFsnaxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzo1OTo0OFrOFsnaxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzQ5Mw==", "bodyText": "@sav007 I feel the runCatching approach is safer since there could potentially be a race condition where the channel is closed just after the if before. Let me know if isClosedForSend was used to catch other cases.", "url": "https://github.com/apollographql/apollo-android/pull/2007#discussion_r382327493", "createdAt": "2020-02-20T23:59:48Z", "author": {"login": "martinbonnin"}, "path": "apollo-coroutines-support/src/main/kotlin/com/apollographql/apollo/coroutines/CoroutinesExtensions.kt", "diffHunk": "@@ -13,9 +13,8 @@ import kotlinx.coroutines.flow.*\n \n private class ChannelCallback<T>(val channel: Channel<Response<T>>) : ApolloCall.Callback<T>() {\n \n-  @ExperimentalCoroutinesApi\n   override fun onResponse(response: Response<T>) {\n-    if (!channel.isClosedForSend) {\n+    runCatching {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDM1MTIx", "url": "https://github.com/apollographql/apollo-android/pull/2007#pullrequestreview-363035121", "createdAt": "2020-02-22T15:41:44Z", "commit": {"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDYwMzk1", "url": "https://github.com/apollographql/apollo-android/pull/2007#pullrequestreview-363060395", "createdAt": "2020-02-23T01:44:51Z", "commit": {"oid": "45f417e21e10fd8ae2e0c8c77ce43a34a4f385fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4044, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}