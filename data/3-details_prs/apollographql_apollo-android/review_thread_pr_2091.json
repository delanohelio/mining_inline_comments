{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDQwODg2", "number": 2091, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNzo1MTowMlrODqLR3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjozNDoyOVrODw8afA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTUxNTgxOnYy", "diffSide": "RIGHT", "path": "build.gradle.kts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNzo1MTowMlrOF5xWyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyNDo0M1rOF6Wvjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA==", "bodyText": "nit: I thought Gradle project provides logger, should we use proper project.logger?\nThe same comment for any usage println below", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396121800", "createdAt": "2020-03-22T17:51:02Z", "author": {"login": "sav007"}, "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  println(\"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    println(\"Deploying snapshot to OSS...\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNTkwNg==", "bodyText": "Yep, that'll allow users to shut down the logs if they really want to. I should certainly do this inside the Gradle plugin as well.", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396125906", "createdAt": "2020-03-22T18:29:56Z", "author": {"login": "martinbonnin"}, "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  println(\"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    println(\"Deploying snapshot to OSS...\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA=="}, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczNDM1MQ==", "bodyText": "For the record, I just checked the apollo-gradle-plugin module and it doesn't print to stdout at all so we're all good \ud83c\udf89", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396734351", "createdAt": "2020-03-23T20:24:43Z", "author": {"login": "martinbonnin"}, "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  println(\"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    println(\"Deploying snapshot to OSS...\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMTgwMA=="}, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NTUyMTcyOnYy", "diffSide": "RIGHT", "path": "scripts/ci.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxNzo1ODo0M1rOF5xaAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQxODoyNjo0NFrOF5xlnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA==", "bodyText": "\ud83e\udd14 isn't ./gradlew clean connectedCheck will do the same? I mean build first?", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396122624", "createdAt": "2020-03-22T17:58:43Z", "author": {"login": "sav007"}, "path": "scripts/ci.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+set -x\n+\n+export PATH=\"$ANDROID_HOME\"/tools/bin:$PATH\n+\n+which emulator\n+\n+sdkmanager --install 'system-images;android-28;default;x86_64' 'emulator'\n+echo \"no\" |avdmanager create avd --force -n test -k 'system-images;android-28;default;x86_64'\n+\n+\"$ANDROID_HOME\"/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &\n+\n+# theorically, we should wait here for the emulator to boot but compilation is slow enough\n+# that the emulator will be up by the time we reach the connectedTests. This saves writing\n+# some bash code and a few seconds of total build time.\n+\n+./gradlew clean connectedCheck\n+./gradlew build -x checkstyleTest --stacktrace --max-workers=2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjkyMw==", "bodyText": "I think that is assemble.\nBuild is everything including tests, static analysis etc", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396122923", "createdAt": "2020-03-22T18:02:06Z", "author": {"login": "tasomaniac"}, "path": "scripts/ci.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+set -x\n+\n+export PATH=\"$ANDROID_HOME\"/tools/bin:$PATH\n+\n+which emulator\n+\n+sdkmanager --install 'system-images;android-28;default;x86_64' 'emulator'\n+echo \"no\" |avdmanager create avd --force -n test -k 'system-images;android-28;default;x86_64'\n+\n+\"$ANDROID_HOME\"/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &\n+\n+# theorically, we should wait here for the emulator to boot but compilation is slow enough\n+# that the emulator will be up by the time we reach the connectedTests. This saves writing\n+# some bash code and a few seconds of total build time.\n+\n+./gradlew clean connectedCheck\n+./gradlew build -x checkstyleTest --stacktrace --max-workers=2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA=="}, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyNTU5OQ==", "bodyText": "I think build run tests while connectedCheck doesn't. I did this in order to fail faster on the connectedCheck since setting up an android emulator was a bit painful but everything can be put back to the same gradle invocation and gradle should parallelize appropriately.", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r396125599", "createdAt": "2020-03-22T18:26:44Z", "author": {"login": "martinbonnin"}, "path": "scripts/ci.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+set -x\n+\n+export PATH=\"$ANDROID_HOME\"/tools/bin:$PATH\n+\n+which emulator\n+\n+sdkmanager --install 'system-images;android-28;default;x86_64' 'emulator'\n+echo \"no\" |avdmanager create avd --force -n test -k 'system-images;android-28;default;x86_64'\n+\n+\"$ANDROID_HOME\"/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim &\n+\n+# theorically, we should wait here for the emulator to boot but compilation is slow enough\n+# that the emulator will be up by the time we reach the connectedTests. This saves writing\n+# some bash code and a few seconds of total build time.\n+\n+./gradlew clean connectedCheck\n+./gradlew build -x checkstyleTest --stacktrace --max-workers=2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEyMjYyNA=="}, "originalCommit": {"oid": "5e1875c1de1a7c7f5bfbe49d5086fda7ec8dd4ed"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjQ4MDYwOnYy", "diffSide": "RIGHT", "path": "build.gradle.kts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjozNDoyOVrOGEM5Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMzozMjoyM1rOGENPog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1ODc3NA==", "bodyText": "@martinbonnin\nHow can it.name == \"apollo-gradle-plugin\" be true and it.name in arrayOf(\"publishDefaultPublicationToOjoRepository\", \"publishApolloGradlePluginPluginMarkerMavenPublicationToOjoRepository\") be true at the same time?\nThe content of that if branch looks incorrect as to what would be a intent that makes sense.", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r407058774", "createdAt": "2020-04-11T12:34:29Z", "author": {"login": "LouisCAD"}, "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  project.logger.log(LogLevel.LIFECYCLE, \"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    project.logger.log(LogLevel.LIFECYCLE, \"Deploying snapshot to OSS...\")\n+    dependsOn(subprojects.flatMap {\n+      tasks.matching {\n+        if (it.name == \"apollo-gradle-plugin\") {\n+          it.name in arrayOf(\"publishDefaultPublicationToOjoRepository\",\n+              \"publishApolloGradlePluginPluginMarkerMavenPublicationToOjoRepository\")\n+        } else {\n+          it.name == \"publishAllPublicationsToOjoRepository\"\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ccc82374cda3538ead51df1b0214f1b103da7e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2NDQ4Mg==", "bodyText": "Yup, that's a bug, the first it should be the project, the second it should be the task...\nWe have a very complicated bintray setup right now because we have 1 bintray package for each artifact, which doesn't really scale. I'm planning to streamling this for 2.0 and this code should actually disappear", "url": "https://github.com/apollographql/apollo-android/pull/2091#discussion_r407064482", "createdAt": "2020-04-11T13:32:23Z", "author": {"login": "martinbonnin"}, "path": "build.gradle.kts", "diffHunk": "@@ -300,4 +319,47 @@ fun PublicationContainer.setDefaultPomFields() {\n       }\n     }\n   }\n+}\n+\n+tasks.register(\"publishIfNeeded\") {\n+  val eventName = System.getenv(\"GITHUB_EVENT_NAME\")\n+  val ref = System.getenv(\"GITHUB_REF\")\n+  project.logger.log(LogLevel.LIFECYCLE, \"publishIfNeeded eventName=$eventName ref=$ref\")\n+\n+  if (eventName == \"push\" && ref == \"ref/heads/master\") {\n+    project.logger.log(LogLevel.LIFECYCLE, \"Deploying snapshot to OSS...\")\n+    dependsOn(subprojects.flatMap {\n+      tasks.matching {\n+        if (it.name == \"apollo-gradle-plugin\") {\n+          it.name in arrayOf(\"publishDefaultPublicationToOjoRepository\",\n+              \"publishApolloGradlePluginPluginMarkerMavenPublicationToOjoRepository\")\n+        } else {\n+          it.name == \"publishAllPublicationsToOjoRepository\"\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1ODc3NA=="}, "originalCommit": {"oid": "74ccc82374cda3538ead51df1b0214f1b103da7e"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}