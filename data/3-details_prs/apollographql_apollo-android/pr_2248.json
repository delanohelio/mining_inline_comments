{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODg5ODQ0", "number": 2248, "title": "Introduce GraphQL execution context", "bodyText": "Provide type safe container to customize and extend Response with additional context, such as providing access to raw OkHttp response.\nExample of getting access to the http response headers:\nval response: Response<Query> = ...\nval httpResponse: okhttp3.Response = response.executionContext[HttpExecutionContext.Key]?.response\nhttpResponse.headers\n\nCloses #2205", "createdAt": "2020-05-06T05:45:29Z", "url": "https://github.com/apollographql/apollo-android/pull/2248", "merged": true, "mergeCommit": {"oid": "0ec263f8289dd7ab52807664a2b3f518730ba1d5"}, "closed": true, "closedAt": "2020-05-08T04:09:40Z", "author": {"login": "sav007"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceiVwogBqjMzMDcwMDc0NjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfG-LmgFqTQwNzkyNzg3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b09aad8aefa9412474d24f022f0c2e17c3dce699", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/b09aad8aefa9412474d24f022f0c2e17c3dce699", "committedDate": "2020-05-06T05:44:59Z", "message": "Introduce GraphQL execution context\n\nProvide type safe container to customize and extend `Response` with additional context, such as providing access to raw OkHttp response.\n\nCloses https://github.com/apollographql/apollo-android/issues/2205"}, "afterCommit": {"oid": "3fc890a12d1d9fda666c311548f194babc272022", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/3fc890a12d1d9fda666c311548f194babc272022", "committedDate": "2020-05-06T06:04:04Z", "message": "Introduce GraphQL execution context\n\nProvide type safe container to customize and extend `Response` with additional context, such as providing access to raw OkHttp response.\n\nCloses https://github.com/apollographql/apollo-android/issues/2205"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73", "committedDate": "2020-05-06T06:07:30Z", "message": "Introduce GraphQL execution context\n\nProvide type safe container to customize and extend `Response` with additional context, such as providing access to raw OkHttp response.\n\nCloses https://github.com/apollographql/apollo-android/issues/2205"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fc890a12d1d9fda666c311548f194babc272022", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/3fc890a12d1d9fda666c311548f194babc272022", "committedDate": "2020-05-06T06:04:04Z", "message": "Introduce GraphQL execution context\n\nProvide type safe container to customize and extend `Response` with additional context, such as providing access to raw OkHttp response.\n\nCloses https://github.com/apollographql/apollo-android/issues/2205"}, "afterCommit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73", "committedDate": "2020-05-06T06:07:30Z", "message": "Introduce GraphQL execution context\n\nProvide type safe container to customize and extend `Response` with additional context, such as providing access to raw OkHttp response.\n\nCloses https://github.com/apollographql/apollo-android/issues/2205"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NzUyNjAw", "url": "https://github.com/apollographql/apollo-android/pull/2248#pullrequestreview-406752600", "createdAt": "2020-05-06T15:52:58Z", "commit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTo1Mjo1OFrOGRZxcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNTo1NTo1OVrOGRZ6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMTIzMw==", "bodyText": "This gives an UNCHECKED_CAST warning even though you're using as??", "url": "https://github.com/apollographql/apollo-android/pull/2248#discussion_r420901233", "createdAt": "2020-05-06T15:52:58Z", "author": {"login": "designatednerd"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ExecutionContext.kt", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.apollographql.apollo.api\n+\n+import com.apollographql.apollo.api.ExecutionContext.Element\n+import com.apollographql.apollo.api.ExecutionContext.Key\n+import kotlin.jvm.JvmField\n+\n+/**\n+ * A context of GraphQL operation execution, represented as a set of [Key] keys and corresponding [Element] values.\n+ */\n+class ExecutionContext private constructor(private val context: Map<Key<*>, Element>) {\n+\n+  /**\n+   * Returns the element with the given [key] from this context or `null`.\n+   */\n+  @Suppress(\"UNCHECKED_CAST\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMjU2Ng==", "bodyText": "Might be worth making this OkHttpExecutionContext to make it clearer it's tied to the specific okhttp implementation", "url": "https://github.com/apollographql/apollo-android/pull/2248#discussion_r420902566", "createdAt": "2020-05-06T15:54:48Z", "author": {"login": "designatednerd"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/http/HttpExecutionContext.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.apollographql.apollo.http;\n+\n+import com.apollographql.apollo.api.ExecutionContext;\n+import com.apollographql.apollo.api.internal.Utils;\n+import okhttp3.Response;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Http GraphQL execution context, provides access to the raw {@link okhttp3.Response} response.\n+ */\n+public class HttpExecutionContext implements ExecutionContext.Element {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkwMzQ4OA==", "bodyText": "Same thought of marking this as tied to okhttp", "url": "https://github.com/apollographql/apollo-android/pull/2248#discussion_r420903488", "createdAt": "2020-05-06T15:55:59Z", "author": {"login": "designatednerd"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/internal/util/HttpResponseUtils.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package com.apollographql.apollo.internal.util;\n+\n+import okhttp3.Response;\n+import org.jetbrains.annotations.NotNull;\n+\n+import static com.apollographql.apollo.api.internal.Utils.checkNotNull;\n+\n+public final class HttpResponseUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc731a24caa3e6a7ee7c6359ee25a5fef1fd4c73"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/8443a97790916dcbcf1d6784e2e9f000c05f57e2", "committedDate": "2020-05-06T22:03:14Z", "message": "Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MDcyNDIw", "url": "https://github.com/apollographql/apollo-android/pull/2248#pullrequestreview-407072420", "createdAt": "2020-05-07T00:20:42Z", "commit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMDoyMDo0MlrOGRp9uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMDoyMDo0MlrOGRp9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE2NjUyMA==", "bodyText": "What types of objects do we plan to put in the context?\nCoroutinesContext has Dispatcher, Job, Name, maybe more\nExecutionContext will have OkHttpExecutionContext and what else ? Do we plan to put dispatchers/executors down there too ?", "url": "https://github.com/apollographql/apollo-android/pull/2248#discussion_r421166520", "createdAt": "2020-05-07T00:20:42Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/internal/interceptor/ApolloParseInterceptor.java", "diffHunk": "@@ -81,12 +82,15 @@ public void interceptAsync(@NotNull final InterceptorRequest request, @NotNull A\n     String cacheKey = httpResponse.request().header(HttpCache.CACHE_KEY_HEADER);\n     if (httpResponse.isSuccessful()) {\n       try {\n-        OperationResponseParser parser = new OperationResponseParser(operation, responseFieldMapper, scalarTypeAdapters,\n-            normalizer);\n-        Response parsedResponse = parser.parse(httpResponse.body().source())\n+        final OperationResponseParser parser = new OperationResponseParser(operation, responseFieldMapper, scalarTypeAdapters, normalizer);\n+        final OkHttpExecutionContext httpExecutionContext = new OkHttpExecutionContext(httpResponse);\n+        Response parsedResponse = parser.parse(httpResponse.body().source());\n+        parsedResponse = parsedResponse\n             .toBuilder()\n             .fromCache(httpResponse.cacheResponse() != null)\n+            .executionContext(parsedResponse.getExecutionContext().set(OkHttpExecutionContext.KEY, httpExecutionContext))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODc4MTI4", "url": "https://github.com/apollographql/apollo-android/pull/2248#pullrequestreview-407878128", "createdAt": "2020-05-07T22:22:28Z", "commit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODc5OTc1", "url": "https://github.com/apollographql/apollo-android/pull/2248#pullrequestreview-407879975", "createdAt": "2020-05-07T22:26:42Z", "commit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjoyNjo0MlrOGSSeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjoyNjo0MlrOGSSeYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzMDI0Mg==", "bodyText": "Just a small thing. Since all modules has Kotlin dependency transitively, it is also added to runtime module. So it is ok to write this now with Kotlin.", "url": "https://github.com/apollographql/apollo-android/pull/2248#discussion_r421830242", "createdAt": "2020-05-07T22:26:42Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/http/OkHttpExecutionContext.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.apollographql.apollo.http;\n+\n+import com.apollographql.apollo.api.ExecutionContext;\n+import okhttp3.Response;\n+import org.jetbrains.annotations.NotNull;\n+\n+import static com.apollographql.apollo.api.internal.Utils.checkNotNull;\n+\n+/**\n+ * Http GraphQL execution context, provides access to the raw {@link okhttp3.Response} response.\n+ */\n+public class OkHttpExecutionContext implements ExecutionContext.Element {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8443a97790916dcbcf1d6784e2e9f000c05f57e2"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "625c05c8720cc7d6fc35eb4e1c84773c1b776660", "author": {"user": {"login": "sav007", "name": "Ivan Savytskyi"}}, "url": "https://github.com/apollographql/apollo-android/commit/625c05c8720cc7d6fc35eb4e1c84773c1b776660", "committedDate": "2020-05-08T00:43:13Z", "message": "Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTI3ODcy", "url": "https://github.com/apollographql/apollo-android/pull/2248#pullrequestreview-407927872", "createdAt": "2020-05-08T00:45:05Z", "commit": {"oid": "625c05c8720cc7d6fc35eb4e1c84773c1b776660"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3775, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}