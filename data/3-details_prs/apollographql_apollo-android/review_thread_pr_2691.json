{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTQ3OTY3", "number": 2691, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjo0MlrOExViSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjo0MlrOExViSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTY4NTIyOnYy", "diffSide": "RIGHT", "path": "apollo-runtime-kotlin/src/iosMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjo0MlrOHna4Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxMDozNzo1OVrOHn4Q7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5Njg1NQ==", "bodyText": "Is this something we can test?", "url": "https://github.com/apollographql/apollo-android/pull/2691#discussion_r511096855", "createdAt": "2020-10-23T19:16:42Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime-kotlin/src/iosMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -152,6 +152,7 @@ actual class ApolloHttpNetworkTransport(\n       val postBody = operation.composeRequestBody(scalarTypeAdapters).toByteArray().toNSData()\n       setHTTPMethod(\"POST\")\n       headers\n+          .plus(\"Content-Type\" to \"application/json; charset=utf-8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a45067ebf242520399adb8a29109b75e4860c5c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxOTA1Mw==", "bodyText": "I must admit I'm a bit lazy to add a test there. The only thing I can think of is to use a mock server and check the headers but that feels like a lot of code for something that most likely won't be changing too much?", "url": "https://github.com/apollographql/apollo-android/pull/2691#discussion_r511519053", "createdAt": "2020-10-24T22:02:20Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime-kotlin/src/iosMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -152,6 +152,7 @@ actual class ApolloHttpNetworkTransport(\n       val postBody = operation.composeRequestBody(scalarTypeAdapters).toByteArray().toNSData()\n       setHTTPMethod(\"POST\")\n       headers\n+          .plus(\"Content-Type\" to \"application/json; charset=utf-8\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5Njg1NQ=="}, "originalCommit": {"oid": "6a45067ebf242520399adb8a29109b75e4860c5c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3ODM0OQ==", "bodyText": "\ud83d\udc4c", "url": "https://github.com/apollographql/apollo-android/pull/2691#discussion_r511578349", "createdAt": "2020-10-25T10:37:59Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime-kotlin/src/iosMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -152,6 +152,7 @@ actual class ApolloHttpNetworkTransport(\n       val postBody = operation.composeRequestBody(scalarTypeAdapters).toByteArray().toNSData()\n       setHTTPMethod(\"POST\")\n       headers\n+          .plus(\"Content-Type\" to \"application/json; charset=utf-8\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5Njg1NQ=="}, "originalCommit": {"oid": "6a45067ebf242520399adb8a29109b75e4860c5c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2964, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}