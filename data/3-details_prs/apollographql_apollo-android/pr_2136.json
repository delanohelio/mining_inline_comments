{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4ODM3MDc2", "number": 2136, "title": "Kotlin Multiplatform Sample", "bodyText": "Added multiplatform sample where it has 3 folders:\n\nkmp-ios-app\nkmp-android-app\nkmp-lib-sample\n\nName suggestions for modules are welcome \ud83d\ude04\nConsiderations\n\n\nI had the problem described here. It looks like targeting 1.8 for all is safer. Android tools are handling everything for a long time now. https://stackoverflow.com/questions/48988778/cannot-inline-bytecode-built-with-jvm-target-1-8-into-bytecode-that-is-being-bui/56996020#56996020\n\n\nThe implementations on ResponseReader gave me an AbstractMethodError crash. Looks like the issue is resolved in Kotlin 1.4. This is because the implementation was in Java. Converting the implementation to Kotlin fixed it. https://youtrack.jetbrains.com/issue/KT-18489\n\n\niOS app only logs into console for now. Next step will be to implement actual application.\n\n\nXCode Console Screenshot", "createdAt": "2020-04-05T00:40:53Z", "url": "https://github.com/apollographql/apollo-android/pull/2136", "merged": true, "mergeCommit": {"oid": "5ab78408f0951c7619563b8143106b0ee6895a42"}, "closed": true, "closedAt": "2020-04-05T15:01:44Z", "author": {"login": "tasomaniac"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUduY4gH2gAyMzk4ODM3MDc2OjNhMjJiM2RmODc2MGI2MWI3OTg2ODk4M2IxM2Q1NmEwMmQ3NTc4NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUqweuAH2gAyMzk4ODM3MDc2OjdmOTBhYzY3MzMwYzkxN2ZkOWNlY2FkNDU2NzRiMGM5YWExNTQzZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3a22b3df8760b61b79868983b13d56a02d757864", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/3a22b3df8760b61b79868983b13d56a02d757864", "committedDate": "2020-04-04T23:02:29Z", "message": "Add sample for Kotlin MPP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d6f752aebf7bdad8857d952508b0d2fda68d458", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/6d6f752aebf7bdad8857d952508b0d2fda68d458", "committedDate": "2020-04-04T23:02:38Z", "message": "Rename .java to .kt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/0dd61cd6fa869b581c5c3c50740b7a500656de52", "committedDate": "2020-04-04T23:02:38Z", "message": "Convert RealResponseReader to Kotlin to workaround AbstractMethodError issues\n\nhttps://youtrack.jetbrains.com/issue/KT-18489"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772", "committedDate": "2020-04-05T00:34:50Z", "message": "Add iOS sample just printing into console for now"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk2ODg3", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387796887", "createdAt": "2020-04-05T09:07:54Z", "commit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowNzo1NVrOGA-Mcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowNzo1NVrOGA-Mcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MjE3OA==", "bodyText": "Not sure I follow. Why removing that/Why did we need that in the first place ?", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403672178", "createdAt": "2020-04-05T09:07:55Z", "author": {"login": "martinbonnin"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/internal/ResponseReader.kt", "diffHunk": "@@ -21,7 +20,6 @@ interface ResponseReader {\n \n   fun <T : Any> readObject(field: ResponseField, objectReader: ObjectReader<T>): T?\n \n-  @JvmSynthetic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk2OTU0", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387796954", "createdAt": "2020-04-05T09:08:42Z", "commit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowODo0MlrOGA-M1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowODo0MlrOGA-M1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MjI3Nw==", "bodyText": "So we don't need the jetbrainsAnnotations at compileTime anymore ?", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403672277", "createdAt": "2020-04-05T09:08:42Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime/build.gradle.kts", "diffHunk": "@@ -1,13 +1,14 @@\n plugins {\n   `java-library`\n+  kotlin(\"jvm\")\n }\n \n dependencies {\n-  add(\"api\", project(\":apollo-api\")) // apollo-espresso-support uses some apollo-api internals\n-  add(\"api\", project(\":apollo-http-cache-api\"))\n-  add(\"api\", groovy.util.Eval.x(project, \"x.dep.okHttp.okHttp\"))\n-  add(\"compileOnly\", groovy.util.Eval.x(project, \"x.dep.jetbrainsAnnotations\"))\n-  add(\"implementation\", groovy.util.Eval.x(project, \"x.dep.cache\"))\n+  api(project(\":apollo-api\"))\n+  api(project(\":apollo-http-cache-api\"))\n+  api(groovy.util.Eval.x(project, \"x.dep.kotlin.stdLib\"))\n+  api(groovy.util.Eval.x(project, \"x.dep.okHttp.okHttp\"))\n+  implementation(groovy.util.Eval.x(project, \"x.dep.cache\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk2OTg2", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387796986", "createdAt": "2020-04-05T09:08:56Z", "commit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowODo1NlrOGA-NAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOTowODo1NlrOGA-NAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MjMyMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403672321", "createdAt": "2020-04-05T09:08:56Z", "author": {"login": "martinbonnin"}, "path": "gradle/dependencies.gradle", "diffHunk": "@@ -1,6 +1,6 @@\n def versions = [\n     minAndroidPlugin      : '3.4.2',\n-    androidPlugin         : '3.6.1',\n+    androidPlugin         : '3.6.2',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd61cd6fa869b581c5c3c50740b7a500656de52"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk3MTgw", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387797180", "createdAt": "2020-04-05T09:10:44Z", "commit": {"oid": "3a22b3df8760b61b79868983b13d56a02d757864"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxMDo0NVrOGA-N2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxMDo0NVrOGA-N2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MjUzOQ==", "bodyText": "Maybe put this in apollo-android/build.gradle.kts next to the others ? \n  \n    \n      apollo-android/build.gradle.kts\n    \n    \n         Line 57\n      in\n      3e37125\n    \n    \n    \n    \n\n        \n          \n           plugins.withType(com.android.build.gradle.BasePlugin::class.java) {", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403672539", "createdAt": "2020-04-05T09:10:45Z", "author": {"login": "martinbonnin"}, "path": "apollo-api/build.gradle.kts", "diffHunk": "@@ -58,6 +60,10 @@ kotlin {\n   }\n }\n \n+tasks.withType<KotlinCompile> {\n+  kotlinOptions.jvmTarget = \"1.8\"\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a22b3df8760b61b79868983b13d56a02d757864"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk3Mzgz", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387797383", "createdAt": "2020-04-05T09:13:27Z", "commit": {"oid": "3a22b3df8760b61b79868983b13d56a02d757864"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxMzoyN1rOGA-O0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxMzoyN1rOGA-O0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3Mjc4NQ==", "bodyText": "No plugin marker for the kotlin-android-extensions plugin I guess ?\nAlso, I'd like to remove this to use ViewBinding instead at some point but definitely not the priority.", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403672785", "createdAt": "2020-04-05T09:13:27Z", "author": {"login": "martinbonnin"}, "path": "samples/multiplatform/kmp-android-app/build.gradle.kts", "diffHunk": "@@ -0,0 +1,52 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+    id(\"com.android.application\")\n+    id(\"org.jetbrains.kotlin.multiplatform\")\n+}\n+apply(plugin = \"kotlin-android-extensions\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a22b3df8760b61b79868983b13d56a02d757864"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk3NTgz", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387797583", "createdAt": "2020-04-05T09:15:40Z", "commit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxNTo0MFrOGA-P5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxNTo0MFrOGA-P5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MzA2MA==", "bodyText": "Do we actually need the multiplatform plugin here ? This module will always be just Android, right ?", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403673060", "createdAt": "2020-04-05T09:15:40Z", "author": {"login": "martinbonnin"}, "path": "samples/multiplatform/kmp-android-app/build.gradle.kts", "diffHunk": "@@ -0,0 +1,52 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+    id(\"com.android.application\")\n+    id(\"org.jetbrains.kotlin.multiplatform\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk3OTI0", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387797924", "createdAt": "2020-04-05T09:19:13Z", "commit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxOToxM1rOGA-Rjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToxOToxM1rOGA-Rjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3MzQ4Nw==", "bodyText": "It would be nice to move the ApolloCoroutinesService class to the multiplatform lib module since it is common logic between android/ios.", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403673487", "createdAt": "2020-04-05T09:19:13Z", "author": {"login": "martinbonnin"}, "path": "samples/multiplatform/kmp-android-app/src/main/kotlin/com/apollographql/apollo/kmpsample/data/ApolloCoroutinesService.kt", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.apollographql.apollo.kmpsample.data\n+\n+import com.apollographql.apollo.ApolloClient\n+import com.apollographql.apollo.api.Response\n+import com.apollographql.apollo.coroutines.toDeferred\n+import com.apollographql.apollo.kmpsample.fragment.RepositoryFragment\n+import com.apollographql.apollo.kmpsample.GithubRepositoriesQuery\n+import com.apollographql.apollo.kmpsample.GithubRepositoryCommitsQuery\n+import com.apollographql.apollo.kmpsample.GithubRepositoryDetailQuery\n+import com.apollographql.apollo.kmpsample.fragment.RepositoryDetail\n+import com.apollographql.apollo.kmpsample.type.OrderDirection\n+import com.apollographql.apollo.kmpsample.type.PullRequestState\n+import com.apollographql.apollo.kmpsample.type.RepositoryOrderField\n+import kotlinx.coroutines.invoke\n+\n+/**\n+ * An implementation of a [GitHubDataSource] that shows how we can use coroutines to make our apollo requests.\n+ */\n+class ApolloCoroutinesService(private val apolloClient: ApolloClient) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk4MzU0", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387798354", "createdAt": "2020-04-05T09:24:05Z", "commit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToyNDowNVrOGA-TwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToyNDowNVrOGA-TwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3NDA0OA==", "bodyText": "What about adding fun Query.toJson(): String to factor this code ?", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403674048", "createdAt": "2020-04-05T09:24:05Z", "author": {"login": "martinbonnin"}, "path": "samples/multiplatform/kmp-ios-app/kmp-ios-app/SceneDelegate.swift", "diffHunk": "@@ -0,0 +1,111 @@\n+//\n+//  SceneDelegate.swift\n+//  kmp-ios-app\n+//\n+//  Created by Taso Dane on 4/5/20.\n+//\n+\n+import UIKit\n+import SwiftUI\n+import kmp_lib_sample\n+\n+class SceneDelegate: UIResponder, UIWindowSceneDelegate {\n+\n+    var window: UIWindow?\n+\n+\n+    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n+        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n+        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n+        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n+        let query = GithubRepositoriesQuery(\n+            repositoriesCount: 50,\n+            orderBy: RepositoryOrderField.updatedAt,\n+            orderDirection: OrderDirection.desc\n+        )\n+        let requestPayload = \"{\" +\n+        \"\\\"operationName\\\": \\\"\" + query.name().name() + \"\\\", \" +\n+        \"\\\"query\\\": \\\"\" + query.queryDocument() + \"\\\", \" +\n+        \"\\\"variables\\\": \" + query.variables().marshal() +\n+        \"}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzk4NzA0", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387798704", "createdAt": "2020-04-05T09:28:36Z", "commit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToyODozNlrOGA-Vjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwOToyODozNlrOGA-Vjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY3NDUxMQ==", "bodyText": "\ud83d\ude4c \ud83d\ude03", "url": "https://github.com/apollographql/apollo-android/pull/2136#discussion_r403674511", "createdAt": "2020-04-05T09:28:36Z", "author": {"login": "martinbonnin"}, "path": "samples/multiplatform/kmp-ios-app/kmp-ios-app/SceneDelegate.swift", "diffHunk": "@@ -0,0 +1,111 @@\n+//\n+//  SceneDelegate.swift\n+//  kmp-ios-app\n+//\n+//  Created by Taso Dane on 4/5/20.\n+//\n+\n+import UIKit\n+import SwiftUI\n+import kmp_lib_sample\n+\n+class SceneDelegate: UIResponder, UIWindowSceneDelegate {\n+\n+    var window: UIWindow?\n+\n+\n+    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {\n+        // Use this method to optionally configure and attach the UIWindow `window` to the provided UIWindowScene `scene`.\n+        // If using a storyboard, the `window` property will automatically be initialized and attached to the scene.\n+        // This delegate does not imply the connecting scene or session are new (see `application:configurationForConnectingSceneSession` instead).\n+        let query = GithubRepositoriesQuery(\n+            repositoriesCount: 50,\n+            orderBy: RepositoryOrderField.updatedAt,\n+            orderDirection: OrderDirection.desc\n+        )\n+        let requestPayload = \"{\" +\n+        \"\\\"operationName\\\": \\\"\" + query.name().name() + \"\\\", \" +\n+        \"\\\"query\\\": \\\"\" + query.queryDocument() + \"\\\", \" +\n+        \"\\\"variables\\\": \" + query.variables().marshal() +\n+        \"}\"\n+        print(requestPayload)\n+        \n+        let url = URL(string: \"https://api.github.com/graphql\")!\n+        var request = URLRequest(url: url)\n+        request.httpMethod = \"POST\"\n+        request.setValue(\"application/json\", forHTTPHeaderField: \"Accept\")\n+        request.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n+        request.setValue(query.operationId(), forHTTPHeaderField: \"X-APOLLO-OPERATION-ID\")\n+        request.setValue(query.name().name(), forHTTPHeaderField: \"X-APOLLO-OPERATION-NAME\")\n+        request.setValue(\"bearer 230a8a1fcf3b2d318b7640b4b394d469d8783970\", forHTTPHeaderField: \"Authorization\")\n+\n+        request.httpBody = requestPayload.data(using: String.Encoding.utf8)\n+        \n+        let task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n+            // Check for Error\n+            if let error = error {\n+                print(\"Error took place \\(error)\")\n+                return\n+            }\n+     \n+            // Convert HTTP Response Data to a String\n+            if let data = data, let dataString = String(data: data, encoding: .utf8) {\n+                query.parse(source: OkioBuffer())\n+                print(\"Response data string:\\n\" + (dataString.data(using: .utf8)!.prettyPrintedJSONString! as String))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd5ffde1dce0eda6ca3a86bd32b2af2cccc6772"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddfdc9ffbdf5ad1a0953f58c8af97a2c97acb067", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/ddfdc9ffbdf5ad1a0953f58c8af97a2c97acb067", "committedDate": "2020-04-05T09:33:17Z", "message": "add Travis again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "642346103b00bb5e7daceba0895bd65df61dc182", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/642346103b00bb5e7daceba0895bd65df61dc182", "committedDate": "2020-04-05T10:33:33Z", "message": "Move Kotlin jvmTarget to root level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb7a96b5e4c09ef8fcf0cd0dc9d0da13db54cc5", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/5cb7a96b5e4c09ef8fcf0cd0dc9d0da13db54cc5", "committedDate": "2020-04-05T10:54:49Z", "message": "Also set jvmTarget in kotlin compile testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33f2d280c22378d89c6d48fbd2d666daab9e5b8e", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/33f2d280c22378d89c6d48fbd2d666daab9e5b8e", "committedDate": "2020-04-05T10:55:17Z", "message": "Set jvmargs with 2G memory limit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cb048ceaa38c5164bf8cd946160d6f4a7457b60", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/3cb048ceaa38c5164bf8cd946160d6f4a7457b60", "committedDate": "2020-04-05T11:09:59Z", "message": "Use ViewBinding in sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ba3009a58ce3d48dfea6ba14891efd493c484c", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/11ba3009a58ce3d48dfea6ba14891efd493c484c", "committedDate": "2020-04-05T11:19:22Z", "message": "Add jvmTarget also to the plugin tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "105f55c2e9517d64d6547d74e3038c47f0092028", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/105f55c2e9517d64d6547d74e3038c47f0092028", "committedDate": "2020-04-05T12:15:01Z", "message": "Migrate to AndroidX"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODIyODU0", "url": "https://github.com/apollographql/apollo-android/pull/2136#pullrequestreview-387822854", "createdAt": "2020-04-05T14:08:05Z", "commit": {"oid": "105f55c2e9517d64d6547d74e3038c47f0092028"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f90ac67330c917fd9cecad45674b0c9aa1543e1", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/7f90ac67330c917fd9cecad45674b0c9aa1543e1", "committedDate": "2020-04-05T14:13:32Z", "message": "Delete Travis file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3920, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}