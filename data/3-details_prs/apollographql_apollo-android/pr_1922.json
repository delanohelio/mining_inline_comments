{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MzA5MTE4", "number": 1922, "title": "toJson kotlin extension", "bodyText": "Add toJson Kotlin extension for Kotlin users. I didn't go for serialize since as an extension, that is not super clear. data.toJson looks nicer.\nDoc updates:\n\nAdd documentation about the new OperationDataJsonSerializer.\nSplit no-runtime doc into multiple sections.\nAlso add new Kotlin extension in\nthere", "createdAt": "2020-01-21T13:37:21Z", "url": "https://github.com/apollographql/apollo-android/pull/1922", "merged": true, "mergeCommit": {"oid": "5eb1fa42be9af0437eb9ab43fe6c1a53aa6ecaab"}, "closed": true, "closedAt": "2020-01-23T21:37:10Z", "author": {"login": "tasomaniac"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8hBhhgH2gAyMzY1MzA5MTE4OjJkNDYyMTFjMDVhZGU2ZDY3OTRlYjJjZGU4Y2Y4M2EzMmNkODUyYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8wTkQAH2gAyMzY1MzA5MTE4OjI1NWY5YzM5YjQzODc1MjE3MDA3NTBiOTU5YmIwOTg0OTQ5NWE2Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2d46211c05ade6d6794eb2cde8cf83a32cd852ad", "author": {"user": null}, "url": "https://github.com/apollographql/apollo-android/commit/2d46211c05ade6d6794eb2cde8cf83a32cd852ad", "committedDate": "2020-01-21T13:18:55Z", "message": "Add toJson kotlin extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf", "author": {"user": null}, "url": "https://github.com/apollographql/apollo-android/commit/15719f84fc24a80b8e411ccd116a64fdf34d1adf", "committedDate": "2020-01-21T13:34:58Z", "message": "Add Kotlin extension toJson and also add documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODgwODA0", "url": "https://github.com/apollographql/apollo-android/pull/1922#pullrequestreview-345880804", "createdAt": "2020-01-21T13:38:12Z", "commit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzozODoxMlrOFf6OBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzozODoxMlrOFf6OBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNDAzOQ==", "bodyText": "I thought operation here would be more correct. Query was referring to a generated type, right?", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369004039", "createdAt": "2020-01-21T13:38:12Z", "author": {"login": "tasomaniac"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -10,13 +10,15 @@ For this, remove the `com.apollographql.apollo:apollo-runtime`dependency and rep\n   implementation(\"com.apollographql.apollo:apollo-api:x.y.z\")\n ```\n \n+## Parsing HTTP body\n+\n All `Operation` instances provide an API to parse `Response` from raw `okio.BufferedSource` source that represents http response body returned by the GraphQL server.\n If for some reason you want to use your own network layer and don't want to use fully featured `ApolloClient` provided by `apollo-runtime` you can use this API:\n \n ```java\n     okhttp3.Response httpResponse = ...;\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source());\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDQyMTU5", "url": "https://github.com/apollographql/apollo-android/pull/1922#pullrequestreview-346042159", "createdAt": "2020-01-21T17:03:56Z", "commit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMzo1NlrOFgBwiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMzo1NlrOFgBwiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNzU2Mw==", "bodyText": "Does that belong to the no-runtime doc ? I think the original use case was for testing with a mock server. Not sure where to put it though... \ud83d\ude05", "url": "https://github.com/apollographql/apollo-android/pull/1922#discussion_r369127563", "createdAt": "2020-01-21T17:03:56Z", "author": {"login": "martinbonnin"}, "path": "docs/source/advanced/no-runtime.md", "diffHunk": "@@ -26,9 +28,31 @@ If you do have custom GraphQL scalar types, pass properly configured instance of\n \n     ScalarTypeAdapters scalarTypeAdapters = new ScalarTypeAdapters(<provide your custom scalar type adapters>);\n \n-    Response<Query.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+    Response<Operation.Data> response = new Query().parse(httpResponse.body().source(), scalarTypeAdapters);\n+```\n+\n+## Converting Query.Data back to JSON", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDQzMDEw", "url": "https://github.com/apollographql/apollo-android/pull/1922#pullrequestreview-346043010", "createdAt": "2020-01-21T17:05:11Z", "commit": {"oid": "15719f84fc24a80b8e411ccd116a64fdf34d1adf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "255f9c39b4387521700750b959bb09849495a669", "author": {"user": {"login": "tasomaniac", "name": "Said Tahsin Dane"}}, "url": "https://github.com/apollographql/apollo-android/commit/255f9c39b4387521700750b959bb09849495a669", "committedDate": "2020-01-22T07:07:12Z", "message": "Also add the annotation to the other extension file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4009, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}