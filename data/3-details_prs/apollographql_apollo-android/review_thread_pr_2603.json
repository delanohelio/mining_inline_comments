{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxODQyOTIy", "number": 2603, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjowMTo0N1rOEmzEcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjowMTo0N1rOEmzEcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTE4MDY0OnYy", "diffSide": "RIGHT", "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClientAwarenessInterceptor.kt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjowMTo0N1rOHXChGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjoxNjozM1rOHXC3jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMDUzNw==", "bodyText": "If we have Context somehow, Context.packageName is the client name I guess. It is the same as Build config.APLICATION_ID.\nWe can then use the same packageName to retrieve the version from packageManager.\nGot this from here\ntry {\n    PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n    String version = pInfo.versionName;\n} catch (PackageManager.NameNotFoundException e) {\n    e.printStackTrace();\n}", "url": "https://github.com/apollographql/apollo-android/pull/2603#discussion_r493920537", "createdAt": "2020-09-23T22:01:47Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClientAwarenessInterceptor.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.apollographql.apollo\n+\n+import okhttp3.Interceptor\n+import okhttp3.Response\n+\n+/**\n+ * An [Interceptor] to add [Client Awareness](https://www.apollographql.com/docs/studio/client-awareness/).\n+ *\n+ * Add this interceptor to your [okhttp3.OkHttpClient] instance when creating your [ApolloClient]\n+ */\n+class ApolloClientAwarenessInterceptor(val clientName: String, val clientVersion: String): Interceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMTQ4NQ==", "bodyText": "Can we not put this via android-support module? Or something like this so that we access Context.\nOr I had the idea to use AndroidX startup library to retrieve the Application context and store it statically. It's pretty safe because there is only 1 application Context.", "url": "https://github.com/apollographql/apollo-android/pull/2603#discussion_r493921485", "createdAt": "2020-09-23T22:04:10Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClientAwarenessInterceptor.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.apollographql.apollo\n+\n+import okhttp3.Interceptor\n+import okhttp3.Response\n+\n+/**\n+ * An [Interceptor] to add [Client Awareness](https://www.apollographql.com/docs/studio/client-awareness/).\n+ *\n+ * Add this interceptor to your [okhttp3.OkHttpClient] instance when creating your [ApolloClient]\n+ */\n+class ApolloClientAwarenessInterceptor(val clientName: String, val clientVersion: String): Interceptor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMDUzNw=="}, "originalCommit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyNjI4Ng==", "bodyText": "Can we not put this via android-support module?\n\nThat would require adding a new dependency in build.gradle[.kts], not sure this is easier than adding an interceptor. I suspect it's a common usage to have an interceptor already setup for authentication so adding the ApolloClientAwerenessInterceptor should be a single line in that case.\nAlso the functionnality should be available for non-Android users as well, which would mean splitting it between apollo-android-support (for default Android values) and apollo-runtime (for the general case). All in all it felt like a lot of hassle for something that's easy to explain with a bit of documentation.", "url": "https://github.com/apollographql/apollo-android/pull/2603#discussion_r493926286", "createdAt": "2020-09-23T22:16:33Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClientAwarenessInterceptor.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.apollographql.apollo\n+\n+import okhttp3.Interceptor\n+import okhttp3.Response\n+\n+/**\n+ * An [Interceptor] to add [Client Awareness](https://www.apollographql.com/docs/studio/client-awareness/).\n+ *\n+ * Add this interceptor to your [okhttp3.OkHttpClient] instance when creating your [ApolloClient]\n+ */\n+class ApolloClientAwarenessInterceptor(val clientName: String, val clientVersion: String): Interceptor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMDUzNw=="}, "originalCommit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3048, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}