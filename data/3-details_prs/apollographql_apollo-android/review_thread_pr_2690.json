{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTQ0OTQx", "number": 2690, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTowMDowNFrOExl-8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTowMDowNFrOExl-8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDM4MDAyOnYy", "diffSide": "RIGHT", "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQyMTowMDowNFrOHn0U4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODo1NjozM1rOHsRr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxMzgyNg==", "bodyText": "should we have 2 timeouts for connection and reading, looks like NSURLsession allows to set both:\nhttps://developer.apple.com/documentation/foundation/nsmutableurlrequest/1414063-timeoutinterval?language=objc\nhttps://developer.apple.com/documentation/foundation/nsurlsessionconfiguration/1408259-timeoutintervalforrequest?language=objc", "url": "https://github.com/apollographql/apollo-android/pull/2690#discussion_r511513826", "createdAt": "2020-10-24T21:00:04Z", "author": {"login": "sav007"}, "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -8,5 +8,12 @@ import com.apollographql.apollo.network.NetworkTransport\n expect class ApolloHttpNetworkTransport constructor(\n     serverUrl: String,\n     headers: Map<String, String>,\n-    httpMethod: HttpMethod = HttpMethod.Post\n+    httpMethod: HttpMethod = HttpMethod.Post,\n+    /**\n+     * The timeout interval to use when waiting for additional data.\n+     *\n+     * - on iOS, it is used to set NSMutableURLRequest.timeoutInterval\n+     * - on Android, it is used to set both readTimeout and connectTimeout\n+     */\n+    timeoutMillis: Long = 30_000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8f5f6f6f090b2354bc0a58d6b961b3c01caa245"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxNzM4NA==", "bodyText": "\ud83d\udc4d I missed timeoutIntervalForRequest, will add that", "url": "https://github.com/apollographql/apollo-android/pull/2690#discussion_r511517384", "createdAt": "2020-10-24T21:42:52Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -8,5 +8,12 @@ import com.apollographql.apollo.network.NetworkTransport\n expect class ApolloHttpNetworkTransport constructor(\n     serverUrl: String,\n     headers: Map<String, String>,\n-    httpMethod: HttpMethod = HttpMethod.Post\n+    httpMethod: HttpMethod = HttpMethod.Post,\n+    /**\n+     * The timeout interval to use when waiting for additional data.\n+     *\n+     * - on iOS, it is used to set NSMutableURLRequest.timeoutInterval\n+     * - on Android, it is used to set both readTimeout and connectTimeout\n+     */\n+    timeoutMillis: Long = 30_000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxMzgyNg=="}, "originalCommit": {"oid": "c8f5f6f6f090b2354bc0a58d6b961b3c01caa245"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxODQzMQ==", "bodyText": "Mmm, timeoutInterval is on NSMutableUrlRequest but timeoutIntervalForRequest is for NSUrlSession. I'm not sure we can have both at the same time?", "url": "https://github.com/apollographql/apollo-android/pull/2690#discussion_r511518431", "createdAt": "2020-10-24T21:54:30Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -8,5 +8,12 @@ import com.apollographql.apollo.network.NetworkTransport\n expect class ApolloHttpNetworkTransport constructor(\n     serverUrl: String,\n     headers: Map<String, String>,\n-    httpMethod: HttpMethod = HttpMethod.Post\n+    httpMethod: HttpMethod = HttpMethod.Post,\n+    /**\n+     * The timeout interval to use when waiting for additional data.\n+     *\n+     * - on iOS, it is used to set NSMutableURLRequest.timeoutInterval\n+     * - on Android, it is used to set both readTimeout and connectTimeout\n+     */\n+    timeoutMillis: Long = 30_000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxMzgyNg=="}, "originalCommit": {"oid": "c8f5f6f6f090b2354bc0a58d6b961b3c01caa245"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE3MjM1Nw==", "bodyText": "Looks like we can! I just pushed a few changes", "url": "https://github.com/apollographql/apollo-android/pull/2690#discussion_r516172357", "createdAt": "2020-11-02T18:25:02Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -8,5 +8,12 @@ import com.apollographql.apollo.network.NetworkTransport\n expect class ApolloHttpNetworkTransport constructor(\n     serverUrl: String,\n     headers: Map<String, String>,\n-    httpMethod: HttpMethod = HttpMethod.Post\n+    httpMethod: HttpMethod = HttpMethod.Post,\n+    /**\n+     * The timeout interval to use when waiting for additional data.\n+     *\n+     * - on iOS, it is used to set NSMutableURLRequest.timeoutInterval\n+     * - on Android, it is used to set both readTimeout and connectTimeout\n+     */\n+    timeoutMillis: Long = 30_000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxMzgyNg=="}, "originalCommit": {"oid": "c8f5f6f6f090b2354bc0a58d6b961b3c01caa245"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE4OTE1Nw==", "bodyText": "i'm not 100% sure the relation between timeoutInterval and timeoutIntervalForRequest. It might make sense to map everything to the same timeout on iOS. But on the other hand, having both is more flexible in terms of API so we can certainly keep it as it is, even if there's a small chance the concept do not map 1:1", "url": "https://github.com/apollographql/apollo-android/pull/2690#discussion_r516189157", "createdAt": "2020-11-02T18:56:33Z", "author": {"login": "martinbonnin"}, "path": "apollo-runtime-kotlin/src/commonMain/kotlin/com/apollographql/apollo/network/http/ApolloHttpNetworkTransport.kt", "diffHunk": "@@ -8,5 +8,12 @@ import com.apollographql.apollo.network.NetworkTransport\n expect class ApolloHttpNetworkTransport constructor(\n     serverUrl: String,\n     headers: Map<String, String>,\n-    httpMethod: HttpMethod = HttpMethod.Post\n+    httpMethod: HttpMethod = HttpMethod.Post,\n+    /**\n+     * The timeout interval to use when waiting for additional data.\n+     *\n+     * - on iOS, it is used to set NSMutableURLRequest.timeoutInterval\n+     * - on Android, it is used to set both readTimeout and connectTimeout\n+     */\n+    timeoutMillis: Long = 30_000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUxMzgyNg=="}, "originalCommit": {"oid": "c8f5f6f6f090b2354bc0a58d6b961b3c01caa245"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}