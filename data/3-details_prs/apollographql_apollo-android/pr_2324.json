{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTEyMDAw", "number": 2324, "title": "[Doc] use Kotlin in README.md and other updates", "bodyText": "Simplify README.md:\n\nsample code is now Kotlin\nsimplify the schema download doc (see #2321)\nuse the plugins {} block now that the plugin has a plugin Marker and is available from the gradle portal\nupdate index.mdx, which was pretty obsolete\nother small fixes", "createdAt": "2020-06-01T17:18:16Z", "url": "https://github.com/apollographql/apollo-android/pull/2324", "merged": true, "mergeCommit": {"oid": "d748daf3a2decf58778d57c4bea77b9dfeef67e0"}, "closed": true, "closedAt": "2020-06-02T18:02:15Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnDVOxAH2gAyNDI2MTEyMDAwOmI2MTg5N2U0MzU2ZjhiYTM2MWY3ZTkxYzgxOTliZmUwMzRiZmE2ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnYs97AH2gAyNDI2MTEyMDAwOmM1NjhjMDJjMjk3MTg0NTg5NzdhMGJmNTcxYzM0ZWVlNTc1M2U2OTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/b61897e4356f8ba361f7e91c8199bfe034bfa6f0", "committedDate": "2020-06-01T17:02:02Z", "message": "update docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDQyMDAw", "url": "https://github.com/apollographql/apollo-android/pull/2324#pullrequestreview-422042000", "createdAt": "2020-06-01T17:32:52Z", "commit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozMjo1MlrOGdTjNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzozODo1MVrOGdTvhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MjE5OQ==", "bodyText": "I don't think it needs to be app. What about \"In your Gradle module's build.gradle(.kts) file\"", "url": "https://github.com/apollographql/apollo-android/pull/2324#discussion_r433382199", "createdAt": "2020-06-01T17:32:52Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -25,122 +25,95 @@ Apollo-android features:\n \n The latest Gradle plugin version is [ ![Download](https://api.bintray.com/packages/apollographql/android/apollo/images/download.svg) ](https://bintray.com/apollographql/android/apollo-gradle-plugin/_latestVersion)\n \n-To use this plugin, add the dependency to your project's root build.gradle file:\n+In your app Gradle file, apply the `com.apollographql.apollo` plugin and add the Apollo dependencies:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4MzI3NQ==", "bodyText": "Similar to these, what about adding the api too? We can have a comment like:\n// optional: if you do not want to depend on runtime, add apollo-api for generated code.\n\nIt would be really good for awareness", "url": "https://github.com/apollographql/apollo-android/pull/2324#discussion_r433383275", "createdAt": "2020-06-01T17:34:54Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -25,122 +25,95 @@ Apollo-android features:\n \n The latest Gradle plugin version is [ ![Download](https://api.bintray.com/packages/apollographql/android/apollo/images/download.svg) ](https://bintray.com/apollographql/android/apollo-gradle-plugin/_latestVersion)\n \n-To use this plugin, add the dependency to your project's root build.gradle file:\n+In your app Gradle file, apply the `com.apollographql.apollo` plugin and add the Apollo dependencies:\n \n ```groovy\n-buildscript {\n-  repositories {\n-    jcenter()\n-  }\n-  dependencies {\n-    classpath(\"com.apollographql.apollo:apollo-gradle-plugin:x.y.z\")\n-  }\n+// app/build.gradle or app/build.gradle.kts\n+plugins {\n+  id(\"com.apollographql.apollo\").version(\"x.y.z\")\n }\n-```\n-\n-Then add the dependencies to your app's build.gradle and apply file and apply the `com.apollographql.apollo` plugin:\n-\n-```groovy\n-apply plugin: 'com.apollographql.apollo'\n \n repositories {\n-    jcenter()\n+  jcenter()\n }\n \n dependencies {\n   implementation(\"com.apollographql.apollo:apollo-runtime:x.y.z\")\n   \n-  // If not already on your classpath, you might need the jetbrains annotations\n-  compileOnly(\"org.jetbrains:annotations:13.0\")\n-  testCompileOnly(\"org.jetbrains:annotations:13.0\")\n+  // optional: if you want to use the normalized cache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NDQwNQ==", "bodyText": "This always confused me. Explicit running of this task is not necessary. Building/assembling also works.", "url": "https://github.com/apollographql/apollo-android/pull/2324#discussion_r433384405", "createdAt": "2020-06-01T17:37:05Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -25,122 +25,95 @@ Apollo-android features:\n \n The latest Gradle plugin version is [ ![Download](https://api.bintray.com/packages/apollographql/android/apollo/images/download.svg) ](https://bintray.com/apollographql/android/apollo-gradle-plugin/_latestVersion)\n \n-To use this plugin, add the dependency to your project's root build.gradle file:\n+In your app Gradle file, apply the `com.apollographql.apollo` plugin and add the Apollo dependencies:\n \n ```groovy\n-buildscript {\n-  repositories {\n-    jcenter()\n-  }\n-  dependencies {\n-    classpath(\"com.apollographql.apollo:apollo-gradle-plugin:x.y.z\")\n-  }\n+// app/build.gradle or app/build.gradle.kts\n+plugins {\n+  id(\"com.apollographql.apollo\").version(\"x.y.z\")\n }\n-```\n-\n-Then add the dependencies to your app's build.gradle and apply file and apply the `com.apollographql.apollo` plugin:\n-\n-```groovy\n-apply plugin: 'com.apollographql.apollo'\n \n repositories {\n-    jcenter()\n+  jcenter()\n }\n \n dependencies {\n   implementation(\"com.apollographql.apollo:apollo-runtime:x.y.z\")\n   \n-  // If not already on your classpath, you might need the jetbrains annotations\n-  compileOnly(\"org.jetbrains:annotations:13.0\")\n-  testCompileOnly(\"org.jetbrains:annotations:13.0\")\n+  // optional: if you want to use the normalized cache\n+  implementation(\"com.apollographql.apollo:apollo-normalized-cache-sqlite:x.y.z\")\n+  // optional: for coroutines support\n+  implementation(\"com.apollographql.apollo:apollo-coroutines-support:x.y.z\")\n+  // optional: for RxJava3 support  \n+  implementation(\"com.apollographql.apollo:apollo-rx3-support:x.y.z\")\n }\n ```\n \n-## Generating models from your queries\n+## Downloading a schema.json file\n \n-1) Create a directory for your GraphQL files like you would do for Java/Kotlin: `src/main/graphql/com/example/`. Apollo-Android will generate models in the `com.apollographql.apollo.sample` package.\n-2) Add your `schema.json` to the directory at `src/main/graphql/com/example/schema.json`. If you don't have a `schema.json` file yet, read the section about [downloading a schema file](#downloading-a-schemajson-file). \n-3) Put your GraphQL queries in a `.graphql` files. For an example: `src/main/graphql/com/example/feed.graphql`: \n+Apollo-Android requires an introspection schema. You can get a schema.json file by running an introspection query on your endpoint. The Apollo Gradle plugin exposes a `downloadApolloSchema` task to help with this. You can download a schema by specifying your endpoint and the location where you want the schema to be downloaded:\n \n+```bash\n+./gradlew downloadApolloSchema --endpoint=https://your.graphql.endpoint --schema=app/src/main/graphql/com/example/schema.json\n ```\n-query FeedQuery($type: FeedType!, $limit: Int!) {\n-  feed(type: $type, limit: $limit) {\n-    comments {\n-      ...FeedCommentFragment\n-    }\n-    repository {\n-      ...RepositoryFragment\n-    }\n-    postedBy {\n-      login\n-    }\n-  }\n-}\n \n-fragment RepositoryFragment on Repository {\n-  name\n-  full_name\n-  owner {\n-    login\n-  }\n-}\n+If your endpoint requires authentication, you can pass custom HTTP headers:\n+\n+```\n+./gradlew downloadApolloSchema --endpoint=\"https://your.graphql.endpoint\" --schema=\"app/src/main/graphql/com/example\" --header=\"Authorization: Bearer $TOKEN\"\n+```\n \n-fragment FeedCommentFragment on Comment {\n-  id\n-  postedBy {\n-    login\n+## Generating models from your queries\n+\n+1) Create a directory for your GraphQL files like you would do for Java/Kotlin: `src/main/graphql/com/example/`. Apollo-Android will generate models in the `com.apollographql.apollo.sample` package.\n+2) Add your `schema.json` to the directory at `src/main/graphql/com/example/schema.json`. If you don't have a `schema.json` file yet, read the section about [downloading a schema file](#downloading-a-schemajson-file). \n+3) Put your GraphQL queries in a `.graphql` files. For an example: `src/main/graphql/com/example/LaunchDetails.graphql`: \n+\n+```graphql\n+query LaunchDetails($id:ID!) {\n+  launch(id: $id) {\n+    id\n+    site\n+    mission {\n+      name\n+      missionPatch(size:LARGE)\n+    }\n   }\n-  content\n }\n ```\n \n 4) Decide if you want to generate Kotlin or Java models:\n \n ```groovy\n-// build.gradle or build.gradle.kts\n+// app/build.gradle or app/build.gradle.kts\n apollo {\n   generateKotlinModels.set(true) // or false for Java models\n }\n ```\n \n-5) Execute `./gradlew generateApolloSources` to generate the models from your queries. This will create a generated `FeedQuery` Java or Kotlin source file for your query.\n+5) Execute `./gradlew generateApolloSources` to generate the models from your queries. This will create a generated `LaunchDetailsQuery` Java or Kotlin source file for your query.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM4NTM1MA==", "bodyText": "I think this is nice since it gets picked up and be available in getting started page on the docs website", "url": "https://github.com/apollographql/apollo-android/pull/2324#discussion_r433385350", "createdAt": "2020-06-01T17:38:51Z", "author": {"login": "tasomaniac"}, "path": "README.md", "diffHunk": "@@ -250,20 +194,14 @@ Advanced topics are available in [the official docs](https://www.apollographql.c\n * [subscriptions.md](https://www.apollographql.com/docs/android/advanced/subscriptions/)\n * [migrations.md](https://www.apollographql.com/docs/android/essentials/migration/)\n \n-\n-## Changelog", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61897e4356f8ba361f7e91c8199bfe034bfa6f0"}, "originalPosition": 286}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0663b8b9a5c7ca9d2a08a7590d8a99e5eb5450ee", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0663b8b9a5c7ca9d2a08a7590d8a99e5eb5450ee", "committedDate": "2020-06-01T18:09:31Z", "message": "remove app, use changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2292a17de4f6e855ee5a945d6e4b4ac023f8287", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/f2292a17de4f6e855ee5a945d6e4b4ac023f8287", "committedDate": "2020-06-01T18:11:57Z", "message": "remove the manual gradlew invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e8e996d4828b24ae35f20c12c5c7cbfb8d65689", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0e8e996d4828b24ae35f20c12c5c7cbfb8d65689", "committedDate": "2020-06-01T18:14:30Z", "message": "add apollo-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDc0MjY4", "url": "https://github.com/apollographql/apollo-android/pull/2324#pullrequestreview-422074268", "createdAt": "2020-06-01T18:19:26Z", "commit": {"oid": "0e8e996d4828b24ae35f20c12c5c7cbfb8d65689"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c568c02c29718458977a0bf571c34eee5753e695", "author": {"user": {"login": "StephenBarlow", "name": "Stephen Barlow"}}, "url": "https://github.com/apollographql/apollo-android/commit/c568c02c29718458977a0bf571c34eee5753e695", "committedDate": "2020-06-02T17:55:58Z", "message": "Copyedit to Android README, etc. (#2325)\n\n* Copyedit to Android README, etc.\r\n\r\n* rename 'Apollo Client for Android' -> 'Apollo Android'\r\n\r\nCo-authored-by: Stephen Barlow <stephenbarlow@APOLLO-StephenBarlow.attlocal.net>\r\nCo-authored-by: Martin Bonnin <martin@mbonnin.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3825, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}