{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4OTgwMTc2", "number": 2488, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwOToyNjo0N1rOEURlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwOToyNjo0N1rOEURlOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Njk1MDM0OnYy", "diffSide": "RIGHT", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwOToyNjo0N1rOG6c4fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo1NDowNFrOG7dDOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg==", "bodyText": "Are you sure the parentFile is enough? What happens if there are multiple nested folders? It might be better to relativize to the project folder?", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r463943806", "createdAt": "2020-08-01T09:26:47Z", "author": {"login": "tasomaniac"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2NTEwNQ==", "bodyText": "This is mostly informative and I wanted to keep it simple for most users where I expect parentFile.name to be different accross services. Another option would just be to use placeholders?\napollo {\n  service(\"service1\") {\n    ...\n  }\n  service(\"service2\") {\n    ...\n  }\n}", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r464865105", "createdAt": "2020-08-04T07:50:04Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg=="}, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk4MzAyMw==", "bodyText": "When you first did these warnings, they were really close to be something that the user can copy paste and fix their issue. Although I like that idea, it is also too much maintainance to keep that.\nThat's why maybe placeholders is a good idea. Another idea is to also link to the documentation??", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r464983023", "createdAt": "2020-08-04T11:29:33Z", "author": {"login": "tasomaniac"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg=="}, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk4NjI5Mg==", "bodyText": "Link to the documentation is a great idea \ud83d\udc4d . I don't think we have a page talking about multiple services yet. Let me see if I can add one quickly", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r464986292", "createdAt": "2020-08-04T11:36:22Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg=="}, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MTYxMg==", "bodyText": "\ud83d\udc4dJust the page talking about service would be enough actually. Up to you.", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r464991612", "createdAt": "2020-08-04T11:47:25Z", "author": {"login": "tasomaniac"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg=="}, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NTEyOQ==", "bodyText": "Ah yes, this looks enough: https://www.apollographql.com/docs/android/essentials/plugin-configuration/#apolloextension-services-and-compilationunit \ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/2488#discussion_r464995129", "createdAt": "2020-08-04T11:54:04Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -99,11 +99,13 @@ abstract class DefaultCompilationUnit @Inject constructor(\n       }\n     }\n \n-    private fun multipleSchemaError(schemaList: List<File>): String {\n+    private fun multipleSchemaError(project: Project, schemaList: List<File>): String {\n       val services = schemaList.joinToString(\"\\n\") {\n+        val name = it.parentFile.name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0MzgwNg=="}, "originalCommit": {"oid": "f8a9d3bae5f6f4abababa2dd71f0187693093def"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3008, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}