{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzM1NTg1", "number": 2211, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo1NjoyMFrOD1_G_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzowMTozNlrOD1_Mbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTM1MTAwOnYy", "diffSide": "RIGHT", "path": "gradle/dependencies.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo1NjoyMFrOGLr6Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjo1NjoyMFrOGLr6Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNjk3OQ==", "bodyText": "\ud83d\udc4d nice Ben :)", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414906979", "createdAt": "2020-04-24T22:56:20Z", "author": {"login": "sav007"}, "path": "gradle/dependencies.gradle", "diffHunk": "@@ -101,6 +101,7 @@ ext.dep = [\n         plugin : \"com.squareup.sqldelight:gradle-plugin:$versions.sqldelight\"\n     ],\n     truth                 : \"com.google.truth:truth:$versions.truth\",\n+    uuid                  : \"com.benasher44:uuid:0.1.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTM2MDk2OnYy", "diffSide": "RIGHT", "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/RecordFieldJsonAdapter.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzowMDoxNVrOGLr_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzoxODozOFrOGLsWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwODM0Nw==", "bodyText": "should it be an object?", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414908347", "createdAt": "2020-04-24T23:00:15Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/RecordFieldJsonAdapter.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.apollographql.apollo.cache.normalized\n+\n+import com.apollographql.apollo.api.internal.Throws\n+import com.apollographql.apollo.api.internal.json.BufferedSourceJsonReader\n+import com.apollographql.apollo.api.internal.json.JsonWriter\n+import com.apollographql.apollo.api.internal.json.use\n+import com.apollographql.apollo.cache.normalized.internal.CacheJsonStreamReader\n+import okio.Buffer\n+import okio.BufferedSource\n+import okio.ByteString.Companion.encodeUtf8\n+import okio.IOException\n+import kotlin.jvm.JvmStatic\n+\n+/**\n+ * An adapter used to serialize and deserialize Record fields. Record object types will be serialized to\n+ * [CacheReference].\n+ */\n+class RecordFieldJsonAdapter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxNDIxNQ==", "bodyText": "I could potentially make it an object but it is not under internal. I'm afraid that would break compatibilty.", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414914215", "createdAt": "2020-04-24T23:18:38Z", "author": {"login": "tasomaniac"}, "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/RecordFieldJsonAdapter.kt", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.apollographql.apollo.cache.normalized\n+\n+import com.apollographql.apollo.api.internal.Throws\n+import com.apollographql.apollo.api.internal.json.BufferedSourceJsonReader\n+import com.apollographql.apollo.api.internal.json.JsonWriter\n+import com.apollographql.apollo.api.internal.json.use\n+import com.apollographql.apollo.cache.normalized.internal.CacheJsonStreamReader\n+import okio.Buffer\n+import okio.BufferedSource\n+import okio.ByteString.Companion.encodeUtf8\n+import okio.IOException\n+import kotlin.jvm.JvmStatic\n+\n+/**\n+ * An adapter used to serialize and deserialize Record fields. Record object types will be serialized to\n+ * [CacheReference].\n+ */\n+class RecordFieldJsonAdapter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwODM0Nw=="}, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTM2NDI5OnYy", "diffSide": "RIGHT", "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/CacheKeyResolver.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzowMToyM1rOGLsBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzoxOTo0MVrOGLsX1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwODc4Nw==", "bodyText": "unused ?", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414908787", "createdAt": "2020-04-24T23:01:23Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/CacheKeyResolver.kt", "diffHunk": "@@ -2,6 +2,9 @@ package com.apollographql.apollo.cache.normalized\n \n import com.apollographql.apollo.api.Operation\n import com.apollographql.apollo.api.ResponseField\n+import kotlin.jvm.JvmField\n+import kotlin.jvm.JvmStatic\n+import kotlin.jvm.JvmSuppressWildcards", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxNDUxNg==", "bodyText": "These are used. Somehow in a regular jvm project, you can use these without import. But in Multiplatform, they need to be explicitly imported.", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414914516", "createdAt": "2020-04-24T23:19:41Z", "author": {"login": "tasomaniac"}, "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/CacheKeyResolver.kt", "diffHunk": "@@ -2,6 +2,9 @@ package com.apollographql.apollo.cache.normalized\n \n import com.apollographql.apollo.api.Operation\n import com.apollographql.apollo.api.ResponseField\n+import kotlin.jvm.JvmField\n+import kotlin.jvm.JvmStatic\n+import kotlin.jvm.JvmSuppressWildcards", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwODc4Nw=="}, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTM2NDk1OnYy", "diffSide": "RIGHT", "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/CacheKey.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzowMTozNlrOGLsBww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMzowMTozNlrOGLsBww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwODg2Nw==", "bodyText": "unused?", "url": "https://github.com/apollographql/apollo-android/pull/2211#discussion_r414908867", "createdAt": "2020-04-24T23:01:36Z", "author": {"login": "sav007"}, "path": "apollo-normalized-cache-api/src/commonMain/kotlin/com/apollographql/apollo/cache/normalized/CacheKey.kt", "diffHunk": "@@ -1,5 +1,8 @@\n package com.apollographql.apollo.cache.normalized\n \n+import kotlin.jvm.JvmField\n+import kotlin.jvm.JvmStatic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ddaf097c151d1304ff9825a031c8e4656377693"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3217, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}