{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxODQyOTIy", "number": 2603, "title": "[Runtime] add a client awareness OkHttp interceptor", "bodyText": "Add ApolloClientAwarenessInterceptor to implement Client Awareness.\nUsage:\n    val okHttpClient = OkHttpClient.Builder()\n        .addInterceptor(ApolloClientAwarenessInterceptor(BuildConfig.APPLICATION_ID, BuildConfig.VERSION_NAME))\n        .build()\n\n    instance = ApolloClient.builder()\n        .serverUrl(\"https://apollo-fullstack-tutorial.herokuapp.com/graphql\")\n        .okHttpClient(okHttpClient)\n        .build()\n\nI'd like to make the setup even easier but all approaches I can think of have major drawbacks:\n\nfun ApolloClient.Builder.clientAwareness(context: Context): ApolloClient.Builder to get name/version automagically from context is not possible because apollo-runtime doesn't know about Android Context\nfun ApolloClient.Builder.clientAwareness(clientName: String, clientVersion: String): ApolloClient.Builder is dangerous because adding an Interceptor for authentication is a super widely used use case and I prefer the calling code to be in control of the interceptors (for order and more generally it's more consistent than having your okHttpInstance modified under your feet).\n\nUltimately, I think it's ok to add the interceptor manually if we add the appropriate documentation page. If anyone has any ideas how to make this process easier, I'll take them", "createdAt": "2020-09-23T14:57:14Z", "url": "https://github.com/apollographql/apollo-android/pull/2603", "merged": true, "mergeCommit": {"oid": "3b37d201fba3fe7638e3a3150f0009aed4ada7c2"}, "closed": true, "closedAt": "2020-09-25T07:56:04Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLoi9BgH2gAyNDkxODQyOTIyOjg3NzJmZmY2Y2I4NGQ0OWI0MmE1YzljYWU2N2EzMDUzZDg5OGMwZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMMNvqAFqTQ5NjA2NjcxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8772fff6cb84d49b42a5c9cae67a3053d898c0e6", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/8772fff6cb84d49b42a5c9cae67a3053d898c0e6", "committedDate": "2020-09-23T08:44:47Z", "message": "add client awareness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/b4a7696b1b53c23aebf5ee8db8bd559dd9398323", "committedDate": "2020-09-23T15:19:44Z", "message": "update metalava"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDc5ODA0", "url": "https://github.com/apollographql/apollo-android/pull/2603#pullrequestreview-495079804", "createdAt": "2020-09-23T22:01:46Z", "commit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjowMTo0N1rOHXChGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMjowMTo0N1rOHXChGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkyMDUzNw==", "bodyText": "If we have Context somehow, Context.packageName is the client name I guess. It is the same as Build config.APLICATION_ID.\nWe can then use the same packageName to retrieve the version from packageManager.\nGot this from here\ntry {\n    PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\n    String version = pInfo.versionName;\n} catch (PackageManager.NameNotFoundException e) {\n    e.printStackTrace();\n}", "url": "https://github.com/apollographql/apollo-android/pull/2603#discussion_r493920537", "createdAt": "2020-09-23T22:01:47Z", "author": {"login": "tasomaniac"}, "path": "apollo-runtime/src/main/java/com/apollographql/apollo/ApolloClientAwarenessInterceptor.kt", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.apollographql.apollo\n+\n+import okhttp3.Interceptor\n+import okhttp3.Response\n+\n+/**\n+ * An [Interceptor] to add [Client Awareness](https://www.apollographql.com/docs/studio/client-awareness/).\n+ *\n+ * Add this interceptor to your [okhttp3.OkHttpClient] instance when creating your [ApolloClient]\n+ */\n+class ApolloClientAwarenessInterceptor(val clientName: String, val clientVersion: String): Interceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDY2NzE2", "url": "https://github.com/apollographql/apollo-android/pull/2603#pullrequestreview-496066716", "createdAt": "2020-09-25T02:18:12Z", "commit": {"oid": "b4a7696b1b53c23aebf5ee8db8bd559dd9398323"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4278, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}