{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NTA1MzI0", "number": 2625, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMDo0MVrOEqaIbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMDoxM1rOEqaVxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTAzNzg5OnYy", "diffSide": "LEFT", "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ResponseField.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMDo0MVrOHcmP0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMToxMDoxMFrOHct6cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0ODgxOQ==", "bodyText": "Since these are in the api, is it fine to remove without deprecating them first?", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499748819", "createdAt": "2020-10-05T17:10:41Z", "author": {"login": "tasomaniac"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ResponseField.kt", "diffHunk": "@@ -304,34 +304,6 @@ open class ResponseField internal constructor(\n       )\n     }\n \n-    /**\n-     * Factory method for creating a Field instance representing [Type.LONG].\n-     *\n-     * @param responseName alias for the result of a field\n-     * @param fieldName name of the field in the GraphQL operation\n-     * @param arguments arguments to be passed along with the field\n-     * @param optional whether the arguments passed along are optional or required\n-     * @param conditions list of conditions for this field\n-     * @return Field instance representing [Type.LONG]\n-     */\n-    @JvmStatic\n-    fun forLong(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MzcxOQ==", "bodyText": "3.x will break a huge amount of things. I don't really see a nice deprecation path there. We could deprecate in 2.x but deprecating without giving a clear path forward isn't great either.", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499753719", "createdAt": "2020-10-05T17:19:22Z", "author": {"login": "martinbonnin"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ResponseField.kt", "diffHunk": "@@ -304,34 +304,6 @@ open class ResponseField internal constructor(\n       )\n     }\n \n-    /**\n-     * Factory method for creating a Field instance representing [Type.LONG].\n-     *\n-     * @param responseName alias for the result of a field\n-     * @param fieldName name of the field in the GraphQL operation\n-     * @param arguments arguments to be passed along with the field\n-     * @param optional whether the arguments passed along are optional or required\n-     * @param conditions list of conditions for this field\n-     * @return Field instance representing [Type.LONG]\n-     */\n-    @JvmStatic\n-    fun forLong(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0ODgxOQ=="}, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3NDQxOA==", "bodyText": "Makes sense \ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499874418", "createdAt": "2020-10-05T21:10:10Z", "author": {"login": "tasomaniac"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/ResponseField.kt", "diffHunk": "@@ -304,34 +304,6 @@ open class ResponseField internal constructor(\n       )\n     }\n \n-    /**\n-     * Factory method for creating a Field instance representing [Type.LONG].\n-     *\n-     * @param responseName alias for the result of a field\n-     * @param fieldName name of the field in the GraphQL operation\n-     * @param arguments arguments to be passed along with the field\n-     * @param optional whether the arguments passed along are optional or required\n-     * @param conditions list of conditions for this field\n-     * @return Field instance representing [Type.LONG]\n-     */\n-    @JvmStatic\n-    fun forLong(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0ODgxOQ=="}, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTA0MTM4OnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/GraphQLCompiler.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMTo0NVrOHcmSAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMDo1MlrOHcmmXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0OTM3OA==", "bodyText": "Is this change here by mistake?", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499749378", "createdAt": "2020-10-05T17:11:45Z", "author": {"login": "tasomaniac"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/GraphQLCompiler.kt", "diffHunk": "@@ -189,13 +163,13 @@ class GraphQLCompiler(val logger: Logger = NoOpLogger) {\n   private fun idClassName(generateKotlinModels: Boolean) = if (generateKotlinModels) {\n     String::class.asClassName().toString()\n   } else {\n-    ClassNames.STRING.toString()\n+    TODO(\"ClassNames.STRING.toString()\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NDU4OQ==", "bodyText": "This is the java codegen path. It's currently broken in dev-3.x and will have to be enabled again.", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499754589", "createdAt": "2020-10-05T17:20:52Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/GraphQLCompiler.kt", "diffHunk": "@@ -189,13 +163,13 @@ class GraphQLCompiler(val logger: Logger = NoOpLogger) {\n   private fun idClassName(generateKotlinModels: Boolean) = if (generateKotlinModels) {\n     String::class.asClassName().toString()\n   } else {\n-    ClassNames.STRING.toString()\n+    TODO(\"ClassNames.STRING.toString()\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0OTM3OA=="}, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTA1ODg2OnYy", "diffSide": "RIGHT", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxNjoyOVrOHcmclg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo0MjozMlrOHcnToA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MjA4Ng==", "bodyText": "Can we not inline this function too? Do we still need it?", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499752086", "createdAt": "2020-10-05T17:16:29Z", "author": {"login": "tasomaniac"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -89,10 +89,7 @@ abstract class DefaultCompilationUnit @Inject constructor(\n     }\n   }\n \n-  fun generateKotlinModels(): Boolean = when {\n-    project.isKotlinMultiplatform -> true\n-    else -> generateKotlinModels.orElse(service.generateKotlinModels).orElse(apolloExtension.generateKotlinModels).getOrElse(false)\n-  }\n+  fun generateKotlinModels(): Boolean = true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2NjE3Ng==", "bodyText": "I kept the Gradle plugin java codegen path intact for now since it can ultimately be reused. I'd really like to remove this function though and not having to build the java/kotlin task graphs based on user input (i.e. certainly have different plugin ids for java and kotlin). Not 100% sure yet how this is going to end so this is a very rough first step.", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499766176", "createdAt": "2020-10-05T17:42:32Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/DefaultCompilationUnit.kt", "diffHunk": "@@ -89,10 +89,7 @@ abstract class DefaultCompilationUnit @Inject constructor(\n     }\n   }\n \n-  fun generateKotlinModels(): Boolean = when {\n-    project.isKotlinMultiplatform -> true\n-    else -> generateKotlinModels.orElse(service.generateKotlinModels).orElse(apolloExtension.generateKotlinModels).getOrElse(false)\n-  }\n+  fun generateKotlinModels(): Boolean = true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MjA4Ng=="}, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTA3MjA1OnYy", "diffSide": "LEFT", "path": "composite/settings.gradle.kts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMDoxM1rOHcmk4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyMjowN1rOHcmpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NDIxMQ==", "bodyText": "What is the reason to remove samples from composite project? Are we going to replace this with something else?", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499754211", "createdAt": "2020-10-05T17:20:13Z", "author": {"login": "tasomaniac"}, "path": "composite/settings.gradle.kts", "diffHunk": "@@ -1,16 +1,5 @@\n rootProject.name = \"apollo-composite\"\n \n-// Samples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NTM0MA==", "bodyText": "Definitively an oversight, I only meant to delete the java sample, I'll add the kotlin samples back \ud83d\udc4d", "url": "https://github.com/apollographql/apollo-android/pull/2625#discussion_r499755340", "createdAt": "2020-10-05T17:22:07Z", "author": {"login": "martinbonnin"}, "path": "composite/settings.gradle.kts", "diffHunk": "@@ -1,16 +1,5 @@\n rootProject.name = \"apollo-composite\"\n \n-// Samples", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NDIxMQ=="}, "originalCommit": {"oid": "7645e2f92b7c1a10ffad0ad714b3642d9d182dbe"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2927, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}