{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzY5NTQ1", "number": 1982, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMzo0MTo1MVrODePiUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTowMTowN1rODeTAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDM4NDE5OnYy", "diffSide": "RIGHT", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/JvmTaskConfigurator.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMzo0MTo1MVrOFnSfgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMDowOTo1OFrOFnSlrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MTc2Mw==", "bodyText": "Hmm, I'm not sure about using internal APIs. This bite me back a lot of times before. Task names are public. Gradle and Kotlin team will never change task names like compileKotlin or compileFooJava. But they may do internal refactoring which even removed/renames this class.\nLittle duplication of code where you need to remove Main is not too bad.", "url": "https://github.com/apollographql/apollo-android/pull/1982#discussion_r376741763", "createdAt": "2020-02-08T23:41:51Z", "author": {"login": "tasomaniac"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/JvmTaskConfigurator.kt", "diffHunk": "@@ -2,6 +2,7 @@ package com.apollographql.apollo.gradle.internal\n \n import org.gradle.api.NamedDomainObjectContainer\n import org.gradle.api.Project\n+import org.gradle.api.internal.jvm.ClassDirectoryBinaryNamingScheme", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086e39aef70cc5e7e8b058b363e086a911ff96e1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MjA0OA==", "bodyText": "Shoots, I didn't see this was internal. You're completely right, that'll break if/when gradle decides to move things around. I'll try to duplicate the logic here. It's not only about the \"Main\" thing but also about - and maybe some other characters ?", "url": "https://github.com/apollographql/apollo-android/pull/1982#discussion_r376742048", "createdAt": "2020-02-08T23:48:11Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/JvmTaskConfigurator.kt", "diffHunk": "@@ -2,6 +2,7 @@ package com.apollographql.apollo.gradle.internal\n \n import org.gradle.api.NamedDomainObjectContainer\n import org.gradle.api.Project\n+import org.gradle.api.internal.jvm.ClassDirectoryBinaryNamingScheme", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MTc2Mw=="}, "originalCommit": {"oid": "086e39aef70cc5e7e8b058b363e086a911ff96e1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MzM0Mw==", "bodyText": "It should be better now. The java plugin uses a regex to find word boundaries, which explains why - was considered a boundary.", "url": "https://github.com/apollographql/apollo-android/pull/1982#discussion_r376743343", "createdAt": "2020-02-09T00:09:58Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/JvmTaskConfigurator.kt", "diffHunk": "@@ -2,6 +2,7 @@ package com.apollographql.apollo.gradle.internal\n \n import org.gradle.api.NamedDomainObjectContainer\n import org.gradle.api.Project\n+import org.gradle.api.internal.jvm.ClassDirectoryBinaryNamingScheme", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MTc2Mw=="}, "originalCommit": {"oid": "086e39aef70cc5e7e8b058b363e086a911ff96e1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDk1MTk2OnYy", "diffSide": "RIGHT", "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/GUtil.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMTowMTowN1rOFnW9nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwOToyNzo0OVrOFne8gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNTAwNA==", "bodyText": "nit: \ud83e\udd14 I think Kotlin 'String.decapitalize()' provides the same function?", "url": "https://github.com/apollographql/apollo-android/pull/1982#discussion_r376815004", "createdAt": "2020-02-09T21:01:07Z", "author": {"login": "sav007"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/GUtil.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.apollographql.apollo.gradle.internal\n+\n+import java.util.regex.Pattern\n+\n+/*\n+ * Adapted from Gradle GUtil.java so that we can match the task names\n+ *\n+ * Copyright 2010 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+object GUtil {\n+  private val WORD_SEPARATOR: Pattern = Pattern.compile(\"\\\\W+\")\n+\n+  fun String.uncapitalize(): String {\n+    return if (isNotEmpty() && this[0].isUpperCase()) substring(0, 1).toLowerCase() + substring(1) else this\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49af672d4f20c110ee6d7c77a5cb519bdd7f892d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk0NTc5Mw==", "bodyText": "\ud83d\udc4d I was looking for uncaptalize, I missed decapitalize. Thanks for the heads up!", "url": "https://github.com/apollographql/apollo-android/pull/1982#discussion_r376945793", "createdAt": "2020-02-10T09:27:49Z", "author": {"login": "martinbonnin"}, "path": "apollo-gradle-plugin/src/main/kotlin/com/apollographql/apollo/gradle/internal/GUtil.kt", "diffHunk": "@@ -0,0 +1,59 @@\n+package com.apollographql.apollo.gradle.internal\n+\n+import java.util.regex.Pattern\n+\n+/*\n+ * Adapted from Gradle GUtil.java so that we can match the task names\n+ *\n+ * Copyright 2010 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+object GUtil {\n+  private val WORD_SEPARATOR: Pattern = Pattern.compile(\"\\\\W+\")\n+\n+  fun String.uncapitalize(): String {\n+    return if (isNotEmpty() && this[0].isUpperCase()) substring(0, 1).toLowerCase() + substring(1) else this\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxNTAwNA=="}, "originalCommit": {"oid": "49af672d4f20c110ee6d7c77a5cb519bdd7f892d"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}