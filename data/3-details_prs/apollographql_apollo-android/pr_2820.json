{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1Mzk0MDU3", "number": 2820, "title": "Cleanup the custom scalar APIs 2/3", "bodyText": "Follow up from #2818,\nThis:\n\nrenames ScalarTypeAdapters to CustomScalarAdapters\nrenames ScalarType to CustomScalar\ngenerates CustomScalars as data classes\n\nI'll make one last PR to throw if trying to register an unknown CustomScalar\nSee #2486", "createdAt": "2020-12-24T14:42:02Z", "url": "https://github.com/apollographql/apollo-android/pull/2820", "merged": true, "mergeCommit": {"oid": "1ff014475b142aa0efb3f6a300c81f9c3c1a85cf"}, "closed": true, "closedAt": "2021-01-04T09:33:05Z", "author": {"login": "martinbonnin"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqCeG4gFqTU1ODg4OTI4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdsymnUAH2gAyNTQ1Mzk0MDU3OjE3Y2E0ZDg3ZjMwNDFjNjdkOTA2ZTI2MDBiYmM2NWQ4Y2RhOGNhZjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODg5Mjgy", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-558889282", "createdAt": "2020-12-26T19:54:45Z", "commit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxOTo1NDo0NVrOILl3iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxOTo1NDo0NVrOILl3iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAyNTY3Mw==", "bodyText": "where it's used? I might missed that during reviewing PR", "url": "https://github.com/apollographql/apollo-android/pull/2820#discussion_r549025673", "createdAt": "2020-12-26T19:54:45Z", "author": {"login": "sav007"}, "path": "apollo-api/src/commonMain/kotlin/com/apollographql/apollo/api/CustomScalar.kt", "diffHunk": "@@ -3,15 +3,17 @@ package com.apollographql.apollo.api\n /**\n  * Represents a mapping from a custom GraphQL scalar type to a Java/Kotlin class\n  */\n-interface ScalarType {\n-\n+data class CustomScalar(\n   /**\n    * GraphQL schema custom scalar type name (e.g. `ID`, `URL`, `DateTime` etc.)\n    */\n-  val graphqlName: String\n+  val graphqlName: String,\n \n   /**\n    * Fully qualified class name this GraphQL scalar type is mapped to (e.g. `java.lang.String`, `java.net.URL`, `java.util.DateTime`)\n    */\n   val className: String\n+) {\n+  // Do not remove, this is used by generated code\n+  companion object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODg5ODI1", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-558889825", "createdAt": "2020-12-26T20:10:38Z", "commit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMDoxMDozOFrOILl81g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMDoxMDozOFrOILl81g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAyNzAzMA==", "bodyText": "Should we skip empty object generation?", "url": "https://github.com/apollographql/apollo-android/pull/2820#discussion_r549027030", "createdAt": "2020-12-26T20:10:38Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/type/CustomScalars.kt", "diffHunk": "@@ -0,0 +1,8 @@\n+// AUTO-GENERATED FILE. DO NOT MODIFY.\n+//\n+// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.\n+// It should not be modified by hand.\n+//\n+package com.example.fragment_in_fragment.type\n+\n+object CustomScalars", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTUyMTI5", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-558952129", "createdAt": "2020-12-27T18:44:32Z", "commit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0NDozMlrOILtgbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0NDozMlrOILtgbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDgyOA==", "bodyText": "Idea was that this class AST supposed to be free from any specific kotlin / java poet classes and can be used with any code generation libraries. With these changes we lock AST to be used only with Kotlin Poet.", "url": "https://github.com/apollographql/apollo-android/pull/2820#discussion_r549150828", "createdAt": "2020-12-27T18:44:32Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/backend/ast/Ast.kt", "diffHunk": "@@ -1,5 +1,8 @@\n package com.apollographql.apollo.compiler.backend.ast\n \n+import com.squareup.kotlinpoet.MemberName\n+import com.squareup.kotlinpoet.TypeName\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTUyMzM0", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-558952334", "createdAt": "2020-12-27T18:49:38Z", "commit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0OTozOVrOILtiZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo0OTozOVrOILtiZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MTMzMw==", "bodyText": "Should we introduce object CustomScalarType in CustomScalarType.kt with the const for enum name CustomScalars. Also I was thinking maybe we should use object  as namespace for any top level functions?  For example move all functions in ObjectTypeCodegen.kt into object ObjectTypeCodegen ? So any top level functions will have explicit namespaces", "url": "https://github.com/apollographql/apollo-android/pull/2820#discussion_r549151333", "createdAt": "2020-12-27T18:49:39Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/main/kotlin/com/apollographql/apollo/compiler/backend/ast/AstBuilder.kt", "diffHunk": "@@ -665,18 +643,14 @@ internal class AstBuilder private constructor(\n           \"BOOLEAN\" -> CodeGenerationAst.FieldType.Scalar.Boolean(nullable = true)\n           \"FLOAT\" -> CodeGenerationAst.FieldType.Scalar.Float(nullable = true)\n           else -> {\n-            val customType = checkNotNull(customScalarsMapping[schemaTypeRef.name]) {\n+            val className = checkNotNull(customScalarsMapping[schemaTypeRef.name]) {\n               \"Failed to resolve custom scalar type `${schemaTypeRef.name}`\"\n             }\n             CodeGenerationAst.FieldType.Scalar.Custom(\n                 nullable = true,\n                 schemaType = schemaTypeRef.name,\n-                type = customType,\n-                customEnumType = CodeGenerationAst.TypeRef(\n-                    name = schemaTypeRef.name,\n-                    packageName = typesPackageName,\n-                    enclosingType = CodeGenerationAst.customTypeRef(typesPackageName)\n-                )\n+                type = className,\n+                typeName = ClassName(typesPackageName, \"CustomScalars\", schemaTypeRef.name.capitalize())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "originalPosition": 362}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTUyNDY4", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-558952468", "createdAt": "2020-12-27T18:52:47Z", "commit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo1Mjo0N1rOILtjRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODo1Mjo0N1rOILtjRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MTU1Ng==", "bodyText": "Didn't we have PR into 2.x branch that introduces some interface for CustomScalars when it's generated as sealed class? Also I believe we had compiler option to generate this as sealed class, are we sure to change this behaviour in 3.x?", "url": "https://github.com/apollographql/apollo-android/pull/2820#discussion_r549151556", "createdAt": "2020-12-27T18:52:47Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/antlr_tokens/type/CustomScalars.kt", "diffHunk": "@@ -0,0 +1,16 @@\n+// AUTO-GENERATED FILE. DO NOT MODIFY.\n+//\n+// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.\n+// It should not be modified by hand.\n+//\n+package com.example.antlr_tokens.type\n+\n+import com.apollographql.apollo.api.CustomScalar\n+\n+object CustomScalars {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7da119a3d58144aa9225955e9e7a4268b65b95"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5ODA4MzE2", "url": "https://github.com/apollographql/apollo-android/pull/2820#pullrequestreview-559808316", "createdAt": "2020-12-30T05:25:24Z", "commit": {"oid": "98f55410c0d8b5c2d289cb9ba480bdebff5f9ea2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98f55410c0d8b5c2d289cb9ba480bdebff5f9ea2", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/98f55410c0d8b5c2d289cb9ba480bdebff5f9ea2", "committedDate": "2020-12-28T15:05:41Z", "message": "move JsonElement subclasses to the upper level\n\nIt makes the callsite less verbose"}, "afterCommit": {"oid": "2d15cd8e27b734f59e8ffdb1281c6ef0f6ae0a4f", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/2d15cd8e27b734f59e8ffdb1281c6ef0f6ae0a4f", "committedDate": "2021-01-03T17:12:01Z", "message": "add KDoc and do not generate if empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c9c4514a028ea3e90caa148b1ff8d6c6d688528", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/9c9c4514a028ea3e90caa148b1ff8d6c6d688528", "committedDate": "2021-01-04T09:04:31Z", "message": "ScalarType -> CustomScalar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f85c078339fe03045b60d383b03c12a9c370de", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/24f85c078339fe03045b60d383b03c12a9c370de", "committedDate": "2021-01-04T09:04:31Z", "message": "Generate CustomScalar as a data class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6b2a56b3c7d049efa51713fb64a64447351e5ea", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e6b2a56b3c7d049efa51713fb64a64447351e5ea", "committedDate": "2021-01-04T09:04:31Z", "message": "ScalarTypeAdapter -> CustomScalarAdapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec8a912b28eaa079532b46a0579c6c453ea3f6d", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/8ec8a912b28eaa079532b46a0579c6c453ea3f6d", "committedDate": "2021-01-04T09:04:31Z", "message": "update test fixtures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c76e6baec0e9305f18470a8b348cb0d17393da0a", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/c76e6baec0e9305f18470a8b348cb0d17393da0a", "committedDate": "2021-01-04T09:04:31Z", "message": "misc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e246c0e79722df3284261e06b743fe47cab82b09", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e246c0e79722df3284261e06b743fe47cab82b09", "committedDate": "2021-01-04T09:04:32Z", "message": "simplify AstBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77aeec3d91f4b85841a9b7bd2a5305d70d3e7daf", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/77aeec3d91f4b85841a9b7bd2a5305d70d3e7daf", "committedDate": "2021-01-04T09:04:32Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "981770de9b105aacb7ef1c5c8e3d1c7ef4d816c1", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/981770de9b105aacb7ef1c5c8e3d1c7ef4d816c1", "committedDate": "2021-01-04T09:04:32Z", "message": "fix idling resource test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b4d93341427b1cdf1585625e09bdd7ef52def2", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/01b4d93341427b1cdf1585625e09bdd7ef52def2", "committedDate": "2021-01-04T09:04:32Z", "message": "revert to not using extension properties as it leads to nasty\nnameclashes issues like java.util.Date vs com.example.type.Date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f071b8e7d1595ca4edafdf2b92eb45bc79f35e7", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/7f071b8e7d1595ca4edafdf2b92eb45bc79f35e7", "committedDate": "2021-01-04T09:04:32Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3295ad264d702b7697c2bdf79f363165bb73a2", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/bc3295ad264d702b7697c2bdf79f363165bb73a2", "committedDate": "2021-01-04T09:04:32Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff205c6580835c07cf9b2d8119d7c248299592e", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/8ff205c6580835c07cf9b2d8119d7c248299592e", "committedDate": "2021-01-04T09:04:32Z", "message": "Better UP-TO-DATE checks (#2817)\n\n* remove the \"Build-Timestamp\" Manifest property\r\n\r\nThis makes the builds never up-to-date and compiling things over and\r\nover again\r\n\r\n* better up-to-date checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9b4a1c2d774b7478f928fb925cd5dc1f6818c7", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/6f9b4a1c2d774b7478f928fb925cd5dc1f6818c7", "committedDate": "2021-01-04T09:04:32Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9645bfc5a3f6dcac3050577f0cec8aa5c0c9774", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e9645bfc5a3f6dcac3050577f0cec8aa5c0c9774", "committedDate": "2021-01-04T09:04:32Z", "message": "do not bind the Ast to KotlinPoet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a5e3c016c95debac5c75445d51f38a158b011f6", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/5a5e3c016c95debac5c75445d51f38a158b011f6", "committedDate": "2021-01-04T09:04:32Z", "message": "remove unused companion object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e871bce43c3be0fa0c15ddab4c1b9467e8d6aecf", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/e871bce43c3be0fa0c15ddab4c1b9467e8d6aecf", "committedDate": "2021-01-04T09:04:32Z", "message": "move JsonElement subclasses to the upper level\n\nIt makes the callsite less verbose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19b9f545fff23584f47897b671d57a3d4b5e1922", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/19b9f545fff23584f47897b671d57a3d4b5e1922", "committedDate": "2021-01-04T09:04:32Z", "message": "make compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e7c32e83f9799d9a3ef0fff59fad5f0473a5a26", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0e7c32e83f9799d9a3ef0fff59fad5f0473a5a26", "committedDate": "2021-01-04T09:04:32Z", "message": "add KDoc and do not generate if empty"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d15cd8e27b734f59e8ffdb1281c6ef0f6ae0a4f", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/2d15cd8e27b734f59e8ffdb1281c6ef0f6ae0a4f", "committedDate": "2021-01-03T17:12:01Z", "message": "add KDoc and do not generate if empty"}, "afterCommit": {"oid": "0e7c32e83f9799d9a3ef0fff59fad5f0473a5a26", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/0e7c32e83f9799d9a3ef0fff59fad5f0473a5a26", "committedDate": "2021-01-04T09:04:32Z", "message": "add KDoc and do not generate if empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17ca4d87f3041c67d906e2600bbc65d8cda8caf9", "author": {"user": {"login": "martinbonnin", "name": "Martin Bonnin"}}, "url": "https://github.com/apollographql/apollo-android/commit/17ca4d87f3041c67d906e2600bbc65d8cda8caf9", "committedDate": "2021-01-04T09:07:20Z", "message": "update test fixtures"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}