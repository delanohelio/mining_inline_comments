{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0Mzg5MzYw", "number": 2545, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToyNToxM1rOEdIw5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNzoyM1rOEjlWEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTg3NzUxOnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/test/graphql/com/example/arguments_complex/TestQuery.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToyNToxM1rOHIH8RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNjoyMzoxMlrOHQ2Egg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MDc3Mg==", "bodyText": "Not strictly related to this PR but the ResponseFieldMarshaller would be a good candidate to try out the shiny new fun interface in Kotlin 1.4", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r478280772", "createdAt": "2020-08-27T09:25:13Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/arguments_complex/TestQuery.kt", "diffHunk": "@@ -126,19 +126,21 @@ data class TestQuery(\n      */\n     val height: Double?\n   ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@HeroWithReview.__typename)\n-      writer.writeString(RESPONSE_FIELDS[1], this@HeroWithReview.name)\n-      writer.writeDouble(RESPONSE_FIELDS[2], this@HeroWithReview.height)\n+    fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HeroWithReview.__typename)\n+        writer.writeString(RESPONSE_FIELDS[1], this@HeroWithReview.name)\n+        writer.writeDouble(RESPONSE_FIELDS[2], this@HeroWithReview.height)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNTE1NA==", "bodyText": "yeah for sure, we can tune it later", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487425154", "createdAt": "2020-09-12T16:23:12Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/arguments_complex/TestQuery.kt", "diffHunk": "@@ -126,19 +126,21 @@ data class TestQuery(\n      */\n     val height: Double?\n   ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@HeroWithReview.__typename)\n-      writer.writeString(RESPONSE_FIELDS[1], this@HeroWithReview.name)\n-      writer.writeDouble(RESPONSE_FIELDS[2], this@HeroWithReview.height)\n+    fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HeroWithReview.__typename)\n+        writer.writeString(RESPONSE_FIELDS[1], this@HeroWithReview.name)\n+        writer.writeDouble(RESPONSE_FIELDS[2], this@HeroWithReview.height)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MDc3Mg=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTk2MzQxOnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTo0NzoxM1rOHIIvvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQyMTo0MDowMVrOHQ3q6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5Mzk0OA==", "bodyText": "Feature Request: if we know the type condition is always true, could we implement the interface by default?\ninterface Node1: StarshipFragment.Node, PilotFragment", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r478293948", "createdAt": "2020-08-27T09:47:13Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PilotFragmentImpl.name)\n+        writer.writeObject(RESPONSE_FIELDS[1], this@PilotFragmentImpl.homeworld?.marshaller())\n+        writer.writeString(RESPONSE_FIELDS[2], this@PilotFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forObject(\"homeworld\", \"homeworld\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PilotFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val homeworld = readObject<Homeworld>(RESPONSE_FIELDS[1]) { reader ->\n+          Homeworld(reader)\n+        }\n+        val __typename = readString(RESPONSE_FIELDS[2])!!\n+        PilotFragmentImpl(\n+          name = name,\n+          homeworld = homeworld,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PilotFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  interface Node1 : StarshipFragment.Node {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Node1 {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Person\" -> PilotFragmentImpl(reader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNjEyOA==", "bodyText": "Could you pls elaborate on this, not sure I understand this feature request.", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487426128", "createdAt": "2020-09-12T16:34:09Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PilotFragmentImpl.name)\n+        writer.writeObject(RESPONSE_FIELDS[1], this@PilotFragmentImpl.homeworld?.marshaller())\n+        writer.writeString(RESPONSE_FIELDS[2], this@PilotFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forObject(\"homeworld\", \"homeworld\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PilotFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val homeworld = readObject<Homeworld>(RESPONSE_FIELDS[1]) { reader ->\n+          Homeworld(reader)\n+        }\n+        val __typename = readString(RESPONSE_FIELDS[2])!!\n+        PilotFragmentImpl(\n+          name = name,\n+          homeworld = homeworld,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PilotFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  interface Node1 : StarshipFragment.Node {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Node1 {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Person\" -> PilotFragmentImpl(reader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5Mzk0OA=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNzE1Ng==", "bodyText": "Yes, here starship.pilotConnection.edges[0].node is of GraphQL type Person but the generated type is Node1, meaning that users will always have to cast to access pilot fields while we know at compile time that they should always be there.\nI'm not 100% sure how to generate this code but I feel like making \"Node1\" implement \"PilotFragment\" when Node1 is always of type \"Person\" would be handy. Of course if there are more possible types it wouldn't work anymore but I feel like the usage could be simplified for this specific case.", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487427156", "createdAt": "2020-09-12T16:46:23Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PilotFragmentImpl.name)\n+        writer.writeObject(RESPONSE_FIELDS[1], this@PilotFragmentImpl.homeworld?.marshaller())\n+        writer.writeString(RESPONSE_FIELDS[2], this@PilotFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forObject(\"homeworld\", \"homeworld\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PilotFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val homeworld = readObject<Homeworld>(RESPONSE_FIELDS[1]) { reader ->\n+          Homeworld(reader)\n+        }\n+        val __typename = readString(RESPONSE_FIELDS[2])!!\n+        PilotFragmentImpl(\n+          name = name,\n+          homeworld = homeworld,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PilotFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  interface Node1 : StarshipFragment.Node {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Node1 {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Person\" -> PilotFragmentImpl(reader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5Mzk0OA=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzNjQxNw==", "bodyText": "Agh right, nice catch. Now I have to think how to formalize this optimization in terms of codegen. Also with this optimization we can omit of extra class generation NodeImpl1", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487436417", "createdAt": "2020-09-12T18:36:38Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PilotFragmentImpl.name)\n+        writer.writeObject(RESPONSE_FIELDS[1], this@PilotFragmentImpl.homeworld?.marshaller())\n+        writer.writeString(RESPONSE_FIELDS[2], this@PilotFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forObject(\"homeworld\", \"homeworld\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PilotFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val homeworld = readObject<Homeworld>(RESPONSE_FIELDS[1]) { reader ->\n+          Homeworld(reader)\n+        }\n+        val __typename = readString(RESPONSE_FIELDS[2])!!\n+        PilotFragmentImpl(\n+          name = name,\n+          homeworld = homeworld,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PilotFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  interface Node1 : StarshipFragment.Node {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Node1 {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Person\" -> PilotFragmentImpl(reader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5Mzk0OA=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ1MTM3MA==", "bodyText": "Done", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487451370", "createdAt": "2020-09-12T21:40:01Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PilotFragmentImpl.name)\n+        writer.writeObject(RESPONSE_FIELDS[1], this@PilotFragmentImpl.homeworld?.marshaller())\n+        writer.writeString(RESPONSE_FIELDS[2], this@PilotFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forObject(\"homeworld\", \"homeworld\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PilotFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val homeworld = readObject<Homeworld>(RESPONSE_FIELDS[1]) { reader ->\n+          Homeworld(reader)\n+        }\n+        val __typename = readString(RESPONSE_FIELDS[2])!!\n+        PilotFragmentImpl(\n+          name = name,\n+          homeworld = homeworld,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PilotFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  interface Node1 : StarshipFragment.Node {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Node1 {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Person\" -> PilotFragmentImpl(reader)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5Mzk0OA=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 238}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDAwNDYzOnYy", "diffSide": "RIGHT", "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTo1ODoxMlrOHIJIgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNjozMjo0M1rOHQ2H2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwMDI4OA==", "bodyText": "I'm still trying to wrap my head around this but here inheriting from StarshipFragment.Node is not strictly required as it's already a super interface of Node1. Could this be removed?", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r478300288", "createdAt": "2020-08-27T09:58:12Z", "author": {"login": "martinbonnin"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQyNjAwOA==", "bodyText": "Yeah makes sense such optimization", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r487426008", "createdAt": "2020-09-12T16:32:43Z", "author": {"login": "sav007"}, "path": "apollo-compiler/src/test/graphql/com/example/fragment_in_fragment/AllStarships.kt", "diffHunk": "@@ -86,57 +89,381 @@ class AllStarships : Query<AllStarships.Data, AllStarships.Data, Operation.Varia\n   /**\n    * A single transport craft that has hyperdrive capability.\n    */\n-  data class Node(\n-    val __typename: String = \"Starship\",\n-    val fragments: Fragments\n-  ) {\n-    fun marshaller(): ResponseFieldMarshaller = ResponseFieldMarshaller.invoke { writer ->\n-      writer.writeString(RESPONSE_FIELDS[0], this@Node.__typename)\n-      this@Node.fragments.marshaller().marshal(writer)\n+  data class NodeImpl(\n+    override val __typename: String = \"Starship\"\n+  ) : Node {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class NodeImpl1(\n+    override val __typename: String = \"Person\"\n+  ) : Node1 {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@NodeImpl1.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): NodeImpl1 = reader.run {\n+        val __typename = readString(RESPONSE_FIELDS[0])!!\n+        NodeImpl1(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<NodeImpl1> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class HomeworldImpl(\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@HomeworldImpl.__typename)\n+      }\n     }\n \n     companion object {\n       private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null),\n-          ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n-          )\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n \n-      operator fun invoke(reader: ResponseReader): Node = reader.run {\n+      operator fun invoke(reader: ResponseReader): HomeworldImpl = reader.run {\n         val __typename = readString(RESPONSE_FIELDS[0])!!\n-        val fragments = Fragments(reader)\n-        Node(\n+        HomeworldImpl(\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<HomeworldImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  data class PlanetFragmentImpl(\n+    /**\n+     * The name of this planet.\n+     */\n+    override val name: String?,\n+    override val __typename: String = \"Planet\"\n+  ) : Homeworld, PlanetFragment, PilotFragment.Homeworld {\n+    override fun marshaller(): ResponseFieldMarshaller {\n+      return ResponseFieldMarshaller.invoke { writer ->\n+        writer.writeString(RESPONSE_FIELDS[0], this@PlanetFragmentImpl.name)\n+        writer.writeString(RESPONSE_FIELDS[1], this@PlanetFragmentImpl.__typename)\n+      }\n+    }\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"name\", \"name\", null, true, null),\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): PlanetFragmentImpl = reader.run {\n+        val name = readString(RESPONSE_FIELDS[0])\n+        val __typename = readString(RESPONSE_FIELDS[1])!!\n+        PlanetFragmentImpl(\n+          name = name,\n+          __typename = __typename\n+        )\n+      }\n+\n+      @Suppress(\"FunctionName\")\n+      fun Mapper(): ResponseFieldMapper<PlanetFragmentImpl> = ResponseFieldMapper { invoke(it) }\n+    }\n+  }\n+\n+  /**\n+   * A large mass, planet or planetoid in the Star Wars Universe, at the time of\n+   * 0 ABY.\n+   */\n+  interface Homeworld : PilotFragment.Homeworld {\n+    override val __typename: String\n+\n+    override fun marshaller(): ResponseFieldMarshaller\n+\n+    companion object {\n+      private val RESPONSE_FIELDS: Array<ResponseField> = arrayOf(\n+        ResponseField.forString(\"__typename\", \"__typename\", null, false, null)\n+      )\n+\n+      operator fun invoke(reader: ResponseReader): Homeworld {\n+        val typename = reader.readString(RESPONSE_FIELDS[0])\n+        return when(typename) {\n+          \"Planet\" -> PlanetFragmentImpl(reader)\n+          else -> HomeworldImpl(reader)\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * An individual person or character within the Star Wars universe.\n+   */\n+  data class PilotFragmentImpl(\n+    /**\n+     * The name of this person.\n+     */\n+    override val name: String?,\n+    /**\n+     * A planet that this person was born on or inhabits.\n+     */\n+    override val homeworld: Homeworld?,\n+    override val __typename: String = \"Person\"\n+  ) : Node1, PilotFragment, StarshipFragment.Node {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwMDI4OA=="}, "originalCommit": {"oid": "be165df26676e4a5fbf427e3d931070128883798"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzQ3NDcyOnYy", "diffSide": "RIGHT", "path": "samples/kotlin-sample/src/main/java/com/apollographql/apollo/kotlinsample/data/ApolloCoroutinesService.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNzoyM1rOHSA6sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNzoyM1rOHSA6sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1MTQ0Mg==", "bodyText": "Bumped into this while merging master. This feels more verbose than the previous solution. Maybe for inline fragments we can keep the asXyz helpers?", "url": "https://github.com/apollographql/apollo-android/pull/2545#discussion_r488651442", "createdAt": "2020-09-15T13:07:23Z", "author": {"login": "martinbonnin"}, "path": "samples/kotlin-sample/src/main/java/com/apollographql/apollo/kotlinsample/data/ApolloCoroutinesService.kt", "diffHunk": "@@ -67,7 +67,7 @@ class ApolloCoroutinesService(\n     job = CoroutineScope(processContext).launch {\n       try {\n         val response = apolloClient.query(commitsQuery).toDeferred().await()\n-        val headCommit = response.data?.viewer?.repository?.ref?.target?.asCommit\n+        val headCommit = response.data?.viewer?.repository?.ref?.target as GithubRepositoryCommitsQuery.Commit?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e93b1f1907d303b2e78cd57df40911828819986e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3031, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}