{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NjkyOTM5", "number": 6831, "title": "add unit test for SQLRewriteContext (6746)", "bodyText": "Fixes #6746.\nChanges proposed in this pull request:\n\nadd unit test", "createdAt": "2020-08-13T23:48:18Z", "url": "https://github.com/apache/shardingsphere/pull/6831", "merged": true, "mergeCommit": {"oid": "bf30ff286ee6af377f4dc980489430406fc3ed90"}, "closed": true, "closedAt": "2020-08-16T06:26:19Z", "author": {"login": "taojintianxia"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-UYKmgH2gAyNDY3NjkyOTM5OjRjZTRkZjBmZGE3NWQ1MWQyZjg1ZjllZTRiZjliYzUwYWI0MmQ2NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_Xx3wAFqTQ2ODAzNzE4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4ce4df0fda75d51d2f85f9ee4bf9bc50ab42d671", "author": {"user": {"login": "taojintianxia", "name": "\u5b59\u5ff5\u541b Sun Nianjun"}}, "url": "https://github.com/apache/shardingsphere/commit/4ce4df0fda75d51d2f85f9ee4bf9bc50ab42d671", "committedDate": "2020-08-12T23:53:53Z", "message": "Add: add test case for StatementContext (#6746)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "790d19ecafa845d169e4700960e9f095ecca3364", "author": {"user": {"login": "taojintianxia", "name": "\u5b59\u5ff5\u541b Sun Nianjun"}}, "url": "https://github.com/apache/shardingsphere/commit/790d19ecafa845d169e4700960e9f095ecca3364", "committedDate": "2020-08-13T23:33:20Z", "message": "Add: add test case for generateTokens (#6746)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af40f4df60b650b50533beba3f172cf8bbd0a4e3", "author": {"user": {"login": "taojintianxia", "name": "\u5b59\u5ff5\u541b Sun Nianjun"}}, "url": "https://github.com/apache/shardingsphere/commit/af40f4df60b650b50533beba3f172cf8bbd0a4e3", "committedDate": "2020-08-13T23:45:51Z", "message": "Add: add test case for generateTokens (#6746)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzEyODU5", "url": "https://github.com/apache/shardingsphere/pull/6831#pullrequestreview-467712859", "createdAt": "2020-08-14T16:31:46Z", "commit": {"oid": "af40f4df60b650b50533beba3f172cf8bbd0a4e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjozMTo0N1rOHA7GHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNjozMTo0N1rOHA7GHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDczMDI3MQ==", "bodyText": "Please add final if the class is not design for extension", "url": "https://github.com/apache/shardingsphere/pull/6831#discussion_r470730271", "createdAt": "2020-08-14T16:31:47Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-rewrite/shardingsphere-infra-rewrite-engine/src/test/java/org/apache/shardingsphere/infra/rewrite/context/SQLRewriteContextTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rewrite.context;\n+\n+import com.google.common.collect.Lists;\n+import org.apache.shardingsphere.infra.rewrite.parameter.builder.impl.GroupedParameterBuilder;\n+import org.apache.shardingsphere.infra.rewrite.parameter.builder.impl.StandardParameterBuilder;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.generator.CollectionSQLTokenGenerator;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.generator.OptionalSQLTokenGenerator;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.pojo.SQLToken;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.dml.SelectStatementContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class SQLRewriteContextTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af40f4df60b650b50533beba3f172cf8bbd0a4e3"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70913d0cab7588fc4065f3b3ebca3e2192e374c4", "author": {"user": {"login": "taojintianxia", "name": "\u5b59\u5ff5\u541b Sun Nianjun"}}, "url": "https://github.com/apache/shardingsphere/commit/70913d0cab7588fc4065f3b3ebca3e2192e374c4", "committedDate": "2020-08-14T20:17:16Z", "message": "Add: final modifier (#6746)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTQxMDY2", "url": "https://github.com/apache/shardingsphere/pull/6831#pullrequestreview-467941066", "createdAt": "2020-08-15T02:33:58Z", "commit": {"oid": "70913d0cab7588fc4065f3b3ebca3e2192e374c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTQxMTI3", "url": "https://github.com/apache/shardingsphere/pull/6831#pullrequestreview-467941127", "createdAt": "2020-08-15T02:35:15Z", "commit": {"oid": "70913d0cab7588fc4065f3b3ebca3e2192e374c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMjozNToxNVrOHBHHnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMjozNToxNVrOHBHHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkyNzI2MA==", "bodyText": "The SQL is SELECT * FROM tbl, but the parameter is 1.\nIt does not match", "url": "https://github.com/apache/shardingsphere/pull/6831#discussion_r470927260", "createdAt": "2020-08-15T02:35:15Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-rewrite/shardingsphere-infra-rewrite-engine/src/test/java/org/apache/shardingsphere/infra/rewrite/context/SQLRewriteContextTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.rewrite.context;\n+\n+import com.google.common.collect.Lists;\n+import org.apache.shardingsphere.infra.rewrite.parameter.builder.impl.GroupedParameterBuilder;\n+import org.apache.shardingsphere.infra.rewrite.parameter.builder.impl.StandardParameterBuilder;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.generator.CollectionSQLTokenGenerator;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.generator.OptionalSQLTokenGenerator;\n+import org.apache.shardingsphere.infra.rewrite.sql.token.pojo.SQLToken;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.dml.SelectStatementContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class SQLRewriteContextTest {\n+    \n+    @Mock\n+    private SQLStatementContext sqlStatementContext;\n+    \n+    @Mock\n+    private SchemaMetaData schemaMetaData;\n+    \n+    @Mock\n+    private SQLToken sqlToken;\n+    \n+    @Mock\n+    private OptionalSQLTokenGenerator optionalSQLTokenGenerator;\n+    \n+    @Mock\n+    private CollectionSQLTokenGenerator collectionSQLTokenGenerator;\n+    \n+    @Before\n+    public void setUp() {\n+        when(optionalSQLTokenGenerator.generateSQLToken(sqlStatementContext)).thenReturn(sqlToken);\n+        when(optionalSQLTokenGenerator.isGenerateSQLToken(sqlStatementContext)).thenReturn(true);\n+        when(collectionSQLTokenGenerator.generateSQLTokens(sqlStatementContext)).thenReturn(Lists.newArrayList(sqlToken));\n+        when(collectionSQLTokenGenerator.isGenerateSQLToken(sqlStatementContext)).thenReturn(true);\n+    }\n+    \n+    @Test\n+    public void assertInsertStatementContext() {\n+        InsertStatementContext statementContext = mock(InsertStatementContext.class);\n+        SQLRewriteContext sqlRewriteContext = new SQLRewriteContext(mock(SchemaMetaData.class), statementContext, \"INSERT INTO tbl VALUES (?)\", Collections.singletonList(1));\n+        assertThat(sqlRewriteContext.getParameterBuilder(), instanceOf(GroupedParameterBuilder.class));\n+    }\n+    \n+    @Test\n+    public void assertNotInsertStatementContext() {\n+        SelectStatementContext statementContext = mock(SelectStatementContext.class);\n+        SQLRewriteContext sqlRewriteContext = new SQLRewriteContext(mock(SchemaMetaData.class), statementContext, \"SELECT * FROM tbl\", Collections.singletonList(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70913d0cab7588fc4065f3b3ebca3e2192e374c4"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8cbd353d01ae6d78eacf1ba5080150194421a60", "author": {"user": {"login": "taojintianxia", "name": "\u5b59\u5ff5\u541b Sun Nianjun"}}, "url": "https://github.com/apache/shardingsphere/commit/b8cbd353d01ae6d78eacf1ba5080150194421a60", "committedDate": "2020-08-15T15:03:27Z", "message": "Refactor: refactor the test sql (#6746)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDM3MTgy", "url": "https://github.com/apache/shardingsphere/pull/6831#pullrequestreview-468037182", "createdAt": "2020-08-16T06:25:36Z", "commit": {"oid": "b8cbd353d01ae6d78eacf1ba5080150194421a60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4731, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}