{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODAwNDkx", "number": 7796, "title": "fix multi-table validation error for DML modify statements", "bodyText": "Ref #7731.\nChanges proposed in this pull request:\n\noptimize the validator check prompt message\nfix multi-table validation error for DML modify statements", "createdAt": "2020-10-15T04:55:07Z", "url": "https://github.com/apache/shardingsphere/pull/7796", "merged": true, "mergeCommit": {"oid": "65c04e322993986f8700b47a4baa2e664fc433e0"}, "closed": true, "closedAt": "2020-10-18T05:58:29Z", "author": {"login": "strongduanmu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSqXIYgH2gAyNTAzODAwNDkxOmQ3NWNlMjFhMjdkZjkyMzAyYmQwOGIzM2E2YjRmMTNiNjAyMDAyOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTpI8CAFqTUxMTAzNTkwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d75ce21a27df92302bd08b33a6b4f13b6020028d", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/d75ce21a27df92302bd08b33a6b4f13b6020028d", "committedDate": "2020-10-15T04:49:09Z", "message": "fix multi-table validation error for DML modify statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "454a94fe85fb08a10043009fbad7627936c17328", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/454a94fe85fb08a10043009fbad7627936c17328", "committedDate": "2020-10-15T04:54:27Z", "message": "modify test case param name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b8640a3f08fac23f1dcdebe071e835b25cbef9e", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/7b8640a3f08fac23f1dcdebe071e835b25cbef9e", "committedDate": "2020-10-15T05:05:50Z", "message": "resolve code conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjkwMDc1", "url": "https://github.com/apache/shardingsphere/pull/7796#pullrequestreview-509290075", "createdAt": "2020-10-15T11:45:33Z", "commit": {"oid": "7b8640a3f08fac23f1dcdebe071e835b25cbef9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0NTozM1rOHiDzkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0NTozM1rOHiDzkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NTk4NA==", "bodyText": "From my perspective, It is unnecessary to have SQL as an input parameter. Precisely speaking, It is a little heavy to pass SQL just for an exception. Maybe Cannot support such a Multiple-Table query for '$tableNames' is enough. What do you think?\nThe constrictions for multi-tables looks like incomplete? How about broadcast tables or the single table in the same instance with sharding tables (Maybe a postValidate()?).", "url": "https://github.com/apache/shardingsphere/pull/7796#discussion_r505475984", "createdAt": "2020-10-15T11:45:33Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/dml/ShardingDMLStatementValidator.java", "diffHunk": "@@ -31,11 +34,14 @@\n     /**\n      * Validate multiple table.\n      *\n+     * @param shardingRule sharding rule\n      * @param sqlStatementContext sqlStatementContext\n+     * @param sql sql\n      */\n-    protected void validateMultipleTable(final SQLStatementContext<T> sqlStatementContext) {\n-        if (1 != ((TableAvailable) sqlStatementContext).getAllTables().size()) {\n-            throw new ShardingSphereException(\"Cannot support Multiple-Table for '%s'.\", sqlStatementContext.getSqlStatement());\n+    protected void validateMultipleTable(final ShardingRule shardingRule, final SQLStatementContext<T> sqlStatementContext, final String sql) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8640a3f08fac23f1dcdebe071e835b25cbef9e"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a635202f759234ba4cba26ff6d32a50599ac7de", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/7a635202f759234ba4cba26ff6d32a50599ac7de", "committedDate": "2020-10-16T16:04:51Z", "message": "remove parameter sql and add broadcast table validate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59a000811276c29352df7994b62b7bc026b65d35", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/59a000811276c29352df7994b62b7bc026b65d35", "committedDate": "2020-10-16T16:06:37Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDMzMjA0", "url": "https://github.com/apache/shardingsphere/pull/7796#pullrequestreview-511033204", "createdAt": "2020-10-18T04:50:32Z", "commit": {"oid": "59a000811276c29352df7994b62b7bc026b65d35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNDo1MDozMlrOHjh18A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNDo1MjoyN1rOHjh2cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxNjY4OA==", "bodyText": "What's the string output of tableNames? Do you think that will be Cannot support Multiple-Table for 'tb1tb2tb3'?", "url": "https://github.com/apache/shardingsphere/pull/7796#discussion_r507016688", "createdAt": "2020-10-18T04:50:32Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/dml/ShardingDMLStatementValidator.java", "diffHunk": "@@ -18,24 +18,38 @@\n package org.apache.shardingsphere.sharding.route.engine.validator.dml;\n \n import org.apache.shardingsphere.infra.binder.statement.SQLStatementContext;\n-import org.apache.shardingsphere.infra.binder.type.TableAvailable;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n import org.apache.shardingsphere.sharding.route.engine.validator.ShardingStatementValidator;\n+import org.apache.shardingsphere.sharding.rule.ShardingRule;\n import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n \n+import java.util.Collection;\n+import java.util.LinkedList;\n+\n /**\n  * Sharding dml statement validator.\n  */\n public abstract class ShardingDMLStatementValidator<T extends SQLStatement> implements ShardingStatementValidator<T> {\n     \n     /**\n-     * Validate multiple table.\n+     * Validate sharding multiple table.\n      *\n+     * @param shardingRule sharding rule\n      * @param sqlStatementContext sqlStatementContext\n      */\n-    protected void validateMultipleTable(final SQLStatementContext<T> sqlStatementContext) {\n-        if (1 != ((TableAvailable) sqlStatementContext).getAllTables().size()) {\n-            throw new ShardingSphereException(\"Cannot support Multiple-Table for '%s'.\", sqlStatementContext.getSqlStatement());\n+    protected void validateShardingMultipleTable(final ShardingRule shardingRule, final SQLStatementContext<T> sqlStatementContext) {\n+        Collection<String> tableNames = sqlStatementContext.getTablesContext().getTableNames();\n+        Collection<String> shardingTableNames = shardingRule.getShardingLogicTableNames(tableNames);\n+        if ((1 == shardingTableNames.size() || shardingRule.isAllBindingTables(shardingTableNames)) && !isAllValidTables(shardingRule, tableNames)) {\n+            throw new ShardingSphereException(\"Cannot support Multiple-Table for '%s'.\", tableNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59a000811276c29352df7994b62b7bc026b65d35"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxNjgxNg==", "bodyText": "Do you think if ( !isAllValidTables(shardingRule, tableNames)) is enough?", "url": "https://github.com/apache/shardingsphere/pull/7796#discussion_r507016816", "createdAt": "2020-10-18T04:52:27Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/dml/ShardingDMLStatementValidator.java", "diffHunk": "@@ -18,24 +18,38 @@\n package org.apache.shardingsphere.sharding.route.engine.validator.dml;\n \n import org.apache.shardingsphere.infra.binder.statement.SQLStatementContext;\n-import org.apache.shardingsphere.infra.binder.type.TableAvailable;\n import org.apache.shardingsphere.infra.exception.ShardingSphereException;\n import org.apache.shardingsphere.sharding.route.engine.validator.ShardingStatementValidator;\n+import org.apache.shardingsphere.sharding.rule.ShardingRule;\n import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n \n+import java.util.Collection;\n+import java.util.LinkedList;\n+\n /**\n  * Sharding dml statement validator.\n  */\n public abstract class ShardingDMLStatementValidator<T extends SQLStatement> implements ShardingStatementValidator<T> {\n     \n     /**\n-     * Validate multiple table.\n+     * Validate sharding multiple table.\n      *\n+     * @param shardingRule sharding rule\n      * @param sqlStatementContext sqlStatementContext\n      */\n-    protected void validateMultipleTable(final SQLStatementContext<T> sqlStatementContext) {\n-        if (1 != ((TableAvailable) sqlStatementContext).getAllTables().size()) {\n-            throw new ShardingSphereException(\"Cannot support Multiple-Table for '%s'.\", sqlStatementContext.getSqlStatement());\n+    protected void validateShardingMultipleTable(final ShardingRule shardingRule, final SQLStatementContext<T> sqlStatementContext) {\n+        Collection<String> tableNames = sqlStatementContext.getTablesContext().getTableNames();\n+        Collection<String> shardingTableNames = shardingRule.getShardingLogicTableNames(tableNames);\n+        if ((1 == shardingTableNames.size() || shardingRule.isAllBindingTables(shardingTableNames)) && !isAllValidTables(shardingRule, tableNames)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59a000811276c29352df7994b62b7bc026b65d35"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDM1OTAy", "url": "https://github.com/apache/shardingsphere/pull/7796#pullrequestreview-511035902", "createdAt": "2020-10-18T05:57:40Z", "commit": {"oid": "59a000811276c29352df7994b62b7bc026b65d35"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3975, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}