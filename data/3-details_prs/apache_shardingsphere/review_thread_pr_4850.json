{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTEyNTE0", "number": 4850, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxMDo1MlrODpvV5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNzo0OFrODpvYyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDkzODYzOnYy", "diffSide": "RIGHT", "path": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxMDo1MlrOF5GojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoxOTozNFrOF5Ks9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMTgzNw==", "bodyText": "This method are pretty long, and lots of break in this method. Can you consider about extract them as serval small methods?", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395421837", "createdAt": "2020-03-20T03:10:52Z", "author": {"login": "terrymanu"}, "path": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java", "diffHunk": "@@ -43,17 +52,38 @@\n     \n     private List<Comparable<?>> orderValues;\n     \n-    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems) {\n+    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems, final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         this.queryResult = queryResult;\n         this.orderByItems = orderByItems;\n-        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive();\n+        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive(selectStatementContext, schemaMetaData);\n     }\n     \n     @SneakyThrows\n-    private List<Boolean> getOrderValuesCaseSensitive() {\n+    private List<Boolean> getOrderValuesCaseSensitive(final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         List<Boolean> result = new ArrayList<>(orderByItems.size());\n-        for (OrderByItem each : orderByItems) {\n-            result.add(queryResult.isCaseSensitive(each.getIndex()));\n+        for (OrderByItem eachOrderByItem : orderByItems) {\n+            for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n+                String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n+                TableMetaData tableMetaData = schemaMetaData.get(tableName);\n+                Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n+                OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n+                if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n+                    String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n+                    if (columns.containsKey(columnName)) {\n+                        result.add(columns.get(columnName).isCaseSensitive());\n+                        break;\n+                    }\n+                } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n+                    int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n+                    if (columns.values().toArray().length >= columnIndex) {\n+                        result.add(((ColumnMetaData) columns.values().toArray()[columnIndex - 1]).isCaseSensitive());\n+                        break;\n+                    }\n+                } else {\n+                    result.add(false);\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4ODUwMg==", "bodyText": "Fixed", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395488502", "createdAt": "2020-03-20T08:19:34Z", "author": {"login": "tuohai666"}, "path": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java", "diffHunk": "@@ -43,17 +52,38 @@\n     \n     private List<Comparable<?>> orderValues;\n     \n-    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems) {\n+    public OrderByValue(final QueryResult queryResult, final Collection<OrderByItem> orderByItems, final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         this.queryResult = queryResult;\n         this.orderByItems = orderByItems;\n-        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive();\n+        this.orderValuesCaseSensitive = getOrderValuesCaseSensitive(selectStatementContext, schemaMetaData);\n     }\n     \n     @SneakyThrows\n-    private List<Boolean> getOrderValuesCaseSensitive() {\n+    private List<Boolean> getOrderValuesCaseSensitive(final SelectStatementContext selectStatementContext, final SchemaMetaData schemaMetaData) {\n         List<Boolean> result = new ArrayList<>(orderByItems.size());\n-        for (OrderByItem each : orderByItems) {\n-            result.add(queryResult.isCaseSensitive(each.getIndex()));\n+        for (OrderByItem eachOrderByItem : orderByItems) {\n+            for (SimpleTableSegment eachSimpleTableSegment : selectStatementContext.getAllTables()) {\n+                String tableName = eachSimpleTableSegment.getTableName().getIdentifier().getValue();\n+                TableMetaData tableMetaData = schemaMetaData.get(tableName);\n+                Map<String, ColumnMetaData> columns = tableMetaData.getColumns();\n+                OrderByItemSegment orderByItemSegment = eachOrderByItem.getSegment();\n+                if (orderByItemSegment instanceof ColumnOrderByItemSegment) {\n+                    String columnName = ((ColumnOrderByItemSegment) orderByItemSegment).getColumn().getIdentifier().getValue();\n+                    if (columns.containsKey(columnName)) {\n+                        result.add(columns.get(columnName).isCaseSensitive());\n+                        break;\n+                    }\n+                } else if (orderByItemSegment instanceof IndexOrderByItemSegment) {\n+                    int columnIndex = ((IndexOrderByItemSegment) orderByItemSegment).getColumnIndex();\n+                    if (columns.values().toArray().length >= columnIndex) {\n+                        result.add(((ColumnMetaData) columns.values().toArray()[columnIndex - 1]).isCaseSensitive());\n+                        break;\n+                    }\n+                } else {\n+                    result.add(false);\n+                    break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMTgzNw=="}, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk0MTEzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxMzoyMFrOF5GqAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxMjoxMFrOF5380A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjIxMQ==", "bodyText": "Please re-design about the codes here.\nWe should never do something about the sql dialect in this module.", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422211", "createdAt": "2020-03-20T03:13:20Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "diffHunk": "@@ -60,9 +60,34 @@\n                 result.add(new ColumnMetaData(columnName, columnType, isPrimaryKey));\n             }\n         }\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(generateEmptyResultSQL(connection, table))) {\n+            for (ColumnMetaData each : result) {\n+                each.setCaseSensitive(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(each.getName())));\n+            }\n+        }\n         return result;\n     }\n     \n+    private static String generateEmptyResultSQL(final Connection connection, final String table) throws SQLException {\n+        String delimiterLeft;\n+        String delimiterRight;\n+        String url = connection.getMetaData().getURL();\n+        if (url.startsWith(\"jdbc:mysql:\")) {\n+            delimiterLeft = \"`\";\n+            delimiterRight = \"`\";\n+        } else if (url.startsWith(\"jdbc:oracle:\") || url.startsWith(\"jdbc:postgresql:\") || url.startsWith(\"jdbc:h2:\")) {\n+            delimiterLeft = \"\\\"\";\n+            delimiterRight = \"\\\"\";\n+        } else if (url.startsWith(\"jdbc:sqlserver:\")) {\n+            delimiterLeft = \"[\";\n+            delimiterRight = \"]\";\n+        } else {\n+            delimiterLeft = \"\";\n+            delimiterRight = \"\";\n+        }\n+        return \"SELECT * FROM \" + delimiterLeft + table + delimiterRight + \" WHERE 1 != 1;\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIyOTg0MA==", "bodyText": "Fixed.", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r396229840", "createdAt": "2020-03-23T06:12:10Z", "author": {"login": "tuohai666"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "diffHunk": "@@ -60,9 +60,34 @@\n                 result.add(new ColumnMetaData(columnName, columnType, isPrimaryKey));\n             }\n         }\n+        try (ResultSet resultSet = connection.createStatement().executeQuery(generateEmptyResultSQL(connection, table))) {\n+            for (ColumnMetaData each : result) {\n+                each.setCaseSensitive(resultSet.getMetaData().isCaseSensitive(resultSet.findColumn(each.getName())));\n+            }\n+        }\n         return result;\n     }\n     \n+    private static String generateEmptyResultSQL(final Connection connection, final String table) throws SQLException {\n+        String delimiterLeft;\n+        String delimiterRight;\n+        String url = connection.getMetaData().getURL();\n+        if (url.startsWith(\"jdbc:mysql:\")) {\n+            delimiterLeft = \"`\";\n+            delimiterRight = \"`\";\n+        } else if (url.startsWith(\"jdbc:oracle:\") || url.startsWith(\"jdbc:postgresql:\") || url.startsWith(\"jdbc:h2:\")) {\n+            delimiterLeft = \"\\\"\";\n+            delimiterRight = \"\\\"\";\n+        } else if (url.startsWith(\"jdbc:sqlserver:\")) {\n+            delimiterLeft = \"[\";\n+            delimiterRight = \"]\";\n+        } else {\n+            delimiterLeft = \"\";\n+            delimiterRight = \"\";\n+        }\n+        return \"SELECT * FROM \" + delimiterLeft + table + delimiterRight + \" WHERE 1 != 1;\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjIxMQ=="}, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk0NTQ1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNzoyN1rOF5GsfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoxOTo1NlrOF5Kthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjg0NA==", "bodyText": "Please do not use setter, we may keep consist with other fields.", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422844", "createdAt": "2020-03-20T03:17:27Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4ODY0Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395488646", "createdAt": "2020-03-20T08:19:56Z", "author": {"login": "tuohai666"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjg0NA=="}, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk0NjAyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNzo0OFrOF5Gszw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoyMDo1NVrOF5KvIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjkyNw==", "bodyText": "Please consider change isCaseSensitive to caseSensitive", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395422927", "createdAt": "2020-03-20T03:17:48Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4OTA1OQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/shardingsphere/pull/4850#discussion_r395489059", "createdAt": "2020-03-20T08:20:55Z", "author": {"login": "tuohai666"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "diffHunk": "@@ -36,4 +37,7 @@\n     private final String dataType;\n     \n     private final boolean primaryKey;\n+    \n+    @Setter\n+    private boolean isCaseSensitive;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjkyNw=="}, "originalCommit": {"oid": "73f5d7c64e3f235c8a7ce27c8ef7397013430569"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1140, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}