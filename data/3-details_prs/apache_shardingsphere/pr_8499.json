{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjMwOTk3", "number": 8499, "title": "Fixes #8488.", "bodyText": "Fixes #8488.\nChanges proposed in this pull request:", "createdAt": "2020-12-04T01:54:32Z", "url": "https://github.com/apache/shardingsphere/pull/8499", "merged": true, "mergeCommit": {"oid": "cb6b0622bf268a3d509e7f52876246cc31fecbcb"}, "closed": true, "closedAt": "2020-12-04T07:20:12Z", "author": {"login": "arthasking123"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdibm8XAH2gAyNTMyMjMwOTk3OjE2Y2YxNzI0MTBmNDJmM2UyMjVhNWNjOTBkMjI1ZjYzNWFjOGMwYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiyfRKAFqTU0NDcwNzQ4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16cf172410f42f3e225a5cc90d225f635ac8c0c1", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/16cf172410f42f3e225a5cc90d225f635ac8c0c1", "committedDate": "2020-12-03T04:40:38Z", "message": "Merge pull request #1 from apache/master\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a97eb33836148b0894351dc4e908b7f2b2f99e4", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/3a97eb33836148b0894351dc4e908b7f2b2f99e4", "committedDate": "2020-12-03T07:06:16Z", "message": "Merge pull request #2 from apache/master\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ac6486c2db268e377bd75b0ae9b55356c54dd9", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/36ac6486c2db268e377bd75b0ae9b55356c54dd9", "committedDate": "2020-12-03T10:13:05Z", "message": "add DatabaseBackendHandlerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dafdbbd1fd76ad87a6e03f06c4c46739bf3ab6f9", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/dafdbbd1fd76ad87a6e03f06c4c46739bf3ab6f9", "committedDate": "2020-12-03T10:16:44Z", "message": "Merge pull request #3 from apache/master\n\nmerge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/5a957f8c0510e283fe23d59b8329f006c89f68e5", "committedDate": "2020-12-04T01:43:12Z", "message": "add UnitTest for DatabaseBackendHandlerFactory,SchemaAssignedDatabaseBackendHandler,UnicastDatabaseBackendHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjI3MjY0", "url": "https://github.com/apache/shardingsphere/pull/8499#pullrequestreview-544627264", "createdAt": "2020-12-04T03:14:18Z", "commit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzoxNDoxOVrOH--6QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzoyNzowMlrOH-_KJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwNDQ4MQ==", "bodyText": "final class is suggested.", "url": "https://github.com/apache/shardingsphere/pull/8499#discussion_r535804481", "createdAt": "2020-12-04T03:14:19Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/UnicastDatabaseBackendHandlerTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.text.data.impl;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.infra.auth.Authentication;\n+import org.apache.shardingsphere.infra.auth.ProxyUser;\n+import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n+import org.apache.shardingsphere.infra.context.metadata.impl.StandardMetaDataContexts;\n+import org.apache.shardingsphere.infra.database.type.dialect.MySQLDatabaseType;\n+import org.apache.shardingsphere.infra.executor.kernel.ExecutorEngine;\n+import org.apache.shardingsphere.infra.metadata.ShardingSphereMetaData;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngine;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngineFactory;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n+import org.apache.shardingsphere.proxy.backend.context.ProxyContext;\n+import org.apache.shardingsphere.proxy.backend.response.header.ResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.response.header.update.UpdateResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.text.data.DatabaseBackendHandler;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.lang.reflect.Field;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class UnicastDatabaseBackendHandlerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwODExMw==", "bodyText": "Please remove this reductant blank line.", "url": "https://github.com/apache/shardingsphere/pull/8499#discussion_r535808113", "createdAt": "2020-12-04T03:25:41Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/UnicastDatabaseBackendHandlerTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.text.data.impl;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.infra.auth.Authentication;\n+import org.apache.shardingsphere.infra.auth.ProxyUser;\n+import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n+import org.apache.shardingsphere.infra.context.metadata.impl.StandardMetaDataContexts;\n+import org.apache.shardingsphere.infra.database.type.dialect.MySQLDatabaseType;\n+import org.apache.shardingsphere.infra.executor.kernel.ExecutorEngine;\n+import org.apache.shardingsphere.infra.metadata.ShardingSphereMetaData;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngine;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngineFactory;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n+import org.apache.shardingsphere.proxy.backend.context.ProxyContext;\n+import org.apache.shardingsphere.proxy.backend.response.header.ResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.response.header.update.UpdateResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.text.data.DatabaseBackendHandler;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.lang.reflect.Field;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class UnicastDatabaseBackendHandlerTest {\n+\n+    private static final String EXECUTE_SQL = \"SELECT 1 FROM user WHERE id = 1\";\n+\n+    private static final String SCHEMA_PATTERN = \"schema_%s\";\n+\n+    private UnicastDatabaseBackendHandler unicastDatabaseBackendHandler;\n+\n+    @Mock\n+    private BackendConnection backendConnection;\n+\n+    @Mock\n+    private DatabaseCommunicationEngineFactory databaseCommunicationEngineFactory;\n+\n+    @Mock\n+    private DatabaseCommunicationEngine databaseCommunicationEngine;\n+\n+    @Before\n+    public void setUp() throws IllegalAccessException, NoSuchFieldException, SQLException {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwODI5MQ==", "bodyText": "Please remove this reductant blank line.", "url": "https://github.com/apache/shardingsphere/pull/8499#discussion_r535808291", "createdAt": "2020-12-04T03:26:13Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/SchemaAssignedDatabaseBackendHandlerTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.text.data.impl;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.infra.auth.Authentication;\n+import org.apache.shardingsphere.infra.auth.ProxyUser;\n+import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n+import org.apache.shardingsphere.infra.context.metadata.impl.StandardMetaDataContexts;\n+import org.apache.shardingsphere.infra.database.type.dialect.MySQLDatabaseType;\n+import org.apache.shardingsphere.infra.executor.kernel.ExecutorEngine;\n+import org.apache.shardingsphere.infra.metadata.ShardingSphereMetaData;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngine;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngineFactory;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n+import org.apache.shardingsphere.proxy.backend.context.ProxyContext;\n+import org.apache.shardingsphere.proxy.backend.response.header.ResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.response.header.update.UpdateResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.text.data.DatabaseBackendHandler;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import java.lang.reflect.Field;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class SchemaAssignedDatabaseBackendHandlerTest {\n+\n+    private static final String EXECUTE_SQL = \"USE test\";\n+\n+    private static final String SCHEMA_PATTERN = \"schema_%s\";\n+\n+    private SchemaAssignedDatabaseBackendHandler schemaAssignedDatabaseBackendHandler;\n+\n+    @Mock\n+    private BackendConnection backendConnection;\n+\n+    @Mock\n+    private DatabaseCommunicationEngineFactory databaseCommunicationEngineFactory;\n+\n+    @Mock\n+    private DatabaseCommunicationEngine databaseCommunicationEngine;\n+\n+    @Before\n+    public void setUp() throws IllegalAccessException, NoSuchFieldException, SQLException {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwODUwOQ==", "bodyText": "IMO, final is preferable.", "url": "https://github.com/apache/shardingsphere/pull/8499#discussion_r535808509", "createdAt": "2020-12-04T03:26:51Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/impl/SchemaAssignedDatabaseBackendHandlerTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.text.data.impl;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.infra.auth.Authentication;\n+import org.apache.shardingsphere.infra.auth.ProxyUser;\n+import org.apache.shardingsphere.infra.config.properties.ConfigurationProperties;\n+import org.apache.shardingsphere.infra.context.metadata.impl.StandardMetaDataContexts;\n+import org.apache.shardingsphere.infra.database.type.dialect.MySQLDatabaseType;\n+import org.apache.shardingsphere.infra.executor.kernel.ExecutorEngine;\n+import org.apache.shardingsphere.infra.metadata.ShardingSphereMetaData;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngine;\n+import org.apache.shardingsphere.proxy.backend.communication.DatabaseCommunicationEngineFactory;\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n+import org.apache.shardingsphere.proxy.backend.context.ProxyContext;\n+import org.apache.shardingsphere.proxy.backend.response.header.ResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.response.header.update.UpdateResponseHeader;\n+import org.apache.shardingsphere.proxy.backend.text.data.DatabaseBackendHandler;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import java.lang.reflect.Field;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class SchemaAssignedDatabaseBackendHandlerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgwODU0OQ==", "bodyText": "IMO, final is preferable.", "url": "https://github.com/apache/shardingsphere/pull/8499#discussion_r535808549", "createdAt": "2020-12-04T03:27:02Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/text/data/DatabaseBackendHandlerFactoryTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.text.data;\n+\n+import org.apache.shardingsphere.proxy.backend.communication.jdbc.connection.BackendConnection;\n+import org.apache.shardingsphere.proxy.backend.text.data.impl.BroadcastDatabaseBackendHandler;\n+import org.apache.shardingsphere.proxy.backend.text.data.impl.SchemaAssignedDatabaseBackendHandler;\n+import org.apache.shardingsphere.proxy.backend.text.data.impl.UnicastDatabaseBackendHandler;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.dal.DALStatement;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.dal.SetStatement;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+\n+public class DatabaseBackendHandlerFactoryTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a957f8c0510e283fe23d59b8329f006c89f68e5"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30dfdf959f7524e7482deeb627e54124c88ffdc", "author": {"user": {"login": "arthasking123", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/c30dfdf959f7524e7482deeb627e54124c88ffdc", "committedDate": "2020-12-04T03:50:11Z", "message": "adjust code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NzA3NDg5", "url": "https://github.com/apache/shardingsphere/pull/8499#pullrequestreview-544707489", "createdAt": "2020-12-04T07:20:04Z", "commit": {"oid": "c30dfdf959f7524e7482deeb627e54124c88ffdc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4287, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}