{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NDI5NTQy", "number": 8575, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzo0NTowMFrOFDzKlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzo0NTowMFrOFDzKlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NTI4MzQwOnYy", "diffSide": "RIGHT", "path": "docs/document/content/features/sharding/principle/parse.cn.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzo0NTowMFrOIDn0HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzozOTozNFrOIDsnmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2ODk1Ng==", "bodyText": "Could you put these SQL cases and their formatted result into a table? For example, one row of a table contains one SQL column and its formatted output in another column. Therefore users can get a quick comparison, I guess.", "url": "https://github.com/apache/shardingsphere/pull/8575#discussion_r540668956", "createdAt": "2020-12-11T03:45:00Z", "author": {"login": "tristaZero"}, "path": "docs/document/content/features/sharding/principle/parse.cn.md", "diffHunk": "@@ -103,3 +103,108 @@ SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, \"STATEMEN\n SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);\n \n ```\n+\n+- SQL\u683c\u5f0f\u5316\n+\n+```\n+/**\n+ * databaseType type:String \u53ef\u80fd\u503c MySQL\n+ * useCache type:boolean \u662f\u5426\u4f7f\u7528\u7f13\u5b58\n+ * @return String\n+ */\n+ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache); \n+SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, \"FORMAT\");\n+String formatedSql = sqlVisitorEngine.visit(tree);\n+\n+//\u4f8b\u5b50\n+sql1 : select a+1 as b, name n from table1 join table2 where id=1 and name='lu';\n+sql2 : select id, name, age, sex, ss, yy from table1 where id=1;\n+sql3 : select id, name, age, count(*) as n, (select id, name, age, sex from table2 where id=2) as sid, yyyy from table1 where id=1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a68d5e6590f9874cafe4d2d75e45c7982eb7c5be"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc0NzY3NA==", "bodyText": "@tristaZero Ok.", "url": "https://github.com/apache/shardingsphere/pull/8575#discussion_r540747674", "createdAt": "2020-12-11T07:39:34Z", "author": {"login": "jingshanglu"}, "path": "docs/document/content/features/sharding/principle/parse.cn.md", "diffHunk": "@@ -103,3 +103,108 @@ SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, \"STATEMEN\n SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);\n \n ```\n+\n+- SQL\u683c\u5f0f\u5316\n+\n+```\n+/**\n+ * databaseType type:String \u53ef\u80fd\u503c MySQL\n+ * useCache type:boolean \u662f\u5426\u4f7f\u7528\u7f13\u5b58\n+ * @return String\n+ */\n+ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache); \n+SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, \"FORMAT\");\n+String formatedSql = sqlVisitorEngine.visit(tree);\n+\n+//\u4f8b\u5b50\n+sql1 : select a+1 as b, name n from table1 join table2 where id=1 and name='lu';\n+sql2 : select id, name, age, sex, ss, yy from table1 where id=1;\n+sql3 : select id, name, age, count(*) as n, (select id, name, age, sex from table2 where id=2) as sid, yyyy from table1 where id=1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2ODk1Ng=="}, "originalCommit": {"oid": "a68d5e6590f9874cafe4d2d75e45c7982eb7c5be"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 543, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}