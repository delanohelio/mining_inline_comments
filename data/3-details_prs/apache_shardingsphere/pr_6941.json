{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMDg2MTE2", "number": 6941, "title": "fix issue 6909", "bodyText": "Fixes #6909 .\nChanges proposed in this pull request:\n\nAdd more test cases for ShardingSpringNamespaceTest\nassertSimpleRule\nassertComplexRule\nassertBindingRule\nassertBroadcastRule\nassertAutoRule", "createdAt": "2020-08-19T10:54:14Z", "url": "https://github.com/apache/shardingsphere/pull/6941", "merged": true, "mergeCommit": {"oid": "78f6477c99bf21b06e083c5eb3ecb099786bbc37"}, "closed": true, "closedAt": "2020-08-20T15:23:37Z", "author": {"login": "jacksparrow414"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAZZPhAH2gAyNDcwMDg2MTE2OmI3ODYwZTg0MWM3Zjk0NjY0M2Y0OWVlZWEwYzdiNDdhOGQ4MDFhZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAx3RGgFqTQ3MTcyNDcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7860e841c7f946643f49eeea0c7b47a8d801af5", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/b7860e841c7f946643f49eeea0c7b47a8d801af5", "committedDate": "2020-08-19T10:52:26Z", "message": "fix issue 6909"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95bffb3d56eb42d219b6b74cdd9da3e4db6036c2", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/95bffb3d56eb42d219b6b74cdd9da3e4db6036c2", "committedDate": "2020-08-19T10:56:23Z", "message": "modify variable name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNDYyNTUx", "url": "https://github.com/apache/shardingsphere/pull/6941#pullrequestreview-471462551", "createdAt": "2020-08-20T10:26:11Z", "commit": {"oid": "95bffb3d56eb42d219b6b74cdd9da3e4db6036c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoyNjoxMVrOHD6EBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoyNjoxMVrOHD6EBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1OTA3OA==", "bodyText": "It is unnecessary for assert both broadcastTables.isEmpty() and assert size is 2", "url": "https://github.com/apache/shardingsphere/pull/6941#discussion_r473859078", "createdAt": "2020-08-20T10:26:11Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java", "diffHunk": "@@ -163,26 +185,70 @@ public void assertOrderKeyGenerator() {\n     \n     @Test\n     public void assertSimpleRule() {\n-        // TODO\n+        Collection<ShardingTableRuleConfiguration> actualSimpleRuleConfigurations = simpleRule.getTables();\n+        assertFalse(actualSimpleRuleConfigurations.isEmpty());\n+        assertThat(actualSimpleRuleConfigurations.size(), is(1));\n+        ShardingTableRuleConfiguration actualSimpleRuleConfiguration = actualSimpleRuleConfigurations.iterator().next();\n+        assertThat(actualSimpleRuleConfiguration.getLogicTable(), is(\"t_order\"));\n     }\n     \n     @Test\n     public void assertComplexRule() {\n-        // TODO\n+        Collection<ShardingTableRuleConfiguration> actualComplexRuleConfigurations = complexRule.getTables();\n+        assertFalse(actualComplexRuleConfigurations.isEmpty());\n+        assertThat(actualComplexRuleConfigurations.size(), is(1));\n+        ShardingTableRuleConfiguration actualComplexRuleConfiguration = actualComplexRuleConfigurations.iterator().next();\n+        assertThat(actualComplexRuleConfiguration.getLogicTable(), is(\"t_order\"));\n+        assertThat(actualComplexRuleConfiguration.getActualDataNodes(), is(\"ds_$->{0..1}.t_order_$->{0..3}\"));\n+        assertThat(actualComplexRuleConfiguration.getDatabaseShardingStrategy().getShardingAlgorithmName(), is(\"dataSourceShardingAlgorithm\"));\n+        assertThat(actualComplexRuleConfiguration.getTableShardingStrategy().getShardingAlgorithmName(), is(\"orderTableShardingAlgorithm\"));\n+        assertThat(actualComplexRuleConfiguration.getKeyGenerateStrategy().getKeyGeneratorName(), is(\"incrementAlgorithm\"));\n+        assertThat(complexRule.getDefaultKeyGenerateStrategy().getKeyGeneratorName(), is(\"incrementAlgorithm\"));\n+        \n     }\n     \n     @Test\n     public void assertBindingRule() {\n-        // TODO\n+        Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigurations = bindingRule.getTables();\n+        assertFalse(actualBindingTableRuleConfigurations.isEmpty());\n+        assertThat(actualBindingTableRuleConfigurations.size(), is(4));\n+        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigurations.iterator();\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_user\"));\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_user_detail\"));\n+        Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups();\n+        assertFalse(actualBindingTableGroups.isEmpty());\n+        assertThat(actualBindingTableGroups.size(), is(2));\n+        assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\", \"t_order, t_order_item\")));\n     }\n     \n     @Test\n     public void assertBroadcastRule() {\n-        // TODO\n+        Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigurations = broadcastRule.getTables();\n+        assertFalse(actualBroadcastTableConfigurations.isEmpty());\n+        assertThat(actualBroadcastTableConfigurations.size(), is(2));\n+        Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigurations.iterator();\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_order\"));\n+        assertThat(actualIterator.next().getLogicTable(), is(\"t_order_item\"));\n+        Collection<String> broadcastTables = broadcastRule.getBroadcastTables();\n+        assertFalse(broadcastTables.isEmpty());\n+        assertThat(broadcastTables.size(), is(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95bffb3d56eb42d219b6b74cdd9da3e4db6036c2"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baa40972b327e81f9e425110642b6821562728b2", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/baa40972b327e81f9e425110642b6821562728b2", "committedDate": "2020-08-20T10:43:02Z", "message": "fix issue 6909"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24b3a6ff1da8d98c2bc6ae271beb9cda0198f604", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/24b3a6ff1da8d98c2bc6ae271beb9cda0198f604", "committedDate": "2020-08-20T10:43:02Z", "message": "modify variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4200cd1fd8495c06e11a7e8c4e5dcac4c537cc29", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/4200cd1fd8495c06e11a7e8c4e5dcac4c537cc29", "committedDate": "2020-08-20T10:56:08Z", "message": "Optimize the assertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "164e55caa23bfaf0cfbebc9c4252372fd1b17b4e", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/164e55caa23bfaf0cfbebc9c4252372fd1b17b4e", "committedDate": "2020-08-20T11:00:18Z", "message": "Merge branch 'issue6909' of https://github.com/jacksparrow414/shardingsphere into issue6909\n\n# Conflicts:\n#\tshardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-namespace/src/test/java/org/apache/shardingsphere/sharding/spring/namespace/ShardingSpringNamespaceTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acb394d7d8856657146c732cd089c2fdd1520102", "author": {"user": {"login": "jacksparrow414", "name": "Serendipity"}}, "url": "https://github.com/apache/shardingsphere/commit/acb394d7d8856657146c732cd089c2fdd1520102", "committedDate": "2020-08-20T12:33:16Z", "message": "Merge remote-tracking branch 'upstream/master' into issue6909"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzI0NzEx", "url": "https://github.com/apache/shardingsphere/pull/6941#pullrequestreview-471724711", "createdAt": "2020-08-20T15:22:57Z", "commit": {"oid": "acb394d7d8856657146c732cd089c2fdd1520102"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4752, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}