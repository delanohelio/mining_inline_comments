{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMTMzMzg0", "number": 3959, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjoyMDoyNlrODZFcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjoyMjowMlrODZFdOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjMwMjQ1OnYy", "diffSide": "RIGHT", "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjoyMDoyNlrOFfSL4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjoyMDoyNlrOFfSL4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0ODEyOQ==", "bodyText": "Please keep origin indent", "url": "https://github.com/apache/shardingsphere/pull/3959#discussion_r368348129", "createdAt": "2020-01-20T02:20:26Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "diffHunk": "@@ -44,15 +44,15 @@\n     public boolean next() throws SQLException {\n         return mergedResult.next();\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16687819e776f7fc699bb0dcaeaeda81c0b7847d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjMwMzk0OnYy", "diffSide": "RIGHT", "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjoyMjowMlrOFfSMvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwMzo1Nzo1NFrOFft5VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0ODM1MQ==", "bodyText": "The logic below may better:\n\njudge queryWithCipherColumn or not\n\nif !queryWithCipherColumn, return mergedResult.getValue(columnIndex, type)\nif queryWithCipherColumn,  get value via mergedResult.getValue(columnIndex, String.class)\n\nif value is null, return null\nif value is not null, findEncryptor and return decrypt value", "url": "https://github.com/apache/shardingsphere/pull/3959#discussion_r368348351", "createdAt": "2020-01-20T02:22:02Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "diffHunk": "@@ -44,15 +44,15 @@\n     public boolean next() throws SQLException {\n         return mergedResult.next();\n     }\n-    \n+\n     @Override\n     public Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n-        Object value = mergedResult.getValue(columnIndex, type);\n-        if (null == value || !queryWithCipherColumn) {\n-            return value;\n+        Optional<Encryptor> encryptor;\n+        if (!queryWithCipherColumn || !(encryptor = metaData.findEncryptor(columnIndex)).isPresent()) {\n+            return mergedResult.getValue(columnIndex, type);\n         }\n-        Optional<Encryptor> encryptor = metaData.findEncryptor(columnIndex);\n-        return encryptor.isPresent() ? encryptor.get().decrypt(value.toString()) : value;\n+        String ciphertext = (String) mergedResult.getValue(columnIndex, String.class);\n+        return null == ciphertext ? null : encryptor.get().decrypt(ciphertext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16687819e776f7fc699bb0dcaeaeda81c0b7847d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MjI2OQ==", "bodyText": "The encryptor should also judge whether it is null. For example, the id(bigint) is unencrypted and should be executed\nmergedResult.getValue(columnIndex, type)\nOr you mean it's too complicated:\nif (!queryWithCipherColumn || !(encryptor = metaData.findEncryptor(columnIndex)).isPresent())", "url": "https://github.com/apache/shardingsphere/pull/3959#discussion_r368492269", "createdAt": "2020-01-20T11:10:44Z", "author": {"login": "longjy"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "diffHunk": "@@ -44,15 +44,15 @@\n     public boolean next() throws SQLException {\n         return mergedResult.next();\n     }\n-    \n+\n     @Override\n     public Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n-        Object value = mergedResult.getValue(columnIndex, type);\n-        if (null == value || !queryWithCipherColumn) {\n-            return value;\n+        Optional<Encryptor> encryptor;\n+        if (!queryWithCipherColumn || !(encryptor = metaData.findEncryptor(columnIndex)).isPresent()) {\n+            return mergedResult.getValue(columnIndex, type);\n         }\n-        Optional<Encryptor> encryptor = metaData.findEncryptor(columnIndex);\n-        return encryptor.isPresent() ? encryptor.get().decrypt(value.toString()) : value;\n+        String ciphertext = (String) mergedResult.getValue(columnIndex, String.class);\n+        return null == ciphertext ? null : encryptor.get().decrypt(ciphertext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0ODM1MQ=="}, "originalCommit": {"oid": "16687819e776f7fc699bb0dcaeaeda81c0b7847d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUyMjk4Ng==", "bodyText": "Yes, it is too complicated", "url": "https://github.com/apache/shardingsphere/pull/3959#discussion_r368522986", "createdAt": "2020-01-20T12:29:35Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "diffHunk": "@@ -44,15 +44,15 @@\n     public boolean next() throws SQLException {\n         return mergedResult.next();\n     }\n-    \n+\n     @Override\n     public Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n-        Object value = mergedResult.getValue(columnIndex, type);\n-        if (null == value || !queryWithCipherColumn) {\n-            return value;\n+        Optional<Encryptor> encryptor;\n+        if (!queryWithCipherColumn || !(encryptor = metaData.findEncryptor(columnIndex)).isPresent()) {\n+            return mergedResult.getValue(columnIndex, type);\n         }\n-        Optional<Encryptor> encryptor = metaData.findEncryptor(columnIndex);\n-        return encryptor.isPresent() ? encryptor.get().decrypt(value.toString()) : value;\n+        String ciphertext = (String) mergedResult.getValue(columnIndex, String.class);\n+        return null == ciphertext ? null : encryptor.get().decrypt(ciphertext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0ODM1MQ=="}, "originalCommit": {"oid": "16687819e776f7fc699bb0dcaeaeda81c0b7847d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwMjEzMg==", "bodyText": "Code style fixed", "url": "https://github.com/apache/shardingsphere/pull/3959#discussion_r368802132", "createdAt": "2020-01-21T03:57:54Z", "author": {"login": "longjy"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dql/EncryptMergedResult.java", "diffHunk": "@@ -44,15 +44,15 @@\n     public boolean next() throws SQLException {\n         return mergedResult.next();\n     }\n-    \n+\n     @Override\n     public Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n-        Object value = mergedResult.getValue(columnIndex, type);\n-        if (null == value || !queryWithCipherColumn) {\n-            return value;\n+        Optional<Encryptor> encryptor;\n+        if (!queryWithCipherColumn || !(encryptor = metaData.findEncryptor(columnIndex)).isPresent()) {\n+            return mergedResult.getValue(columnIndex, type);\n         }\n-        Optional<Encryptor> encryptor = metaData.findEncryptor(columnIndex);\n-        return encryptor.isPresent() ? encryptor.get().decrypt(value.toString()) : value;\n+        String ciphertext = (String) mergedResult.getValue(columnIndex, String.class);\n+        return null == ciphertext ? null : encryptor.get().decrypt(ciphertext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0ODM1MQ=="}, "originalCommit": {"oid": "16687819e776f7fc699bb0dcaeaeda81c0b7847d"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1008, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}