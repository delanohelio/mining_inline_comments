{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNzQyNzI2", "number": 6951, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDo0ODoxMFrOEaeHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjo0OTo1OFrOEaxfIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTkxODAxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDo0ODoxMVrOHD7F2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozMjoxM1rOHD8qgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg3NTkyOQ==", "bodyText": "Please replace with @EqualsAndHashCode.", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r473875929", "createdAt": "2020-08-20T10:48:11Z", "author": {"login": "Lucas-307"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "diffHunk": "@@ -49,4 +49,12 @@ public H2DataSourceMetaData getDataSourceMetaData(final String url, final String\n     public DatabaseType getTrunkDatabaseType() {\n         return DatabaseTypes.getActualDatabaseType(\"MySQL\");\n     }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (!(obj instanceof DatabaseType)) {\n+            return false;\n+        }\n+        return getName().equals(((DatabaseType) obj).getName());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b6b8615de83063a256d1bd720514cf45c128e2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkwMTY5OA==", "bodyText": "thx for your guide", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r473901698", "createdAt": "2020-08-20T11:32:13Z", "author": {"login": "taojintianxia"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "diffHunk": "@@ -49,4 +49,12 @@ public H2DataSourceMetaData getDataSourceMetaData(final String url, final String\n     public DatabaseType getTrunkDatabaseType() {\n         return DatabaseTypes.getActualDatabaseType(\"MySQL\");\n     }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (!(obj instanceof DatabaseType)) {\n+            return false;\n+        }\n+        return getName().equals(((DatabaseType) obj).getName());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg3NTkyOQ=="}, "originalCommit": {"oid": "d5b6b8615de83063a256d1bd720514cf45c128e2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA3NzMyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjo0MTowOFrOHEZogw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjo0MTowOFrOHEZogw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3NjMyMw==", "bodyText": "Please do not change original code if unnecessary.", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r474376323", "createdAt": "2020-08-21T02:41:08Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "diffHunk": "@@ -28,12 +30,11 @@\n /**\n  * Database type of H2.\n  */\n+@EqualsAndHashCode\n public final class H2DatabaseType implements BranchDatabaseType {\n     \n-    @Override\n-    public String getName() {\n-        return \"H2\";\n-    }\n+    @Getter\n+    private final String name = \"H2\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02ba735ff98ed75aab977ce08a3c61e2bb1c6b9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA3OTAwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-scaling/shardingsphere-scaling-core/src/test/java/org/apache/shardingsphere/scaling/core/config/JDBCDataSourceConfigurationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjo0MjoxOFrOHEZpiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTowNTowM1rOHEkb8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3NjU4Nw==", "bodyText": "Please remove useless blank line", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r474376587", "createdAt": "2020-08-21T02:42:18Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-scaling/shardingsphere-scaling-core/src/test/java/org/apache/shardingsphere/scaling/core/config/JDBCDataSourceConfigurationTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.scaling.core.config;\n+\n+import org.apache.shardingsphere.infra.database.type.dialect.H2DatabaseType;\n+import org.apache.shardingsphere.infra.database.type.dialect.MariaDBDatabaseType;\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.junit.Assert.assertThat;\n+\n+public final class JDBCDataSourceConfigurationTest {\n+    \n+    @Test\n+    public void assertJDBCDataSourceConfigurationEquals() {\n+        JDBCDataSourceConfiguration sourceConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        JDBCDataSourceConfiguration targetConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        assertThat(sourceConfiguration, is(targetConfiguration));\n+        \n+        sourceConfiguration.setDatabaseType(new MariaDBDatabaseType());\n+        targetConfiguration.setDatabaseType(new MariaDBDatabaseType());\n+        assertThat(sourceConfiguration, is(targetConfiguration));\n+    }\n+    \n+    @Test\n+    public void assertJDBCDataSourceConfigurationNotEquals() {\n+        JDBCDataSourceConfiguration sourceConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"sa\", \"root\");\n+        JDBCDataSourceConfiguration targetConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        assertThat(sourceConfiguration, not(targetConfiguration));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02ba735ff98ed75aab977ce08a3c61e2bb1c6b9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU1MzMzMQ==", "bodyText": "done", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r474553331", "createdAt": "2020-08-21T09:05:03Z", "author": {"login": "taojintianxia"}, "path": "shardingsphere-scaling/shardingsphere-scaling-core/src/test/java/org/apache/shardingsphere/scaling/core/config/JDBCDataSourceConfigurationTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.scaling.core.config;\n+\n+import org.apache.shardingsphere.infra.database.type.dialect.H2DatabaseType;\n+import org.apache.shardingsphere.infra.database.type.dialect.MariaDBDatabaseType;\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.not;\n+import static org.junit.Assert.assertThat;\n+\n+public final class JDBCDataSourceConfigurationTest {\n+    \n+    @Test\n+    public void assertJDBCDataSourceConfigurationEquals() {\n+        JDBCDataSourceConfiguration sourceConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        JDBCDataSourceConfiguration targetConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        assertThat(sourceConfiguration, is(targetConfiguration));\n+        \n+        sourceConfiguration.setDatabaseType(new MariaDBDatabaseType());\n+        targetConfiguration.setDatabaseType(new MariaDBDatabaseType());\n+        assertThat(sourceConfiguration, is(targetConfiguration));\n+    }\n+    \n+    @Test\n+    public void assertJDBCDataSourceConfigurationNotEquals() {\n+        JDBCDataSourceConfiguration sourceConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"sa\", \"root\");\n+        JDBCDataSourceConfiguration targetConfiguration = new JDBCDataSourceConfiguration(\"jdbc:mysql://127.0.0.1:3306/test2?serverTimezone=UTC&useSSL=false\", \"root\", \"root\");\n+        assertThat(sourceConfiguration, not(targetConfiguration));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3NjU4Nw=="}, "originalCommit": {"oid": "b02ba735ff98ed75aab977ce08a3c61e2bb1c6b9"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA5MjE5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjo0OTo1OFrOHEZxIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTowNToxMVrOHEkcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3ODUyOQ==", "bodyText": "maybe put @getter above class is better.", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r474378529", "createdAt": "2020-08-21T02:49:58Z", "author": {"login": "Lucas-307"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "diffHunk": "@@ -28,12 +30,11 @@\n /**\n  * Database type of H2.\n  */\n+@EqualsAndHashCode\n public final class H2DatabaseType implements BranchDatabaseType {\n     \n-    @Override\n-    public String getName() {\n-        return \"H2\";\n-    }\n+    @Getter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b02ba735ff98ed75aab977ce08a3c61e2bb1c6b9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU1MzQzMg==", "bodyText": "done", "url": "https://github.com/apache/shardingsphere/pull/6951#discussion_r474553432", "createdAt": "2020-08-21T09:05:11Z", "author": {"login": "taojintianxia"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/database/type/dialect/H2DatabaseType.java", "diffHunk": "@@ -28,12 +30,11 @@\n /**\n  * Database type of H2.\n  */\n+@EqualsAndHashCode\n public final class H2DatabaseType implements BranchDatabaseType {\n     \n-    @Override\n-    public String getName() {\n-        return \"H2\";\n-    }\n+    @Getter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3ODUyOQ=="}, "originalCommit": {"oid": "b02ba735ff98ed75aab977ce08a3c61e2bb1c6b9"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 369, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}