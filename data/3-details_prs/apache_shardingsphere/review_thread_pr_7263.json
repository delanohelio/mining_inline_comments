{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNDc3MTcx", "number": 7263, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwOToyNzoyOVrOEgll9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwOToyNzoyOVrOEgll9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjA1ODE1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareCheckerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQwOToyNzoyOVrOHNg4Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMzozNjowN1rOHNiE1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMjIxMQ==", "bodyText": "I suppose other database SQL  Statements except for MySQL are not wanted here. See the name of this class.", "url": "https://github.com/apache/shardingsphere/pull/7263#discussion_r483932211", "createdAt": "2020-09-05T09:27:29Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareCheckerTest.java", "diffHunk": "@@ -81,12 +98,17 @@\n     @Test\n     public void assertIsStatementAllowed() {\n         List<SQLStatement> statementList = Arrays.asList(\n-            new AlterTableStatement(mock(SimpleTableSegment.class)), new AlterUserStatement(), new MySQLAnalyzeTableStatement(), new MySQLCacheIndexStatement(),\n+            new AlterTableStatement(mock(SimpleTableSegment.class)), new MySQLAlterUserStatement(), new OracleAlterUserStatement(), \n+            new PostgreSQLAlterUserStatement(), new SQLServerAlterUserStatement(), new MySQLAnalyzeTableStatement(), new MySQLCacheIndexStatement(),\n             new CallStatement(), new ChangeMasterStatement(), new MySQLChecksumTableStatement(), new CommitStatement(), new CreateIndexStatement(), new DropIndexStatement(),\n-            new CreateDatabaseStatement(\"\"), new DropDatabaseStatement(\"\"), new CreateTableStatement(mock(SimpleTableSegment.class)), new DropTableStatement(), new CreateUserStatement(),\n-            new RenameUserStatement(), new DropUserStatement(), new CreateViewStatement(), new DropViewStatement(), new DeleteStatement(), new DoStatement(), new MySQLFlushStatement(),\n-            new GrantStatement(), new InsertStatement(), new MySQLInstallPluginStatement(), new MySQLKillStatement(), new MySQLLoadIndexInfoStatement(), new MySQLOptimizeTableStatement(),\n-            new RenameTableStatement(), new MySQLRepairTableStatement(), new MySQLResetStatement(), new RevokeStatement(), new SelectStatement(), new SetStatement(), new MySQLShowWarningsStatement(),\n+            new CreateDatabaseStatement(\"\"), new DropDatabaseStatement(\"\"), new CreateTableStatement(mock(SimpleTableSegment.class)), new DropTableStatement(), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6662e8d1b753b09a71b3b1d01fa42d7c45a5e0ff"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk1MTgzMA==", "bodyText": "I suppose other database SQL Statements except for MySQL are not wanted here. See the name of this class.\n\n@tristaZero I am very sorry for this mistake, and I will check this logic again. \ud83e\udd23", "url": "https://github.com/apache/shardingsphere/pull/7263#discussion_r483951830", "createdAt": "2020-09-05T13:36:07Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/proxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareCheckerTest.java", "diffHunk": "@@ -81,12 +98,17 @@\n     @Test\n     public void assertIsStatementAllowed() {\n         List<SQLStatement> statementList = Arrays.asList(\n-            new AlterTableStatement(mock(SimpleTableSegment.class)), new AlterUserStatement(), new MySQLAnalyzeTableStatement(), new MySQLCacheIndexStatement(),\n+            new AlterTableStatement(mock(SimpleTableSegment.class)), new MySQLAlterUserStatement(), new OracleAlterUserStatement(), \n+            new PostgreSQLAlterUserStatement(), new SQLServerAlterUserStatement(), new MySQLAnalyzeTableStatement(), new MySQLCacheIndexStatement(),\n             new CallStatement(), new ChangeMasterStatement(), new MySQLChecksumTableStatement(), new CommitStatement(), new CreateIndexStatement(), new DropIndexStatement(),\n-            new CreateDatabaseStatement(\"\"), new DropDatabaseStatement(\"\"), new CreateTableStatement(mock(SimpleTableSegment.class)), new DropTableStatement(), new CreateUserStatement(),\n-            new RenameUserStatement(), new DropUserStatement(), new CreateViewStatement(), new DropViewStatement(), new DeleteStatement(), new DoStatement(), new MySQLFlushStatement(),\n-            new GrantStatement(), new InsertStatement(), new MySQLInstallPluginStatement(), new MySQLKillStatement(), new MySQLLoadIndexInfoStatement(), new MySQLOptimizeTableStatement(),\n-            new RenameTableStatement(), new MySQLRepairTableStatement(), new MySQLResetStatement(), new RevokeStatement(), new SelectStatement(), new SetStatement(), new MySQLShowWarningsStatement(),\n+            new CreateDatabaseStatement(\"\"), new DropDatabaseStatement(\"\"), new CreateTableStatement(mock(SimpleTableSegment.class)), new DropTableStatement(), ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzMjIxMQ=="}, "originalCommit": {"oid": "6662e8d1b753b09a71b3b1d01fa42d7c45a5e0ff"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 319, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}