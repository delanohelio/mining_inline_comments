{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzE1MjU3", "number": 4498, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0NDoyNlrODjcwWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNzozNlrODju9LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDk3ODgxOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0NDoyNlrOFvQz3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0NDoyNlrOFvQz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMjgxMw==", "bodyText": "Class should be final.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385102813", "createdAt": "2020-02-27T12:44:26Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -36,10 +37,11 @@\n import static org.mockito.ArgumentMatchers.anyLong;\n import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.doAnswer;\n import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.doThrow;\n \n public class NacosConfigInstanceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cd74e21a65650068e7cb8915d162290760f5da"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDk4MTg2OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0NToyOVrOFvQ1rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0NToyOVrOFvQ1rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMzI3OQ==", "bodyText": "This should keep blank character.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385103279", "createdAt": "2020-02-27T12:45:29Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -74,7 +76,7 @@ public void assertPersist() {\n         nacosConfigCenterRepository.persist(\"/sharding/test\", value);\n         verify(configService).publishConfig(\"sharding.test\", group, value);\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cd74e21a65650068e7cb8915d162290760f5da"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTAwNDk3OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo1MjozM1rOFvRDKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo1MjozM1rOFvRDKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwNjcyOA==", "bodyText": "we can import static org.junit.Assert.assertThat; and use assertEquals directly, keep the same with other test class.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385106728", "createdAt": "2020-02-27T12:52:33Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -101,6 +103,68 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         Assert.assertEquals(expectValue, actualValue[0]);\n     }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cd74e21a65650068e7cb8915d162290760f5da"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTA2OTYyOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzoxMzozNFrOFvRrFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMzo0ODoyOFrOFvS04g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNjk0OA==", "bodyText": "AdditionalAnswers also import static class.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385116948", "createdAt": "2020-02-27T13:13:34Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -101,6 +103,68 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         Assert.assertEquals(expectValue, actualValue[0]);\n     }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+\n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        Assert.assertEquals(expectValue, actualValue[0]);\n+        Assert.assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchDeletedChangedType() {\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(null)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cd74e21a65650068e7cb8915d162290760f5da"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEzNTg0Mg==", "bodyText": "'AdditionalAnswers' can not be used  'static import' to import.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385135842", "createdAt": "2020-02-27T13:48:28Z", "author": {"login": "haetao"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -101,6 +103,68 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n         Assert.assertEquals(expectValue, actualValue[0]);\n     }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        Assert.assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+\n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        Assert.assertEquals(expectValue, actualValue[0]);\n+        Assert.assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);\n+    }\n+\n+    @Test\n+    @SneakyThrows\n+    public void assertWatchDeletedChangedType() {\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(null)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExNjk0OA=="}, "originalCommit": {"oid": "81cd74e21a65650068e7cb8915d162290760f5da"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzQwMTMwOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo0OToyNFrOFvoBkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo0OToyNFrOFvoBkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4MzE1NQ==", "bodyText": "Blank lines need to be indented\uff0cplease check.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385483155", "createdAt": "2020-02-28T02:49:24Z", "author": {"login": "menghaoranss"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +101,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25910093669d772926948e54004d719061349a8c"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzQ1ODgwOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMzozMToxOFrOFvokMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMzo0NDo1N1rOFvouHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5MjAxOA==", "bodyText": "Please use assertThat instead of assertEquals", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385492018", "createdAt": "2020-02-28T03:31:18Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +101,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertEquals(expectValue, actualValue[0]);\n+        assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4634bed05aad5f07757200d63b5365de5c92d9c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5NDU1Ng==", "bodyText": "Ok, I'll mdify it.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385494556", "createdAt": "2020-02-28T03:44:57Z", "author": {"login": "haetao"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +101,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertEquals(expectValue, actualValue[0]);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertEquals(null, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertEquals(expectValue, actualValue[0]);\n+        assertEquals(DataChangedEvent.ChangedType.UPDATED, actualType[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5MjAxOA=="}, "originalCommit": {"oid": "f4634bed05aad5f07757200d63b5365de5c92d9c"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk0NDI0OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMToxMlrOFvtAaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMToxMlrOFvtAaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NDc3OQ==", "bodyText": "Please use assertNull", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385564779", "createdAt": "2020-02-28T08:31:12Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk0NTE5OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMTozM1rOFvtA_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMTozM1rOFvtA_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NDkyNQ==", "bodyText": "Do not need mock if return null", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385564925", "createdAt": "2020-02-28T08:31:33Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk0OTY5OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMzoyNVrOFvtD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozMzoyNVrOFvtD1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NTY1Mg==", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385565652", "createdAt": "2020-02-28T08:33:25Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -80,7 +83,7 @@ public void assertPersist() {\n     public void assertGet() {\n         String value = \"value\";\n         when(configService.getConfig(eq(\"sharding.test\"), eq(group), anyLong())).thenReturn(value);\n-        Assert.assertEquals(value, nacosConfigCenterRepository.get(\"/sharding/test\"));\n+        assertThat(value, is(nacosConfigCenterRepository.get(\"/sharding/test\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk1MzEyOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNDo0NFrOFvtF0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNDo0NFrOFvtF0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjE2Mg==", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566162", "createdAt": "2020-02-28T08:34:44Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk1MzkxOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNTowM1rOFvtGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNTowM1rOFvtGQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjI3Mw==", "bodyText": "Please use assertNull", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566273", "createdAt": "2020-02-28T08:35:03Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk1NzIzOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNjoyN1rOFvtIUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNjoyN1rOFvtIUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NjgwMQ==", "bodyText": "Please do not use Class.InnerClass, just put Class.InnerClass into import statements", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385566801", "createdAt": "2020-02-28T08:36:27Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk2MDc2OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNzozNlrOFvtKVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODozNzozNlrOFvtKVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2NzMxNg==", "bodyText": "The first arg of assertThat is actual, second arg is expected.\nIt is reversed.", "url": "https://github.com/apache/shardingsphere/pull/4498#discussion_r385567316", "createdAt": "2020-02-28T08:37:36Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -99,7 +102,69 @@ public void onChange(final DataChangedEvent dataChangedEvent) {\n             }\n         };\n         nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n-        Assert.assertEquals(expectValue, actualValue[0]);\n+        assertThat(expectValue, is(actualValue[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWithNonExistentKey() {\n+        when(configService.getConfig(eq(\"sharding.nonExistentKey\"), eq(group), anyLong())).thenReturn(null);\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/nonExistentKey\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertGetWhenThrowException() {\n+        doThrow(NacosException.class).when(configService).getConfig(eq(\"sharding.test\"), eq(group), anyLong());\n+        assertThat(null, is(nacosConfigCenterRepository.get(\"/sharding/test\")));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertUpdate() {\n+        String updatedValue = \"newValue\";\n+        nacosConfigCenterRepository.persist(\"/sharding/test\", updatedValue);\n+        verify(configService).publishConfig(\"sharding.test\", group, updatedValue);\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchUpdatedChangedType() {\n+        final String expectValue = \"expectValue\";\n+        final String[] actualValue = {null};\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(expectValue)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualValue[0] = dataChangedEvent.getValue();\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertThat(expectValue, is(actualValue[0]));\n+        assertThat(DataChangedEvent.ChangedType.UPDATED, is(actualType[0]));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertWatchDeletedChangedType() {\n+        final DataChangedEvent.ChangedType[] actualType = {null};\n+        doAnswer(AdditionalAnswers.answerVoid(getListenerAnswer(null)))\n+                .when(configService)\n+                .addListener(anyString(), anyString(), any(Listener.class));\n+        DataChangedEventListener listener = new DataChangedEventListener() {\n+    \n+            @Override\n+            public void onChange(final DataChangedEvent dataChangedEvent) {\n+                actualType[0] = dataChangedEvent.getChangedType();\n+            }\n+        };\n+        nacosConfigCenterRepository.watch(\"/sharding/test\", listener);\n+        assertThat(DataChangedEvent.ChangedType.UPDATED, is(actualType[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeb90e611f93a55404b99030d204fde452b6fed2"}, "originalPosition": 111}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1191, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}