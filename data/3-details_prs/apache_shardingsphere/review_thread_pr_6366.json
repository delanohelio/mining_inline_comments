{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMDEwNjY3", "number": 6366, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjozMzo0NlrOEPX69Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjowNzowMVrOEP-y8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTU2MDIxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjozMzo0NlrOGzDT4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjozNzowMlrOGzDXJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4NDgwMw==", "bodyText": "Hi, sout is suggested to remove.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456184803", "createdAt": "2020-07-17T02:33:46Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        System.out.println(\"Start...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e69ad8d734c46de79e7448cdda021ed751cc5e0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4NTYzOA==", "bodyText": "done.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456185638", "createdAt": "2020-07-17T02:37:02Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        System.out.println(\"Start...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4NDgwMw=="}, "originalCommit": {"oid": "7e69ad8d734c46de79e7448cdda021ed751cc5e0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTU5MTY2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjo1MjozNVrOGzDmhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMjo1MjozNVrOGzDmhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE4OTU3NA==", "bodyText": "Hi ``\nMaybe we can consider something like the following statement. I mean, we had better avoid the comparison of the absolute characters, like \"Oracle\".\n\nconnection.getMetaData().getDatabaseProductName().equals(databaseType).\n\nIt is not hard, could you give it a change?", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456189574", "createdAt": "2020-07-17T02:52:35Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "diffHunk": "@@ -36,7 +36,7 @@ public static String getSchema(final Connection connection, final String databas\n         String result = null;\n         try {\n             if (\"Oracle\".equals(databaseType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e69ad8d734c46de79e7448cdda021ed751cc5e0"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTYxMTE5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMzowNDo0N1rOGzDx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMzowNDo0N1rOGzDx-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE5MjUwNA==", "bodyText": "Hi, Please firstly look at the travis-ci test, which showed there is something wrong with your PR. I presume it is about check style here.\nBesides, I hope there is no Oracle database instance required for your unit test. Otherwise, It is supposed to be removed.\nI know those comments may frustrate you somehow, but what you did is entirely open to the whole community. I believe you also want to be a significant part of this community as well, don't you?\nIf you need any help, please contact me.  :-)\nBest,\nTrista\nI am sorry", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456192504", "createdAt": "2020-07-17T03:04:47Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        System.out.println(\"Start...\");\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e69ad8d734c46de79e7448cdda021ed751cc5e0"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTY5MjIyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMzo1NToyNVrOGzEfrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMToxODo1M1rOGzPQ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA==", "bodyText": "What is the  jdbc driver ?", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456204204", "createdAt": "2020-07-17T03:55:25Z", "author": {"login": "yu199195"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNTg1Ng==", "bodyText": "I used externl lib to run this file.\nDo you have another way to do?", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456205856", "createdAt": "2020-07-17T04:02:34Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA=="}, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzMTk1OQ==", "bodyText": "test ci will not pass, ,maybe you can mock oracle datasource to complete this PR.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456231959", "createdAt": "2020-07-17T05:50:14Z", "author": {"login": "yu199195"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA=="}, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3NzQ0NA==", "bodyText": "I need to connect to real oracle database. Is it work to mock oracle database?", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456277444", "createdAt": "2020-07-17T07:48:38Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA=="}, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2MTcyOA==", "bodyText": "All of our database tests are mocks\uff0c If  a real database, how can someone else's environment have one\uff1f", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456361728", "createdAt": "2020-07-17T10:33:45Z", "author": {"login": "yu199195"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA=="}, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4MDY2MA==", "bodyText": "but the bug will not occur when mocking db nor an oracle db which just have one app user, it will just happen when an oracle db has multi users. Without real db, how can i prove i have fixed it.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r456380660", "createdAt": "2020-07-17T11:18:53Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Test;\n+\n+import javax.sql.DataSource;\n+import java.io.PrintWriter;\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.SQLException;\n+import java.sql.SQLFeatureNotSupportedException;\n+import java.util.LinkedList;\n+import java.util.logging.Logger;\n+\n+public final class SchemaMetaDataLoaderTest {\n+    private static int minIdleCount = 3;\n+    private static int maxIdleCount = 10;\n+    private static int currentIdleCount = 0;\n+    private static final LinkedList<Connection> connectionsPool = new LinkedList<Connection>();\n+\n+    @Test\n+    public void assertloadAllTableNamesForOracle() throws SQLException {\n+        LiteDatasource dataSource = new LiteDatasource();\n+        SchemaMetaDataLoader.load(dataSource,5,\"Oracle\");\n+    }\n+\n+    class LiteDatasource implements DataSource{\n+        private String url = \"jdbc:oracle:thin:@192.168.1.1:1521/orcl\";\n+        private String user = \"test\";\n+        private String password = \"111111\";\n+        public LiteDatasource(){\n+            try {\n+                for (int i = 0; i < SchemaMetaDataLoaderTest.maxIdleCount; i++) {\n+                    Class.forName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIwNDIwNA=="}, "originalCommit": {"oid": "201d6145511404a416263333b2642da03fc4b6f4"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTMyNTI0OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMjo1NDowNVrOGz1LEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNDo1NTozMVrOGz4GSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwMTc0NA==", "bodyText": "maybe \uff1a\n            if (null != metaData) {\n                return Optional.ofNullable(metaData.getUserName()).map(String::toUpperCase).orElse(null);\n            } else {\n                return null;\n            }", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457001744", "createdAt": "2020-07-20T02:54:05Z", "author": {"login": "yu199195"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "diffHunk": "@@ -36,7 +37,12 @@ public static String getSchema(final Connection connection, final String databas\n         String result = null;\n         try {\n             if (\"Oracle\".equals(databaseType)) {\n-                return null;\n+                DatabaseMetaData metaData = connection.getMetaData();\n+                if (null != metaData) {\n+                    return metaData.getUserName() == null ? null : metaData.getUserName().toUpperCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a19d7987ef6bee8082b73fe77d2f58ba3a2d5f08"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0Nzc0NQ==", "bodyText": "Hi @feiweihy\nI know that. Generally, we need a unit test to verify the changes from anyone. Here another our committer gave the same conclusion, which made me believe it very well may be correct. Thanks for your response.\nI looked at Travis and triggered it again. However, the result shows,\n[INFO] -------------------------------------------------------\n1119[INFO]  T E S T S\n1120[INFO] -------------------------------------------------------\n1121[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaDataLoaderTest\n1122[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.917 s - in org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaDataLoaderTest\n1123[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoaderTest\n1124[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.024 s <<< FAILURE! - in org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoaderTest\n1125[ERROR] assertOracleLoad(org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoaderTest)  Time elapsed: 0.012 s  <<< ERROR!\n1126java.lang.NullPointerException\n1127\tat org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoaderTest.assertOracleLoad(IndexMetaDataLoaderTest.java:71)\n1128\n1129[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.MetaDataConnectionTest\n1130[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in org.apache.shardingsphere.sql.parser.binder.metadata.MetaDataConnectionTest\n1131[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.util.JdbcUtilTest\n1132[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.008 s <<< FAILURE! - in org.apache.shardingsphere.sql.parser.binder.metadata.util.JdbcUtilTest\n1133[ERROR] assertOracleGetSchema(org.apache.shardingsphere.sql.parser.binder.metadata.util.JdbcUtilTest)  Time elapsed: 0.001 s  <<< ERROR!\n1134java.lang.NullPointerException\n1135\tat org.apache.shardingsphere.sql.parser.binder.metadata.util.JdbcUtilTest.assertOracleGetSchema(JdbcUtilTest.java:47)\n1136\n1137[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.table.SchemaMetaDataTest\n1138[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.239 s - in org.apache.shardingsphere.sql.parser.binder.metadata.table.SchemaMetaDataTest\n1139[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataLoaderTest\n1140[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.176 s - in org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataLoaderTest\n1141[INFO] Running org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataTest\n1142[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataTest\n1143[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.LimitPaginationContextEngineTest\n1144[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.LimitPaginationContextEngineTest\n1145[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.RowNumberPaginationContextEngineTest\n1146[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.RowNumberPaginationContextEngineTest\n1147[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.TopPaginationContextEngineTest\n1148[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.TopPaginationContextEngineTest\n1149[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.PaginationContextEngineTest\n1150[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.engine.PaginationContextEngineTest\n1151[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.PaginationContextTest\n1152[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.06 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.pagination.PaginationContextTest\n1153[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.orderby.engine.OrderByContextEngineTest\n1154[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.orderby.engine.OrderByContextEngineTest\n1155[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.orderby.OrderByItemTest\n1156[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.145 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.orderby.OrderByItemTest\n1157[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.groupby.engine.GroupByContextEngineTest\n1158[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.groupby.engine.GroupByContextEngineTest\n1159[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.ProjectionsContextTest\n1160[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.ProjectionsContextTest\n1161[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.DerivedColumnTest\n1162[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.DerivedColumnTest\n1163[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.engine.ProjectionsContextEngineTest\n1164[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.046 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.engine.ProjectionsContextEngineTest\n1165[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.engine.ProjectionEngineTest\n1166[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.099 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.engine.ProjectionEngineTest\n1167[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.impl.ShorthandProjectionTest\n1168[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.impl.ShorthandProjectionTest\n1169[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.select.projection.impl.AggregationDistinctProjectionTest\n1170[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.apache.shardingsphere.sql.parser.binder.segment.select.projection.impl.AggregationDistinctProjectionTest\n1171[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.insert.values.InsertValueContextTest\n1172[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in org.apache.shardingsphere.sql.parser.binder.segment.insert.values.InsertValueContextTest\n1173[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.insert.values.expression.DerivedParameterMarkerExpressionSegmentTest\n1174[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in org.apache.shardingsphere.sql.parser.binder.segment.insert.values.expression.DerivedParameterMarkerExpressionSegmentTest\n1175[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.insert.values.expression.DerivedLiteralExpressionSegmentTest\n1176[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in org.apache.shardingsphere.sql.parser.binder.segment.insert.values.expression.DerivedLiteralExpressionSegmentTest\n1177[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContextTest\n1178[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContextTest\n1179[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.insert.keygen.engine.GeneratedKeyContextEngineTest\n1180[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in org.apache.shardingsphere.sql.parser.binder.segment.insert.keygen.engine.GeneratedKeyContextEngineTest\n1181[INFO] Running org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContextTest\n1182[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 s - in org.apache.shardingsphere.sql.parser.binder.segment.table.TablesContextTest\n1183[INFO] Running org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContextFactoryTest\n1184[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.122 s - in org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContextFactoryTest\n1185[INFO] Running org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest\n1186[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest\n1187[INFO] Running org.apache.shardingsphere.sql.parser.binder.statement.impl.SelectStatementContextTest\n1188[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in org.apache.shardingsphere.sql.parser.binder.statement.impl.SelectStatementContextTest\n1189[INFO] \n1190[INFO] Results:\n1191[INFO] \n1192[ERROR] Errors: \n1193[ERROR]   IndexMetaDataLoaderTest.assertOracleLoad:71 \u00bb NullPointer\n1194[ERROR]   JdbcUtilTest.assertOracleGetSchema:47 \u00bb NullPointer\n1195[INFO] \n1196[ERROR] Tests run: 133, Failures: 0, Errors: 2, Skipped: 0\n1197[INFO] \n1198[INFO] \n1199[INFO] ------------------------------------------------------------------------\n1200[INFO] Skipping shardingsphere\n1201[INFO] This project has been banned from the build due to previous failures.\n1202[INFO] ------------------------------------------------------------------------\n1203[INFO] ------------------------------------------------------------------------\n1204[INFO] Reactor Summary for shardingsphere 5.0.0-RC1-SNAPSHOT:\n1205[INFO] \n1206[INFO] shardingsphere ..................................... SUCCESS [  6.580 s]\n1207[INFO] shardingsphere-sql-parser .......................... SUCCESS [  0.849 s]\n1208[INFO] shardingsphere-sql-parser-spi ...................... SUCCESS [  3.980 s]\n1209[INFO] shardingsphere-sql-parser-statement ................ SUCCESS [ 14.323 s]\n1210[INFO] shardingsphere-sql-parser-engine ................... SUCCESS [  7.343 s]\n1211[INFO] shardingsphere-sql-parser-binder ................... FAILURE [ 10.002 s]\n1212[INFO] shardingsphere-sql-parser-dialect .................. SKIPPED\n1213[INFO] shardingsphere-sql-parser-sql92 .................... SKIPPED\n1214[INFO] shardingsphere-sql-parser-mysql .................... SKIPPED\n1215[INFO] shardingsphere-sql-parser-postgresql ............... SKIPPED\n1216[INFO] shardingsphere-sql-parser-oracle ................... SKIPPED\n1217[INFO] shardingsphere-sql-parser-sqlserver ................ SKIPPED\n1218[INFO] shardingsphere-sql-parser-test ..................... SKIPPED\n1219[INFO] shardingsphere-db-protocol ......................... SKIPPED\n1220[INFO] shardingsphere-db-protocol-core .................... SKIPPED\n1221[INFO] shardingsphere-db-protocol-mysql ................... SKIPPED\n1222[INFO] shardingsphere-db-protocol-postgresql .............. SKIPPED\n1223[INFO] shardingsphere-infra ............................... SKIPPED\n1224[INFO] shardingsphere-infra-common ........................ SKIPPED\n1225[INFO] shardingsphere-infra-route ......................... SKIPPED\n1226[INFO] shardingsphere-infra-rewrite ....................... SKIPPED\n1227[INFO] shardingsphere-infra-rewrite-engine ................ SKIPPED\n1228[INFO] shardingsphere-infra-rewrite-test .................. SKIPPED\n1229[INFO] shardingsphere-infra-executor ...................... SKIPPED\n1230[INFO] shardingsphere-infra-merge ......................... SKIPPED\n1231[INFO] shardingsphere-transaction ......................... SKIPPED\n1232[INFO] shardingsphere-transaction-core .................... SKIPPED\n1233[INFO] shardingsphere-kernel .............................. SKIPPED\n1234[INFO] shardingsphere-kernel-context ...................... SKIPPED\n1235[INFO] shardingsphere-features ............................ SKIPPED\n1236[INFO] shardingsphere-sharding ............................ SKIPPED\n1237[INFO] shardingsphere-sharding-api ........................ SKIPPED\n1238[INFO] shardingsphere-sharding-common ..................... SKIPPED\n1239[INFO] shardingsphere-sharding-route ...................... SKIPPED\n1240[INFO] shardingsphere-master-slave ........................ SKIPPED\n1241[INFO] shardingsphere-master-slave-api .................... SKIPPED\n1242[INFO] shardingsphere-master-slave-common ................. SKIPPED\n1243[INFO] shardingsphere-master-slave-route .................. SKIPPED\n1244[INFO] shardingsphere-encrypt ............................. SKIPPED\n1245[INFO] shardingsphere-encrypt-api ......................... SKIPPED\n1246[INFO] shardingsphere-encrypt-common ...................... SKIPPED\n1247[INFO] shardingsphere-encrypt-rewrite ..................... SKIPPED\n1248[INFO] shardingsphere-sharding-rewrite .................... SKIPPED\n1249[INFO] shardingsphere-shadow .............................. SKIPPED\n1250[INFO] shardingsphere-shadow-api .......................... SKIPPED\n1251[INFO] shardingsphere-shadow-common ....................... SKIPPED\n1252[INFO] shardingsphere-shadow-rewrite ...................... SKIPPED\n1253[INFO] shardingsphere-shadow-route ........................ SKIPPED\n1254[INFO] shardingsphere-sharding-merge ...................... SKIPPED\n1255[INFO] shardingsphere-encrypt-merge ....................... SKIPPED\n1256[INFO] shardingsphere-replica ............................. SKIPPED\n1257[INFO] shardingsphere-replica-api ......................... SKIPPED\n1258[INFO] shardingsphere-replica-common ...................... SKIPPED\n1259[INFO] shardingsphere-replica-route ....................... SKIPPED\n1260[INFO] shardingsphere-replica-execute ..................... SKIPPED\n1261[INFO] shardingsphere-jdbc ................................ SKIPPED\n1262[INFO] shardingsphere-jdbc-core ........................... SKIPPED\n1263[INFO] shardingsphere-control-panel ....................... SKIPPED\n1264[INFO] shardingsphere-control-panel-spi ................... SKIPPED\n1265[INFO] shardingsphere-metrics ............................. SKIPPED\n1266[INFO] shardingsphere-metrics-configuration ............... SKIPPED\n1267[INFO] shardingsphere-cluster ............................. SKIPPED\n1268[INFO] shardingsphere-cluster-configuration ............... SKIPPED\n1269[INFO] shardingsphere-orchestration ....................... SKIPPED\n1270[INFO] shardingsphere-orchestration-core .................. SKIPPED\n1271[INFO] shardingsphere-orchestration-core-configuration .... SKIPPED\n1272[INFO] shardingsphere-orchestration-center ................ SKIPPED\n1273[INFO] shardingsphere-orchestration-center-api ............ SKIPPED\n1274[INFO] shardingsphere-orchestration-core-common ........... SKIPPED\n1275[INFO] shardingsphere-orchestration-core-configcenter ..... SKIPPED\n1276[INFO] shardingsphere-orchestration-core-registrycenter ... SKIPPED\n1277[INFO] shardingsphere-orchestration-core-metadatacenter ... SKIPPED\n1278[INFO] shardingsphere-orchestration-core-facade ........... SKIPPED\n1279[INFO] shardingsphere-orchestration-center-configuration .. SKIPPED\n1280[INFO] shardingsphere-cluster-heartbeat ................... SKIPPED\n1281[INFO] shardingsphere-cluster-state ....................... SKIPPED\n1282[INFO] shardingsphere-cluster-facade ...................... SKIPPED\n1283[INFO] shardingsphere-jdbc-orchestration .................. SKIPPED\n1284[INFO] shardingsphere-jdbc-spring ......................... SKIPPED\n1285[INFO] shardingsphere-jdbc-spring-infra ................... SKIPPED\n1286[INFO] shardingsphere-jdbc-spring-boot-starter-infra ...... SKIPPED\n1287[INFO] shardingsphere-jdbc-spring-namespace-infra ......... SKIPPED\n1288[INFO] shardingsphere-sharding-spring ..................... SKIPPED\n1289[INFO] shardingsphere-sharding-spring-boot-starter ........ SKIPPED\n1290[INFO] shardingsphere-shadow-spring ....................... SKIPPED\n1291[INFO] shardingsphere-shadow-spring-boot-starter .......... SKIPPED\n1292[INFO] shardingsphere-encrypt-spring ...................... SKIPPED\n1293[INFO] shardingsphere-encrypt-spring-boot-starter ......... SKIPPED\n1294[INFO] shardingsphere-master-slave-spring ................. SKIPPED\n1295[INFO] shardingsphere-master-slave-spring-boot-starter .... SKIPPED\n1296[INFO] shardingsphere-jdbc-transaction-spring ............. SKIPPED\n1297[INFO] shardingsphere-jdbc-core-spring .................... SKIPPED\n1298[INFO] shardingsphere-jdbc-core-spring-boot-starter ....... SKIPPED\n1299[INFO] shardingsphere-sharding-spring-namespace ........... SKIPPED\n1300[INFO] shardingsphere-master-slave-spring-namespace ....... SKIPPED\n1301[INFO] shardingsphere-encrypt-spring-namespace ............ SKIPPED\n1302[INFO] shardingsphere-shadow-spring-namespace ............. SKIPPED\n1303[INFO] shardingsphere-jdbc-core-spring-namespace .......... SKIPPED\n1304[INFO] shardingsphere-jdbc-orchestration-spring ........... SKIPPED\n1305[INFO] shardingsphere-jdbc-orchestration-spring-boot-starter SKIPPED\n1306[INFO] shardingsphere-jdbc-orchestration-spring-namespace . SKIPPED\n1307[INFO] shardingsphere-metrics-spi ......................... SKIPPED\n1308[INFO] shardingsphere-proxy ............................... SKIPPED\n1309[INFO] shardingsphere-proxy-common ........................ SKIPPED\n1310[INFO] shardingsphere-transaction-2pc ..................... SKIPPED\n1311[INFO] shardingsphere-transaction-xa ...................... SKIPPED\n1312[INFO] shardingsphere-transaction-xa-spi .................. SKIPPED\n1313[INFO] shardingsphere-transaction-xa-atomikos ............. SKIPPED\n1314[INFO] shardingsphere-transaction-xa-core ................. SKIPPED\n1315[INFO] shardingsphere-proxy-backend ....................... SKIPPED\n1316[INFO] shardingsphere-proxy-frontend ...................... SKIPPED\n1317[INFO] shardingsphere-proxy-frontend-spi .................. SKIPPED\n1318[INFO] shardingsphere-proxy-frontend-core ................. SKIPPED\n1319[INFO] shardingsphere-proxy-frontend-mysql ................ SKIPPED\n1320[INFO] shardingsphere-proxy-frontend-postgresql ........... SKIPPED\n1321[INFO] shardingsphere-orchestration-center-zookeeper-curator SKIPPED\n1322[INFO] shardingsphere-metrics-facade ...................... SKIPPED\n1323[INFO] shardingsphere-orchestration-core-schema ........... SKIPPED\n1324[INFO] shardingsphere-proxy-orchestration ................. SKIPPED\n1325[INFO] shardingsphere-opentracing ......................... SKIPPED\n1326[INFO] shardingsphere-metrics-prometheus .................. SKIPPED\n1327[INFO] shardingsphere-proxy-bootstrap ..................... SKIPPED\n1328[INFO] shardingsphere-sharding-time-service ............... SKIPPED\n1329[INFO] shardingsphere-scaling ............................. SKIPPED\n1330[INFO] shardingsphere-scaling-core ........................ SKIPPED\n1331[INFO] shardingsphere-scaling-mysql ....................... SKIPPED\n1332[INFO] shardingsphere-scaling-postgresql .................. SKIPPED\n1333[INFO] shardingsphere-scaling-bootstrap ................... SKIPPED\n1334[INFO] shardingsphere-transaction-xa-narayana ............. SKIPPED\n1335[INFO] shardingsphere-transaction-xa-bitronix ............. SKIPPED\n1336[INFO] shardingsphere-transaction-base .................... SKIPPED\n1337[INFO] shardingsphere-transaction-base-seata-at ........... SKIPPED\n1338[INFO] shardingsphere-control-panel-core .................. SKIPPED\n1339[INFO] shardingsphere-orchestration-center-etcd ........... SKIPPED\n1340[INFO] shardingsphere-orchestration-center-apollo ......... SKIPPED\n1341[INFO] shardingsphere-orchestration-center-nacos .......... SKIPPED\n1342[INFO] shardingsphere-integration-test .................... SKIPPED\n1343[INFO] shardingsphere-test-fixture ........................ SKIPPED\n1344[INFO] shardingsphere-proxy-docker-build .................. SKIPPED\n1345[INFO] shardingsphere-test-suite .......................... SKIPPED\n1346[INFO] shardingsphere-distribution ........................ SKIPPED\n1347[INFO] shardingsphere-src-distribution .................... SKIPPED\n1348[INFO] shardingsphere-jdbc-distribution ................... SKIPPED\n1349[INFO] shardingsphere-proxy-distribution .................. SKIPPED\n1350[INFO] shardingsphere-scaling-distribution ................ SKIPPED\n1351[INFO] ------------------------------------------------------------------------\n1352[INFO] BUILD FAILURE\n1353[INFO] ------------------------------------------------------------------------\n1354[INFO] Total time:  45.093 s\n1355[INFO] Finished at: 2020-07-19T01:51:23Z\n1356[INFO] ------------------------------------------------------------------------\n1357[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.0:test (default-test) on project shardingsphere-sql-parser-binder: There are test failures.\n\nTrista\n\nI have edited codes according to @yu199195 upstairs\nMeantime I provide  unit test SchemaMetaDataLoaderTest\nIn this unit test, it just run in an non-real database environment. For real database, I will run it in our test environment.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457047745", "createdAt": "2020-07-20T04:51:15Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "diffHunk": "@@ -36,7 +37,12 @@ public static String getSchema(final Connection connection, final String databas\n         String result = null;\n         try {\n             if (\"Oracle\".equals(databaseType)) {\n-                return null;\n+                DatabaseMetaData metaData = connection.getMetaData();\n+                if (null != metaData) {\n+                    return metaData.getUserName() == null ? null : metaData.getUserName().toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwMTc0NA=="}, "originalCommit": {"oid": "a19d7987ef6bee8082b73fe77d2f58ba3a2d5f08"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA0OTY3NA==", "bodyText": "I ran project in Travis CI.\nThere is no error in compiling stage, but at last error occur:\n[INFO] shardingsphere-control-panel-core .................. SUCCESS [  0.197 s]\n[INFO] shardingsphere-orchestration-center-etcd ........... SUCCESS [ 27.249 s]\n[INFO] shardingsphere-orchestration-center-apollo ......... SUCCESS [ 34.137 s]\n[INFO] shardingsphere-orchestration-center-nacos .......... SUCCESS [ 13.047 s]\n[INFO] shardingsphere-integration-test .................... SUCCESS [  0.713 s]\n[INFO] shardingsphere-test-fixture ........................ SUCCESS [  0.485 s]\n[INFO] shardingsphere-proxy-docker-build .................. SUCCESS [  1.355 s]\n[INFO] shardingsphere-test-suite .......................... SUCCESS [02:06 min]\n[INFO] shardingsphere-distribution ........................ SUCCESS [  0.196 s]\n[INFO] shardingsphere-src-distribution .................... SUCCESS [  1.144 s]\n[INFO] shardingsphere-jdbc-distribution ................... SUCCESS [  1.042 s]\n[INFO] shardingsphere-proxy-distribution .................. SUCCESS [  1.008 s]\n[INFO] shardingsphere-scaling-distribution ................ SUCCESS [ 32.450 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  25:40 min\n[INFO] Finished at: 2020-07-20T04:29:11Z\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.eluder.coveralls:coveralls-maven-plugin:4.3.0:report (default-cli) on project shardingsphere: Processing of input or output data failed: Report submission to Coveralls API failed with HTTP status 422: Unprocessable Entity (Couldn't find a repository matching this job.) -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n/home/travis/.travis/functions: line 607:  4457 Terminated              travis_jigger \"${!}\" \"${timeout}\" \"${cmd[@]}\"\nThe command \"travis_wait 30 mvn --batch-mode --no-transfer-progress clean install cobertura:cobertura coveralls:report -DrepoToken=\"${COVERALLS_REPO_TOKEN}\" -Dmaven.javadoc.skip=true\" exited with 1.\ncache.2\nstore build cache\nafter_failure\n0.00s$ echo \"build failed!\"\nI think my codes will not lead to this result.\nWhat is your opinion?@tristaZero @yu199195", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457049674", "createdAt": "2020-07-20T04:55:31Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/util/JdbcUtil.java", "diffHunk": "@@ -36,7 +37,12 @@ public static String getSchema(final Connection connection, final String databas\n         String result = null;\n         try {\n             if (\"Oracle\".equals(databaseType)) {\n-                return null;\n+                DatabaseMetaData metaData = connection.getMetaData();\n+                if (null != metaData) {\n+                    return metaData.getUserName() == null ? null : metaData.getUserName().toUpperCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAwMTc0NA=="}, "originalCommit": {"oid": "a19d7987ef6bee8082b73fe77d2f58ba3a2d5f08"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTkyOTQ3OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjowNzowMVrOGz6GnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjo1MTozN1rOGz7j6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4MjUyNQ==", "bodyText": "Hi @feiweihy Now this PR looks great. Good job!\nHere is the last one to improve, please remove this redundant line.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457082525", "createdAt": "2020-07-20T06:07:01Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class SchemaMetaDataLoaderTest {\n+    private static final String TEST_CATALOG = \"catalog\";\n+\n+    private static final String TABLE_TYPE = \"TABLE\";\n+\n+    private static final int MAX_CONNECTION_COUNT = 5;\n+\n+    private static final String DATABASE_TYPE_ORACLE = \"Oracle\";\n+\n+    @Mock\n+    private DataSource dataSource;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+\n+    @Mock\n+    private ResultSet tableExistResultSet;\n+\n+    @Before\n+    public void setUp() throws SQLException {\n+        when(dataSource.getConnection()).thenReturn(connection);\n+        when(connection.getCatalog()).thenReturn(TEST_CATALOG);\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getTables(TEST_CATALOG, null, null, new String[]{TABLE_TYPE})).thenReturn(tableExistResultSet);\n+    }\n+\n+    @Test\n+    public void assertLoadAllTableNamesForOracle() throws SQLException {\n+        SchemaMetaDataLoader.load(dataSource, MAX_CONNECTION_COUNT, DATABASE_TYPE_ORACLE);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7d2a5afa19e7edd0ded520b092153eb5aa2be1"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA5OTczNg==", "bodyText": "This function is unit test for codes I edited.\nSo I added two lines in this function.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457099736", "createdAt": "2020-07-20T06:39:55Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class SchemaMetaDataLoaderTest {\n+    private static final String TEST_CATALOG = \"catalog\";\n+\n+    private static final String TABLE_TYPE = \"TABLE\";\n+\n+    private static final int MAX_CONNECTION_COUNT = 5;\n+\n+    private static final String DATABASE_TYPE_ORACLE = \"Oracle\";\n+\n+    @Mock\n+    private DataSource dataSource;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+\n+    @Mock\n+    private ResultSet tableExistResultSet;\n+\n+    @Before\n+    public void setUp() throws SQLException {\n+        when(dataSource.getConnection()).thenReturn(connection);\n+        when(connection.getCatalog()).thenReturn(TEST_CATALOG);\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getTables(TEST_CATALOG, null, null, new String[]{TABLE_TYPE})).thenReturn(tableExistResultSet);\n+    }\n+\n+    @Test\n+    public void assertLoadAllTableNamesForOracle() throws SQLException {\n+        SchemaMetaDataLoader.load(dataSource, MAX_CONNECTION_COUNT, DATABASE_TYPE_ORACLE);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4MjUyNQ=="}, "originalCommit": {"oid": "de7d2a5afa19e7edd0ded520b092153eb5aa2be1"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwMzYxMA==", "bodyText": "Sorry, I mean here is a blank line at line 75, and it is useless, could you remove it?\n@feiweihy", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457103610", "createdAt": "2020-07-20T06:46:54Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class SchemaMetaDataLoaderTest {\n+    private static final String TEST_CATALOG = \"catalog\";\n+\n+    private static final String TABLE_TYPE = \"TABLE\";\n+\n+    private static final int MAX_CONNECTION_COUNT = 5;\n+\n+    private static final String DATABASE_TYPE_ORACLE = \"Oracle\";\n+\n+    @Mock\n+    private DataSource dataSource;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+\n+    @Mock\n+    private ResultSet tableExistResultSet;\n+\n+    @Before\n+    public void setUp() throws SQLException {\n+        when(dataSource.getConnection()).thenReturn(connection);\n+        when(connection.getCatalog()).thenReturn(TEST_CATALOG);\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getTables(TEST_CATALOG, null, null, new String[]{TABLE_TYPE})).thenReturn(tableExistResultSet);\n+    }\n+\n+    @Test\n+    public void assertLoadAllTableNamesForOracle() throws SQLException {\n+        SchemaMetaDataLoader.load(dataSource, MAX_CONNECTION_COUNT, DATABASE_TYPE_ORACLE);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4MjUyNQ=="}, "originalCommit": {"oid": "de7d2a5afa19e7edd0ded520b092153eb5aa2be1"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEwNjQxMQ==", "bodyText": "done.", "url": "https://github.com/apache/shardingsphere/pull/6366#discussion_r457106411", "createdAt": "2020-07-20T06:51:37Z", "author": {"login": "feiweihy"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataLoaderTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.binder.metadata.table;\n+\n+import org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import javax.sql.DataSource;\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class SchemaMetaDataLoaderTest {\n+    private static final String TEST_CATALOG = \"catalog\";\n+\n+    private static final String TABLE_TYPE = \"TABLE\";\n+\n+    private static final int MAX_CONNECTION_COUNT = 5;\n+\n+    private static final String DATABASE_TYPE_ORACLE = \"Oracle\";\n+\n+    @Mock\n+    private DataSource dataSource;\n+\n+    @Mock\n+    private Connection connection;\n+\n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+\n+    @Mock\n+    private ResultSet tableExistResultSet;\n+\n+    @Before\n+    public void setUp() throws SQLException {\n+        when(dataSource.getConnection()).thenReturn(connection);\n+        when(connection.getCatalog()).thenReturn(TEST_CATALOG);\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getTables(TEST_CATALOG, null, null, new String[]{TABLE_TYPE})).thenReturn(tableExistResultSet);\n+    }\n+\n+    @Test\n+    public void assertLoadAllTableNamesForOracle() throws SQLException {\n+        SchemaMetaDataLoader.load(dataSource, MAX_CONNECTION_COUNT, DATABASE_TYPE_ORACLE);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4MjUyNQ=="}, "originalCommit": {"oid": "de7d2a5afa19e7edd0ded520b092153eb5aa2be1"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 435, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}