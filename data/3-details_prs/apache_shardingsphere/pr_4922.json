{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTU4ODM1", "number": 4922, "title": "Test case of OrchestrationProperties and NacosProperties", "bodyText": "Fixes #4820\nChanges proposed in this pull request:\n\nTest case of OrchestrationProperties\nTest case of NacosProperties", "createdAt": "2020-03-24T12:22:58Z", "url": "https://github.com/apache/shardingsphere/pull/4922", "merged": true, "mergeCommit": {"oid": "29a13ad0c1866147eb22600fd5135795b1f6107e"}, "closed": true, "closedAt": "2020-03-25T11:04:21Z", "author": {"login": "ruanjiehui"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPDAwKgH2gAyMzkyOTU4ODM1OjA3MzA1NWUwOGU1NGI1NmVjMTE5OWNjNDU2MjJiNmUwMTQ0MGUzZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRFc6ZAFqTM4MTA0NjI5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "073055e08e54b56ec1199cc45622b6e01440e3e4", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/073055e08e54b56ec1199cc45622b6e01440e3e4", "committedDate": "2020-03-19T03:05:29Z", "message": "Test case of ZookeeperProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "634e6a093fa8c9720ddf565f8ab6728ef612c38e", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/634e6a093fa8c9720ddf565f8ab6728ef612c38e", "committedDate": "2020-03-24T12:19:17Z", "message": "Test case of OrchestrationProperties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e5f13ca8b4e6531b11fc07636deabcc7050d1db", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/6e5f13ca8b4e6531b11fc07636deabcc7050d1db", "committedDate": "2020-03-24T12:20:06Z", "message": "Test case of NacosProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzkxNDA2", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-380391406", "createdAt": "2020-03-24T14:55:35Z", "commit": {"oid": "6e5f13ca8b4e6531b11fc07636deabcc7050d1db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo1NTozNVrOF60MQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo1NTozNVrOF60MQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIxNjgzMg==", "bodyText": "The class ZookeeperPropertiesTest is already existed, why rewrite it again?", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397216832", "createdAt": "2020-03-24T14:55:35Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/test/java/org/apache/shardingsphere/orchestration/center/instance/ZookeeperPropertiesTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.center.instance;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public final class ZookeeperPropertiesTest {\n+\n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(ZookeeperPropertyKey.RETRY_INTERVAL_MILLISECONDS.getKey(), \"3000\");\n+        props.setProperty(ZookeeperPropertyKey.MAX_RETRIES.getKey(), \"2\");\n+        props.setProperty(ZookeeperPropertyKey.TIME_TO_LIVE_SECONDS.getKey(), \"600\");\n+        props.setProperty(ZookeeperPropertyKey.OPERATION_TIMEOUT_MILLISECONDS.getKey(), \"6000\");\n+        props.setProperty(ZookeeperPropertyKey.DIGEST.getKey(), \"any\");\n+        ZookeeperProperties actual = new ZookeeperProperties(props);\n+        assertThat(actual.getValue(ZookeeperPropertyKey.RETRY_INTERVAL_MILLISECONDS), is(3000));\n+        assertThat(actual.getValue(ZookeeperPropertyKey.MAX_RETRIES), is(2));\n+        assertThat(actual.getValue(ZookeeperPropertyKey.TIME_TO_LIVE_SECONDS), is(600));\n+        assertThat(actual.getValue(ZookeeperPropertyKey.OPERATION_TIMEOUT_MILLISECONDS), is(6000));\n+        assertThat(actual.getValue(ZookeeperPropertyKey.DIGEST), is(\"any\"));\n+    }\n+\n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        ZookeeperProperties actual = new ZookeeperProperties(props);\n+        assertThat(actual.getValue(ZookeeperPropertyKey.RETRY_INTERVAL_MILLISECONDS), is(500));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e5f13ca8b4e6531b11fc07636deabcc7050d1db"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbfeab75c076622c869bf63ee2273649e03e25a", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/2dbfeab75c076622c869bf63ee2273649e03e25a", "committedDate": "2020-03-25T01:23:18Z", "message": "Merge branch 'master' into issue-4820"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODU4MjI1", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-380858225", "createdAt": "2020-03-25T04:55:28Z", "commit": {"oid": "2dbfeab75c076622c869bf63ee2273649e03e25a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8", "committedDate": "2020-03-25T06:09:49Z", "message": "Fix CI\n\nbecause checkstyle check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODk1MTI3", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-380895127", "createdAt": "2020-03-25T07:01:41Z", "commit": {"oid": "53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzowMTo0MVrOF7OKhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzowMjoyOFrOF7OLYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MjM3NQ==", "bodyText": "should keep origin blankspaces", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397642375", "createdAt": "2020-03-25T07:01:41Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/test/java/org/apache/shardingsphere/orchestration/center/instance/ZookeeperPropertiesTest.java", "diffHunk": "@@ -25,7 +25,7 @@\n import static org.junit.Assert.assertThat;\n \n public final class ZookeeperPropertiesTest {\n-    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MjUwOA==", "bodyText": "let a blank line at tail", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397642508", "createdAt": "2020-03-25T07:02:10Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/test/java/org/apache/shardingsphere/orchestration/core/facade/properties/OrchestrationPropertiesTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.facade.properties;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public final class OrchestrationPropertiesTest {\n+\n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(OrchestrationPropertyKey.OVERWRITE.getKey(), \"true\");\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertTrue(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+\n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertFalse(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MjU5NQ==", "bodyText": "let a blank line at tail.", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397642595", "createdAt": "2020-03-25T07:02:28Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosPropertiesTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.center.instance;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public final class NacosPropertiesTest {\n+\n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(NacosPropertyKey.GROUP.getKey(), \"SHARDING_SPHERE_TEST_GROUP\");\n+        props.setProperty(NacosPropertyKey.TIMEOUT.getKey(), \"6000\");\n+        NacosProperties actual = new NacosProperties(props);\n+        assertThat(actual.getValue(NacosPropertyKey.GROUP), is(\"SHARDING_SPHERE_TEST_GROUP\"));\n+        assertThat(actual.getValue(NacosPropertyKey.TIMEOUT), is(6000L));\n+    }\n+\n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        NacosProperties actual = new NacosProperties(props);\n+        assertThat(actual.getValue(NacosPropertyKey.GROUP), is(\"SHARDING_SPHERE_DEFAULT_GROUP\"));\n+        assertThat(actual.getValue(NacosPropertyKey.TIMEOUT), is(3000L));\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b2e6191ac51ac93517ab49d7beb32a7d5e2bb8"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47caa5730951004585064ba22ebec18d07cc7f43", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/47caa5730951004585064ba22ebec18d07cc7f43", "committedDate": "2020-03-25T07:12:17Z", "message": "keep origin blankspaces\n\nkeep origin blankspaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f782d89c0e133cd7d19e2d7b764813a83bd5f3e1", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/f782d89c0e133cd7d19e2d7b764813a83bd5f3e1", "committedDate": "2020-03-25T07:15:29Z", "message": "should keep origin blankspaces\n\nshould keep origin blankspaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75b0eac7d98e62ff0da851381d2c81af337eccd1", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/75b0eac7d98e62ff0da851381d2c81af337eccd1", "committedDate": "2020-03-25T07:19:26Z", "message": "fix code style problem\n\nfix code style problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTI2MzE1", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-380926315", "createdAt": "2020-03-25T08:09:40Z", "commit": {"oid": "75b0eac7d98e62ff0da851381d2c81af337eccd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTI2NjU5", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-380926659", "createdAt": "2020-03-25T08:10:14Z", "commit": {"oid": "75b0eac7d98e62ff0da851381d2c81af337eccd1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoxMDoxNFrOF7PzkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODoxMDoxNFrOF7PzkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY2OTI2NA==", "bodyText": "let an empty line here", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397669264", "createdAt": "2020-03-25T08:10:14Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/test/java/org/apache/shardingsphere/orchestration/core/facade/properties/OrchestrationPropertiesTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.facade.properties;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public final class OrchestrationPropertiesTest {\n+    \n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(OrchestrationPropertyKey.OVERWRITE.getKey(), \"true\");\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertTrue(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+    \n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertFalse(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b0eac7d98e62ff0da851381d2c81af337eccd1"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "892444a0062403fdc2bf577e4461489696db2606", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/892444a0062403fdc2bf577e4461489696db2606", "committedDate": "2020-03-25T08:24:36Z", "message": "code style fix\n\ncode style fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0633d294f858ee2a3767b80e101f7d0d80551e06", "author": {"user": {"login": "ruanjiehui", "name": "rjh"}}, "url": "https://github.com/apache/shardingsphere/commit/0633d294f858ee2a3767b80e101f7d0d80551e06", "committedDate": "2020-03-25T08:45:06Z", "message": "code style fix\n\nwhen edit on github website,need add two empty lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDQyMDIz", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-381042023", "createdAt": "2020-03-25T10:57:30Z", "commit": {"oid": "0633d294f858ee2a3767b80e101f7d0d80551e06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1NzozMFrOF7VwEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDo1NzozOFrOF7VwXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2NjY3Mg==", "bodyText": "Please remove useless blank line.", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397766672", "createdAt": "2020-03-25T10:57:30Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosPropertiesTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.center.instance;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public final class NacosPropertiesTest {\n+    \n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(NacosPropertyKey.GROUP.getKey(), \"SHARDING_SPHERE_TEST_GROUP\");\n+        props.setProperty(NacosPropertyKey.TIMEOUT.getKey(), \"6000\");\n+        NacosProperties actual = new NacosProperties(props);\n+        assertThat(actual.getValue(NacosPropertyKey.GROUP), is(\"SHARDING_SPHERE_TEST_GROUP\"));\n+        assertThat(actual.getValue(NacosPropertyKey.TIMEOUT), is(6000L));\n+    }\n+    \n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        NacosProperties actual = new NacosProperties(props);\n+        assertThat(actual.getValue(NacosPropertyKey.GROUP), is(\"SHARDING_SPHERE_DEFAULT_GROUP\"));\n+        assertThat(actual.getValue(NacosPropertyKey.TIMEOUT), is(3000L));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0633d294f858ee2a3767b80e101f7d0d80551e06"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2Njc0OQ==", "bodyText": "Please remove useless blank line.", "url": "https://github.com/apache/shardingsphere/pull/4922#discussion_r397766749", "createdAt": "2020-03-25T10:57:38Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-facade/src/test/java/org/apache/shardingsphere/orchestration/core/facade/properties/OrchestrationPropertiesTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.facade.properties;\n+\n+import org.junit.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+public final class OrchestrationPropertiesTest {\n+    \n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(OrchestrationPropertyKey.OVERWRITE.getKey(), \"true\");\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertTrue(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+    \n+    @Test\n+    public void assertGetDefaultValue() {\n+        Properties props = new Properties();\n+        OrchestrationProperties actual = new OrchestrationProperties(props);\n+        assertFalse(actual.getValue(OrchestrationPropertyKey.OVERWRITE));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0633d294f858ee2a3767b80e101f7d0d80551e06"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMDQ2Mjk1", "url": "https://github.com/apache/shardingsphere/pull/4922#pullrequestreview-381046295", "createdAt": "2020-03-25T11:03:54Z", "commit": {"oid": "0633d294f858ee2a3767b80e101f7d0d80551e06"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3824, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}