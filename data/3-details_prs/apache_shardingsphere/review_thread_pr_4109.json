{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODYyMjEw", "number": 4109, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxODowN1rODcIaKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzoxNTozN1rODcaEhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODI0NDkwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxODowN1rOFkBCwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoyMjo0NVrOFkBFVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDE0NA==", "bodyText": "Why change the version of spring-boot", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373310144", "createdAt": "2020-01-31T04:18:07Z", "author": {"login": "wgy8283335"}, "path": "pom.xml", "diffHunk": "@@ -79,7 +79,7 @@\n         <lombok.version>1.16.4</lombok.version>\n         \n         <springframework.version>[4.3.6.RELEASE,5.0.0.M1)</springframework.version>\n-        <spring-boot.version>[1.5.0.RELEASE,2.0.0.M1)</spring-boot.version>\n+        <spring-boot.version>[1.5.20.RELEASE,2.0.0.M1)</spring-boot.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDgwNQ==", "bodyText": "Spring upgrade to https, the 1.5.0 version doesn't download correctly, so CI will be failure.\nthe dev branch upgrade the version to solve CI fail.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373310805", "createdAt": "2020-01-31T04:22:45Z", "author": {"login": "dongzl"}, "path": "pom.xml", "diffHunk": "@@ -79,7 +79,7 @@\n         <lombok.version>1.16.4</lombok.version>\n         \n         <springframework.version>[4.3.6.RELEASE,5.0.0.M1)</springframework.version>\n-        <spring-boot.version>[1.5.0.RELEASE,2.0.0.M1)</spring-boot.version>\n+        <spring-boot.version>[1.5.20.RELEASE,2.0.0.M1)</spring-boot.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDE0NA=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODMxODY2OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNTozMDozNVrOFkBvSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNzowMzowMVrOFkC3KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMTU0Nw==", "bodyText": "Whether should check update in schemas.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373321547", "createdAt": "2020-01-31T05:30:35Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "diffHunk": "@@ -108,16 +106,12 @@ private String getDirectly(final String key) {\n      */\n     @Override\n     public void persist(final String key, final String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzOTk0NQ==", "bodyText": "Update schema name info on ConfigurationService's persistShardingSchemaName method.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373339945", "createdAt": "2020-01-31T07:03:01Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "diffHunk": "@@ -108,16 +106,12 @@ private String getDirectly(final String key) {\n      */\n     @Override\n     public void persist(final String key, final String value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMTU0Nw=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODMyMDgxOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/resources/META-INF/services/org.apache.shardingsphere.orchestration.center.api.ConfigCenter", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNTozMjo0NVrOFkBwtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjo1OTo0MFrOFkC0IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMTkxMA==", "bodyText": "Why rename nacos as \"NacosConfigInstance\"?  What is the name for zookeeper, as it is used for config center, register center and distributed lock management?", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373321910", "createdAt": "2020-01-31T05:32:45Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/resources/META-INF/services/org.apache.shardingsphere.orchestration.center.api.ConfigCenter", "diffHunk": "@@ -15,4 +15,4 @@\n # limitations under the License.\n #\n \n-org.apache.shardingsphere.orchestration.center.instance.NacosInstance\n+org.apache.shardingsphere.orchestration.center.instance.NacosConfigInstance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzOTE2OA==", "bodyText": "nacos can as config center & register center, doesn't support distributed lock.\nnacos is different for config center & register center, so we should have two class.\nNacosConfigInstance is for Config center, NacosRegistryInstance will for register center.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373339168", "createdAt": "2020-01-31T06:59:40Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/resources/META-INF/services/org.apache.shardingsphere.orchestration.center.api.ConfigCenter", "diffHunk": "@@ -15,4 +15,4 @@\n # limitations under the License.\n #\n \n-org.apache.shardingsphere.orchestration.center.instance.NacosInstance\n+org.apache.shardingsphere.orchestration.center.instance.NacosConfigInstance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMTkxMA=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODMyMTg1OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNTozMzo0MlrOFkBxTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNzowMDowMlrOFkC0aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjA2Mw==", "bodyText": "NacosInstance or NacosConfigInstance?", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373322063", "createdAt": "2020-01-31T05:33:42Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -41,9 +41,9 @@\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n-public class NacosInstanceTest {\n+public class NacosConfigInstanceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzOTI0Mw==", "bodyText": "the same to above.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373339243", "createdAt": "2020-01-31T07:00:02Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/test/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstanceTest.java", "diffHunk": "@@ -41,9 +41,9 @@\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n-public class NacosInstanceTest {\n+public class NacosConfigInstanceTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjA2Mw=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODM2NDY0OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjowOTo0N1rOFkCKiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNzowMDozOVrOFkC08A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyODUyMA==", "bodyText": "Why rename the nacos?", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373328520", "createdAt": "2020-01-31T06:09:47Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "diffHunk": "@@ -32,14 +30,18 @@\n import org.apache.shardingsphere.orchestration.center.listener.DataChangedEvent;\n import org.apache.shardingsphere.orchestration.center.listener.DataChangedEventListener;\n \n+import java.util.List;\n+import java.util.Properties;\n+import java.util.concurrent.Executor;\n+\n /**\n  * The nacos instance for ConfigCenter.\n  *\n  * @author huangjian\n  * @author sunbufu\n  */\n @Slf4j\n-public class NacosInstance implements ConfigCenter {\n+public class NacosConfigInstance implements ConfigCenter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzOTM3Ng==", "bodyText": "the same to above.", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373339376", "createdAt": "2020-01-31T07:00:39Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-nacos/src/main/java/org/apache/shardingsphere/orchestration/center/instance/NacosConfigInstance.java", "diffHunk": "@@ -32,14 +30,18 @@\n import org.apache.shardingsphere.orchestration.center.listener.DataChangedEvent;\n import org.apache.shardingsphere.orchestration.center.listener.DataChangedEventListener;\n \n+import java.util.List;\n+import java.util.Properties;\n+import java.util.concurrent.Executor;\n+\n /**\n  * The nacos instance for ConfigCenter.\n  *\n  * @author huangjian\n  * @author sunbufu\n  */\n @Slf4j\n-public class NacosInstance implements ConfigCenter {\n+public class NacosConfigInstance implements ConfigCenter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyODUyMA=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTEzODYwOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzoxNTozN1rOFkcusw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxMjo0NTozNlrOFkhk8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2Mzc2Mw==", "bodyText": "Instead of using mock, is there any possible solution to start a nacos server and put the value into it?", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373763763", "createdAt": "2020-02-01T07:15:37Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java", "diffHunk": "@@ -374,7 +373,7 @@ public void assertLoadProperties() {\n     \n     @Test\n     public void assertGetAllShardingSchemaNames() {\n-        when(regCenter.getChildrenKeys(\"/test/config/schema\")).thenReturn(Arrays.asList(\"sharding_db\", \"masterslave_db\"));\n+        when(regCenter.get(\"/test/config/schema\")).thenReturn(\"sharding_db,masterslave_db\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0MzE4Ng==", "bodyText": "I read nacos's issue list, It doesn't support.\nalibaba/nacos#1926", "url": "https://github.com/apache/shardingsphere/pull/4109#discussion_r373843186", "createdAt": "2020-02-02T12:45:36Z", "author": {"login": "dongzl"}, "path": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java", "diffHunk": "@@ -374,7 +373,7 @@ public void assertLoadProperties() {\n     \n     @Test\n     public void assertGetAllShardingSchemaNames() {\n-        when(regCenter.getChildrenKeys(\"/test/config/schema\")).thenReturn(Arrays.asList(\"sharding_db\", \"masterslave_db\"));\n+        when(regCenter.get(\"/test/config/schema\")).thenReturn(\"sharding_db,masterslave_db\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2Mzc2Mw=="}, "originalCommit": {"oid": "3858d51bf900703706f40b2283f0773fe64dd036"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 980, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}