{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDU3NDEx", "number": 4545, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwMTozOTowNlrODkH-qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwMTozOTowNlrODkH-qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjA2MDU4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/config/DataSourceConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwMTozOTowNlrOFwRsKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo1NDo0NlrOFw6Gew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE2NTgwMg==", "bodyText": "Here is an integration test.\nI suggestion:\n\nif do this way, it's neccesary to use HikariDataSource instead of BasicDatasource.\ncreat a table in h2 db, and set an insert sql to initSql, then check it work well by a select and compare.\n\nOr another approach:\njust mock a jdbc driver behind HikariDataSource, check hikariDataSource send the initSql to mock jdbc connection/statement.", "url": "https://github.com/apache/shardingsphere/pull/4545#discussion_r386165802", "createdAt": "2020-03-02T01:39:06Z", "author": {"login": "kimmking"}, "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/config/DataSourceConfigurationTest.java", "diffHunk": "@@ -83,4 +88,25 @@ public void assertAddAlias() {\n         assertThat(actual.getProperties().get(\"jdbcUrl\"), is(actual.getProperties().get(\"url\")));\n         assertThat(actual.getProperties().get(\"username\"), is(actual.getProperties().get(\"user\")));\n     }\n+    \n+    @Test\n+    public void assertGetDataSourceConfigurationWithConnectionInitSqls() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ec332dc3632e324aac4bf5537a01a0fb193df1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0MzA3Ng==", "bodyText": "connectionInitSqls in HikariDataSource is a String type, but we want to verify a collection type for this issue. also I found that collection type property not existed in in HikariDataSource, it seems that DBCP2 is ok for that", "url": "https://github.com/apache/shardingsphere/pull/4545#discussion_r386343076", "createdAt": "2020-03-02T11:38:28Z", "author": {"login": "cherrylzhao"}, "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/config/DataSourceConfigurationTest.java", "diffHunk": "@@ -83,4 +88,25 @@ public void assertAddAlias() {\n         assertThat(actual.getProperties().get(\"jdbcUrl\"), is(actual.getProperties().get(\"url\")));\n         assertThat(actual.getProperties().get(\"username\"), is(actual.getProperties().get(\"user\")));\n     }\n+    \n+    @Test\n+    public void assertGetDataSourceConfigurationWithConnectionInitSqls() throws SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE2NTgwMg=="}, "originalCommit": {"oid": "23ec332dc3632e324aac4bf5537a01a0fb193df1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNzg5OQ==", "bodyText": "connectionInitSqls in HikariDataSource is a String type, but we want to verify a collection type for this issue. also I found that collection type property not existed in in HikariDataSource, it seems that DBCP2 is ok for that\n\n@kimmking @cherrylzhao In HikariDataSource, the configuratoin is connectionInitSql, and it is a String type, i also veryfied HikariDataSource , it's ok. DBCP2 and Druid support Connection type,  the only difference is the return parameter of getConnectionInitsqls method, DBCP2 return List type, Druid return Connection type, I have done compatibility processing in the pr.", "url": "https://github.com/apache/shardingsphere/pull/4545#discussion_r386827899", "createdAt": "2020-03-03T06:54:46Z", "author": {"login": "menghaoranss"}, "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/config/DataSourceConfigurationTest.java", "diffHunk": "@@ -83,4 +88,25 @@ public void assertAddAlias() {\n         assertThat(actual.getProperties().get(\"jdbcUrl\"), is(actual.getProperties().get(\"url\")));\n         assertThat(actual.getProperties().get(\"username\"), is(actual.getProperties().get(\"user\")));\n     }\n+    \n+    @Test\n+    public void assertGetDataSourceConfigurationWithConnectionInitSqls() throws SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE2NTgwMg=="}, "originalCommit": {"oid": "23ec332dc3632e324aac4bf5537a01a0fb193df1"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1207, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}