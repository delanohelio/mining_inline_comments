{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODg5ODkz", "number": 5634, "title": "Defect more when concurrently registering services", "bodyText": "This pull request follows up #5618.\nConcurrentHashMap is thread safe, but get-and-check-and-put are composite operations and are thus not atomic, this patch replaces the former with computeIfAbsent, which is atomic now.", "createdAt": "2020-05-16T00:48:07Z", "url": "https://github.com/apache/shardingsphere/pull/5634", "merged": true, "mergeCommit": {"oid": "0e30f587030327072cf3678fadc578e00139aa56"}, "closed": true, "closedAt": "2020-05-16T04:35:27Z", "author": {"login": "kezhenxu94"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchr0v7gH2gAyNDE4ODg5ODkzOjgyODhkNDZkNzAwYTI4MTVmNzQxNGRmYzk0YWFhNDJjMjM2M2JhZWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchvDpJAFqTQxMzA0Njc5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/shardingsphere/commit/8288d46d700a2815f7414dfc94aaa42c2363baee", "committedDate": "2020-05-16T00:49:07Z", "message": "Defect more when concurrently registering services\n\nThis pull request follows up #5618.\n\n`ConcurrentHashMap` is thread safe, but `get-and-check-and-put` are composite operations and are thus not atomic, this patch replaces the former with `computeIfAbsent`, which is atomic now."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDM3NDg1", "url": "https://github.com/apache/shardingsphere/pull/5634#pullrequestreview-413037485", "createdAt": "2020-05-16T02:01:34Z", "commit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTozNFrOGWXf_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTo1MFrOGWXgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg3OQ==", "bodyText": "should keep incident in new line", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106879", "createdAt": "2020-05-16T02:01:34Z", "author": {"login": "cherrylzhao"}, "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -51,17 +51,12 @@\n             registerServiceClass(service, each);\n         }\n     }\n-    \n-    @SuppressWarnings(\"unchecked\")\n+\n     private static <T> void registerServiceClass(final Class<T> service, final T instance) {\n-        Collection<Class<?>> serviceClasses = SERVICE_MAP.get(service);\n-        if (null == serviceClasses) {\n-            serviceClasses = new LinkedHashSet<>();\n-        }\n+        Collection<Class<?>> serviceClasses = SERVICE_MAP.computeIfAbsent(service, unused -> new LinkedHashSet<>());\n         serviceClasses.add(instance.getClass());\n-        SERVICE_MAP.put(service, serviceClasses);\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg5Nw==", "bodyText": "should keep incident in new line", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106897", "createdAt": "2020-05-16T02:01:50Z", "author": {"login": "cherrylzhao"}, "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -73,7 +68,7 @@\n     public static <T> Collection<T> newServiceInstances(final Class<T> service) {\n         return SERVICE_MAP.containsKey(service) ? SERVICE_MAP.get(service).stream().map(each -> (T) newServiceInstance(each)).collect(Collectors.toList()) : Collections.emptyList();\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdea9f8f60d2f17ddfa1803a1551e0467e01cce8", "author": {"user": {"login": "kezhenxu94", "name": "kezhenxu94"}}, "url": "https://github.com/apache/shardingsphere/commit/fdea9f8f60d2f17ddfa1803a1551e0467e01cce8", "committedDate": "2020-05-16T02:18:55Z", "message": "Revert some indentations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQ2Nzkx", "url": "https://github.com/apache/shardingsphere/pull/5634#pullrequestreview-413046791", "createdAt": "2020-05-16T04:35:06Z", "commit": {"oid": "fdea9f8f60d2f17ddfa1803a1551e0467e01cce8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3624, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}