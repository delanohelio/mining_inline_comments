{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NzQwMjUy", "number": 7914, "title": "Refactor StandardSQLParserEngine and cacheEngine", "bodyText": "Ref #7869", "createdAt": "2020-10-26T03:59:25Z", "url": "https://github.com/apache/shardingsphere/pull/7914", "merged": true, "mergeCommit": {"oid": "f6df19f78739ea12f50177a1f35c7f8b57e925d1"}, "closed": true, "closedAt": "2020-10-26T08:18:48Z", "author": {"login": "tristaZero"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdV6qGBgH2gAyNTA5NzQwMjUyOmMwMTk2ZTdhMDgyMGNjNDI2MTU4OWNjZjU2ZDg4MDk4ZTUwZDllYTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWP803gFqTUxNjU0NTc1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c0196e7a0820cc4261589ccf56d88098e50d9ea4", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/c0196e7a0820cc4261589ccf56d88098e50d9ea4", "committedDate": "2020-10-25T07:30:07Z", "message": "Rename to getVisitorFacadeFactoryClass() in SQLParserConfiguration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b03065ea0d179942760d1379dfbcf08a76938c", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/d6b03065ea0d179942760d1379dfbcf08a76938c", "committedDate": "2020-10-26T02:08:53Z", "message": "Refactor StandardSQLParserEngine and cacheEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "738a780dfa450c9b414fe62989aee2623d19a463", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/738a780dfa450c9b414fe62989aee2623d19a463", "committedDate": "2020-10-26T02:09:11Z", "message": "Refactor StandardSQLParserEngine and cacheEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1782a421b939d7ab55fbfa858fd58a334b5a863d", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/1782a421b939d7ab55fbfa858fd58a334b5a863d", "committedDate": "2020-10-26T02:09:54Z", "message": "modify SQLParserEngine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1efdf8e06f9e51b150ddb865512e5525a6bfc3b", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/c1efdf8e06f9e51b150ddb865512e5525a6bfc3b", "committedDate": "2020-10-26T02:53:54Z", "message": "Merge branch 'new3' of https://github.com/tristaZero/incubator-shardingsphere into new3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fe6dc2a64e3b37eb6faac9cbec561cb53c81094", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/5fe6dc2a64e3b37eb6faac9cbec561cb53c81094", "committedDate": "2020-10-26T04:07:55Z", "message": "check style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/4aa6944be64948a851c0e0fa323e2f9ab1bd640a", "committedDate": "2020-10-26T04:08:25Z", "message": "Merge branch 'master' of https://github.com/apache/shardingsphere into new3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU3NjM4", "url": "https://github.com/apache/shardingsphere/pull/7914#pullrequestreview-516457638", "createdAt": "2020-10-26T04:07:36Z", "commit": {"oid": "1782a421b939d7ab55fbfa858fd58a334b5a863d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDowNzozNlrOHoATig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDoyMjo1OFrOHoAe0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMDA5MA==", "bodyText": "Parsed should be lower case", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511710090", "createdAt": "2020-10-26T04:07:36Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/cache/SQLParsedResultCaches.java", "diffHunk": "@@ -15,38 +15,36 @@\n  * limitations under the License.\n  */\n \n-package org.apache.shardingsphere.sql.parser.engine.ast;\n+package org.apache.shardingsphere.sql.parser.cache;\n \n-import lombok.AccessLevel;\n-import lombok.NoArgsConstructor;\n+import org.apache.shardingsphere.sql.parser.api.visitor.SQLVisitorType;\n \n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n \n /**\n- * AST SQL parser engine factory.\n+ * SQL Parsed result caches.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1782a421b939d7ab55fbfa858fd58a334b5a863d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMjEwMA==", "bodyText": "sql should be upper case", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511712100", "createdAt": "2020-10-26T04:18:08Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/engine/SQLParserEngine.java", "diffHunk": "@@ -17,17 +17,19 @@\n \n package org.apache.shardingsphere.sql.parser.engine;\n \n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+\n /**\n- * SQL parser engine.\n+ * Statement SQL parser engine.\n  */\n-public interface SQLParserEngine<T> {\n+public interface SQLParserEngine {\n     \n     /**\n-     * Parse SQL.\n-     *\n-     * @param sql SQL\n-     * @param useCache use cache or not\n-     * @return T\n+     * Parse to SQL Statement.\n+     * \n+     * @param sql sql ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMjEyNw==", "bodyText": "sql should be upper case", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511712127", "createdAt": "2020-10-26T04:18:21Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/engine/SQLParserEngine.java", "diffHunk": "@@ -17,17 +17,19 @@\n \n package org.apache.shardingsphere.sql.parser.engine;\n \n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+\n /**\n- * SQL parser engine.\n+ * Statement SQL parser engine.\n  */\n-public interface SQLParserEngine<T> {\n+public interface SQLParserEngine {\n     \n     /**\n-     * Parse SQL.\n-     *\n-     * @param sql SQL\n-     * @param useCache use cache or not\n-     * @return T\n+     * Parse to SQL Statement.\n+     * \n+     * @param sql sql \n+     * @param useCache use cache\n+     * @return sql statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMjIxMw==", "bodyText": "It is better to change java doc use cache to whether use cache", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511712213", "createdAt": "2020-10-26T04:18:47Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/engine/SQLParserEngine.java", "diffHunk": "@@ -17,17 +17,19 @@\n \n package org.apache.shardingsphere.sql.parser.engine;\n \n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+\n /**\n- * SQL parser engine.\n+ * Statement SQL parser engine.\n  */\n-public interface SQLParserEngine<T> {\n+public interface SQLParserEngine {\n     \n     /**\n-     * Parse SQL.\n-     *\n-     * @param sql SQL\n-     * @param useCache use cache or not\n-     * @return T\n+     * Parse to SQL Statement.\n+     * \n+     * @param sql sql \n+     * @param useCache use cache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMjUyMQ==", "bodyText": "sql should be upper case", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511712521", "createdAt": "2020-10-26T04:20:34Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/engine/standard/StandardSQLParserEngine.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.engine.standard;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+import org.antlr.v4.runtime.tree.ParseTreeVisitor;\n+import org.apache.shardingsphere.sql.parser.api.visitor.SQLVisitorType;\n+import org.apache.shardingsphere.sql.parser.cache.SQLParsedResultCaches;\n+import org.apache.shardingsphere.sql.parser.core.parser.SQLParserExecutor;\n+import org.apache.shardingsphere.sql.parser.core.visitor.SQLVisitorFactory;\n+import org.apache.shardingsphere.sql.parser.core.visitor.SQLVisitorRule;\n+import org.apache.shardingsphere.sql.parser.cache.SQLParsedResultCache;\n+import org.apache.shardingsphere.sql.parser.engine.SQLParserEngine;\n+import org.apache.shardingsphere.sql.parser.hook.ParsingHookRegistry;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Standard SQL parser engine.\n+ */\n+@RequiredArgsConstructor\n+public final class StandardSQLParserEngine implements SQLParserEngine {\n+    \n+    private final String databaseTypeName;\n+    \n+    private final SQLParsedResultCaches caches = new SQLParsedResultCaches();\n+    \n+    private final ParsingHookRegistry parsingHookRegistry = ParsingHookRegistry.getInstance();\n+    \n+    /**\n+     * Parse to AST.\n+     * @param sql sql ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcxMjk3Nw==", "bodyText": "sql should be upper case", "url": "https://github.com/apache/shardingsphere/pull/7914#discussion_r511712977", "createdAt": "2020-10-26T04:22:58Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/engine/standard/StandardSQLParserEngine.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.engine.standard;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+import org.antlr.v4.runtime.tree.ParseTreeVisitor;\n+import org.apache.shardingsphere.sql.parser.api.visitor.SQLVisitorType;\n+import org.apache.shardingsphere.sql.parser.cache.SQLParsedResultCaches;\n+import org.apache.shardingsphere.sql.parser.core.parser.SQLParserExecutor;\n+import org.apache.shardingsphere.sql.parser.core.visitor.SQLVisitorFactory;\n+import org.apache.shardingsphere.sql.parser.core.visitor.SQLVisitorRule;\n+import org.apache.shardingsphere.sql.parser.cache.SQLParsedResultCache;\n+import org.apache.shardingsphere.sql.parser.engine.SQLParserEngine;\n+import org.apache.shardingsphere.sql.parser.hook.ParsingHookRegistry;\n+import org.apache.shardingsphere.sql.parser.sql.common.statement.SQLStatement;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Standard SQL parser engine.\n+ */\n+@RequiredArgsConstructor\n+public final class StandardSQLParserEngine implements SQLParserEngine {\n+    \n+    private final String databaseTypeName;\n+    \n+    private final SQLParsedResultCaches caches = new SQLParsedResultCaches();\n+    \n+    private final ParsingHookRegistry parsingHookRegistry = ParsingHookRegistry.getInstance();\n+    \n+    /**\n+     * Parse to AST.\n+     * @param sql sql \n+     * @param useCache user cache\n+     * @return parse tree\n+     */\n+    public ParseTree parseToAST(final String sql, final boolean useCache) {\n+        Optional<ParseTree> parseTree = getCache(sql, useCache, SQLVisitorType.FORMAT);\n+        if (parseTree.isPresent()) {\n+            return parseTree.get();\n+        }\n+        ParseTree result = parse0(sql);\n+        putCache(sql, result, useCache, SQLVisitorType.FORMAT);\n+        return result;\n+    }\n+    \n+    // TODO check skywalking plugin\n+    /**\n+     * To make sure SkyWalking will be available at the next release of ShardingSphere,\n+     * a new plugin should be provided to SkyWalking project if this API changed.\n+     *\n+     * @see <a href=\"https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#user-content-plugin-development-guide\">Plugin Development Guide</a>\n+     */\n+    @Override\n+    public SQLStatement parseToSQLStatement(final String sql, final boolean useCache) {\n+        parsingHookRegistry.start(sql);\n+        try {\n+            SQLStatement result = parseToSQLStatement0(sql, useCache);\n+            parsingHookRegistry.finishSuccess(result);\n+            return result;\n+            // CHECKSTYLE:OFF\n+        } catch (final Exception ex) {\n+            // CHECKSTYLE:ON\n+            parsingHookRegistry.finishFailure(ex);\n+            throw ex;\n+        }\n+    }\n+    \n+    /**\n+     * Parse.\n+     *\n+     * @param sql sql", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aa6944be64948a851c0e0fa323e2f9ab1bd640a"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "227bfd7779ff7b8fe0119e6f1c49b5a674a4ac7f", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/227bfd7779ff7b8fe0119e6f1c49b5a674a4ac7f", "committedDate": "2020-10-26T08:16:18Z", "message": "java doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTQ1NzU0", "url": "https://github.com/apache/shardingsphere/pull/7914#pullrequestreview-516545754", "createdAt": "2020-10-26T08:18:35Z", "commit": {"oid": "227bfd7779ff7b8fe0119e6f1c49b5a674a4ac7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3931, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}