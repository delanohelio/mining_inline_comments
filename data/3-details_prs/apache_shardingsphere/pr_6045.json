{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzkxMzc0", "number": 6045, "title": "Refactor pg grammar file, fix #5802", "bodyText": "Fixes #5802 .\nChanges proposed in this pull request:\n\nRefactor pg grammar file", "createdAt": "2020-06-15T08:59:10Z", "url": "https://github.com/apache/shardingsphere/pull/6045", "merged": true, "mergeCommit": {"oid": "7f57b22b200a4ee3fbd72ec241dab2063b893d90"}, "closed": true, "closedAt": "2020-06-17T02:56:16Z", "author": {"login": "jingshanglu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrcyx9AH2gAyNDM0MzkxMzc0OmFmNzk2YWIwYmFiOTFlMTRmNTU2OWUyZDZmYTYxNzQwNmJhZTY0NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsA0XkgFqTQzMjAyMzcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af796ab0bab91e14f5569e2d6fa617406bae6445", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/af796ab0bab91e14f5569e2d6fa617406bae6445", "committedDate": "2020-06-15T08:57:38Z", "message": "Refactor pg grammar file, fix #5802"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb", "committedDate": "2020-06-15T09:27:33Z", "message": "Simplify code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTgwNDA5", "url": "https://github.com/apache/shardingsphere/pull/6045#pullrequestreview-431180409", "createdAt": "2020-06-16T05:57:34Z", "commit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTo1NzozNFrOGkMQjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjoxMzowNlrOGkMlGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwMjc2Nw==", "bodyText": "Remove or remain?", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440602767", "createdAt": "2020-06-16T05:57:34Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -23,41 +23,106 @@ parameterMarker\n     : QUESTION_ literalsType_?\n     ;\n \n-literals\n-    : stringLiterals\n-    | numberLiterals\n-    | hexadecimalLiterals\n-    | bitValueLiterals\n-    | booleanLiterals\n-    | nullValueLiterals\n-    ;\n+reserved_keyword\n+    : ALL\n+\t| ANALYSE\n+\t| ANALYZE\n+\t| AND\n+\t| ANY\n+\t| ARRAY\n+\t| AS\n+\t| ASC\n+\t| ASYMMETRIC\n+\t| BOTH\n+\t| CASE\n+\t| CAST\n+\t| CHECK\n+\t| COLLATE\n+\t| COLUMN\n+\t| CONSTRAINT\n+\t| CREATE\n+\t| CURRENT_CATALOG\n+\t| CURRENT_DATE\n+\t| CURRENT_ROLE\n+\t| CURRENT_TIME\n+\t| CURRENT_TIMESTAMP\n+\t| CURRENT_USER\n+\t| DEFAULT\n+\t| DEFERRABLE\n+\t| DESC\n+\t| DISTINCT\n+\t| DO\n+\t| ELSE\n+\t| END\n+\t| EXCEPT\n+\t| FALSE\n+\t| FETCH\n+\t| FOR\n+\t| FOREIGN\n+\t| FROM\n+\t| GRANT\n+\t| GROUP\n+\t| HAVING\n+\t| IN\n+\t| INITIALLY\n+\t| INTERSECT\n+\t| INTO\n+\t| LATERAL\n+\t| LEADING\n+\t| LIMIT\n+\t| LOCALTIME\n+\t| LOCALTIMESTAMP\n+\t| NOT\n+\t| NULL\n+\t| OFFSET\n+\t| ON\n+\t| ONLY\n+\t| OR\n+\t| ORDER\n+\t| PLACING\n+\t| PRIMARY\n+\t| REFERENCES\n+\t| RETURNING\n+\t| SELECT\n+\t| SESSION_USER\n+\t| SOME\n+\t| SYMMETRIC\n+\t| TABLE\n+\t| THEN\n+\t| TO\n+\t| TRAILING\n+\t| TRUE\n+\t| UNION\n+\t| UNIQUE\n+\t| USER\n+\t| USING\n+\t| VARIADIC\n+\t| WHEN\n+\t| WHERE\n+\t| WINDOW\n+\t| WITH\n+\t;\n \n-stringLiterals\n-    : unicodeEscapes_? STRING_ literalsType_? uescape_?\n-    ;\n+//literals\n+//    : stringLiterals\n+//    | numberLiterals\n+//    | hexadecimalLiterals", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwMjk3NQ==", "bodyText": "Is it possible to inline them? It is too long.", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440602975", "createdAt": "2020-06-16T05:58:12Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -73,29 +138,332 @@ uescape_\n     ;\n     \n unreservedWord\n-    : ADMIN | ESCAPE | EXCLUDE | KEY | PARTITION | SET | UNKNOWN \n-    | ADD | ALTER | ALWAYS | CASCADE | COMMIT | CURRENT | DAY \n-    | DELETE | DISABLE | DROP | ENABLE | FUNCTION | GENERATED | INDEX\n-    | ISOLATION | LEVEL | OPTION | PRIVILEGES | READ | REVOKE | ROLE \n-    | ROLLBACK | ROWS | START | TRANSACTION | TRUNCATE | YEAR | ACTION \n-    | BEGIN | CACHE | CHARACTERISTICS | CLUSTER | COMMENTS | CONSTRAINTS | CYCLE \n-    | DATA | DATABASE | DEFAULTS | DEFERRED | DEPENDS | DOMAIN | EXCLUDING \n-    | EXECUTE | EXTENDED | EXTENSION | EXTERNAL | EXTRACT | FILTER \n-    | FIRST | FOLLOWING | FORCE | GLOBAL | HOUR | IDENTITY | IF | IMMEDIATE \n-    | INCLUDING | INCREMENT | INDEXES | INHERIT | INHERITS | INCLUDE | INSERT \n-    | LANGUAGE | LARGE | LAST | LOCAL | LOGGED | MAIN | MATCH \n-    | MAXVALUE | MINVALUE | MINUTE | MONTH | NOTHING | NULLS | OBJECT\n-    | OF | OIDS | OVER | OWNED | OWNER | PARTIAL | PLAIN\n-    | PRECEDING | PROCEDURE | RANGE | RENAME | REPLICA | RESET | RESTART\n-    | RESTRICT | ROUTINE | RULE | SAVEPOINT | SCHEMA | SECOND | SECURITY\n-    | SEQUENCE | SESSION | SHOW | SIMPLE | STATISTICS | STORAGE | TABLESPACE\n-    | TEMP | TEMPORARY | TRIGGER | TYPE | UNBOUNDED | UNLOGGED | UPDATE\n-    | USAGE | VALID | VALIDATE | WITHIN | WITHOUT | ZONE | GROUPS\n-    | RECURSIVE | INSTANCE | DEFINER | PRESERVE | SQL | LOCAL | CASCADED\n-    | CLOSE | OPEN | NEXT | NAME | NAMES | INTEGER | REAL | DECIMAL | TYPE\n-    | BOOLEAN | CHAR | TIME | TIMESTAMP | INTERVAL\n-    | INT2 | INT4 | INT8 | FLOAT4 | FLOAT8 | MACADDR8 | INT4RANGE | INT8RANGE\n-    ;\n+    : ABORT\n+\t| ABSOLUTE\n+\t| ACCESS\n+\t| ACTION\n+\t| ADD\n+\t| ADMIN\n+\t| AFTER\n+\t| AGGREGATE\n+\t| ALSO\n+\t| ALTER\n+\t| ALWAYS\n+\t| ASSERTION\n+\t| ASSIGNMENT\n+\t| AT\n+\t| ATTACH\n+\t| ATTRIBUTE\n+\t| BACKWARD\n+\t| BEFORE\n+\t| BEGIN\n+\t| BY\n+\t| CACHE\n+\t| CALL\n+\t| CALLED\n+\t| CASCADE\n+\t| CASCADED\n+\t| CATALOG\n+\t| CHAIN\n+\t| CHARACTERISTICS\n+\t| CHECKPOINT\n+\t| CLASS\n+\t| CLOSE\n+\t| CLUSTER\n+\t| COLUMNS\n+\t| COMMENT\n+\t| COMMENTS\n+\t| COMMIT\n+\t| COMMITTED\n+\t| CONFIGURATION\n+\t| CONFLICT\n+\t| CONNECTION\n+\t| CONSTRAINTS\n+\t| CONTENT\n+\t| CONTINUE\n+\t| CONVERSION\n+\t| COPY\n+\t| COST\n+\t| CSV\n+\t| CUBE\n+\t| CURRENT\n+\t| CURSOR\n+\t| CYCLE\n+\t| DATA\n+\t| DATABASE\n+\t| DAY\n+\t| DEALLOCATE\n+\t| DECLARE\n+\t| DEFAULTS\n+\t| DEFERRED\n+\t| DEFINER\n+\t| DELETE\n+\t| DELIMITER\n+\t| DELIMITERS\n+\t| DEPENDS\n+\t| DETACH\n+\t| DICTIONARY\n+\t| DISABLE\n+\t| DISCARD\n+\t| DOCUMENT\n+\t| DOMAIN\n+\t| DOUBLE\n+\t| DROP\n+\t| EACH\n+\t| ENABLE\n+\t| ENCODING\n+\t| ENCRYPTED\n+\t| ENUM\n+\t| ESCAPE\n+\t| EVENT\n+\t| EXCLUDE\n+\t| EXCLUDING\n+\t| EXCLUSIVE\n+\t| EXECUTE\n+\t| EXPLAIN\n+\t| EXPRESSION\n+\t| EXTENSION\n+\t| EXTERNAL\n+\t| FAMILY\n+\t| FILTER\n+\t| FIRST\n+\t| FOLLOWING\n+\t| FORCE\n+\t| FORWARD\n+\t| FUNCTION\n+\t| FUNCTIONS\n+\t| GENERATED\n+\t| GLOBAL\n+\t| GRANTED\n+\t| GROUPS\n+\t| HANDLER\n+\t| HEADER\n+\t| HOLD\n+\t| HOUR\n+\t| IDENTITY\n+\t| IF\n+\t| IMMEDIATE\n+\t| IMMUTABLE\n+\t| IMPLICIT\n+\t| IMPORT\n+\t| INCLUDE\n+\t| INCLUDING\n+\t| INCREMENT\n+\t| INDEX\n+\t| INDEXES\n+\t| INHERIT\n+\t| INHERITS\n+\t| INLINE\n+\t| INPUT\n+\t| INSENSITIVE\n+\t| INSERT\n+\t| INSTEAD\n+\t| INVOKER\n+\t| ISOLATION\n+\t| KEY\n+\t| LABEL\n+\t| LANGUAGE\n+\t| LARGE\n+\t| LAST\n+\t| LEAKPROOF\n+\t| LEVEL\n+\t| LISTEN\n+\t| LOAD\n+\t| LOCAL\n+\t| LOCATION\n+\t| LOCK\n+\t| LOCKED\n+\t| LOGGED\n+\t| MAPPING\n+\t| MATCH\n+\t| MATERIALIZED\n+\t| MAXVALUE\n+\t| METHOD\n+\t| MINUTE\n+\t| MINVALUE\n+\t| MODE\n+\t| MONTH\n+\t| MOVE\n+\t| NAME\n+\t| NAMES\n+\t| NEW\n+\t| NEXT\n+\t| NFC\n+\t| NFD\n+\t| NFKC\n+\t| NFKD\n+\t| NO\n+\t| NORMALIZED\n+\t| NOTHING\n+\t| NOTIFY\n+\t| NOWAIT\n+\t| NULLS\n+\t| OBJECT\n+\t| OF\n+\t| OFF\n+\t| OIDS\n+\t| OLD\n+\t| OPERATOR\n+\t| OPTION\n+\t| OPTIONS\n+\t| ORDINALITY\n+\t| OTHERS\n+\t| OVER\n+\t| OVERRIDING\n+\t| OWNED\n+\t| OWNER\n+\t| PARALLEL\n+\t| PARSER\n+\t| PARTIAL\n+\t| PARTITION\n+\t| PASSING\n+\t| PASSWORD\n+\t| PLANS\n+\t| POLICY\n+\t| PRECEDING\n+\t| PREPARE\n+\t| PREPARED\n+\t| PRESERVE\n+\t| PRIOR\n+\t| PRIVILEGES\n+\t| PROCEDURAL\n+\t| PROCEDURE\n+\t| PROCEDURES\n+\t| PROGRAM\n+\t| PUBLICATION\n+\t| QUOTE\n+\t| RANGE\n+\t| READ\n+\t| REASSIGN\n+\t| RECHECK\n+\t| RECURSIVE\n+\t| REF\n+\t| REFERENCING\n+\t| REFRESH\n+\t| REINDEX\n+\t| RELATIVE\n+\t| RELEASE\n+\t| RENAME\n+\t| REPEATABLE\n+\t| REPLACE\n+\t| REPLICA\n+\t| RESET\n+\t| RESTART\n+\t| RESTRICT\n+\t| RETURNS\n+\t| REVOKE\n+\t| ROLE\n+\t| ROLLBACK\n+\t| ROLLUP\n+\t| ROUTINE\n+\t| ROUTINES\n+\t| ROWS\n+\t| RULE\n+\t| SAVEPOINT\n+\t| SCHEMA\n+\t| SCHEMAS\n+\t| SCROLL\n+\t| SEARCH\n+\t| SECOND\n+\t| SECURITY\n+\t| SEQUENCE\n+\t| SEQUENCES\n+\t| SERIALIZABLE\n+\t| SERVER\n+\t| SESSION\n+\t| SET\n+\t| SETS\n+\t| SHARE\n+\t| SHOW\n+\t| SIMPLE\n+//\t| SKIP\n+\t| SNAPSHOT\n+\t| SQL\n+\t| STABLE\n+\t| STANDALONE\n+\t| START\n+\t| STATEMENT\n+\t| STATISTICS\n+\t| STDIN\n+\t| STDOUT\n+\t| STORAGE\n+\t| STORED\n+\t| STRICT\n+\t| STRIP\n+\t| SUBSCRIPTION\n+\t| SUPPORT\n+\t| SYSID\n+\t| SYSTEM\n+\t| TABLES\n+\t| TABLESPACE\n+\t| TEMP\n+\t| TEMPLATE\n+\t| TEMPORARY\n+\t| TEXT\n+\t| TIES\n+\t| TRANSACTION\n+\t| TRANSFORM\n+\t| TRIGGER\n+\t| TRUNCATE\n+\t| TRUSTED\n+\t| TYPE\n+\t| TYPES\n+\t| UESCAPE\n+\t| UNBOUNDED\n+\t| UNCOMMITTED\n+\t| UNENCRYPTED\n+\t| UNKNOWN\n+\t| UNLISTEN\n+\t| UNLOGGED\n+\t| UNTIL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 438}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwMzEwMQ==", "bodyText": "Is there any difference?", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440603101", "createdAt": "2020-06-16T05:58:37Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -118,11 +486,11 @@ name\n     ;\n \n tableNames\n-    : LP_? tableName (COMMA_ tableName)* RP_?\n+    : '('? tableName (COMMA_ tableName)* ')'?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 495}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwMzk0NA==", "bodyText": "To replace '+' with Symbol.g4 is ok\uff1f", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440603944", "createdAt": "2020-06-16T06:01:15Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -141,166 +509,836 @@ primaryKey\n     : PRIMARY? KEY\n     ;\n \n-// TODO comb expr\n-expr\n-    : expr logicalOperator expr\n-    | notOperator_ expr\n-    | LP_ expr RP_\n-    | booleanPrimary\n-    ;\n-\n logicalOperator\n     : OR | OR_ | AND | AND_\n     ;\n \n-notOperator_\n-    : NOT | NOT_\n+comparisonOperator\n+    : EQ_ | GTE_ | GT_ | LTE_ | LT_ | NEQ_\n     ;\n \n-booleanPrimary\n-    : booleanPrimary IS NOT? (TRUE | FALSE | UNKNOWN | NULL)\n-    | booleanPrimary SAFE_EQ_ predicate\n-    | booleanPrimary comparisonOperator predicate\n-    | booleanPrimary comparisonOperator (ALL | ANY) subquery\n-    | predicate\n+\n+cursor_name\n+    : name\n+\t;\n+\n+a_expr\n+    : c_expr\n+\t| a_expr TYPE_CAST_ typeName\n+\t| a_expr COLLATE anyName\n+\t| a_expr AT TIME ZONE a_expr\n+\t| '+' a_expr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 542}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwNTIwMg==", "bodyText": "Do you think it is better to replace these literal symbols with Symbol.g4 ?", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440605202", "createdAt": "2020-06-16T06:05:05Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -141,166 +509,836 @@ primaryKey\n     : PRIMARY? KEY\n     ;\n \n-// TODO comb expr\n-expr\n-    : expr logicalOperator expr\n-    | notOperator_ expr\n-    | LP_ expr RP_\n-    | booleanPrimary\n-    ;\n-\n logicalOperator\n     : OR | OR_ | AND | AND_\n     ;\n \n-notOperator_\n-    : NOT | NOT_\n+comparisonOperator\n+    : EQ_ | GTE_ | GT_ | LTE_ | LT_ | NEQ_\n     ;\n \n-booleanPrimary\n-    : booleanPrimary IS NOT? (TRUE | FALSE | UNKNOWN | NULL)\n-    | booleanPrimary SAFE_EQ_ predicate\n-    | booleanPrimary comparisonOperator predicate\n-    | booleanPrimary comparisonOperator (ALL | ANY) subquery\n-    | predicate\n+\n+cursor_name\n+    : name\n+\t;\n+\n+a_expr\n+    : c_expr\n+\t| a_expr TYPE_CAST_ typeName\n+\t| a_expr COLLATE anyName\n+\t| a_expr AT TIME ZONE a_expr\n+\t| '+' a_expr\n+\t| '-' a_expr\n+\t| a_expr '+' a_expr\n+\t| a_expr '-' a_expr\n+\t| a_expr '*' a_expr\n+\t| a_expr '/' a_expr\n+\t| a_expr '%' a_expr\n+\t| a_expr '^' a_expr\n+\t| a_expr comparisonOperator a_expr\n+    | '(' a_expr ')' opt_indirection\n+\t| a_expr qual_Op a_expr\n+\t| qual_Op a_expr\n+\t| a_expr qual_Op\n+\t| NOT a_expr\n+\t| a_expr LIKE a_expr\n+\t| a_expr LIKE a_expr ESCAPE a_expr\n+\t| a_expr NOT LIKE a_expr\n+\t| a_expr NOT LIKE a_expr ESCAPE a_expr\n+\t| a_expr ILIKE a_expr\n+\t| a_expr ILIKE a_expr ESCAPE a_expr\n+\t| a_expr NOT ILIKE a_expr\n+\t| a_expr NOT ILIKE a_expr ESCAPE a_expr\n+\t| a_expr SIMILAR TO a_expr\n+\t| a_expr SIMILAR TO a_expr ESCAPE a_expr\n+\t| a_expr NOT SIMILAR TO a_expr\n+\t| a_expr NOT SIMILAR TO a_expr ESCAPE a_expr\n+\t| a_expr IS NULL\n+\t| a_expr ISNULL\n+\t| a_expr IS NOT NULL\n+\t| a_expr NOTNULL\n+\t| row OVERLAPS row\n+\t| a_expr IS TRUE\n+\t| a_expr IS NOT TRUE\n+\t| a_expr IS FALSE\n+\t| a_expr IS NOT FALSE\n+\t| a_expr IS UNKNOWN\n+\t| a_expr IS NOT UNKNOWN\n+\t| a_expr IS DISTINCT FROM a_expr\n+\t| a_expr IS NOT DISTINCT FROM a_expr\n+\t| a_expr IS OF '(' type_list ')'\n+\t| a_expr IS NOT OF '(' type_list ')'\n+\t| a_expr BETWEEN ASYMMETRIC? b_expr AND a_expr\n+\t| a_expr NOT BETWEEN ASYMMETRIC? b_expr AND a_expr\n+\t| a_expr BETWEEN SYMMETRIC b_expr AND a_expr\n+\t| a_expr NOT BETWEEN SYMMETRIC b_expr AND a_expr\n+\t| a_expr IN in_expr\n+\t| a_expr NOT IN in_expr\n+\t| a_expr subquery_Op sub_type select_with_parens\n+\t| a_expr subquery_Op sub_type '(' a_expr ')'\n+\t| UNIQUE select_with_parens\n+\t| a_expr IS DOCUMENT\n+\t| a_expr IS NOT DOCUMENT\n+\t| a_expr IS NORMALIZED\n+\t| a_expr IS unicodeNormalForm NORMALIZED\n+\t| a_expr IS NOT NORMALIZED\n+\t| a_expr IS NOT unicodeNormalForm NORMALIZED\n+\t| a_expr logicalOperator a_expr\n+\t| DEFAULT\n+\t;\n+\n+b_expr\n+    : c_expr\n+\t| b_expr TYPE_CAST_ typeName\n+\t| '+' b_expr\n+\t| '-' b_expr\n+\t| b_expr qual_Op b_expr\n+\t| qual_Op b_expr\n+\t| b_expr qual_Op\n+\t| b_expr IS DISTINCT FROM b_expr\n+\t| b_expr IS NOT DISTINCT FROM b_expr\n+\t| b_expr IS OF '(' type_list ')'\n+\t| b_expr IS NOT OF '(' type_list ')'\n+\t| b_expr IS DOCUMENT\n+\t| b_expr IS NOT DOCUMENT\n+\t;\n+\n+c_expr\n+    : parameterMarker\n+    | columnref\n+\t| aexprConst\n+\t| PARAM indirection_el?\n+\t| case_expr\n+\t| func_expr\n+\t| select_with_parens\n+\t| select_with_parens indirection\n+\t| EXISTS select_with_parens\n+\t| ARRAY select_with_parens\n+\t| ARRAY array_expr\n+\t| explicit_row\n+\t| implicit_row\n+\t| GROUPING '(' exprList ')'\n+\t;\n+\n+indirection\n+    : indirection_el\n+\t| indirection indirection_el\n+\t;\n+\n+opt_indirection\n+    : opt_indirection indirection_el |\n+\t;\n+\n+indirection_el\n+    : '.' attrName\n+\t| '.' '*'\n+\t| '[' a_expr ']'\n+\t| '[' slice_bound? ':' slice_bound? ']'\n+\t;\n+\n+slice_bound\n+    : a_expr\n+\t;\n+\n+in_expr\n+    : select_with_parens | '(' exprList ')'\n+\t;\n+\n+case_expr\n+    : CASE case_arg? when_clause_list case_default? END\n+\t;\n+\n+when_clause_list\n+    : when_clause\n+\t| when_clause_list when_clause\n+\t;\n+\n+when_clause\n+    : WHEN a_expr THEN a_expr\n+\t;\n+\n+case_default\n+    : ELSE a_expr\n+\t;\n+\n+case_arg\n+    : a_expr\n+\t;\n+\n+\n+columnref\n+    : colId\n+\t| colId indirection\n+\t;\n+\n+qual_Op\n+    : mathOperator\n+    | TILDE_TILDE_\n+    | NOT_TILDE_TILDE_\n+    | OPERATOR '(' any_operator ')'\n+\t;\n+\n+subquery_Op\n+    : all_Op\n+\t| OPERATOR '(' any_operator ')'\n+\t| LIKE\n+\t| NOT LIKE\n+\t| ILIKE\n+\t| NOT ILIKE\n+\t;\n+\n+all_Op\n+    : mathOperator\n+\t;\n+\n+mathOperator\n+    : '+'\n+\t| '-'\n+\t| '*'\n+\t| '/'\n+\t| '%'\n+\t| '^'\n+\t| '<'\n+\t| '>'\n+\t| '='\n+\t| LTE_\n+\t| GTE_\n+\t| NEQ_\n+\t;\n+\n+\n+qual_all_Op\n+    : all_Op\n+\t| OPERATOR '(' any_operator ')'\n+\t;\n+\n+asc_desc\n+    : ASC | DESC\n+\t;\n+\n+any_operator\n+    : all_Op | colId '.' any_operator\n+\t;\n+\n+frame_clause\n+    : RANGE frame_extent window_exclusion_clause?\n+\t| ROWS frame_extent window_exclusion_clause?\n+\t| GROUPS frame_extent window_exclusion_clause?\n+\t;\n+\n+frame_extent\n+    : frame_bound\n+\t| BETWEEN frame_bound AND frame_bound\n+\t;\n+\n+frame_bound\n+    : UNBOUNDED PRECEDING\n+\t| UNBOUNDED FOLLOWING\n+\t| CURRENT ROW\n+\t| a_expr PRECEDING\n+\t| a_expr FOLLOWING\n+\t;\n+\n+window_exclusion_clause\n+    : EXCLUDE CURRENT ROW\n+\t| EXCLUDE GROUP\n+\t| EXCLUDE TIES\n+\t| EXCLUDE NO OTHERS\n+\t;\n+\n+row\n+    : ROW '(' exprList ')'\n+\t| ROW '(' ')'\n+\t| '(' exprList ',' a_expr ')'\n+\t;\n+\n+explicit_row\n+    : ROW '(' exprList ')'\n+\t| ROW '(' ')'\n+\t;\n+\n+implicit_row\n+    : '(' exprList ',' a_expr ')'\n+\t;\n+\n+sub_type\n+    : ANY | SOME | ALL\n+\t;\n+\n+array_expr\n+    : '[' exprList ']'\n+\t| '[' array_expr_list ']'\n+\t| '[' ']'\n+\t;\n+\n+array_expr_list\n+    : array_expr | array_expr_list ',' array_expr\n+\t;\n+\n+func_arg_list\n+    : func_arg_expr\n+\t| func_arg_list ',' func_arg_expr\n+\t;\n+\n+param_name\n+    : typeFunctionName\n+\t;\n+\n+func_arg_expr\n+    : a_expr\n+\t| param_name CQ_ a_expr\n+\t| param_name GTE_ a_expr\n+\t;\n+\n+type_list\n+    : typeName\n+\t| type_list ',' typeName\n+\t;\n+\n+funcApplication\n+    : funcName '(' ')'\n+    | funcName '(' func_arg_list sort_clause? ')'\n+    | funcName '(' VARIADIC func_arg_expr sort_clause? ')'\n+    | funcName '(' func_arg_list ',' VARIADIC func_arg_expr sort_clause? ')'\n+    | funcName '(' ALL func_arg_list sort_clause? ')'\n+    | funcName '(' DISTINCT func_arg_list sort_clause? ')'\n+    | funcName '(' '*' ')'\n     ;\n \n-comparisonOperator\n-    : EQ_ | GTE_ | GT_ | LTE_ | LT_ | NEQ_\n+funcName\n+    : typeFunctionName | colId indirection\n     ;\n \n-predicate\n-    : bitExpr NOT? IN subquery\n-    | bitExpr NOT? IN LP_ expr (COMMA_ expr)* RP_\n-    | bitExpr NOT? BETWEEN bitExpr AND predicate\n-    | bitExpr NOT? LIKE simpleExpr (ESCAPE simpleExpr)?\n-    | bitExpr (TILDE_TILDE_ | NOT_TILDE_TILDE_) simpleExpr (ESCAPE simpleExpr)?\n-    | bitExpr\n-    ;\n-\n-bitExpr\n-    : bitExpr VERTICAL_BAR_ bitExpr\n-    | bitExpr AMPERSAND_ bitExpr\n-    | bitExpr SIGNED_LEFT_SHIFT_ bitExpr\n-    | bitExpr SIGNED_RIGHT_SHIFT_ bitExpr\n-    | bitExpr PLUS_ bitExpr\n-    | bitExpr MINUS_ bitExpr\n-    | bitExpr ASTERISK_ bitExpr\n-    | bitExpr SLASH_ bitExpr\n-    | bitExpr MOD_ bitExpr\n-    | bitExpr CARET_ bitExpr\n-    | simpleExpr\n-    ;\n-\n-simpleExpr\n-    : functionCall\n-    | parameterMarker\n-    | literals\n-    | columnName\n-    | simpleExpr COLLATE (STRING_ | identifier)\n-    | simpleExpr OR_ simpleExpr\n-    | (PLUS_ | MINUS_ | TILDE_ | NOT_ | BINARY) simpleExpr\n-    | ROW? LP_ expr (COMMA_ expr)* RP_\n-    | EXISTS? subquery\n-    | LBE_ identifier expr RBE_\n-    | caseExpression\n-    | CURRENT_USER\n+aexprConst\n+    : NUMBER_\n+\t| STRING_\n+\t| funcName STRING_\n+\t| funcName '(' func_arg_list sort_clause? ')' STRING_\n+\t| TRUE\n+\t| FALSE\n+\t| NULL\n+\t;\n+\n+qualifiedName\n+    : colId | colId indirection\n     ;\n \n-functionCall\n-    : aggregationFunction | specialFunction | regularFunction \n+colId\n+    : identifier\n     ;\n \n-aggregationFunction\n-    : aggregationFunctionName LP_ distinct? (expr (COMMA_ expr)* | ASTERISK_)? RP_ filterClause_?\n+typeFunctionName\n+    : identifier | unreservedWord |type_func_name_keyword\n     ;\n \n-aggregationFunctionName\n-    : MAX | MIN | SUM | COUNT | AVG\n+functionTable\n+    : functionExprWindowless optOrdinality\n+    | ROWS FROM '(' rowsFromList ')' optOrdinality\n     ;\n \n-distinct\n-    : DISTINCT\n+xmlTable\n+    : XMLTABLE '(' c_expr xmlExistsArgument COLUMNS xmlTableColumnList ')'\n+\t| XMLTABLE '(' XMLNAMESPACES '(' xmlNamespaceList ')' ',' c_expr xmlExistsArgument COLUMNS xmlTableColumnList ')'\n+\t;\n+\n+xmlTableColumnList\n+    : xmlTableColumnEl\n+\t| xmlTableColumnList ',' xmlTableColumnEl\n+\t;\n+\n+xmlTableColumnEl\n+    : colId typeName\n+\t| colId typeName xmlTableColumnOptionList\n+\t| colId FOR ORDINALITY\n+\t;\n+\n+xmlTableColumnOptionList\n+    : xmlTableColumnOptionEl\n+\t| xmlTableColumnOptionList xmlTableColumnOptionEl\n+\t;\n+\n+xmlTableColumnOptionEl\n+    : identifier b_expr\n+\t| DEFAULT b_expr\n+\t| NOT NULL\n+\t| NULL\n+\t;\n+\n+xmlNamespaceList\n+    : xmlNamespaceEl\n+\t| xmlNamespaceList ',' xmlNamespaceEl\n+\t;\n+\n+xmlNamespaceEl\n+    : b_expr AS identifier\n+\t| DEFAULT b_expr\n+\t;\n+\n+func_expr\n+    : funcApplication within_group_clause? filter_clause? over_clause?\n+\t| functionExprCommonSubexpr\n+\t;\n+\n+within_group_clause\n+    : WITHIN GROUP '(' sort_clause ')'\n+\t;\n+\n+filter_clause\n+    : FILTER '(' WHERE a_expr ')'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 945}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwNzY3Nw==", "bodyText": "cursor_name looks different from others.", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440607677", "createdAt": "2020-06-16T06:12:14Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -141,166 +509,836 @@ primaryKey\n     : PRIMARY? KEY\n     ;\n \n-// TODO comb expr\n-expr\n-    : expr logicalOperator expr\n-    | notOperator_ expr\n-    | LP_ expr RP_\n-    | booleanPrimary\n-    ;\n-\n logicalOperator\n     : OR | OR_ | AND | AND_\n     ;\n \n-notOperator_\n-    : NOT | NOT_\n+comparisonOperator\n+    : EQ_ | GTE_ | GT_ | LTE_ | LT_ | NEQ_\n     ;\n \n-booleanPrimary\n-    : booleanPrimary IS NOT? (TRUE | FALSE | UNKNOWN | NULL)\n-    | booleanPrimary SAFE_EQ_ predicate\n-    | booleanPrimary comparisonOperator predicate\n-    | booleanPrimary comparisonOperator (ALL | ANY) subquery\n-    | predicate\n+\n+cursor_name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 533}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwODAyNw==", "bodyText": "What's the meaning of a_expr, b_expr and c_expr?", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r440608027", "createdAt": "2020-06-16T06:13:06Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -141,166 +509,836 @@ primaryKey\n     : PRIMARY? KEY\n     ;\n \n-// TODO comb expr\n-expr\n-    : expr logicalOperator expr\n-    | notOperator_ expr\n-    | LP_ expr RP_\n-    | booleanPrimary\n-    ;\n-\n logicalOperator\n     : OR | OR_ | AND | AND_\n     ;\n \n-notOperator_\n-    : NOT | NOT_\n+comparisonOperator\n+    : EQ_ | GTE_ | GT_ | LTE_ | LT_ | NEQ_\n     ;\n \n-booleanPrimary\n-    : booleanPrimary IS NOT? (TRUE | FALSE | UNKNOWN | NULL)\n-    | booleanPrimary SAFE_EQ_ predicate\n-    | booleanPrimary comparisonOperator predicate\n-    | booleanPrimary comparisonOperator (ALL | ANY) subquery\n-    | predicate\n+\n+cursor_name\n+    : name\n+\t;\n+\n+a_expr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8656092fa79b1d1fb55a7fd815a5b1b93ddb98cb"}, "originalPosition": 537}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ddabc715c5d5e230a9fe4e794dbe17aa6e52135", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/7ddabc715c5d5e230a9fe4e794dbe17aa6e52135", "committedDate": "2020-06-16T10:06:50Z", "message": "format code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acca19b788716cf8458dfb9fc182c9abf423667c", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/acca19b788716cf8458dfb9fc182c9abf423667c", "committedDate": "2020-06-16T10:18:07Z", "message": "format code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDIzNzEx", "url": "https://github.com/apache/shardingsphere/pull/6045#pullrequestreview-432023711", "createdAt": "2020-06-17T02:55:01Z", "commit": {"oid": "acca19b788716cf8458dfb9fc182c9abf423667c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1NTowMlrOGkz3Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1NTowMlrOGkz3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MTYzOQ==", "bodyText": "Inconsistent rule format.", "url": "https://github.com/apache/shardingsphere/pull/6045#discussion_r441251639", "createdAt": "2020-06-17T02:55:02Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -23,41 +23,92 @@ parameterMarker\n     : QUESTION_ literalsType_?\n     ;\n \n-literals\n-    : stringLiterals\n-    | numberLiterals\n-    | hexadecimalLiterals\n-    | bitValueLiterals\n-    | booleanLiterals\n-    | nullValueLiterals\n-    ;\n-\n-stringLiterals\n-    : unicodeEscapes_? STRING_ literalsType_? uescape_?\n-    ;\n+reserved_keyword\n+    : ALL\n+\t| ANALYSE\n+\t| ANALYZE\n+\t| AND\n+\t| ANY", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acca19b788716cf8458dfb9fc182c9abf423667c"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4959, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}