{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODMzMDEz", "number": 4813, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyNToxNVrODpB3jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyNToxNVrODpB3jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzQ4ODE0OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/segment/expression/ExpressionAssert.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToyNToxNVrOF38c-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozMzo0NVrOF38xqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwNjQ1Nw==", "bodyText": "how to do this?", "url": "https://github.com/apache/shardingsphere/pull/4813#discussion_r394206457", "createdAt": "2020-03-18T09:25:15Z", "author": {"login": "kimmking"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/segment/expression/ExpressionAssert.java", "diffHunk": "@@ -95,8 +95,7 @@ public static void assertCommonExpression(final SQLCaseAssertContext assertConte\n      * @param expected expected subquery expression\n      */\n     public static void assertSubqueryExpression(final SQLCaseAssertContext assertContext, final SubqueryExpressionSegment actual, final ExpectedSubquery expected) {\n-        // TODO assert start index, stop index and sub select statement.\n         SelectStatementAssert.assertIs(assertContext, actual.getSubquery().getSelect(), expected.getSelectTestCases());\n-//        SQLSegmentAssert.assertIs(assertContext, actual, expected);\n+        SQLSegmentAssert.assertIs(assertContext, actual, expected);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4e3ab225233d6fa06be22aa532b8c5eaa555399"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMTc1Mg==", "bodyText": "fix #4783", "url": "https://github.com/apache/shardingsphere/pull/4813#discussion_r394211752", "createdAt": "2020-03-18T09:33:45Z", "author": {"login": "yu199195"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/segment/expression/ExpressionAssert.java", "diffHunk": "@@ -95,8 +95,7 @@ public static void assertCommonExpression(final SQLCaseAssertContext assertConte\n      * @param expected expected subquery expression\n      */\n     public static void assertSubqueryExpression(final SQLCaseAssertContext assertContext, final SubqueryExpressionSegment actual, final ExpectedSubquery expected) {\n-        // TODO assert start index, stop index and sub select statement.\n         SelectStatementAssert.assertIs(assertContext, actual.getSubquery().getSelect(), expected.getSelectTestCases());\n-//        SQLSegmentAssert.assertIs(assertContext, actual, expected);\n+        SQLSegmentAssert.assertIs(assertContext, actual, expected);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwNjQ1Nw=="}, "originalCommit": {"oid": "a4e3ab225233d6fa06be22aa532b8c5eaa555399"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1130, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}