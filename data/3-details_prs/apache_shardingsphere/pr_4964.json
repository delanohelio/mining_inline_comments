{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTUxMzU3", "number": 4964, "title": "Fixes insensitive for DESC table for encrypt.", "bodyText": "Fixes #4770 .\nChanges proposed in this pull request:\n\nGet column encrypt field from SchemaMetaData instead of EncryptRule.", "createdAt": "2020-03-26T12:52:17Z", "url": "https://github.com/apache/shardingsphere/pull/4964", "merged": true, "mergeCommit": {"oid": "14b1cc7815e62d540e65cbc65ccea23908b51bda"}, "closed": true, "closedAt": "2020-03-27T14:27:34Z", "author": {"login": "dongzl"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRbhesAH2gAyMzk0MTUxMzU3Ojc2NTYxYjZhNGQ1NDEyMDI3ZTBlYWMzOWQxZTE5NjgzZjdmMTY1N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRxjWIgFqTM4MjkwNjE4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/76561b6a4d5412027e0eac39d1e19683f7f1657c", "committedDate": "2020-03-26T12:46:48Z", "message": "fixes #4770, get column encrypt field from SchemaMetaData instead of EncryptRule."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTYwMjM3", "url": "https://github.com/apache/shardingsphere/pull/4964#pullrequestreview-382160237", "createdAt": "2020-03-26T16:02:55Z", "commit": {"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowMjo1NVrOF8ONTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjowNDo1OVrOF8OTtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MTY2MQ==", "bodyText": "Please do not use Map.Entry, just use Entry", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398691661", "createdAt": "2020-03-26T16:02:55Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MjQyNw==", "bodyText": "It is better to change to:\nif (entry.getValue() instanceof EncryptColumnMetaData) {\n    result.add((EncryptColumnMetaData) entry.getValue());\n}", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398692427", "createdAt": "2020-03-26T16:03:50Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n+                continue;\n+            }\n+            result.add((EncryptColumnMetaData) entry.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MzMwMQ==", "bodyText": "Please do not use Map.Entry, just use Entry", "url": "https://github.com/apache/shardingsphere/pull/4964#discussion_r398693301", "createdAt": "2020-03-26T16:04:59Z", "author": {"login": "terrymanu"}, "path": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "diffHunk": "@@ -66,19 +70,50 @@ public final boolean next() throws SQLException {\n         return true;\n     }\n     \n+    private Collection<String> getAssistedQueryColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getAssistedQueryColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<String> getPlainColumns() {\n+        return getTableEncryptColumnMetaDatas().stream().map(EncryptColumnMetaData::getPlainColumnName)\n+                .collect(Collectors.toList());\n+    }\n+    \n+    private Collection<EncryptColumnMetaData> getTableEncryptColumnMetaDatas() {\n+        Collection<EncryptColumnMetaData> result = new LinkedList<>();\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {\n+            if (!(entry.getValue() instanceof EncryptColumnMetaData)) {\n+                continue;\n+            }\n+            result.add((EncryptColumnMetaData) entry.getValue());\n+        }\n+        return result;\n+    }\n+    \n     @Override\n     public final Object getValue(final int columnIndex, final Class<?> type) throws SQLException {\n         if (1 == columnIndex) {\n             String columnName = getOriginalValue(columnIndex, type).toString();\n-            Optional<EncryptTable> encryptTable = encryptRule.findEncryptTable(tableName);\n-            if (encryptTable.isPresent() && encryptTable.get().getCipherColumns().contains(columnName)) {\n-                return encryptTable.get().getLogicColumnOfCipher(columnName);\n-            }\n-            return columnName;\n+            Optional<String> logicColumn = getLogicColumnOfCipher(columnName);\n+            return logicColumn.isPresent() ? logicColumn.get() : columnName;\n         }\n         return getOriginalValue(columnIndex, type);\n     }\n     \n+    private Optional<String> getLogicColumnOfCipher(final String cipherColumn) {\n+        for (Map.Entry<String, ColumnMetaData> entry : schemaMetaData.get(tableName).getColumns().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76561b6a4d5412027e0eac39d1e19683f7f1657c"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a24873fb93685b60a8317ea426510e20787b3d", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/75a24873fb93685b60a8317ea426510e20787b3d", "committedDate": "2020-03-27T12:18:20Z", "message": "fixes code review problem."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTA2MTg2", "url": "https://github.com/apache/shardingsphere/pull/4964#pullrequestreview-382906186", "createdAt": "2020-03-27T14:26:45Z", "commit": {"oid": "75a24873fb93685b60a8317ea426510e20787b3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3745, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}