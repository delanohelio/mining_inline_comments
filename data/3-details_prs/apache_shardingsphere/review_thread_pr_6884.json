{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NDU0OTU4", "number": 6884, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMzowMDoxM1rOEY4Bag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMzowMDoxM1rOEY4Bag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTE5MTQ2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-master-slave/shardingsphere-master-slave-common/src/test/java/org/apache/shardingsphere/masterslave/yaml/swapper/MasterSlaveRuleConfigurationYamlSwapperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMzowMDoxM1rOHBYRKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNDoxNjo1N1rOHBZMIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIwODIzNA==", "bodyText": "Please use assertThat instead of assertEquals", "url": "https://github.com/apache/shardingsphere/pull/6884#discussion_r471208234", "createdAt": "2020-08-17T03:00:13Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-features/shardingsphere-master-slave/shardingsphere-master-slave-common/src/test/java/org/apache/shardingsphere/masterslave/yaml/swapper/MasterSlaveRuleConfigurationYamlSwapperTest.java", "diffHunk": "@@ -89,4 +102,27 @@ private void assertMasterSlaveRuleConfiguration(final MasterSlaveRuleConfigurati\n         assertThat(group.getMasterDataSourceName(), is(\"master_ds\"));\n         assertThat(group.getSlaveDataSourceNames(), is(Arrays.asList(\"slave_ds_0\", \"slave_ds_1\")));\n     }\n+    \n+    @Test\n+    public void assertGetTypeClass() {\n+        MasterSlaveRuleConfigurationYamlSwapper masterSlaveRuleConfigurationYamlSwapper = getMasterSlaveRuleConfigurationYamlSwapper();\n+        Class<MasterSlaveRuleConfiguration> actual = masterSlaveRuleConfigurationYamlSwapper.getTypeClass();\n+        assertTrue(actual.isAssignableFrom(MasterSlaveRuleConfiguration.class));\n+    }\n+    \n+    @Test\n+    public void assertGetOrder() {\n+        MasterSlaveRuleConfigurationYamlSwapper masterSlaveRuleConfigurationYamlSwapper = getMasterSlaveRuleConfigurationYamlSwapper();\n+        int actual = masterSlaveRuleConfigurationYamlSwapper.getOrder();\n+        assertEquals(MasterSlaveOrder.ORDER, actual);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ac23a15d8fecbd28dde430b2bc137f7cd1d4017"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIyMzMyOA==", "bodyText": "already edited", "url": "https://github.com/apache/shardingsphere/pull/6884#discussion_r471223328", "createdAt": "2020-08-17T04:16:57Z", "author": {"login": "yuzel"}, "path": "shardingsphere-features/shardingsphere-master-slave/shardingsphere-master-slave-common/src/test/java/org/apache/shardingsphere/masterslave/yaml/swapper/MasterSlaveRuleConfigurationYamlSwapperTest.java", "diffHunk": "@@ -89,4 +102,27 @@ private void assertMasterSlaveRuleConfiguration(final MasterSlaveRuleConfigurati\n         assertThat(group.getMasterDataSourceName(), is(\"master_ds\"));\n         assertThat(group.getSlaveDataSourceNames(), is(Arrays.asList(\"slave_ds_0\", \"slave_ds_1\")));\n     }\n+    \n+    @Test\n+    public void assertGetTypeClass() {\n+        MasterSlaveRuleConfigurationYamlSwapper masterSlaveRuleConfigurationYamlSwapper = getMasterSlaveRuleConfigurationYamlSwapper();\n+        Class<MasterSlaveRuleConfiguration> actual = masterSlaveRuleConfigurationYamlSwapper.getTypeClass();\n+        assertTrue(actual.isAssignableFrom(MasterSlaveRuleConfiguration.class));\n+    }\n+    \n+    @Test\n+    public void assertGetOrder() {\n+        MasterSlaveRuleConfigurationYamlSwapper masterSlaveRuleConfigurationYamlSwapper = getMasterSlaveRuleConfigurationYamlSwapper();\n+        int actual = masterSlaveRuleConfigurationYamlSwapper.getOrder();\n+        assertEquals(MasterSlaveOrder.ORDER, actual);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIwODIzNA=="}, "originalCommit": {"oid": "1ac23a15d8fecbd28dde430b2bc137f7cd1d4017"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 359, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}