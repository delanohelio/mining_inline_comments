{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MTYzMjc4", "number": 5019, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzoxNFrODtBobw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo1NDoyMVrODtEnfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTM5MjQ3OnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzoxNFrOF-NXKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo0NzozNVrOF-R2Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw==", "bodyText": "Please reference other javadoc and make them consist", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400774953", "createdAt": "2020-03-31T09:37:14Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader;\n+import org.apache.shardingsphere.core.metadata.ShardingTableMetaDataDecorator;\n+import org.apache.shardingsphere.core.rule.ShardingRule;\n+import org.apache.shardingsphere.encrypt.metadata.EncryptTableMetaDataDecorator;\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.underlying.common.config.properties.ConfigurationPropertyKey;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The type Abstract table statement meta data.\n+ */\n+public abstract class AbstractTableStatementMetaData {\n+    \n+    /**\n+     * Load table meta table meta data.\n+     *\n+     * @param tableName              the table name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA4OQ==", "bodyText": "fix it", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825089", "createdAt": "2020-03-31T11:03:19Z", "author": {"login": "yu199195"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader;\n+import org.apache.shardingsphere.core.metadata.ShardingTableMetaDataDecorator;\n+import org.apache.shardingsphere.core.rule.ShardingRule;\n+import org.apache.shardingsphere.encrypt.metadata.EncryptTableMetaDataDecorator;\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.underlying.common.config.properties.ConfigurationPropertyKey;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The type Abstract table statement meta data.\n+ */\n+public abstract class AbstractTableStatementMetaData {\n+    \n+    /**\n+     * Load table meta table meta data.\n+     *\n+     * @param tableName              the table name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw=="}, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0ODQxMQ==", "bodyText": "It looks like not fixed yet.", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400848411", "createdAt": "2020-03-31T11:47:35Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/AbstractTableStatementMetaData.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader;\n+import org.apache.shardingsphere.core.metadata.ShardingTableMetaDataDecorator;\n+import org.apache.shardingsphere.core.rule.ShardingRule;\n+import org.apache.shardingsphere.encrypt.metadata.EncryptTableMetaDataDecorator;\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.underlying.common.config.properties.ConfigurationPropertyKey;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The type Abstract table statement meta data.\n+ */\n+public abstract class AbstractTableStatementMetaData {\n+    \n+    /**\n+     * Load table meta table meta data.\n+     *\n+     * @param tableName              the table name", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDk1Mw=="}, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTM5NTczOnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozODoxMlrOF-NZQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTowMzoxNlrOF-Qa5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTQ5MQ==", "bodyText": "Please remove useless line", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400775491", "createdAt": "2020-03-31T09:38:12Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropTableStatement;\n+\n+/**\n+ * The type Drop table statement meta data refresh.\n+ */\n+public final class DropTableStatementMetaDataRefresh implements SQLStatementMetaDataRefresh<DropTableStatement> {\n+    \n+    @Override\n+    public void refreshMetaData(final ShardingRuntimeContext shardingRuntimeContext, final SQLStatementContext<DropTableStatement> sqlStatementContext) {\n+        for (SimpleTableSegment each : sqlStatementContext.getSqlStatement().getTables()) {\n+            shardingRuntimeContext.getMetaData().getSchema().remove(each.getTableName().getIdentifier().getValue());\n+        }\n+    }\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA2Mw==", "bodyText": "ok\uff0cfix it", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825063", "createdAt": "2020-03-31T11:03:16Z", "author": {"login": "yu199195"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/DropTableStatementMetaDataRefresh.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropTableStatement;\n+\n+/**\n+ * The type Drop table statement meta data refresh.\n+ */\n+public final class DropTableStatementMetaDataRefresh implements SQLStatementMetaDataRefresh<DropTableStatement> {\n+    \n+    @Override\n+    public void refreshMetaData(final ShardingRuntimeContext shardingRuntimeContext, final SQLStatementContext<DropTableStatement> sqlStatementContext) {\n+        for (SimpleTableSegment each : sqlStatementContext.getSqlStatement().getTables()) {\n+            shardingRuntimeContext.getMetaData().getSchema().remove(each.getTableName().getIdentifier().getValue());\n+        }\n+    }\n+    ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTQ5MQ=="}, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTM5NzM5OnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozODozN1rOF-NaSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTowMzoxM1rOF-Qa0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTc1NA==", "bodyText": "sql should be SQL in javadoc", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400775754", "createdAt": "2020-03-31T09:38:37Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.AlterTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The type Sql statement meta data refresh factory.\n+ */\n+public final class SQLStatementMetaDataRefreshFactory {\n+    \n+    private static final Map<Class<?>, SQLStatementMetaDataRefresh<? extends SQLStatement>> REFRESH_MAP = new HashMap<>();\n+    \n+    static {\n+        REFRESH_MAP.put(CreateTableStatementContext.class, new CreateTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(AlterTableStatementContext.class, new AlterTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropTableStatementContext.class, new DropTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(CreateIndexStatementContext.class, new CreateIndexStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropIndexStatementContext.class, new DropIndexStatementMetaDataRefresh());\n+    }\n+    \n+    /**\n+     * New instance sql statement meta data refresh.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNTA0MA==", "bodyText": "fix.", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400825040", "createdAt": "2020-03-31T11:03:13Z", "author": {"login": "yu199195"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefreshFactory.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.AlterTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.CreateTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropIndexStatementContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.DropTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The type Sql statement meta data refresh factory.\n+ */\n+public final class SQLStatementMetaDataRefreshFactory {\n+    \n+    private static final Map<Class<?>, SQLStatementMetaDataRefresh<? extends SQLStatement>> REFRESH_MAP = new HashMap<>();\n+    \n+    static {\n+        REFRESH_MAP.put(CreateTableStatementContext.class, new CreateTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(AlterTableStatementContext.class, new AlterTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropTableStatementContext.class, new DropTableStatementMetaDataRefresh());\n+        REFRESH_MAP.put(CreateIndexStatementContext.class, new CreateIndexStatementMetaDataRefresh());\n+        REFRESH_MAP.put(DropIndexStatementContext.class, new DropIndexStatementMetaDataRefresh());\n+    }\n+    \n+    /**\n+     * New instance sql statement meta data refresh.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NTc1NA=="}, "originalCommit": {"oid": "b6d4ec3609e7abf125dc08d1166b482f8d5c60f4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTg4MTU5OnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo1NDoyMVrOF-SElA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTo1NDoyMVrOF-SElA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MjExNg==", "bodyText": "Class name should be noun", "url": "https://github.com/apache/shardingsphere/pull/5019#discussion_r400852116", "createdAt": "2020-03-31T11:54:21Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/refreh/SQLStatementMetaDataRefresh.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.refreh;\n+\n+import org.apache.shardingsphere.shardingjdbc.jdbc.core.context.ShardingRuntimeContext;\n+import org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * The interface SQL statement meta data refresh.\n+ *\n+ * @param <T> the type parameter\n+ */\n+public interface SQLStatementMetaDataRefresh<T extends SQLStatement> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9bf8cee55faaa6e3dc044a4e80940950f6f6f60"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1116, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}