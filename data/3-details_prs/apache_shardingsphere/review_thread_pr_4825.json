{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzE2MjY3", "number": 4825, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozNTo0MFrODpCG8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozODo1OVrODpI4og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUyNzUzOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-configuration/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/OrchestrationConfigurationYamlSwapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozNTo0MFrOF3815g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozNTo0MFrOF3815g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMjgzOA==", "bodyText": "why?", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394212838", "createdAt": "2020-03-18T09:35:40Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-configuration/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/OrchestrationConfigurationYamlSwapper.java", "diffHunk": "@@ -40,7 +40,7 @@\n      */\n     @Override\n     public YamlOrchestrationConfiguration swap(final OrchestrationConfiguration configuration) {\n-        Map<String, YamlCenterRepositoryConfiguration> yamlInstanceConfigurationMap = new HashMap();\n+        Map<String, YamlCenterRepositoryConfiguration> yamlInstanceConfigurationMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUzMDgxOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozNjozOFrOF384Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozNjozOFrOF384Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxMzQwMg==", "bodyText": "unnecessary.\na local static field is better.", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394213402", "createdAt": "2020-03-18T09:36:38Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "diffHunk": "@@ -228,7 +229,7 @@ public void watch(final String key, final DataChangedEventListener dataChangedEv\n             }\n             DataChangedEvent.ChangedType changedType = getChangedType(event);\n             if (DataChangedEvent.ChangedType.IGNORED != changedType) {\n-                dataChangedEventListener.onChange(new DataChangedEvent(data.getPath(), null == data.getData() ? null : new String(data.getData(), \"UTF-8\"), changedType));\n+                dataChangedEventListener.onChange(new DataChangedEvent(data.getPath(), null == data.getData() ? null : new String(data.getData(), StandardCharsets.UTF_8), changedType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzUzNzY5OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozODozNlrOF388kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozODozNlrOF388kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNDU0NQ==", "bodyText": "good.\nbut static field referred better than literal string.", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394214545", "createdAt": "2020-03-18T09:38:36Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "diffHunk": "@@ -41,6 +42,8 @@\n      * @return OrchestrationType enum, return {@code null} if not found\n      */\n     public static CenterType findByValue(final String value) {\n-        return Arrays.stream(CenterType.values()).filter(each -> each.getValue().equals(value)).findFirst().get();\n+        return Arrays.stream(CenterType.values())\n+                .filter(each -> each.getValue().equals(value)).findFirst()\n+                .orElseThrow(() -> new OrchestrationException(\"now only support :{},{}\", \"registry_center\", \"config_center\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzU0MDI4OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-configcenter/src/main/java/org/apache/shardingsphere/orchestration/core/configcenter/ConfigCenter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTozOToyM1rOF38-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDowNjo1NlrOF39_wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNDk4Ng==", "bodyText": "why?", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394214986", "createdAt": "2020-03-18T09:39:23Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-configcenter/src/main/java/org/apache/shardingsphere/orchestration/core/configcenter/ConfigCenter.java", "diffHunk": "@@ -180,13 +180,12 @@ private void persistShardingSchemaName(final String shardingSchemaName) {\n             repository.persist(node.getSchemaPath(), shardingSchemaName);\n             return;\n         }\n-        List<String> schemaNameList = Splitter.on(\",\").splitToList(shardingSchemaNames);\n+        List<String> schemaNameList = Lists.newArrayList(Splitter.on(\",\").split(shardingSchemaNames));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzMTc0NQ==", "bodyText": "splitToList return readOnly List,and Then the list will add,", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394231745", "createdAt": "2020-03-18T10:06:56Z", "author": {"login": "yu199195"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-configcenter/src/main/java/org/apache/shardingsphere/orchestration/core/configcenter/ConfigCenter.java", "diffHunk": "@@ -180,13 +180,12 @@ private void persistShardingSchemaName(final String shardingSchemaName) {\n             repository.persist(node.getSchemaPath(), shardingSchemaName);\n             return;\n         }\n-        List<String> schemaNameList = Splitter.on(\",\").splitToList(shardingSchemaNames);\n+        List<String> schemaNameList = Lists.newArrayList(Splitter.on(\",\").split(shardingSchemaNames));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNDk4Ng=="}, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzU0NjI0OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-configcenter/src/main/java/org/apache/shardingsphere/orchestration/core/configcenter/ConfigCenter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTo0MTowNVrOF39CFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTo0MTowNVrOF39CFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIxNTk1Ng==", "bodyText": "unnecessary.", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394215956", "createdAt": "2020-03-18T09:41:05Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-configcenter/src/main/java/org/apache/shardingsphere/orchestration/core/configcenter/ConfigCenter.java", "diffHunk": "@@ -237,9 +236,9 @@ public boolean isShadowRule(final String shardingSchemaName) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     public Map<String, DataSourceConfiguration> loadDataSourceConfigurations(final String shardingSchemaName) {\n-        Map<String, YamlDataSourceConfiguration> result = (Map) YamlEngine.unmarshal(repository.get(node.getDataSourcePath(shardingSchemaName)));\n+        Map<String, YamlDataSourceConfiguration> result = (Map<String, YamlDataSourceConfiguration>) YamlEngine.unmarshal(repository.get(node.getDataSourcePath(shardingSchemaName)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d30673bde6c2905da5722b2b391268e5561b6fc"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDE0NjA0OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozODowNVrOF4DClQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozODowNVrOF4DClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxNDM4OQ==", "bodyText": "blank line should be with four space", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394314389", "createdAt": "2020-03-18T12:38:05Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "diffHunk": "@@ -31,7 +32,7 @@\n     \n     REGISTRY_CENTER(\"registry_center\"),\n     CONFIG_CENTER(\"config_center\");\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8ffde509d862f1910a87e7d4dccaed9735c4cb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDE1MTA5OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozOTozMlrOF4DF7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjozOTozMlrOF4DF7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxNTI0NA==", "bodyText": "don't refer guava", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394315244", "createdAt": "2020-03-18T12:39:32Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "diffHunk": "@@ -228,7 +228,7 @@ public void watch(final String key, final DataChangedEventListener dataChangedEv\n             }\n             DataChangedEvent.ChangedType changedType = getChangedType(event);\n             if (DataChangedEvent.ChangedType.IGNORED != changedType) {\n-                dataChangedEventListener.onChange(new DataChangedEvent(data.getPath(), null == data.getData() ? null : new String(data.getData(), \"UTF-8\"), changedType));\n+                dataChangedEventListener.onChange(new DataChangedEvent(data.getPath(), null == data.getData() ? null : new String(data.getData(), Charsets.UTF_8), changedType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8ffde509d862f1910a87e7d4dccaed9735c4cb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDYzNjI4OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozODozOVrOF4IBPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozODozOVrOF4IBPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM5NTk2Ng==", "bodyText": "remove nio static, use local static field.", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394395966", "createdAt": "2020-03-18T14:38:39Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/center/instance/CuratorZookeeperCenterRepository.java", "diffHunk": "@@ -86,7 +86,7 @@ private CuratorFramework buildCuratorClient(final CenterConfiguration config, fi\n             builder.connectionTimeoutMs(operationTimeoutMilliseconds);\n         }\n         if (!Strings.isNullOrEmpty(digest)) {\n-            builder.authorization(\"digest\", digest.getBytes(Charsets.UTF_8))\n+            builder.authorization(\"digest\", digest.getBytes(StandardCharsets.UTF_8))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf016e16b92a3b8e522f719497402babe64d4f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDYzNzc4OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozODo1OVrOF4ICMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozODo1OVrOF4ICMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM5NjIwOQ==", "bodyText": "blank line should be with four space", "url": "https://github.com/apache/shardingsphere/pull/4825#discussion_r394396209", "createdAt": "2020-03-18T14:38:59Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-common/src/main/java/org/apache/shardingsphere/orchestration/core/common/CenterType.java", "diffHunk": "@@ -31,16 +32,18 @@\n     \n     REGISTRY_CENTER(\"registry_center\"),\n     CONFIG_CENTER(\"config_center\");\n-    \n+\n     private final String value;\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf016e16b92a3b8e522f719497402babe64d4f"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1133, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}