{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTczNjY4", "number": 4952, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1NTo1MVrODrtmww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1Nzo0NlrODr6n5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTYyNTYzOnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1NTo1MVrOF8N3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1NTo1MVrOF8N3jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4NjA5Mg==", "bodyText": "please remove useless blank line", "url": "https://github.com/apache/shardingsphere/pull/4952#discussion_r398686092", "createdAt": "2020-03-26T15:55:51Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset;\n+\n+import org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest;\n+import org.junit.Test;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EncryptResultSetTest extends AbstractEncryptJDBCDatabaseAndTableTest {\n+\n+    private static final String SELECT_SQL_TO_ASSERT = \"SELECT id, cipher_pwd, plain_pwd FROM t_encrypt\";\n+\n+    @Test\n+    public void assertResultSetIsBeforeFirst() throws SQLException {\n+        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,\n+                ResultSet.CONCUR_READ_ONLY)) {\n+            ResultSet resultSet = statement.executeQuery(SELECT_SQL_TO_ASSERT);\n+            assertTrue(resultSet.isBeforeFirst());\n+            resultSet.next();\n+            assertEquals(1, resultSet.getRow());\n+            resultSet.afterLast();\n+            assertTrue(resultSet.isAfterLast());\n+            resultSet.beforeFirst();\n+            assertTrue(resultSet.isBeforeFirst());\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d72965ecc285d8b9ead8d9e36a26b27dc3b46d0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTYzNDYxOnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1Nzo0MlrOF8N9Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTo1Nzo0MlrOF8N9Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4NzU2Mw==", "bodyText": "This test method test more than one case, let's separate it to multiple methods.\nJust follow SRP.", "url": "https://github.com/apache/shardingsphere/pull/4952#discussion_r398687563", "createdAt": "2020-03-26T15:57:42Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset;\n+\n+import org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest;\n+import org.junit.Test;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EncryptResultSetTest extends AbstractEncryptJDBCDatabaseAndTableTest {\n+\n+    private static final String SELECT_SQL_TO_ASSERT = \"SELECT id, cipher_pwd, plain_pwd FROM t_encrypt\";\n+\n+    @Test\n+    public void assertResultSetIsBeforeFirst() throws SQLException {\n+        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,\n+                ResultSet.CONCUR_READ_ONLY)) {\n+            ResultSet resultSet = statement.executeQuery(SELECT_SQL_TO_ASSERT);\n+            assertTrue(resultSet.isBeforeFirst());\n+            resultSet.next();\n+            assertEquals(1, resultSet.getRow());\n+            resultSet.afterLast();\n+            assertTrue(resultSet.isAfterLast());\n+            resultSet.beforeFirst();\n+            assertTrue(resultSet.isBeforeFirst());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d72965ecc285d8b9ead8d9e36a26b27dc3b46d0"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mzc1NjgxOnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1Njo0MVrOF8iXcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1Njo0MVrOF8iXcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyMTkzNw==", "bodyText": "Please use assertThat instead of assertEquals", "url": "https://github.com/apache/shardingsphere/pull/4952#discussion_r399021937", "createdAt": "2020-03-27T03:56:41Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset;\n+\n+import org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest;\n+import org.junit.Test;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EncryptResultSetTest extends AbstractEncryptJDBCDatabaseAndTableTest {\n+\n+    private static final String SELECT_SQL_TO_ASSERT = \"SELECT id, cipher_pwd, plain_pwd FROM t_encrypt\";\n+\n+    @Test\n+    public void assertResultSetIsBeforeFirst() throws SQLException {\n+        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,\n+                ResultSet.CONCUR_READ_ONLY)) {\n+            ResultSet resultSet = statement.executeQuery(SELECT_SQL_TO_ASSERT);\n+            assertTrue(resultSet.isBeforeFirst());\n+            resultSet.next();\n+            assertEquals(1, resultSet.getRow());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5582835e33fd50099d29fb859f28637018fa327d"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mzc1NzM2OnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1NzowNlrOF8iXyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1NzowNlrOF8iXyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyMjAyNA==", "bodyText": "Please add final if the class is not designed for extend", "url": "https://github.com/apache/shardingsphere/pull/4952#discussion_r399022024", "createdAt": "2020-03-27T03:57:06Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset;\n+\n+import org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest;\n+import org.junit.Test;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EncryptResultSetTest extends AbstractEncryptJDBCDatabaseAndTableTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5582835e33fd50099d29fb859f28637018fa327d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mzc1ODQ1OnYy", "diffSide": "RIGHT", "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1Nzo0NlrOF8iYZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzo1Nzo0NlrOF8iYZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAyMjE4MA==", "bodyText": "Please use try with resource to handle ResultSet", "url": "https://github.com/apache/shardingsphere/pull/4952#discussion_r399022180", "createdAt": "2020-03-27T03:57:46Z", "author": {"login": "terrymanu"}, "path": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset;\n+\n+import org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest;\n+import org.junit.Test;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public class EncryptResultSetTest extends AbstractEncryptJDBCDatabaseAndTableTest {\n+\n+    private static final String SELECT_SQL_TO_ASSERT = \"SELECT id, cipher_pwd, plain_pwd FROM t_encrypt\";\n+\n+    @Test\n+    public void assertResultSetIsBeforeFirst() throws SQLException {\n+        try (Statement statement = getEncryptConnection().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,\n+                ResultSet.CONCUR_READ_ONLY)) {\n+            ResultSet resultSet = statement.executeQuery(SELECT_SQL_TO_ASSERT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5582835e33fd50099d29fb859f28637018fa327d"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1098, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}