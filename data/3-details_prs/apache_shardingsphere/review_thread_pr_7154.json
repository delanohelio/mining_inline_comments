{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTAxMjE0", "number": 7154, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMDoxM1rOEeFB0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyNDozMFrOEeFDOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1MTIyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMDoxM1rOHJjmBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMDoxM1rOHJjmBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjQwNA==", "bodyText": "Please add final if the class is not design for extension", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782404", "createdAt": "2020-08-30T15:20:13Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1MjYzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMTo0NVrOHJjmsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMTo0NVrOHJjmsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjU3Nw==", "bodyText": "What's mean ofassertGetEnginesNull? Do you mean assertNewInstanceWithEmptyEngines?", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782577", "createdAt": "2020-08-30T15:21:45Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1Mjk5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjowMFrOHJjm3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjowMFrOHJjm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjYyMQ==", "bodyText": "Please use static import with Assert.assertTrue", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782621", "createdAt": "2020-08-30T15:22:00Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts();\n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertTrue(engines.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1MzE4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjozMlrOHJjnAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjozMlrOHJjnAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjY1Ng==", "bodyText": "Please use static import with Assert. assertNotNull", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782656", "createdAt": "2020-08-30T15:22:32Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts();\n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertTrue(engines.isEmpty());\n+    }\n+    \n+    @Test\n+    public void assertGetEngines() {\n+        Map<String, ShardingTransactionManagerEngine> actualEngine = new HashMap<>();\n+        actualEngine.put(DefaultSchema.LOGIC_NAME, new ShardingTransactionManagerEngine());\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts(actualEngine);\n+        \n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertThat(engines.size(), is(1));\n+        Assert.assertThat(engines, is(actualEngine));\n+        ShardingTransactionManagerEngine defaultEngine = standardTransactionContexts.getDefaultTransactionManagerEngine();\n+        Assert.assertNotNull(defaultEngine);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1MzMwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjo1MVrOHJjnFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMjo1MVrOHJjnFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjY3Ng==", "bodyText": "Please use static import with Assert. assertThat", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782676", "createdAt": "2020-08-30T15:22:51Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts();\n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertTrue(engines.isEmpty());\n+    }\n+    \n+    @Test\n+    public void assertGetEngines() {\n+        Map<String, ShardingTransactionManagerEngine> actualEngine = new HashMap<>();\n+        actualEngine.put(DefaultSchema.LOGIC_NAME, new ShardingTransactionManagerEngine());\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts(actualEngine);\n+        \n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertThat(engines.size(), is(1));\n+        Assert.assertThat(engines, is(actualEngine));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1MzU2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMzowNVrOHJjnMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyMzowNVrOHJjnMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjcwNg==", "bodyText": "Please remove useless empty line", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782706", "createdAt": "2020-08-30T15:23:05Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts();\n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertTrue(engines.isEmpty());\n+    }\n+    \n+    @Test\n+    public void assertGetEngines() {\n+        Map<String, ShardingTransactionManagerEngine> actualEngine = new HashMap<>();\n+        actualEngine.put(DefaultSchema.LOGIC_NAME, new ShardingTransactionManagerEngine());\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts(actualEngine);\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc1NDgwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyNDozMFrOHJjnyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToyNDozMFrOHJjnyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4Mjg1OQ==", "bodyText": "It seems we do not need to assert method getEngines which is for simple getter only.\nIt is necessary to assert method getDefaultTransactionManagerEngine", "url": "https://github.com/apache/shardingsphere/pull/7154#discussion_r479782859", "createdAt": "2020-08-30T15:24:30Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-transaction/shardingsphere-transaction-core/src/test/java/org/apache/shardingsphere/transaction/context/impl/StandardTransactionContextsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.transaction.context.impl;\n+\n+import org.apache.shardingsphere.infra.database.DefaultSchema;\n+import org.apache.shardingsphere.transaction.ShardingTransactionManagerEngine;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+\n+public class StandardTransactionContextsTest {\n+    \n+    @Test\n+    public void assertGetEnginesNull() {\n+        StandardTransactionContexts standardTransactionContexts = new StandardTransactionContexts();\n+        Map<String, ShardingTransactionManagerEngine> engines = standardTransactionContexts.getEngines();\n+        Assert.assertTrue(engines.isEmpty());\n+    }\n+    \n+    @Test\n+    public void assertGetEngines() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "072dbadf2ac3818cdbe67df370bad403a557d038"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 301, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}