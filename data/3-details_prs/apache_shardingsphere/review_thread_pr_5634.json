{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODg5ODkz", "number": 5634, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTozNFrOD9DazQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTo1MFrOD9Da1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzQ1NzQxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTozNFrOGWXf_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTozNFrOGWXf_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg3OQ==", "bodyText": "should keep incident in new line", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106879", "createdAt": "2020-05-16T02:01:34Z", "author": {"login": "cherrylzhao"}, "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -51,17 +51,12 @@\n             registerServiceClass(service, each);\n         }\n     }\n-    \n-    @SuppressWarnings(\"unchecked\")\n+\n     private static <T> void registerServiceClass(final Class<T> service, final T instance) {\n-        Collection<Class<?>> serviceClasses = SERVICE_MAP.get(service);\n-        if (null == serviceClasses) {\n-            serviceClasses = new LinkedHashSet<>();\n-        }\n+        Collection<Class<?>> serviceClasses = SERVICE_MAP.computeIfAbsent(service, unused -> new LinkedHashSet<>());\n         serviceClasses.add(instance.getClass());\n-        SERVICE_MAP.put(service, serviceClasses);\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzQ1NzQ5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTo1MFrOGWXgEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMjowMTo1MFrOGWXgEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwNjg5Nw==", "bodyText": "should keep incident in new line", "url": "https://github.com/apache/shardingsphere/pull/5634#discussion_r426106897", "createdAt": "2020-05-16T02:01:50Z", "author": {"login": "cherrylzhao"}, "path": "shardingsphere-spi/src/main/java/org/apache/shardingsphere/sharding/spi/ShardingSphereServiceLoader.java", "diffHunk": "@@ -73,7 +68,7 @@\n     public static <T> Collection<T> newServiceInstances(final Class<T> service) {\n         return SERVICE_MAP.containsKey(service) ? SERVICE_MAP.get(service).stream().map(each -> (T) newServiceInstance(each)).collect(Collectors.toList()) : Collections.emptyList();\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8288d46d700a2815f7414dfc94aaa42c2363baee"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 885, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}