{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODI4NzM1", "number": 6348, "title": "Refactor orchestration facade", "bodyText": "", "createdAt": "2020-07-14T11:44:22Z", "url": "https://github.com/apache/shardingsphere/pull/6348", "merged": true, "mergeCommit": {"oid": "803611ca626394f1c85e672452c082ecb283da90"}, "closed": true, "closedAt": "2020-07-14T13:13:20Z", "author": {"login": "menghaoranss"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc00gR-AH2gAyNDQ4ODI4NzM1OmUzYjM4OThmYjE2MjRiYmQ2OGZhMzFhMjhiZDU5YTllM2RiYTA1ZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc011GrgFqTQ0ODA5MDM4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3b3898fb1624bbd68fa31a28bd59a9e3dba05dd", "author": {"user": {"login": "menghaoranss", "name": "Haoran Meng"}}, "url": "https://github.com/apache/shardingsphere/commit/e3b3898fb1624bbd68fa31a28bd59a9e3dba05dd", "committedDate": "2020-07-14T11:40:28Z", "message": "refactor orchestration facade"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDkwMzgx", "url": "https://github.com/apache/shardingsphere/pull/6348#pullrequestreview-448090381", "createdAt": "2020-07-14T13:10:25Z", "commit": {"oid": "e3b3898fb1624bbd68fa31a28bd59a9e3dba05dd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzoxMDoyNVrOGxS9YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMzoxMDoyNVrOGxS9YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0NDAzMw==", "bodyText": "good job", "url": "https://github.com/apache/shardingsphere/pull/6348#discussion_r454344033", "createdAt": "2020-07-14T13:10:25Z", "author": {"login": "kimmking"}, "path": "shardingsphere-control-panel/shardingsphere-orchestration/shardingsphere-orchestration-core/shardingsphere-orchestration-core-facade/src/main/java/org/apache/shardingsphere/orchestration/core/facade/ShardingOrchestrationFacade.java", "diffHunk": "@@ -57,84 +57,109 @@\n         ShardingSphereServiceLoader.register(ConfigCenterRepository.class);\n         ShardingSphereServiceLoader.register(RegistryCenterRepository.class);\n     }\n-\n-    @Getter\n-    private static ShardingOrchestrationFacade instance;\n     \n-    private final ConfigCenterRepository configCenterRepository;\n+    private ConfigCenterRepository configCenterRepository;\n     \n-    private final RegistryCenterRepository registryCenterRepository;\n+    private RegistryCenterRepository registryCenterRepository;\n \n-    private final ConfigCenterRepository centerRepository;\n+    private ConfigCenterRepository centerRepository;\n     \n     @Getter\n-    private final boolean isOverwrite;\n+    private boolean isOverwrite;\n     \n     @Getter\n-    private final ConfigCenter configCenter;\n+    private ConfigCenter configCenter;\n     \n     @Getter\n-    private final RegistryCenter registryCenter;\n+    private RegistryCenter registryCenter;\n \n     @Getter\n-    private final MetaDataCenter metaDataCenter;\n+    private MetaDataCenter metaDataCenter;\n+    \n+    private ShardingOrchestrationListenerManager listenerManager;\n+    \n+    private String configCenterName;\n+    \n+    private String registryCenterName;\n+    \n+    private String metaDataCenterName;\n     \n-    private final ShardingOrchestrationListenerManager listenerManager;\n+    /**\n+     * Init orchestration facade.\n+     *\n+     * @param orchestrationConfig orchestration configuration\n+     * @param shardingSchemaNames collection of sharding schema names\n+     */\n+    public void init(final OrchestrationConfiguration orchestrationConfig, final Collection<String> shardingSchemaNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b3898fb1624bbd68fa31a28bd59a9e3dba05dd"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4830, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}