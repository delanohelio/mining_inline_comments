{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTEwMjYy", "number": 4682, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzoxNToxMlrODmiFrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzoxNzoxOFrODmiG1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzMwOTkxOnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-api/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/InstanceConfigurationYamlSwapper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzoxNToxMlrOF0AMrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzo0NTo1MlrOF0AnzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3MzUxOA==", "bodyText": "The result variable need to rename as result", "url": "https://github.com/apache/shardingsphere/pull/4682#discussion_r390073518", "createdAt": "2020-03-10T03:15:12Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-api/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/InstanceConfigurationYamlSwapper.java", "diffHunk": "@@ -34,13 +34,13 @@\n      */\n     @Override\n     public YamlInstanceConfiguration swap(final InstanceConfiguration data) {\n-        YamlInstanceConfiguration result = new YamlInstanceConfiguration();\n-        result.setOrchestrationType(data.getOrchestrationType());\n-        result.setInstanceType(data.getType());\n-        result.setServerLists(data.getServerLists());\n-        result.setNamespace(data.getNamespace());\n-        result.setProps(data.getProperties());\n-        return result;\n+        YamlInstanceConfiguration yamlInstanceConfiguration = new YamlInstanceConfiguration();\n+        yamlInstanceConfiguration.setOrchestrationType(data.getOrchestrationType());\n+        yamlInstanceConfiguration.setInstanceType(data.getType());\n+        yamlInstanceConfiguration.setServerLists(data.getServerLists());\n+        yamlInstanceConfiguration.setNamespace(data.getNamespace());\n+        yamlInstanceConfiguration.setProps(data.getProperties());\n+        return yamlInstanceConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f0ac13a860220836093d34e241d7b576302c0f5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NDM0Mw==", "bodyText": "The result variable need to rename as result\n\nwhy use result as variable name\uff1f", "url": "https://github.com/apache/shardingsphere/pull/4682#discussion_r390074343", "createdAt": "2020-03-10T03:18:53Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-api/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/InstanceConfigurationYamlSwapper.java", "diffHunk": "@@ -34,13 +34,13 @@\n      */\n     @Override\n     public YamlInstanceConfiguration swap(final InstanceConfiguration data) {\n-        YamlInstanceConfiguration result = new YamlInstanceConfiguration();\n-        result.setOrchestrationType(data.getOrchestrationType());\n-        result.setInstanceType(data.getType());\n-        result.setServerLists(data.getServerLists());\n-        result.setNamespace(data.getNamespace());\n-        result.setProps(data.getProperties());\n-        return result;\n+        YamlInstanceConfiguration yamlInstanceConfiguration = new YamlInstanceConfiguration();\n+        yamlInstanceConfiguration.setOrchestrationType(data.getOrchestrationType());\n+        yamlInstanceConfiguration.setInstanceType(data.getType());\n+        yamlInstanceConfiguration.setServerLists(data.getServerLists());\n+        yamlInstanceConfiguration.setNamespace(data.getNamespace());\n+        yamlInstanceConfiguration.setProps(data.getProperties());\n+        return yamlInstanceConfiguration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3MzUxOA=="}, "originalCommit": {"oid": "4f0ac13a860220836093d34e241d7b576302c0f5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA4MDQ2MA==", "bodyText": "FIY: https://shardingsphere.apache.org/community/en/contribute/code-conduct/\nReturn values are named with result; Variables in the loop structure are named with each; Replace each with entry in map.", "url": "https://github.com/apache/shardingsphere/pull/4682#discussion_r390080460", "createdAt": "2020-03-10T03:45:52Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-api/src/main/java/org/apache/shardingsphere/orchestration/center/yaml/swapper/InstanceConfigurationYamlSwapper.java", "diffHunk": "@@ -34,13 +34,13 @@\n      */\n     @Override\n     public YamlInstanceConfiguration swap(final InstanceConfiguration data) {\n-        YamlInstanceConfiguration result = new YamlInstanceConfiguration();\n-        result.setOrchestrationType(data.getOrchestrationType());\n-        result.setInstanceType(data.getType());\n-        result.setServerLists(data.getServerLists());\n-        result.setNamespace(data.getNamespace());\n-        result.setProps(data.getProperties());\n-        return result;\n+        YamlInstanceConfiguration yamlInstanceConfiguration = new YamlInstanceConfiguration();\n+        yamlInstanceConfiguration.setOrchestrationType(data.getOrchestrationType());\n+        yamlInstanceConfiguration.setInstanceType(data.getType());\n+        yamlInstanceConfiguration.setServerLists(data.getServerLists());\n+        yamlInstanceConfiguration.setNamespace(data.getNamespace());\n+        yamlInstanceConfiguration.setProps(data.getProperties());\n+        return yamlInstanceConfiguration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3MzUxOA=="}, "originalCommit": {"oid": "4f0ac13a860220836093d34e241d7b576302c0f5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzMxMjg1OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/constant/OrchestrationType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzoxNzoxOFrOF0AOeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMzoxODozM1rOF0APgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3Mzk3Nw==", "bodyText": "We need to avoid using guava, Arrays.asList can replace Lists.newArrayList", "url": "https://github.com/apache/shardingsphere/pull/4682#discussion_r390073977", "createdAt": "2020-03-10T03:17:18Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/constant/OrchestrationType.java", "diffHunk": "@@ -39,11 +40,6 @@\n      * @return OrchestrationType enum, return {@code null} if not found\n      */\n     public static OrchestrationType findByValue(final String value) {\n-        for (OrchestrationType each : OrchestrationType.values()) {\n-            if (each.getValue().equals(value)) {\n-                return each;\n-            }\n-        }\n-        return null;\n+        return Lists.newArrayList(OrchestrationType.values()).stream().filter(each -> each.getValue().equals(value)).findFirst().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f0ac13a860220836093d34e241d7b576302c0f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3NDI0Mg==", "bodyText": "We need to avoid using guava, Arrays.asList can replace Lists.newArrayList\n\nOK", "url": "https://github.com/apache/shardingsphere/pull/4682#discussion_r390074242", "createdAt": "2020-03-10T03:18:33Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/constant/OrchestrationType.java", "diffHunk": "@@ -39,11 +40,6 @@\n      * @return OrchestrationType enum, return {@code null} if not found\n      */\n     public static OrchestrationType findByValue(final String value) {\n-        for (OrchestrationType each : OrchestrationType.values()) {\n-            if (each.getValue().equals(value)) {\n-                return each;\n-            }\n-        }\n-        return null;\n+        return Lists.newArrayList(OrchestrationType.values()).stream().filter(each -> each.getValue().equals(value)).findFirst().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3Mzk3Nw=="}, "originalCommit": {"oid": "4f0ac13a860220836093d34e241d7b576302c0f5"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1176, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}