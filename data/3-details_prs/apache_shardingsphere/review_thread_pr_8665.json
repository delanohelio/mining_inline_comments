{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjUyNDc5", "number": 8665, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo0NDoxMVrOFHpVKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjoxMzozOVrOFIaznQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTYxNTE0OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/MySQLSQLStatVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo0NDoxMVrOIJKpFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMjo0NDoxMVrOIJKpFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ4MjQ1NQ==", "bodyText": "Why is the output result Boolean?", "url": "https://github.com/apache/shardingsphere/pull/8665#discussion_r546482455", "createdAt": "2020-12-21T02:44:11Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/MySQLSQLStatVisitor.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.mysql.visitor;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementBaseVisitor;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.AliasContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.ColumnDefinitionContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.ColumnRefContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.IdentifierContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.InsertContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OwnerContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableFactorContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableNameContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableWildContext;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.dml.column.ColumnSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.AliasSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.OwnerSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.TableNameSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.value.identifier.IdentifierValue;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * MySQL SQL Stats visitor for MySQL.\n+ */\n+@Getter\n+@Setter\n+public final class MySQLSQLStatVisitor extends MySQLStatementBaseVisitor<Boolean> {\n+\n+    private Map<String, SimpleTableSegment> tables = new LinkedHashMap<>();\n+\n+    private Map<Integer, ColumnSegment> columns = new LinkedHashMap<>();\n+\n+    @Override\n+    public Boolean visitTableFactor(final TableFactorContext ctx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df2a68f62e0dd859aa811ae4145c747afff6dc73"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE4NDk4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowOTo1MFrOIJzzjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowOTo1MFrOIJzzjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1Njg3OA==", "bodyText": "Plz define it as final", "url": "https://github.com/apache/shardingsphere/pull/8665#discussion_r547156878", "createdAt": "2020-12-22T09:09:50Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.common;\n+\n+import lombok.Getter;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.dml.column.ColumnSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.SimpleTableSegment;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+@Getter\n+public class SqlStats {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f11ff7bd1ff5dfc1fbc7117bf350cafc1814a75d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE4NjgwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/MySQLSQLStatVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxMDoyN1rOIJz0rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxMDoyN1rOIJz0rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NzE2NQ==", "bodyText": "final?", "url": "https://github.com/apache/shardingsphere/pull/8665#discussion_r547157165", "createdAt": "2020-12-22T09:10:27Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/MySQLSQLStatVisitor.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.mysql.visitor;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.antlr.v4.runtime.tree.TerminalNode;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementBaseVisitor;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.AliasContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.ColumnDefinitionContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.ColumnRefContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.IdentifierContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.InsertContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OwnerContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableFactorContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableNameContext;\n+import org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.TableWildContext;\n+import org.apache.shardingsphere.sql.parser.sql.common.SqlStats;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.dml.column.ColumnSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.AliasSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.OwnerSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.TableNameSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.value.identifier.IdentifierValue;\n+\n+/**\n+ * MySQL SQL Stats visitor for MySQL.\n+ */\n+@Getter\n+@Setter\n+public final class MySQLSQLStatVisitor extends MySQLStatementBaseVisitor<SqlStats> {\n+\n+    private SqlStats sqlStats = new SqlStats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f11ff7bd1ff5dfc1fbc7117bf350cafc1814a75d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE5MjM1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxMjoyMFrOIJz4JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxMjoyMFrOIJz4JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1ODA1Mg==", "bodyText": "HashCode is supposed to be overwrite in ColumnSegment.", "url": "https://github.com/apache/shardingsphere/pull/8665#discussion_r547158052", "createdAt": "2020-12-22T09:12:20Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.common;\n+\n+import lombok.Getter;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.dml.column.ColumnSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.SimpleTableSegment;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+@Getter\n+public class SqlStats {\n+\n+    private Map<String, SimpleTableSegment> tables = new LinkedHashMap<>();\n+\n+    private Map<Integer, ColumnSegment> columns = new LinkedHashMap<>();\n+\n+    private int hashCode(final ColumnSegment column) {\n+        StringBuilder columString = new StringBuilder();\n+        if (column.getOwner().isPresent()) {\n+            columString.append(column.getOwner().get().getIdentifier().getValue());\n+        }\n+        columString.append(column.getIdentifier().getValue());\n+        return columString.toString().hashCode();\n+    }\n+\n+    /**\n+     * add table to tables.\n+     * @param tableSegment SimpleTableSegment.\n+     */\n+    public void addTable(final SimpleTableSegment tableSegment) {\n+        if (!tables.containsKey(tableSegment.getTableName().getIdentifier().getValue())) {\n+            tables.put(tableSegment.getTableName().getIdentifier().getValue(), tableSegment);\n+        }\n+    }\n+\n+    /**\n+     * add column to columns.\n+     * @param column ColumnSegment.\n+     */\n+    public void addColumn(final ColumnSegment column) {\n+        int columnHashcode = hashCode(column);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f11ff7bd1ff5dfc1fbc7117bf350cafc1814a75d"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzcyMTI1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjoxMzozOVrOIKUopA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjoxMzozOVrOIKUopA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzY5NDc1Ng==", "bodyText": "If  keys is just for uniqueness judgment, HashSet is enough I guess.", "url": "https://github.com/apache/shardingsphere/pull/8665#discussion_r547694756", "createdAt": "2020-12-23T06:13:39Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/SqlStats.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.common;\n+\n+import lombok.Getter;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.dml.column.ColumnSegment;\n+import org.apache.shardingsphere.sql.parser.sql.common.segment.generic.table.SimpleTableSegment;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+@Getter\n+public final class SqlStats {\n+\n+    private final Map<String, SimpleTableSegment> tables = new LinkedHashMap<>();\n+\n+    private final Map<Integer, ColumnSegment> columns = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf286c65b73600148941c7512367be51ae6d54b"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 487, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}