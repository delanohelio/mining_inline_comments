{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTQxODkz", "number": 5206, "title": "Simplify the SelectStatement", "bodyText": "Fixes #5135.\nChanges proposed in this pull request:\n\nSimplify the SelectStatement", "createdAt": "2020-04-16T06:19:59Z", "url": "https://github.com/apache/shardingsphere/pull/5206", "merged": true, "mergeCommit": {"oid": "eba3d2e9ef137abc057aaa2b4ef2d2545f1e924f"}, "closed": true, "closedAt": "2020-04-17T14:21:53Z", "author": {"login": "jingshanglu"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYGghWgH2gAyNDA0MTQxODkzOjljZDc0OGUxMzI5OWQ5YjcxNzQxMmQ3OWVkNDA1ZTJlNDg0Zjk2YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYiEGfgFqTM5NTQ5NzU5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9cd748e13299d9b717412d79ed405e2e484f96c3", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/9cd748e13299d9b717412d79ed405e2e484f96c3", "committedDate": "2020-04-16T06:15:13Z", "message": "Simplify the SelectStatement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f25b9c683f7453d34714194efc94981b977f8cf", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/9f25b9c683f7453d34714194efc94981b977f8cf", "committedDate": "2020-04-16T06:50:59Z", "message": "delete useless import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/554ed20352ad512da0ed023fca7753a14fd20d59", "committedDate": "2020-04-16T08:28:03Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjMxMzQz", "url": "https://github.com/apache/shardingsphere/pull/5206#pullrequestreview-395231343", "createdAt": "2020-04-17T07:44:53Z", "commit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzo0NDo1M1rOGHDa6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzo0NTo0NFrOGHDcpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0OTI1Ng==", "bodyText": "getSimpleTableSegments((SelectStatement) sqlStatement)", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410049256", "createdAt": "2020-04-17T07:44:53Z", "author": {"login": "tristaZero"}, "path": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java", "diffHunk": "@@ -51,14 +53,15 @@\n     \n     @Override\n     protected boolean isGenerateSQLTokenForEncrypt(final SQLStatementContext sqlStatementContext) {\n-        return sqlStatementContext instanceof SelectStatementContext && !((SelectStatementContext) sqlStatementContext).getSqlStatement().getSimpleTableSegments().isEmpty();\n+        SQLStatement sqlStatement = sqlStatementContext.getSqlStatement();\n+        return sqlStatementContext instanceof SelectStatementContext && !((SelectStatementContext) sqlStatementContext).getSimpleTableSegments((SelectStatement) sqlStatement).isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0OTcwMg==", "bodyText": "getTables(final ASTNode astNode)", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410049702", "createdAt": "2020-04-17T07:45:44Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/statement/dml/SelectStatementContext.java", "diffHunk": "@@ -262,8 +268,86 @@ private boolean isTable(final OwnerSegment owner, final Collection<SimpleTableSe\n         return true;\n     }\n     \n+    private boolean isTable(final SimpleTableSegment owner, final Collection<SimpleTableSegment> tableSegments) {\n+        for (SimpleTableSegment each : tableSegments) {\n+            String tableName = owner.getTableName().getIdentifier().getValue();\n+            if (tableName.equals(each.getAlias().orElse(null)) && !tableName.equals(each.getTableName().getIdentifier().getValue())) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    \n     @Override\n     public Optional<WhereSegment> getWhere() {\n         return getSqlStatement().getWhere();\n     }\n+    \n+    /**\n+     * get tables.\n+     *\n+     * @param selectStatement SelectStatement.\n+     *\n+     * @return tables.\n+     */\n+    public Collection<SimpleTableSegment> getSimpleTableSegments(final SelectStatement selectStatement) {\n+        Collection<SimpleTableSegment> result = getTables(selectStatement);\n+        Collection<SimpleTableSegment> tables = new LinkedList<>();\n+        for (SimpleTableSegment each : result) {\n+            if (isTable(each, result)) {\n+                tables.add(each);\n+            }\n+        }\n+        return tables;\n+    }\n+    \n+    private Collection<SimpleTableSegment> getTables(final ASTNode astNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjU3OTE3", "url": "https://github.com/apache/shardingsphere/pull/5206#pullrequestreview-395257917", "createdAt": "2020-04-17T08:25:43Z", "commit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODoyNTo0M1rOGHEs_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwODoyNTo0M1rOGHEs_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA3MDI3MQ==", "bodyText": "createProjectionsContext(sql, this, groupByContext, orderByContext);", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410070271", "createdAt": "2020-04-17T08:25:43Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/statement/dml/SelectStatementContext.java", "diffHunk": "@@ -93,10 +99,10 @@ public SelectStatementContext(final SelectStatement sqlStatement, final GroupByC\n     \n     public SelectStatementContext(final SchemaMetaData schemaMetaData, final String sql, final List<Object> parameters, final SelectStatement sqlStatement) {\n         super(sqlStatement);\n-        tablesContext = new TablesContext(sqlStatement.getSimpleTableSegments());\n+        tablesContext = new TablesContext(getSimpleTableSegments(sqlStatement));\n         groupByContext = new GroupByContextEngine().createGroupByContext(sqlStatement);\n         orderByContext = new OrderByContextEngine().createOrderBy(sqlStatement, groupByContext);\n-        projectionsContext = new ProjectionsContextEngine(schemaMetaData).createProjectionsContext(sql, sqlStatement, groupByContext, orderByContext);\n+        projectionsContext = new ProjectionsContextEngine(schemaMetaData).createProjectionsContext(sql, this, groupByContext, orderByContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554ed20352ad512da0ed023fca7753a14fd20d59"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eabf06461ac4e2001602be6a352dfcdfe613a5f1", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/eabf06461ac4e2001602be6a352dfcdfe613a5f1", "committedDate": "2020-04-17T10:27:12Z", "message": "organize the code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MzYzODQx", "url": "https://github.com/apache/shardingsphere/pull/5206#pullrequestreview-395363841", "createdAt": "2020-04-17T11:08:07Z", "commit": {"oid": "eabf06461ac4e2001602be6a352dfcdfe613a5f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMTowODowN1rOGHJyaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMToxMToxMlrOGHJ3Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1MzU3Ng==", "bodyText": "Not used?", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410153576", "createdAt": "2020-04-17T11:08:07Z", "author": {"login": "tristaZero"}, "path": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptProjectionTokenGenerator.java", "diffHunk": "@@ -51,14 +52,15 @@\n     \n     @Override\n     protected boolean isGenerateSQLTokenForEncrypt(final SQLStatementContext sqlStatementContext) {\n-        return sqlStatementContext instanceof SelectStatementContext && !((SelectStatementContext) sqlStatementContext).getSqlStatement().getSimpleTableSegments().isEmpty();\n+        SQLStatement sqlStatement = sqlStatementContext.getSqlStatement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf06461ac4e2001602be6a352dfcdfe613a5f1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1Mzc4NA==", "bodyText": "Please remove them.", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410153784", "createdAt": "2020-04-17T11:08:37Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/segment/select/projection/engine/ProjectionsContextEngine.java", "diffHunk": "@@ -58,17 +57,20 @@ public ProjectionsContextEngine(final SchemaMetaData schemaMetaData) {\n      * Create projections context.\n      *\n      * @param sql SQL\n-     * @param selectStatement SQL statement\n+     * @param tables tables\n+     * @param projectionsSegment projection Segments\n      * @param groupByContext group by context\n      * @param orderByContext order by context\n      * @return projections context\n      */\n-    public ProjectionsContext createProjectionsContext(final String sql, final SelectStatement selectStatement, final GroupByContext groupByContext, final OrderByContext orderByContext) {\n-        ProjectionsSegment projectionsSegment = selectStatement.getProjections();\n-        Collection<Projection> projections = getProjections(sql, selectStatement.getSimpleTableSegments(), projectionsSegment);\n+    public ProjectionsContext createProjectionsContext(final String sql, final Collection<SimpleTableSegment> tables, final ProjectionsSegment projectionsSegment,\n+                                                       final GroupByContext groupByContext, final OrderByContext orderByContext) {\n+//        SelectStatement selectStatement = context.getSqlStatement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf06461ac4e2001602be6a352dfcdfe613a5f1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1NDgzMA==", "bodyText": "Please exchange two of these names, since result is expected to return.", "url": "https://github.com/apache/shardingsphere/pull/5206#discussion_r410154830", "createdAt": "2020-04-17T11:11:12Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/statement/dml/SelectStatementContext.java", "diffHunk": "@@ -262,8 +267,97 @@ private boolean isTable(final OwnerSegment owner, final Collection<SimpleTableSe\n         return true;\n     }\n     \n+    private boolean isTable(final SimpleTableSegment owner, final Collection<SimpleTableSegment> tableSegments) {\n+        for (SimpleTableSegment each : tableSegments) {\n+            String tableName = owner.getTableName().getIdentifier().getValue();\n+            if (tableName.equals(each.getAlias().orElse(null)) && !tableName.equals(each.getTableName().getIdentifier().getValue())) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+    \n     @Override\n     public Optional<WhereSegment> getWhere() {\n         return getSqlStatement().getWhere();\n     }\n+    \n+    /**\n+     * get tables.\n+     * @return tables.\n+     */\n+    public Collection<SimpleTableSegment> getSimpleTableSegments() {\n+        Collection<SimpleTableSegment> result = getTables();\n+        Collection<SimpleTableSegment> tables = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eabf06461ac4e2001602be6a352dfcdfe613a5f1"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e194b4f15ff174d57f9900f61d4a51fa52389b4a", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/e194b4f15ff174d57f9900f61d4a51fa52389b4a", "committedDate": "2020-04-17T11:48:54Z", "message": "organize the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c00e2878122f0f568276d9d76deb90218a9deb", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/28c00e2878122f0f568276d9d76deb90218a9deb", "committedDate": "2020-04-17T12:31:41Z", "message": "delete unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDk3NTkz", "url": "https://github.com/apache/shardingsphere/pull/5206#pullrequestreview-395497593", "createdAt": "2020-04-17T14:21:32Z", "commit": {"oid": "28c00e2878122f0f568276d9d76deb90218a9deb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3731, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}