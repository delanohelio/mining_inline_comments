{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTA4Njgx", "number": 8713, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDo1OVrOFIFUkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMTozMzowOFrOFIjE3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwMTEzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDo1OVrOIJz9Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDo1OVrOIJz9Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTM5MA==", "bodyText": "replicaQueryRule should rename to replicaQueryRuleDefinition", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547159390", "createdAt": "2020-12-22T09:14:59Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -63,6 +63,14 @@ createShardingRule\n     : CREATE SHARDING RULE LP shardingTableRuleDefinition (COMMA shardingTableRuleDefinition)* RP\n     ;\n \n+createReplicaQueryRule\n+    : CREATE REPLICA_QUERY RULE LP replicaQueryRule (COMMA replicaQueryRule)* RP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwNTI5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNjoxMVrOIJz_1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNjoxMVrOIJz_1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MDAyMg==", "bodyText": "Please do not use underline to name variable", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547160022", "createdAt": "2020-12-22T09:16:11Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -63,6 +63,14 @@ createShardingRule\n     : CREATE SHARDING RULE LP shardingTableRuleDefinition (COMMA shardingTableRuleDefinition)* RP\n     ;\n \n+createReplicaQueryRule\n+    : CREATE REPLICA_QUERY RULE LP replicaQueryRule (COMMA replicaQueryRule)* RP\n+    ;\n+\n+replicaQueryRule\n+    : rule_name=IDENTIFIER LP PRIMARY EQ primary_ds=schemaName COMMA REPLICA EQ schemaNames RP load_balancer=IDENTIFIER LP  funcProperties RP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwODA1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNjo1NFrOIJ0Bew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNjo1NFrOIJ0Bew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MDQ0Mw==", "bodyText": "primary_ds should rename to primary", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547160443", "createdAt": "2020-12-22T09:16:54Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -63,6 +63,14 @@ createShardingRule\n     : CREATE SHARDING RULE LP shardingTableRuleDefinition (COMMA shardingTableRuleDefinition)* RP\n     ;\n \n+createReplicaQueryRule\n+    : CREATE REPLICA_QUERY RULE LP replicaQueryRule (COMMA replicaQueryRule)* RP\n+    ;\n+\n+replicaQueryRule\n+    : rule_name=IDENTIFIER LP PRIMARY EQ primary_ds=schemaName COMMA REPLICA EQ schemaNames RP load_balancer=IDENTIFIER LP  funcProperties RP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxMDI2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNzo0NFrOIJ0C6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNzo0NFrOIJ0C6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MDgxMA==", "bodyText": "What's mean of funcProperties, where is the func?", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547160810", "createdAt": "2020-12-22T09:17:44Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -102,3 +110,23 @@ columName\n dropShardingRule\n     : DROP SHARDING RULE LP tableName (COMMA tableName)* RP\n     ;\n+\n+ruleType\n+    : SHARDING | REPLICA_QUERY | ENCRYPT | SHADOW\n+    ;\n+\n+schemaNames\n+    : schemaName (COMMA schemaName)*\n+    ;\n+\n+schemaName\n+    : IDENTIFIER\n+    ;\n+\n+funcProperties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxMTYwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxODowOVrOIJ0Dsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxODowOVrOIJ0Dsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTAxMQ==", "bodyText": "Propertie is typo", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547161011", "createdAt": "2020-12-22T09:18:09Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -102,3 +110,23 @@ columName\n dropShardingRule\n     : DROP SHARDING RULE LP tableName (COMMA tableName)* RP\n     ;\n+\n+ruleType\n+    : SHARDING | REPLICA_QUERY | ENCRYPT | SHADOW\n+    ;\n+\n+schemaNames\n+    : schemaName (COMMA schemaName)*\n+    ;\n+\n+schemaName\n+    : IDENTIFIER\n+    ;\n+\n+funcProperties\n+    : funcPropertie (COMMA funcPropertie)*\n+    ;\n+\n+funcPropertie", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIxMjY4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/org/apache/shardingsphere/distsql/parser/autogen/DistSQLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxODoyOVrOIJ0EYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxODoyOVrOIJ0EYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MTE4NA==", "bodyText": "Please move it about showXXX", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547161184", "createdAt": "2020-12-22T09:18:29Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/org/apache/shardingsphere/distsql/parser/autogen/DistSQLStatement.g4", "diffHunk": "@@ -25,5 +25,6 @@ execute\n     | dropShardingRule\n     | showResources\n     | showRule\n+    | createReplicaQueryRule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ae6fb9cb3e74fecdbaf87f9c6a656dd6be8a09"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE2NTk4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNDo0N1rOIKPP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNDo0N1rOIKPP9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNjUxOQ==", "bodyText": "There are 2 spaces between LP  algorithmProperties", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547606519", "createdAt": "2020-12-23T02:34:47Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/antlr4/imports/RDLStatement.g4", "diffHunk": "@@ -63,42 +63,42 @@ createShardingRule\n     : CREATE SHARDING RULE LP shardingTableRuleDefinition (COMMA shardingTableRuleDefinition)* RP\n     ;\n \n-shardingTableRuleDefinition\n-    : tableName columName shardingAlgorithmDefinition\n+createReplicaQueryRule\n+    : CREATE REPLICA_QUERY RULE LP replicaQueryRuleDefinition (COMMA replicaQueryRuleDefinition)* RP\n     ;\n \n-shardingAlgorithmDefinition\n-    : shardingAlgorithmType LP shardingAlgorithmProperties RP\n+replicaQueryRuleDefinition\n+    : ruleName=IDENTIFIER LP PRIMARY EQ primary=schemaName COMMA REPLICA EQ schemaNames RP loadBalancer=IDENTIFIER LP  algorithmProperties RP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE3MDcyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-statement/src/main/java/org/apache/shardingsphere/distsql/parser/segment/rdl/ReplicaQueryRuleSegment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNzoyMFrOIKPSkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNzoyMFrOIKPSkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNzE4Ng==", "bodyText": "What is useful of @RequiredArgsConstructor?", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547607186", "createdAt": "2020-12-23T02:37:20Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-statement/src/main/java/org/apache/shardingsphere/distsql/parser/segment/rdl/ReplicaQueryRuleSegment.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.distsql.parser.segment.rdl;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.api.visitor.ASTNode;\n+\n+import java.util.Collection;\n+import java.util.Properties;\n+\n+/**\n+ * Table rule segment.\n+ */\n+@RequiredArgsConstructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE3MTYwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-statement/src/main/java/org/apache/shardingsphere/distsql/parser/statement/rdl/create/impl/CreateReplicaQueryRuleStatement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNzo1MlrOIKPTDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozNzo1MlrOIKPTDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNzMwOA==", "bodyText": "The javadoc is incorrect", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547607308", "createdAt": "2020-12-23T02:37:52Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-statement/src/main/java/org/apache/shardingsphere/distsql/parser/statement/rdl/create/impl/CreateReplicaQueryRuleStatement.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.distsql.parser.statement.rdl.create.impl;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+import org.apache.shardingsphere.distsql.parser.segment.rdl.ReplicaQueryRuleSegment;\n+import org.apache.shardingsphere.distsql.parser.statement.rdl.create.CreateRDLStatement;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Create sharding rule statement.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE3MzAwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-replica-query/shardingsphere-replica-query-common/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozODo1MVrOIKPT0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjo0Njo1M1rOIKWKjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNzUwNw==", "bodyText": "What is the useful?", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547607507", "createdAt": "2020-12-23T02:38:51Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-features/shardingsphere-replica-query/shardingsphere-replica-query-common/pom.xml", "diffHunk": "@@ -29,6 +29,12 @@\n     <name>${project.artifactId}</name>\n     \n     <dependencies>\n+        <dependency>\n+            <groupId>org.apache.shardingsphere</groupId>\n+            <artifactId>shardingsphere-infra-binder</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcxOTgyMQ==", "bodyText": "@terrymanu Createreplicaqueryrulestatementconverter  use createreplicaqueryrulestatement  I have change it to shardingsphere-distsql-parser-statement.", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547719821", "createdAt": "2020-12-23T06:46:53Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-features/shardingsphere-replica-query/shardingsphere-replica-query-common/pom.xml", "diffHunk": "@@ -29,6 +29,12 @@\n     <name>${project.artifactId}</name>\n     \n     <dependencies>\n+        <dependency>\n+            <groupId>org.apache.shardingsphere</groupId>\n+            <artifactId>shardingsphere-infra-binder</artifactId>\n+            <version>${project.version}</version>\n+        </dependency>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNzUwNw=="}, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE3NDA1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-replica-query/shardingsphere-replica-query-common/src/main/java/org/apache/shardingsphere/replicaquery/yaml/converter/CreateReplicaQueryRuleStatementConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozOToyMlrOIKPUXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjozOToyMlrOIKPUXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNzY0Ng==", "bodyText": "context to YAML sharding rule configuration?", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547607646", "createdAt": "2020-12-23T02:39:22Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-features/shardingsphere-replica-query/shardingsphere-replica-query-common/src/main/java/org/apache/shardingsphere/replicaquery/yaml/converter/CreateReplicaQueryRuleStatementConverter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.replicaquery.yaml.converter;\n+\n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n+import org.apache.shardingsphere.distsql.parser.segment.rdl.ReplicaQueryRuleSegment;\n+import org.apache.shardingsphere.distsql.parser.statement.rdl.create.impl.CreateReplicaQueryRuleStatement;\n+import org.apache.shardingsphere.infra.yaml.config.algorithm.YamlShardingSphereAlgorithmConfiguration;\n+import org.apache.shardingsphere.replicaquery.yaml.config.YamlReplicaQueryRuleConfiguration;\n+import org.apache.shardingsphere.replicaquery.yaml.config.rule.YamlReplicaQueryDataSourceRuleConfiguration;\n+\n+/**\n+ * Create replica query rule statement converter.\n+ */\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class CreateReplicaQueryRuleStatementConverter {\n+    \n+    /**\n+     * Convert create replica query rule statement context to YAML sharding rule configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61da7eed91fd614c19633fc8930a0ea20e45e53"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTA3NjE1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/java/org/apache/shardingsphere/distsql/parser/core/DistSQLVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMTozMzowOFrOIKiBvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMTozMzowOFrOIKiBvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzkxNDE3Mg==", "bodyText": "Please keep the original indent", "url": "https://github.com/apache/shardingsphere/pull/8713#discussion_r547914172", "createdAt": "2020-12-23T11:33:08Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-distsql-parser/shardingsphere-distsql-parser-engine/src/main/java/org/apache/shardingsphere/distsql/parser/core/DistSQLVisitor.java", "diffHunk": "@@ -86,29 +91,57 @@ public ASTNode visitCreateShardingRule(final CreateShardingRuleContext ctx) {\n         }\n         return new CreateShardingRuleStatement(tables);\n     }\n-    \n+\n+    @Override\n+    public ASTNode visitCreateReplicaQueryRule(final CreateReplicaQueryRuleContext ctx) {\n+        Collection<ReplicaQueryRuleSegment> replicaQueryRules = new LinkedList<>();\n+        for (ReplicaQueryRuleDefinitionContext each : ctx.replicaQueryRuleDefinition()) {\n+            replicaQueryRules.add((ReplicaQueryRuleSegment) visit(each));\n+        }\n+        return new CreateReplicaQueryRuleStatement(replicaQueryRules);\n+    }\n+\n+    @Override\n+    public ASTNode visitReplicaQueryRuleDefinition(final ReplicaQueryRuleDefinitionContext ctx) {\n+        ReplicaQueryRuleSegment result = new ReplicaQueryRuleSegment();\n+        Collection<String> replicaDatasources = new LinkedList<>();\n+        for (SchemaNameContext each : ctx.schemaNames().schemaName()) {\n+            replicaDatasources.add(each.getText());\n+        }\n+        Properties props = new Properties();\n+        for (AlgorithmPropertyContext each : ctx.algorithmProperties().algorithmProperty()) {\n+            props.setProperty(each.key.getText(), each.value.getText());\n+        }\n+        result.setName(ctx.ruleName.getText());\n+        result.setPrimaryDatasource(ctx.primary.getText());\n+        result.setReplicaDatasources(replicaDatasources);\n+        result.setLoadBalancer(ctx.loadBalancer.getText());\n+        result.setProps(props);\n+        return result;\n+    }\n+\n     @Override\n     public ASTNode visitShardingTableRuleDefinition(final ShardingTableRuleDefinitionContext ctx) {\n         TableRuleSegment result = new TableRuleSegment();\n         result.setLogicTable(ctx.tableName().getText());\n-        result.setShardingColumn(ctx.columName().getText());\n-        result.setAlgorithmType(ctx.shardingAlgorithmDefinition().shardingAlgorithmType().getText());\n+        result.setShardingColumn(ctx.columnName().getText());\n+        result.setAlgorithmType(ctx.shardingAlgorithmType.getText());\n         // TODO Future feature.\n         result.setDataSources(new LinkedList<>());\n-        PropertiesValue propertiesValue = (PropertiesValue) visit(ctx.shardingAlgorithmDefinition().shardingAlgorithmProperties());\n+        PropertiesValue propertiesValue = (PropertiesValue) visit(ctx.algorithmProperties());\n         result.setAlgorithmProps(propertiesValue.getValue());\n         return result;\n     }\n     \n     @Override\n-    public ASTNode visitShardingAlgorithmProperties(final ShardingAlgorithmPropertiesContext ctx) {\n+    public ASTNode visitAlgorithmProperties(final AlgorithmPropertiesContext ctx) {\n         PropertiesValue result = new PropertiesValue();\n-        for (ShardingAlgorithmPropertyContext each : ctx.shardingAlgorithmProperty()) {\n-            result.getValue().setProperty(each.shardingAlgorithmPropertyKey().getText(), each.shardingAlgorithmPropertyValue().getText());\n+        for (AlgorithmPropertyContext each : ctx.algorithmProperty()) {\n+            result.getValue().setProperty(each.key.getText(), each.value.getText());\n         }\n         return result;\n     }\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a6509e1ed9321a68cffa3919d2e13d08da07d56"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 493, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}