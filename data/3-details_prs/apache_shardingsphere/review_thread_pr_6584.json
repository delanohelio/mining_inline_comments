{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxOTYzMTQ1", "number": 6584, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoxMDoxOVrOEUeqmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoxMDoxOVrOEUeqmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTA5NDAwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNjoxMDoxOVrOG6tN-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMToyODoyN1rOG7cR8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA==", "bodyText": "When null == sqlException.getSQLState() , null == sqlException.getCause() but cause.getMessage() could run well, right?", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464211450", "createdAt": "2020-08-03T06:10:19Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI0NTM1Ng==", "bodyText": "already add the test code", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464245356", "createdAt": "2020-08-03T07:42:26Z", "author": {"login": "cmonkey"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI3MTQxNA==", "bodyText": "Sorry, I did not catch you.\nWhich condition will make sqlException.getCause isNull ?", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464271414", "createdAt": "2020-08-03T08:36:42Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NzIwMA==", "bodyText": "", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464777200", "createdAt": "2020-08-04T03:28:29Z", "author": {"login": "cmonkey"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgyMDMzMg==", "bodyText": "@cmonkey Sorry?\nOr what's the difference between sqlException.getCause().getMessage() and cause.getMessage()?", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464820332", "createdAt": "2020-08-04T06:08:28Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgzMzc5Mg==", "bodyText": "val exception = new SQLException()\nMySQLErrPacketFactory.newInstance(1, exception)\ncause.isInstanceOf[SQLException) is true\ncause.asInstanceOF[SQLException) to  sqlException\nsqlException.SQLState is null\nsqlException.cuase is not null\nsqlException.getCuase is null\nMySQLErrPacketFactory.newInstance throw NPE, write errorPacket failed, Connection is hung", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464833792", "createdAt": "2020-08-04T06:45:04Z", "author": {"login": "cmonkey"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk4MjUxNA==", "bodyText": "Hi @cmonkey Thanks for your explanation. Make sense to me.\nI will merge this PR after CI passes. Could you give travis-ci a look? I found it failed. Thanks a lot.", "url": "https://github.com/apache/shardingsphere/pull/6584#discussion_r464982514", "createdAt": "2020-08-04T11:28:27Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-frontend/shardingsphere-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/proxy/frontend/mysql/MySQLErrPacketFactory.java", "diffHunk": "@@ -47,7 +47,7 @@ public static MySQLErrPacket newInstance(final int sequenceId, final Exception c\n         if (cause instanceof SQLException) {\n             SQLException sqlException = (SQLException) cause;\n             return null != sqlException.getSQLState() ? new MySQLErrPacket(sequenceId, sqlException.getErrorCode(), sqlException.getSQLState(), sqlException.getMessage())\n-                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, sqlException.getCause().getMessage());\n+                : new MySQLErrPacket(sequenceId, MySQLServerErrorCode.ER_INTERNAL_ERROR, cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIxMTQ1MA=="}, "originalCommit": {"oid": "671d0bf7d20188fb14f52b42a38c7fbc33bad580"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 396, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}