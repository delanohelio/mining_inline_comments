{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MzkwMzM3", "number": 7469, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjozNzozOVrOEj3SxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjo0MjoyMlrOEj3V2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDQxNTQxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingDeleteStatementValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjozNzozOVrOHSd6TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNDo0NTo1NlrOHSf3-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNjQ3Nw==", "bodyText": "Extracting a function is better.", "url": "https://github.com/apache/shardingsphere/pull/7469#discussion_r489126477", "createdAt": "2020-09-16T02:37:39Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingDeleteStatementValidator.java", "diffHunk": "@@ -42,7 +44,7 @@ public void preValidate(final ShardingRule shardingRule, final RouteContext rout\n     \n     @Override\n     public void postValidate(final DeleteStatement sqlStatement, final RouteResult routeResult) {\n-        if (sqlStatement.getLimit().isPresent() && routeResult.getRouteUnits().size() > 1) {\n+        if (sqlStatement instanceof MySQLStatement && ((MySQLDeleteStatement) sqlStatement).getLimit().isPresent() && routeResult.getRouteUnits().size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378e37007903699a000a370ccc2857353cb009a3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1ODY1MQ==", "bodyText": "Extracting a function is better.\n\n@tristaZero I will optimize it.", "url": "https://github.com/apache/shardingsphere/pull/7469#discussion_r489158651", "createdAt": "2020-09-16T04:45:56Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingDeleteStatementValidator.java", "diffHunk": "@@ -42,7 +44,7 @@ public void preValidate(final ShardingRule shardingRule, final RouteContext rout\n     \n     @Override\n     public void postValidate(final DeleteStatement sqlStatement, final RouteResult routeResult) {\n-        if (sqlStatement.getLimit().isPresent() && routeResult.getRouteUnits().size() > 1) {\n+        if (sqlStatement instanceof MySQLStatement && ((MySQLDeleteStatement) sqlStatement).getLimit().isPresent() && routeResult.getRouteUnits().size() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNjQ3Nw=="}, "originalCommit": {"oid": "378e37007903699a000a370ccc2857353cb009a3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDQyMzI5OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/DeleteStatementAssert.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjo0MjoyMlrOHSd-1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNDo1MToxOVrOHSf83w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNzYzNg==", "bodyText": "How about to extract A function named assertXXXXX", "url": "https://github.com/apache/shardingsphere/pull/7469#discussion_r489127636", "createdAt": "2020-09-16T02:42:22Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/DeleteStatementAssert.java", "diffHunk": "@@ -49,8 +51,10 @@\n     public static void assertIs(final SQLCaseAssertContext assertContext, final DeleteStatement actual, final DeleteStatementTestCase expected) {\n         assertTable(assertContext, actual, expected);\n         assertWhereClause(assertContext, actual, expected);\n-        assertOrderByClause(assertContext, actual, expected);\n-        assertLimitClause(assertContext, actual, expected);\n+        if (actual instanceof MySQLStatement) {\n+            assertOrderByClause(assertContext, (MySQLDeleteStatement) actual, expected);\n+            assertLimitClause(assertContext, (MySQLDeleteStatement) actual, expected);    \n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378e37007903699a000a370ccc2857353cb009a3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMDQwMQ==", "bodyText": "It is an optional item. Just from my glance, my feeling is that it is better to gather this judgment and handling detail into a function.", "url": "https://github.com/apache/shardingsphere/pull/7469#discussion_r489130401", "createdAt": "2020-09-16T02:53:09Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/DeleteStatementAssert.java", "diffHunk": "@@ -49,8 +51,10 @@\n     public static void assertIs(final SQLCaseAssertContext assertContext, final DeleteStatement actual, final DeleteStatementTestCase expected) {\n         assertTable(assertContext, actual, expected);\n         assertWhereClause(assertContext, actual, expected);\n-        assertOrderByClause(assertContext, actual, expected);\n-        assertLimitClause(assertContext, actual, expected);\n+        if (actual instanceof MySQLStatement) {\n+            assertOrderByClause(assertContext, (MySQLDeleteStatement) actual, expected);\n+            assertLimitClause(assertContext, (MySQLDeleteStatement) actual, expected);    \n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNzYzNg=="}, "originalCommit": {"oid": "378e37007903699a000a370ccc2857353cb009a3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1OTkwMw==", "bodyText": "It is an optional item. Just from my glance, my feeling is that it is better to gather this judgment and handling detail into a function.\n\nIt is a good idea. \ud83d\udc4d", "url": "https://github.com/apache/shardingsphere/pull/7469#discussion_r489159903", "createdAt": "2020-09-16T04:51:19Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dml/impl/DeleteStatementAssert.java", "diffHunk": "@@ -49,8 +51,10 @@\n     public static void assertIs(final SQLCaseAssertContext assertContext, final DeleteStatement actual, final DeleteStatementTestCase expected) {\n         assertTable(assertContext, actual, expected);\n         assertWhereClause(assertContext, actual, expected);\n-        assertOrderByClause(assertContext, actual, expected);\n-        assertLimitClause(assertContext, actual, expected);\n+        if (actual instanceof MySQLStatement) {\n+            assertOrderByClause(assertContext, (MySQLDeleteStatement) actual, expected);\n+            assertLimitClause(assertContext, (MySQLDeleteStatement) actual, expected);    \n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyNzYzNg=="}, "originalCommit": {"oid": "378e37007903699a000a370ccc2857353cb009a3"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 690, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}