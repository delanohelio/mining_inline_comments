{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjYwMzgz", "number": 3894, "title": "Use spi for datasources check", "bodyText": "Fixes #3849.\nChanges proposed in this pull request:\n\nUse spi for datasources check", "createdAt": "2020-01-08T03:03:20Z", "url": "https://github.com/apache/shardingsphere/pull/3894", "merged": true, "mergeCommit": {"oid": "f3ea11d8b39375419746c849c851161ca92cb623"}, "closed": true, "closedAt": "2020-01-09T03:07:42Z", "author": {"login": "ssxlulu"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4Lhj1AH2gAyMzYwMjYwMzgzOjAxYjY2ZTY2OTg0MDc2MmUyOGJmN2NlMTkxZDdhYmMxYTIzZTc3MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4hCQOgFqTM0MDI2NzIxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01b66e669840762e28bf7ce191d7abc1a23e7711", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/01b66e669840762e28bf7ce191d7abc1a23e7711", "committedDate": "2020-01-08T02:00:18Z", "message": "Use spi for datasources check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/edfc76454eb8c8f6239027a600c6a5944e6cb475", "committedDate": "2020-01-08T03:10:55Z", "message": "Refactor function name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjQ0NzYz", "url": "https://github.com/apache/shardingsphere/pull/3894#pullrequestreview-339644763", "createdAt": "2020-01-08T04:49:29Z", "commit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0OToyOVrOFbMoPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NTo0OVrOFbMsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2Mjc4MQ==", "bodyText": "Why not take the datasources as the input parameter, but get the datasource from the dataSourceFactory?", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364062781", "createdAt": "2020-01-08T04:49:29Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/AbstractChecker.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingscaling.core.execute.executor.checker;\n+\n+import com.zaxxer.hikari.HikariDataSource;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import org.apache.shardingsphere.shardingscaling.core.exception.DatasourceCheckFailedException;\n+import org.apache.shardingsphere.shardingscaling.core.util.DataSourceFactory;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * generic checker implement.\n+ *\n+ * @author ssxlulu\n+ */\n+public abstract class AbstractChecker implements Checker {\n+\n+    @Getter(AccessLevel.PROTECTED)\n+    private final DataSourceFactory dataSourceFactory;\n+\n+    public AbstractChecker(final DataSourceFactory dataSourceFactory) {\n+        this.dataSourceFactory = dataSourceFactory;\n+    }\n+\n+    @Override\n+    public final void checkConnection() {\n+        try {\n+            for (HikariDataSource hikariDataSource : dataSourceFactory.getCachedDataSources().values()) {\n+                hikariDataSource.getConnection();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MjkxMQ==", "bodyText": "I think DatasourceChecker is more readable.", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364062911", "createdAt": "2020-01-08T04:50:18Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/Checker.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingscaling.core.execute.executor.checker;\n+\n+/**\n+ * Checker.\n+ *\n+ * @author ssxlulu\n+ */\n+public interface Checker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MzU0MA==", "bodyText": "Why comment unit test\uff1f\nIf there are some reason have to ignore unit test, please use @Ignore annotation with description.", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364063540", "createdAt": "2020-01-08T04:54:29Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "diffHunk": "@@ -66,31 +66,31 @@ public void setUp() {\n \n     @Test\n     public void channelReadStartFailed() {\n-        ByteBuf byteBuf = Unpooled.copiedBuffer(GSON.toJson(scalingConfiguration), CharsetUtil.UTF_8);\n-        fullHttpRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/shardingscaling/job/start\", byteBuf);\n-        httpServerHandler.channelRead0(channelHandlerContext, fullHttpRequest);\n-        ArgumentCaptor argumentCaptor = ArgumentCaptor.forClass(FullHttpResponse.class);\n-        verify(channelHandlerContext).writeAndFlush(argumentCaptor.capture());\n-        FullHttpResponse fullHttpResponse = (FullHttpResponse) argumentCaptor.getValue();\n-        assertTrue(fullHttpResponse.content().toString(CharsetUtil.UTF_8).contains(\"Datasources check failed!\"));\n+//        ByteBuf byteBuf = Unpooled.copiedBuffer(GSON.toJson(scalingConfiguration), CharsetUtil.UTF_8);\n+//        fullHttpRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/shardingscaling/job/start\", byteBuf);\n+//        httpServerHandler.channelRead0(channelHandlerContext, fullHttpRequest);\n+//        ArgumentCaptor argumentCaptor = ArgumentCaptor.forClass(FullHttpResponse.class);\n+//        verify(channelHandlerContext).writeAndFlush(argumentCaptor.capture());\n+//        FullHttpResponse fullHttpResponse = (FullHttpResponse) argumentCaptor.getValue();\n+//        assertTrue(fullHttpResponse.content().toString(CharsetUtil.UTF_8).contains(\"Datasources check failed!\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2Mzc1Nw==", "bodyText": "Sorry, I forgot review that unit test method name should start with assert\nFor example this test method should change to assertChannelReadStartFailed();", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364063757", "createdAt": "2020-01-08T04:55:49Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "diffHunk": "@@ -66,31 +66,31 @@ public void setUp() {\n \n     @Test\n     public void channelReadStartFailed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6f36d6dc292a38e7dc32cb6764c480bb42c614", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/6b6f36d6dc292a38e7dc32cb6764c480bb42c614", "committedDate": "2020-01-08T05:24:48Z", "message": "Refactor the unit tests method name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2c7bc02499695e7f1bacd42a15eb3207766803c", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/d2c7bc02499695e7f1bacd42a15eb3207766803c", "committedDate": "2020-01-08T05:28:45Z", "message": "Rename Checker to DatasourceChecker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37433f2bbedd77cb4abd42435ca9854cfcb94480", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/37433f2bbedd77cb4abd42435ca9854cfcb94480", "committedDate": "2020-01-08T08:11:34Z", "message": "Refactor checker interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc6a3fe45e6dec525085168757e59985993d202a", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/dc6a3fe45e6dec525085168757e59985993d202a", "committedDate": "2020-01-08T08:31:32Z", "message": "Change list jobs api's request method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f92be14af3273fee06ea2e391852ddcc7d2998", "author": {"user": {"login": "ssxlulu", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/57f92be14af3273fee06ea2e391852ddcc7d2998", "committedDate": "2020-01-09T01:17:27Z", "message": "Fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjY3MjE5", "url": "https://github.com/apache/shardingsphere/pull/3894#pullrequestreview-340267219", "createdAt": "2020-01-09T03:04:01Z", "commit": {"oid": "57f92be14af3273fee06ea2e391852ddcc7d2998"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4182, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}