{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODY5NDIx", "number": 7044, "title": "Add test case of pg binary value", "bodyText": "Changes proposed in this pull request:\n\nAdd test case pg binary value", "createdAt": "2020-08-25T01:29:04Z", "url": "https://github.com/apache/shardingsphere/pull/7044", "merged": true, "mergeCommit": {"oid": "327bc10fd41374cfd1d954fd9f9447df52ab95d2"}, "closed": true, "closedAt": "2020-08-25T06:34:38Z", "author": {"login": "xbkaishui"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdB8ko6gH2gAyNDcyODY5NDIxOjRkZGUwZGE2NzI0OTBmNDIyNDdlY2NkZDVjYmIyNTkzMWUwOWNmNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCRTMVAFqTQ3NDE3Mjg2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4dde0da672490f42247eccdd5cbb25931e09cf4a", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/4dde0da672490f42247eccdd5cbb25931e09cf4a", "committedDate": "2020-08-24T06:25:29Z", "message": "add test case for pg codesc and constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d5cfd6a8fb23788739eb91a508f52f67cce5a5", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/88d5cfd6a8fb23788739eb91a508f52f67cce5a5", "committedDate": "2020-08-24T06:45:21Z", "message": "fix check style error check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eee547a8e94eff35bf398487801450978e931474", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/eee547a8e94eff35bf398487801450978e931474", "committedDate": "2020-08-24T07:02:55Z", "message": "fix mockito strict check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8343cd0dcdb72260b69ed92844098720d127133", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/c8343cd0dcdb72260b69ed92844098720d127133", "committedDate": "2020-08-24T07:07:08Z", "message": "remove un finish test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96cdec81254b821a44f3725e2372b2772484555", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/e96cdec81254b821a44f3725e2372b2772484555", "committedDate": "2020-08-25T01:27:13Z", "message": "add protocol binary value factory test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2399730d4c0446767dba4091423cfa26aca9b805", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/2399730d4c0446767dba4091423cfa26aca9b805", "committedDate": "2020-08-25T01:31:39Z", "message": "fix merge confilct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/41c6d66b25ed133a6d26455dedbf020071b883d4", "committedDate": "2020-08-25T01:32:13Z", "message": "Merge branch 'master' into Test-pg-binary-value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTA2MDY4", "url": "https://github.com/apache/shardingsphere/pull/7044#pullrequestreview-474106068", "createdAt": "2020-08-25T03:17:27Z", "commit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMzoxNzoyN1rOHGDS7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMzoxNzozM1rOHGDTHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEwNzUwMg==", "bodyText": "It is suggested to remove this redundant blank line.", "url": "https://github.com/apache/shardingsphere/pull/7044#discussion_r476107502", "createdAt": "2020-08-25T03:17:27Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLDateBinaryProtocolValueTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.db.protocol.postgresql.packet.command.query.binary.bind.protocol;\n+\n+import org.apache.shardingsphere.db.protocol.postgresql.payload.PostgreSQLPacketPayload;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Timestamp;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class PostgreSQLDateBinaryProtocolValueTest {\n+    \n+    @Mock\n+    private PostgreSQLPacketPayload payload;\n+    \n+    @Test\n+    public void assertGetColumnLength() {\n+        assertThat(new PostgreSQLDateBinaryProtocolValue().getColumnLength(\"\"), is(8));\n+    }\n+    \n+    @Test\n+    public void assertRead() {\n+        when(payload.readInt8()).thenReturn(1L);\n+        assertThat(new PostgreSQLDateBinaryProtocolValue().read(payload), is(1L));\n+    }\n+    \n+    @Test\n+    public void assertWrite() {\n+        Timestamp data = new Timestamp(System.currentTimeMillis());\n+        new PostgreSQLDateBinaryProtocolValue().write(payload, data);\n+        verify(payload).writeInt8(data.getTime());\n+    }\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEwNzU1MA==", "bodyText": "It is suggested to remove this redundant blank line.", "url": "https://github.com/apache/shardingsphere/pull/7044#discussion_r476107550", "createdAt": "2020-08-25T03:17:33Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLDoubleBinaryProtocolValueTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.db.protocol.postgresql.packet.command.query.binary.bind.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+import org.apache.shardingsphere.db.protocol.postgresql.payload.PostgreSQLPacketPayload;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class PostgreSQLDoubleBinaryProtocolValueTest {\n+    \n+    @Mock\n+    private ByteBuf byteBuf;\n+    \n+    @Test\n+    public void assertGetColumnLength() {\n+        assertThat(new PostgreSQLDoubleBinaryProtocolValue().getColumnLength(\"\"), is(8));\n+    }\n+    \n+    @Test\n+    public void assertRead() {\n+        when(byteBuf.readDouble()).thenReturn(1D);\n+        assertThat(new PostgreSQLDoubleBinaryProtocolValue().read(new PostgreSQLPacketPayload(byteBuf)), is(1D));\n+    }\n+    \n+    @Test\n+    public void assertWrite() {\n+        new PostgreSQLDoubleBinaryProtocolValue().write(new PostgreSQLPacketPayload(byteBuf), 1D);\n+        verify(byteBuf).writeDouble(1.0d);\n+    }\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTE1MTI2", "url": "https://github.com/apache/shardingsphere/pull/7044#pullrequestreview-474115126", "createdAt": "2020-08-25T03:48:45Z", "commit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMzo0ODo0NVrOHGEmlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMzo0ODo0NVrOHGEmlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEyODkxOQ==", "bodyText": "Is it a duplicated line?", "url": "https://github.com/apache/shardingsphere/pull/7044#discussion_r476128919", "createdAt": "2020-08-25T03:48:45Z", "author": {"login": "tuohai666"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-postgresql/src/test/java/org/apache/shardingsphere/db/protocol/postgresql/codec/PostgreSQLPacketCodecEngineTest.java", "diffHunk": "@@ -65,6 +65,7 @@ public void assertDecode() {\n         List<Object> out = new LinkedList<>();\n         new PostgreSQLPacketCodecEngine().decode(context, byteBuf, out, 54);\n         assertThat(out.size(), is(1));\n+        assertThat(out.size(), is(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41c6d66b25ed133a6d26455dedbf020071b883d4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b8a89815f432418e19d7babdb3c9224100ce21", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/00b8a89815f432418e19d7babdb3c9224100ce21", "committedDate": "2020-08-25T05:48:14Z", "message": "change as review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e162afe754b16f6c0a86ffb6a4b1437c716ef2e", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/5e162afe754b16f6c0a86ffb6a4b1437c716ef2e", "committedDate": "2020-08-25T05:49:23Z", "message": "remove blank line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86d5f4af573b728105070b9fd1b33e16755ce499", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/86d5f4af573b728105070b9fd1b33e16755ce499", "committedDate": "2020-08-25T05:50:14Z", "message": "remove blank line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTcyMDUy", "url": "https://github.com/apache/shardingsphere/pull/7044#pullrequestreview-474172052", "createdAt": "2020-08-25T06:32:48Z", "commit": {"oid": "86d5f4af573b728105070b9fd1b33e16755ce499"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTcyODY4", "url": "https://github.com/apache/shardingsphere/pull/7044#pullrequestreview-474172868", "createdAt": "2020-08-25T06:34:26Z", "commit": {"oid": "86d5f4af573b728105070b9fd1b33e16755ce499"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4719, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}