{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDY4NDg3", "number": 5442, "title": "#5435, Improve unit test coverage of Sharding-Proxy", "bodyText": "Fixes #5435.", "createdAt": "2020-05-06T12:35:46Z", "url": "https://github.com/apache/shardingsphere/pull/5442", "merged": true, "mergeCommit": {"oid": "ed020f8b2d5398c89abbf8fb7069ed47e8045209"}, "closed": true, "closedAt": "2020-05-07T04:25:21Z", "author": {"login": "tuohai666"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcejaEtAH2gAyNDE0MDY4NDg3OmRmNThkZjEwYmNmMjJlMjFkNTg0MWFmZWJhNDNjZjA2YTlmOTJhMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce1hLUgFqTQwNzE0MDI4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df58df10bcf22e21d5841afeba43cf06a9f92a06", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/df58df10bcf22e21d5841afeba43cf06a9f92a06", "committedDate": "2020-05-06T07:18:58Z", "message": "remove unnecessary constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db42348839ff6ba061414ade6085927ec226f6d4", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/db42348839ff6ba061414ade6085927ec226f6d4", "committedDate": "2020-05-06T08:29:29Z", "message": "#5435, add test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69869775941bbdf8125dd601d5414b1bc2c61d13", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/69869775941bbdf8125dd601d5414b1bc2c61d13", "committedDate": "2020-05-06T08:39:24Z", "message": "#5435, add private constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a9c70ad8b8a34fa172c3fb8be28f9f39f6336af", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/7a9c70ad8b8a34fa172c3fb8be28f9f39f6336af", "committedDate": "2020-05-06T09:08:15Z", "message": "#5435, add test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83078433308dc57156e87b7d48f8dc659d5286bd", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/83078433308dc57156e87b7d48f8dc659d5286bd", "committedDate": "2020-05-06T12:24:20Z", "message": "#5435, add test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTg3Njk3", "url": "https://github.com/apache/shardingsphere/pull/5442#pullrequestreview-406587697", "createdAt": "2020-05-06T13:01:09Z", "commit": {"oid": "83078433308dc57156e87b7d48f8dc659d5286bd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzowMTowOVrOGRR0zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzowMTowOVrOGRR0zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc3MTAyMw==", "bodyText": "should add final for not extended class", "url": "https://github.com/apache/shardingsphere/pull/5442#discussion_r420771023", "createdAt": "2020-05-06T13:01:09Z", "author": {"login": "terrymanu"}, "path": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareCheckerTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare;\n+\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.AnalyzeTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.CacheIndexStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ChecksumTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.FlushStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.InstallPluginStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.KillStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.LoadIndexInfoStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.OptimizeTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.RepairTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ResetStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowBinaryLogsStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowBinlogStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowCreateEventStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowCreateFunctionStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowCreateProcedureStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowCreateTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowCreateViewStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowErrorsStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowStatusStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowWarningsStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.UninstallPluginStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.AlterUserStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.CreateUserStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.DropUserStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.GrantStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.RenameUserStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dcl.RevokeStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.AlterTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.CreateDatabaseStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.CreateIndexStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.CreateTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.CreateViewStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropDatabaseStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropIndexStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.DropViewStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.RenameTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.TruncateStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.CallStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.DeleteStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.DoStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.InsertStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.ReplaceStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.dml.UpdateStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.rl.ChangeMasterStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.rl.StartSlaveStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.rl.StopSlaveStatement;\n+import org.apache.shardingsphere.sql.parser.sql.statement.tcl.CommitStatement;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.mock;\n+\n+public class MySQLComStmtPrepareCheckerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83078433308dc57156e87b7d48f8dc659d5286bd"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NTg5MTgy", "url": "https://github.com/apache/shardingsphere/pull/5442#pullrequestreview-406589182", "createdAt": "2020-05-06T13:03:01Z", "commit": {"oid": "83078433308dc57156e87b7d48f8dc659d5286bd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d0714bce1a9d4332304d17aab8851e162dcd84c", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/9d0714bce1a9d4332304d17aab8851e162dcd84c", "committedDate": "2020-05-07T03:09:08Z", "message": "#5435, for comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTM1NTYx", "url": "https://github.com/apache/shardingsphere/pull/5442#pullrequestreview-407135561", "createdAt": "2020-05-07T04:05:31Z", "commit": {"oid": "9d0714bce1a9d4332304d17aab8851e162dcd84c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDowNTozMVrOGRtodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDowNTozMVrOGRtodA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNjYxMg==", "bodyText": "Please use static import with Assert", "url": "https://github.com/apache/shardingsphere/pull/5442#discussion_r421226612", "createdAt": "2020-05-07T04:05:31Z", "author": {"login": "terrymanu"}, "path": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/execute/MySQLComStmtExecuteExecutorTest.java", "diffHunk": "@@ -60,4 +63,32 @@ public void assertIsErrorResponse() {\n         mysqlComStmtExecuteExecutor.execute();\n         Assert.assertThat(mysqlComStmtExecuteExecutor.isErrorResponse(), Matchers.is(true));\n     }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertIsUpdateResponse() {\n+        BackendConnection backendConnection = mock(BackendConnection.class);\n+        LogicSchema logicSchema = mock(LogicSchema.class);\n+        when(logicSchema.getRules()).thenReturn(Collections.emptyList());\n+        when(backendConnection.getLogicSchema()).thenReturn(logicSchema);\n+        MySQLComStmtExecuteExecutor mysqlComStmtExecuteExecutor = new MySQLComStmtExecuteExecutor(mock(MySQLComStmtExecutePacket.class), backendConnection);\n+        FieldSetter.setField(mysqlComStmtExecuteExecutor, MySQLComStmtExecuteExecutor.class.getDeclaredField(\"databaseCommunicationEngine\"), databaseCommunicationEngine);\n+        when(databaseCommunicationEngine.execute()).thenReturn(new UpdateResponse());\n+        mysqlComStmtExecuteExecutor.execute();\n+        Assert.assertThat(mysqlComStmtExecuteExecutor.isUpdateResponse(), Matchers.is(true));\n+    }\n+    \n+    @Test\n+    @SneakyThrows\n+    public void assertIsQuery() {\n+        BackendConnection backendConnection = mock(BackendConnection.class);\n+        LogicSchema logicSchema = mock(LogicSchema.class);\n+        when(logicSchema.getRules()).thenReturn(Collections.emptyList());\n+        when(backendConnection.getLogicSchema()).thenReturn(logicSchema);\n+        MySQLComStmtExecuteExecutor mysqlComStmtExecuteExecutor = new MySQLComStmtExecuteExecutor(mock(MySQLComStmtExecutePacket.class), backendConnection);\n+        FieldSetter.setField(mysqlComStmtExecuteExecutor, MySQLComStmtExecuteExecutor.class.getDeclaredField(\"databaseCommunicationEngine\"), databaseCommunicationEngine);\n+        when(databaseCommunicationEngine.execute()).thenReturn(new QueryResponse(Collections.singletonList(mock(QueryHeader.class))));\n+        mysqlComStmtExecuteExecutor.execute();\n+        Assert.assertThat(mysqlComStmtExecuteExecutor.isQuery(), Matchers.is(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0714bce1a9d4332304d17aab8851e162dcd84c"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5679a257f95ababefabde74e887a5541f241fdf7", "author": {"user": {"login": "tuohai666", "name": "Zhang Yonglun"}}, "url": "https://github.com/apache/shardingsphere/commit/5679a257f95ababefabde74e887a5541f241fdf7", "committedDate": "2020-05-07T04:14:52Z", "message": "#5435, for comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTQwMjg5", "url": "https://github.com/apache/shardingsphere/pull/5442#pullrequestreview-407140289", "createdAt": "2020-05-07T04:25:01Z", "commit": {"oid": "5679a257f95ababefabde74e887a5541f241fdf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3643, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}