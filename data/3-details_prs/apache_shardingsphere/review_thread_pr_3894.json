{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjYwMzgz", "number": 3894, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0OToyOVrODWcAPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NTo0OVrODWcCvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODU0MDc2OnYy", "diffSide": "RIGHT", "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/AbstractChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0OToyOVrOFbMoPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0OToyOVrOFbMoPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2Mjc4MQ==", "bodyText": "Why not take the datasources as the input parameter, but get the datasource from the dataSourceFactory?", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364062781", "createdAt": "2020-01-08T04:49:29Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/AbstractChecker.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingscaling.core.execute.executor.checker;\n+\n+import com.zaxxer.hikari.HikariDataSource;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import org.apache.shardingsphere.shardingscaling.core.exception.DatasourceCheckFailedException;\n+import org.apache.shardingsphere.shardingscaling.core.util.DataSourceFactory;\n+\n+import java.sql.SQLException;\n+\n+/**\n+ * generic checker implement.\n+ *\n+ * @author ssxlulu\n+ */\n+public abstract class AbstractChecker implements Checker {\n+\n+    @Getter(AccessLevel.PROTECTED)\n+    private final DataSourceFactory dataSourceFactory;\n+\n+    public AbstractChecker(final DataSourceFactory dataSourceFactory) {\n+        this.dataSourceFactory = dataSourceFactory;\n+    }\n+\n+    @Override\n+    public final void checkConnection() {\n+        try {\n+            for (HikariDataSource hikariDataSource : dataSourceFactory.getCachedDataSources().values()) {\n+                hikariDataSource.getConnection();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODU0MTY0OnYy", "diffSide": "RIGHT", "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/Checker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1MDoxOFrOFbMovw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1MDoxOFrOFbMovw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MjkxMQ==", "bodyText": "I think DatasourceChecker is more readable.", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364062911", "createdAt": "2020-01-08T04:50:18Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/execute/executor/checker/Checker.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.shardingscaling.core.execute.executor.checker;\n+\n+/**\n+ * Checker.\n+ *\n+ * @author ssxlulu\n+ */\n+public interface Checker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODU0NTc1OnYy", "diffSide": "RIGHT", "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NDoyOVrOFbMrNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NDoyOVrOFbMrNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MzU0MA==", "bodyText": "Why comment unit test\uff1f\nIf there are some reason have to ignore unit test, please use @Ignore annotation with description.", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364063540", "createdAt": "2020-01-08T04:54:29Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "diffHunk": "@@ -66,31 +66,31 @@ public void setUp() {\n \n     @Test\n     public void channelReadStartFailed() {\n-        ByteBuf byteBuf = Unpooled.copiedBuffer(GSON.toJson(scalingConfiguration), CharsetUtil.UTF_8);\n-        fullHttpRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/shardingscaling/job/start\", byteBuf);\n-        httpServerHandler.channelRead0(channelHandlerContext, fullHttpRequest);\n-        ArgumentCaptor argumentCaptor = ArgumentCaptor.forClass(FullHttpResponse.class);\n-        verify(channelHandlerContext).writeAndFlush(argumentCaptor.capture());\n-        FullHttpResponse fullHttpResponse = (FullHttpResponse) argumentCaptor.getValue();\n-        assertTrue(fullHttpResponse.content().toString(CharsetUtil.UTF_8).contains(\"Datasources check failed!\"));\n+//        ByteBuf byteBuf = Unpooled.copiedBuffer(GSON.toJson(scalingConfiguration), CharsetUtil.UTF_8);\n+//        fullHttpRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/shardingscaling/job/start\", byteBuf);\n+//        httpServerHandler.channelRead0(channelHandlerContext, fullHttpRequest);\n+//        ArgumentCaptor argumentCaptor = ArgumentCaptor.forClass(FullHttpResponse.class);\n+//        verify(channelHandlerContext).writeAndFlush(argumentCaptor.capture());\n+//        FullHttpResponse fullHttpResponse = (FullHttpResponse) argumentCaptor.getValue();\n+//        assertTrue(fullHttpResponse.content().toString(CharsetUtil.UTF_8).contains(\"Datasources check failed!\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODU0NzE5OnYy", "diffSide": "RIGHT", "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NTo0OVrOFbMsDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo1NTo0OVrOFbMsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2Mzc1Nw==", "bodyText": "Sorry, I forgot review that unit test method name should start with assert\nFor example this test method should change to assertChannelReadStartFailed();", "url": "https://github.com/apache/shardingsphere/pull/3894#discussion_r364063757", "createdAt": "2020-01-08T04:55:49Z", "author": {"login": "KomachiSion"}, "path": "sharding-scaling/sharding-scaling-core/src/test/java/org/apache/shardingsphere/shardingscaling/core/web/HttpServerHandlerTest.java", "diffHunk": "@@ -66,31 +66,31 @@ public void setUp() {\n \n     @Test\n     public void channelReadStartFailed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc76454eb8c8f6239027a600c6a5944e6cb475"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 994, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}