{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTQzNTc4", "number": 5471, "title": "Use multiple threads to load schemaMetaData", "bodyText": "Fixes #5073.", "createdAt": "2020-05-08T09:35:01Z", "url": "https://github.com/apache/shardingsphere/pull/5471", "merged": true, "mergeCommit": {"oid": "f8ef182bccc27969f82710a8277aa67312a408ce"}, "closed": true, "closedAt": "2020-05-08T15:00:55Z", "author": {"login": "yanyzy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfNt1lAH2gAyNDE1MTQzNTc4OjFiOGU0NzI3ZjU1ZGY3M2JhZmY5ZTJiYWZiY2JhOTg3ZjVjYzk5OWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfTMpugFqTQwODMwMTI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b8e4727f55df73baff9e2bafbcba987f5cc999e", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/1b8e4727f55df73baff9e2bafbcba987f5cc999e", "committedDate": "2020-05-08T08:36:34Z", "message": "use multiple threads for different data sources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d672375f08e21be8a69905ea3f9cf389c3aafd", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/34d672375f08e21be8a69905ea3f9cf389c3aafd", "committedDate": "2020-05-08T08:37:11Z", "message": "remove comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b5ed71ab4b3b9baba704817884a31a4e67f9e59", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/1b5ed71ab4b3b9baba704817884a31a4e67f9e59", "committedDate": "2020-05-08T09:30:46Z", "message": "refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTQzMDI4", "url": "https://github.com/apache/shardingsphere/pull/5471#pullrequestreview-408143028", "createdAt": "2020-05-08T10:19:24Z", "commit": {"oid": "1b5ed71ab4b3b9baba704817884a31a4e67f9e59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "904e658a886c4fb18ee2112694b5bd43b7521f47", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/904e658a886c4fb18ee2112694b5bd43b7521f47", "committedDate": "2020-05-08T12:29:41Z", "message": "replace with shardingsphere executor service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be05468f4dad4a7a9de42debf6ac750a2ce59520", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/be05468f4dad4a7a9de42debf6ac750a2ce59520", "committedDate": "2020-05-08T12:34:00Z", "message": "add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f412fa8f499bf72e0ebd758ead4e1bed264e08", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/42f412fa8f499bf72e0ebd758ead4e1bed264e08", "committedDate": "2020-05-08T12:35:27Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Mjk1MDcw", "url": "https://github.com/apache/shardingsphere/pull/5471#pullrequestreview-408295070", "createdAt": "2020-05-08T14:51:13Z", "commit": {"oid": "42f412fa8f499bf72e0ebd758ead4e1bed264e08"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1MToxM1rOGSoVaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1MToxN1rOGSoVxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4ODM5NQ==", "bodyText": "It is better to rename return value as result", "url": "https://github.com/apache/shardingsphere/pull/5471#discussion_r422188395", "createdAt": "2020-05-08T14:51:13Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "diffHunk": "@@ -142,6 +144,40 @@ public RuleSchemaMetaData load(final DatabaseType databaseType, final DataSource\n         return load(databaseType, dataSourceMap, tableName, properties);\n     }\n     \n+    private Map<String, SchemaMetaData> asyncLoad(final DatabaseType databaseType, final Map<String, DataSource> dataSourceMap, final ListeningExecutorService executorService,\n+                                                  final int maxConnectionCount, final Collection<String> excludedTableNames) {\n+        Map<String, SchemaMetaData> unconfiguredSchemaMetaDataMap = new ConcurrentHashMap<>(dataSourceMap.size(), 1);\n+        dataSourceMap.entrySet().stream().map(each -> executorService.submit(() -> {\n+            try {\n+                SchemaMetaData schemaMetaData = SchemaMetaDataLoader.load(each.getValue(), maxConnectionCount, databaseType.getName(), excludedTableNames);\n+                if (!schemaMetaData.getAllTableNames().isEmpty()) {\n+                    unconfiguredSchemaMetaDataMap.put(each.getKey(), schemaMetaData);\n+                }\n+            } catch (SQLException e) {\n+                throw new ShardingSphereException(\"RuleSchemaMetaData load faild\", e);\n+            }\n+        })).forEach(listenableFuture -> {\n+            try {\n+                listenableFuture.get();\n+            } catch (InterruptedException | ExecutionException e) {\n+                throw new ShardingSphereException(\"RuleSchemaMetaData load faild\", e);\n+            }\n+        });\n+        return unconfiguredSchemaMetaDataMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f412fa8f499bf72e0ebd758ead4e1bed264e08"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4ODQ4Ng==", "bodyText": "It is better to rename return value as result", "url": "https://github.com/apache/shardingsphere/pull/5471#discussion_r422188486", "createdAt": "2020-05-08T14:51:17Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "diffHunk": "@@ -142,6 +144,40 @@ public RuleSchemaMetaData load(final DatabaseType databaseType, final DataSource\n         return load(databaseType, dataSourceMap, tableName, properties);\n     }\n     \n+    private Map<String, SchemaMetaData> asyncLoad(final DatabaseType databaseType, final Map<String, DataSource> dataSourceMap, final ListeningExecutorService executorService,\n+                                                  final int maxConnectionCount, final Collection<String> excludedTableNames) {\n+        Map<String, SchemaMetaData> unconfiguredSchemaMetaDataMap = new ConcurrentHashMap<>(dataSourceMap.size(), 1);\n+        dataSourceMap.entrySet().stream().map(each -> executorService.submit(() -> {\n+            try {\n+                SchemaMetaData schemaMetaData = SchemaMetaDataLoader.load(each.getValue(), maxConnectionCount, databaseType.getName(), excludedTableNames);\n+                if (!schemaMetaData.getAllTableNames().isEmpty()) {\n+                    unconfiguredSchemaMetaDataMap.put(each.getKey(), schemaMetaData);\n+                }\n+            } catch (SQLException e) {\n+                throw new ShardingSphereException(\"RuleSchemaMetaData load faild\", e);\n+            }\n+        })).forEach(listenableFuture -> {\n+            try {\n+                listenableFuture.get();\n+            } catch (InterruptedException | ExecutionException e) {\n+                throw new ShardingSphereException(\"RuleSchemaMetaData load faild\", e);\n+            }\n+        });\n+        return unconfiguredSchemaMetaDataMap;\n+    }\n+    \n+    private Map<String, SchemaMetaData> syncLoad(final DatabaseType databaseType, final Map<String, DataSource> dataSourceMap,\n+                                                 final int maxConnectionCount, final Collection<String> excludedTableNames) throws SQLException {\n+        Map<String, SchemaMetaData> unconfiguredSchemaMetaDataMap = new HashMap<>(dataSourceMap.size(), 1);\n+        for (Entry<String, DataSource> entry : dataSourceMap.entrySet()) {\n+            SchemaMetaData schemaMetaData = SchemaMetaDataLoader.load(entry.getValue(), maxConnectionCount, databaseType.getName(), excludedTableNames);\n+            if (!schemaMetaData.getAllTableNames().isEmpty()) {\n+                unconfiguredSchemaMetaDataMap.put(entry.getKey(), schemaMetaData);\n+            }\n+        }\n+        return unconfiguredSchemaMetaDataMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f412fa8f499bf72e0ebd758ead4e1bed264e08"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40c5ec653031a693104d2ab9737b503ac1f10647", "author": {"user": {"login": "yanyzy", "name": "zhyee"}}, "url": "https://github.com/apache/shardingsphere/commit/40c5ec653031a693104d2ab9737b503ac1f10647", "committedDate": "2020-05-08T14:57:35Z", "message": "rename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MzAxMjk5", "url": "https://github.com/apache/shardingsphere/pull/5471#pullrequestreview-408301299", "createdAt": "2020-05-08T14:59:45Z", "commit": {"oid": "40c5ec653031a693104d2ab9737b503ac1f10647"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3647, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}