{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODA2ODk4", "number": 7559, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDowMjowMVrOEmXD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDowMjowMVrOEmXD6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjU5MTc4OnYy", "diffSide": "LEFT", "path": "shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/yaml/swapper/RuleSchemaMetaDataYamlSwapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDowMjowMVrOHWVhzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDoyMDowNVrOHWVyqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4MzQzNg==", "bodyText": "Do you think the following change is possible?\n//  YamlRuleSchemaMetaData\n\nprivate Map<String, YamlSchemaMetaData> unconfiguredSchemaMetaDataMap;\n\nto\n\nprivate Map<String, Collection<String>> unconfiguredSchemaMetaDataMap;\nSince a similar change is made in RuleSchemaMetaData, I suppose it will be better to keep YamlRuleSchemaMetaData   and RuleSchemaMetaData same.\nWhat do you think? FYI, please note this change will also alter the content for the registry center (SchemaChangedListener will be involved)", "url": "https://github.com/apache/shardingsphere/pull/7559#discussion_r493183436", "createdAt": "2020-09-23T04:02:01Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/yaml/swapper/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -47,22 +47,26 @@ public YamlRuleSchemaMetaData swapToYamlConfiguration(final RuleSchemaMetaData m\n         YamlRuleSchemaMetaData result = new YamlRuleSchemaMetaData();\n         result.setConfiguredSchemaMetaData(convertYamlSchema(metaData.getConfiguredSchemaMetaData()));\n         Map<String, YamlSchemaMetaData> unconfigured = metaData.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\n-                .collect(Collectors.toMap(Entry::getKey, entry -> convertYamlSchema(entry.getValue())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5a730dce5758c42d0f054c2c0066f2bec013af"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4Nzc1NA==", "bodyText": "Ok, will make YamlRuleSchemaMetaData and RuleSchemaMetaData the same", "url": "https://github.com/apache/shardingsphere/pull/7559#discussion_r493187754", "createdAt": "2020-09-23T04:20:05Z", "author": {"login": "xbkaishui"}, "path": "shardingsphere-governance/shardingsphere-governance-core/shardingsphere-governance-core-common/src/main/java/org/apache/shardingsphere/governance/core/yaml/swapper/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -47,22 +47,26 @@ public YamlRuleSchemaMetaData swapToYamlConfiguration(final RuleSchemaMetaData m\n         YamlRuleSchemaMetaData result = new YamlRuleSchemaMetaData();\n         result.setConfiguredSchemaMetaData(convertYamlSchema(metaData.getConfiguredSchemaMetaData()));\n         Map<String, YamlSchemaMetaData> unconfigured = metaData.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\n-                .collect(Collectors.toMap(Entry::getKey, entry -> convertYamlSchema(entry.getValue())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4MzQzNg=="}, "originalCommit": {"oid": "3d5a730dce5758c42d0f054c2c0066f2bec013af"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 656, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}