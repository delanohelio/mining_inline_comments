{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTk1MzE2", "number": 6997, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjozNjozM1rOEbRY7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzoyMDo1MFrOEbRjKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDMxOTE4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/ShardingRouteDecorator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjozNjozM1rOHFJiPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwNDoyOToyMlrOHFJ_7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MTE0OA==", "bodyText": "IMO, this condition judgment for update and delete statements seems a little bit intrusive for sharding router. I mean it is a detailed statement judgment for router seemingly. Do you think it is possible to move this to the  statement validator.\nHowever, the current statement validator maybe not meet our needs now. Hence other changes for it are required. My feeling is that we can rename the original  validate function of validator as preValidate  (A draft name, welcome a better one) firstly. Moreover, this added validating condition could be viewed as a postValidate function for validator.\nI'd like to listen to your voice.\nBets,\nTrista", "url": "https://github.com/apache/shardingsphere/pull/6997#discussion_r475161148", "createdAt": "2020-08-23T02:36:33Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/ShardingRouteDecorator.java", "diffHunk": "@@ -70,9 +73,18 @@ public RouteContext decorate(final RouteContext routeContext, final ShardingSphe\n         }\n         ShardingRouteEngine shardingRouteEngine = ShardingRouteEngineFactory.newInstance(shardingRule, metaData, sqlStatementContext, shardingConditions, props);\n         RouteResult routeResult = shardingRouteEngine.route(shardingRule);\n+        if (containsUpdateDeletePagination(sqlStatement) && routeResult.getRouteUnits().size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODc0OQ==", "bodyText": "IMO, this condition judgment for update and delete statements seems a little bit intrusive for sharding router. I mean it is a detailed statement judgment for router seemingly. Do you think it is possible to move this to the statement validator.\nHowever, the current statement validator maybe not meet our needs now. Hence other changes for it are required. My feeling is that we can rename the original validate function of validator as preValidate (A draft name, welcome a better one) firstly. Moreover, this added validating condition could be viewed as a postValidate function for validator.\nI'd like to listen to your voice.\nBets,\nTrista\n\n@tristaZero I really like the design of preValidate and postValidate, which will make the logic clearer.", "url": "https://github.com/apache/shardingsphere/pull/6997#discussion_r475168749", "createdAt": "2020-08-23T04:29:22Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/ShardingRouteDecorator.java", "diffHunk": "@@ -70,9 +73,18 @@ public RouteContext decorate(final RouteContext routeContext, final ShardingSphe\n         }\n         ShardingRouteEngine shardingRouteEngine = ShardingRouteEngineFactory.newInstance(shardingRule, metaData, sqlStatementContext, shardingConditions, props);\n         RouteResult routeResult = shardingRouteEngine.route(shardingRule);\n+        if (containsUpdateDeletePagination(sqlStatement) && routeResult.getRouteUnits().size() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MTE0OA=="}, "originalCommit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDM0NTM4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingInsertStatementValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzoyMDo1MFrOHFJuBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzoyMDo1MFrOHFJuBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2NDE2NA==", "bodyText": "Polishing work, great. :-)", "url": "https://github.com/apache/shardingsphere/pull/6997#discussion_r475164164", "createdAt": "2020-08-23T03:20:50Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingInsertStatementValidator.java", "diffHunk": "@@ -48,12 +48,12 @@ public void validate(final ShardingRule shardingRule, final SQLStatementContext<\n         Optional<OnDuplicateKeyColumnsSegment> onDuplicateKeyColumnsSegment = sqlStatement.getOnDuplicateKeyColumns();\n         String tableName = sqlStatement.getTable().getTableName().getIdentifier().getValue();\n         if (onDuplicateKeyColumnsSegment.isPresent() && isUpdateShardingKey(shardingRule, onDuplicateKeyColumnsSegment.get(), tableName)) {\n-            throw new ShardingSphereException(\"INSERT INTO .... ON DUPLICATE KEY UPDATE can not support update for sharding column.\");\n+            throw new ShardingSphereException(\"INSERT INTO ... ON DUPLICATE KEY UPDATE can not support update for sharding column.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 323, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}