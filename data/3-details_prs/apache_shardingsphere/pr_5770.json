{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjkyMzk5", "number": 5770, "title": "fix bug for ClassCastException when execute range query with different numeric type", "bodyText": "Fixes #5544 .\nChanges proposed in this pull request:\n\nfix ClassCastException when execute range query with different numeric type like t.clusterId > 3 and t.clusterId < 3147483647 and t.clusterId in (1, 2, 4)\nfix ClassCastException when execute range query with different numeric type like t.clusterId between 3 and 3147483647", "createdAt": "2020-05-23T15:57:00Z", "url": "https://github.com/apache/shardingsphere/pull/5770", "merged": true, "mergeCommit": {"oid": "926d7de225a012c443025c73c1ac46a5a908fd49"}, "closed": true, "closedAt": "2020-05-26T08:23:18Z", "author": {"login": "strongduanmu"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckIugyAH2gAyNDIyMjkyMzk5OmI3MGE3NzhmODg3Njk3OWRhZmM5NTk0NGM5OWU2YzUwODcwYjIxNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclAT5ogFqTQxODA3NDI0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b70a778f8876979dafc95944c99e6c50870b2148", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/b70a778f8876979dafc95944c99e6c50870b2148", "committedDate": "2020-05-23T15:37:24Z", "message": "fix bug for ClassCastException when execute range query in numeric type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzIxOTk1", "url": "https://github.com/apache/shardingsphere/pull/5770#pullrequestreview-417321995", "createdAt": "2020-05-24T02:22:25Z", "commit": {"oid": "b70a778f8876979dafc95944c99e6c50870b2148"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjoyMjoyNlrOGZsRhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjoyMzowNVrOGZsRpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5Mjk2Ng==", "bodyText": "Please do not format java doc, just keep one space with @aparam and @return", "url": "https://github.com/apache/shardingsphere/pull/5770#discussion_r429592966", "createdAt": "2020-05-24T02:22:26Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/util/SafeRangeOperationUtils.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.util;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Range;\n+import lombok.AccessLevel;\n+import lombok.AllArgsConstructor;\n+import lombok.SneakyThrows;\n+\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Safe range operation utility class.\n+ */\n+@AllArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class SafeRangeOperationUtils {\n+\n+    /**\n+     * Execute intersection method by safe mode.\n+     *\n+     * @param range          range\n+     * @param connectedRange connected range\n+     * @return the intersection result of two ranges", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70a778f8876979dafc95944c99e6c50870b2148"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5Mjk5OQ==", "bodyText": "What's mean of variable name connectedRange?", "url": "https://github.com/apache/shardingsphere/pull/5770#discussion_r429592999", "createdAt": "2020-05-24T02:23:05Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/util/SafeRangeOperationUtils.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.util;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Range;\n+import lombok.AccessLevel;\n+import lombok.AllArgsConstructor;\n+import lombok.SneakyThrows;\n+\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Safe range operation utility class.\n+ */\n+@AllArgsConstructor(access = AccessLevel.PRIVATE)\n+public final class SafeRangeOperationUtils {\n+\n+    /**\n+     * Execute intersection method by safe mode.\n+     *\n+     * @param range          range\n+     * @param connectedRange connected range", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b70a778f8876979dafc95944c99e6c50870b2148"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a1eaac72e5c90e48e3944685b3e450c278d864e", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/4a1eaac72e5c90e48e3944685b3e450c278d864e", "committedDate": "2020-05-24T03:04:12Z", "message": "modify the javadoc format with one space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTQ4NjQy", "url": "https://github.com/apache/shardingsphere/pull/5770#pullrequestreview-417948642", "createdAt": "2020-05-26T03:28:21Z", "commit": {"oid": "4a1eaac72e5c90e48e3944685b3e450c278d864e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzoyODoyMlrOGaNjGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzoyODoyMlrOGaNjGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEzODEzOA==", "bodyText": "A newline is supposed to start with 4 blank spaces. Just a little issue of check style. Apart from that, I approved. Thanks for the clean coding!", "url": "https://github.com/apache/shardingsphere/pull/5770#discussion_r430138138", "createdAt": "2020-05-26T03:28:22Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/test/java/org/apache/shardingsphere/sharding/route/engine/condition/generator/impl/ConditionValueBetweenOperatorGeneratorTest.java", "diffHunk": "@@ -36,11 +37,11 @@\n import static org.junit.Assert.assertTrue;\n \n public final class ConditionValueBetweenOperatorGeneratorTest {\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1eaac72e5c90e48e3944685b3e450c278d864e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b134aa5739bc4b79b4826998a4429e957f0fca", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/a1b134aa5739bc4b79b4826998a4429e957f0fca", "committedDate": "2020-05-26T03:42:45Z", "message": "blank lines start with 4 blank spaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTUzMjcy", "url": "https://github.com/apache/shardingsphere/pull/5770#pullrequestreview-417953272", "createdAt": "2020-05-26T03:49:29Z", "commit": {"oid": "a1b134aa5739bc4b79b4826998a4429e957f0fca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MDc0MjQ4", "url": "https://github.com/apache/shardingsphere/pull/5770#pullrequestreview-418074248", "createdAt": "2020-05-26T08:23:01Z", "commit": {"oid": "a1b134aa5739bc4b79b4826998a4429e957f0fca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4964, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}