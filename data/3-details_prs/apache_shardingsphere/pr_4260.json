{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTQ0MzEx", "number": 4260, "title": "refactor orchestration config for apollo & nacos. ", "bodyText": "For #3185 .\nChanges proposed in this pull request:\nfixes orchestration config listener for nacos and apollo.\nrefactor orchestration config for apollo.\nfixes nacos config key name.", "createdAt": "2020-02-12T07:09:00Z", "url": "https://github.com/apache/shardingsphere/pull/4260", "merged": true, "mergeCommit": {"oid": "87d6bd63aa411db99971c297eb257a42e0c72984"}, "closed": true, "closedAt": "2020-02-13T05:50:27Z", "author": {"login": "dongzl"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBAHn6AH2gAyMzc0MTQ0MzExOmU2MTNjZmEwMzA1OTQ1NTVmODczZmRmYTRmMmY0ZDE1MmZmM2RiYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDwggMAFqTM1Nzg5OTQ5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e613cfa030594555f873fdfa4f2f4d152ff3dba5", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/e613cfa030594555f873fdfa4f2f4d152ff3dba5", "committedDate": "2020-02-04T11:48:20Z", "message": "fixes orchestration config listener for nacos and apollo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e39cc0297c144696d6b1fc081aa53cee582f6e25", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/e39cc0297c144696d6b1fc081aa53cee582f6e25", "committedDate": "2020-02-04T11:50:43Z", "message": "refactor orchestration config for apollo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c7c1a18627bb74045e529303d05c710a4a4fee", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/e8c7c1a18627bb74045e529303d05c710a4a4fee", "committedDate": "2020-02-04T11:55:15Z", "message": "fixes nacos config key name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03143cbeacd5196121632ce50e2cc450f4747ee", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/e03143cbeacd5196121632ce50e2cc450f4747ee", "committedDate": "2020-02-08T02:20:00Z", "message": "remove Zookeeper unnecessary Properties."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea62ae3db09ce9a613be8e7f743170aebe54e122", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/ea62ae3db09ce9a613be8e7f743170aebe54e122", "committedDate": "2020-02-10T10:14:11Z", "message": "Merge remote-tracking branch 'remotes/origin/orchestration-5.x' into config-listener\n\n# Conflicts:\n#\tsharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/listener/SchemaChangedListener.java\n#\tsharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/51eab05cc4705a966d1fa3c563f9f1a3802529a7", "committedDate": "2020-02-10T10:19:52Z", "message": "merge from master, fixes code conflict."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjU1OTY0", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357255964", "createdAt": "2020-02-12T08:17:44Z", "commit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNzo0NFrOFolGPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOTowM1rOFolIeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTE2Ng==", "bodyText": "constant instead of literal\uff1f", "url": "https://github.com/apache/shardingsphere/pull/4260#discussion_r378095166", "createdAt": "2020-02-12T08:17:44Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/node/ConfigurationNode.java", "diffHunk": "@@ -57,6 +60,16 @@ public String getSchemaPath() {\n         return Joiner.on(\"/\").join(\"\", name, ROOT, SCHEMA_NODE);\n     }\n     \n+    /**\n+     * Get schema name path.\n+     * \n+     * @param schemaName schema name\n+     * @return schema name path\n+     */\n+    public String getSchemaNamePath(final String schemaName) {\n+        return Joiner.on(\"/\").join(\"\", name, ROOT, SCHEMA_NODE, schemaName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTI1Mw==", "bodyText": "constant\uff1f", "url": "https://github.com/apache/shardingsphere/pull/4260#discussion_r378095253", "createdAt": "2020-02-12T08:17:56Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/node/ConfigurationNode.java", "diffHunk": "@@ -119,6 +132,19 @@ public String getSchemaName(final String configurationNodeFullPath) {\n         return result;\n     }\n     \n+    /**\n+     * Split sharding schema name.\n+     * \n+     * @param shardingSchemaNames sharding schema names\n+     * @return sharding schema names\n+     */\n+    public Collection<String> splitShardingSchemaName(final String shardingSchemaNames) {\n+        if (Strings.isNullOrEmpty(shardingSchemaNames)) {\n+            return Collections.emptyList();\n+        }\n+        return Splitter.on(\",\").splitToList(shardingSchemaNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTczNg==", "bodyText": "If we didn't remove these parameters from config file, I suggest keep them here for examples.", "url": "https://github.com/apache/shardingsphere/pull/4260#discussion_r378095736", "createdAt": "2020-02-12T08:19:03Z", "author": {"login": "kimmking"}, "path": "sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/server.yaml", "diffHunk": "@@ -29,11 +29,6 @@\n #    namespace: orchestration\n #    props:\n #      overwrite: false\n-#      retry-interval-milliseconds: 10\n-#      time-to-live-seconds: 10\n-#      max-retries: 10\n-#      operation-timeout-milliseconds: 10\n-#      digest: 123\n #", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjY3MjQ4", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357267248", "createdAt": "2020-02-12T08:38:20Z", "commit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozODoyMVrOFolqYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozODoyMVrOFolqYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwNDQxOA==", "bodyText": "Whether we should add TCC code for transaction.", "url": "https://github.com/apache/shardingsphere/pull/4260#discussion_r378104418", "createdAt": "2020-02-12T08:38:21Z", "author": {"login": "wgy8283335"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-apollo/src/main/java/org/apache/shardingsphere/orchestration/center/instance/wrapper/ApolloOpenApiWrapper.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.center.instance.wrapper;\n+\n+import com.ctrip.framework.apollo.core.ConfigConsts;\n+import com.ctrip.framework.apollo.openapi.client.ApolloOpenApiClient;\n+import com.ctrip.framework.apollo.openapi.client.constant.ApolloOpenApiConstants;\n+import com.ctrip.framework.apollo.openapi.dto.NamespaceReleaseDTO;\n+import com.ctrip.framework.apollo.openapi.dto.OpenItemDTO;\n+import com.google.common.primitives.Ints;\n+import org.apache.shardingsphere.orchestration.center.configuration.InstanceConfiguration;\n+\n+import java.util.Objects;\n+import java.util.Properties;\n+\n+/**\n+ * Apollo open api client wrapper.\n+ *\n+ * @author dongzonglei\n+ */\n+public final class ApolloOpenApiWrapper {\n+    \n+    private ApolloOpenApiClient client;\n+    \n+    private String namespace;\n+    \n+    private String appId;\n+    \n+    private String env;\n+    \n+    private String clusterName;\n+    \n+    private String administrator;\n+    \n+    public ApolloOpenApiWrapper(final InstanceConfiguration config, final Properties properties) {\n+        namespace = config.getNamespace();\n+        appId = properties.getProperty(\"appId\", \"APOLLO_SHARDING_SPHERE\");\n+        env = properties.getProperty(\"env\", \"DEV\");\n+        clusterName = properties.getProperty(\"clusterName\", ConfigConsts.CLUSTER_NAME_DEFAULT);\n+        administrator = properties.getProperty(\"administrator\");\n+        String apolloToken = properties.getProperty(\"token\");\n+        String portalUrl = properties.getProperty(\"portalUrl\");\n+        Integer connectTimeout = Ints.tryParse(Objects.toString(properties.get(\"connectTimeout\")));\n+        Integer readTimeout = Ints.tryParse(Objects.toString(properties.get(\"readTimeout\")));\n+        client = ApolloOpenApiClient.newBuilder().withPortalUrl(portalUrl)\n+                .withConnectTimeout(connectTimeout == null ? ApolloOpenApiConstants.DEFAULT_CONNECT_TIMEOUT : connectTimeout)\n+                .withReadTimeout(readTimeout == null ? ApolloOpenApiConstants.DEFAULT_READ_TIMEOUT : readTimeout)\n+                .withToken(apolloToken).build();\n+    }\n+    \n+    /**\n+     * Get config value by key.\n+     * \n+     * @param key key\n+     * @return value\n+     */\n+    public String getValue(final String key) {\n+        OpenItemDTO itemDTO = client.getItem(appId, env, clusterName, namespace, key);\n+        if (itemDTO == null) {\n+            return null;\n+        }\n+        return itemDTO.getValue();\n+    }\n+    \n+    /**\n+     * Persist config.\n+     * \n+     * @param key key\n+     * @param value value\n+     */\n+    public void persist(final String key, final String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjY5Mzg1", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357269385", "createdAt": "2020-02-12T08:42:11Z", "commit": {"oid": "51eab05cc4705a966d1fa3c563f9f1a3802529a7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c86b85c4b7e5dc853c54f1ef80a91d67b1b62588", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/c86b85c4b7e5dc853c54f1ef80a91d67b1b62588", "committedDate": "2020-02-12T12:10:00Z", "message": "catch persist method exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c45b260e4a9f1ee428fbd67ec97134f8948d463", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/5c45b260e4a9f1ee428fbd67ec97134f8948d463", "committedDate": "2020-02-12T12:11:27Z", "message": "use class constant instead of literal."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a426f9c5aee7aee703eb57c2a2c83a11ce53557", "author": {"user": {"login": "dongzl", "name": "Zonglei Dong"}}, "url": "https://github.com/apache/shardingsphere/commit/4a426f9c5aee7aee703eb57c2a2c83a11ce53557", "committedDate": "2020-02-12T12:12:46Z", "message": "revert config file, add default configuration."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NTkxMjYy", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357591262", "createdAt": "2020-02-12T16:19:13Z", "commit": {"oid": "4a426f9c5aee7aee703eb57c2a2c83a11ce53557"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODc5Mjgw", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357879280", "createdAt": "2020-02-13T00:15:31Z", "commit": {"oid": "4a426f9c5aee7aee703eb57c2a2c83a11ce53557"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODk5NDkx", "url": "https://github.com/apache/shardingsphere/pull/4260#pullrequestreview-357899491", "createdAt": "2020-02-13T01:18:48Z", "commit": {"oid": "4a426f9c5aee7aee703eb57c2a2c83a11ce53557"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4150, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}