{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTM3Nzg2", "number": 6945, "title": "Add: add test case for shardingRuleConfiguration (#6927)", "bodyText": "Fixes #6927.\nChanges proposed in this pull request:\n\nadd more test case", "createdAt": "2020-08-20T01:10:02Z", "url": "https://github.com/apache/shardingsphere/pull/6945", "merged": true, "mergeCommit": {"oid": "cacd5f4a30f9a27ffb457cfc28f9d13064cdb795"}, "closed": true, "closedAt": "2020-08-21T09:26:11Z", "author": {"login": "taojintianxia"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAlWm6gH2gAyNDcwNTM3Nzg2OjllNzdiNGY5NGM3YTE1YjNhOWI0NTU5MDFkZjE5YzRjYjExYjUyNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBBWcpgFqTQ3MjM0MDg1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e77b4f94c7a15b3a9b455901df19c4cb11b525b", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/9e77b4f94c7a15b3a9b455901df19c4cb11b525b", "committedDate": "2020-08-20T00:48:25Z", "message": "Add: add test case for shardingRuleConfiguration (#6927)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48e505fac588c6a36e496a3b53740e213ff1ae52", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/48e505fac588c6a36e496a3b53740e213ff1ae52", "committedDate": "2020-08-20T02:21:23Z", "message": "Refactor: typecast should follow with whitespace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNDYxMDUw", "url": "https://github.com/apache/shardingsphere/pull/6945#pullrequestreview-471461050", "createdAt": "2020-08-20T10:24:00Z", "commit": {"oid": "48e505fac588c6a36e496a3b53740e213ff1ae52"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoyNDowMFrOHD588g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoyNDowMFrOHD588g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1NzI2Ng==", "bodyText": "Please remove useless blank line", "url": "https://github.com/apache/shardingsphere/pull/6945#discussion_r473857266", "createdAt": "2020-08-20T10:24:00Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-spring/shardingsphere-sharding-spring-boot-starter/src/test/java/org/apache/shardingsphere/sharding/spring/boot/ShardingSpringBootStarterTest.java", "diffHunk": "@@ -68,6 +74,47 @@ public void assertKeyGenerateAlgorithm() {\n     @Test\n     public void assertShardingConfiguration() {\n         assertThat(shardingRuleConfiguration.getTables().size(), is(2));\n-        // TODO assert sharding configuration\n+        List<ShardingTableRuleConfiguration> shardingTableRuleConfigurationList = Lists.newArrayList(shardingRuleConfiguration.getTables());\n+        assertThat(shardingTableRuleConfigurationList.get(0).getLogicTable(), is(\"t_order\"));\n+        assertThat(shardingTableRuleConfigurationList.get(0).getActualDataNodes(), is(\"ds_$->{0..1}.t_order_$->{0..1}\"));\n+        assertThat(shardingTableRuleConfigurationList.get(0).getTableShardingStrategy(), instanceOf(StandardShardingStrategyConfiguration.class));\n+        assertThat(((StandardShardingStrategyConfiguration) shardingTableRuleConfigurationList.get(0).getTableShardingStrategy()).getShardingColumn(), is(\"order_id\"));\n+        assertThat(shardingTableRuleConfigurationList.get(0).getTableShardingStrategy().getShardingAlgorithmName(), is(\"orderTableShardingAlgorithm\"));\n+        assertThat(shardingTableRuleConfigurationList.get(0).getKeyGenerateStrategy().getColumn(), is(\"order_id\"));\n+        assertThat(shardingTableRuleConfigurationList.get(0).getKeyGenerateStrategy().getKeyGeneratorName(), is(\"keyGenerator\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getLogicTable(), is(\"t_order_item\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getActualDataNodes(), is(\"ds_$->{0..1}.t_order_item_$->{0..1}\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getTableShardingStrategy(), instanceOf(StandardShardingStrategyConfiguration.class));\n+        assertThat(((StandardShardingStrategyConfiguration) shardingTableRuleConfigurationList.get(1).getTableShardingStrategy()).getShardingColumn(), is(\"order_id\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getTableShardingStrategy().getShardingAlgorithmName(), is(\"orderItemTableShardingAlgorithm\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getKeyGenerateStrategy().getColumn(), is(\"order_item_id\"));\n+        assertThat(shardingTableRuleConfigurationList.get(1).getKeyGenerateStrategy().getKeyGeneratorName(), is(\"keyGenerator\"));\n+\n+        assertThat(shardingRuleConfiguration.getBindingTableGroups().size(), is(2));\n+        List<String> bindingTableGroupsList = new ArrayList<>(shardingRuleConfiguration.getBindingTableGroups());\n+        assertThat(bindingTableGroupsList.get(0), is(\"t_order\"));\n+        assertThat(bindingTableGroupsList.get(1), is(\"t_order_item\"));\n+\n+        assertThat(shardingRuleConfiguration.getBroadcastTables().size(), is(1));\n+        assertThat(shardingRuleConfiguration.getBroadcastTables().iterator().next(), is(\"t_config\"));\n+\n+        assertThat(shardingRuleConfiguration.getDefaultDatabaseShardingStrategy(), instanceOf(StandardShardingStrategyConfiguration.class));\n+        assertThat(((StandardShardingStrategyConfiguration) shardingRuleConfiguration.getDefaultDatabaseShardingStrategy()).getShardingColumn(), is(\"user_id\"));\n+        assertThat(shardingRuleConfiguration.getDefaultDatabaseShardingStrategy().getShardingAlgorithmName(), is(\"databaseShardingAlgorithm\"));\n+    \n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().size(), is(3));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderItemTableShardingAlgorithm\"), instanceOf(InlineShardingAlgorithm.class));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderItemTableShardingAlgorithm\").getType(), is(\"INLINE\"));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderItemTableShardingAlgorithm\").getProps().getProperty(\"algorithm.expression\"), is(\"t_order_item_$->{order_id % 2}\"));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"databaseShardingAlgorithm\"), instanceOf(InlineShardingAlgorithm.class));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"databaseShardingAlgorithm\").getType(), is(\"INLINE\"));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"databaseShardingAlgorithm\").getProps().getProperty(\"algorithm.expression\"), is(\"ds_$->{user_id % 2}\"));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderTableShardingAlgorithm\"), instanceOf(InlineShardingAlgorithm.class));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderTableShardingAlgorithm\").getType(), is(\"INLINE\"));\n+        assertThat(shardingRuleConfiguration.getShardingAlgorithms().get(\"orderTableShardingAlgorithm\").getProps().getProperty(\"algorithm.expression\"), is(\"t_order_$->{order_id % 2}\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e505fac588c6a36e496a3b53740e213ff1ae52"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51a4a4ce0a24f433f723abb2752283cf26d70ab4", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/51a4a4ce0a24f433f723abb2752283cf26d70ab4", "committedDate": "2020-08-20T12:11:06Z", "message": "Remove: remove blank line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxNzI3MzY1", "url": "https://github.com/apache/shardingsphere/pull/6945#pullrequestreview-471727365", "createdAt": "2020-08-20T15:25:47Z", "commit": {"oid": "51a4a4ce0a24f433f723abb2752283cf26d70ab4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7f2ef5634fe891d805c9d40284268e51092c6b5", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/e7f2ef5634fe891d805c9d40284268e51092c6b5", "committedDate": "2020-08-21T04:10:46Z", "message": "Refactor: refactor the test case (#6927)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMzQwODU0", "url": "https://github.com/apache/shardingsphere/pull/6945#pullrequestreview-472340854", "createdAt": "2020-08-21T09:25:36Z", "commit": {"oid": "e7f2ef5634fe891d805c9d40284268e51092c6b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4757, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}