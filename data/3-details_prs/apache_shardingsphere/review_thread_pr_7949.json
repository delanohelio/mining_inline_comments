{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNjQxNTUz", "number": 7949, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzozNjoyOFrOEzGYQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzozOTowOFrOEzGbXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDE3MzQ1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/ShardingRouteEngineFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzozNjoyOFrOHqHX5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNDo1OToyMlrOHqKRew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyMzA0Nw==", "bodyText": "Could you give a SQL example involving ShardingInstanceBroadcastRoutingEngine", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513923047", "createdAt": "2020-10-29T03:36:28Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/ShardingRouteEngineFactory.java", "diffHunk": "@@ -140,10 +131,16 @@ private static ShardingRouteEngine getDALRoutingEngine(final ShardingRule shardi\n         return new ShardingDataSourceGroupBroadcastRoutingEngine();\n     }\n     \n-    private static ShardingRouteEngine getDCLRoutingEngine(final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n-        return isDCLForSingleTable(sqlStatementContext) \n-                ? new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext)\n-                : new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());\n+    private static ShardingRouteEngine getDCLRoutingEngine(final ShardingRule shardingRule, final Map<String, Collection<String>> unconfiguredSchemaMetaDataMap,\n+                                                           final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n+        if (isDCLForSingleTable(sqlStatementContext)) {\n+            Collection<String> tableNames = sqlStatementContext.getTablesContext().getTableNames();\n+            return !shardingRule.tableRuleExists(tableNames)\n+                    ? new ShardingUnconfiguredTablesRoutingEngine(tableNames, unconfiguredSchemaMetaDataMap, sqlStatementContext.getSqlStatement()) \n+                    : new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext);\n+        } else {\n+            return new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk3MDU1NQ==", "bodyText": "ShardingInstanceBroadcastRoutingEngine\n\n@tristaZero If user executes a DCL statement that does not contain tables or contains multiple tables, ShardingInstanceBroadcastRoutingEngine will be used at this time. For example: SET PASSWORD FOR'bob'@'%.example.org' ='auth_string';", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513970555", "createdAt": "2020-10-29T04:59:22Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/ShardingRouteEngineFactory.java", "diffHunk": "@@ -140,10 +131,16 @@ private static ShardingRouteEngine getDALRoutingEngine(final ShardingRule shardi\n         return new ShardingDataSourceGroupBroadcastRoutingEngine();\n     }\n     \n-    private static ShardingRouteEngine getDCLRoutingEngine(final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n-        return isDCLForSingleTable(sqlStatementContext) \n-                ? new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext)\n-                : new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());\n+    private static ShardingRouteEngine getDCLRoutingEngine(final ShardingRule shardingRule, final Map<String, Collection<String>> unconfiguredSchemaMetaDataMap,\n+                                                           final SQLStatementContext sqlStatementContext, final ShardingSphereMetaData metaData) {\n+        if (isDCLForSingleTable(sqlStatementContext)) {\n+            Collection<String> tableNames = sqlStatementContext.getTablesContext().getTableNames();\n+            return !shardingRule.tableRuleExists(tableNames)\n+                    ? new ShardingUnconfiguredTablesRoutingEngine(tableNames, unconfiguredSchemaMetaDataMap, sqlStatementContext.getSqlStatement()) \n+                    : new ShardingTableBroadcastRoutingEngine(metaData.getSchemaMetaData().getConfiguredSchemaMetaData(), sqlStatementContext);\n+        } else {\n+            return new ShardingInstanceBroadcastRoutingEngine(metaData.getDataSourcesMetaData());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyMzA0Nw=="}, "originalCommit": {"oid": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMDE4MTQwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMzozOTowOFrOHqHdsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNDo1NDoyN1rOHqKJ0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyNDUyOQ==", "bodyText": "Why is replaceAll(\"%\", \"%%\") needed?", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513924529", "createdAt": "2020-10-29T03:39:08Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java", "diffHunk": "@@ -64,7 +64,7 @@ public ParseTree parse(final String sql, final boolean useCache) {\n     private ParseTree parse(final String sql) {\n         ParseASTNode result = twoPhaseParse(sql);\n         if (result.getRootNode() instanceof ErrorNode) {\n-            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql));\n+            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql).replaceAll(\"%\", \"%%\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2ODU5Mg==", "bodyText": "Why is replaceAll(\"%\", \"%%\") needed?\n\n@tristaZero When user executes a SQL containing % and the SQL parsing is abnormal, for example: SET PASSWORD FOR'bob'@'%.example.org' = PASSWORD('auth_string');. Since the % symbol is a reserved character, an UnknownFormatConversionException will occur when the String.format() method is executed.\nIn order to allow users to see the real prompt, such as: Unsupported SQL of xxxStatement, we need to escape the % symbol, that is, replace it with the %% symbol.", "url": "https://github.com/apache/shardingsphere/pull/7949#discussion_r513968592", "createdAt": "2020-10-29T04:54:27Z", "author": {"login": "strongduanmu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/api/parser/SQLParserEngine.java", "diffHunk": "@@ -64,7 +64,7 @@ public ParseTree parse(final String sql, final boolean useCache) {\n     private ParseTree parse(final String sql) {\n         ParseASTNode result = twoPhaseParse(sql);\n         if (result.getRootNode() instanceof ErrorNode) {\n-            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql));\n+            throw new SQLParsingException(String.format(\"Unsupported SQL of `%s`\", sql).replaceAll(\"%\", \"%%\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkyNDUyOQ=="}, "originalCommit": {"oid": "de4eff46c599daa6e0b9fc15f09ca64b9b1f229b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 617, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}