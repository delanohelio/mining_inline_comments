{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjE5OTgz", "number": 4789, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNDoxMlrODpvXOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToxNzozMFrODp1IEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk0MjAzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNDoxMlrOF5Gqgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzo1NToxNlrOF5HGSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjMzOA==", "bodyText": "Please remove them.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395422338", "createdAt": "2020-03-20T03:14:12Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java", "diffHunk": "@@ -140,6 +140,9 @@ private static boolean isPlaceholderWithoutParameter(final Object[] sqlTestParam\n     \n     @Test\n     public void assertSupportedSQL() {\n+        if (\"select_sub_query_with_table\".equals(sqlCaseId)) {\n+            System.out.println(\"adfasf\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyOTQ0OA==", "bodyText": "I'll check.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395429448", "createdAt": "2020-03-20T03:55:16Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/engine/SQLParserParameterizedTest.java", "diffHunk": "@@ -140,6 +140,9 @@ private static boolean isPlaceholderWithoutParameter(final Object[] sqlTestParam\n     \n     @Test\n     public void assertSupportedSQL() {\n+        if (\"select_sub_query_with_table\".equals(sqlCaseId)) {\n+            System.out.println(\"adfasf\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjMzOA=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk0NDEwOnYy", "diffSide": "RIGHT", "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/truncate.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoxNjowNlrOF5GrpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDo0OTozN1rOF5HoYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjYyOA==", "bodyText": "Hi, why did you want to limit to those databases?", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395422628", "createdAt": "2020-03-20T03:16:06Z", "author": {"login": "tristaZero"}, "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/truncate.xml", "diffHunk": "@@ -17,7 +17,7 @@\n   -->\n \n <sql-cases>\n-    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" />\n+    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" db-types=\"MySQL,Oracle,PostgreSQL\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyNzEzMw==", "bodyText": "This testcase for H2 failed, so remove it. I just change mysql parser . I think this change will not affect others.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395427133", "createdAt": "2020-03-20T03:41:52Z", "author": {"login": "jingshanglu"}, "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/truncate.xml", "diffHunk": "@@ -17,7 +17,7 @@\n   -->\n \n <sql-cases>\n-    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" />\n+    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" db-types=\"MySQL,Oracle,PostgreSQL\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjYyOA=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNzA1Mw==", "bodyText": "Why did H2 fail? AFAIK, when db is h2, parser test engine will use MySQL to parse SQL.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395437053", "createdAt": "2020-03-20T04:42:43Z", "author": {"login": "tristaZero"}, "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/truncate.xml", "diffHunk": "@@ -17,7 +17,7 @@\n   -->\n \n <sql-cases>\n-    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" />\n+    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" db-types=\"MySQL,Oracle,PostgreSQL\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjYyOA=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzODE3OA==", "bodyText": "Not parser test,it is jdbc-test.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395438178", "createdAt": "2020-03-20T04:49:37Z", "author": {"login": "jingshanglu"}, "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/truncate.xml", "diffHunk": "@@ -17,7 +17,7 @@\n   -->\n \n <sql-cases>\n-    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" />\n+    <sql-case id=\"truncate_table\" value=\"TRUNCATE TABLE t_log\" db-types=\"MySQL,Oracle,PostgreSQL\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMjYyOA=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDk1MjE2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMzoyMzoxNlrOF5Gwog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowNDo1M1rOF5Hx3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg==", "bodyText": "Consider the samples of length may be (1) or (2, 1), I suggest the members of DataTypeLengthSegment  to be,\n private int startIndex;\n\n     private int stopIndex;\n\n     private int firstNumber;\n \n     private int secondNumber;\n\n     public Optional<int> getSecondNumber(){}", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395423906", "createdAt": "2020-03-20T03:23:16Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.LinkedList;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int length;\n+    \n+    private LinkedList<Integer> lengthPair;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyODczNQ==", "bodyText": "I think it is better as a whole. When using the whole length, users can use it according to their needs.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395428735", "createdAt": "2020-03-20T03:50:49Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.LinkedList;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int length;\n+    \n+    private LinkedList<Integer> lengthPair;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzOTMxNw==", "bodyText": "What I concerned about is that length and lengthPairwill confused user who considers length and lengthPair can have value at the same time. But the fact is that either length or lengthPairan' can have the value at one time. If the user calls getLength()andgetLengthPair()` together, what will happen?", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395439317", "createdAt": "2020-03-20T04:56:33Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.LinkedList;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int length;\n+    \n+    private LinkedList<Integer> lengthPair;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDYwNg==", "bodyText": "If just have one num,lengthPair is null, if have two, length is null.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395440606", "createdAt": "2020-03-20T05:04:53Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.LinkedList;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int length;\n+    \n+    private LinkedList<Integer> lengthPair;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQyMzkwNg=="}, "originalCommit": {"oid": "8901cc8852ebba0b420da0813ec835e071fb9f7f"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTYwMDU4OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTozNzoyMlrOF5M4Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo0NjoxMlrOF5NJeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNDE5NQ==", "bodyText": "As I do not think firstNumber and secondNumber are proper names, i dug into many doc, and found firstNumber is supposed to be precision; On the other hand, secondNumber means scale[1]. Can you give them other expressive names?\n[1] https://dev.mysql.com/doc/refman/5.7/en/precision-math-decimal-characteristics.html", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395524195", "createdAt": "2020-03-20T09:37:22Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.Optional;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int firstNumber;\n+    \n+    private int secondNumber;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyODU2OQ==", "bodyText": "firstLength and secondLength ,is it ok?", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395528569", "createdAt": "2020-03-20T09:46:12Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/DataTypeLengthSegment.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.sql.parser.sql.segment.generic;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+import org.apache.shardingsphere.sql.parser.sql.segment.SQLSegment;\n+\n+import java.util.Optional;\n+\n+@Getter\n+@Setter\n+public final class DataTypeLengthSegment implements SQLSegment {\n+    \n+    private int startIndex;\n+    \n+    private int stopIndex;\n+    \n+    private int firstNumber;\n+    \n+    private int secondNumber;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUyNDE5NQ=="}, "originalCommit": {"oid": "7ab581978b3583a63eb9c71c4fbf5e9093bef25a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTg4NjI0OnYy", "diffSide": "RIGHT", "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/create.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToxNzozMFrOF5PzFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMToxNzozMFrOF5PzFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3MTk4OQ==", "bodyText": "Hi You should reverse those changes, for spaces is needed.", "url": "https://github.com/apache/shardingsphere/pull/4789#discussion_r395571989", "createdAt": "2020-03-20T11:17:30Z", "author": {"login": "tristaZero"}, "path": "sharding-sql-test/src/main/resources/sql/supported/ddl/create.xml", "diffHunk": "@@ -24,8 +24,8 @@\n     <sql-case id=\"create_global_temporary_table\" value=\"CREATE GLOBAL TEMPORARY TABLE t_temp_log(id int, status varchar(10))\" db-types=\"Oracle,PostgreSQL\" />\n     <sql-case id=\"create_local_temp_table\" value=\"CREATE LOCAL TEMP TABLE t_temp_log(id int, status varchar(10))\" db-types=\"PostgreSQL\" />\n     <sql-case id=\"create_unlogged_table\" value=\"CREATE UNLOGGED TABLE t_log(id int, status varchar(10))\" db-types=\"PostgreSQL\" />\n-    <sql-case id=\"create_index\" value=\"CREATE INDEX t_log_index ON t_log (id)\" />\n-    <sql-case id=\"create_unique_index\" value=\"CREATE UNIQUE INDEX t_log_index ON t_log (id)\" />\n+    <sql-case id=\"create_index\" value=\"CREATE INDEX t_log_index ON t_log (id)\"/>\n+    <sql-case id=\"create_unique_index\" value=\"CREATE UNIQUE INDEX t_log_index ON t_log (id)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9abadb6bd3bece67e6c95bf8be23cfca3bc4dd0"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1128, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}