{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTQ2OTIz", "number": 7772, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMzo1OFrOEtGaLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNToyMlrOEtGdGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI2MzgwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMzo1OFrOHgs6Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozMzo1OFrOHgs6Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MjIzOA==", "bodyText": "Please only keep one line here", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052238", "createdAt": "2020-10-13T15:33:58Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb4d3c68544f361c4ce18cdbed332aa236fd660"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI2NTUwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNDoxNlrOHgs7Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNDoxNlrOHgs7Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MjUxMQ==", "bodyText": "Please do not add java doc for test case", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052511", "createdAt": "2020-10-13T15:34:16Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb4d3c68544f361c4ce18cdbed332aa236fd660"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI2ODQzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNDo1NFrOHgs89A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNDo1NFrOHgs89A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1Mjk4MA==", "bodyText": "It is unnecessary to assert static value", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504052980", "createdAt": "2020-10-13T15:34:54Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public final class OracleJDBCSchemaHandlerTest {\n+\n+    private static final String USER_NAME = \"root\";\n+\n+    @Mock\n+    private Connection connection;\n+    \n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+    \n+    @Test\n+    public void assertGetType() {\n+        assertThat(new OracleJDBCSchemaHandler().getType(), is(\"Oracle\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb4d3c68544f361c4ce18cdbed332aa236fd660"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzI3MTMxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNToyMlrOHgs-ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTozNToyMlrOHgs-ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA1MzQwNg==", "bodyText": "Please use SPI to initialize OracleJDBCSchemaHandler for better test", "url": "https://github.com/apache/shardingsphere/pull/7772#discussion_r504053406", "createdAt": "2020-10-13T15:35:22Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/test/java/org/apache/shardingsphere/infra/metadata/model/physical/jdbc/handler/impl/OracleJDBCSchemaHandlerTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.infra.metadata.model.physical.jdbc.handler.impl;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.SQLException;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+\n+/**\n+ * Test for JDBC schema handler of Oracle.\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public final class OracleJDBCSchemaHandlerTest {\n+\n+    private static final String USER_NAME = \"root\";\n+\n+    @Mock\n+    private Connection connection;\n+    \n+    @Mock\n+    private DatabaseMetaData databaseMetaData;\n+    \n+    @Test\n+    public void assertGetType() {\n+        assertThat(new OracleJDBCSchemaHandler().getType(), is(\"Oracle\"));\n+    }\n+    \n+    @Test\n+    public void assertGetSchema() throws SQLException {\n+        when(connection.getMetaData()).thenReturn(databaseMetaData);\n+        when(databaseMetaData.getUserName()).thenReturn(USER_NAME);\n+        assertThat(new OracleJDBCSchemaHandler().getSchema(connection), is(USER_NAME.toUpperCase()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb4d3c68544f361c4ce18cdbed332aa236fd660"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 643, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}