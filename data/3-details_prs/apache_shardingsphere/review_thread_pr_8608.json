{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTU5NTM0", "number": 8608, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoxOTo1N1rOFE0glQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMTo0M1rOFE0iVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk4OTMzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracers/shardingsphere-agent-tracer-jaeger/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoxOTo1N1rOIFBeGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoxOTo1N1rOIFBeGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzNzg4Mw==", "bodyText": "version maybe common define", "url": "https://github.com/apache/shardingsphere/pull/8608#discussion_r542137883", "createdAt": "2020-12-14T06:19:57Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracers/shardingsphere-agent-tracer-jaeger/pom.xml", "diffHunk": "@@ -28,10 +28,38 @@\n     </parent>\n \n     <packaging>jar</packaging>\n-    <artifactId>shardingsphere-agent-tracer-sample</artifactId>\n+    <artifactId>shardingsphere-agent-tracer-jaeger</artifactId>\n \n     <properties>\n-        <entrypoint.class>org.apache.shardingsphere.agent.plugin.trace.SamplePluginDefinition</entrypoint.class>\n+        <entrypoint.class>org.apache.shardingsphere.agent.plugin.trace.JaegerPluginDefinition</entrypoint.class>\n     </properties>\n \n+    <dependencies>\n+        <dependency>\n+            <groupId>io.jaegertracing</groupId>\n+            <artifactId>jaeger-client</artifactId>\n+            <version>0.31.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00623c4c600efbc6cbddd872b473afc177b0c65"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk5MDEyOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/plugin/AgentPluginLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMDoxOFrOIFBeig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMDoxOFrOIFBeig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzNzk5NA==", "bodyText": "remove this empty line", "url": "https://github.com/apache/shardingsphere/pull/8608#discussion_r542137994", "createdAt": "2020-12-14T06:20:18Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/plugin/AgentPluginLoader.java", "diffHunk": "@@ -262,7 +268,7 @@ public PluginAdviceDefinition loadPluginAdviceDefine(final TypeDescription typeD\n      * To get or create instance of the advice class. Create new one and caching when it is not exist.\n      *\n      * @param classNameOfAdvice class name of advice\n-     * @param <T> advice type\n+     * @param <T>               advice type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00623c4c600efbc6cbddd872b473afc177b0c65"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk5MTczOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-distribution/src/main/resources/conf/agent.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMTowM1rOIFBfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMTowM1rOIFBfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODIyNQ==", "bodyText": "have empty line  in the end", "url": "https://github.com/apache/shardingsphere/pull/8608#discussion_r542138225", "createdAt": "2020-12-14T06:21:03Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-distribution/src/main/resources/conf/agent.yaml", "diffHunk": "@@ -21,3 +21,11 @@ metrics:\n   host: localhost\n   port: 8090\n \n+tracing:\n+  agentHost: localhost\n+  agentPort: 5775\n+  extra:\n+    JAEGER_SAMPLER_TYPE: const\n+    JAEGER_SAMPLER_PARAM: 1\n+    JAEGER_REPORTER_LOG_SPANS: true\n+    JAEGER_REPORTER_FLUSH_INTERVAL: 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00623c4c600efbc6cbddd872b473afc177b0c65"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTk5MzgzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracers/shardingsphere-agent-tracer-jaeger/src/main/java/org/apache/shardingsphere/agent/plugin/trace/advice/CommandExecutorTaskAdvice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMTo0M1rOIFBgdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMTo0M1rOIFBgdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODQ4Nw==", "bodyText": "have empyt line\uff0c maybe use string.joins()", "url": "https://github.com/apache/shardingsphere/pull/8608#discussion_r542138487", "createdAt": "2020-12-14T06:21:43Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracers/shardingsphere-agent-tracer-jaeger/src/main/java/org/apache/shardingsphere/agent/plugin/trace/advice/CommandExecutorTaskAdvice.java", "diffHunk": "@@ -16,31 +16,44 @@\n  *\n  */\n \n-package org.apache.shardingsphere.agent.plugin.trace;\n+package org.apache.shardingsphere.agent.plugin.trace.advice;\n \n+import io.opentracing.Scope;\n+import io.opentracing.tag.Tags;\n+import io.opentracing.util.GlobalTracer;\n import org.apache.shardingsphere.agent.core.plugin.advice.MethodAroundAdvice;\n import org.apache.shardingsphere.agent.core.plugin.advice.MethodInvocationResult;\n import org.apache.shardingsphere.agent.core.plugin.advice.TargetObject;\n+import org.apache.shardingsphere.agent.plugin.trace.ShardingErrorSpan;\n+import org.apache.shardingsphere.agent.plugin.trace.constant.ShardingTags;\n+import org.apache.shardingsphere.infra.executor.kernel.model.ExecutorDataMap;\n \n import java.lang.reflect.Method;\n \n /**\n- * Advice sample.\n+ * Command executor task advice.\n  */\n-public class SampleAdvice implements MethodAroundAdvice {\n-\n+public class CommandExecutorTaskAdvice implements MethodAroundAdvice {\n+    private static final String OPERATION_NAME = \"/\" + ShardingTags.COMPONENT_NAME + \"/rootInvoke/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00623c4c600efbc6cbddd872b473afc177b0c65"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 481, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}