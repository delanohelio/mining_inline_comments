{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTE2MDUz", "number": 4353, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDoyNTowMlrODgtqmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDoyNTowMlrODgtqmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjI5MjA5OnYy", "diffSide": "RIGHT", "path": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDoyNTowMlrOFrERlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo0MjoyNFrOFrE8jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwMzEyNg==", "bodyText": "We need to explain hard code with empty string", "url": "https://github.com/apache/shardingsphere/pull/4353#discussion_r380703126", "createdAt": "2020-02-18T14:25:02Z", "author": {"login": "terrymanu"}, "path": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "diffHunk": "@@ -59,11 +55,9 @@ public MySQLComStmtPrepareExecutor(final MySQLComStmtPreparePacket packet, final\n         SQLStatement sqlStatement = logicSchema.getParseEngine().parse(packet.getSql(), true);\n         int parametersCount = sqlStatement.getParametersCount();\n         result.add(new MySQLComStmtPrepareOKPacket(++currentSequenceId, PREPARED_STATEMENT_REGISTRY.register(packet.getSql(), parametersCount), getNumColumns(), parametersCount, 0));\n-        TablesContext tablesContext = new TablesContext(sqlStatement);\n         for (int i = 0; i < parametersCount; i++) {\n             // TODO add column name\n-            result.add(new MySQLColumnDefinition41Packet(++currentSequenceId, schemaName,\n-                    tablesContext.isSingleTable() ? tablesContext.getSingleTableName() : \"\", \"\", \"\", \"\", 100, MySQLColumnType.MYSQL_TYPE_VARCHAR, 0));\n+            result.add(new MySQLColumnDefinition41Packet(++currentSequenceId, \"\", \"\", \"\", \"?\", \"\", 0, MySQLColumnType.MYSQL_TYPE_VAR_STRING, 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c36dc9792ccafc0167cdfd17cc7f8b1f13274883"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxNDEyNw==", "bodyText": "OK. I'll add this in the reference issue.", "url": "https://github.com/apache/shardingsphere/pull/4353#discussion_r380714127", "createdAt": "2020-02-18T14:42:24Z", "author": {"login": "tuohai666"}, "path": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "diffHunk": "@@ -59,11 +55,9 @@ public MySQLComStmtPrepareExecutor(final MySQLComStmtPreparePacket packet, final\n         SQLStatement sqlStatement = logicSchema.getParseEngine().parse(packet.getSql(), true);\n         int parametersCount = sqlStatement.getParametersCount();\n         result.add(new MySQLComStmtPrepareOKPacket(++currentSequenceId, PREPARED_STATEMENT_REGISTRY.register(packet.getSql(), parametersCount), getNumColumns(), parametersCount, 0));\n-        TablesContext tablesContext = new TablesContext(sqlStatement);\n         for (int i = 0; i < parametersCount; i++) {\n             // TODO add column name\n-            result.add(new MySQLColumnDefinition41Packet(++currentSequenceId, schemaName,\n-                    tablesContext.isSingleTable() ? tablesContext.getSingleTableName() : \"\", \"\", \"\", \"\", 100, MySQLColumnType.MYSQL_TYPE_VARCHAR, 0));\n+            result.add(new MySQLColumnDefinition41Packet(++currentSequenceId, \"\", \"\", \"\", \"?\", \"\", 0, MySQLColumnType.MYSQL_TYPE_VAR_STRING, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwMzEyNg=="}, "originalCommit": {"oid": "c36dc9792ccafc0167cdfd17cc7f8b1f13274883"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 930, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}