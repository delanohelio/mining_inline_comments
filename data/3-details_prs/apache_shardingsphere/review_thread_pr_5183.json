{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTQ2NzUw", "number": 5183, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoxMjoyMlrODxo2vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoxMjoyMlrODxo2vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzc2MTg4OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoxMjoyMlrOGFN73Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyNTozN1rOGFOgGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNDM4MQ==", "bodyText": "We prefer use null == xxx", "url": "https://github.com/apache/shardingsphere/pull/5183#discussion_r408124381", "createdAt": "2020-04-14T13:12:22Z", "author": {"login": "terrymanu"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -47,8 +47,8 @@ public YamlRuleSchemaMetaData swap(final RuleSchemaMetaData metaData) {\n     @Override\r\n     public RuleSchemaMetaData swap(final YamlRuleSchemaMetaData yaml) {\r\n         SchemaMetaData configured = convertSchema(yaml.getConfiguredSchemaMetaData());\r\n-        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r\n-                .collect(Collectors.toMap(entry -> entry.getKey(), entry -> convertSchema(entry.getValue())));\r\n+        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap() == null ? Collections.emptyMap() : yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c61c1938c6f6d2c361d8a92000430549c2f873e7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMzY1Nw==", "bodyText": "ok\uff0cfix it.", "url": "https://github.com/apache/shardingsphere/pull/5183#discussion_r408133657", "createdAt": "2020-04-14T13:25:37Z", "author": {"login": "yu199195"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/main/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapper.java", "diffHunk": "@@ -47,8 +47,8 @@ public YamlRuleSchemaMetaData swap(final RuleSchemaMetaData metaData) {\n     @Override\r\n     public RuleSchemaMetaData swap(final YamlRuleSchemaMetaData yaml) {\r\n         SchemaMetaData configured = convertSchema(yaml.getConfiguredSchemaMetaData());\r\n-        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r\n-                .collect(Collectors.toMap(entry -> entry.getKey(), entry -> convertSchema(entry.getValue())));\r\n+        Map<String, SchemaMetaData> unconfigured = yaml.getUnconfiguredSchemaMetaDataMap() == null ? Collections.emptyMap() : yaml.getUnconfiguredSchemaMetaDataMap().entrySet().stream()\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEyNDM4MQ=="}, "originalCommit": {"oid": "c61c1938c6f6d2c361d8a92000430549c2f873e7"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1085, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}