{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzY0Nzkw", "number": 8740, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMjowNjo0NVrOFJFexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMjowNjo0NVrOFJFexA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MDcxMzAwOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/jaxb/cases/domain/segment/impl/table/ExpectedJoinTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMjowNjo0NVrOILWzhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMjoyMDozN1rOILW60g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3ODg4NQ==", "bodyText": "@lwtdev Maybe it is better to rename columns to using-columns.", "url": "https://github.com/apache/shardingsphere/pull/8740#discussion_r548778885", "createdAt": "2020-12-25T02:06:45Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/jaxb/cases/domain/segment/impl/table/ExpectedJoinTable.java", "diffHunk": "@@ -20,23 +20,29 @@\n import lombok.Getter;\n import lombok.Setter;\n import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.AbstractExpectedDelimiterSQLSegment;\n-import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.ExpectedJoinSpecification;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.column.ExpectedColumn;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.expr.ExpectedExpression;\n \n import javax.xml.bind.annotation.XmlElement;\n+import java.util.LinkedList;\n+import java.util.List;\n \n /**\n  * Expected JoinTable.\n  */\n @Getter\n @Setter\n public final class ExpectedJoinTable extends AbstractExpectedDelimiterSQLSegment {\n-    \n+\n     @XmlElement(name = \"left\")\n     private ExpectedTable left;\n \n     @XmlElement(name = \"right\")\n     private ExpectedTable right;\n-    \n-    @XmlElement\n-    private ExpectedJoinSpecification joinSpecification;\n+\n+    @XmlElement(name = \"condition\")\n+    private ExpectedExpression condition;\n+\n+    @XmlElement(name = \"columns\")\n+    private final List<ExpectedColumn> columns = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84a78c8af147db2d1d3c04a6053663000660acd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc4MDIwOA==", "bodyText": "@jingshanglu OK, I will modify it. What about condition, do we should rename it to on-condition?", "url": "https://github.com/apache/shardingsphere/pull/8740#discussion_r548780208", "createdAt": "2020-12-25T02:16:31Z", "author": {"login": "lwtdev"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/jaxb/cases/domain/segment/impl/table/ExpectedJoinTable.java", "diffHunk": "@@ -20,23 +20,29 @@\n import lombok.Getter;\n import lombok.Setter;\n import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.AbstractExpectedDelimiterSQLSegment;\n-import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.ExpectedJoinSpecification;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.column.ExpectedColumn;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.expr.ExpectedExpression;\n \n import javax.xml.bind.annotation.XmlElement;\n+import java.util.LinkedList;\n+import java.util.List;\n \n /**\n  * Expected JoinTable.\n  */\n @Getter\n @Setter\n public final class ExpectedJoinTable extends AbstractExpectedDelimiterSQLSegment {\n-    \n+\n     @XmlElement(name = \"left\")\n     private ExpectedTable left;\n \n     @XmlElement(name = \"right\")\n     private ExpectedTable right;\n-    \n-    @XmlElement\n-    private ExpectedJoinSpecification joinSpecification;\n+\n+    @XmlElement(name = \"condition\")\n+    private ExpectedExpression condition;\n+\n+    @XmlElement(name = \"columns\")\n+    private final List<ExpectedColumn> columns = new LinkedList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3ODg4NQ=="}, "originalCommit": {"oid": "d84a78c8af147db2d1d3c04a6053663000660acd"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc4MDc1NA==", "bodyText": "@lwtdev I think both will do.", "url": "https://github.com/apache/shardingsphere/pull/8740#discussion_r548780754", "createdAt": "2020-12-25T02:20:37Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/jaxb/cases/domain/segment/impl/table/ExpectedJoinTable.java", "diffHunk": "@@ -20,23 +20,29 @@\n import lombok.Getter;\n import lombok.Setter;\n import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.AbstractExpectedDelimiterSQLSegment;\n-import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.ExpectedJoinSpecification;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.column.ExpectedColumn;\n+import org.apache.shardingsphere.test.sql.parser.parameterized.jaxb.cases.domain.segment.impl.expr.ExpectedExpression;\n \n import javax.xml.bind.annotation.XmlElement;\n+import java.util.LinkedList;\n+import java.util.List;\n \n /**\n  * Expected JoinTable.\n  */\n @Getter\n @Setter\n public final class ExpectedJoinTable extends AbstractExpectedDelimiterSQLSegment {\n-    \n+\n     @XmlElement(name = \"left\")\n     private ExpectedTable left;\n \n     @XmlElement(name = \"right\")\n     private ExpectedTable right;\n-    \n-    @XmlElement\n-    private ExpectedJoinSpecification joinSpecification;\n+\n+    @XmlElement(name = \"condition\")\n+    private ExpectedExpression condition;\n+\n+    @XmlElement(name = \"columns\")\n+    private final List<ExpectedColumn> columns = new LinkedList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3ODg4NQ=="}, "originalCommit": {"oid": "d84a78c8af147db2d1d3c04a6053663000660acd"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 505, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}