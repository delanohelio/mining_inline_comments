{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDk0OTI5", "number": 4924, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1Nzo0NlrODrFZaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1Nzo0NlrODrFZaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTAzNzg3OnYy", "diffSide": "RIGHT", "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdPropertiesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1Nzo0NlrOF7OF2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1Nzo0NlrOF7OF2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTE3Ng==", "bodyText": "let a blank line at tail.", "url": "https://github.com/apache/shardingsphere/pull/4924#discussion_r397641176", "createdAt": "2020-03-25T06:57:46Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-center/sharding-orchestration-center-etcd/src/test/java/org/apache/shardingsphere/orchestration/center/instance/EtcdPropertiesTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.center.instance;\n+\n+import org.junit.Test;\n+import java.util.Properties;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public final class EtcdPropertiesTest {\n+\n+    @Test\n+    public void assertGetValue() {\n+        Properties props = new Properties();\n+        props.setProperty(EtcdPropertyKey.TIME_TO_LIVE_SECONDS.getKey(), \"50\");\n+        EtcdProperties actual = new EtcdProperties(props);\n+        assertThat(actual.getValue(EtcdPropertyKey.TIME_TO_LIVE_SECONDS), is(50L));\n+    }\n+\n+    @Test\n+    public void assertGetDefaultValue() {\n+        EtcdProperties actual = new EtcdProperties(new Properties());\n+        assertThat(actual.getValue(EtcdPropertyKey.TIME_TO_LIVE_SECONDS), is(30L));\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "204201ac358c86997a16ba5eb7739163f2defe67"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1165, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}