{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMDc5MjE2", "number": 5179, "title": "fix support for test of some pagination", "bodyText": "ref #4887.\nChanges proposed in this pull request:\n\nfix support for test of some pagination", "createdAt": "2020-04-14T09:44:07Z", "url": "https://github.com/apache/shardingsphere/pull/5179", "merged": true, "mergeCommit": {"oid": "777c9e5499c371c0a3dcc07850427fcf1a2b8840"}, "closed": true, "closedAt": "2020-04-16T07:37:25Z", "author": {"login": "jingshanglu"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXgQQ4AH2gAyNDAzMDc5MjE2OmE4ZTAyMDYyNDBkYmIwZTRhOWFjOGQ4YWI3OGY5M2FhZGZiMGMyZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYHqmkAFqTM5NDM3MDM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a8e0206240dbb0e4a9ac8d8ab78f93aadfb0c2e5", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/a8e0206240dbb0e4a9ac8d8ab78f93aadfb0c2e5", "committedDate": "2020-04-14T09:41:04Z", "message": "add support for test of some pagination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f24b007733be9bb73d7fbeb7e184d07871fb822", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/8f24b007733be9bb73d7fbeb7e184d07871fb822", "committedDate": "2020-04-14T09:45:00Z", "message": "format code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDI0ODAz", "url": "https://github.com/apache/shardingsphere/pull/5179#pullrequestreview-393424803", "createdAt": "2020-04-15T02:57:51Z", "commit": {"oid": "8f24b007733be9bb73d7fbeb7e184d07871fb822"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMjo1Nzo1MVrOGFoC2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMjo1Nzo1MVrOGFoC2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU1MjE1NA==", "bodyText": "Why do you need SubqueryTableSegment ? Is the TableSegment  not enough?", "url": "https://github.com/apache/shardingsphere/pull/5179#discussion_r408552154", "createdAt": "2020-04-15T02:57:51Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/TableFactorSegment.java", "diffHunk": "@@ -37,6 +38,8 @@\n     \n     private TableSegment table;\n     \n+    private SubqueryTableSegment subqueryTableSegment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f24b007733be9bb73d7fbeb7e184d07871fb822"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1", "author": {"user": {"login": "jingshanglu", "name": "JingShang Lu"}}, "url": "https://github.com/apache/shardingsphere/commit/a55369aa6d268c798e3cb5bf00ce705da97d46b1", "committedDate": "2020-04-15T04:33:13Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNjQ3ODk1", "url": "https://github.com/apache/shardingsphere/pull/5179#pullrequestreview-393647895", "createdAt": "2020-04-15T10:27:10Z", "commit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDoyNzoxMVrOGFzgCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDozMDozOVrOGFznHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODczOTg1MQ==", "bodyText": "Is there any difference?", "url": "https://github.com/apache/shardingsphere/pull/5179#discussion_r408739851", "createdAt": "2020-04-15T10:27:11Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/segment/table/TableFactorAssert.java", "diffHunk": "@@ -43,8 +43,10 @@\n      * @param expected expected TableFactor\n      */\n     public static void assertIs(final SQLCaseAssertContext assertContext, final TableFactorSegment actual, final ExpectedTableFactor expected) {\n-        if (null != actual.getTable() && actual.getTable() instanceof SimpleTableSegment) {\n-            TableAssert.assertIs(assertContext, (SimpleTableSegment) actual.getTable(), expected.getTable());\n+        if (null != actual.getTable()) {\n+            if (actual.getTable() instanceof SimpleTableSegment) {\n+                TableAssert.assertIs(assertContext, (SimpleTableSegment) actual.getTable(), expected.getTable());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0MDkyNw==", "bodyText": "Why do you need to remove them?", "url": "https://github.com/apache/shardingsphere/pull/5179#discussion_r408740927", "createdAt": "2020-04-15T10:29:13Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/statement/dml/impl/SelectStatementAssert.java", "diffHunk": "@@ -70,10 +68,6 @@ private static void assertProjection(final SQLCaseAssertContext assertContext, f\n         ProjectionAssert.assertIs(assertContext, actual.getProjections(), expected.getProjections());\n     }\n     \n-    private static void assertTable(final SQLCaseAssertContext assertContext, final SelectStatement actual, final SelectStatementTestCase expected) {\n-        TableAssert.assertIs(assertContext, actual.getSimpleTableSegments(), new LinkedList<>(expected.getTables().getSimpleTables()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc0MTY2Mg==", "bodyText": "If you delete those assertions, where do you test the group by parsed results?", "url": "https://github.com/apache/shardingsphere/pull/5179#discussion_r408741662", "createdAt": "2020-04-15T10:30:39Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/dml/select-pagination-group-by-order-by.xml", "diffHunk": "@@ -377,93 +377,62 @@\n         <row-count value=\"3\" parameter-index=\"0\" />\n     </select>\n \n-    <select sql-case-id=\"select_pagination_with_row_number_and_group_by_and_order_by\" parameters=\"1, 2, 9, 10, 5, 3\">\n+    <select sql-case-id=\"select_pagination_with_row_number_and_group_by_and_order_by\" parameters=\"1, 2, 9, 7, 5, 3\">\n         <tables>\n             <simple-table name=\"t_order\" alias=\"order0_\" start-index=\"146\" stop-index=\"152\" />\n             <simple-table name=\"t_order_item\" alias=\"i\" start-index=\"167\" stop-index=\"178\" />\n         </tables>\n-        <projections start-index=\"58\" stop-index=\"139\">\n-            <column-projection name=\"order_id\" alias=\"order_id\" start-index=\"58\" stop-index=\"73\">\n-                <owner name=\"order0_\" start-index=\"58\" stop-index=\"64\" />\n-            </column-projection>\n-            <column-projection name=\"status\" alias=\"status\" start-index=\"88\" stop-index=\"101\">\n-                <owner name=\"order0_\" start-index=\"88\" stop-index=\"94\" />\n-            </column-projection>\n-            <column-projection name=\"user_id\" alias=\"user_id\" start-index=\"114\" stop-index=\"128\">\n-                <owner name=\"order0_\" start-index=\"114\" stop-index=\"120\" />\n-            </column-projection>\n+        <projections start-index=\"7\" stop-index=\"7\">\n+            <shorthand-projection  start-index=\"7\" stop-index=\"7\" />\n         </projections>\n-        <where start-index=\"386\" stop-index=\"404\" literal-start-index=\"387\" literal-stop-index=\"405\">\n+        <table-reference>\n+            <table-factor>\n+                <subqueryTable start-index=\"14\" stop-index=\"383\" alias=\"t\" />\n+            </table-factor>\n+        </table-reference>\n+        <where start-index=\"386\" stop-index=\"404\">\n             <and-predicate>\n-                <!-- FIXME cannot parse subquery's predicate -->\n-                <predicate start-index=\"392\" stop-index=\"404\" literal-start-index=\"393\" literal-stop-index=\"405\">\n-                    <column-left-value name=\"rownum_\" start-index=\"392\" stop-index=\"400\" literal-start-index=\"393\" literal-stop-index=\"401\">\n-                        <owner name=\"t\" start-index=\"392\" stop-index=\"392\" literal-start-index=\"393\" literal-stop-index=\"393\" />\n+                <predicate start-index=\"392\" stop-index=\"404\">\n+                    <column-left-value start-index=\"392\" stop-index=\"400\" name=\"rownum_\">\n+                        <owner start-index=\"392\" stop-index=\"392\" name=\"t\"/>\n                     </column-left-value>\n                     <operator type=\"&gt;\" />\n                     <compare-right-value>\n-                        <parameter-marker-expression value=\"5\" />\n-                        <literal-expression value=\"3\" />\n+                        <literal-expression start-index=\"404\" stop-index=\"404\" value=\"3\" />\n+                        <parameter-marker-expression start-index=\"404\" stop-index=\"404\" value=\"5\"/>\n                     </compare-right-value>\n                 </predicate>\n             </and-predicate>\n         </where>\n-        <group-by>\n-            <column-item name=\"item_id\">\n-                <owner name=\"i\" start-index=\"325\" stop-index=\"325\" literal-start-index=\"326\" literal-stop-index=\"326\" />\n-            </column-item>\n-        </group-by>\n-        <order-by>\n-            <column-item name=\"item_id\" order-direction=\"DESC\">\n-                <owner name=\"i\" start-index=\"344\" stop-index=\"344\" literal-start-index=\"345\" literal-stop-index=\"345\" />\n-            </column-item>\n-        </order-by>\n-        <offset value=\"3\" parameter-index=\"5\" />\n-        <row-count value=\"5\" parameter-index=\"4\" />\n     </select>\n \n-    <select sql-case-id=\"select_pagination_with_row_number_and_diff_group_by_and_order_by\" parameters=\"1, 2, 9, 10, 5, 3\">\n+    <select sql-case-id=\"select_pagination_with_row_number_and_diff_group_by_and_order_by\" parameters=\"1, 2, 9, 7, 5, 3\">\n         <tables>\n             <simple-table name=\"t_order\" alias=\"order0_\" start-index=\"146\" stop-index=\"152\" />\n             <simple-table name=\"t_order_item\" alias=\"i\" start-index=\"167\" stop-index=\"178\" />\n         </tables>\n-        <projections start-index=\"58\" stop-index=\"139\">\n-            <column-projection name=\"order_id\" alias=\"order_id\" start-index=\"58\" stop-index=\"73\">\n-                <owner name=\"order0_\" start-index=\"58\" stop-index=\"64\" />\n-            </column-projection>\n-            <column-projection name=\"status\" alias=\"status\" start-index=\"88\" stop-index=\"101\">\n-                <owner name=\"order0_\" start-index=\"88\" stop-index=\"94\" />\n-            </column-projection>\n-            <column-projection name=\"user_id\" alias=\"user_id\" start-index=\"114\" stop-index=\"128\">\n-                <owner name=\"order0_\" start-index=\"114\" stop-index=\"120\" />\n-            </column-projection>\n+        <table-reference>\n+            <table-factor>\n+                <subqueryTable start-index=\"14\" stop-index=\"383\" alias=\"t\" />\n+            </table-factor>\n+        </table-reference>\n+        <projections start-index=\"7\" stop-index=\"7\">\n+            <shorthand-projection  start-index=\"7\" stop-index=\"7\" />\n         </projections>\n-        <where start-index=\"386\" stop-index=\"404\" literal-start-index=\"387\" literal-stop-index=\"405\">\n+        <where start-index=\"386\" stop-index=\"404\">\n             <and-predicate>\n-                <!-- FIXME cannot parse subquery's predicate -->\n-                <predicate start-index=\"392\" stop-index=\"404\" literal-start-index=\"393\" literal-stop-index=\"405\">\n-                    <column-left-value name=\"rownum_\" start-index=\"392\" stop-index=\"400\" literal-start-index=\"393\" literal-stop-index=\"401\">\n-                        <owner name=\"t\" start-index=\"392\" stop-index=\"392\" literal-start-index=\"393\" literal-stop-index=\"393\" />\n+                <predicate start-index=\"392\" stop-index=\"404\">\n+                    <column-left-value start-index=\"392\" stop-index=\"400\" name=\"rownum_\">\n+                        <owner start-index=\"392\" stop-index=\"392\" name=\"t\"/>\n                     </column-left-value>\n                     <operator type=\"&gt;\" />\n                     <compare-right-value>\n-                        <parameter-marker-expression value=\"5\" />\n-                        <literal-expression value=\"3\" />\n+                        <literal-expression start-index=\"404\" stop-index=\"404\" value=\"3\" />\n+                        <parameter-marker-expression start-index=\"404\" stop-index=\"404\" value=\"5\"/>\n                     </compare-right-value>\n                 </predicate>\n             </and-predicate>\n+\n         </where>\n-        <group-by>\n-            <column-item name=\"user_id\">\n-                <owner name=\"i\" start-index=\"325\" stop-index=\"325\" literal-start-index=\"326\" literal-stop-index=\"326\" />\n-            </column-item>\n-        </group-by>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MzcwMzY0", "url": "https://github.com/apache/shardingsphere/pull/5179#pullrequestreview-394370364", "createdAt": "2020-04-16T07:36:08Z", "commit": {"oid": "a55369aa6d268c798e3cb5bf00ce705da97d46b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3721, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}