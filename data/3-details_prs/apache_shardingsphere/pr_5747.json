{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzM4NTk3", "number": 5747, "title": "Supported mysql BIT data type.", "bodyText": "Fixes part of #4795.\nSupported mysql BIT data type.", "createdAt": "2020-05-22T06:21:13Z", "url": "https://github.com/apache/shardingsphere/pull/5747", "merged": true, "mergeCommit": {"oid": "8ffb18e9579e2650d418aad0a67ac0a8c9cb009e"}, "closed": true, "closedAt": "2020-05-22T08:42:11Z", "author": {"login": "Lucas-307"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjsDtDAH2gAyNDIxNzM4NTk3OmUxYTAzZTFhMDlkZDJiNzMxNjcwNWE5NTZiNzU3MTg4MzEyOTU3OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjuLUvAFqTQxNjc0NTMzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1a03e1a09dd2b7316705a956b75718831295792", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/e1a03e1a09dd2b7316705a956b75718831295792", "committedDate": "2020-05-22T06:13:18Z", "message": "Support mysql BIT data type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb", "committedDate": "2020-05-22T06:17:51Z", "message": "Support mysql BIT data type."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2Njc0OTg3", "url": "https://github.com/apache/shardingsphere/pull/5747#pullrequestreview-416674987", "createdAt": "2020-05-22T06:25:18Z", "commit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNjoyNToxOVrOGZMAUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNjoyNzo1NVrOGZMDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA2NDI3Mg==", "bodyText": "It is better to add final if the class is not for extended", "url": "https://github.com/apache/shardingsphere/pull/5747#discussion_r429064272", "createdAt": "2020-05-22T06:25:19Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/integer/MySQLBitBinlogProtocolValue.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.value.integer;\n+\n+import org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.MySQLBinlogColumnDef;\n+import org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.value.MySQLBinlogProtocolValue;\n+import org.apache.shardingsphere.db.protocol.mysql.payload.MySQLPacketPayload;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * BIT type value of MySQL binlog protocol.\n+ */\n+public class MySQLBitBinlogProtocolValue implements MySQLBinlogProtocolValue {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA2NDczOA==", "bodyText": "Can we consider about reuse with MySQLNullBitmap?", "url": "https://github.com/apache/shardingsphere/pull/5747#discussion_r429064738", "createdAt": "2020-05-22T06:26:45Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/integer/MySQLBitBinlogProtocolValue.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.value.integer;\n+\n+import org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.MySQLBinlogColumnDef;\n+import org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.value.MySQLBinlogProtocolValue;\n+import org.apache.shardingsphere.db.protocol.mysql.payload.MySQLPacketPayload;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * BIT type value of MySQL binlog protocol.\n+ */\n+public class MySQLBitBinlogProtocolValue implements MySQLBinlogProtocolValue {\n+    \n+    @Override\n+    public Serializable read(final MySQLBinlogColumnDef columnDef, final MySQLPacketPayload payload) {\n+        return payload.readLong(getLength(columnDef.getColumnMeta()));\n+    }\n+    \n+    private int getLength(final int meta) {\n+        int nbits = ((meta >> 8) * 8) + (meta & 0xff);\n+        return (nbits + 7) / 8;\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA2NDkzNw==", "bodyText": "Please leave a blank line between java doc tile and @param", "url": "https://github.com/apache/shardingsphere/pull/5747#discussion_r429064937", "createdAt": "2020-05-22T06:27:25Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/payload/MySQLPacketPayload.java", "diffHunk": "@@ -222,6 +222,19 @@ public void writeIntLenenc(final long value) {\n         byteBuf.writeLongLE(value);\n     }\n     \n+    /**\n+     * Read fixed length long from byte buffers.\n+     * @param length length read from byte buffers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA2NTExMw==", "bodyText": "It is better to add final if the class is not for extended", "url": "https://github.com/apache/shardingsphere/pull/5747#discussion_r429065113", "createdAt": "2020-05-22T06:27:55Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/test/java/org/apache/shardingsphere/db/protocol/mysql/packet/binlog/row/column/value/integer/MySQLBitBinlogProtocolValueTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.value.integer;\n+\n+import org.apache.shardingsphere.db.protocol.mysql.packet.binlog.row.column.MySQLBinlogColumnDef;\n+import org.apache.shardingsphere.db.protocol.mysql.payload.MySQLPacketPayload;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class MySQLBitBinlogProtocolValueTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bab1280d5cd0582d9d84f6b85f6e5ab78d65fb"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8440fa8d8a168421dc2b57fee39513b33bb5d227", "author": {"user": null}, "url": "https://github.com/apache/shardingsphere/commit/8440fa8d8a168421dc2b57fee39513b33bb5d227", "committedDate": "2020-05-22T08:15:41Z", "message": "add final keyword at class and update doc format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzQyOTA3", "url": "https://github.com/apache/shardingsphere/pull/5747#pullrequestreview-416742907", "createdAt": "2020-05-22T08:37:22Z", "commit": {"oid": "8440fa8d8a168421dc2b57fee39513b33bb5d227"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzQ1MzM3", "url": "https://github.com/apache/shardingsphere/pull/5747#pullrequestreview-416745337", "createdAt": "2020-05-22T08:41:26Z", "commit": {"oid": "8440fa8d8a168421dc2b57fee39513b33bb5d227"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3588, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}