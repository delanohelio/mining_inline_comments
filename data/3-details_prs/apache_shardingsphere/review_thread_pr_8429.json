{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTMxMDY4", "number": 8429, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjo1ODoyMVrOE-7f8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzoyNDo0OFrOE-7zcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDIyMDAzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-bootstrap/src/main/java/org/apache/shardingsphere/agent/bootstrap/ShardingSphereAgent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjo1ODoyMlrOH8WQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjo1ODoyMlrOH8WQCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0MTE2Mw==", "bodyText": "remove final", "url": "https://github.com/apache/shardingsphere/pull/8429#discussion_r533041163", "createdAt": "2020-12-01T02:58:22Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-bootstrap/src/main/java/org/apache/shardingsphere/agent/bootstrap/ShardingSphereAgent.java", "diffHunk": "@@ -48,20 +48,24 @@ public static void premain(final String agentArgs, final Instrumentation instrum\n         AgentConfiguration agentConfiguration = AgentConfigurationLoader.load();\n         SingletonHolder.INSTANCE.put(agentConfiguration);\n \n-        ByteBuddy byteBuddy = new ByteBuddy().with(TypeValidation.ENABLED);\n-\n-        AgentBuilder builder = new AgentBuilder.Default()\n+        final ByteBuddy byteBuddy = new ByteBuddy().with(TypeValidation.ENABLED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2277e24973734bc01cbe2330f22f775437585341"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDI2OTkzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/plugin/PluginLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzoyNDo0OFrOH8WtVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzoyNDo0OFrOH8WtVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA0ODY2Mw==", "bodyText": "1 black", "url": "https://github.com/apache/shardingsphere/pull/8429#discussion_r533048663", "createdAt": "2020-12-01T03:24:48Z", "author": {"login": "yu199195"}, "path": "shardingsphere-agent/shardingsphere-agent-core/src/main/java/org/apache/shardingsphere/agent/core/plugin/PluginLoader.java", "diffHunk": "@@ -62,18 +180,21 @@ public boolean containsType(final TypeDescription typeDescription) {\n      * @return the plugin definition configurations.\n      */\n     public PluginAdviceDefine loadPluginAdviceDefine(final TypeDescription typeDescription) {\n-        return null;\n+        if (pluginDefineMap.containsKey(typeDescription.getTypeName())) {\n+            return pluginDefineMap.get(typeDescription.getTypeName());\n+        }\n+        throw new AdviceNotFoundException();\n     }\n \n     /**\n      * To get or create instance of the advice class. Create new one and caching when it is not exist.\n      *\n      * @param classNameOfAdvice the class name of advice\n-     * @param <T> the advice type.\n+     * @param <T>               the advice type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07de2f295f42f33fd70d4a7a0a7b58c4a2bae175"}, "originalPosition": 178}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 507, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}