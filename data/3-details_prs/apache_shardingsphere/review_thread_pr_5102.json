{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjYxNjk4", "number": 5102, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowOTo0MlrODv50Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOToxNTo0MVrODv59ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTU2OTIzOnYy", "diffSide": "RIGHT", "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowOTo0MlrOGCmF0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTowOTo0MlrOGCmF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3NDQxOQ==", "bodyText": "Please do not use verb as a variable name", "url": "https://github.com/apache/shardingsphere/pull/5102#discussion_r405374419", "createdAt": "2020-04-08T09:09:42Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "diffHunk": "@@ -146,8 +146,10 @@ private SchemaMetaData decorate(final SchemaMetaData schemaMetaData) {\n         Map<String, TableMetaData> result = new HashMap<>(schemaMetaData.getAllTableNames().size(), 1);\n         Map<BaseRule, RuleMetaDataDecorator> decorators = OrderedSPIRegistry.getRegisteredServices(rules, RuleMetaDataDecorator.class);\n         for (String each : schemaMetaData.getAllTableNames()) {\n+            TableMetaData decorate = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be97fdfabc842ce54cba08c083b6f57d7f59025"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTU5MzI2OnYy", "diffSide": "RIGHT", "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOToxNTo0MVrOGCmVIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDoxNDo0MVrOGCoizQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3ODMzNg==", "bodyText": "Use result to get meta data is better than use null", "url": "https://github.com/apache/shardingsphere/pull/5102#discussion_r405378336", "createdAt": "2020-04-08T09:15:41Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "diffHunk": "@@ -146,8 +146,10 @@ private SchemaMetaData decorate(final SchemaMetaData schemaMetaData) {\n         Map<String, TableMetaData> result = new HashMap<>(schemaMetaData.getAllTableNames().size(), 1);\n         Map<BaseRule, RuleMetaDataDecorator> decorators = OrderedSPIRegistry.getRegisteredServices(rules, RuleMetaDataDecorator.class);\n         for (String each : schemaMetaData.getAllTableNames()) {\n+            TableMetaData decorate = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5be97fdfabc842ce54cba08c083b6f57d7f59025"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNDYwNQ==", "bodyText": "fix it", "url": "https://github.com/apache/shardingsphere/pull/5102#discussion_r405414605", "createdAt": "2020-04-08T10:14:41Z", "author": {"login": "yu199195"}, "path": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaDataLoader.java", "diffHunk": "@@ -146,8 +146,10 @@ private SchemaMetaData decorate(final SchemaMetaData schemaMetaData) {\n         Map<String, TableMetaData> result = new HashMap<>(schemaMetaData.getAllTableNames().size(), 1);\n         Map<BaseRule, RuleMetaDataDecorator> decorators = OrderedSPIRegistry.getRegisteredServices(rules, RuleMetaDataDecorator.class);\n         for (String each : schemaMetaData.getAllTableNames()) {\n+            TableMetaData decorate = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM3ODMzNg=="}, "originalCommit": {"oid": "5be97fdfabc842ce54cba08c083b6f57d7f59025"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1061, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}