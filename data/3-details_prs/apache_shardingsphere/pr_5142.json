{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODU5NDgy", "number": 5142, "title": "Optimize MetaData Center#MetaDataCenter-phase-3-2", "bodyText": "For #5128 .\nChanges proposed in this pull request:\n\nAdd metadata center tests", "createdAt": "2020-04-10T10:44:38Z", "url": "https://github.com/apache/shardingsphere/pull/5142", "merged": true, "mergeCommit": {"oid": "ce1aabd82d052406912f3a06215c96447314a2ba"}, "closed": true, "closedAt": "2020-04-11T12:37:12Z", "author": {"login": "menghaoranss"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWOpeFgH2gAyNDAxODU5NDgyOjc4NmZjN2VkN2IyMmVhOGZmYTVjMzk1NTFjYThhOGE5ZDk1ZGFmZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWk-PfgFqTM5MTc2Mjk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0", "author": {"user": {"login": "menghaoranss", "name": "Haoran Meng"}}, "url": "https://github.com/apache/shardingsphere/commit/786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0", "committedDate": "2020-04-10T10:36:23Z", "message": "add unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzg0Mjc1", "url": "https://github.com/apache/shardingsphere/pull/5142#pullrequestreview-391384275", "createdAt": "2020-04-10T10:50:47Z", "commit": {"oid": "786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDo1MDo0OFrOGD3cTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDo1MDo0OFrOGD3cTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwNzI3OA==", "bodyText": "this method is moving to other package.", "url": "https://github.com/apache/shardingsphere/pull/5142#discussion_r406707278", "createdAt": "2020-04-10T10:50:48Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/MetaDataCenterTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.metadatacenter;\n+\n+import org.apache.shardingsphere.orchestration.center.CenterRepository;\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.yaml.RuleSchemaMetaDataYamlSwapper;\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.yaml.YamlRuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public final class MetaDataCenterTest {\n+    \n+    @Mock\n+    private CenterRepository repository;\n+    \n+    private MetaDataCenter metaDataCenter;\n+    \n+    @Before\n+    public void setUp() {\n+        metaDataCenter = new MetaDataCenter(\"test\", repository);\n+    }\n+    \n+    @Test\n+    public void assertPersistMetaDataCenterNode() {\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class));\n+        metaDataCenter.persistMetaDataCenterNode(\"schema\", ruleSchemaMetaData);\n+        verify(repository).persist(eq(\"/test/metadata/schema\"), anyString());\n+    }\n+    \n+    @Test\n+    public void assertLoadRuleSchemaMetaData() {\n+        when(repository.get(\"/test/metadata/schema\")).thenReturn(MetaDataTest.META_DATA);\n+        RuleSchemaMetaData ruleSchemaMetaData = metaDataCenter.loadRuleSchemaMetaData(\"schema\");\n+        verify(repository).get(eq(\"/test/metadata/schema\"));\n+        assertNotNull(ruleSchemaMetaData);\n+        assertNotNull(ruleSchemaMetaData.getConfiguredSchemaMetaData());\n+        assertNotNull(ruleSchemaMetaData.getUnconfiguredSchemaMetaDataMap());\n+    }\n+    \n+    @Test\n+    public void assertCreateMetaDataChangeListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786fc7ed7b22ea8ffa5c39551ca8a8a9d95daff0"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86d72a8595be3a0c247b2047112d3a0d5f25ced8", "author": {"user": {"login": "menghaoranss", "name": "Haoran Meng"}}, "url": "https://github.com/apache/shardingsphere/commit/86d72a8595be3a0c247b2047112d3a0d5f25ced8", "committedDate": "2020-04-10T11:03:01Z", "message": "Merge remote-tracking branch 'origin/master' into issue5128-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "author": {"user": {"login": "menghaoranss", "name": "Haoran Meng"}}, "url": "https://github.com/apache/shardingsphere/commit/d5107154ffcf30ce1e1000999b5af6aeb2efa85f", "committedDate": "2020-04-10T11:14:17Z", "message": "fix merge errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDA4OTA2", "url": "https://github.com/apache/shardingsphere/pull/5142#pullrequestreview-391408906", "createdAt": "2020-04-10T12:06:38Z", "commit": {"oid": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjowNjozOFrOGD4w2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjowNjozOFrOGD4w2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyODkyMA==", "bodyText": "add more assert to check inner matadata.", "url": "https://github.com/apache/shardingsphere/pull/5142#discussion_r406728920", "createdAt": "2020-04-10T12:06:38Z", "author": {"login": "kimmking"}, "path": "sharding-orchestration/sharding-orchestration-core/sharding-orchestration-core-metadatacenter/src/test/java/org/apache/shardingsphere/orchestration/core/metadatacenter/yaml/RuleSchemaMetaDataYamlSwapperTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.orchestration.core.metadatacenter.yaml;\n+\n+import org.apache.shardingsphere.orchestration.core.metadatacenter.MetaDataTest;\n+import org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaData;\n+import org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+public final class RuleSchemaMetaDataYamlSwapperTest {\n+    \n+    @Test\n+    public void assertSwapToYamlRuleSchemaMetaData() {\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class));\n+        YamlRuleSchemaMetaData yamlRuleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(ruleSchemaMetaData);\n+        assertNotNull(yamlRuleSchemaMetaData);\n+        assertNotNull(yamlRuleSchemaMetaData.getConfiguredSchemaMetaData());\n+    }\n+    \n+    @Test\n+    public void assertSwapToRuleSchemaMetaData() {\n+        YamlRuleSchemaMetaData yamlRuleSchemaMetaData = YamlEngine.unmarshal(MetaDataTest.META_DATA, YamlRuleSchemaMetaData.class);\n+        RuleSchemaMetaData ruleSchemaMetaData = new RuleSchemaMetaDataYamlSwapper().swap(yamlRuleSchemaMetaData);\n+        assertNotNull(ruleSchemaMetaData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5107154ffcf30ce1e1000999b5af6aeb2efa85f"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a54429b9003db6bb21d3e4c617293cb4ffc3489", "author": {"user": {"login": "menghaoranss", "name": "Haoran Meng"}}, "url": "https://github.com/apache/shardingsphere/commit/3a54429b9003db6bb21d3e4c617293cb4ffc3489", "committedDate": "2020-04-11T01:15:31Z", "message": "add more assert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzYyNDI0", "url": "https://github.com/apache/shardingsphere/pull/5142#pullrequestreview-391762424", "createdAt": "2020-04-11T12:28:56Z", "commit": {"oid": "3a54429b9003db6bb21d3e4c617293cb4ffc3489"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzYyOTYy", "url": "https://github.com/apache/shardingsphere/pull/5142#pullrequestreview-391762962", "createdAt": "2020-04-11T12:36:59Z", "commit": {"oid": "3a54429b9003db6bb21d3e4c617293cb4ffc3489"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3709, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}