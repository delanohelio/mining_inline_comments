{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDI1NDUz", "number": 5085, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTowM1rODvcmRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTowM1rODvcmRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDc4MjE0OnYy", "diffSide": "RIGHT", "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/metadata/refresh/AlterTableStatementMetaDataRefreshStrategyTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTowM1rOGB35Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0MTo0M1rOGB7eNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNzUzNQ==", "bodyText": "Please add final if the class is not for extend", "url": "https://github.com/apache/shardingsphere/pull/5085#discussion_r404617535", "createdAt": "2020-04-07T08:09:03Z", "author": {"login": "terrymanu"}, "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/metadata/refresh/AlterTableStatementMetaDataRefreshStrategyTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.underlying.common.metadata.refresh;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.AlterTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.TableNameSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.AlterTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.value.identifier.IdentifierValue;\n+import org.apache.shardingsphere.underlying.common.metadata.refresh.impl.AlterTableStatementMetaDataRefreshStrategy;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public class AlterTableStatementMetaDataRefreshStrategyTest extends AbstractMetaDataRefreshStrategyTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c859f422f550ce64bbf2ec757128ed2e06f33fb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NjE1MQ==", "bodyText": "ok\uff0ci fix it", "url": "https://github.com/apache/shardingsphere/pull/5085#discussion_r404676151", "createdAt": "2020-04-07T09:41:43Z", "author": {"login": "yu199195"}, "path": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/metadata/refresh/AlterTableStatementMetaDataRefreshStrategyTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.underlying.common.metadata.refresh;\n+\n+import lombok.SneakyThrows;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.column.ColumnMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaData;\n+import org.apache.shardingsphere.sql.parser.binder.statement.ddl.AlterTableStatementContext;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment;\n+import org.apache.shardingsphere.sql.parser.sql.segment.generic.table.TableNameSegment;\n+import org.apache.shardingsphere.sql.parser.sql.statement.ddl.AlterTableStatement;\n+import org.apache.shardingsphere.sql.parser.sql.value.identifier.IdentifierValue;\n+import org.apache.shardingsphere.underlying.common.metadata.refresh.impl.AlterTableStatementMetaDataRefreshStrategy;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+import java.util.Optional;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+public class AlterTableStatementMetaDataRefreshStrategyTest extends AbstractMetaDataRefreshStrategyTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNzUzNQ=="}, "originalCommit": {"oid": "2c859f422f550ce64bbf2ec757128ed2e06f33fb"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1053, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}