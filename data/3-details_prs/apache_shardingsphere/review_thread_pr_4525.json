{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNzI0NTYw", "number": 4525, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDowNzozNVrODkA6-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDoyMDozMVrODkA9Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDkwNDI1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/PostgreSQLVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDowNzozNVrOFwIohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDowNzozNVrOFwIohA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzQxMg==", "bodyText": "Here is a better way,\nif (null != doublePrecisionContext) {\n    return visit(ctx.doublePrecision());\n}\n\n@Override\npublic final ASTNode visitDoublePrecision(final DoublePrecisionContext ctx) {\n    return new KeywordValue(xxxx);\n}", "url": "https://github.com/apache/shardingsphere/pull/4525#discussion_r386017412", "createdAt": "2020-02-29T10:07:35Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/PostgreSQLVisitor.java", "diffHunk": "@@ -460,6 +461,14 @@ public final ASTNode visitCaseExpression(final CaseExpressionContext ctx) {\n     \n     @Override\n     public final ASTNode visitDataTypeName(final DataTypeNameContext ctx) {\n+        DoublePrecisionContext doublePrecisionContext = ctx.doublePrecision();\n+        if (null != doublePrecisionContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88f3a0c4beff6ad87cde300959e84fac9e4994b5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDkwOTQ3OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDoyMDozMVrOFwIrQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMToyNDo0MVrOFwI4_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxODExNQ==", "bodyText": "Why does doublePrecision not exist in PostgreSQLKeyword.g4 ?", "url": "https://github.com/apache/shardingsphere/pull/4525#discussion_r386018115", "createdAt": "2020-02-29T10:20:31Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -303,7 +303,14 @@ dataType\n     ;\n \n dataTypeName\n-    : identifier\n+    : INT | SMALLINT | INTEGER | BIGINT | DECIMAL | NUMERIC | REAL | FLOAT | doublePrecision | SMALLSERIAL | SERIAL | BIGSERIAL\n+    | MONEY | VARCHAR | CHARACTER | CHAR | TEXT | NAME | BYTEA | TIMESTAMP | DATE | TIME | INTERVAL | BOOLEAN | ENUM | POINT\n+    | LINE | LSEG | BOX | PATH | POLYGON | CIRCLE | CIDR | INET | MACADDR | BIT | VARBIT | TSVECTOR | TSQUERY | UUID | XML\n+    | JSON | INTRANGE | NUMRANGE | TSRANGE | TSTZRANGE | DATERANGE | ARRAY | identifier\n+    ;\n+\n+doublePrecision", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88f3a0c4beff6ad87cde300959e84fac9e4994b5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMTYzMA==", "bodyText": "Why does doublePrecision not exist in PostgreSQLKeyword.g4 ?\n\nDOUBLE and PRECISION exist in KeyWord.g4, so I added an expression to represent double precision. Now I find that it is better to add keywords directly, I will change to keyword and remove doublePrecision.\nDOUBLEPRECISION : D O U B L E [ ]+ P R E C I S I O N ;", "url": "https://github.com/apache/shardingsphere/pull/4525#discussion_r386021630", "createdAt": "2020-02-29T11:24:41Z", "author": {"login": "yuzel"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -303,7 +303,14 @@ dataType\n     ;\n \n dataTypeName\n-    : identifier\n+    : INT | SMALLINT | INTEGER | BIGINT | DECIMAL | NUMERIC | REAL | FLOAT | doublePrecision | SMALLSERIAL | SERIAL | BIGSERIAL\n+    | MONEY | VARCHAR | CHARACTER | CHAR | TEXT | NAME | BYTEA | TIMESTAMP | DATE | TIME | INTERVAL | BOOLEAN | ENUM | POINT\n+    | LINE | LSEG | BOX | PATH | POLYGON | CIRCLE | CIDR | INET | MACADDR | BIT | VARBIT | TSVECTOR | TSQUERY | UUID | XML\n+    | JSON | INTRANGE | NUMRANGE | TSRANGE | TSTZRANGE | DATERANGE | ARRAY | identifier\n+    ;\n+\n+doublePrecision", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxODExNQ=="}, "originalCommit": {"oid": "88f3a0c4beff6ad87cde300959e84fac9e4994b5"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1199, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}