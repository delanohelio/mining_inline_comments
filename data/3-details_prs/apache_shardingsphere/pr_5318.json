{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDI5MDE3", "number": 5318, "title": "Create MODULO sharding algorithm", "bodyText": "Ref #5283\nModulo Sharding Algorithm is online.", "createdAt": "2020-04-26T06:37:39Z", "url": "https://github.com/apache/shardingsphere/pull/5318", "merged": true, "mergeCommit": {"oid": "5fa41c053c7ac7317c5f7ef76c41821b07fb9adf"}, "closed": true, "closedAt": "2020-04-26T07:34:13Z", "author": {"login": "tristaZero"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbUzKGgH2gAyNDA5MDI5MDE3OjM0NzRjNWMyNmEyMzAyNGQxNDQxOTc1NDBiN2E4YmI3YjYxZTY2ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbVoQigFqTQwMDQ3MDEzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3474c5c26a23024d144197540b7a8bb7b61e66e7", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/3474c5c26a23024d144197540b7a8bb7b61e66e7", "committedDate": "2020-04-26T06:36:01Z", "message": "Create MODULO sharding algorithm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/7dc6db6b61e06bf3ca56cd4622325031ec5cd43c", "committedDate": "2020-04-26T06:41:29Z", "message": "add java doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDY2OTc2", "url": "https://github.com/apache/shardingsphere/pull/5318#pullrequestreview-400466976", "createdAt": "2020-04-26T06:58:58Z", "commit": {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjo1ODo1OFrOGL__Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNzowODoyN1rOGMAGKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNTg5NQ==", "bodyText": "\"mod.value\" is better", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415235895", "createdAt": "2020-04-26T06:58:58Z", "author": {"login": "terrymanu"}, "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNjY1MA==", "bodyText": "Please use lombok", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415236650", "createdAt": "2020-04-26T07:03:07Z", "author": {"login": "terrymanu"}, "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";\n+    \n+    private Properties properties = new Properties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzNzY3Mw==", "bodyText": "Properties is sync one, we can not use like this way, it will cause all concurrency threads as single synchronized thread.", "url": "https://github.com/apache/shardingsphere/pull/5318#discussion_r415237673", "createdAt": "2020-04-26T07:08:27Z", "author": {"login": "terrymanu"}, "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/algorithm/sharding/inline/ModuloShardingAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.strategy.algorithm.sharding.inline;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.shardingsphere.api.sharding.standard.PreciseShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.RangeShardingValue;\n+import org.apache.shardingsphere.api.sharding.standard.StandardShardingAlgorithm;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashSet;\n+import java.util.Properties;\n+\n+/**\n+ * Modulo sharding algorithm.\n+ * \n+ * <p>Shard with `y = MOD(x)` algorithm.</p>\n+ */\n+public final class ModuloShardingAlgorithm implements StandardShardingAlgorithm<Long> {\n+    \n+    private static final String MODULO_VALUE = \"modulo.value\";\n+    \n+    private Properties properties = new Properties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc6db6b61e06bf3ca56cd4622325031ec5cd43c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03d6342f29c23fbe4b63f6c48e48f6af518a9b7f", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/03d6342f29c23fbe4b63f6c48e48f6af518a9b7f", "committedDate": "2020-04-26T07:29:09Z", "message": "USE @Setter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDY5ODQ5", "url": "https://github.com/apache/shardingsphere/pull/5318#pullrequestreview-400469849", "createdAt": "2020-04-26T07:31:01Z", "commit": {"oid": "03d6342f29c23fbe4b63f6c48e48f6af518a9b7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4e2db415a6d8f2a4b39446814a3bac0742a25c7", "author": {"user": {"login": "tristaZero", "name": "Juan Pan(Trista)"}}, "url": "https://github.com/apache/shardingsphere/commit/f4e2db415a6d8f2a4b39446814a3bac0742a25c7", "committedDate": "2020-04-26T07:33:16Z", "message": "MODIFY type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDcwMTA2", "url": "https://github.com/apache/shardingsphere/pull/5318#pullrequestreview-400470106", "createdAt": "2020-04-26T07:33:36Z", "commit": {"oid": "f4e2db415a6d8f2a4b39446814a3bac0742a25c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDcwMTMy", "url": "https://github.com/apache/shardingsphere/pull/5318#pullrequestreview-400470132", "createdAt": "2020-04-26T07:34:01Z", "commit": {"oid": "f4e2db415a6d8f2a4b39446814a3bac0742a25c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3670, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}