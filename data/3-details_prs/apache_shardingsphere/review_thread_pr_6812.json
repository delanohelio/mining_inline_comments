{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDk2NzEx", "number": 6812, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMTo0ODo0M1rOEYTsYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1NTo0N1rOEYU6_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTIzOTM3OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMTo0ODo0M1rOHAk6KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMTo0ODo0M1rOHAk6KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2Njc2MQ==", "bodyText": "Add a new line at end of file.", "url": "https://github.com/apache/shardingsphere/pull/6812#discussion_r470366761", "createdAt": "2020-08-14T01:48:43Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "diffHunk": "@@ -1639,3 +1639,114 @@ argClass\n funcArgsList\n     : funcArg (COMMA_ funcArg)*\n     ;\n+\n+nonReservedWordOrSconst\n+    : nonReservedWord\n+    | STRING_\n+    ;\n+\n+fileName\n+    : STRING_\n+    ;\n+\n+roleList\n+    : roleSpec (COMMA_ roleSpec)*\n+    ;\n+\n+setResetClause\n+    : SET setRest\n+    | variableResetStmt\n+    ;\n+\n+setRest\n+    : TRANSACTION transactionModeList\n+    | SESSION CHARACTERISTICS AS TRANSACTION transactionModeList\n+    | setRestMore\n+    ;\n+\n+transactionModeList\n+    : transactionModeItem ((COMMA_)? transactionModeItem)*\n+    ;\n+\n+transactionModeItem\n+    : ISOLATION LEVEL isoLevel\n+    | READ ONLY\n+    | READ WRITE\n+    | DEFERRABLE\n+    | NOT DEFERRABLE\n+    ;\n+\n+setRestMore\n+    : genericSet\n+    | varName FROM CURRENT\n+    | TIME ZONE zoneValue\n+    | CATALOG STRING_\n+    | SCHEMA STRING_\n+    | NAMES encoding?\n+    | ROLE nonReservedWord | STRING_\n+    | SESSION AUTHORIZATION nonReservedWord | STRING_\n+    | SESSION AUTHORIZATION DEFAULT\n+    | XML OPTION documentOrContent\n+    | TRANSACTION SNAPSHOT STRING_\n+    ;\n+\n+encoding\n+    : STRING_\n+    | DEFAULT\n+    ;\n+\n+genericSet\n+    : varName (EQ_|TO) (varList | DEFAULT)\n+    ;\n+\n+variableResetStmt\n+    : RESET resetRest\n+    ;\n+\n+resetRest\n+    : genericReset\n+    | TIME ZONE\n+    | TRANSACTION ISOLATION LEVEL\n+    | SESSION AUTHORIZATION\n+    ;\n+\n+genericReset\n+    : varName\n+    | ALL\n+    ;\n+\n+relationExprList\n+    : relationExpr (COMMA_ relationExpr)*\n+    ;\n+\n+relationExpr\n+    : qualifiedName\n+    | qualifiedName ASTERISK_\n+    | ONLY qualifiedName\n+    | ONLY LP_ qualifiedName RP_\n+    ;\n+\n+commonFuncOptItem\n+    : CALLED ON NULL INPUT\n+    | RETURNS NULL ON NULL INPUT\n+    | STRICT\n+    | IMMUTABLE\n+    | STABLE\n+    | VOLATILE\n+    | EXTERNAL SECURITY DEFINER\n+    | EXTERNAL SECURITY INVOKER\n+    | SECURITY DEFINER\n+    | SECURITY INVOKER\n+    | LEAKPROOF\n+    | NOT LEAKPROOF\n+    | COST numericOnly\n+    | ROWS numericOnly\n+    | SUPPORT anyName\n+    | functionSetResetClause\n+    | PARALLEL colId\n+    ;\n+\n+functionSetResetClause\n+    : SET setRestMore\n+    | variableResetStmt\n+    ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aea573791908819d3762bd69b93ae2496c6f4079"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTI0MzU1OnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/DDLStatement.g4", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMTo1MToyOVrOHAk8hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMTo1MToyOVrOHAk8hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2NzM2Nw==", "bodyText": "keep original format.", "url": "https://github.com/apache/shardingsphere/pull/6812#discussion_r470367367", "createdAt": "2020-08-14T01:51:29Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/DDLStatement.g4", "diffHunk": "@@ -130,8 +130,8 @@ dropDatabase\n     : DROP DATABASE (IF EXISTS)? name\n     ;\n \n-createDatabaseSpecification_\n-    :  createdbOptName (EQ_)? (signedIconst | optBooleanOrString | DEFAULT)\n+ createDatabaseSpecification_", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aea573791908819d3762bd69b93ae2496c6f4079"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ0MDYxOnYy", "diffSide": "RIGHT", "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDDLVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1NTo0N1rOHAmsWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1NTo0N1rOHAmsWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NTk5Mg==", "bodyText": "change to\n @Override\n    public ASTNode visitCreateFunction(final CreateFunctionContext ctx) {\n        return new CreateFunctionStatement();\n    }\n\napply to others.", "url": "https://github.com/apache/shardingsphere/pull/6812#discussion_r470395992", "createdAt": "2020-08-14T03:55:47Z", "author": {"login": "jingshanglu"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/postgresql/visitor/impl/PostgreSQLDDLVisitor.java", "diffHunk": "@@ -280,4 +286,19 @@ public ASTNode visitTableNamesClause(final TableNamesClauseContext ctx) {\n         result.getValue().addAll(tableSegments);\n         return result;\n     }\n+    \n+    @Override\n+    public ASTNode visitAlterFunction(final AlterFunctionContext ctx) {\n+        return new AlterFunctionStatement();\n+    }\n+    \n+    @Override\n+    public ASTNode visitAlterProcedure(final AlterProcedureContext ctx) {\n+        return new AlterProcedureStatement();\n+    }\n+    \n+    @Override\n+    public ASTNode visitCreateFunction(final PostgreSQLStatementParser.CreateFunctionContext ctx) {\n+        return new CreateFunctionStatement();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2094bf77ae6c0a2d960737d72b8e12ba2e81f29b"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 338, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}