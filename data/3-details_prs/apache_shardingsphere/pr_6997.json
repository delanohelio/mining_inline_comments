{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTk1MzE2", "number": 6997, "title": "fix update/delete limit parameterCount parse error", "bodyText": "Fixes #6939 .\nChanges proposed in this pull request:\n\nfix update/delete limit parameterCount parse error\nadd check when update/delete limit statement route to multiple data nodes", "createdAt": "2020-08-22T14:33:12Z", "url": "https://github.com/apache/shardingsphere/pull/6997", "merged": true, "mergeCommit": {"oid": "a25ce41755a7b6dc920689a1d8f982bcb6d64107"}, "closed": true, "closedAt": "2020-08-23T06:07:34Z", "author": {"login": "strongduanmu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBaRmfgH2gAyNDcxOTk1MzE2OjQ3Njg1MmJmYmRjY2ZjMzZjM2IxMjllMzliZDMyNTM3M2IyMDFjYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBntqcAFqTQ3Mjk4MjM1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/476852bfbdccfc36c3b129e39bd325373b201caa", "committedDate": "2020-08-22T14:27:55Z", "message": "fix update/delete limit parameterCount parse error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTc0NDg1", "url": "https://github.com/apache/shardingsphere/pull/6997#pullrequestreview-472974485", "createdAt": "2020-08-23T02:36:33Z", "commit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMjozNjozM1rOHFJiPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzoyMDo1MFrOHFJuBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2MTE0OA==", "bodyText": "IMO, this condition judgment for update and delete statements seems a little bit intrusive for sharding router. I mean it is a detailed statement judgment for router seemingly. Do you think it is possible to move this to the  statement validator.\nHowever, the current statement validator maybe not meet our needs now. Hence other changes for it are required. My feeling is that we can rename the original  validate function of validator as preValidate  (A draft name, welcome a better one) firstly. Moreover, this added validating condition could be viewed as a postValidate function for validator.\nI'd like to listen to your voice.\nBets,\nTrista", "url": "https://github.com/apache/shardingsphere/pull/6997#discussion_r475161148", "createdAt": "2020-08-23T02:36:33Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/ShardingRouteDecorator.java", "diffHunk": "@@ -70,9 +73,18 @@ public RouteContext decorate(final RouteContext routeContext, final ShardingSphe\n         }\n         ShardingRouteEngine shardingRouteEngine = ShardingRouteEngineFactory.newInstance(shardingRule, metaData, sqlStatementContext, shardingConditions, props);\n         RouteResult routeResult = shardingRouteEngine.route(shardingRule);\n+        if (containsUpdateDeletePagination(sqlStatement) && routeResult.getRouteUnits().size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2NDE2NA==", "bodyText": "Polishing work, great. :-)", "url": "https://github.com/apache/shardingsphere/pull/6997#discussion_r475164164", "createdAt": "2020-08-23T03:20:50Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/validator/impl/ShardingInsertStatementValidator.java", "diffHunk": "@@ -48,12 +48,12 @@ public void validate(final ShardingRule shardingRule, final SQLStatementContext<\n         Optional<OnDuplicateKeyColumnsSegment> onDuplicateKeyColumnsSegment = sqlStatement.getOnDuplicateKeyColumns();\n         String tableName = sqlStatement.getTable().getTableName().getIdentifier().getValue();\n         if (onDuplicateKeyColumnsSegment.isPresent() && isUpdateShardingKey(shardingRule, onDuplicateKeyColumnsSegment.get(), tableName)) {\n-            throw new ShardingSphereException(\"INSERT INTO .... ON DUPLICATE KEY UPDATE can not support update for sharding column.\");\n+            throw new ShardingSphereException(\"INSERT INTO ... ON DUPLICATE KEY UPDATE can not support update for sharding column.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476852bfbdccfc36c3b129e39bd325373b201caa"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5b51bd76b1ce406e6d9dd8be46f98046f84a4a", "author": {"user": {"login": "strongduanmu", "name": "Zhengqiang Duan"}}, "url": "https://github.com/apache/shardingsphere/commit/0d5b51bd76b1ce406e6d9dd8be46f98046f84a4a", "committedDate": "2020-08-23T04:45:46Z", "message": "move update/delete limit check to ShardingStatementValidator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTgyMzUy", "url": "https://github.com/apache/shardingsphere/pull/6997#pullrequestreview-472982352", "createdAt": "2020-08-23T06:07:20Z", "commit": {"oid": "0d5b51bd76b1ce406e6d9dd8be46f98046f84a4a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4712, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}