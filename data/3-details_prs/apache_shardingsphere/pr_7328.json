{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODc5NzAz", "number": 7328, "title": "Optimize startup time, ignore load unConfigured table's column and index", "bodyText": "Fixes #6212 .\nChanges proposed in this pull request:\n\nRemove the load procedure for unconfigured tables. load only table names for unconfigured tables.\nRemove the refresh procedure for unconfigured tables\nRemove the multi-thread logic for unconfigured tables. (Configured tables still use multi-thread)", "createdAt": "2020-09-08T08:35:35Z", "url": "https://github.com/apache/shardingsphere/pull/7328", "merged": true, "mergeCommit": {"oid": "e9bfb3e09882e2b3c0f22cb21fb6e98eb8bcabea"}, "closed": true, "closedAt": "2020-09-08T10:42:24Z", "author": {"login": "xbkaishui"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGzMvFgH2gAyNDgxODc5NzAzOjQ0Y2E5ZDRlZDcwN2IwMDliNzM0ZjAxYjk4ODUwZWNlNmUzYzg4Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdG1O8GAFqTQ4NDAxMTI5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44ca9d4ed707b009b734f01b98850ece6e3c8867", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/44ca9d4ed707b009b734f01b98850ece6e3c8867", "committedDate": "2020-09-08T08:19:51Z", "message": "Optimize startup time, ignore load unConfigured table's column and index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45", "author": {"user": {"login": "xbkaishui", "name": null}}, "url": "https://github.com/apache/shardingsphere/commit/c9bac92f83aa16a73f4fcfd63ac6296f596dba45", "committedDate": "2020-09-08T08:43:43Z", "message": "fix test case fail"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDA2OTM4", "url": "https://github.com/apache/shardingsphere/pull/7328#pullrequestreview-484006938", "createdAt": "2020-09-08T10:35:25Z", "commit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNToyNlrOHOW-0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNjoyOFrOHOXA1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxODY0MA==", "bodyText": "// TODO comment is required.", "url": "https://github.com/apache/shardingsphere/pull/7328#discussion_r484818640", "createdAt": "2020-09-08T10:35:26Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/java/org/apache/shardingsphere/dbtest/engine/dql/BaseDQLIT.java", "diffHunk": "@@ -123,6 +123,9 @@ private void assertMetaData(final ResultSetMetaData actualMetaData, final List<D\n         if (\"shadow\".equals(getRuleType())) {\n             return;\n         }\n+        if (0 == actualMetaData.getColumnCount()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxODc2OA==", "bodyText": "// TODO comment is required.", "url": "https://github.com/apache/shardingsphere/pull/7328#discussion_r484818768", "createdAt": "2020-09-08T10:35:39Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/schema/SchemaMetaDataLoader.java", "diffHunk": "@@ -87,22 +78,11 @@ public static SchemaMetaData load(final DataSource dataSource, final int maxConn\n         if (tableNames.isEmpty()) {\n             return new SchemaMetaData(Collections.emptyMap());\n         }\n-        List<List<String>> tableGroups = Lists.partition(tableNames, Math.max(tableNames.size() / maxConnectionCount, 1));\n-        Map<String, TableMetaData> tableMetaDataMap = 1 == tableGroups.size()\n-                ? load(dataSource.getConnection(), tableGroups.get(0), databaseType) : asyncLoad(dataSource, maxConnectionCount, tableNames, tableGroups, databaseType);\n+        Map<String, TableMetaData> tableMetaDataMap = new HashMap<>(tableNames.size(), 1);\n+        tableNames.forEach(tableName -> tableMetaDataMap.put(tableName, new TableMetaData(Collections.emptyList(), Collections.emptyList())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxODg4NA==", "bodyText": "// TODO comment is required.", "url": "https://github.com/apache/shardingsphere/pull/7328#discussion_r484818884", "createdAt": "2020-09-08T10:35:55Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/TableMetaDataLoader.java", "diffHunk": "@@ -54,6 +55,24 @@\n         }\n     }\n     \n+    /**\n+     * Load table without column and index meta data, this is for unconfigured table.\n+     *\n+     * @param dataSource data source\n+     * @param table table name\n+     * @param databaseType database type\n+     * @return table meta data\n+     * @throws SQLException SQL exception\n+     */\n+    public static Optional<TableMetaData> loadWithoutColumnMetaData(final DataSource dataSource, final String table, final String databaseType) throws SQLException {\n+        try (MetaDataConnection connection = new MetaDataConnection(dataSource.getConnection())) {\n+            if (!isTableExist(connection, table, databaseType)) {\n+                return Optional.empty();\n+            }\n+            return Optional.of(new TableMetaData(Collections.emptyList(), Collections.emptyList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxOTE1OQ==", "bodyText": "// TODO comment is required.", "url": "https://github.com/apache/shardingsphere/pull/7328#discussion_r484819159", "createdAt": "2020-09-08T10:36:28Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-infra/shardingsphere-infra-common/src/main/java/org/apache/shardingsphere/infra/metadata/refresh/impl/CreateTableStatementMetaDataRefreshStrategy.java", "diffHunk": "@@ -53,7 +53,7 @@ public void refreshMetaData(final ShardingSphereMetaData metaData, final Databas\n     private void refreshUnconfiguredMetaData(final ShardingSphereMetaData metaData, \n                                              final DatabaseType databaseType, final Map<String, DataSource> dataSourceMap, final String tableName) throws SQLException {\n         for (Entry<String, DataSource> entry : dataSourceMap.entrySet()) {\n-            Optional<TableMetaData> tableMetaData = TableMetaDataLoader.load(entry.getValue(), tableName, databaseType.getName());\n+            Optional<TableMetaData> tableMetaData = TableMetaDataLoader.loadWithoutColumnMetaData(entry.getValue(), tableName, databaseType.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDExMjky", "url": "https://github.com/apache/shardingsphere/pull/7328#pullrequestreview-484011292", "createdAt": "2020-09-08T10:42:04Z", "commit": {"oid": "c9bac92f83aa16a73f4fcfd63ac6296f596dba45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4057, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}