{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNzE4Njc0", "number": 8497, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzozMzo0NFrOFAm5NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzozMzo0NFrOFAm5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTgxNTU3OnYy", "diffSide": "RIGHT", "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/data/QueryResponseRowTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzozMzo0NFrOH-_Sjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDo0NjoxNlrOH_AofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxMDcwMg==", "bodyText": "It's better to define it as a final class if there is no specific intent.", "url": "https://github.com/apache/shardingsphere/pull/8497#discussion_r535810702", "createdAt": "2020-12-04T03:33:44Z", "author": {"login": "tristaZero"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/data/QueryResponseRowTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.response.data;\n+\n+import org.apache.shardingsphere.proxy.backend.response.data.impl.BinaryQueryResponseCell;\n+import org.apache.shardingsphere.proxy.backend.response.data.impl.TextQueryResponseCell;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class QueryResponseRowTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c93972de36963f6ca28386a8e2a0e2fcd3046ff"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgzMjcwMA==", "bodyText": "OK", "url": "https://github.com/apache/shardingsphere/pull/8497#discussion_r535832700", "createdAt": "2020-12-04T04:46:16Z", "author": {"login": "huanghao495430759"}, "path": "shardingsphere-proxy/shardingsphere-proxy-backend/src/test/java/org/apache/shardingsphere/proxy/backend/response/data/QueryResponseRowTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.proxy.backend.response.data;\n+\n+import org.apache.shardingsphere.proxy.backend.response.data.impl.BinaryQueryResponseCell;\n+import org.apache.shardingsphere.proxy.backend.response.data.impl.TextQueryResponseCell;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.hamcrest.CoreMatchers.instanceOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class QueryResponseRowTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxMDcwMg=="}, "originalCommit": {"oid": "5c93972de36963f6ca28386a8e2a0e2fcd3046ff"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 522, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}