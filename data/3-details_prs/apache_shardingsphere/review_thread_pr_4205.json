{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDUwOTYz", "number": 4205, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNToxNjoxMlrODeDd_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowMToxN1rODeZJIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODQwNzAxOnYy", "diffSide": "RIGHT", "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/engine/ClassFilterConstructor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNToxNjoxMlrOFnAVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNToyODoyNVrOFnAxRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NDMzMA==", "bodyText": "may change name from clz to each", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376444330", "createdAt": "2020-02-07T15:16:12Z", "author": {"login": "terrymanu"}, "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/engine/ClassFilterConstructor.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.yaml.engine;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Class filter Constructor for YAML load as map.\n+ *\n+ * @author chenqingyang\n+ */\n+@RequiredArgsConstructor\n+public final class ClassFilterConstructor extends Constructor {\n+    \n+    private final Collection<Class<?>> acceptClasses;\n+    \n+    @Override\n+    protected Class<?> getClassForName(final String name) throws ClassNotFoundException {\n+        for (Class<? extends Object> clz : acceptClasses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dd34824298d5632b77f7b8fa06fcdb70c3ecb8e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1MTM5Nw==", "bodyText": "ok\uff01", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376451397", "createdAt": "2020-02-07T15:28:25Z", "author": {"login": "beckhampu"}, "path": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/engine/ClassFilterConstructor.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.shardingsphere.core.yaml.engine;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.yaml.snakeyaml.constructor.Constructor;\n+\n+import java.util.Collection;\n+\n+/**\n+ * Class filter Constructor for YAML load as map.\n+ *\n+ * @author chenqingyang\n+ */\n+@RequiredArgsConstructor\n+public final class ClassFilterConstructor extends Constructor {\n+    \n+    private final Collection<Class<?>> acceptClasses;\n+    \n+    @Override\n+    protected Class<?> getClassForName(final String name) throws ClassNotFoundException {\n+        for (Class<? extends Object> clz : acceptClasses) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0NDMzMA=="}, "originalCommit": {"oid": "1dd34824298d5632b77f7b8fa06fcdb70c3ecb8e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTk1Nzc5OnYy", "diffSide": "RIGHT", "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowMToxMFrOFngEWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowMToxMFrOFngEWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2NDE4Nw==", "bodyText": "\"url: !!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost\"]]]\"\nmaybe not enough", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376964187", "createdAt": "2020-02-10T10:01:10Z", "author": {"login": "kimmking"}, "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "diffHunk": "@@ -38,11 +44,25 @@ public void assertUnmarshal() {\n     @SuppressWarnings(\"unchecked\")\n     @Test\n     public void assertUnmarshalMap() {\n-        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\");\n+        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\", Collections.<Class<?>>emptyList());\n         assertThat(actual.get(\"password\").toString(), is(\"pwd\"));\n         assertThat(actual.get(\"authorizedSchemas\").toString(), is(\"db1\"));\n     }\n     \n+    @Test(expected = ConstructorException.class)\n+    public void assertUnmarshalMapWithIllegalClasses() {\n+        YamlEngine.unmarshal(\"url: !!java.net.URLClassLoader [[!!java.net.URL [\\\"http://localhost\\\"]]]\", Collections.<Class<?>>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff2d3bbb53d079e2f724230542f3354a40a8a40"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTk1ODEwOnYy", "diffSide": "RIGHT", "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowMToxOFrOFngEmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDowMToxOFrOFngEmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2NDI1MQ==", "bodyText": "\"url: !!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost\"]]]\"\nmaybe not enough", "url": "https://github.com/apache/shardingsphere/pull/4205#discussion_r376964251", "createdAt": "2020-02-10T10:01:18Z", "author": {"login": "kimmking"}, "path": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineTest.java", "diffHunk": "@@ -38,11 +44,25 @@ public void assertUnmarshal() {\n     @SuppressWarnings(\"unchecked\")\n     @Test\n     public void assertUnmarshalMap() {\n-        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\");\n+        Map<String, Object> actual = (Map<String, Object>) YamlEngine.unmarshal(\"password: pwd\\nauthorizedSchemas: db1\", Collections.<Class<?>>emptyList());\n         assertThat(actual.get(\"password\").toString(), is(\"pwd\"));\n         assertThat(actual.get(\"authorizedSchemas\").toString(), is(\"db1\"));\n     }\n     \n+    @Test(expected = ConstructorException.class)\n+    public void assertUnmarshalMapWithIllegalClasses() {\n+        YamlEngine.unmarshal(\"url: !!java.net.URLClassLoader [[!!java.net.URL [\\\"http://localhost\\\"]]]\", Collections.<Class<?>>emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff2d3bbb53d079e2f724230542f3354a40a8a40"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 964, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}