{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzcwOTkz", "number": 725, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNjozN1rOEo8lPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMjowOTowNVrOEpSWhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzcxMDY5OnYy", "diffSide": "RIGHT", "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNjozN1rOHaVBjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjoxOTo0NFrOHbR8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ==", "bodyText": "Will azure-core work correctly, when host and nextLink both contains host part of the URL?", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497369485", "createdAt": "2020-09-30T09:26:37Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczMjU5MQ==", "bodyText": "@weidongxu-microsoft  yes, this is how the previous version of autorest also generated the code which worked with azure core. So, this should work.", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497732591", "createdAt": "2020-09-30T18:57:49Z", "author": {"login": "srnagar"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ=="}, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzkzODM5NQ==", "bodyText": "I didn't get it. Previous version of autorest generate the proxy method with only @PathParam, e.g.\n        Mono<Response<ResourceGroupListResult>> listNext(\n            @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n\nwhile updated code had one more @HostParam(\"$host\") String host, which certainly is not same?\nWell, if tests passes, I assume azure-core could handle this.", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497938395", "createdAt": "2020-10-01T02:05:23Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ=="}, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk3NTQ0NA==", "bodyText": "nit. Will it be better to put @HostParam before @PathParam? Not important since this method will not be exposed to user.", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497975444", "createdAt": "2020-10-01T04:21:02Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ=="}, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2NzUxOA==", "bodyText": "Sorry, I meant the v3 version of autorest. Here's an example of what was generated by v3.\n    @Get(\"{nextUrl}\")\n    @ExpectedResponses({200})\n    @UnexpectedResponseExceptionType(HttpResponseException.class)\n    @ReturnValueWireType(ConfigurationSettingPage.class)\n    Mono<PagedResponse<ConfigurationSetting>> listKeyValues(\n        @HostParam(\"url\") String url,\n        @PathParam(value = \"nextUrl\", encoded = true) String nextUrl,\n        Context context);", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r498367518", "createdAt": "2020-10-01T16:19:44Z", "author": {"login": "srnagar"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ=="}, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzI3NzUwOnYy", "diffSide": "RIGHT", "path": "azure-tests/src/test/java/fixtures/paging/PagingTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMjowOTowNVrOHa35lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjoxNDo1OFrOHbRw0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk0MDg4NA==", "bodyText": "Any idea what caused this change? Is it due to the additional host?", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497940884", "createdAt": "2020-10-01T02:09:05Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/test/java/fixtures/paging/PagingTests.java", "diffHunk": "@@ -109,20 +110,22 @@ public void getMultiplePagesFailureUri() {\n             client.getPagings().getMultiplePagesFailureUri().stream().collect(Collectors.toList());\n             fail();\n         } catch (Exception e) {\n-            Assert.assertTrue(e.getCause() instanceof MalformedURLException);\n+            assertTrue(e instanceof HttpResponseException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07aae5f140777b2820e5267e04c3804262381adf"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2NDYyNg==", "bodyText": "Yes, this is due to the addition of host param", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r498364626", "createdAt": "2020-10-01T16:14:58Z", "author": {"login": "srnagar"}, "path": "azure-tests/src/test/java/fixtures/paging/PagingTests.java", "diffHunk": "@@ -109,20 +110,22 @@ public void getMultiplePagesFailureUri() {\n             client.getPagings().getMultiplePagesFailureUri().stream().collect(Collectors.toList());\n             fail();\n         } catch (Exception e) {\n-            Assert.assertTrue(e.getCause() instanceof MalformedURLException);\n+            assertTrue(e instanceof HttpResponseException);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk0MDg4NA=="}, "originalCommit": {"oid": "07aae5f140777b2820e5267e04c3804262381adf"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}