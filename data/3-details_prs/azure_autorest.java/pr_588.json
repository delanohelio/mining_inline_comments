{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODY5Mzgz", "number": 588, "title": "v4 mgmt validate, and support ClientLogger", "bodyText": "", "createdAt": "2020-04-20T07:05:45Z", "url": "https://github.com/Azure/autorest.java/pull/588", "merged": true, "mergeCommit": {"oid": "822e4599dc3ab2b5e7a6973e9b10e46d656bfb3c"}, "closed": true, "closedAt": "2020-04-22T01:16:28Z", "author": {"login": "weidongxu-microsoft"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZZc6qAH2gAyNDA1ODY5MzgzOjAxMzlmYjRjZTYwYTk0NDhlMzA2OTIyOTBlOGU1N2EyYzA2MWNhNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZbIO0gFqTM5NjI1ODc1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0139fb4ce60a9448e30692290e8e57a2c061ca75", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/0139fb4ce60a9448e30692290e8e57a2c061ca75", "committedDate": "2020-04-20T06:53:24Z", "message": "adjust a bit for validate; also add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0890461a755c3aee2e55f32e7cd152f966ffe507", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/0890461a755c3aee2e55f32e7cd152f966ffe507", "committedDate": "2020-04-20T07:02:33Z", "message": "regen tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eea26019ee58c39dad530ee27b5fb9f796a9375", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/1eea26019ee58c39dad530ee27b5fb9f796a9375", "committedDate": "2020-04-20T07:59:14Z", "message": "add a depth to GenericType, to avoid duplidate variable name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjIzMzE4", "url": "https://github.com/Azure/autorest.java/pull/588#pullrequestreview-396223318", "createdAt": "2020-04-20T08:00:54Z", "commit": {"oid": "1eea26019ee58c39dad530ee27b5fb9f796a9375"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODowMDo1NVrOGIIBig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODowMDo1NVrOGIIBig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3MzI1OA==", "bodyText": "To generate this compositeIndexes().forEach(e -> e.forEach(e1 -> e1.validate()));\nProbably not a good fix. Any suggestion?", "url": "https://github.com/Azure/autorest.java/pull/588#discussion_r411173258", "createdAt": "2020-04-20T08:00:55Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/model/clientmodel/ListType.java", "diffHunk": "@@ -30,10 +30,19 @@ public void addImportsTo(Set<String> imports, boolean includeImplementationImpor\n         super.addImportsTo(imports, includeImplementationImports);\n     }\n \n+    @Override\n     public String validate(String expression) {\n-        String elementValidation = getElementType().validate(\"e\");\n+        return validate(expression, 0);\n+    }\n+\n+    @Override\n+    public String validate(String expression, int depth) {\n+        String var = depth == 0 ? \"e\" : \"e\" + depth;\n+        String elementValidation = getElementType() instanceof GenericType\n+                ? ((GenericType) getElementType()).validate(var, ++depth)\n+                : getElementType().validate(var);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eea26019ee58c39dad530ee27b5fb9f796a9375"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62fdff2e2d7d63193401a7acd82d315c4ed87eb", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/d62fdff2e2d7d63193401a7acd82d315c4ed87eb", "committedDate": "2020-04-20T08:48:07Z", "message": "add option for ClientLogger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjU4NzU1", "url": "https://github.com/Azure/autorest.java/pull/588#pullrequestreview-396258755", "createdAt": "2020-04-20T08:50:36Z", "commit": {"oid": "d62fdff2e2d7d63193401a7acd82d315c4ed87eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODo1MDozN1rOGIJ-wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODo1MDozN1rOGIJ-wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwNTMxNA==", "bodyText": "For support this exception through ClientLogger.\n            throw logger\n                .logExceptionAsError(\n                    new IllegalArgumentException(\n                        \"Missing required property keyName in model StorageAccountRegenerateKeyParameters\"));", "url": "https://github.com/Azure/autorest.java/pull/588#discussion_r411205314", "createdAt": "2020-04-20T08:50:37Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/template/ModelTemplate.java", "diffHunk": "@@ -252,20 +261,36 @@ public final void write(ClientModel model, JavaFile javaFile) {\n \n     private void addPropertyValidations(JavaClass classBlock, ClientModel model, JavaSettings settings) {\n         if (settings.shouldClientSideValidations()) {\n-            if (model.getParentModelName() != null) {\n+            boolean validateOnParent = this.validateOnParentModel(model.getParentModelName());\n+\n+            // javadoc\n+            classBlock.javadocComment(settings.getMaximumJavadocCommentWidth(), (comment) -> {\n+                comment.description(\"Validates the instance.\");\n+\n+                comment.methodThrows(\"IllegalArgumentException\", \"thrown if the instance is not valid\");\n+            });\n+\n+            if (validateOnParent) {\n                 classBlock.annotation(\"Override\");\n             }\n             classBlock.publicMethod(\"void validate()\", methodBlock -> {\n-                if (model.getParentModelName() != null) {\n+                if (validateOnParent) {\n                     methodBlock.line(\"super.validate();\");\n                 }\n                 for (ClientModelProperty property : model.getProperties()) {\n                     String validation = property.getClientType().validate(property.getGetterName() + \"()\");\n                     if (property.isRequired() && !property.getIsReadOnly() && !property.getIsConstant() && !(property.getClientType() instanceof PrimitiveType)) {\n                         JavaIfBlock nullCheck = methodBlock.ifBlock(String.format(\"%s() == null\", property.getGetterName()), ifBlock -> {\n-                            ifBlock.line(String.format(\n-                                    \"throw new IllegalArgumentException(\\\"Missing required property %s in model %s\\\");\",\n-                                    property.getName(), model.getName()));\n+                            final String errorMessage = String.format(\"\\\"Missing required property %s in model %s\\\"\", property.getName(), model.getName());\n+                            if (settings.shouldClientLogger()) {\n+                                ifBlock.line(String.format(\n+                                        \"throw logger.logExceptionAsError(new IllegalArgumentException(%s));\",\n+                                        errorMessage));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62fdff2e2d7d63193401a7acd82d315c4ed87eb"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1945, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}