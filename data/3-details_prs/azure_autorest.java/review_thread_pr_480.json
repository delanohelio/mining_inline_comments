{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI5MzE3", "number": 480, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMTo1NFrODXdN6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMTo1NFrODXdN6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTIyNTM2OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToyMTo1NFrOFcwtCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo1OTo1N1rOFdGAYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMjQwOQ==", "bodyText": "Is it possible to pull it out to a protect method? Fluentgen might need to call it.", "url": "https://github.com/Azure/autorest.java/pull/480#discussion_r365702409", "createdAt": "2020-01-13T09:21:54Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java", "diffHunk": "@@ -247,23 +247,24 @@ public final void write(ClientMethod clientMethod, JavaType typeBlock) {\n \n \n         boolean isFluentDelete = settings.isFluent() && restAPIMethod.getName().equalsIgnoreCase(\"Delete\") && clientMethod.getMethodRequiredParameters().size() == 2;\n+        typeBlock.javadocComment(comment -> {\n+            comment.description(clientMethod.getDescription());\n+            for (ClientMethodParameter parameter : clientMethod.getParameters()) {\n+                comment.param(parameter.getName(), parameter.getDescription());\n+            }\n+            if (clientMethod.getParametersDeclaration() != null && !clientMethod.getParametersDeclaration().isEmpty()) {\n+                comment.methodThrows(\"IllegalArgumentException\", \"thrown if parameters fail the validation\");\n+            }\n+            if (restAPIMethod.getUnexpectedResponseExceptionType() != null) {\n+                comment.methodThrows(restAPIMethod.getUnexpectedResponseExceptionType().toString(), \"thrown if the request is rejected by server\");\n+            }\n+            comment.methodThrows(\"RuntimeException\", \"all other wrapped checked exceptions if the request fails to be sent\");\n+            comment.methodReturns(clientMethod.getReturnValue().getDescription());\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c878fe501cb7af8c55c5c5beefa3340e432162e3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA1MTQyNw==", "bodyText": "@weidongxu-microsoft Done in this commit", "url": "https://github.com/Azure/autorest.java/pull/480#discussion_r366051427", "createdAt": "2020-01-13T21:59:57Z", "author": {"login": "srnagar"}, "path": "javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java", "diffHunk": "@@ -247,23 +247,24 @@ public final void write(ClientMethod clientMethod, JavaType typeBlock) {\n \n \n         boolean isFluentDelete = settings.isFluent() && restAPIMethod.getName().equalsIgnoreCase(\"Delete\") && clientMethod.getMethodRequiredParameters().size() == 2;\n+        typeBlock.javadocComment(comment -> {\n+            comment.description(clientMethod.getDescription());\n+            for (ClientMethodParameter parameter : clientMethod.getParameters()) {\n+                comment.param(parameter.getName(), parameter.getDescription());\n+            }\n+            if (clientMethod.getParametersDeclaration() != null && !clientMethod.getParametersDeclaration().isEmpty()) {\n+                comment.methodThrows(\"IllegalArgumentException\", \"thrown if parameters fail the validation\");\n+            }\n+            if (restAPIMethod.getUnexpectedResponseExceptionType() != null) {\n+                comment.methodThrows(restAPIMethod.getUnexpectedResponseExceptionType().toString(), \"thrown if the request is rejected by server\");\n+            }\n+            comment.methodThrows(\"RuntimeException\", \"all other wrapped checked exceptions if the request fails to be sent\");\n+            comment.methodReturns(clientMethod.getReturnValue().getDescription());\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcwMjQwOQ=="}, "originalCommit": {"oid": "c878fe501cb7af8c55c5c5beefa3340e432162e3"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3112, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}