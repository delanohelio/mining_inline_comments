{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2OTU0ODQ2", "number": 812, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjo1OTozMVrOE9CwOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzowOTowOVrOE9C2vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDQzNzA0OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/mapper/ClientMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMjo1OTozMVrOH5hUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzozMjo1NlrOH59raQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA3NjgzMQ==", "bodyText": "Why do we need to filter for ObjectSchema? Does this have an -ve impact on the way core java-gen produces code?", "url": "https://github.com/Azure/autorest.java/pull/812#discussion_r530076831", "createdAt": "2020-11-25T02:59:31Z", "author": {"login": "anuchandy"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ClientMapper.java", "diffHunk": "@@ -71,6 +71,7 @@ public Client map(CodeModel codeModel) {\n                 .flatMap(og -> og.getOperations().stream())\n                 .flatMap(o -> o.getExceptions().stream())\n                 .map(Response::getSchema)\n+                .filter(s -> s instanceof ObjectSchema)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4602044de3155d17e46ca18f99afa4a7384255eb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0MTQxNw==", "bodyText": "Because there is a down case two lines after\n\n.map(s -> Mappers.getExceptionMapper().map((ObjectSchema) s))\n\nwhich will fail when Response:getSchema returns String.", "url": "https://github.com/Azure/autorest.java/pull/812#discussion_r530541417", "createdAt": "2020-11-25T17:32:56Z", "author": {"login": "JianpingChen"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ClientMapper.java", "diffHunk": "@@ -71,6 +71,7 @@ public Client map(CodeModel codeModel) {\n                 .flatMap(og -> og.getOperations().stream())\n                 .flatMap(o -> o.getExceptions().stream())\n                 .map(Response::getSchema)\n+                .filter(s -> s instanceof ObjectSchema)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA3NjgzMQ=="}, "originalCommit": {"oid": "4602044de3155d17e46ca18f99afa4a7384255eb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDQ1MzcyOnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzowOTowOVrOH5hedA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzozODoyNFrOH593Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA3OTM0OA==", "bodyText": "What makes android different from Java which requires special handling for string type?", "url": "https://github.com/Azure/autorest.java/pull/812#discussion_r530079348", "createdAt": "2020-11-25T03:09:09Z", "author": {"login": "anuchandy"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -193,6 +193,10 @@ protected void buildUnexpectedResponseExceptionTypes(ProxyMethod.Builder builder\n         }\n \n         if (errorType != null) {\n+            if (errorType.equals(ClassType.String)){\n+                builder.unexpectedResponseExceptionType(getExceptionTypeForString(errorType));\n+                return;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4602044de3155d17e46ca18f99afa4a7384255eb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NDQ0Mw==", "bodyText": "On Android we'd throw this exception.\n\ncom.azure.android.core.http.exception.HttpResponseException\n\nFor normal Java, it'll throw\n\ncom.azure.core.exception.HttpResponseException", "url": "https://github.com/Azure/autorest.java/pull/812#discussion_r530544443", "createdAt": "2020-11-25T17:38:24Z", "author": {"login": "JianpingChen"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -193,6 +193,10 @@ protected void buildUnexpectedResponseExceptionTypes(ProxyMethod.Builder builder\n         }\n \n         if (errorType != null) {\n+            if (errorType.equals(ClassType.String)){\n+                builder.unexpectedResponseExceptionType(getExceptionTypeForString(errorType));\n+                return;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA3OTM0OA=="}, "originalCommit": {"oid": "4602044de3155d17e46ca18f99afa4a7384255eb"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3012, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}