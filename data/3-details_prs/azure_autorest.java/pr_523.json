{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjk4OTEw", "number": 523, "title": "Support multiple requests from modelerfour", "bodyText": "", "createdAt": "2020-03-04T02:15:51Z", "url": "https://github.com/Azure/autorest.java/pull/523", "merged": true, "mergeCommit": {"oid": "379f1a32ff7bc0b57728e893a065db35f8bdf874"}, "closed": true, "closedAt": "2020-03-04T18:50:20Z", "author": {"login": "jianghaolu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKNS_ZAH2gAyMzgzMjk4OTEwOjk0OGM0MmI4MzVjMjhmOTUxMDNiYTY4ZDA1OTM5NGJmNjg2MDk3ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKOEsDgFqTM2ODQ3Nzk1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "948c42b835c28f95103ba68d059394bf686097e8", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/autorest.java/commit/948c42b835c28f95103ba68d059394bf686097e8", "committedDate": "2020-03-04T02:14:50Z", "message": "Support generating multiple requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad03f07db93803c15defddbc47d15237bd2f350", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/autorest.java/commit/3ad03f07db93803c15defddbc47d15237bd2f350", "committedDate": "2020-03-04T02:15:05Z", "message": "Add media types tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDYxNzEx", "url": "https://github.com/Azure/autorest.java/pull/523#pullrequestreview-368461711", "createdAt": "2020-03-04T02:17:26Z", "commit": {"oid": "3ad03f07db93803c15defddbc47d15237bd2f350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMjoxNzoyNlrOFxdzgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMjoxNzoyNlrOFxdzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMjg2Ng==", "bodyText": "An operation can now generate multiple proxy methods, per request.", "url": "https://github.com/Azure/autorest.java/pull/523#discussion_r387412866", "createdAt": "2020-03-04T02:17:26Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -23,14 +25,14 @@\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n-public class ProxyMethodMapper implements IMapper<Operation, ProxyMethod> {\n+public class ProxyMethodMapper implements IMapper<Operation, Map<Request, ProxyMethod>> {\n     private static final List<IType> unixTimeTypes = Arrays.asList(PrimitiveType.UnixTimeLong, ClassType.UnixTimeLong, ClassType.UnixTimeDateTime);\n     private static final List<IType> returnValueWireTypeOptions = Stream.concat(Stream.of(ClassType.Base64Url, ClassType.DateTimeRfc1123), unixTimeTypes.stream()).collect(Collectors.toList());\n     private static ProxyMethodMapper instance = new ProxyMethodMapper();\n \n //    private static final jdk.nashorn.internal.runtime.regexp.joni.Regex methodTypeLeading = new Regex(\"^/+\");\n //    private static final Regex methodTypeTrailing = new Regex(\"/+$\");\n-    private Map<Operation, ProxyMethod> parsed = new HashMap<Operation, ProxyMethod>();\n+    private Map<Request, ProxyMethod> parsed = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad03f07db93803c15defddbc47d15237bd2f350"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDc3OTUw", "url": "https://github.com/Azure/autorest.java/pull/523#pullrequestreview-368477950", "createdAt": "2020-03-04T03:06:53Z", "commit": {"oid": "3ad03f07db93803c15defddbc47d15237bd2f350"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMzowNjo1M1rOFxeodg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMzowNjo1M1rOFxeodg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQyNjQyMg==", "bodyText": "I see. The input of json schema and input of binary upload is put to 2 different requests...", "url": "https://github.com/Azure/autorest.java/pull/523#discussion_r387426422", "createdAt": "2020-03-04T03:06:53Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -23,14 +25,14 @@\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n-public class ProxyMethodMapper implements IMapper<Operation, ProxyMethod> {\n+public class ProxyMethodMapper implements IMapper<Operation, Map<Request, ProxyMethod>> {\n     private static final List<IType> unixTimeTypes = Arrays.asList(PrimitiveType.UnixTimeLong, ClassType.UnixTimeLong, ClassType.UnixTimeDateTime);\n     private static final List<IType> returnValueWireTypeOptions = Stream.concat(Stream.of(ClassType.Base64Url, ClassType.DateTimeRfc1123), unixTimeTypes.stream()).collect(Collectors.toList());\n     private static ProxyMethodMapper instance = new ProxyMethodMapper();\n \n //    private static final jdk.nashorn.internal.runtime.regexp.joni.Regex methodTypeLeading = new Regex(\"^/+\");\n //    private static final Regex methodTypeTrailing = new Regex(\"/+$\");\n-    private Map<Operation, ProxyMethod> parsed = new HashMap<Operation, ProxyMethod>();\n+    private Map<Request, ProxyMethod> parsed = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQxMjg2Ng=="}, "originalCommit": {"oid": "3ad03f07db93803c15defddbc47d15237bd2f350"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2004, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}