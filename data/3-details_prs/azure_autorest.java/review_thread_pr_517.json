{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODMzNzgz", "number": 517, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0NzoxMFrODi4VOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0NzoxMFrODi4VOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTAxMTEzOnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0NzoxMFrOFuYFmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjoxMDoxMFrOFucGMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzQ2Ng==", "bodyText": "This should be handled in the preprocessor.", "url": "https://github.com/Azure/autorest.java/pull/517#discussion_r384173466", "createdAt": "2020-02-25T22:47:10Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -126,6 +126,7 @@ public ProxyMethod map(Operation operation) {\n         List<ProxyMethodParameter> parameters = new ArrayList<>();\n         for (Parameter parameter : operation.getRequest().getParameters().stream()\n                 .filter(p -> p.getProtocol() != null && p.getProtocol().getHttp() != null).collect(Collectors.toList())) {\n+            parameter.setOperation(operation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "339ac75655b6775ff36bb9c656c54f26f8ab446e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3NDE3Mg==", "bodyText": "I read your comments. Scratch my comment above. I'm okay with this change for now but this does expose a defection in the design.", "url": "https://github.com/Azure/autorest.java/pull/517#discussion_r384174172", "createdAt": "2020-02-25T22:48:50Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -126,6 +126,7 @@ public ProxyMethod map(Operation operation) {\n         List<ProxyMethodParameter> parameters = new ArrayList<>();\n         for (Parameter parameter : operation.getRequest().getParameters().stream()\n                 .filter(p -> p.getProtocol() != null && p.getProtocol().getHttp() != null).collect(Collectors.toList())) {\n+            parameter.setOperation(operation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzQ2Ng=="}, "originalCommit": {"oid": "339ac75655b6775ff36bb9c656c54f26f8ab446e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIzOTE1Mg==", "bodyText": "Yes, it is more or less design issue.\nEither it can be copied when changed (I've got a shallowCopy util in fluentgen to do this https://github.com/weidongxu-microsoft/autorest.java/blob/v4_fluentgen/fluentgen/src/main/java/com/azure/autorest/fluent/util/Utils.java#L34), or need other refactor elsewhere.\nCurrently I prefer not to do bigger change (this will just invite large merge conflict) until I've merged javagen, fluentnamer, and optionally fluentgen and your pending big refactor.", "url": "https://github.com/Azure/autorest.java/pull/517#discussion_r384239152", "createdAt": "2020-02-26T02:10:10Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ProxyMethodMapper.java", "diffHunk": "@@ -126,6 +126,7 @@ public ProxyMethod map(Operation operation) {\n         List<ProxyMethodParameter> parameters = new ArrayList<>();\n         for (Parameter parameter : operation.getRequest().getParameters().stream()\n                 .filter(p -> p.getProtocol() != null && p.getProtocol().getHttp() != null).collect(Collectors.toList())) {\n+            parameter.setOperation(operation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzQ2Ng=="}, "originalCommit": {"oid": "339ac75655b6775ff36bb9c656c54f26f8ab446e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3128, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}