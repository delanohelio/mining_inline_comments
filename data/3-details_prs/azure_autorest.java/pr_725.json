{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzcwOTkz", "number": 725, "title": "Fix paging APIs to include headers and host params in next page call", "bodyText": "This PR fixes an issue with Java's generated code forpaging APIs. The generated API that retrieves the first page has params to set the host, headers and other params as specified in the swagger as shown below:\n@Get(\"/eventroutes\")\n@ExpectedResponses({200})\n@UnexpectedResponseExceptionType(ErrorResponseException.class)\nMono<Response<EventRouteCollection>> list(\n       @HostParam(\"$host\") String host,\n       @HeaderParam(\"x-ms-max-item-count\") Integer maxItemCount,\n       @QueryParam(\"api-version\") String apiVersion,\n       Context context);\nThe issue is with the API that retrieves the next page using the next link. The API only takes the nextLink and doesn't include the host param or the headers.\n@Get(\"{nextLink}\")\n@ExpectedResponses({200})\n@UnexpectedResponseExceptionType(ErrorResponseException.class)\nMono<Response<EventRouteCollection>> listNext(\n        @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\nFor some services, the next link returned from first call does not include the hostname and relies on the header to determine the number of items to return in the next page. So, with the current generated code, the call to get the next page (after manually adding hostname to the returned next link) will include all remaining items because the header cannot be set. Looking at .NET and Python implementation, it seems like the host and header params are included for both first and next page APIs. We are planning to do the same for Java too. This will be done only if x-ms-pageable doesn't have operationName defined.\nAfter the fix:\n@Get(\"{nextLink}\")\n@ExpectedResponses({200})\n@UnexpectedResponseExceptionType(ErrorResponseException.class)\nMono<Response<EventRouteCollection>> listNext(\n        @HostParam(\"$host\") String host,\n        @HeaderParam(\"x-ms-max-item-count\") Integer maxItemCount,\n        @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);", "createdAt": "2020-09-30T09:19:57Z", "url": "https://github.com/Azure/autorest.java/pull/725", "merged": true, "mergeCommit": {"oid": "113f8044786a6f8e30285b13455e1b0611df4404"}, "closed": true, "closedAt": "2020-10-01T16:20:55Z", "author": {"login": "srnagar"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN5MI_AH2gAyNDk1MzcwOTkzOjU3NTY5N2E0MjA5NWI3MDhhY2I5ODAyZWY3OTgzNzlmYzYzNjU0M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOHtFIgFqTQ5OTk2NDgzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "575697a42095b708acb9802ef798379fc636543a", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/autorest.java/commit/575697a42095b708acb9802ef798379fc636543a", "committedDate": "2020-09-30T09:16:06Z", "message": "Fix paging APIs to include headers and host params in next page call"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjQ1MjMy", "url": "https://github.com/Azure/autorest.java/pull/725#pullrequestreview-499245232", "createdAt": "2020-09-30T09:26:37Z", "commit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNjozN1rOHaVBjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOToyNjozN1rOHaVBjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ==", "bodyText": "Will azure-core work correctly, when host and nextLink both contains host part of the URL?", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497369485", "createdAt": "2020-09-30T09:26:37Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07aae5f140777b2820e5267e04c3804262381adf", "author": {"user": {"login": "srnagar", "name": "Srikanta"}}, "url": "https://github.com/Azure/autorest.java/commit/07aae5f140777b2820e5267e04c3804262381adf", "committedDate": "2020-09-30T19:12:02Z", "message": "Fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTY0ODM4", "url": "https://github.com/Azure/autorest.java/pull/725#pullrequestreview-499964838", "createdAt": "2020-10-01T02:05:22Z", "commit": {"oid": "07aae5f140777b2820e5267e04c3804262381adf"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMjowNToyM1rOHa3v2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMjowOTowNVrOHa35lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzkzODM5NQ==", "bodyText": "I didn't get it. Previous version of autorest generate the proxy method with only @PathParam, e.g.\n        Mono<Response<ResourceGroupListResult>> listNext(\n            @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n\nwhile updated code had one more @HostParam(\"$host\") String host, which certainly is not same?\nWell, if tests passes, I assume azure-core could handle this.", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497938395", "createdAt": "2020-10-01T02:05:23Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/main/java/fixtures/paging/Pagings.java", "diffHunk": "@@ -202,73 +202,109 @@\n         @ExpectedResponses({200})\n         @UnexpectedResponseExceptionType(HttpResponseException.class)\n         Mono<Response<ProductResultValue>> getNoItemNamePagesNext(\n-                @PathParam(value = \"nextLink\", encoded = true) String nextLink, Context context);\n+                @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+                @HostParam(\"$host\") String host,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM2OTQ4NQ=="}, "originalCommit": {"oid": "575697a42095b708acb9802ef798379fc636543a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk0MDg4NA==", "bodyText": "Any idea what caused this change? Is it due to the additional host?", "url": "https://github.com/Azure/autorest.java/pull/725#discussion_r497940884", "createdAt": "2020-10-01T02:09:05Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-tests/src/test/java/fixtures/paging/PagingTests.java", "diffHunk": "@@ -109,20 +110,22 @@ public void getMultiplePagesFailureUri() {\n             client.getPagings().getMultiplePagesFailureUri().stream().collect(Collectors.toList());\n             fail();\n         } catch (Exception e) {\n-            Assert.assertTrue(e.getCause() instanceof MalformedURLException);\n+            assertTrue(e instanceof HttpResponseException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07aae5f140777b2820e5267e04c3804262381adf"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1897, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}