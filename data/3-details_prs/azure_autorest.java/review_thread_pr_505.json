{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTQxNjM0", "number": 505, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowODozOVrODeug5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowODozOVrODeug5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTQ1OTU3OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/model/clientmodel/ClientMethod.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowODozOVrOFoBYyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowODozOVrOFoBYyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMDA4OQ==", "bodyText": "I've change this code to enable ordering of parameters (required parameters before non-required parameters).", "url": "https://github.com/Azure/autorest.java/pull/505#discussion_r377510089", "createdAt": "2020-02-11T09:08:39Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/model/clientmodel/ClientMethod.java", "diffHunk": "@@ -134,14 +134,15 @@ public final String getClientReference() {\n      * Get the comma-separated list of parameter declarations for this ClientMethod.\n      */\n     public final String getParametersDeclaration() {\n-        return getParameters().stream().map(ClientMethodParameter::getDeclaration).collect(Collectors.joining(\", \"));\n+        List<ClientMethodParameter> methodParameters = onlyRequiredParameters ? getMethodRequiredParameters() : getMethodParameters();\n+        return methodParameters.stream().map(ClientMethodParameter::getDeclaration).collect(Collectors.joining(\", \"));\n     }\n \n     /**\n      * Get the comma-separated list of parameter names for this ClientMethod.\n      */\n     public final String getArgumentList() {\n-        return getParameters().stream().map(ClientMethodParameter::getName).collect(Collectors.joining(\", \"));\n+        return getMethodParameters().stream().map(ClientMethodParameter::getName).collect(Collectors.joining(\", \"));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca6d13cf83d48f68cde4bc76e85465816851497"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3125, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}