{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTg5OTgw", "number": 562, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoyNDo0NlrODr81Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoyNDo0NlrODr81Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDExOTg2OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoyNDo0NlrOF8lshA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTowMjo0N1rOF9Bw0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA==", "bodyText": "Maybe we should not change the serializedName?\nI am not sure how this one actually get implemented. Only assume that the serializedName should remain as it is.", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399076484", "createdAt": "2020-03-27T07:24:46Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MTk4Ng==", "bodyText": "It has to be anything but remain as is. Because at serialization time the other additionalProperties will be temporarily serialized into \u201cadditionalProperties\u201d, which conflicts with this normal property. See Azure/azure-sdk-for-java#9624", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399091986", "createdAt": "2020-03-27T08:05:01Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA5MjIyNA==", "bodyText": "I\u2019m not super happy with this either but cannot think of a better way. I\u2019m open to suggestions", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399092224", "createdAt": "2020-03-27T08:05:35Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwMzY2NQ==", "bodyText": "I see. @JsonProperty(value = \"\") would let valueToTree generate the node with key = field name.\nYeah, not able to think a better approach with this in place.", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399103665", "createdAt": "2020-03-27T08:30:41Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExNjg1OQ==", "bodyText": "BTW, this one seems to work in basic case with only ObjectMapper. I didn't test any corner case (e.g. same key name with existing JsonProperty, flatten etc.).\n    class TestClass {\n        private Map<String, String> additionalProperties;\n\n        @JsonAnySetter\n        void setAdditionalProperties(String key, String value) {\n            if (additionalProperties == null) {\n                additionalProperties = new HashMap<>();\n            }\n            additionalProperties.put(key, value);\n        }\n\n        @JsonAnyGetter\n        public Map<String, String> getAdditionalProperties(){\n            return additionalProperties;\n        }\n    }", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399116859", "createdAt": "2020-03-27T08:56:19Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjMzNw==", "bodyText": "This is gold. These 2 annotations should have been used in place for the custom serializers. But for backward compatibility I'll keep them there but update the new generated code to use this.", "url": "https://github.com/Azure/autorest.java/pull/562#discussion_r399536337", "createdAt": "2020-03-27T21:02:47Z", "author": {"login": "jianghaolu"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelMapper.java", "diffHunk": "@@ -131,6 +131,16 @@ public ClientModel map(ObjectSchema compositeType) {\n                 }\n             }\n             builder.imports(new ArrayList<>(modelImports));\n+            if (hasAdditionalProperties) {\n+                for (Property property : compositeTypeProperties) {\n+                    if (property.getLanguage().getJava().getName().equals(\"additionalProperties\")) {\n+                        property.getLanguage().getJava().setName(\"AdditionalPropertiesProperty\");\n+                    }\n+                    if (property.getSerializedName().equals(\"additionalProperties\")) {\n+                        property.setSerializedName(\"additionalProperties-original\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NjQ4NA=="}, "originalCommit": {"oid": "674bdba1f05a3f58e80d1f30fd29e071b1f2abc5"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3063, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}