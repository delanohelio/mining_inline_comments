{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNDYzMjQ0", "number": 826, "title": "v4 fluentlite, support resource with scope", "bodyText": "sample fluent interface\n    /** The SuppressionContract definition stages. */\n    interface DefinitionStages {\n        /** The first stage of the SuppressionContract definition. */\n        interface Blank extends WithParentResource {\n        }\n        /** The stage of the SuppressionContract definition allowing to specify parent resource. */\n        interface WithParentResource {\n            /**\n             * Specifies resourceUri, recommendationId.\n             *\n             * @param resourceUri The fully qualified Azure Resource Manager identifier of the resource to which the\n             *     recommendation applies.\n             * @param recommendationId The recommendation ID.\n             * @return the next definition stage.\n             */\n            WithCreate withExistingRecommendation(String resourceUri, String recommendationId);\n        }\n        /**\n         * The stage of the SuppressionContract definition which contains all the minimum required properties for the\n         * resource to be created, but also allows for any other optional properties to be specified.\n         */\n        interface WithCreate extends DefinitionStages.WithSuppressionId, DefinitionStages.WithTtl {\n            /**\n             * Executes the create request.\n             *\n             * @return the created resource.\n             */\n            SuppressionContract create();\n\n            /**\n             * Executes the create request.\n             *\n             * @param context The context to associate with this operation.\n             * @return the created resource.\n             */\n            SuppressionContract create(Context context);\n        }\n        /** The stage of the SuppressionContract definition allowing to specify suppressionId. */\n        interface WithSuppressionId {\n            /**\n             * Specifies the suppressionId property: The GUID of the suppression..\n             *\n             * @param suppressionId The GUID of the suppression.\n             * @return the next definition stage.\n             */\n            WithCreate withSuppressionId(String suppressionId);\n        }\n        /** The stage of the SuppressionContract definition allowing to specify ttl. */\n        interface WithTtl {\n            /**\n             * Specifies the ttl property: The duration for which the suppression is valid..\n             *\n             * @param ttl The duration for which the suppression is valid.\n             * @return the next definition stage.\n             */\n            WithCreate withTtl(String ttl);\n        }\n    }\n\nsample code for getById\n    public SuppressionContract getById(String id) {\n        String resourceUri =\n            Utils\n                .getValueFromIdByParameterName(\n                    id,\n                    \"/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}\",\n                    \"resourceUri\");\n        if (resourceUri == null) {\n            throw logger\n                .logExceptionAsError(\n                    new IllegalArgumentException(\n                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'resourceUri'.\", id)));\n        }\n        String recommendationId =\n            Utils\n                .getValueFromIdByParameterName(\n                    id,\n                    \"/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}\",\n                    \"recommendationId\");\n        if (recommendationId == null) {\n            throw logger\n                .logExceptionAsError(\n                    new IllegalArgumentException(\n                        String\n                            .format(\"The resource ID '%s' is not valid. Missing path segment 'recommendations'.\", id)));\n        }\n        String name =\n            Utils\n                .getValueFromIdByParameterName(\n                    id,\n                    \"/{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}\",\n                    \"name\");\n        if (name == null) {\n            throw logger\n                .logExceptionAsError(\n                    new IllegalArgumentException(\n                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'suppressions'.\", id)));\n        }\n        return this.getWithResponse(resourceUri, recommendationId, name, Context.NONE).getValue();\n    }", "createdAt": "2020-12-03T04:30:01Z", "url": "https://github.com/Azure/autorest.java/pull/826", "merged": true, "mergeCommit": {"oid": "157001d23c2e937ff5b134cb1eddf5439a91f22d"}, "closed": true, "closedAt": "2020-12-04T07:49:15Z", "author": {"login": "weidongxu-microsoft"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiLSvQgH2gAyNTMxNDYzMjQ0OmM3NDdmOGFiZTlhMGIyMjc0MGRkZGVkNjAyNWI3NTI1NTRlYWE1OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiy5f3gH2gAyNTMxNDYzMjQ0OjQxZGM5MDQxYTNjMzdjYmYwNTIyNjQ3ODc3ZGUyNjJmNjBlNzU0MzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c747f8abe9a0b22740ddded6025b752554eaa593", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/c747f8abe9a0b22740ddded6025b752554eaa593", "committedDate": "2020-12-02T09:40:05Z", "message": "init implementation for resource with scope in path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "704dd6bd99256038c66d6af2388f11fa16cd2d7e", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/704dd6bd99256038c66d6af2388f11fa16cd2d7e", "committedDate": "2020-12-02T09:48:45Z", "message": "allow non void return type for deleteById"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd650c37cca663ae51fe4d80d88e4d36de94e622", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/bd650c37cca663ae51fe4d80d88e4d36de94e622", "committedDate": "2020-12-03T04:29:14Z", "message": "find scope in resource id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDM1NDE5", "url": "https://github.com/Azure/autorest.java/pull/826#pullrequestreview-543435419", "createdAt": "2020-12-03T04:31:11Z", "commit": {"oid": "bd650c37cca663ae51fe4d80d88e4d36de94e622"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNDozMToxMlrOH95E-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNDozMToxMlrOH95E-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY2MDM0NQ==", "bodyText": "Please review whether this part is OK.\nWith some special handling on \"scope\" parameter (which is expected as 1st segment in path).", "url": "https://github.com/Azure/autorest.java/pull/826#discussion_r534660345", "createdAt": "2020-12-03T04:31:12Z", "author": {"login": "weidongxu-microsoft"}, "path": "fluentgen/src/test/java/com/azure/autorest/fluent/util/GeneratedUtilsClassWorkbenchTests.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for license information.\n+ */\n+\n+package com.azure.autorest.fluent.util;\n+\n+import com.azure.core.util.CoreUtils;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+public class GeneratedUtilsClassWorkbenchTests {\n+\n+    static final class Utils {\n+        static String getValueFromIdByName(String id, String name) {\n+            if (id == null) {\n+                return null;\n+            }\n+            Iterable<String> iterable = Arrays.asList(id.split(\"/\"));\n+            Iterator<String> itr = iterable.iterator();\n+            while (itr.hasNext()) {\n+                String part = itr.next();\n+                if (part != null && !part.trim().isEmpty()) {\n+                    if (part.equalsIgnoreCase(name)) {\n+                        if (itr.hasNext()) {\n+                            return itr.next();\n+                        } else {\n+                            return null;\n+                        }\n+                    }\n+                }\n+            }\n+            return null;\n+        }\n+\n+        static String getValueFromIdByParameterName(String id, String pathTemplate, String parameterName) {\n+            if (id == null || pathTemplate == null) {\n+                return null;\n+            }\n+            String parameterNameParentheses = \"{\" + parameterName +  \"}\";\n+            List<String> idSegmentsReverted = Arrays.asList(id.split(\"/\"));\n+            List<String> pathSegments = Arrays.asList(pathTemplate.split(\"/\"));\n+            Collections.reverse(idSegmentsReverted);\n+            Iterator<String> idItrReverted = idSegmentsReverted.iterator();\n+            int pathIndex = pathSegments.size();\n+            while (idItrReverted.hasNext() && pathIndex > 0) {\n+                String idSegment = idItrReverted.next();\n+                String pathSegment = pathSegments.get(--pathIndex);\n+                if (!CoreUtils.isNullOrEmpty(idSegment) && !CoreUtils.isNullOrEmpty(pathSegment)) {\n+                    if (pathSegment.equalsIgnoreCase(parameterNameParentheses)) {\n+                        if (\"scope\".equalsIgnoreCase(parameterName)\n+                                && pathIndex == 0 || (pathIndex == 1 && pathSegments.get(0).isEmpty())) {\n+                            List<String> segments = new ArrayList<>();\n+                            segments.add(idSegment);\n+                            idItrReverted.forEachRemaining(segments::add);\n+                            Collections.reverse(segments);\n+                            if (segments.size() > 0 && segments.get(0).isEmpty()) {\n+                                segments.remove(0);\n+                            }\n+                            return String.join(\"/\", segments);\n+                        } else {\n+                            return idSegment;\n+                        }\n+                    }\n+                }\n+            }\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd650c37cca663ae51fe4d80d88e4d36de94e622"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3acf6061130ef1bca7666cd6c8b698573454fa9", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/d3acf6061130ef1bca7666cd6c8b698573454fa9", "committedDate": "2020-12-03T13:45:53Z", "message": "generalize scope resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2ecaebfefd85ea2df4005b0c786885d59c75227", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/d2ecaebfefd85ea2df4005b0c786885d59c75227", "committedDate": "2020-12-04T02:48:05Z", "message": "add Utils._getValueFromIdByParameterName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d5700568e89f048efc93567cd42ae53443225f", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/87d5700568e89f048efc93567cd42ae53443225f", "committedDate": "2020-12-04T03:15:45Z", "message": "add WithExistingScope etc. to resource with scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "968e924117072a1307e0dc7b334ec9295606d716", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/968e924117072a1307e0dc7b334ec9295606d716", "committedDate": "2020-12-04T04:14:44Z", "message": "switch to getValueFromIdByParameterName for resource with scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8776bbae69ac8daebe6156253152c9867235608", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/c8776bbae69ac8daebe6156253152c9867235608", "committedDate": "2020-12-04T06:26:50Z", "message": "add live test for resource with scope (advisor)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df50471f3b126ea90722b2c20729705991d3ccb", "author": {"user": {"login": "actions-user", "name": null}}, "url": "https://github.com/Azure/autorest.java/commit/3df50471f3b126ea90722b2c20729705991d3ccb", "committedDate": "2020-12-04T07:33:33Z", "message": "[Automation] Report"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c213030c718ffd256d82271f3fc0de78d1359e83", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/c213030c718ffd256d82271f3fc0de78d1359e83", "committedDate": "2020-12-04T07:46:58Z", "message": "Merge branch 'v4' into v4_fluentlite-scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41dc9041a3c37cbf0522647877de262f60e75431", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/41dc9041a3c37cbf0522647877de262f60e75431", "committedDate": "2020-12-04T07:48:43Z", "message": "Merge branch 'v4_fluentlite-scope' of https://github.com/weidongxu-microsoft/autorest.java into v4_fluentlite-scope"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1857, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}