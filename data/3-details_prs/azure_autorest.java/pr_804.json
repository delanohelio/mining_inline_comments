{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNzUzMjg1", "number": 804, "title": "Support customization code in README", "bodyText": "Now you can add a section in readme to achieve customization like this:\nCustomization\npublic class BodyComplexCustomization extends Customization {\n    @Override\n    public void customize(LibraryCustomization customization) {\n        PackageCustomization implementationModels = customization.getPackage(\"fixtures.bodycomplex.implementation.models\");\n        implementationModels.renameClass(\"Goblinshark\", \"GoblinShark\");\n        implementationModels.getClass(\"DotSalmon\")\n                .renameProperty(\"iswild\", \"isWild\")\n                .renameMethod(\"setIsWild\", \"setWild\")\n                .changeMethodReturnType(\"isWild\", \"boolean\", \"%s\")\n                .changeMethodReturnType(\"setWild\", \"void\", null);\n        implementationModels.getClass(\"CMYKColors\")\n                .renameEnumMember(\"CYAN\", \"TEAL\");\n        ClassCustomization readonlyObj = implementationModels.getClass(\"ReadonlyObj\")\n                .generateGetterAndSetter(\"id\")\n                .changeMethodReturnType(\"getId\", \"UUID\", \"UUID.fromString(%s)\")\n                .changeMethodModifier(\"setId\", \"\");\n        readonlyObj.methodJavadoc(\"getId\").setDescription(\"Get the ID of the object.\");\n        readonlyObj.methodJavadoc(\"setId\").setDescription(\"Set the ID of the object.\")\n                .setReturn(\"The current ReadonlyObj instance\")\n                .setParam(\"id\", \"The ID value\");\n        PackageCustomization root = customization.getPackage(\"fixtures.bodycomplex\");\n        ClassCustomization arrayClient = root.getClass(\"ArrayClient\")\n                .changeMethodReturnType(\"putValid\", \"ArrayClient\", \"this\");\n        arrayClient.classJavadoc().setDescription(\"The sync client containing Array operations.\");\n        arrayClient.methodJavadoc(\"putValid\").setReturn(\"The ArrayClient itself\");\n    }\n}", "createdAt": "2020-11-19T07:59:38Z", "url": "https://github.com/Azure/autorest.java/pull/804", "merged": true, "mergeCommit": {"oid": "53172df8361733e8d51be61a61422ceb68120584"}, "closed": true, "closedAt": "2021-01-06T00:00:58Z", "author": {"login": "jianghaolu"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd-Cf-gH2gAyNTIzNzUzMjg1OjhmMjFjMmU1ZDMxYjc3ZGY5MjFhZDA4NGQ0OTc4NmJhMjc3YmI3Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtTnd-AH2gAyNTIzNzUzMjg1Ojc1Mzc3NDBjYTc0YjdkYTYyMmI0OTI0NDgxNmExM2M0ZDhjYjlkOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/autorest.java/commit/8f21c2e5d31b77df921ad084d49786ba277bb739", "committedDate": "2020-11-19T07:57:53Z", "message": "Support customization code in README"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTYxNzY2", "url": "https://github.com/Azure/autorest.java/pull/804#pullrequestreview-534161766", "createdAt": "2020-11-19T08:03:38Z", "commit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MzQ4NjEw", "url": "https://github.com/Azure/autorest.java/pull/804#pullrequestreview-534348610", "createdAt": "2020-11-19T11:52:04Z", "commit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo1MjowNVrOH2Zz9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo1NDozNlrOH2Z5hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwODA1NA==", "bodyText": "Would the user be able to write this code in a README without the help of compilable code?", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r526808054", "createdAt": "2020-11-19T11:52:05Z", "author": {"login": "srnagar"}, "path": "customization-tests/swagger/README.md", "diffHunk": "@@ -33,6 +33,40 @@ license-header: MICROSOFT_MIT_SMALL\n add-context-parameter: true\n models-subpackage: implementation.models\n context-client-method-parameter: true\n-customization-jar-path: target/bodycomplex-customization-1.0.0-beta.1.jar\n-customization-class: fixtures.bodycomplex.customization.BodyComplexCustomization\n+customization-class: BodyComplexCustomization\n ```\n+\n+### Customization\n+```java\n+public class BodyComplexCustomization extends Customization {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwOTQ3OQ==", "bodyText": "How does the user specify import statements if this code requires some additional classes that have to be imported?", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r526809479", "createdAt": "2020-11-19T11:54:36Z", "author": {"login": "srnagar"}, "path": "customization-tests/swagger/README.md", "diffHunk": "@@ -33,6 +33,40 @@ license-header: MICROSOFT_MIT_SMALL\n add-context-parameter: true\n models-subpackage: implementation.models\n context-client-method-parameter: true\n-customization-jar-path: target/bodycomplex-customization-1.0.0-beta.1.jar\n-customization-class: fixtures.bodycomplex.customization.BodyComplexCustomization\n+customization-class: BodyComplexCustomization\n ```\n+\n+### Customization\n+```java\n+public class BodyComplexCustomization extends Customization {\n+    @Override\n+    public void customize(LibraryCustomization customization) {\n+        PackageCustomization implementationModels = customization.getPackage(\"fixtures.bodycomplex.implementation.models\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0Mzk2MzM4", "url": "https://github.com/Azure/autorest.java/pull/804#pullrequestreview-534396338", "createdAt": "2020-11-19T12:37:33Z", "commit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjozNzozM1rOH2cJhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjozNzozM1rOH2cJhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg0NjM0MQ==", "bodyText": "Could there be a security risk if jarUrl can be loaded from remote?", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r526846341", "createdAt": "2020-11-19T12:37:33Z", "author": {"login": "weidongxu-microsoft"}, "path": "postprocessor/src/main/java/com/azure/autorest/postprocessor/Postprocessor.java", "diffHunk": "@@ -26,16 +40,25 @@ public Postprocessor(Connection connection, String plugin, String sessionId) {\n     super(connection, plugin, sessionId);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public boolean processInternal() {\n     List<String> files = listInputs();\n     Map<String, String> fileContents = files.stream().collect(Collectors.toMap(f -> f, this::readFile));\n \n+    String jarPath = JavaSettings.getInstance().getCustomizationJarPath();\n+    String className = JavaSettings.getInstance().getCustomizationClass();\n+    Map.Entry<String, String> readme = getReadme();\n+\n+    if (className == null || (jarPath == null && readme == null)) {\n+      logger.warn(\"Must provide a JAR path or a README.md config containing the customization class {}\", className);\n+      return false;\n+    }\n+\n     try {\n       //Step 1: post process\n-      String jarPath = JavaSettings.getInstance().getCustomizationJarPath();\n-      String className = JavaSettings.getInstance().getCustomizationClass();\n-      if (jarPath != null && className != null) {\n+      Class<? extends Customization> customizationClass;\n+      if (jarPath != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7537740ca74b7da622b49244816a13c4d8cb9d96", "author": {"user": {"login": "jianghaolu", "name": "Jianghao Lu"}}, "url": "https://github.com/Azure/autorest.java/commit/7537740ca74b7da622b49244816a13c4d8cb9d96", "committedDate": "2021-01-05T23:35:08Z", "message": "Merge branch 'v4' of github.com:Azure/autorest.java into customizationreadme"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1851, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}