{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTkwMTk3", "number": 794, "title": "v4 fluentlite, bug fixes", "bodyText": "", "createdAt": "2020-11-17T07:00:56Z", "url": "https://github.com/Azure/autorest.java/pull/794", "merged": true, "mergeCommit": {"oid": "6e877c563f238771e1980767c9f7a740fb17eb67"}, "closed": true, "closedAt": "2020-11-17T08:30:19Z", "author": {"login": "weidongxu-microsoft"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddTqILgH2gAyNTIyMTkwMTk3OjVjNzQxMzRkNjM1NzExNDg0YjVlM2RlZDBlY2QyNzY3NDhkYTU2ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddU_usgFqTUzMjEwODM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c74134d635711484b5e3ded0ecd276748da5684", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/5c74134d635711484b5e3ded0ecd276748da5684", "committedDate": "2020-11-17T06:35:15Z", "message": "add override of flatten-payload=false in lite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31330a74309409fc524b2ff114f1b2db735f8f7e", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/31330a74309409fc524b2ff114f1b2db735f8f7e", "committedDate": "2020-11-17T06:59:41Z", "message": "Relation could have type AnySchema in it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDY3NTU0", "url": "https://github.com/Azure/autorest.java/pull/794#pullrequestreview-532067554", "createdAt": "2020-11-17T07:02:33Z", "commit": {"oid": "31330a74309409fc524b2ff114f1b2db735f8f7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzowMjozM1rOH0mw0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzowMjozM1rOH0mw0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyMzA5MQ==", "bodyText": "It actually get a AnySchema in it, in this spec (though for me, that definition does not make much sense) https://github.com/Azure/azure-rest-api-specs/blob/master/specification/cloudshell/resource-manager/Microsoft.Portal/stable/2018-10-01/CloudShell.json#L789-L809", "url": "https://github.com/Azure/autorest.java/pull/794#discussion_r524923091", "createdAt": "2020-11-17T07:02:33Z", "author": {"login": "weidongxu-microsoft"}, "path": "extension-base/src/main/java/com/azure/autorest/extension/base/model/codemodel/Relations.java", "diffHunk": "@@ -3,23 +3,23 @@\n import java.util.List;\n \n public class Relations {\n-    private List<ComplexSchema> all;\n+    private List<Schema> all;\n \n-    private List<ComplexSchema> immediate;\n+    private List<Schema> immediate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31330a74309409fc524b2ff114f1b2db735f8f7e"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "645c7780ec5829755c0d67a5b848fd9cf6bb1640", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/645c7780ec5829755c0d67a5b848fd9cf6bb1640", "committedDate": "2020-11-17T07:11:19Z", "message": "add jianghao to owner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f1997311365e6ee875e2aaa6d107e8636e7b529", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/9f1997311365e6ee875e2aaa6d107e8636e7b529", "committedDate": "2020-11-17T07:37:59Z", "message": "throw exception for schema error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDg1Nzcx", "url": "https://github.com/Azure/autorest.java/pull/794#pullrequestreview-532085771", "createdAt": "2020-11-17T07:39:01Z", "commit": {"oid": "9f1997311365e6ee875e2aaa6d107e8636e7b529"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzozOTowMVrOH0nqXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzozOTowMVrOH0nqXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzNzgyMg==", "bodyText": "This is spec error. Some pageable in spec does not have \"value\" property.", "url": "https://github.com/Azure/autorest.java/pull/794#discussion_r524937822", "createdAt": "2020-11-17T07:39:01Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ClientMethodMapper.java", "diffHunk": "@@ -75,9 +76,14 @@ public static ClientMethodMapper getInstance() {\n             Schema responseBodySchema = SchemaUtil.getLowestCommonParent(\n                     operation.getResponses().stream().map(Response::getSchema).filter(Objects::nonNull).collect(Collectors.toList()));\n             ClientModel responseBodyModel = Mappers.getModelMapper().map((ObjectSchema) responseBodySchema);\n-            IType listType = responseBodyModel.getProperties().stream()\n+            Optional<ClientModelProperty> itemPropertyOpt = responseBodyModel.getProperties().stream()\n                     .filter(p -> p.getSerializedName().equals(operation.getExtensions().getXmsPageable().getItemName()))\n-                    .findFirst().get().getWireType();\n+                    .findFirst();\n+            if (!itemPropertyOpt.isPresent()) {\n+                throw new IllegalArgumentException(String.format(\"[JavaCheck/SchemaError] item name %s not found among properties of client model %s\",\n+                        operation.getExtensions().getXmsPageable().getItemName(), responseBodyModel.getName()));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1997311365e6ee875e2aaa6d107e8636e7b529"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9683476a0e3bc850d62410c7ac673a0b591f7777", "author": {"user": {"login": "weidongxu-microsoft", "name": "Weidong Xu"}}, "url": "https://github.com/Azure/autorest.java/commit/9683476a0e3bc850d62410c7ac673a0b591f7777", "committedDate": "2020-11-17T08:06:52Z", "message": "add exception when discriminator is not found"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTA4Mzc4", "url": "https://github.com/Azure/autorest.java/pull/794#pullrequestreview-532108378", "createdAt": "2020-11-17T08:08:44Z", "commit": {"oid": "9683476a0e3bc850d62410c7ac673a0b591f7777"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODowODo0NVrOH0ovXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODowODo0NVrOH0ovXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk1NTQ4Nw==", "bodyText": "This appear to be m4 problem. Spec put the discriminator property to a parent class.\nhttps://github.com/Azure/azure-rest-api-specs/blob/master/specification/security/resource-manager/Microsoft.Security/stable/2020-01-01/externalSecuritySolutions.json#L180-L199", "url": "https://github.com/Azure/autorest.java/pull/794#discussion_r524955487", "createdAt": "2020-11-17T08:08:45Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/util/SchemaUtil.java", "diffHunk": "@@ -90,13 +89,17 @@ public static String getDiscriminatorSerializedName(ObjectSchema compositeType)\n         if (compositeType.getDiscriminator() != null) {\n             discriminator = compositeType.getDiscriminator().getProperty().getSerializedName();\n         } else if (compositeType.getDiscriminatorValue() != null) {\n-            for (ComplexSchema parent : compositeType.getParents().getAll()) {\n-                if (((ObjectSchema) parent).getDiscriminator() != null) {\n+            for (Schema parent : compositeType.getParents().getAll()) {\n+                if (parent instanceof ObjectSchema && ((ObjectSchema) parent).getDiscriminator() != null) {\n                     discriminator = ((ObjectSchema) parent).getDiscriminator().getProperty().getSerializedName();\n                     break;\n                 }\n             }\n         }\n+        if (discriminator == null) {\n+            throw new IllegalStateException(String.format(\"discriminator not found in type %s and its parents\",\n+                    compositeType.getLanguage().getJava().getName()));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9683476a0e3bc850d62410c7ac673a0b591f7777"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1847, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}