{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDA2NTA4", "number": 566, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToxMTo1NlrODuS0iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNzo0M1rODudHzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODY5NDQ5OnYy", "diffSide": "RIGHT", "path": "fluentgen/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToxMTo1NlrOGANHPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMzo0Mjo0NVrOGAuwpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg2ODAyOA==", "bodyText": "A customized google-java-format, tweaked to match our checkstyle.\ngoogle/google-java-format@master...weidongxu-microsoft:tweak_format", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r402868028", "createdAt": "2020-04-03T09:11:56Z", "author": {"login": "weidongxu-microsoft"}, "path": "fluentgen/pom.xml", "diffHunk": "@@ -33,6 +40,12 @@\n       <version>3.15.13</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>com.google.googlejavaformat</groupId>\n+      <artifactId>google-java-format</artifactId>\n+      <version>1.8_customized-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb5ffd5b516c2ad6612df4a9d79475b25f54bc7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNTYwNA==", "bodyText": "However it requires Java 11.", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r403135604", "createdAt": "2020-04-03T16:40:30Z", "author": {"login": "weidongxu-microsoft"}, "path": "fluentgen/pom.xml", "diffHunk": "@@ -33,6 +40,12 @@\n       <version>3.15.13</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>com.google.googlejavaformat</groupId>\n+      <artifactId>google-java-format</artifactId>\n+      <version>1.8_customized-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg2ODAyOA=="}, "originalCommit": {"oid": "acb5ffd5b516c2ad6612df4a9d79475b25f54bc7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQxOTMwMA==", "bodyText": "Use java version and reflect to call it. So it will pass compile, and disabled in runtime if version is lower than 11.", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r403419300", "createdAt": "2020-04-04T03:42:45Z", "author": {"login": "weidongxu-microsoft"}, "path": "fluentgen/pom.xml", "diffHunk": "@@ -33,6 +40,12 @@\n       <version>3.15.13</version>\n     </dependency>\n \n+    <dependency>\n+      <groupId>com.google.googlejavaformat</groupId>\n+      <artifactId>google-java-format</artifactId>\n+      <version>1.8_customized-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg2ODAyOA=="}, "originalCommit": {"oid": "acb5ffd5b516c2ad6612df4a9d79475b25f54bc7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODY5OTE4OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/template/ProxyTemplate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToxMzoxNFrOGANKLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOToxMzoxNFrOGANKLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg2ODc4Mg==", "bodyText": "limit 20\nMaybe we should put these to some configure file.", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r402868782", "createdAt": "2020-04-03T09:13:14Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/template/ProxyTemplate.java", "diffHunk": "@@ -118,6 +118,14 @@ public final void write(Proxy restAPI, JavaClass classBlock) {\n         }\n     }\n \n+    private static String serviceInterfaceWithLengthLimit(String serviceInterfaceName) {\n+        final int lengthLimit = 20;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acb5ffd5b516c2ad6612df4a9d79475b25f54bc7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTEwOTk0OnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/util/CodeNamer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMToxMzo0MlrOGARGPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMToxMzo0MlrOGARGPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkzMzMwOQ==", "bodyText": "_ is keyword in Java 9.", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r402933309", "createdAt": "2020-04-03T11:13:42Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/util/CodeNamer.java", "diffHunk": "@@ -235,6 +235,9 @@ public static String getEnumMemberName(String name) {\n                 }\n             }\n         }\n+        if (\"_\".equals(result)) {   // \"_\" is keyword in Java 9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a08cda82bcd543fa180475dfeadec100ec03142"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM4MjIyOnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/model/clientmodel/ServiceClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNzo0M1rOGAdWRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNzo0M1rOGAdWRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNDAyMA==", "bodyText": "Builder class should not need anything from client method.", "url": "https://github.com/Azure/autorest.java/pull/566#discussion_r403134020", "createdAt": "2020-04-03T16:37:43Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/model/clientmodel/ServiceClient.java", "diffHunk": "@@ -142,8 +142,10 @@ public final String getClientBaseName() {\n      * @param includeImplementationImports Whether or not to include imports that are only necessary for method implementations.\n      */\n     public final void addImportsTo(Set<String> imports, boolean includeImplementationImports, boolean includeBuilderImports, JavaSettings settings) {\n-        for (ClientMethod clientMethod : getClientMethods()) {\n-            clientMethod.addImportsTo(imports, includeImplementationImports, settings);\n+        if (!includeBuilderImports) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "016d8aff29713191a3a505fbc8b93c1fb59a5080"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3064, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}