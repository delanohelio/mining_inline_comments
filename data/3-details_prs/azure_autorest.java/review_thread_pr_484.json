{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMDA1Nzc5", "number": 484, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo1ODo0MVrODZGt2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo1ODo0MVrODZGt2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjUxMDMzOnYy", "diffSide": "RIGHT", "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelPropertyMapper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo1ODo0MVrOFfUHcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMToxNDo1OFrOFgN9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTc2Mw==", "bodyText": "Shouldn't isContant be true even is the valueType is not of type StringSchema? isConstant should be set to true if property.getSchema() instanceof ConstantSchema is true.", "url": "https://github.com/Azure/autorest.java/pull/484#discussion_r368379763", "createdAt": "2020-01-20T05:58:41Z", "author": {"login": "srnagar"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelPropertyMapper.java", "diffHunk": "@@ -87,6 +89,16 @@ public ClientModelProperty map(Property property) {\n             }\n         }\n \n+        boolean isConstant = false;\n+        String defaultValue = null;\n+        if (property.getSchema() instanceof ConstantSchema) {\n+            ConstantSchema constantSchema = (ConstantSchema) property.getSchema();\n+            if (constantSchema.getValueType() instanceof StringSchema) {\n+                isConstant = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d8259de29931f54418981bca7ce8b2ab45e0b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4MDc1Mw==", "bodyText": "Yes, it should be. The defaultValue would also be different in this non-string case, and also that ConstantSchema would probably get a Class of its own.\nThe problem here is that currently I do not have any case that have a constant which is not a string, Hence I only do for string (mostly to unblock our team converting on management-plane SDK to v2, like the one in commit).\nThat is reason I was asking\n\nDo we have any swagger test on constant model property?\n\nin #483\nIf you have any case (test, or real data-plane or management-plane swagger) that have a non-string constant, please do let me know. Thanks.", "url": "https://github.com/Azure/autorest.java/pull/484#discussion_r368380753", "createdAt": "2020-01-20T06:04:25Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelPropertyMapper.java", "diffHunk": "@@ -87,6 +89,16 @@ public ClientModelProperty map(Property property) {\n             }\n         }\n \n+        boolean isConstant = false;\n+        String defaultValue = null;\n+        if (property.getSchema() instanceof ConstantSchema) {\n+            ConstantSchema constantSchema = (ConstantSchema) property.getSchema();\n+            if (constantSchema.getValueType() instanceof StringSchema) {\n+                isConstant = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTc2Mw=="}, "originalCommit": {"oid": "31d8259de29931f54418981bca7ce8b2ab45e0b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4MTA3Nw==", "bodyText": "Well, I don't know of any swagger that has non-string constants but it should be fairly easy to create one. Take an existing swagger and replace one of the string constants with integer constants and update the schema for it.\nAlso, you can go ahead and merge this change as this can be tested and updated in a separate PR for non-string constants.", "url": "https://github.com/Azure/autorest.java/pull/484#discussion_r369181077", "createdAt": "2020-01-21T18:52:41Z", "author": {"login": "srnagar"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelPropertyMapper.java", "diffHunk": "@@ -87,6 +89,16 @@ public ClientModelProperty map(Property property) {\n             }\n         }\n \n+        boolean isConstant = false;\n+        String defaultValue = null;\n+        if (property.getSchema() instanceof ConstantSchema) {\n+            ConstantSchema constantSchema = (ConstantSchema) property.getSchema();\n+            if (constantSchema.getValueType() instanceof StringSchema) {\n+                isConstant = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTc2Mw=="}, "originalCommit": {"oid": "31d8259de29931f54418981bca7ce8b2ab45e0b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMyNzUyMQ==", "bodyText": "Got it. I will try to test non-string constant a bit later (after holiday), maybe try stealing some test case from Garrett's repo :-).\nCurrently still busy converting fluent java to azure core.", "url": "https://github.com/Azure/autorest.java/pull/484#discussion_r369327521", "createdAt": "2020-01-22T01:14:58Z", "author": {"login": "weidongxu-microsoft"}, "path": "javagen/src/main/java/com/azure/autorest/mapper/ModelPropertyMapper.java", "diffHunk": "@@ -87,6 +89,16 @@ public ClientModelProperty map(Property property) {\n             }\n         }\n \n+        boolean isConstant = false;\n+        String defaultValue = null;\n+        if (property.getSchema() instanceof ConstantSchema) {\n+            ConstantSchema constantSchema = (ConstantSchema) property.getSchema();\n+            if (constantSchema.getValueType() instanceof StringSchema) {\n+                isConstant = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTc2Mw=="}, "originalCommit": {"oid": "31d8259de29931f54418981bca7ce8b2ab45e0b4"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3115, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}