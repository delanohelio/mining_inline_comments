{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNzMwMDg3", "number": 1912, "title": "[HUDI-1098] Adding OptimisticConsistencyGuard to be used during FinalizeWrite instead of FailSafeConsistencyGuard", "bodyText": "What is the purpose of the pull request\nIntroducing a OptimisticConsistencyGuard for eventual consistent stores. This will sleep for configured period of time only on APPEAR. It is a no-op for DISAPPEAR. This is specifically for eventually consistent stores like S3A filesystem and here is the rational.\nThis guard is used when deleting data files corresponding to marker files that needs to be deleted.\nThere are two tricky cases that needs to be considered.\nCase 1 : A data file creation is eventually consistent and hence\nwhen issuing deletes, the file may not be found.\nCase 2: a data file was never created in the first place as the process crashed.\nIn S3A, GET and LIST are eventually consistent, and delete() implementation internally does a LIST/EXISTS.\nPrior to this patch, hudi was leveraging FailSafeConsistencyGuard which was doing the following to delete data files.\nStep1: wait for all files to appear with linear backoff timer w/ a max timer.\nStep2: issue deletes\nStep3: wait for all files to disappear.\nStep1 and Step2 is handled by {@link FailSafeConsistencyGuard}.\nWe are simplifying these steps with OptimisticConsistencyGuard as below.\nStep1: Check if all files exists. If yes, proceed to next step. Else Sleep for a configured threshold before proceeding to next step.\nStep2: issue deletes.\nWith this, if any files that was created, should be available within configured threshold(eventual consistency).\nDelete() will return false if FileNotFound. So, both cases are taken care of this {@link ConsistencyGuard}.\nStep3 is not required since if FileIsNotFound, delete() would have returned false and hence we ignore the return values. But if file exists and if file could not be deleted, some exception would be thrown.\nBrief change log\n\nAdded OptimisticConsistencyGuard to check for file/files appearance in eventually consistent cloud stores\nAdded a new config in ConsistencyGuardConfig for the sleep timer (hoodie.optimistic.consistency.guard.sleep_time_ms)\nFixed instantiation of ConsistencyGuard in HoodieTable to use OptimisticConsistencyGuard\n\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded tests to TestConsistencyGuard to verify the change.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-08-04T12:19:07Z", "url": "https://github.com/apache/hudi/pull/1912", "merged": true, "mergeCommit": {"oid": "858eda85d7a5e4ee3be9aa28e7e7311bc8fb8983"}, "closed": true, "closedAt": "2020-08-10T00:51:38Z", "author": {"login": "nsivabalan"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7lqcuAFqTQ2MDc1OTE4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9VK0QgBqjM2MzY4MTkzNDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzU5MTgw", "url": "https://github.com/apache/hudi/pull/1912#pullrequestreview-460759180", "createdAt": "2020-08-04T12:20:28Z", "commit": {"oid": "af270d96b529731f7c8e60ab98cbda9e90c64acf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjoyMDoyOFrOG7d36A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjoyMDoyOFrOG7d36A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwODYxNg==", "bodyText": "I have also fixed some default configs. If incase someone is using FailSafeConsistencyGuard, in case of data file not present, this guard will execute for 256 secs which may not be required. Hence curtailing to 140 secs max.", "url": "https://github.com/apache/hudi/pull/1912#discussion_r465008616", "createdAt": "2020-08-04T12:20:28Z", "author": {"login": "nsivabalan"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/fs/ConsistencyGuardConfig.java", "diffHunk": "@@ -36,15 +36,15 @@\n   // time between successive attempts to ensure written data's metadata is consistent on storage\n   private static final String INITIAL_CONSISTENCY_CHECK_INTERVAL_MS_PROP =\n       \"hoodie.consistency.check.initial_interval_ms\";\n-  private static long DEFAULT_INITIAL_CONSISTENCY_CHECK_INTERVAL_MS = 2000L;\n+  private static long DEFAULT_INITIAL_CONSISTENCY_CHECK_INTERVAL_MS = 400L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af270d96b529731f7c8e60ab98cbda9e90c64acf"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af270d96b529731f7c8e60ab98cbda9e90c64acf", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/af270d96b529731f7c8e60ab98cbda9e90c64acf", "committedDate": "2020-08-04T12:09:27Z", "message": "Adding TimedWaitConsistencyGuard"}, "afterCommit": {"oid": "80ca8e73099ad290eda898365da7560fb4039831", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/80ca8e73099ad290eda898365da7560fb4039831", "committedDate": "2020-08-04T12:20:53Z", "message": "Adding TimedWaitConsistencyGuard"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80ca8e73099ad290eda898365da7560fb4039831", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/80ca8e73099ad290eda898365da7560fb4039831", "committedDate": "2020-08-04T12:20:53Z", "message": "Adding TimedWaitConsistencyGuard"}, "afterCommit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/bf6a145440c3ff1b2f4dc8431e03e7d31f93b265", "committedDate": "2020-08-04T13:09:30Z", "message": "Adding TimedWaitConsistencyGuard"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzk4MzE0", "url": "https://github.com/apache/hudi/pull/1912#pullrequestreview-460798314", "createdAt": "2020-08-04T13:12:32Z", "commit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxMjozM1rOG7fwPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxMjozM1rOG7fwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzOTQyMg==", "bodyText": "I see FSUtils also instantiates FailSafeConsistencyGuard for WrapperFileSystem. Do we need similar reflection based instantiation fix there too?\nhttps://github.com/apache/hudi/blob/master/hudi-common/src/main/java/org/apache/hudi/common/fs/FSUtils.java\nCheck lines 529 to 535.", "url": "https://github.com/apache/hudi/pull/1912#discussion_r465039422", "createdAt": "2020-08-04T13:12:33Z", "author": {"login": "nsivabalan"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieTable.java", "diffHunk": "@@ -505,16 +507,26 @@ private boolean waitForCondition(String partitionPath, Stream<Pair<String, Strin\n     final FileSystem fileSystem = metaClient.getRawFs();\n     List<String> fileList = partitionFilePaths.map(Pair::getValue).collect(Collectors.toList());\n     try {\n-      getFailSafeConsistencyGuard(fileSystem).waitTill(partitionPath, fileList, visibility);\n+      getConsistencyGuard(fileSystem, config.getConsistencyGuardConfig()).waitTill(partitionPath, fileList, visibility);\n     } catch (IOException | TimeoutException ioe) {\n       LOG.error(\"Got exception while waiting for files to show up\", ioe);\n       return false;\n     }\n     return true;\n   }\n \n-  private ConsistencyGuard getFailSafeConsistencyGuard(FileSystem fileSystem) {\n-    return new FailSafeConsistencyGuard(fileSystem, config.getConsistencyGuardConfig());\n+  /**\n+   * Instantiate {@link ConsistencyGuard} via reflection, passing in the required args.\n+   * <p>\n+   * Default consistencyGuard class is {@link FailSafeConsistencyGuard}.\n+   */\n+  public static ConsistencyGuard getConsistencyGuard(FileSystem fs, ConsistencyGuardConfig consistencyGuardConfig) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTMyNzQ0", "url": "https://github.com/apache/hudi/pull/1912#pullrequestreview-460932744", "createdAt": "2020-08-04T15:36:18Z", "commit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTozNjoxOVrOG7mC7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTozNjoxOVrOG7mC7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0MjUwOA==", "bodyText": "I am repurposing \"hoodie.consistency.check.initial_interval_ms\" for this sleep time. Let me know if we need to introduce a new config for this.", "url": "https://github.com/apache/hudi/pull/1912#discussion_r465142508", "createdAt": "2020-08-04T15:36:19Z", "author": {"login": "nsivabalan"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/fs/TimedWaitOnAppearConsistencyGaurd.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.fs;\n+\n+import org.apache.hudi.common.util.ValidationUtils;\n+\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.concurrent.TimeoutException;\n+\n+/**\n+ * A consistency guard which sleeps for configured period of time only on APPEAR. It is a no-op for DISAPPEAR.\n+ * This is specifically for S3A filesystem and here is the rational.\n+ * This guard is used when deleting data files corresponding to marker files that needs to be deleted.\n+ * There are two tricky cases that needs to be considered. Case 1 : A data file creation is eventually consistent and hence\n+ * when issuing deletes, it may not be found. Case 2: a data file was never created in the first place since the process crashed.\n+ * In S3A, GET and LIST are eventually consistent, and delete() implementation internally does a LIST/EXISTS.\n+ * Prior to this patch, hudi was leveraging {@link FailSafeConsistencyGuard} which was doing the following to delete data files.\n+ * Step1: wait for all files to appear with linear backoff.\n+ * Step2: issue deletes\n+ * Step3: wait for all files to disappear with linear backoff.\n+ * Step1 and Step2 is handled by {@link FailSafeConsistencyGuard}.\n+ *\n+ * We are simplifying these steps with {@link TimedWaitOnAppearConsistencyGaurd}.\n+ * Step1: Sleep for a configured threshold.\n+ * Step2: issue deletes.\n+ *\n+ * With this, if any files that was created, should be available within configured threshold(eventual consistency).\n+ * Delete() will return false if FileNotFound. So, both cases are taken care of this {@link ConsistencyGuard}.\n+ */\n+public class TimedWaitOnAppearConsistencyGaurd implements ConsistencyGuard {\n+\n+  private static final Logger LOG = LogManager.getLogger(TimedWaitOnAppearConsistencyGaurd.class);\n+\n+  private final ConsistencyGuardConfig consistencyGuardConfig;\n+\n+  public TimedWaitOnAppearConsistencyGaurd(FileSystem fs, ConsistencyGuardConfig consistencyGuardConfig) {\n+    this.consistencyGuardConfig = consistencyGuardConfig;\n+    ValidationUtils.checkArgument(consistencyGuardConfig.isConsistencyCheckEnabled());\n+  }\n+\n+  @Override\n+  public void waitTillFileAppears(Path filePath) throws IOException, TimeoutException {\n+    try {\n+      Thread.sleep(consistencyGuardConfig.getInitialConsistencyCheckIntervalMs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265"}, "originalPosition": 66}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf6a145440c3ff1b2f4dc8431e03e7d31f93b265", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/bf6a145440c3ff1b2f4dc8431e03e7d31f93b265", "committedDate": "2020-08-04T13:09:30Z", "message": "Adding TimedWaitConsistencyGuard"}, "afterCommit": {"oid": "806c0b50c12b66535f29981d2d2f4f1a13e6cdc3", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/806c0b50c12b66535f29981d2d2f4f1a13e6cdc3", "committedDate": "2020-08-08T13:05:52Z", "message": "Adding OptimisticConsistencyGuard to be used during FinalizeWrite"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "806c0b50c12b66535f29981d2d2f4f1a13e6cdc3", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/806c0b50c12b66535f29981d2d2f4f1a13e6cdc3", "committedDate": "2020-08-08T13:05:52Z", "message": "Adding OptimisticConsistencyGuard to be used during FinalizeWrite"}, "afterCommit": {"oid": "d55048a617f4a5792573ac943ccfd8089d397dda", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/d55048a617f4a5792573ac943ccfd8089d397dda", "committedDate": "2020-08-08T15:22:50Z", "message": "Adding OptimisticConsistencyGuard to be used during FinalizeWrite"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b13eac3e3cecf3b3c4089f352fe0b289aec98c8c", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/b13eac3e3cecf3b3c4089f352fe0b289aec98c8c", "committedDate": "2020-08-09T20:49:35Z", "message": "Addressing comments"}, "afterCommit": {"oid": "2d24ca42082559f07b5ca4c0c627b99420126378", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/2d24ca42082559f07b5ca4c0c627b99420126378", "committedDate": "2020-08-09T20:52:48Z", "message": "Addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTA2MzYy", "url": "https://github.com/apache/hudi/pull/1912#pullrequestreview-463906362", "createdAt": "2020-08-09T21:56:08Z", "commit": {"oid": "2d24ca42082559f07b5ca4c0c627b99420126378"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9879eaa3a7e770376d8a818471d3fc9c5ad9865e", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/9879eaa3a7e770376d8a818471d3fc9c5ad9865e", "committedDate": "2020-08-09T22:14:20Z", "message": "[HUDI-1098] Adding OptimisticConsistencyGuard to be used during FinalizeWrite"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d24ca42082559f07b5ca4c0c627b99420126378", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/2d24ca42082559f07b5ca4c0c627b99420126378", "committedDate": "2020-08-09T20:52:48Z", "message": "Addressing comments"}, "afterCommit": {"oid": "9879eaa3a7e770376d8a818471d3fc9c5ad9865e", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/9879eaa3a7e770376d8a818471d3fc9c5ad9865e", "committedDate": "2020-08-09T22:14:20Z", "message": "[HUDI-1098] Adding OptimisticConsistencyGuard to be used during FinalizeWrite"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4769, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}