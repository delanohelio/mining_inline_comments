{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTYwNjYy", "number": 1720, "title": "[HUDI-1003] Handle partitions correctly for syncing hudi non-parititioned table to hive", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nThis PR aims to create the table normally without partitions, when sync hudi non-parititioned table to hive.\nJIRA: https://issues.apache.org/jira/browse/HUDI-1003\nBrief change log\n\nJudge whether to reset partitionFields to empty or not according to HIVE_PARTITION_EXTRACTOR_CLASS_OPT_KEY, during building HiveSyncConfig.\n\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is a trivial rework / code cleanup without any test coverage.\n(or)\nThis pull request is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end.\nAdded HoodieClientWriteTest to verify the change.\nManually verified the change by running a job locally.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-06-09T06:13:18Z", "url": "https://github.com/apache/hudi/pull/1720", "merged": true, "mergeCommit": {"oid": "043eb564c2c7e4578237b5d0f2bbad8276db51f4"}, "closed": true, "closedAt": "2020-06-15T11:02:04Z", "author": {"login": "luoyajund"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclqfCwAH2gAyNDMxNTYwNjYyOmI3Yzc3MjIzYWI0YjJhZWY1NjYwYjdlZDUxMTdlNjc5NzRhMzk2MWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrekSmgFqTQzMDUzNzY1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7c77223ab4b2aef5660b7ed5117e67974a3961b", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/b7c77223ab4b2aef5660b7ed5117e67974a3961b", "committedDate": "2020-05-28T09:31:12Z", "message": "[HUDI-934] Add processing logic with the decimal logical type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9294c6b3f0407eabdf50d535a0a963f7ad326ffa", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/9294c6b3f0407eabdf50d535a0a963f7ad326ffa", "committedDate": "2020-05-28T11:01:58Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d47f9021a6d40a393409a81b600572d0be0f12d4", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/d47f9021a6d40a393409a81b600572d0be0f12d4", "committedDate": "2020-05-28T12:41:32Z", "message": "[HUDI-934] Add processing logic for the decimal LogicalType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0963b4b1e17067229e00d2f9c9e486f6a10384c", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/a0963b4b1e17067229e00d2f9c9e486f6a10384c", "committedDate": "2020-05-29T02:49:29Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05ac11589aa892804b054ba6ea4e0618e2aa3d1f", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/05ac11589aa892804b054ba6ea4e0618e2aa3d1f", "committedDate": "2020-05-30T01:11:47Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd9835af1d0da85a64012609856fda5afeaf2fc", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/cfd9835af1d0da85a64012609856fda5afeaf2fc", "committedDate": "2020-06-09T05:30:26Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db35a1647b057c7dfb3516221e88e23afb6e635", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/9db35a1647b057c7dfb3516221e88e23afb6e635", "committedDate": "2020-06-09T05:46:58Z", "message": "[HUDI-1003] Handle partitions correctly for syncing hudi non-parititioned table to hive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d92ce1682c4c11361728b5ada086f4a1cb2c2b53", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/d92ce1682c4c11361728b5ada086f4a1cb2c2b53", "committedDate": "2020-06-09T08:33:36Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzA2NjAy", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-427306602", "createdAt": "2020-06-09T15:52:22Z", "commit": {"oid": "d92ce1682c4c11361728b5ada086f4a1cb2c2b53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo1MjoyMlrOGhRRcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo1MjoyMlrOGhRRcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzOTE4NQ==", "bodyText": "can we add a test case for this?", "url": "https://github.com/apache/hudi/pull/1720#discussion_r437539185", "createdAt": "2020-06-09T15:52:22Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/HoodieSparkSqlWriter.scala", "diffHunk": "@@ -247,7 +247,13 @@ private[hudi] object HoodieSparkSqlWriter {\n     hiveSyncConfig.hivePass = parameters(HIVE_PASS_OPT_KEY)\n     hiveSyncConfig.jdbcUrl = parameters(HIVE_URL_OPT_KEY)\n     hiveSyncConfig.partitionFields =\n-      ListBuffer(parameters(HIVE_PARTITION_FIELDS_OPT_KEY).split(\",\").map(_.trim).filter(!_.isEmpty).toList: _*)\n+      // Reset partition_fields to empty, when sync hudi non-parititioned table to hive.\n+      if (classOf[NonPartitionedExtractor].getName.equals(parameters(HIVE_PARTITION_EXTRACTOR_CLASS_OPT_KEY))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92ce1682c4c11361728b5ada086f4a1cb2c2b53"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c07cb64250e7adc949fa78daa2d95e2dcee053f6", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/c07cb64250e7adc949fa78daa2d95e2dcee053f6", "committedDate": "2020-06-12T06:43:41Z", "message": "[WIP] Add test case for syncing non-parititioned table to hive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4afe22dcdbeba4b6e06a27c551ee58a0f3c3119a", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/4afe22dcdbeba4b6e06a27c551ee58a0f3c3119a", "committedDate": "2020-06-12T08:28:22Z", "message": "Modify the comments and warning log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08bde34c9765ea37f940498bee07384806adce65", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/08bde34c9765ea37f940498bee07384806adce65", "committedDate": "2020-06-12T11:41:56Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/af82cda0a912df2eb0aa76c56cac4f2683eb8a3e", "committedDate": "2020-06-12T12:41:40Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTA2OTI2", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430106926", "createdAt": "2020-06-13T02:34:49Z", "commit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMjozNDo1MFrOGjVQsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMjozNDo1MFrOGjVQsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcwMTY4MQ==", "bodyText": "I think we would move the logic to hudi-hive module, using sparkdatasource writing data to hudi and sync to hive is one way, also, users may also use api(HiveSyncTool) to sync to hive, we should handle this case as well.", "url": "https://github.com/apache/hudi/pull/1720#discussion_r439701681", "createdAt": "2020-06-13T02:34:50Z", "author": {"login": "leesf"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/HoodieSparkSqlWriter.scala", "diffHunk": "@@ -247,7 +247,13 @@ private[hudi] object HoodieSparkSqlWriter {\n     hiveSyncConfig.hivePass = parameters(HIVE_PASS_OPT_KEY)\n     hiveSyncConfig.jdbcUrl = parameters(HIVE_URL_OPT_KEY)\n     hiveSyncConfig.partitionFields =\n-      ListBuffer(parameters(HIVE_PARTITION_FIELDS_OPT_KEY).split(\",\").map(_.trim).filter(!_.isEmpty).toList: _*)\n+      // Set partitionFields to empty, when the NonPartitionedExtractor is used\n+      if (classOf[NonPartitionedExtractor].getName.equals(parameters(HIVE_PARTITION_EXTRACTOR_CLASS_OPT_KEY))) {\n+        log.warn(s\"Parameter '$HIVE_PARTITION_FIELDS_OPT_KEY' is ignored, since the NonPartitionedExtractor is used\")\n+        Array.empty[String].toList\n+      } else {\n+        ListBuffer(parameters(HIVE_PARTITION_FIELDS_OPT_KEY).split(\",\").map(_.trim).filter(!_.isEmpty).toList: _*)\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTA2OTUz", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430106953", "createdAt": "2020-06-13T02:35:18Z", "commit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMjozNToxOVrOGjVQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwMjozNToxOVrOGjVQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcwMTcyMA==", "bodyText": "if not used, it would be removed.", "url": "https://github.com/apache/hudi/pull/1720#discussion_r439701720", "createdAt": "2020-06-13T02:35:19Z", "author": {"login": "leesf"}, "path": "pom.xml", "diffHunk": "@@ -761,10 +761,10 @@\n         <version>${hive.version}</version>\n         <scope>provided</scope>\n         <exclusions>\n-          <exclusion>\n+          <!--<exclusion>\n             <groupId>javax.transaction</groupId>\n             <artifactId>jta</artifactId>\n-          </exclusion>\n+          </exclusion>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTA2OTcy", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430106972", "createdAt": "2020-06-13T02:35:44Z", "commit": {"oid": "af82cda0a912df2eb0aa76c56cac4f2683eb8a3e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "019e8c4a0a94b3349303e9feb1c388e90542d321", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/019e8c4a0a94b3349303e9feb1c388e90542d321", "committedDate": "2020-06-13T12:42:32Z", "message": "Modify the logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81498b56998d24f667844b64f4f5c9670bec7f2a", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/81498b56998d24f667844b64f4f5c9670bec7f2a", "committedDate": "2020-06-13T14:10:47Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTQyOTAx", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430142901", "createdAt": "2020-06-13T14:27:34Z", "commit": {"oid": "81498b56998d24f667844b64f4f5c9670bec7f2a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNDoyNzozNFrOGjXyUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxNDoyNzozNFrOGjXyUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0MzA1Ng==", "bodyText": "remove this one?", "url": "https://github.com/apache/hudi/pull/1720#discussion_r439743056", "createdAt": "2020-06-13T14:27:34Z", "author": {"login": "leesf"}, "path": "hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -18,6 +18,7 @@\n \n package org.apache.hudi.hive;\n \n+import static jdk.nashorn.internal.runtime.regexp.joni.Config.log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81498b56998d24f667844b64f4f5c9670bec7f2a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "575fb2454e7de39fec1f415c85d09aea49ea5c9c", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/575fb2454e7de39fec1f415c85d09aea49ea5c9c", "committedDate": "2020-06-14T07:33:09Z", "message": "Modify the logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66d67705f75d660b4ec5327af5ed9acbf28b5f3e", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/66d67705f75d660b4ec5327af5ed9acbf28b5f3e", "committedDate": "2020-06-14T07:45:17Z", "message": "remove the dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjA5OTk4", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430209998", "createdAt": "2020-06-14T11:22:42Z", "commit": {"oid": "66d67705f75d660b4ec5327af5ed9acbf28b5f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMToyMjo0MlrOGjcbrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMToyMjo0MlrOGjcbrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxOTE4MQ==", "bodyText": "I think we would remove this assert.", "url": "https://github.com/apache/hudi/pull/1720#discussion_r439819181", "createdAt": "2020-06-14T11:22:42Z", "author": {"login": "leesf"}, "path": "hudi-hive-sync/src/test/java/org/apache/hudi/hive/TestHiveSyncTool.java", "diffHunk": "@@ -457,6 +457,37 @@ public void testMultiPartitionKeySync(boolean useJdbc) throws Exception {\n         \"The last commit that was sycned should be updated in the TBLPROPERTIES\");\n   }\n \n+  @ParameterizedTest\n+  @MethodSource(\"useJdbc\")\n+  public void testNonPartitionedSync(boolean useJdbc) throws Exception {\n+    HiveTestUtil.hiveSyncConfig.useJdbc = useJdbc;\n+    String instantTime = \"100\";\n+    HiveTestUtil.createCOWTable(instantTime, 5, true);\n+\n+    HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig);\n+    // Set partition value extractor to NonPartitionedExtractor\n+    hiveSyncConfig.partitionValueExtractorClass = NonPartitionedExtractor.class.getCanonicalName();\n+    hiveSyncConfig.tableName = \"non_partitioned\";\n+    hiveSyncConfig.partitionFields = Arrays.asList(\"year\", \"month\", \"day\");\n+    HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName);\n+\n+    HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig, HiveTestUtil.getHiveConf(), HiveTestUtil.fileSystem);\n+    assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\n+            \"Table \" + hiveSyncConfig.tableName + \" should not exist initially\");\n+    // Lets do the sync\n+    HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig, HiveTestUtil.getHiveConf(), HiveTestUtil.fileSystem);\n+    tool.syncHoodieTable();\n+    assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\n+            \"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\");\n+    assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),\n+            hiveClient.getDataSchema().getColumns().size(),\n+            \"Hive Schema should match the table schema\uff0cignoring the partition fields\");\n+    assertEquals(0, hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\n+            \"Table should not have partitions because of the NonPartitionedExtractor\");\n+    assertEquals(0, hiveClient.getTablePartitionKeys(hiveSyncConfig.tableName).size(),\n+            \"Table should not have partition keys because of the NonPartitionedExtractor\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d67705f75d660b4ec5327af5ed9acbf28b5f3e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca0ebc68fd5fc1795381fad171253b618af72125", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/ca0ebc68fd5fc1795381fad171253b618af72125", "committedDate": "2020-06-14T13:53:32Z", "message": "Remove some logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513d74394d8f59e0e63d55b9c66efa781b2ce34a", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/513d74394d8f59e0e63d55b9c66efa781b2ce34a", "committedDate": "2020-06-14T23:52:10Z", "message": "Scalastyle repair"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095416f4b3f4ffa327800c751e291bad151a85fd", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/095416f4b3f4ffa327800c751e291bad151a85fd", "committedDate": "2020-06-15T01:05:37Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNTM3NjU4", "url": "https://github.com/apache/hudi/pull/1720#pullrequestreview-430537658", "createdAt": "2020-06-15T11:01:37Z", "commit": {"oid": "095416f4b3f4ffa327800c751e291bad151a85fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}