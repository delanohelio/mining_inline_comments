{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTc2Njgx", "number": 1732, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTowOTozMlrOEFyIzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMTo0NTo1MFrOEJTaXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDk5NzkxOnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/HoodieDeltaStreamerMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTowOTozMlrOGkLbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjo1ODoyMFrOGkNtLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4OTE2Mw==", "bodyText": "\\after updated, the updated value would not be sent as well?", "url": "https://github.com/apache/hudi/pull/1732#discussion_r440589163", "createdAt": "2020-06-16T05:09:32Z", "author": {"login": "leesf"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/HoodieDeltaStreamerMetrics.java", "diffHunk": "@@ -67,12 +73,41 @@ String getMetricsName(String action, String metric) {\n \n   public void updateDeltaStreamerMetrics(long durationInNs, long hiveSyncNs) {\n     if (config.isMetricsOn()) {\n-      Metrics.registerGauge(getMetricsName(\"deltastreamer\", \"duration\"), getDurationInMs(durationInNs));\n-      Metrics.registerGauge(getMetricsName(\"deltastreamer\", \"hiveSyncDuration\"), getDurationInMs(hiveSyncNs));\n+      registerOrUpdateMetrics(getMetricsName(\"deltastreamer\", \"duration\"), getDurationInMs(durationInNs));\n+      registerOrUpdateMetrics(getMetricsName(\"deltastreamer\", \"hiveSyncDuration\"), getDurationInMs(hiveSyncNs));\n     }\n   }\n \n   public long getDurationInMs(long ctxDuration) {\n     return ctxDuration / 1000000;\n   }\n+  \n+  public void registerOrUpdateMetrics(String metricsName, Object value) {\n+    if (metrics.containsKey(metricsName)) {\n+      metrics.get(metricsName).set(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYyNjQ3OQ==", "bodyText": "Update value will be sent by MetricsGraphiteReporter, MetricsGraphiteReporter.start() start GraphiteReporter and will report metric periodically.", "url": "https://github.com/apache/hudi/pull/1732#discussion_r440626479", "createdAt": "2020-06-16T06:58:20Z", "author": {"login": "shenh062326"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/HoodieDeltaStreamerMetrics.java", "diffHunk": "@@ -67,12 +73,41 @@ String getMetricsName(String action, String metric) {\n \n   public void updateDeltaStreamerMetrics(long durationInNs, long hiveSyncNs) {\n     if (config.isMetricsOn()) {\n-      Metrics.registerGauge(getMetricsName(\"deltastreamer\", \"duration\"), getDurationInMs(durationInNs));\n-      Metrics.registerGauge(getMetricsName(\"deltastreamer\", \"hiveSyncDuration\"), getDurationInMs(hiveSyncNs));\n+      registerOrUpdateMetrics(getMetricsName(\"deltastreamer\", \"duration\"), getDurationInMs(durationInNs));\n+      registerOrUpdateMetrics(getMetricsName(\"deltastreamer\", \"hiveSyncDuration\"), getDurationInMs(hiveSyncNs));\n     }\n   }\n \n   public long getDurationInMs(long ctxDuration) {\n     return ctxDuration / 1000000;\n   }\n+  \n+  public void registerOrUpdateMetrics(String metricsName, Object value) {\n+    if (metrics.containsKey(metricsName)) {\n+      metrics.get(metricsName).set(value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU4OTE2Mw=="}, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTkwNjg3OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/metrics/HudiGauge.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMTo0NTo1MFrOGpyU5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwOTo1ODoyM1rOGp0sVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2OTM0OQ==", "bodyText": "Please name \u2018HoodieGauge\u2019", "url": "https://github.com/apache/hudi/pull/1732#discussion_r446469349", "createdAt": "2020-06-27T01:45:50Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/metrics/HudiGauge.java", "diffHunk": "@@ -25,22 +25,21 @@\n  * Similar to {@link Gauge}, but metric value is updated via calling {@link #setValue(T)} instead.\n  * </p>\n  */\n-public class SimpleSettableGauge<T> implements SettableGauge<T> {\n+public class HudiGauge<T> implements Gauge<T> {\n   private volatile T value;\n \n   /**\n    * Create an instance with a default value.\n    *\n    * @param defaultValue default value\n    */\n-  public SimpleSettableGauge(T defaultValue) {\n+  public HudiGauge(T defaultValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwODExNg==", "bodyText": "Change to HoodieGauge.", "url": "https://github.com/apache/hudi/pull/1732#discussion_r446508116", "createdAt": "2020-06-27T09:58:23Z", "author": {"login": "shenh062326"}, "path": "hudi-client/src/main/java/org/apache/hudi/metrics/HudiGauge.java", "diffHunk": "@@ -25,22 +25,21 @@\n  * Similar to {@link Gauge}, but metric value is updated via calling {@link #setValue(T)} instead.\n  * </p>\n  */\n-public class SimpleSettableGauge<T> implements SettableGauge<T> {\n+public class HudiGauge<T> implements Gauge<T> {\n   private volatile T value;\n \n   /**\n    * Create an instance with a default value.\n    *\n    * @param defaultValue default value\n    */\n-  public SimpleSettableGauge(T defaultValue) {\n+  public HudiGauge(T defaultValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2OTM0OQ=="}, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4489, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}