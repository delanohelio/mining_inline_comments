{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTM5NjIx", "number": 1307, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowNTo0OVrODdMteA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowOToxM1rODdMvFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTQzNTQ0OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowNTo0OVrOFlqiAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMTozMzoyNlrOFmH7GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODQ2Nw==", "bodyText": "We shouldn't have counter variables as members of a test class, each test might mutate it and eventually break other tests", "url": "https://github.com/apache/hudi/pull/1307#discussion_r375038467", "createdAt": "2020-02-05T03:05:49Z", "author": {"login": "n3nash"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -43,11 +49,33 @@\n import java.util.stream.Stream;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * Tests file system utils.\n  */\n public class TestFSUtils extends HoodieCommonTestHarness {\n+  private long minRollbackToKeep = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUyMDAyNA==", "bodyText": "incorporated the comments.", "url": "https://github.com/apache/hudi/pull/1307#discussion_r375520024", "createdAt": "2020-02-05T21:33:26Z", "author": {"login": "nbalajee"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -43,11 +49,33 @@\n import java.util.stream.Stream;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * Tests file system utils.\n  */\n public class TestFSUtils extends HoodieCommonTestHarness {\n+  private long minRollbackToKeep = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODQ2Nw=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTQzODcwOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowODozMFrOFlqkBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMTozMzozNVrOFmH7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODk4MA==", "bodyText": "You don't need this init, the HoodieTestHarness actually creates a DFS based file system which works for log records and should not run into the exception for which you might be creating the local file system", "url": "https://github.com/apache/hudi/pull/1307#discussion_r375038980", "createdAt": "2020-02-05T03:08:30Z", "author": {"login": "n3nash"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -43,11 +49,33 @@\n import java.util.stream.Stream;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * Tests file system utils.\n  */\n public class TestFSUtils extends HoodieCommonTestHarness {\n+  private long minRollbackToKeep = 10;\n+  private long minCleanToKeep = 10;\n+  protected transient FileSystem fs;\n+  protected String basePath = null;\n+\n+  @Before", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUyMDA5NQ==", "bodyText": "incorporated the comments.", "url": "https://github.com/apache/hudi/pull/1307#discussion_r375520095", "createdAt": "2020-02-05T21:33:35Z", "author": {"login": "nbalajee"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -43,11 +49,33 @@\n import java.util.stream.Stream;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * Tests file system utils.\n  */\n public class TestFSUtils extends HoodieCommonTestHarness {\n+  private long minRollbackToKeep = 10;\n+  private long minCleanToKeep = 10;\n+  protected transient FileSystem fs;\n+  protected String basePath = null;\n+\n+  @Before", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODk4MA=="}, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTQzOTU5OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowOToxM1rOFlqkjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzowOToxM1rOFlqkjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzOTExNw==", "bodyText": "Once you use the basePath from the DFS started by the TestHarness and create files underneath, when the test dies, it will automatically clean those files. You shouldn't need to clean it here", "url": "https://github.com/apache/hudi/pull/1307#discussion_r375039117", "createdAt": "2020-02-05T03:09:13Z", "author": {"login": "n3nash"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -261,4 +289,87 @@ public void testLogFilesComparison() {\n   public static String makeOldLogFileName(String fileId, String logFileExtension, String baseCommitTime, int version) {\n     return \".\" + String.format(\"%s_%s%s.%d\", fileId, baseCommitTime, logFileExtension, version);\n   }\n+\n+  private void cleanupFiles(File[] cleanupFiles) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 42, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}