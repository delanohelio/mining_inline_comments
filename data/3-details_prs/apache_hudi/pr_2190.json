{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2ODgzNDM4", "number": 2190, "title": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files", "bodyText": "\u2026if there are no log files\nTips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nRealtimeParquetInputFormat skip adding projection columns if there are no log files\nBrief change log\n(for example:)\n\nModify AnnotationLocation checkstyle rule in checkstyle.xml\n\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is a trivial rework / code cleanup without any test coverage.\n(or)\nThis pull request is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end.\nAdded HoodieClientWriteTest to verify the change.\nManually verified the change by running a job locally.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-10-20T15:04:27Z", "url": "https://github.com/apache/hudi/pull/2190", "merged": true, "mergeCommit": {"oid": "5f5c15b0d9f807dc7f9112a5220c3daeb01f0cb8"}, "closed": true, "closedAt": "2020-11-03T04:00:13Z", "author": {"login": "lw309637554"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUurXLgBqjM5MDQzOTQ1MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYxCr7AFqTUyMjE3NzU3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d3065d17a300462ba436a43bf026a84690c8c8e", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/1d3065d17a300462ba436a43bf026a84690c8c8e", "committedDate": "2020-10-20T15:03:33Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}, "afterCommit": {"oid": "5942ceea24442cc7964de848b2bdf74de18883f0", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/5942ceea24442cc7964de848b2bdf74de18883f0", "committedDate": "2020-10-21T14:58:20Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzE2MTIx", "url": "https://github.com/apache/hudi/pull/2190#pullrequestreview-516316121", "createdAt": "2020-10-25T00:39:13Z", "commit": {"oid": "5942ceea24442cc7964de848b2bdf74de18883f0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMDozOToxM1rOHn1Ubw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMDozOToxM1rOHn1Ubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzMDA5NQ==", "bodyText": "I think we can structure this as a if block without need for the else? since the if above anyway returns out.", "url": "https://github.com/apache/hudi/pull/2190#discussion_r511530095", "createdAt": "2020-10-25T00:39:13Z", "author": {"login": "vinothchandar"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/RealtimeCompactedRecordReader.java", "diffHunk": "@@ -85,53 +85,55 @@ public boolean next(NullWritable aVoid, ArrayWritable arrayWritable) throws IOEx\n       // if the result is false, then there are no more records\n       return false;\n     } else {\n-      // TODO(VC): Right now, we assume all records in log, have a matching base record. (which\n-      // would be true until we have a way to index logs too)\n-      // return from delta records map if we have some match.\n-      String key = arrayWritable.get()[HoodieInputFormatUtils.HOODIE_RECORD_KEY_COL_POS].toString();\n-      if (deltaRecordMap.containsKey(key)) {\n-        // TODO(NA): Invoke preCombine here by converting arrayWritable to Avro. This is required since the\n-        // deltaRecord may not be a full record and needs values of columns from the parquet\n-        Option<GenericRecord> rec;\n-        if (usesCustomPayload) {\n-          rec = deltaRecordMap.get(key).getData().getInsertValue(getWriterSchema());\n-        } else {\n-          rec = deltaRecordMap.get(key).getData().getInsertValue(getReaderSchema());\n-        }\n-        if (!rec.isPresent()) {\n-          // If the record is not present, this is a delete record using an empty payload so skip this base record\n-          // and move to the next record\n-          return next(aVoid, arrayWritable);\n-        }\n-        GenericRecord recordToReturn = rec.get();\n-        if (usesCustomPayload) {\n-          // If using a custom payload, return only the projection fields. The readerSchema is a schema derived from\n-          // the writerSchema with only the projection fields\n-          recordToReturn = HoodieAvroUtils.rewriteRecordWithOnlyNewSchemaFields(rec.get(), getReaderSchema());\n-        }\n-        // we assume, a later safe record in the log, is newer than what we have in the map &\n-        // replace it. Since we want to return an arrayWritable which is the same length as the elements in the latest\n-        // schema, we use writerSchema to create the arrayWritable from the latest generic record\n-        ArrayWritable aWritable = (ArrayWritable) HoodieRealtimeRecordReaderUtils.avroToArrayWritable(recordToReturn, getHiveSchema());\n-        Writable[] replaceValue = aWritable.get();\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(String.format(\"key %s, base values: %s, log values: %s\", key, HoodieRealtimeRecordReaderUtils.arrayWritableToString(arrayWritable),\n-              HoodieRealtimeRecordReaderUtils.arrayWritableToString(aWritable)));\n-        }\n-        Writable[] originalValue = arrayWritable.get();\n-        try {\n-          // Sometime originalValue.length > replaceValue.length.\n-          // This can happen when hive query is looking for pseudo parquet columns like BLOCK_OFFSET_INSIDE_FILE\n-          System.arraycopy(replaceValue, 0, originalValue, 0,\n-              Math.min(originalValue.length, replaceValue.length));\n-          arrayWritable.set(originalValue);\n-        } catch (RuntimeException re) {\n-          LOG.error(\"Got exception when doing array copy\", re);\n-          LOG.error(\"Base record :\" + HoodieRealtimeRecordReaderUtils.arrayWritableToString(arrayWritable));\n-          LOG.error(\"Log record :\" + HoodieRealtimeRecordReaderUtils.arrayWritableToString(aWritable));\n-          String errMsg = \"Base-record :\" + HoodieRealtimeRecordReaderUtils.arrayWritableToString(arrayWritable)\n-              + \" ,Log-record :\" + HoodieRealtimeRecordReaderUtils.arrayWritableToString(aWritable) + \" ,Error :\" + re.getMessage();\n-          throw new RuntimeException(errMsg, re);\n+      if (!deltaRecordMap.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5942ceea24442cc7964de848b2bdf74de18883f0"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d2f68b068091b1546e4054819ce53c15de07c77c", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/apache/hudi/commit/d2f68b068091b1546e4054819ce53c15de07c77c", "committedDate": "2020-10-25T00:54:20Z", "message": "Minor code restructuring"}, "afterCommit": {"oid": "3b1d7f9e670b2c75f32fe618100279d00d4dccab", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/3b1d7f9e670b2c75f32fe618100279d00d4dccab", "committedDate": "2020-10-29T16:31:28Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "887c25cdd81e4c166a16c252a9e5f1fa3bcea787", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/887c25cdd81e4c166a16c252a9e5f1fa3bcea787", "committedDate": "2020-10-30T14:45:22Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b1d7f9e670b2c75f32fe618100279d00d4dccab", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/3b1d7f9e670b2c75f32fe618100279d00d4dccab", "committedDate": "2020-10-29T16:31:28Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}, "afterCommit": {"oid": "887c25cdd81e4c166a16c252a9e5f1fa3bcea787", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/887c25cdd81e4c166a16c252a9e5f1fa3bcea787", "committedDate": "2020-10-30T14:45:22Z", "message": "[HUDI-892] RealtimeParquetInputFormat skip adding projection columns if there are no log files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5aa97b2e1c865bfc3ed2d623f0abd643e9ee687d", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/5aa97b2e1c865bfc3ed2d623f0abd643e9ee687d", "committedDate": "2020-10-30T14:50:20Z", "message": "[HUDI-892] for test"}, "afterCommit": {"oid": "0b25273ca3cb8c67dd61fa37458cdf27e90b8d6b", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/0b25273ca3cb8c67dd61fa37458cdf27e90b8d6b", "committedDate": "2020-10-31T16:19:26Z", "message": "[HUDI-892]  for test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6555b66894ae3af625dc00657a6de52d1b6c34dd", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/6555b66894ae3af625dc00657a6de52d1b6c34dd", "committedDate": "2020-11-01T05:51:11Z", "message": "[HUDI-892]  for test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b25273ca3cb8c67dd61fa37458cdf27e90b8d6b", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/0b25273ca3cb8c67dd61fa37458cdf27e90b8d6b", "committedDate": "2020-10-31T16:19:26Z", "message": "[HUDI-892]  for test"}, "afterCommit": {"oid": "b3a21af65c6717596ccaff03dedb15311c099f33", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/b3a21af65c6717596ccaff03dedb15311c099f33", "committedDate": "2020-11-01T05:52:03Z", "message": " [HUDI-892] fix bug generate array from split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3a21af65c6717596ccaff03dedb15311c099f33", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/b3a21af65c6717596ccaff03dedb15311c099f33", "committedDate": "2020-11-01T05:52:03Z", "message": " [HUDI-892] fix bug generate array from split"}, "afterCommit": {"oid": "23a52970b597dae4d198063a81e4c36cfe6e607e", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/23a52970b597dae4d198063a81e4c36cfe6e607e", "committedDate": "2020-11-01T08:47:18Z", "message": " [HUDI-892] fix bug generate array from split"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b76a393c761b4b8f6e27d387caf99185ad008896", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/b76a393c761b4b8f6e27d387caf99185ad008896", "committedDate": "2020-11-01T10:30:47Z", "message": " [HUDI-892]  fix bug generate array from split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a52970b597dae4d198063a81e4c36cfe6e607e", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/23a52970b597dae4d198063a81e4c36cfe6e607e", "committedDate": "2020-11-01T08:47:18Z", "message": " [HUDI-892] fix bug generate array from split"}, "afterCommit": {"oid": "b76a393c761b4b8f6e27d387caf99185ad008896", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/b76a393c761b4b8f6e27d387caf99185ad008896", "committedDate": "2020-11-01T10:30:47Z", "message": " [HUDI-892]  fix bug generate array from split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e28252c2ff2b875cdebdca1f223c4c514dbf39e9", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/e28252c2ff2b875cdebdca1f223c4c514dbf39e9", "committedDate": "2020-11-02T04:48:37Z", "message": "[HUDI-892] revert test log"}, "afterCommit": {"oid": "0902d583419fd907db649de5684cfd9ed1012b43", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/0902d583419fd907db649de5684cfd9ed1012b43", "committedDate": "2020-11-02T06:00:29Z", "message": "[HUDI-892] revert test log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a331d1f6feb8ea40b0a7a45082d62f9cf1265df", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/3a331d1f6feb8ea40b0a7a45082d62f9cf1265df", "committedDate": "2020-11-02T10:21:10Z", "message": "[HUDI-892] revert test log"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0902d583419fd907db649de5684cfd9ed1012b43", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/0902d583419fd907db649de5684cfd9ed1012b43", "committedDate": "2020-11-02T06:00:29Z", "message": "[HUDI-892] revert test log"}, "afterCommit": {"oid": "3a331d1f6feb8ea40b0a7a45082d62f9cf1265df", "author": {"user": {"login": "lw309637554", "name": "lw0090"}}, "url": "https://github.com/apache/hudi/commit/3a331d1f6feb8ea40b0a7a45082d62f9cf1265df", "committedDate": "2020-11-02T10:21:10Z", "message": "[HUDI-892] revert test log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTc3NTc0", "url": "https://github.com/apache/hudi/pull/2190#pullrequestreview-522177574", "createdAt": "2020-11-03T03:59:42Z", "commit": {"oid": "3a331d1f6feb8ea40b0a7a45082d62f9cf1265df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4195, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}