{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjE5OTE3", "number": 1255, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMzoxNTo0MFrODZFwVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNjozNToyMVrODZHAvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjM1Mjg0OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMzoxNTo0MVrOFfSq0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMzo1OToxOFrOFfTDFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM1NjA1MQ==", "bodyText": "should we just use a VERSION_0 instead of null?", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368356051", "createdAt": "2020-01-20T03:15:41Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -145,7 +145,8 @@ public Boolean shouldAssumeDatePartitioning() {\n   }\n \n   public Integer getTimelineLayoutVersion() {\n-    return Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION));\n+    return props.containsKey(TIMELINE_LAYOUT_VERSION)\n+        ? Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION)) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM1NjQyMg==", "bodyText": "and can't we do this using the regular defaults way? why the special handling for containsKey etc? props.getProperty(k, default)?", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368356422", "createdAt": "2020-01-20T03:18:10Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -145,7 +145,8 @@ public Boolean shouldAssumeDatePartitioning() {\n   }\n \n   public Integer getTimelineLayoutVersion() {\n-    return Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION));\n+    return props.containsKey(TIMELINE_LAYOUT_VERSION)\n+        ? Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION)) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM1NjA1MQ=="}, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2Mw==", "bodyText": "@vinothchandar : Unlike other configs, this is a config defined at 2 levels - hoodie.properties and in HoodieWriteConfig. If we actually keep a non-null value in config, the semantics is that it would override the one in hoodie.properties. If we keep version_0 as default, it would override the version even for new tables which has Version_1 in hoodie.properties ?   Let me know if I am missing something.", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368362263", "createdAt": "2020-01-20T03:59:18Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -145,7 +145,8 @@ public Boolean shouldAssumeDatePartitioning() {\n   }\n \n   public Integer getTimelineLayoutVersion() {\n-    return Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION));\n+    return props.containsKey(TIMELINE_LAYOUT_VERSION)\n+        ? Integer.parseInt(props.getProperty(TIMELINE_LAYOUT_VERSION)) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM1NjA1MQ=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjU1NTY3OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTableMetaClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNjozMjo0OFrOFfUh0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzoyNTozMlrOFfVQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4NjUxNQ==", "bodyText": "can't this be null? if so, would compareTo below be still happy?", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368386515", "createdAt": "2020-01-20T06:32:48Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTableMetaClient.java", "diffHunk": "@@ -117,6 +117,13 @@ public HoodieTableMetaClient(Configuration conf, String basePath, boolean loadAc\n     TableNotFoundException.checkTableValidity(fs, basePathDir, metaPathDir);\n     this.tableConfig = new HoodieTableConfig(fs, metaPath, payloadClassName);\n     this.tableType = tableConfig.getTableType();\n+    if (layoutVersion.isPresent()) {\n+      // Ensure layout version passed in config is not lower than the one seen in hoodie.properties\n+      TimelineLayoutVersion tableConfigVersion = tableConfig.getTimelineLayoutVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5ODQ3NA==", "bodyText": "You are correct, Table Config Version can be null. I have made tableConfig.getTimelineLayoutVersion() to return an option instead", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368398474", "createdAt": "2020-01-20T07:25:32Z", "author": {"login": "bvaradar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTableMetaClient.java", "diffHunk": "@@ -117,6 +117,13 @@ public HoodieTableMetaClient(Configuration conf, String basePath, boolean loadAc\n     TableNotFoundException.checkTableValidity(fs, basePathDir, metaPathDir);\n     this.tableConfig = new HoodieTableConfig(fs, metaPath, payloadClassName);\n     this.tableType = tableConfig.getTableType();\n+    if (layoutVersion.isPresent()) {\n+      // Ensure layout version passed in config is not lower than the one seen in hoodie.properties\n+      TimelineLayoutVersion tableConfigVersion = tableConfig.getTimelineLayoutVersion();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4NjUxNQ=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjU1ODcwOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/client/utils/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNjozNToyMVrOFfUjpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNzoyNDo0NlrOFfVPxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4Njk4MA==", "bodyText": "can the default in HoodieWriteConfig be Option.empty instead of null? Then, we can simply make config.getTimelineLayoutVersion() return a Option directly", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368386980", "createdAt": "2020-01-20T06:35:21Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/client/utils/ClientUtils.java", "diffHunk": "@@ -37,6 +37,8 @@\n   public static HoodieTableMetaClient createMetaClient(JavaSparkContext jsc, HoodieWriteConfig config,\n       boolean loadActiveTimelineOnLoad) {\n     return new HoodieTableMetaClient(jsc.hadoopConfiguration(), config.getBasePath(), loadActiveTimelineOnLoad,\n-        config.getConsistencyGuardConfig(), Option.of(new TimelineLayoutVersion(config.getTimelineLayoutVersion())));\n+        config.getConsistencyGuardConfig(),\n+        Option.ofNullable((config.getTimelineLayoutVersion() != null)\n+            ? new TimelineLayoutVersion(config.getTimelineLayoutVersion()) : null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5ODI3OA==", "bodyText": "Yeah, this can be simplified. HoodieWriteConfig's TimelineLayoutVersion will not be null as it has default. Will change based on that.", "url": "https://github.com/apache/hudi/pull/1255#discussion_r368398278", "createdAt": "2020-01-20T07:24:46Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/client/utils/ClientUtils.java", "diffHunk": "@@ -37,6 +37,8 @@\n   public static HoodieTableMetaClient createMetaClient(JavaSparkContext jsc, HoodieWriteConfig config,\n       boolean loadActiveTimelineOnLoad) {\n     return new HoodieTableMetaClient(jsc.hadoopConfiguration(), config.getBasePath(), loadActiveTimelineOnLoad,\n-        config.getConsistencyGuardConfig(), Option.of(new TimelineLayoutVersion(config.getTimelineLayoutVersion())));\n+        config.getConsistencyGuardConfig(),\n+        Option.ofNullable((config.getTimelineLayoutVersion() != null)\n+            ? new TimelineLayoutVersion(config.getTimelineLayoutVersion()) : null));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4Njk4MA=="}, "originalCommit": null, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}