{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDQyMjY5", "number": 1518, "title": "[HUDI-723] Register avro schema if infered from SQL transformation", "bodyText": "What is the purpose of the pull request\nIf schema is inferred from spark dataframe after Sql Transformation. Not sure if it is going to work for continuous mode, need advice.\nBrief change log\n\nModified DeltaSync to support force schema registration and made sure new schema is registered if Transformer is used.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-04-14T22:19:47Z", "url": "https://github.com/apache/hudi/pull/1518", "merged": true, "mergeCommit": {"oid": "25e0b75b3d03b6d460dc18d1a5fce7b881b0e019"}, "closed": true, "closedAt": "2020-05-15T19:44:04Z", "author": {"login": "afilipchik"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYUgs0gFqTM5NDk4OTU0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchgEdcgBqjMzNDA0NTIwNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTg5NTQ2", "url": "https://github.com/apache/hudi/pull/1518#pullrequestreview-394989546", "createdAt": "2020-04-16T20:51:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDo1MToyMlrOGG2rvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjozNDowMlrOGG5h9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MDU3NA==", "bodyText": "is n't this block the same as above? why break it up into an else-if?", "url": "https://github.com/apache/hudi/pull/1518#discussion_r409840574", "createdAt": "2020-04-16T20:51:22Z", "author": {"login": "vinothchandar"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -296,10 +296,21 @@ private void refreshTimeline() throws IOException {\n \n       // Use Transformed Row's schema if not overridden. If target schema is not specified\n       // default to RowBasedSchemaProvider\n-      schemaProvider = this.schemaProvider == null || this.schemaProvider.getTargetSchema() == null\n-          ? transformed.map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema())).orElse(\n-          dataAndCheckpoint.getSchemaProvider())\n-          : this.schemaProvider;\n+      if (this.schemaProvider == null) {\n+        schemaProvider =\n+            transformed\n+                .map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema()))\n+                .orElse(dataAndCheckpoint.getSchemaProvider());\n+      } else if (this.schemaProvider.getTargetSchema() == null) {\n+        schemaProvider =", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4NzIyMg==", "bodyText": "wondering if we can just redo the schema registration without forcing recreating the entire client?", "url": "https://github.com/apache/hudi/pull/1518#discussion_r409887222", "createdAt": "2020-04-16T22:34:02Z", "author": {"login": "vinothchandar"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -460,8 +471,17 @@ private void syncHive() {\n    * this constraint.\n    */\n   public void setupWriteClient() {\n+    setupWriteClient(schemaProvider, false);\n+  }\n+\n+  /**\n+   * Note that depending on configs and source-type, schemaProvider could either be eagerly or lazily created.\n+   * SchemaProvider creation is a precursor to HoodieWriteClient and AsyncCompactor creation. This method takes care of\n+   * this constraint.\n+   */\n+  private void setupWriteClient(SchemaProvider schemaProvider, boolean forceRecreate) {\n     LOG.info(\"Setting up Hoodie Write Client\");\n-    if ((null != schemaProvider) && (null == writeClient)) {\n+    if (forceRecreate || (null != schemaProvider) && (null == writeClient)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e94ab7d11caf2acd034f675c3f1e417594835a7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/7e94ab7d11caf2acd034f675c3f1e417594835a7", "committedDate": "2020-05-15T11:02:35Z", "message": "Register avro schema if infered from SQL transformation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1e6bab49978d33bde9b8dbd7735c52d3195b09", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/cb1e6bab49978d33bde9b8dbd7735c52d3195b09", "committedDate": "2020-05-15T11:02:36Z", "message": "removed dub"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "committedDate": "2020-05-15T11:04:48Z", "message": "Make HoodieWriteClient creation done lazily always. Handle setting schema-provider and avro-schemas correctly when using SQL transformer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/8fe14bd25da27b8edfc59a1a98158fd11a5898d3", "committedDate": "2020-05-15T11:04:48Z", "message": "Make HoodieWriteClient creation done lazily always. Handle setting schema-provider and avro-schemas correctly when using SQL transformer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}