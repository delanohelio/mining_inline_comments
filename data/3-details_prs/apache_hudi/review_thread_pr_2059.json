{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDk0ODY3", "number": 2059, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyNDo0NFrOEfaOZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToyNlrOEg_ISQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzcwOTgxOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyNDo0NFrOHLqqSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODo0MjowM1rOHMcWKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg==", "bodyText": "checkKey would be rename to containsKey", "url": "https://github.com/apache/hudi/pull/2059#discussion_r481995336", "createdAt": "2020-09-02T11:24:44Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0MDc5NQ==", "bodyText": "I think the checkkey is better\u3002That was its original name\u3002containsKey in  parent class\uff0c", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482040795", "createdAt": "2020-09-02T12:47:18Z", "author": {"login": "linshan-ma"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}, "originalCommit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NDI2OQ==", "bodyText": "I think the checkkey is better\u3002That was its original name\u3002containsKey in parent class\uff0c\n\ncheckKey should not return boolean and should throw exception from semantically.  containsKey or keyExists should return boolean.", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482044269", "createdAt": "2020-09-02T12:52:49Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}, "originalCommit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgwOTM4Nw==", "bodyText": "ok,i see,i get it", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482809387", "createdAt": "2020-09-03T08:42:03Z", "author": {"login": "linshan-ma"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}, "originalCommit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzU5OTk0OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo1MDo1M1rOHNKm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo1MDo1M1rOHNKm4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2NzMyOA==", "bodyText": "would be rename to testGetString() and also would add getLong, getBoolean Uts", "url": "https://github.com/apache/hudi/pull/2059#discussion_r483567328", "createdAt": "2020-09-04T11:50:53Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testNewTypedProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIzOTAwOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDowMlrOHOEROQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDowMlrOHOEROQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjA1Nw==", "bodyText": "\"key1\",456 -> \"key1\", 456", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512057", "createdAt": "2020-09-07T16:20:02Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIzOTQxOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDoxMlrOHOERcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDoxMlrOHOERcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjExMw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512113", "createdAt": "2020-09-07T16:20:12Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDI0MDY1OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDo0NVrOHOESIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDo0NVrOHOESIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjI5MA==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512290", "createdAt": "2020-09-07T16:20:45Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDI0MTQxOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMTowOFrOHOESlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMTowOFrOHOESlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQwNg==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512406", "createdAt": "2020-09-07T16:21:08Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDI0MTcyOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToxNlrOHOESxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToxNlrOHOESxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ1Mg==", "bodyText": "testGetBoolean", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512452", "createdAt": "2020-09-07T16:21:16Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDI0MjAxOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToyNlrOHOES8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToyNlrOHOES8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ5Nw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512497", "createdAt": "2020-09-07T16:21:26Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"true\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(true, typedProperties.getBoolean(\"key1\"));\n+    assertEquals(true, typedProperties.getBoolean(\"key1\",false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4260, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}