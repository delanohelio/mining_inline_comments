{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMDEzMzgz", "number": 1842, "title": "[HUDI-1037]Introduce a write committed callback hook", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nIntroduce a write committed callback hook\nBrief change log\nIntroduce a write committed callback hook implemented by HTTP\nVerify this pull request\nThis pull request is already covered by existing tests, such as\norg.apache.hudi.callback.http.TestCallBackHttpClient.\norg.apache.hudi.callback.http.TestHoodieHttpWriteCommitCallBack\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-07-17T10:37:50Z", "url": "https://github.com/apache/hudi/pull/1842", "merged": true, "mergeCommit": {"oid": "da106803b6d0bdbb37f22b9bd73b9b3a77f77063"}, "closed": true, "closedAt": "2020-07-23T11:07:05Z", "author": {"login": "wangxianghu"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1xkVNABqjM1NTc1NzE3MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3kk7VAFqTQ1Mzc3NjM1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjEzNDMy", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-450613432", "createdAt": "2020-07-17T12:26:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjoyNjo1M1rOGzRA-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjoyNjo1M1rOGzRA-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwOTMzNw==", "bodyText": "HoodieWriteCommitCallback", "url": "https://github.com/apache/hudi/pull/1842#discussion_r456409337", "createdAt": "2020-07-17T12:26:53Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/HoodieWriteCommitCallBack.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback;\n+\n+/**\n+ * A callback interface help to call back when a write commit completes successfully.\n+ */\n+public interface HoodieWriteCommitCallBack {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjE0MTk3", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-450614197", "createdAt": "2020-07-17T12:28:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjoyODoxMFrOGzRDOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjoyODoxMFrOGzRDOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwOTkxMw==", "bodyText": "would be warn", "url": "https://github.com/apache/hudi/pull/1842#discussion_r456409913", "createdAt": "2020-07-17T12:28:10Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/impl/HoodieHttpWriteCommitCallBack.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.impl;\n+\n+import org.apache.hudi.callback.HoodieWriteCommitCallBack;\n+import org.apache.hudi.callback.client.http.HoodieWriteCallBackHttpClient;\n+import org.apache.hudi.callback.common.HoodieBaseCommitCallBackMessage;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.codehaus.jackson.map.ObjectMapper;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A http implementation of {@link HoodieWriteCommitCallBack}.\n+ */\n+public class HoodieHttpWriteCommitCallBack implements HoodieWriteCommitCallBack {\n+\n+  private static final Logger LOG = LogManager.getLogger(HoodieHttpWriteCommitCallBack.class);\n+\n+  private final HoodieWriteCallBackHttpClient client;\n+  private final HoodieWriteConfig config;\n+\n+  public HoodieHttpWriteCommitCallBack(HoodieWriteConfig config) {\n+    this.config = config;\n+    this.client = new HoodieWriteCallBackHttpClient(config.getCallBackRestApiKey(),\n+        config.getCallBackRestUrl(),\n+        config.getCallBackRestTimeout());\n+  }\n+\n+  @Override\n+  public void call(String commitTime) {\n+    // create callback message\n+    HoodieBaseCommitCallBackMessage callBackMessage =\n+        new HoodieBaseCommitCallBackMessage(commitTime, config.getTableName());\n+    // convert to json\n+    ObjectMapper mapper = new ObjectMapper();\n+    String callbackMsg = null;\n+    try {\n+      callbackMsg = mapper.writeValueAsString(callBackMessage);\n+    } catch (IOException e) {\n+      LOG.error(\"CallBack service convert message to json failed\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjE1NjA1", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-450615605", "createdAt": "2020-07-17T12:30:20Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjozMDoyMFrOGzRHag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjozMDoyMFrOGzRHag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQxMDk4Ng==", "bodyText": "enableWriteCommitCallback?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r456410986", "createdAt": "2020-07-17T12:30:20Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -632,6 +632,33 @@ public FileSystemViewStorageConfig getClientSpecifiedViewStorageConfig() {\n     return clientSpecifiedViewStorageConfig;\n   }\n \n+  /**\n+   * Commit call back configs.\n+   */\n+  public boolean isWriteCommitCallBackOn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNjE4NDU5", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-450618459", "createdAt": "2020-07-17T12:34:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/e0e24be2406f277c4b3aee3236638827a3290ce2", "committedDate": "2020-07-17T15:23:54Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTMxOTY5", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-451531969", "createdAt": "2020-07-20T11:46:41Z", "commit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0Njo0MVrOG0H8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0Njo0MVrOG0H8Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMwOTIxMQ==", "bodyText": "keep consistent with callback_on above,  so writeCommitCallbackOn?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457309211", "createdAt": "2020-07-20T11:46:41Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -632,6 +632,33 @@ public FileSystemViewStorageConfig getClientSpecifiedViewStorageConfig() {\n     return clientSpecifiedViewStorageConfig;\n   }\n \n+  /**\n+   * Commit call back configs.\n+   */\n+  public boolean enableWriteCommitCallback() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTMyMjQx", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-451532241", "createdAt": "2020-07-20T11:47:08Z", "commit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0NzowOFrOG0H9CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo0NzowOFrOG0H9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMwOTQ0OQ==", "bodyText": "no need use String.valueOf here", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457309449", "createdAt": "2020-07-20T11:47:08Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.callback.common.HoodieCommitCallbackType;\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;\n+\n+  public static final String CALLBACK_TYPE_PROP = \"hoodie.write.commit.callback.type\";\n+  public static final String DEFAULT_CALLBACK_TYPE_PROP = HoodieCommitCallbackType.HTTP.name();\n+\n+  public static final String CALLBACK_CLASS_PROP = \"hoodie.write.commit.callback.class\";\n+  public static final String DEFAULT_CALLBACK_CLASS_PROP = \"\";\n+\n+  // ***** REST callback configs *****\n+  public static final String CALLBACK_HTTP_URL_PROP = \"hoodie.write.commit.callback.http.url\";\n+  public static final String CALLBACK_API_KEY = \"hoodie.write.commit.callback.http.api.key\";\n+  public static final String DEFAULT_CALLBACK_API_KEY = \"hudi_write_commit_callback\";\n+  public static final String CALLBACK_TIMEOUT_SECONDS = \"hoodie.write.commit.callback.rest.timeout.seconds\";\n+  public static final String DEFAULT_CALLBACK_TIMEOUT_SECONDS = \"3\";\n+\n+  private HoodieWriteCommitCallbackConfig(Properties props) {\n+    super(props);\n+  }\n+\n+  public static HoodieWriteCommitCallbackConfig.Builder newBuilder() {\n+    return new HoodieWriteCommitCallbackConfig.Builder();\n+  }\n+\n+  public static class Builder {\n+\n+    private final Properties props = new Properties();\n+\n+    public HoodieWriteCommitCallbackConfig.Builder fromFile(File propertiesFile) throws IOException {\n+      try (FileReader reader = new FileReader(propertiesFile)) {\n+        this.props.load(reader);\n+        return this;\n+      }\n+    }\n+\n+    public HoodieWriteCommitCallbackConfig.Builder fromProperties(Properties props) {\n+      this.props.putAll(props);\n+      return this;\n+    }\n+\n+    public HoodieWriteCommitCallbackConfig.Builder writeCommitCallbackOn(String callbackOn) {\n+      props.setProperty(CALLBACK_ON, String.valueOf(callbackOn));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTM0NzY0", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-451534764", "createdAt": "2020-07-20T11:50:50Z", "commit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo1MDo1MFrOG0IG0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo1MDo1MFrOG0IG0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxMTk1NA==", "bodyText": "should we move these methods into HoodieHttpWriteCommitCallback.java, I am worry about the explode of other callback methods in HoodieWriteConfig", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457311954", "createdAt": "2020-07-20T11:50:50Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -632,6 +632,33 @@ public FileSystemViewStorageConfig getClientSpecifiedViewStorageConfig() {\n     return clientSpecifiedViewStorageConfig;\n   }\n \n+  /**\n+   * Commit call back configs.\n+   */\n+  public boolean enableWriteCommitCallback() {\n+    return Boolean.parseBoolean(props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_ON));\n+  }\n+\n+  public String getCallbackType() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_TYPE_PROP);\n+  }\n+\n+  public String getCallbackClass() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_CLASS_PROP);\n+  }\n+\n+  public String getCallbackRestUrl() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_HTTP_URL_PROP);\n+  }\n+\n+  public int getCallbackRestTimeout() {\n+    return Integer.parseInt(props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_TIMEOUT_SECONDS));\n+  }\n+\n+  public String getCallbackRestApiKey() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_API_KEY);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTM1MTY5", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-451535169", "createdAt": "2020-07-20T11:51:27Z", "commit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo1MToyN1rOG0IIaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMTo1MToyN1rOG0IIaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzMxMjM2MQ==", "bodyText": "extra line", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457312361", "createdAt": "2020-07-20T11:51:27Z", "author": {"login": "leesf"}, "path": "hudi-client/src/main/java/org/apache/hudi/exception/HoodieCommitCallbackException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.exception;\n+\n+import org.apache.hudi.callback.HoodieWriteCommitCallback;\n+\n+/**\n+ * Exception thrown for any higher level errors when {@link HoodieWriteCommitCallback} is executing a callback.\n+ */\n+public class HoodieCommitCallbackException extends HoodieException {\n+\n+  public HoodieCommitCallbackException(String msg, Throwable e) {\n+    super(msg, e);\n+  }\n+\n+  public HoodieCommitCallbackException(String msg) {\n+    super(msg);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0e24be2406f277c4b3aee3236638827a3290ce2"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48e46faee259c0befb240c365a682c247d6eb9b1", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/48e46faee259c0befb240c365a682c247d6eb9b1", "committedDate": "2020-07-20T13:00:54Z", "message": "rename and relocate some methods"}, "afterCommit": {"oid": "ae1253ec713af8272d997fb958cd55717efb63a7", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/ae1253ec713af8272d997fb958cd55717efb63a7", "committedDate": "2020-07-20T13:01:46Z", "message": "rename and relocate some methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae1253ec713af8272d997fb958cd55717efb63a7", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/ae1253ec713af8272d997fb958cd55717efb63a7", "committedDate": "2020-07-20T13:01:46Z", "message": "rename and relocate some methods"}, "afterCommit": {"oid": "617cf632d8d16116c222b085a64696a590655aa4", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/617cf632d8d16116c222b085a64696a590655aa4", "committedDate": "2020-07-20T15:01:00Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "617cf632d8d16116c222b085a64696a590655aa4", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/617cf632d8d16116c222b085a64696a590655aa4", "committedDate": "2020-07-20T15:01:00Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}, "afterCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/db65a1ef99dd62f27862a6d7fa0989bab8c5e902", "committedDate": "2020-07-20T15:28:15Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDUwMjgw", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-452050280", "createdAt": "2020-07-21T00:42:19Z", "commit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDo0MjoxOVrOG0kBzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDo1NjoxNVrOG0kQfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2OTQyMQ==", "bodyText": "Can we provide both commit instant and table name?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457769421", "createdAt": "2020-07-21T00:42:19Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/HoodieWriteCommitCallback.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback;\n+\n+/**\n+ * A callback interface help to call back when a write commit completes successfully.\n+ */\n+public interface HoodieWriteCommitCallback {\n+\n+  /**\n+   * A callback method the user can implement to provide asynchronous handling of successful write.\n+   * This method will be called when a write operation is committed successfully.\n+   *\n+   * @param commitTime commitTime which is successfully committed\n+   */\n+  void call(String commitTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2OTkzNA==", "bodyText": "If we provide the  table name as a parameter in HoodieWriteCommitCallback#call(...), then this class is not necessary, IMO.", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457769934", "createdAt": "2020-07-21T00:44:05Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/common/HoodieBaseCommitCallbackMessage.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.common;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Base callback message, which contains commitTime and tableName only for now.\n+ */\n+public class HoodieBaseCommitCallbackMessage implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3MTI3OQ==", "bodyText": "We may need to consider making these hard codes configurable.", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457771279", "createdAt": "2020-07-21T00:49:07Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/client/http/HoodieWriteCallbackHttpClient.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.client.http;\n+\n+import org.apache.http.HttpHeaders;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.ContentType;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.hudi.config.HoodieWriteCommitCallbackConfig;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write commit callback http client.\n+ */\n+public class HoodieWriteCallbackHttpClient implements Closeable {\n+\n+  private static final Logger LOG = LogManager.getLogger(HoodieWriteCallbackHttpClient.class);\n+\n+  public static final String HEADER_KEY_API_KEY = \"HUDI-CALLBACK-KEY\";\n+\n+  private final String apiKey;\n+  private final String url;\n+  private final CloseableHttpClient client;\n+  private Properties props;\n+\n+  public HoodieWriteCallbackHttpClient(HoodieWriteConfig config) {\n+    this.props = config.getProps();\n+    this.apiKey = getApiKey();\n+    this.url = getUrl();\n+    this.client = getClient();\n+  }\n+\n+  public HoodieWriteCallbackHttpClient(String apiKey, String url, CloseableHttpClient client) {\n+    this.apiKey = apiKey;\n+    this.url = url;\n+    this.client = client;\n+  }\n+\n+  public void send(String callbackMsg) {\n+    HttpPost request = new HttpPost(url);\n+    request.setHeader(HEADER_KEY_API_KEY, apiKey);\n+    request.setHeader(HttpHeaders.CONTENT_TYPE, ContentType.APPLICATION_JSON.toString());\n+    request.setEntity(new StringEntity(callbackMsg, ContentType.APPLICATION_JSON));\n+    try (CloseableHttpResponse response = client.execute(request)) {\n+      int statusCode = response.getStatusLine().getStatusCode();\n+      if (statusCode >= 300) {\n+        LOG.warn(String.format(\"Failed to send callback message. Response was %s\", response));\n+      } else {\n+        LOG.info(String.format(\"Sent Callback data %s to %s successfully !\", callbackMsg, url));\n+      }\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to send callback.\", e);\n+    }\n+  }\n+\n+  private String getApiKey() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_HTTP_API_KEY);\n+  }\n+\n+  private String getUrl() {\n+    return props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_HTTP_URL_PROP);\n+  }\n+\n+  private CloseableHttpClient getClient() {\n+    Integer timeoutSeconds = getHttpTimeoutSeconds();\n+    return HttpClientBuilder.create()\n+        .setDefaultRequestConfig(RequestConfig.custom()\n+            .setConnectTimeout(timeoutSeconds * 1000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3MTg4Nw==", "bodyText": "Is HoodieWriteCommitHttpCallback more reasonable?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457771887", "createdAt": "2020-07-21T00:51:13Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/impl/HoodieHttpWriteCommitCallback.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.impl;\n+\n+import org.apache.hudi.callback.HoodieWriteCommitCallback;\n+import org.apache.hudi.callback.client.http.HoodieWriteCallbackHttpClient;\n+import org.apache.hudi.callback.common.HoodieBaseCommitCallbackMessage;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.exception.HoodieCommitCallbackException;\n+import org.apache.log4j.LogManager;\n+import org.apache.log4j.Logger;\n+import org.codehaus.jackson.map.ObjectMapper;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A http implementation of {@link HoodieWriteCommitCallback}.\n+ */\n+public class HoodieHttpWriteCommitCallback implements HoodieWriteCommitCallback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc3MzE4Mw==", "bodyText": "IMO, this property is not necessary. We can only depend on getCallbackClass  to specify the detailed implementation. This is a simple SPI mode.  Otherwise, it causes two entry points in the factory you implemented. WDYT?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r457773183", "createdAt": "2020-07-21T00:56:15Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -632,6 +632,21 @@ public FileSystemViewStorageConfig getClientSpecifiedViewStorageConfig() {\n     return clientSpecifiedViewStorageConfig;\n   }\n \n+  /**\n+   * Commit call back configs.\n+   */\n+  public boolean writeCommitCallbackOn() {\n+    return Boolean.parseBoolean(props.getProperty(HoodieWriteCommitCallbackConfig.CALLBACK_ON));\n+  }\n+\n+  public String getCallbackType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db65a1ef99dd62f27862a6d7fa0989bab8c5e902"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d86f813e391c34d9d2fedf139d943addee3f2e3", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/5d86f813e391c34d9d2fedf139d943addee3f2e3", "committedDate": "2020-07-21T12:32:45Z", "message": "remove callback type"}, "afterCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/0afe21ce82f51778627f3d955f6bbb5a233f6bcb", "committedDate": "2020-07-21T12:36:15Z", "message": "remove callback type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTM2MjYw", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-452936260", "createdAt": "2020-07-22T01:35:08Z", "commit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMTozNTowOVrOG1Pimg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMTo1MDo1NVrOG1PzRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MjMzMA==", "bodyText": "This naming is strange. IMHO, does CALLBACK_SWITCH or CALLBACK_FEATURE or CALLBACK_FUNCTION look better?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458482330", "createdAt": "2020-07-22T01:35:09Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MjU2NQ==", "bodyText": "CALLBACK_CLASS?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458482565", "createdAt": "2020-07-22T01:35:54Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;\n+\n+  public static final String CALLBACK_CLASS_PROP = \"hoodie.write.commit.callback.class\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MjYwNQ==", "bodyText": "DEFAULT_CALLBACK_CLASS?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458482605", "createdAt": "2020-07-22T01:36:07Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;\n+\n+  public static final String CALLBACK_CLASS_PROP = \"hoodie.write.commit.callback.class\";\n+  public static final String DEFAULT_CALLBACK_CLASS_PROP = \"org.apache.hudi.callback.impl.HoodieWriteCommitHttpCallback\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MzIzNQ==", "bodyText": "int?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458483235", "createdAt": "2020-07-22T01:38:37Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;\n+\n+  public static final String CALLBACK_CLASS_PROP = \"hoodie.write.commit.callback.class\";\n+  public static final String DEFAULT_CALLBACK_CLASS_PROP = \"org.apache.hudi.callback.impl.HoodieWriteCommitHttpCallback\";\n+\n+  // ***** REST callback configs *****\n+  public static final String CALLBACK_HTTP_URL_PROP = \"hoodie.write.commit.callback.http.url\";\n+  public static final String CALLBACK_HTTP_API_KEY = \"hoodie.write.commit.callback.http.api.key\";\n+  public static final String DEFAULT_CALLBACK_HTTP_API_KEY = \"hudi_write_commit_http_callback\";\n+  public static final String CALLBACK_HTTP_TIMEOUT_SECONDS = \"hoodie.write.commit.callback.http.timeout.seconds\";\n+  public static final String DEFAULT_CALLBACK_HTTP_TIMEOUT_SECONDS = \"3\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NjM3Mw==", "bodyText": "What's purpose of this class?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458486373", "createdAt": "2020-07-22T01:50:12Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/callback/http/TestHoodieWriteCommitHttpCallback.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.http;\n+\n+import org.apache.hudi.callback.impl.HoodieWriteCommitHttpCallback;\n+import org.apache.hudi.testutils.HoodieWriteCommitTestHarness;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+\n+/**\n+ * Unit test for {@link HoodieWriteCommitHttpCallback}.\n+ */\n+public class TestHoodieWriteCommitHttpCallback extends HoodieWriteCommitTestHarness {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NjU5OA==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458486598", "createdAt": "2020-07-22T01:50:55Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/testutils/HoodieWriteCommitTestHarness.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.testutils;\n+\n+import org.apache.hudi.common.testutils.HoodieCommonTestHarness;\n+import org.apache.hudi.config.HoodieWriteCommitCallbackConfig;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The test harness for resource initialization and cleanup.\n+ */\n+public class HoodieWriteCommitTestHarness extends HoodieCommonTestHarness {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDIyODUz", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-453422853", "createdAt": "2020-07-22T15:18:28Z", "commit": {"oid": "9e8f6e25c1615e722d4ceca8d9c1fb2a281da749"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToxODoyOFrOG1nXOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToyMzo0OFrOG1nmYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3MjYzMg==", "bodyText": "IMO, it's not necessary. We can remove it.", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458872632", "createdAt": "2020-07-22T15:18:28Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/callback/http/TestHoodieWriteCommitHttpCallback.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.http;\n+\n+import org.apache.hudi.callback.impl.HoodieWriteCommitHttpCallback;\n+import org.apache.hudi.testutils.HoodieWriteCommitTestHarness;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n+\n+/**\n+ * Unit test for {@link HoodieWriteCommitHttpCallback}.\n+ */\n+public class TestHoodieWriteCommitHttpCallback extends HoodieWriteCommitTestHarness {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NjM3Mw=="}, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3MjcyNQ==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458872725", "createdAt": "2020-07-22T15:18:35Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/testutils/HoodieWriteCommitTestHarness.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.testutils;\n+\n+import org.apache.hudi.common.testutils.HoodieCommonTestHarness;\n+import org.apache.hudi.config.HoodieWriteCommitCallbackConfig;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The test harness for resource initialization and cleanup.\n+ */\n+public class HoodieWriteCommitTestHarness extends HoodieCommonTestHarness {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4NjU5OA=="}, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3MzAzNw==", "bodyText": "Ok, sounds good.", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458873037", "createdAt": "2020-07-22T15:19:02Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteCommitCallbackConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.config;\n+\n+import org.apache.hudi.common.config.DefaultHoodieConfig;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+/**\n+ * Write callback related config.\n+ */\n+public class HoodieWriteCommitCallbackConfig extends DefaultHoodieConfig {\n+\n+  public static final String CALLBACK_ON = \"hoodie.write.commit.callback.on\";\n+  public static final boolean DEFAULT_CALLBACK_ON = false;\n+\n+  public static final String CALLBACK_CLASS_PROP = \"hoodie.write.commit.callback.class\";\n+  public static final String DEFAULT_CALLBACK_CLASS_PROP = \"org.apache.hudi.callback.impl.HoodieWriteCommitHttpCallback\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ4MjYwNQ=="}, "originalCommit": {"oid": "0afe21ce82f51778627f3d955f6bbb5a233f6bcb"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3NTA5Ng==", "bodyText": "Can we reference CALLBACK_CLASS_PROP  not hoodie.write.commit.callback.class? What's more, it's not ** Parameter**, it's a config option. Let's say e.g. The value of the config option xxx can not be ....? Does it make sense?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458875096", "createdAt": "2020-07-22T15:21:56Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/util/HoodieCommitCallbackFactory.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.util;\n+\n+import org.apache.hudi.callback.HoodieWriteCommitCallback;\n+import org.apache.hudi.common.util.ReflectionUtils;\n+import org.apache.hudi.common.util.StringUtils;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.exception.HoodieCommitCallbackException;\n+\n+/**\n+ * Factory help to create {@link HoodieWriteCommitCallback}.\n+ */\n+public class HoodieCommitCallbackFactory {\n+  public static HoodieWriteCommitCallback create(HoodieWriteConfig config) {\n+    String callbackClass = config.getCallbackClass();\n+    if (!StringUtils.isNullOrEmpty(callbackClass)) {\n+      Object instance = ReflectionUtils.loadClass(callbackClass, config);\n+      if (!(instance instanceof HoodieWriteCommitCallback)) {\n+        throw new HoodieCommitCallbackException(callbackClass + \" is not a subclass of HoodieWriteCommitCallback\");\n+      }\n+      return (HoodieWriteCommitCallback) instance;\n+    } else {\n+      throw new HoodieCommitCallbackException(\"Parameter 'hoodie.write.commit.callback.class' can not be null or empty\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e8f6e25c1615e722d4ceca8d9c1fb2a281da749"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3NjUxNQ==", "bodyText": "Let's use HoodieWriteCommitHttpCallback.class.getSimpleName()  to replace the hard code HoodieWriteCommitCallback ?", "url": "https://github.com/apache/hudi/pull/1842#discussion_r458876515", "createdAt": "2020-07-22T15:23:48Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/callback/util/HoodieCommitCallbackFactory.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.callback.util;\n+\n+import org.apache.hudi.callback.HoodieWriteCommitCallback;\n+import org.apache.hudi.common.util.ReflectionUtils;\n+import org.apache.hudi.common.util.StringUtils;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.exception.HoodieCommitCallbackException;\n+\n+/**\n+ * Factory help to create {@link HoodieWriteCommitCallback}.\n+ */\n+public class HoodieCommitCallbackFactory {\n+  public static HoodieWriteCommitCallback create(HoodieWriteConfig config) {\n+    String callbackClass = config.getCallbackClass();\n+    if (!StringUtils.isNullOrEmpty(callbackClass)) {\n+      Object instance = ReflectionUtils.loadClass(callbackClass, config);\n+      if (!(instance instanceof HoodieWriteCommitCallback)) {\n+        throw new HoodieCommitCallbackException(callbackClass + \" is not a subclass of HoodieWriteCommitCallback\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e8f6e25c1615e722d4ceca8d9c1fb2a281da749"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e8f6e25c1615e722d4ceca8d9c1fb2a281da749", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/9e8f6e25c1615e722d4ceca8d9c1fb2a281da749", "committedDate": "2020-07-22T06:28:54Z", "message": "change  httpcallback timeout prop to int type"}, "afterCommit": {"oid": "e729c9be8ec74263a3b25856da77c17d978d05e0", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/e729c9be8ec74263a3b25856da77c17d978d05e0", "committedDate": "2020-07-22T16:20:02Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e729c9be8ec74263a3b25856da77c17d978d05e0", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/e729c9be8ec74263a3b25856da77c17d978d05e0", "committedDate": "2020-07-22T16:20:02Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}, "afterCommit": {"oid": "656d9e770e0f3feeb2fe3985719efab12ce3f5fe", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/656d9e770e0f3feeb2fe3985719efab12ce3f5fe", "committedDate": "2020-07-22T16:26:07Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01a062012c9d17efa5ac92637302d0a3f4aaa08", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/b01a062012c9d17efa5ac92637302d0a3f4aaa08", "committedDate": "2020-07-22T16:29:32Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "656d9e770e0f3feeb2fe3985719efab12ce3f5fe", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/656d9e770e0f3feeb2fe3985719efab12ce3f5fe", "committedDate": "2020-07-22T16:26:07Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}, "afterCommit": {"oid": "b01a062012c9d17efa5ac92637302d0a3f4aaa08", "author": {"user": {"login": "wangxianghu", "name": "wangxianghu"}}, "url": "https://github.com/apache/hudi/commit/b01a062012c9d17efa5ac92637302d0a3f4aaa08", "committedDate": "2020-07-22T16:29:32Z", "message": "[HUDI-1037]Introduce a write committed callback hook"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzczMzA4", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-453773308", "createdAt": "2020-07-23T00:37:27Z", "commit": {"oid": "b01a062012c9d17efa5ac92637302d0a3f4aaa08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzc2MzUz", "url": "https://github.com/apache/hudi/pull/1842#pullrequestreview-453776353", "createdAt": "2020-07-23T00:48:50Z", "commit": {"oid": "b01a062012c9d17efa5ac92637302d0a3f4aaa08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2985, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}