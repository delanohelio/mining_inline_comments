{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDQ2MTg1", "number": 2197, "title": "[HUDI-1351] Improvements to the hudi test suite for scalability and repeated testing.", "bodyText": "What is the purpose of the pull request\nPlease see HUDI-1351 for description of the issues that are being fixed here.\nBrief change log\n\nAdded the --clean-input and --clean-output parameters to clean the input and output directories before starting the job\nAdded the --delete-old-input parameter to deleted older batches for data already ingested. This helps keep number of redundant files low.\nAdded the --input-parallelism parameter to restrict the parallelism when generating input data. This helps keeping the number of generated input files low.\nAdded an option start_offset to Dag Nodes. Without ability to specify start offsets, data is generated into existing partitions. With start offset, DAG can control on which partition, the data is to be written.\nFixed generation of records for correct number of partitions\n\n\nIn the existing implementation, the partition is chosen as a random long. This does not guarantee exact number of requested partitions to be created.\n\n\nChanged variable blacklistedFields to be a Set as that is faster than List for membership checks.\nFixed integer division for Math.ceil. If two integers are divided, the result is not double unless one of the integer is casted to double.\n\nVerify this pull request\nThis pull request is already covered by existing tests, such as (please describe tests).\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-10-22T06:20:11Z", "url": "https://github.com/apache/hudi/pull/2197", "merged": true, "mergeCommit": {"oid": "6310a2307abba94c7ff8a770f45462deae2c312e"}, "closed": true, "closedAt": "2020-10-29T13:50:38Z", "author": {"login": "prashantwason"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWL8EQAFqTUxNjQ1MTQ2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXSfpUgFqTUxOTY4NDA4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDUxNDYy", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516451462", "createdAt": "2020-10-26T03:38:07Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozODowOFrOHn_-wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozODowOFrOHn_-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNDc2OA==", "bodyText": "can you explicitly add scope \"private\" ?", "url": "https://github.com/apache/hudi/pull/2197#discussion_r511704768", "createdAt": "2020-10-26T03:38:08Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DFSDeltaConfig.java", "diffHunk": "@@ -36,15 +36,22 @@\n   private final Long maxFileSize;\n   // The current batch id\n   private Integer batchId;\n+  // Paralleism to use when generating input data\n+  int inputParallelism;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDUxNTQw", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516451540", "createdAt": "2020-10-26T03:38:30Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozODozMFrOHn__Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozODozMFrOHn__Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNDgzOQ==", "bodyText": "rename to inputGeneratorParallelism ?", "url": "https://github.com/apache/hudi/pull/2197#discussion_r511704839", "createdAt": "2020-10-26T03:38:30Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DFSDeltaConfig.java", "diffHunk": "@@ -36,15 +36,22 @@\n   private final Long maxFileSize;\n   // The current batch id\n   private Integer batchId;\n+  // Paralleism to use when generating input data\n+  int inputParallelism;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDUzMjkw", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516453290", "createdAt": "2020-10-26T03:46:45Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0Njo0NlrOHoAE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0Njo0NlrOHoAE2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNjMzMQ==", "bodyText": "What is the purpose behind this change ?", "url": "https://github.com/apache/hudi/pull/2197#discussion_r511706331", "createdAt": "2020-10-26T03:46:46Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/DeltaGenerator.java", "diffHunk": "@@ -58,15 +63,15 @@\n \n   private static Logger log = LoggerFactory.getLogger(DeltaGenerator.class);\n \n-  private DeltaConfig deltaOutputConfig;\n+  private DFSDeltaConfig deltaOutputConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDUzNDEy", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516453412", "createdAt": "2020-10-26T03:47:24Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0NzoyNFrOHoAFOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0NzoyNFrOHoAFOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNjQyNw==", "bodyText": "This may not work in case the last batches were rolled back. Can you take a look at RollbackNode and see what will be the implication ?", "url": "https://github.com/apache/hudi/pull/2197#discussion_r511706427", "createdAt": "2020-10-26T03:47:24Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/DeltaGenerator.java", "diffHunk": "@@ -77,6 +82,16 @@ public DeltaGenerator(DeltaConfig deltaOutputConfig, JavaSparkContext jsc, Spark\n   }\n \n   public JavaRDD<DeltaWriteStats> writeRecords(JavaRDD<GenericRecord> records) {\n+    if (deltaOutputConfig.shouldDeleteOldInputData() && batchId > 1) {\n+      Path oldInputDir = new Path(deltaOutputConfig.getDeltaBasePath(), Integer.toString(batchId - 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDUzNTYx", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516453561", "createdAt": "2020-10-26T03:48:04Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0ODowNFrOHoAFqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo0ODowNFrOHoAFqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNjUzNg==", "bodyText": "Can you please explain the startPartition with an example ? What happens when a spark stage is retried ? Take a look at how spark stage retries mess up the partition numbers to understand more..", "url": "https://github.com/apache/hudi/pull/2197#discussion_r511706536", "createdAt": "2020-10-26T03:48:04Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/DeltaGenerator.java", "diffHunk": "@@ -95,11 +110,19 @@ public DeltaGenerator(DeltaConfig deltaOutputConfig, JavaSparkContext jsc, Spark\n     int numPartitions = operation.getNumInsertPartitions();\n     long recordsPerPartition = operation.getNumRecordsInsert() / numPartitions;\n     int minPayloadSize = operation.getRecordSize();\n-    JavaRDD<GenericRecord> inputBatch = jsc.parallelize(Collections.EMPTY_LIST)\n-        .repartition(numPartitions).mapPartitions(p -> {\n+    int startPartition = operation.getStartPartition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU0NDUx", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-516454451", "createdAt": "2020-10-26T03:52:12Z", "commit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc0559bc49682e514ec2a5e3817437ec17230712", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/bc0559bc49682e514ec2a5e3817437ec17230712", "committedDate": "2020-10-27T22:13:29Z", "message": "[HUDI-1351] Improvements to the hudi test suite for scalability and repeated testing.\n\n1. Added the --clean-input and --clean-output parameters to clean the input and output directories before starting the job\n2. Added the --delete-old-input parameter to deleted older batches for data already ingested. This helps keep number of redundant files low.\n3. Added the --input-parallelism parameter to restrict the parallelism when generating input data. This helps keeping the number of generated input files low.\n4. Added an option start_offset to Dag Nodes. Without ability to specify start offsets, data is generated into existing partitions. With start offset, DAG can control on which partition, the data is to be written.\n5. Fixed generation of records for correct number of partitions\n  - In the existing implementation, the partition is chosen as a random long. This does not guarantee exact number of requested partitions to be created.\n6. Changed variable blacklistedFields to be a Set as that is faster than List for membership checks.\n7. Fixed integer division for Math.ceil. If two integers are divided, the result is not double unless one of the integer is casted to double."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27149aad495ec3b0667e48c01e9be0e7afd3ad1c", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/27149aad495ec3b0667e48c01e9be0e7afd3ad1c", "committedDate": "2020-10-22T06:07:40Z", "message": "[HUDI-1351] Improvements to the hudi test suite for scalability and repeated testing.\n\n1. Added the --clean-input and --clean-output parameters to clean the input and output directories before starting the job\n2. Added the --delete-old-input parameter to deleted older batches for data already ingested. This helps keep number of redundant files low.\n3. Added the --input-parallelism parameter to restrict the parallelism when generating input data. This helps keeping the number of generated input files low.\n4. Added an option start_offset to Dag Nodes. Without ability to specify start offsets, data is generated into existing partitions. With start offset, DAG can control on which partition, the data is to be written.\n5. Fixed generation of records for correct number of partitions\n  - In the existing implementation, the partition is chosen as a random long. This does not guarantee exact number of requested partitions to be created.\n6. Changed variable blacklistedFields to be a Set as that is faster than List for membership checks.\n7. Fixed integer division for Math.ceil. If two integers are divided, the result is not double unless one of the integer is casted to double."}, "afterCommit": {"oid": "bc0559bc49682e514ec2a5e3817437ec17230712", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/bc0559bc49682e514ec2a5e3817437ec17230712", "committedDate": "2020-10-27T22:13:29Z", "message": "[HUDI-1351] Improvements to the hudi test suite for scalability and repeated testing.\n\n1. Added the --clean-input and --clean-output parameters to clean the input and output directories before starting the job\n2. Added the --delete-old-input parameter to deleted older batches for data already ingested. This helps keep number of redundant files low.\n3. Added the --input-parallelism parameter to restrict the parallelism when generating input data. This helps keeping the number of generated input files low.\n4. Added an option start_offset to Dag Nodes. Without ability to specify start offsets, data is generated into existing partitions. With start offset, DAG can control on which partition, the data is to be written.\n5. Fixed generation of records for correct number of partitions\n  - In the existing implementation, the partition is chosen as a random long. This does not guarantee exact number of requested partitions to be created.\n6. Changed variable blacklistedFields to be a Set as that is faster than List for membership checks.\n7. Fixed integer division for Math.ceil. If two integers are divided, the result is not double unless one of the integer is casted to double."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Nzg2ODYy", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-518786862", "createdAt": "2020-10-28T15:24:37Z", "commit": {"oid": "bc0559bc49682e514ec2a5e3817437ec17230712"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Njg0MDg1", "url": "https://github.com/apache/hudi/pull/2197#pullrequestreview-519684085", "createdAt": "2020-10-29T13:50:21Z", "commit": {"oid": "bc0559bc49682e514ec2a5e3817437ec17230712"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4214, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}