{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDE5MTM0", "number": 1395, "title": "[HUDI-667] Fixing delete tests for DeltaStreamer", "bodyText": "PR fixes a bug in delete record generation for tests in hoodie delta streamer.\nBrief change log\n\nFixing a bug in delete record generation for tests in hoodie delta streamer\n\nVerify this pull request\nThis pull request is already covered by existing tests. Most tests in TestHoodieDeltaStreamer tests deletes. Have to make some fixes to continuous tests as part of the bug fix.\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-03-10T23:59:59Z", "url": "https://github.com/apache/hudi/pull/1395", "merged": true, "mergeCommit": {"oid": "1ca912af0904283a270a822d5876babca5c89739"}, "closed": true, "closedAt": "2020-03-11T23:19:23Z", "author": {"login": "nsivabalan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMgPhCgH2gAyMzg2NDE5MTM0OmU3ZDlmMjhkY2VkNDBkNmJjYWQ4NGEzNTIxMWZlN2QyZGUyODY5MzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNNDshAFqTM3NDE2MTM0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e7d9f28dced40d6bcad84a35211fe7d2de286933", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/e7d9f28dced40d6bcad84a35211fe7d2de286933", "committedDate": "2020-03-11T05:27:05Z", "message": "Fixing delete tests for DeltaStreamer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e7d9f28dced40d6bcad84a35211fe7d2de286933", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/e7d9f28dced40d6bcad84a35211fe7d2de286933", "committedDate": "2020-03-11T05:27:05Z", "message": "Fixing delete tests for DeltaStreamer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTg5MDE1", "url": "https://github.com/apache/hudi/pull/1395#pullrequestreview-373189015", "createdAt": "2020-03-11T23:18:20Z", "commit": {"oid": "e7d9f28dced40d6bcad84a35211fe7d2de286933"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTYxMzQ0", "url": "https://github.com/apache/hudi/pull/1395#pullrequestreview-374161344", "createdAt": "2020-03-13T09:39:53Z", "commit": {"oid": "e7d9f28dced40d6bcad84a35211fe7d2de286933"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozOTo1NFrOF19KXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozOTo1NFrOF19KXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMDkyNQ==", "bodyText": "this line is solving the use case that you pointed out in jira @prashantwason . I guess the fix is complete and good to merge.", "url": "https://github.com/apache/hudi/pull/1395#discussion_r392120925", "createdAt": "2020-03-13T09:39:54Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -429,24 +428,24 @@ public HoodieRecord generateUpdateRecord(HoodieKey key, String commitTime) throw\n    */\n   public Stream<HoodieKey> generateUniqueDeleteStream(Integer n) {\n     final Set<KeyPartition> used = new HashSet<>();\n-\n     if (n > numExistingKeys) {\n       throw new IllegalArgumentException(\"Requested unique deletes is greater than number of available keys\");\n     }\n \n-    return IntStream.range(0, n).boxed().map(i -> {\n-      int index = numExistingKeys == 1 ? 0 : RAND.nextInt(numExistingKeys - 1);\n-      KeyPartition kp = existingKeys.get(index);\n-      // Find the available keyPartition starting from randomly chosen one.\n-      while (used.contains(kp)) {\n+    List<HoodieKey> result = new ArrayList<>();\n+    for (int i = 0; i < n; i++) {\n+      int index = RAND.nextInt(numExistingKeys);\n+      while (!existingKeys.containsKey(index)) {\n         index = (index + 1) % numExistingKeys;\n-        kp = existingKeys.get(index);\n       }\n-      existingKeys.remove(kp);\n+      KeyPartition kp = existingKeys.remove(index);\n+      existingKeys.put(index, existingKeys.get(numExistingKeys - 1));\n+      existingKeys.remove(numExistingKeys - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d9f28dced40d6bcad84a35211fe7d2de286933"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3817, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}