{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTkwMzQ4", "number": 2152, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxMjo0OVrOEr5S7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxMzoyOFrOEr5TWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDYyOTU5OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxMjo0OVrOHe6nAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNjoyNTozN1rOHmSS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3OTU4NA==", "bodyText": "Can we do LOG.error ?", "url": "https://github.com/apache/hudi/pull/2152#discussion_r502179584", "createdAt": "2020-10-09T04:12:49Z", "author": {"login": "n3nash"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "diffHunk": "@@ -68,8 +69,20 @@ private void reportAndCloseReporter() {\n     }\n   }\n \n+  private void reportAndFlushMetrics() {\n+    try {\n+      LOG.info(\"Reporting and flushing all metrics\");\n+\n+      this.registerHoodieCommonMetrics();\n+      this.reporter.report();\n+      this.registry.getNames().forEach(name -> this.registry.remove(name));\n+    } catch (Exception e) {\n+      Metrics.LOG.warn((Object)\"Error while reporting and flushing metrics\", (Throwable)e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45d75c6ad92d9a4ee0478c9c3703b74ebd8fc738"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxNjk0OQ==", "bodyText": "+1", "url": "https://github.com/apache/hudi/pull/2152#discussion_r509016949", "createdAt": "2020-10-21T06:22:38Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "diffHunk": "@@ -68,8 +69,20 @@ private void reportAndCloseReporter() {\n     }\n   }\n \n+  private void reportAndFlushMetrics() {\n+    try {\n+      LOG.info(\"Reporting and flushing all metrics\");\n+\n+      this.registerHoodieCommonMetrics();\n+      this.reporter.report();\n+      this.registry.getNames().forEach(name -> this.registry.remove(name));\n+    } catch (Exception e) {\n+      Metrics.LOG.warn((Object)\"Error while reporting and flushing metrics\", (Throwable)e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3OTU4NA=="}, "originalCommit": {"oid": "45d75c6ad92d9a4ee0478c9c3703b74ebd8fc738"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwNzY2Nw==", "bodyText": "Done", "url": "https://github.com/apache/hudi/pull/2152#discussion_r509907667", "createdAt": "2020-10-22T06:25:37Z", "author": {"login": "prashantwason"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "diffHunk": "@@ -68,8 +69,20 @@ private void reportAndCloseReporter() {\n     }\n   }\n \n+  private void reportAndFlushMetrics() {\n+    try {\n+      LOG.info(\"Reporting and flushing all metrics\");\n+\n+      this.registerHoodieCommonMetrics();\n+      this.reporter.report();\n+      this.registry.getNames().forEach(name -> this.registry.remove(name));\n+    } catch (Exception e) {\n+      Metrics.LOG.warn((Object)\"Error while reporting and flushing metrics\", (Throwable)e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3OTU4NA=="}, "originalCommit": {"oid": "45d75c6ad92d9a4ee0478c9c3703b74ebd8fc738"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDYzMDY1OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxMzoyOFrOHe6nig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNjoyNzoxM1rOHmSVwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3OTcyMg==", "bodyText": "What should be the right expectation if it's not initialized ? Simply returning gives a false impression to the client that it's flushed.", "url": "https://github.com/apache/hudi/pull/2152#discussion_r502179722", "createdAt": "2020-10-09T04:13:28Z", "author": {"login": "n3nash"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "diffHunk": "@@ -97,6 +110,14 @@ public static synchronized void shutdown() {\n     initialized = false;\n   }\n \n+  public static synchronized void flush() {\n+    if (!Metrics.initialized) {\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45d75c6ad92d9a4ee0478c9c3703b74ebd8fc738"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwODQxNg==", "bodyText": "This is inline with the shutdown() and init() functions which are fail-safe. Unless metrics are initialized there is no effect of calling these.", "url": "https://github.com/apache/hudi/pull/2152#discussion_r509908416", "createdAt": "2020-10-22T06:27:13Z", "author": {"login": "prashantwason"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/metrics/Metrics.java", "diffHunk": "@@ -97,6 +110,14 @@ public static synchronized void shutdown() {\n     initialized = false;\n   }\n \n+  public static synchronized void flush() {\n+    if (!Metrics.initialized) {\n+      return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE3OTcyMg=="}, "originalCommit": {"oid": "45d75c6ad92d9a4ee0478c9c3703b74ebd8fc738"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}