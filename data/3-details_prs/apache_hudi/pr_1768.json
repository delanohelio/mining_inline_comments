{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODQyMzA0", "number": 1768, "title": "[HUDI-1054][Peformance] Several performance fixes during finalizing writes", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nThis PR does several performance improvements described in https://issues.apache.org/jira/browse/HUDI-1054 that are specially useful for S3, but will be beneficial in general for hudi performance too.\nMy sample test data is a 1 TB data set, having 8000 partitions and approximately 190000 files for which finalize writes used to take 35-40 minutes. With these changes I am able to bring it down to less than 5 minutes.\nBrief change log\nVerify this pull request\n\nExisting unit tests\nTested with sample data on EMR cluster to observe performance difference\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-06-27T01:29:11Z", "url": "https://github.com/apache/hudi/pull/1768", "merged": true, "mergeCommit": {"oid": "e79fbc07fe803bc51cdf4f11948b133bbaa70595"}, "closed": true, "closedAt": "2020-08-01T03:10:29Z", "author": {"login": "umehrot2"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvPCH0gBqjM0ODg2MDQxOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6Z0gYABqjM2MTAwNTc2MzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/6fb69418431621ba4dbb1b42ac5c4d68be9b9137", "committedDate": "2020-06-27T03:10:55Z", "message": "[Peformance] Several performance fixes during finalizing writes for S3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjgzNzY4", "url": "https://github.com/apache/hudi/pull/1768#pullrequestreview-438683768", "createdAt": "2020-06-27T08:48:48Z", "commit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwODo0ODo0OFrOGp0XOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwODo0ODo0OFrOGp0XOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMjcxNQ==", "bodyText": "hudi-common is a base module and feels a little weird that it relies on spark-core/spark-sql, would we remove them and move getAllDataFilesForMarkers method to hudi-client module, wdyt? cc @bvaradar @vinothchandar", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446502715", "createdAt": "2020-06-27T08:48:48Z", "author": {"login": "leesf"}, "path": "hudi-common/pom.xml", "diffHunk": "@@ -147,6 +147,16 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <!-- Spark -->\n+    <dependency>\n+      <groupId>org.apache.spark</groupId>\n+      <artifactId>spark-core_${scala.binary.version}</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.spark</groupId>\n+      <artifactId>spark-sql_${scala.binary.version}</artifactId>\n+    </dependency>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzU4Njc1", "url": "https://github.com/apache/hudi/pull/1768#pullrequestreview-438758675", "createdAt": "2020-06-28T08:48:12Z", "commit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwODo0ODoxMlrOGp7mpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwOTowMDozMVrOGp7tug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMTM1MQ==", "bodyText": "yes.. we cannot depend on spark in hudi-common", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446621351", "createdAt": "2020-06-28T08:48:12Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/pom.xml", "diffHunk": "@@ -147,6 +147,16 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <!-- Spark -->\n+    <dependency>\n+      <groupId>org.apache.spark</groupId>\n+      <artifactId>spark-core_${scala.binary.version}</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.spark</groupId>\n+      <artifactId>spark-sql_${scala.binary.version}</artifactId>\n+    </dependency>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMjcxNQ=="}, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMjMxNw==", "bodyText": "i think this is the reason for needing spark in hudi-common.. we can move refactor the code to hudi-client..\nIn fact, #1755  has already modularized this more..", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446622317", "createdAt": "2020-06-28T08:55:19Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/fs/FSUtils.java", "diffHunk": "@@ -199,16 +201,40 @@ public static String getRelativePartitionPath(Path basePath, Path partitionPath)\n     return partitions;\n   }\n \n-  public static List<String> getAllDataFilesForMarkers(FileSystem fs, String basePath, String instantTs,\n-      String markerDir, String baseFileExtension) throws IOException {\n-    List<String> dataFiles = new LinkedList<>();\n-    processFiles(fs, markerDir, (status) -> {\n-      String pathStr = status.getPath().toString();\n-      if (pathStr.endsWith(HoodieTableMetaClient.MARKER_EXTN)) {\n-        dataFiles.add(FSUtils.translateMarkerToDataPath(basePath, pathStr, instantTs, baseFileExtension));\n+  public static Set<String> getAllDataFilesForMarkers(JavaSparkContext jsc, FileSystem fs, String basePath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMjU1MQ==", "bodyText": "@umehrot2 so seems like, for object stores this is different..  and makes sense completely to do parallel cleaning of individual files.", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446622551", "createdAt": "2020-06-28T08:56:39Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieTable.java", "diffHunk": "@@ -386,13 +389,26 @@ public void finalizeWrite(JavaSparkContext jsc, String instantTs, List<HoodieWri\n    *\n    * @param instantTs Instant Time\n    */\n-  public void deleteMarkerDir(String instantTs) {\n+  public void deleteMarkerDir(JavaSparkContext jsc, String instantTs) {\n     try {\n       FileSystem fs = getMetaClient().getFs();\n       Path markerDir = new Path(metaClient.getMarkerFolderPath(instantTs));\n+\n       if (fs.exists(markerDir)) {\n         // For append only case, we do not write to marker dir. Hence, the above check\n-        LOG.info(\"Removing marker directory=\" + markerDir);\n+        LOG.info(\"Removing marker directory = \" + markerDir);\n+\n+        FileStatus[] fileStatuses = fs.listStatus(markerDir);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMjgwOA==", "bodyText": "cc @n3nash should we have flag to protect this for HDFS.. i.e if the recursive delete works better there (IIUC). you might want to tradeoff less RPCs ..?\nwe can override defaults at spark datasource level, and set these based on StorageSchemes as well.", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446622808", "createdAt": "2020-06-28T08:58:15Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieTable.java", "diffHunk": "@@ -386,13 +389,26 @@ public void finalizeWrite(JavaSparkContext jsc, String instantTs, List<HoodieWri\n    *\n    * @param instantTs Instant Time\n    */\n-  public void deleteMarkerDir(String instantTs) {\n+  public void deleteMarkerDir(JavaSparkContext jsc, String instantTs) {\n     try {\n       FileSystem fs = getMetaClient().getFs();\n       Path markerDir = new Path(metaClient.getMarkerFolderPath(instantTs));\n+\n       if (fs.exists(markerDir)) {\n         // For append only case, we do not write to marker dir. Hence, the above check\n-        LOG.info(\"Removing marker directory=\" + markerDir);\n+        LOG.info(\"Removing marker directory = \" + markerDir);\n+\n+        FileStatus[] fileStatuses = fs.listStatus(markerDir);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMjU1MQ=="}, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMzEwMg==", "bodyText": "Math.min(subDirectories.size(), parallelism)?", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446623102", "createdAt": "2020-06-28T09:00:07Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/fs/FSUtils.java", "diffHunk": "@@ -199,16 +201,40 @@ public static String getRelativePartitionPath(Path basePath, Path partitionPath)\n     return partitions;\n   }\n \n-  public static List<String> getAllDataFilesForMarkers(FileSystem fs, String basePath, String instantTs,\n-      String markerDir, String baseFileExtension) throws IOException {\n-    List<String> dataFiles = new LinkedList<>();\n-    processFiles(fs, markerDir, (status) -> {\n-      String pathStr = status.getPath().toString();\n-      if (pathStr.endsWith(HoodieTableMetaClient.MARKER_EXTN)) {\n-        dataFiles.add(FSUtils.translateMarkerToDataPath(basePath, pathStr, instantTs, baseFileExtension));\n+  public static Set<String> getAllDataFilesForMarkers(JavaSparkContext jsc, FileSystem fs, String basePath,\n+      String instantTs, String markerDir, String baseFileExtension, int parallelism) throws IOException {\n+    FileStatus[] topLevelStatuses = fs.listStatus(new Path(markerDir));\n+\n+    Set<String> dataFiles = new HashSet<>();\n+\n+    List<String> subDirectories = new ArrayList<>();\n+    for (FileStatus topLevelStatus: topLevelStatuses) {\n+      if (topLevelStatus.isFile()) {\n+        String pathStr = topLevelStatus.getPath().toString();\n+        if (pathStr.endsWith(HoodieTableMetaClient.MARKER_EXTN)) {\n+          dataFiles.add(FSUtils.translateMarkerToDataPath(basePath, pathStr, instantTs, baseFileExtension));\n+        }\n+      } else {\n+        subDirectories.add(topLevelStatus.getPath().toString());\n       }\n-      return true;\n-    }, false);\n+    }\n+\n+    parallelism = subDirectories.size() < parallelism ? subDirectories.size() : parallelism;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjYyMzE2Mg==", "bodyText": "similar question here.. cc @n3nash ..", "url": "https://github.com/apache/hudi/pull/1768#discussion_r446623162", "createdAt": "2020-06-28T09:00:31Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/fs/FSUtils.java", "diffHunk": "@@ -199,16 +201,40 @@ public static String getRelativePartitionPath(Path basePath, Path partitionPath)\n     return partitions;\n   }\n \n-  public static List<String> getAllDataFilesForMarkers(FileSystem fs, String basePath, String instantTs,\n-      String markerDir, String baseFileExtension) throws IOException {\n-    List<String> dataFiles = new LinkedList<>();\n-    processFiles(fs, markerDir, (status) -> {\n-      String pathStr = status.getPath().toString();\n-      if (pathStr.endsWith(HoodieTableMetaClient.MARKER_EXTN)) {\n-        dataFiles.add(FSUtils.translateMarkerToDataPath(basePath, pathStr, instantTs, baseFileExtension));\n+  public static Set<String> getAllDataFilesForMarkers(JavaSparkContext jsc, FileSystem fs, String basePath,\n+      String instantTs, String markerDir, String baseFileExtension, int parallelism) throws IOException {\n+    FileStatus[] topLevelStatuses = fs.listStatus(new Path(markerDir));\n+\n+    Set<String> dataFiles = new HashSet<>();\n+\n+    List<String> subDirectories = new ArrayList<>();\n+    for (FileStatus topLevelStatus: topLevelStatuses) {\n+      if (topLevelStatus.isFile()) {\n+        String pathStr = topLevelStatus.getPath().toString();\n+        if (pathStr.endsWith(HoodieTableMetaClient.MARKER_EXTN)) {\n+          dataFiles.add(FSUtils.translateMarkerToDataPath(basePath, pathStr, instantTs, baseFileExtension));\n+        }\n+      } else {\n+        subDirectories.add(topLevelStatus.getPath().toString());\n       }\n-      return true;\n-    }, false);\n+    }\n+\n+    parallelism = subDirectories.size() < parallelism ? subDirectories.size() : parallelism;\n+    dataFiles.addAll(jsc.parallelize(subDirectories, parallelism).flatMap(directory -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fb69418431621ba4dbb1b42ac5c4d68be9b9137", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/6fb69418431621ba4dbb1b42ac5c4d68be9b9137", "committedDate": "2020-06-27T03:10:55Z", "message": "[Peformance] Several performance fixes during finalizing writes for S3"}, "afterCommit": {"oid": "cb31ed55735de021bf04cd76b2051453e3f1b928", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/cb31ed55735de021bf04cd76b2051453e3f1b928", "committedDate": "2020-07-28T19:34:04Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb31ed55735de021bf04cd76b2051453e3f1b928", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/cb31ed55735de021bf04cd76b2051453e3f1b928", "committedDate": "2020-07-28T19:34:04Z", "message": "[Peformance] Several performance fixes during finalizing writes"}, "afterCommit": {"oid": "ca7c58ba4598bcda25abe803219e893664cfcdda", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/ca7c58ba4598bcda25abe803219e893664cfcdda", "committedDate": "2020-07-28T19:39:03Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca7c58ba4598bcda25abe803219e893664cfcdda", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/ca7c58ba4598bcda25abe803219e893664cfcdda", "committedDate": "2020-07-28T19:39:03Z", "message": "[Peformance] Several performance fixes during finalizing writes"}, "afterCommit": {"oid": "39108c11713a277aa172b063be789bcbae58479d", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/39108c11713a277aa172b063be789bcbae58479d", "committedDate": "2020-07-29T23:17:25Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39108c11713a277aa172b063be789bcbae58479d", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/39108c11713a277aa172b063be789bcbae58479d", "committedDate": "2020-07-29T23:17:25Z", "message": "[Peformance] Several performance fixes during finalizing writes"}, "afterCommit": {"oid": "be8e6f48f849608d8178122d63f036a9462b918c", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/be8e6f48f849608d8178122d63f036a9462b918c", "committedDate": "2020-07-29T23:49:42Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4Mzk4MjMw", "url": "https://github.com/apache/hudi/pull/1768#pullrequestreview-458398230", "createdAt": "2020-07-30T13:27:00Z", "commit": {"oid": "be8e6f48f849608d8178122d63f036a9462b918c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzoyNzowMFrOG5i81w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMDoyNVrOG5jFyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5NDY0Nw==", "bodyText": "note to self: this will still work when subPath is a file. i.e non-partitioned tables", "url": "https://github.com/apache/hudi/pull/1768#discussion_r462994647", "createdAt": "2020-07-30T13:27:00Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/MarkerFiles.java", "diffHunk": "@@ -64,44 +69,87 @@ public MarkerFiles(HoodieTable<?> table, String instantTime) {\n         instantTime);\n   }\n \n-  public void quietDeleteMarkerDir() {\n+  public void quietDeleteMarkerDir(JavaSparkContext jsc, int parallelism) {\n     try {\n-      deleteMarkerDir();\n+      deleteMarkerDir(jsc, parallelism);\n     } catch (HoodieIOException ioe) {\n       LOG.warn(\"Error deleting marker directory for instant \" + instantTime, ioe);\n     }\n   }\n \n   /**\n    * Delete Marker directory corresponding to an instant.\n+   *\n+   * @param jsc Java Spark Context\n+   * @param parallelism Spark parallelism for deletion\n    */\n-  public boolean deleteMarkerDir() {\n+  public boolean deleteMarkerDir(JavaSparkContext jsc, int parallelism) {\n     try {\n-      boolean result = fs.delete(markerDirPath, true);\n-      if (result) {\n+      if (fs.exists(markerDirPath)) {\n+        FileStatus[] fileStatuses = fs.listStatus(markerDirPath);\n+        List<String> markerDirSubPaths = Arrays.stream(fileStatuses)\n+                .map(fileStatus -> fileStatus.getPath().toString())\n+                .collect(Collectors.toList());\n+\n+        if (markerDirSubPaths.size() > 0) {\n+          SerializableConfiguration conf = new SerializableConfiguration(fs.getConf());\n+          parallelism = Math.min(markerDirSubPaths.size(), parallelism);\n+          jsc.parallelize(markerDirSubPaths, parallelism).foreach(subPathStr -> {\n+            Path subPath = new Path(subPathStr);\n+            FileSystem fileSystem = subPath.getFileSystem(conf.get());\n+            fileSystem.delete(subPath, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be8e6f48f849608d8178122d63f036a9462b918c"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5NjkzOQ==", "bodyText": "nit: better to have the static methods right at the top?", "url": "https://github.com/apache/hudi/pull/1768#discussion_r462996939", "createdAt": "2020-07-30T13:30:25Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/MarkerFiles.java", "diffHunk": "@@ -110,6 +158,10 @@ private String translateMarkerToDataPath(String markerPath) {\n     return MarkerFiles.stripMarkerSuffix(rPath);\n   }\n \n+  public static String stripMarkerSuffix(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be8e6f48f849608d8178122d63f036a9462b918c"}, "originalPosition": 157}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be8e6f48f849608d8178122d63f036a9462b918c", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/be8e6f48f849608d8178122d63f036a9462b918c", "committedDate": "2020-07-29T23:49:42Z", "message": "[Peformance] Several performance fixes during finalizing writes"}, "afterCommit": {"oid": "8ad8a262b8581c23e4648304db6b493a2deb1a42", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/8ad8a262b8581c23e4648304db6b493a2deb1a42", "committedDate": "2020-07-31T17:37:22Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cecc151fd8b7df6b46a437ada2ba8ce94a515a9", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/4cecc151fd8b7df6b46a437ada2ba8ce94a515a9", "committedDate": "2020-07-31T19:58:12Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ad8a262b8581c23e4648304db6b493a2deb1a42", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/8ad8a262b8581c23e4648304db6b493a2deb1a42", "committedDate": "2020-07-31T17:37:22Z", "message": "[Peformance] Several performance fixes during finalizing writes"}, "afterCommit": {"oid": "4cecc151fd8b7df6b46a437ada2ba8ce94a515a9", "author": {"user": {"login": "umehrot2", "name": "Udit Mehrotra"}}, "url": "https://github.com/apache/hudi/commit/4cecc151fd8b7df6b46a437ada2ba8ce94a515a9", "committedDate": "2020-07-31T19:58:12Z", "message": "[Peformance] Several performance fixes during finalizing writes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2869, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}