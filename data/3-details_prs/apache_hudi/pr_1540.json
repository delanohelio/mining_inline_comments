{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzM4MjQy", "number": 1540, "title": "[HUDI-819] Fix a bug with MergeOnReadLazyInsertIterable. ", "bodyText": "What is the purpose of the pull request\nVariable declared here [1] masks protected statuses variable. So although hoodie writes data, will not include WriteStatus in the completed section. This can cause duplicates being written\n[1] https://github.com/apache/incubator-hudi/blob/master/hudi-client/src/main/java/org/apache/hudi/execution/MergeOnReadLazyInsertIterable.java#L53\nBrief change log\n\nDelete MergeOnReadLazyInsertIterable because it is exact same as COW except for the type of handle created (HoodieCreateHandle vs HoodieAppendHandle)\nAdded new 'HandleCreator' classes and reuse code in COWLazyInsertIterable\n\nLet me know if you have any other suggestions to improve this code. This refactoring also helps me with implementation of 'insert overwrite' features.\nVerify this pull request\nThis pull request is already covered by existing tests in hudi-client\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-04-20T22:36:32Z", "url": "https://github.com/apache/hudi/pull/1540", "merged": true, "mergeCommit": {"oid": "6de9f5d9e5cb1f82d7c32d04b114e7d4a181619b"}, "closed": true, "closedAt": "2020-04-27T19:50:40Z", "author": {"login": "satishkotha"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaOGf-gFqTM5ODU0ODE5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABca2Z88ABqjMyNzA2OTcxOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTQ4MTk4", "url": "https://github.com/apache/hudi/pull/1540#pullrequestreview-398548198", "createdAt": "2020-04-22T20:11:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDoxMTo1OFrOGKJg3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMDoxMjo1NVrOGKJlQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NDgxMg==", "bodyText": "Can we rename things per a standard factory pattern here?  WriteHandleCreatorFactory with a create() method?", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413294812", "createdAt": "2020-04-22T20:11:58Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/HoodieHandleCreator.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public interface HoodieHandleCreator<T extends HoodieRecordPayload> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NTYzNw==", "bodyText": "this will then become CreateHandleFactory", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413295637", "createdAt": "2020-04-22T20:12:40Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/DefaultHoodieWriteHandleCreator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class DefaultHoodieWriteHandleCreator<T extends HoodieRecordPayload> implements HoodieHandleCreator<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NTkzNg==", "bodyText": "and this AppendHandleFactory", "url": "https://github.com/apache/hudi/pull/1540#discussion_r413295936", "createdAt": "2020-04-22T20:12:55Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/HoodieAppendHandleCreator.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class HoodieAppendHandleCreator<T extends HoodieRecordPayload> extends DefaultHoodieWriteHandleCreator<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjQxODYx", "url": "https://github.com/apache/hudi/pull/1540#pullrequestreview-399641861", "createdAt": "2020-04-24T05:05:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTowNToxOVrOGLGlFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNTowOToxOFrOGLGrEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NTMxOQ==", "bodyText": "This inheritance is kind of confusing..", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414295319", "createdAt": "2020-04-24T05:05:19Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/AppendHandleFactory.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class AppendHandleFactory<T extends HoodieRecordPayload> extends CreateHandleFactory<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NjE5MQ==", "bodyText": "Rename to just WriteHandleFactory?", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296191", "createdAt": "2020-04-24T05:07:30Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/WriteHandleCreatorFactory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public interface WriteHandleCreatorFactory<T extends HoodieRecordPayload> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5Njc2MQ==", "bodyText": "if you need some method in both Append and Create Handle factories, perhaps move it as a default method in the interface?", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296761", "createdAt": "2020-04-24T05:08:59Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/AppendHandleFactory.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.io;\n+\n+import org.apache.hudi.client.SparkTaskContextSupplier;\n+import org.apache.hudi.common.model.HoodieRecordPayload;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.table.HoodieTable;\n+\n+public class AppendHandleFactory<T extends HoodieRecordPayload> extends CreateHandleFactory<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NTMxOQ=="}, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5Njg1MA==", "bodyText": "please rename this accordingly as well", "url": "https://github.com/apache/hudi/pull/1540#discussion_r414296850", "createdAt": "2020-04-24T05:09:18Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/execution/LazyInsertIterable.java", "diffHunk": "@@ -43,26 +44,34 @@\n /**\n  * Lazy Iterable, that writes a stream of HoodieRecords sorted by the partitionPath, into new files.\n  */\n-public class CopyOnWriteLazyInsertIterable<T extends HoodieRecordPayload>\n+public class LazyInsertIterable<T extends HoodieRecordPayload>\n     extends LazyIterableIterator<HoodieRecord<T>, List<WriteStatus>> {\n \n   protected final HoodieWriteConfig hoodieConfig;\n   protected final String instantTime;\n   protected final HoodieTable<T> hoodieTable;\n   protected final String idPrefix;\n-  protected int numFilesWritten;\n   protected SparkTaskContextSupplier sparkTaskContextSupplier;\n+  protected WriteHandleCreatorFactory<T> writeHandleCreatorFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8647744e16254a56598565f0a6a6276e936251d9", "author": {"user": {"login": "satishkotha", "name": null}}, "url": "https://github.com/apache/hudi/commit/8647744e16254a56598565f0a6a6276e936251d9", "committedDate": "2020-04-24T19:10:53Z", "message": "Fix a bug with MergeOnReadLazyInsertIterable. Variable declared here[1] masks protected statuses variable. So although hoodie writes data, will not include writestatus in the completed section. This can cause duplicates being written\n\n[1] https://github.com/apache/incubator-hudi/blob/master/hudi-client/src/main/java/org/apache/hudi/execution/MergeOnReadLazyInsertIterable.java#L53"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8647744e16254a56598565f0a6a6276e936251d9", "author": {"user": {"login": "satishkotha", "name": null}}, "url": "https://github.com/apache/hudi/commit/8647744e16254a56598565f0a6a6276e936251d9", "committedDate": "2020-04-24T19:10:53Z", "message": "Fix a bug with MergeOnReadLazyInsertIterable. Variable declared here[1] masks protected statuses variable. So although hoodie writes data, will not include writestatus in the completed section. This can cause duplicates being written\n\n[1] https://github.com/apache/incubator-hudi/blob/master/hudi-client/src/main/java/org/apache/hudi/execution/MergeOnReadLazyInsertIterable.java#L53"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3476, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}