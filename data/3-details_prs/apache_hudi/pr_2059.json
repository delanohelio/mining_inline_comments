{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDk0ODY3", "number": 2059, "title": "[HUDI-1254] TypedProperties can not get values by initializing an existing properties", "bodyText": "Tips\n\nFix the bug----TypedProperties\nWhen using its constructor,TypedProperties can not get values. It's going to throw an exception of Property XXXX not found\n\nWhat is the purpose of the pull request\nFix the bug\nBrief change log\n\nModify TypedProperties#checkKey()\n-Replace containsKey with checkKey\n\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded TestTypedProperties#testNewTypedProperties  and TestDFSPropertiesConfiguration#testParsing  to verify the change.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-09-01T13:48:03Z", "url": "https://github.com/apache/hudi/pull/2059", "merged": true, "mergeCommit": {"oid": "063a98fc2b76beac28a4797884973abd2911c887"}, "closed": true, "closedAt": "2020-09-09T15:42:42Z", "author": {"login": "linshan-ma"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcygDcQgH2gAyNDc3MDk0ODY3Ojk5OTBmOTVlOTgxNTE5ZTIwMWY5NzRjMGJhZjBjM2JlMTJhNzc1NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHOIXlgFqTQ4NTE0MzUzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9990f95e981519e201f974c0baf0c3be12a77556", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/9990f95e981519e201f974c0baf0c3be12a77556", "committedDate": "2020-07-07T06:43:01Z", "message": "[HUDI-1064]Delete extra rows from the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48e79da09e5e83a8aca22a03433cca908eb7509d", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/48e79da09e5e83a8aca22a03433cca908eb7509d", "committedDate": "2020-07-07T07:07:00Z", "message": "[HUDI-1064]remove .get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd3b6c94779c3a296cf966562001e3583e6990c", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/8fd3b6c94779c3a296cf966562001e3583e6990c", "committedDate": "2020-07-07T08:41:49Z", "message": "[HUDI-1064]Trim hoodie table name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2ef0fdba4d1a31adda3b7d614781ef94e223d3d", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/b2ef0fdba4d1a31adda3b7d614781ef94e223d3d", "committedDate": "2020-07-07T08:42:56Z", "message": "Merge remote-tracking branch 'origin/HUDI-1064' into HUDI-1064\n\n# Conflicts:\n#\thudi-spark/src/main/scala/org/apache/hudi/HoodieSparkSqlWriter.scala"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0302a1ccc84bd172d8b53e695e08a9d2d12d6b1", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/c0302a1ccc84bd172d8b53e695e08a9d2d12d6b1", "committedDate": "2020-07-07T08:46:13Z", "message": "[HUDI-1064]remove .get()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed585fc47add68f8487c006ae9950f74ff877d43", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/ed585fc47add68f8487c006ae9950f74ff877d43", "committedDate": "2020-07-07T08:52:50Z", "message": "[HUDI-1064]To solve the java.util.NoSuchElementException: None.get exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3e6b5514952d606e2b8e0d6202eae19138a9fd", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/8b3e6b5514952d606e2b8e0d6202eae19138a9fd", "committedDate": "2020-07-07T08:55:45Z", "message": "[HUDI-1064]compiler suceess"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b0601d82440fe0000855f165da09f5cbe61b0db", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/7b0601d82440fe0000855f165da09f5cbe61b0db", "committedDate": "2020-07-14T09:13:11Z", "message": "Sync from upstream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0bbff7bd8fe0bbbb301ba853028887d548c8aa9", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/d0bbff7bd8fe0bbbb301ba853028887d548c8aa9", "committedDate": "2020-07-15T07:33:49Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a10f9fd78baf426f65be58b1f3977941aba5ecd5", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/a10f9fd78baf426f65be58b1f3977941aba5ecd5", "committedDate": "2020-07-22T01:55:59Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a82e962d1bdffc7b46b3420f9a31cbaa9e029c6", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/9a82e962d1bdffc7b46b3420f9a31cbaa9e029c6", "committedDate": "2020-07-28T06:35:45Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a19ca75cb64fc8491d4e3bb1acedcaa4a53019b8", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/a19ca75cb64fc8491d4e3bb1acedcaa4a53019b8", "committedDate": "2020-07-29T08:03:41Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d86ddabf53e029f12b5b41c98073bddddafa8fca", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/d86ddabf53e029f12b5b41c98073bddddafa8fca", "committedDate": "2020-08-06T02:21:19Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d06d94b4a32d10133259e92107ccbf3703908dcb", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/d06d94b4a32d10133259e92107ccbf3703908dcb", "committedDate": "2020-08-07T02:02:43Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b9ba2d118660e5647d1f89ee898ba6327ed36b", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/d0b9ba2d118660e5647d1f89ee898ba6327ed36b", "committedDate": "2020-08-10T03:12:36Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2999cb8b199fb6aa4d7e22e0a4577c86e9c2fc69", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/2999cb8b199fb6aa4d7e22e0a4577c86e9c2fc69", "committedDate": "2020-08-18T11:33:06Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6fc3fa43c5f9d3c180257fa89dd6e4b290d64ea", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/e6fc3fa43c5f9d3c180257fa89dd6e4b290d64ea", "committedDate": "2020-09-01T03:34:25Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f347bf54433203f1988a443c80e2c6ea24b70f4", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/9f347bf54433203f1988a443c80e2c6ea24b70f4", "committedDate": "2020-09-01T13:26:57Z", "message": "[HUDI-1254] Fix the bug\uff08TypedProperties can not get values \uff09"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15812776c797b13a5762c2e2fc9b12df288b08a", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/f15812776c797b13a5762c2e2fc9b12df288b08a", "committedDate": "2020-09-01T13:45:07Z", "message": "[HUDI-1254] add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/125ea605c0e12569381862ce6a09c22a70fea4bd", "committedDate": "2020-09-02T04:35:58Z", "message": "[HUDI-1254] add license"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzI0MTg2", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-480724186", "createdAt": "2020-09-02T11:24:44Z", "commit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyNDo0NFrOHLqqSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyNDo0NFrOHLqqSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg==", "bodyText": "checkKey would be rename to containsKey", "url": "https://github.com/apache/hudi/pull/2059#discussion_r481995336", "createdAt": "2020-09-02T11:24:44Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab428ea1e3534b708e184103c277736c534a2d1", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/cab428ea1e3534b708e184103c277736c534a2d1", "committedDate": "2020-09-03T09:19:05Z", "message": "[HUDI-1254] Add function keyExists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de214cd9b2a9bc14e3fccffa0c1d897fbdbbc96b", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/de214cd9b2a9bc14e3fccffa0c1d897fbdbbc96b", "committedDate": "2020-09-03T10:15:48Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce2755d5e9b283426d3ecd5af305a835311f82c3", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/ce2755d5e9b283426d3ecd5af305a835311f82c3", "committedDate": "2020-09-03T10:22:02Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360", "committedDate": "2020-09-04T04:57:14Z", "message": "[HUDI-1254] Resolve compile error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTg2ODk3", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-482586897", "createdAt": "2020-09-04T11:50:53Z", "commit": {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo1MDo1M1rOHNKm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMTo1MDo1M1rOHNKm4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2NzMyOA==", "bodyText": "would be rename to testGetString() and also would add getLong, getBoolean Uts", "url": "https://github.com/apache/hudi/pull/2059#discussion_r483567328", "createdAt": "2020-09-04T11:50:53Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testNewTypedProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTg4MjYx", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-482588261", "createdAt": "2020-09-04T11:53:14Z", "commit": {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d79ec80e0a223c93f1b0216538bce57d6045951c", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/d79ec80e0a223c93f1b0216538bce57d6045951c", "committedDate": "2020-09-07T12:29:23Z", "message": "[HUDI-1254] add method test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "committedDate": "2020-09-07T12:36:18Z", "message": "[HUDI-1254] Standard code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1MTY2", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655166", "createdAt": "2020-09-07T16:20:02Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDowMlrOHOEROQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDowMlrOHOEROQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjA1Nw==", "bodyText": "\"key1\",456 -> \"key1\", 456", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512057", "createdAt": "2020-09-07T16:20:02Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1MjM0", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655234", "createdAt": "2020-09-07T16:20:12Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDoxMlrOHOERcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDoxMlrOHOERcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjExMw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512113", "createdAt": "2020-09-07T16:20:12Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1NDU0", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655454", "createdAt": "2020-09-07T16:20:45Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDo0NVrOHOESIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMDo0NVrOHOESIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjI5MA==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512290", "createdAt": "2020-09-07T16:20:45Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1NjA4", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655608", "createdAt": "2020-09-07T16:21:08Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMTowOFrOHOESlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMTowOFrOHOESlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQwNg==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512406", "createdAt": "2020-09-07T16:21:08Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1NjU3", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655657", "createdAt": "2020-09-07T16:21:15Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToxNlrOHOESxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToxNlrOHOESxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ1Mg==", "bodyText": "testGetBoolean", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512452", "createdAt": "2020-09-07T16:21:16Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNjU1NzE3", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-483655717", "createdAt": "2020-09-07T16:21:26Z", "commit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToyNlrOHOES8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoyMToyNlrOHOES8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ5Nw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512497", "createdAt": "2020-09-07T16:21:26Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"true\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(true, typedProperties.getBoolean(\"key1\"));\n+    assertEquals(true, typedProperties.getBoolean(\"key1\",false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/57cf4f29b9707db352fbf4827265db8ea93f0c2d", "committedDate": "2020-09-08T01:50:39Z", "message": "[HUDI-1254] delete space"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f50e6d81a33dc00667db9354d61fb2b097d7587", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/8f50e6d81a33dc00667db9354d61fb2b097d7587", "committedDate": "2020-09-09T11:50:14Z", "message": "[HUDI-1254] Specification code, add Spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40013a11f4f0ae90cd7ea18043c9ecab252edd79", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/40013a11f4f0ae90cd7ea18043c9ecab252edd79", "committedDate": "2020-09-09T11:54:23Z", "message": "[HUDI-1254] Specification code, add Spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aabd9b2ddb6525e88f355056360ea0579751e12", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/5aabd9b2ddb6525e88f355056360ea0579751e12", "committedDate": "2020-09-09T11:58:33Z", "message": "[HUDI-1254] Specification of the codecode,"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTQzNTM2", "url": "https://github.com/apache/hudi/pull/2059#pullrequestreview-485143536", "createdAt": "2020-09-09T15:42:31Z", "commit": {"oid": "5aabd9b2ddb6525e88f355056360ea0579751e12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4491, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}