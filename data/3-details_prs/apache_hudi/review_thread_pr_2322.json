{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MDE0OTk4", "number": 2322, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDoyMzozMlrOFEAiJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowNDoyNlrOFFbgcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzQ3MzY0OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/ReplaceArchivalHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDoyMzozMlrOID68HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNDozNjo1NlrOIEf6Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk4MjMwMQ==", "bodyText": ",\"Delete replaced file groups\" -> , \"Delete replaced file groups\"", "url": "https://github.com/apache/hudi/pull/2322#discussion_r540982301", "createdAt": "2020-12-11T14:23:32Z", "author": {"login": "leesf"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/ReplaceArchivalHelper.java", "diffHunk": "@@ -68,7 +68,7 @@\n   public static boolean deleteReplacedFileGroups(HoodieEngineContext context, HoodieTableMetaClient metaClient,\n                                                  TableFileSystemView fileSystemView,\n                                                  HoodieInstant instant, List<String> replacedPartitions) {\n-\n+    context.setJobStatus(ReplaceArchivalHelper.class.getSimpleName(),\"Delete replaced file groups\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7be7c992e707884206c835356068c28b079034b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4Nzk3NA==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2322#discussion_r541587974", "createdAt": "2020-12-12T14:36:56Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/ReplaceArchivalHelper.java", "diffHunk": "@@ -68,7 +68,7 @@\n   public static boolean deleteReplacedFileGroups(HoodieEngineContext context, HoodieTableMetaClient metaClient,\n                                                  TableFileSystemView fileSystemView,\n                                                  HoodieInstant instant, List<String> replacedPartitions) {\n-\n+    context.setJobStatus(ReplaceArchivalHelper.class.getSimpleName(),\"Delete replaced file groups\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk4MjMwMQ=="}, "originalCommit": {"oid": "d7be7c992e707884206c835356068c28b079034b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzc1MjM2OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/main/java/org/apache/hudi/common/util/queue/IteratorBasedQueueProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNzo1MjowMVrOIExICw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNDo0NjozNFrOIE1XUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg3MDA5MQ==", "bodyText": "this would be inneccessary?", "url": "https://github.com/apache/hudi/pull/2322#discussion_r541870091", "createdAt": "2020-12-13T07:52:01Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/queue/IteratorBasedQueueProducer.java", "diffHunk": "@@ -42,9 +42,10 @@ public IteratorBasedQueueProducer(Iterator<I> inputIterator) {\n   @Override\n   public void produce(BoundedInMemoryQueue<I, ?> queue) throws Exception {\n     LOG.info(\"starting to buffer records\");\n+    long start = System.currentTimeMillis();\n     while (inputIterator.hasNext()) {\n       queue.insertRecord(inputIterator.next());\n     }\n-    LOG.info(\"finished buffering records\");\n+    LOG.info(\"finished buffering records, cost = \" + ((System.currentTimeMillis() - start) / 1000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab96d884a4fa8b8ce1657bbed5b9a5b3267bdad7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTkzOTUzNg==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2322#discussion_r541939536", "createdAt": "2020-12-13T14:46:34Z", "author": {"login": "lw309637554"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/queue/IteratorBasedQueueProducer.java", "diffHunk": "@@ -42,9 +42,10 @@ public IteratorBasedQueueProducer(Iterator<I> inputIterator) {\n   @Override\n   public void produce(BoundedInMemoryQueue<I, ?> queue) throws Exception {\n     LOG.info(\"starting to buffer records\");\n+    long start = System.currentTimeMillis();\n     while (inputIterator.hasNext()) {\n       queue.insertRecord(inputIterator.next());\n     }\n-    LOG.info(\"finished buffering records\");\n+    LOG.info(\"finished buffering records, cost = \" + ((System.currentTimeMillis() - start) / 1000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg3MDA5MQ=="}, "originalCommit": {"oid": "ab96d884a4fa8b8ce1657bbed5b9a5b3267bdad7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjc4MjE3OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTo1MzoyNlrOIFIXvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo1ODo1N1rOIG_lPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw==", "bodyText": "Should we clear the jobGroup after the job finish?If not, the next job will reuse the group name.", "url": "https://github.com/apache/hudi/pull/2322#discussion_r542250943", "createdAt": "2020-12-14T09:53:26Z", "author": {"login": "pengzhiwei2018"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3OTc0MA==", "bodyText": "@pengzhiwei2018 Since each job should have been set their own job group name, so it should be ok?", "url": "https://github.com/apache/hudi/pull/2322#discussion_r542479740", "createdAt": "2020-12-14T15:35:31Z", "author": {"login": "leesf"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk3MTY4NA==", "bodyText": "Should we clear the jobGroup after the job finish?If not, the next job will reuse the group name.\n\n@pengzhiwei2018 Some method to do one specific operation of hudi, may be contain not only one spark action. it can reuse the jobGroup. In this scenario , We don\u2019t have to set it so detailed. Also it will be more suitable just like @leesf mention,  follow the original mechanism of Hudi.", "url": "https://github.com/apache/hudi/pull/2322#discussion_r542971684", "createdAt": "2020-12-15T01:19:44Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5OTgyMQ==", "bodyText": "@leesf @lw309637554 Maybe we can make all of the spark job in hoodie have a job group name. But if user does some spark action after the hoodie job.The user's  job may reuse the hoodie's job group name.It is hard to control the user's behavior. In my use case, the reused job group name make me really confused in performance profile.", "url": "https://github.com/apache/hudi/pull/2322#discussion_r542999821", "createdAt": "2020-12-15T02:35:02Z", "author": {"login": "pengzhiwei2018"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAzODM3Nw==", "bodyText": "yeah, as your case  you can set job group in you spark job. just like hudi do .", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543038377", "createdAt": "2020-12-15T04:31:48Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MTk3NA==", "bodyText": "may be we can set the jobGroup to \"\" upon writeClient.close() or something?", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543091974", "createdAt": "2020-12-15T06:56:51Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwNDA5NA==", "bodyText": "this option make sense", "url": "https://github.com/apache/hudi/pull/2322#discussion_r544204094", "createdAt": "2020-12-16T10:58:57Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1MDk0Mw=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM2MDI0OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/HoodieTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo1OTowNlrOIF7w1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo1OTozNFrOIG_m1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5Mjk0OA==", "bodyText": "change message to : \"Delete invalid files generated during the write operation\" ?", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543092948", "createdAt": "2020-12-15T06:59:06Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/HoodieTable.java", "diffHunk": "@@ -403,6 +403,7 @@ public void finalizeWrite(HoodieEngineContext context, String instantTs, List<Ho\n \n   private void deleteInvalidFilesByPartitions(HoodieEngineContext context, Map<String, List<Pair<String, String>>> invalidFilesByPartition) {\n     // Now delete partially written files\n+    context.setJobStatus(this.getClass().getSimpleName(), \"Delete invalid files by partitions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwNDUwMg==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2322#discussion_r544204502", "createdAt": "2020-12-16T10:59:34Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/HoodieTable.java", "diffHunk": "@@ -403,6 +403,7 @@ public void finalizeWrite(HoodieEngineContext context, String instantTs, List<Ho\n \n   private void deleteInvalidFilesByPartitions(HoodieEngineContext context, Map<String, List<Pair<String, String>>> invalidFilesByPartition) {\n     // Now delete partially written files\n+    context.setJobStatus(this.getClass().getSimpleName(), \"Delete invalid files by partitions\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5Mjk0OA=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM2MzUyOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/MarkerFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMDowM1rOIF7yiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTowMDowMlrOIG_oCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MzM4NA==", "bodyText": "change to : Obtaining marker files for all created, merged paths", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543093384", "createdAt": "2020-12-15T07:00:03Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/MarkerFiles.java", "diffHunk": "@@ -135,6 +135,7 @@ public boolean doesMarkerDirExist() throws IOException {\n     if (subDirectories.size() > 0) {\n       parallelism = Math.min(subDirectories.size(), parallelism);\n       SerializableConfiguration serializedConf = new SerializableConfiguration(fs.getConf());\n+      context.setJobStatus(this.getClass().getSimpleName(), \"MarkerFiles created and merged data paths\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwNDgxMA==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2322#discussion_r544204810", "createdAt": "2020-12-16T11:00:02Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/table/MarkerFiles.java", "diffHunk": "@@ -135,6 +135,7 @@ public boolean doesMarkerDirExist() throws IOException {\n     if (subDirectories.size() > 0) {\n       parallelism = Math.min(subDirectories.size(), parallelism);\n       SerializableConfiguration serializedConf = new SerializableConfiguration(fs.getConf());\n+      context.setJobStatus(this.getClass().getSimpleName(), \"MarkerFiles created and merged data paths\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MzM4NA=="}, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM3MDEwOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/bloom/SparkHoodieBloomIndex.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMTo1OVrOIF71-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMTo1OVrOIF71-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NDI2Ng==", "bodyText": "Change to : Compute all comparisons needed between records and files", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543094266", "createdAt": "2020-12-15T07:01:59Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/bloom/SparkHoodieBloomIndex.java", "diffHunk": "@@ -137,12 +137,14 @@ public SparkHoodieBloomIndex(HoodieWriteConfig config) {\n    */\n   private Map<String, Long> computeComparisonsPerFileGroup(final Map<String, Long> recordsPerPartition,\n                                                            final Map<String, List<BloomIndexFileInfo>> partitionToFileInfo,\n-                                                           JavaPairRDD<String, String> partitionRecordKeyPairRDD) {\n+                                                           JavaPairRDD<String, String> partitionRecordKeyPairRDD,\n+                                                           final HoodieEngineContext context) {\n \n     Map<String, Long> fileToComparisons;\n     if (config.getBloomIndexPruneByRanges()) {\n       // we will just try exploding the input and then count to determine comparisons\n       // FIX(vc): Only do sampling here and extrapolate?\n+      context.setJobStatus(this.getClass().getSimpleName(), \"Explode recordRDD with file comparisons\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM3MTQ2OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMjoyNlrOIF72sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMjoyNlrOIF72sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NDQ0OA==", "bodyText": "Change to : Building workload profile", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543094448", "createdAt": "2020-12-15T07:02:26Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java", "diffHunk": "@@ -101,6 +101,7 @@ public BaseSparkCommitActionExecutor(HoodieEngineContext context,\n \n     WorkloadProfile profile = null;\n     if (isWorkloadProfileNeeded()) {\n+      context.setJobStatus(this.getClass().getSimpleName(), \"Build workload profile\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM3NjE2OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/compact/SparkRunCompactionActionExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMzo1NFrOIF75Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowMzo1NFrOIF75Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NTEwMw==", "bodyText": "Change to : Preparing compaction metadata", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543095103", "createdAt": "2020-12-15T07:03:54Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/compact/SparkRunCompactionActionExecutor.java", "diffHunk": "@@ -76,6 +76,7 @@ public SparkRunCompactionActionExecutor(HoodieSparkEngineContext context,\n       JavaRDD<WriteStatus> statuses = compactor.compact(context, compactionPlan, table, config, instantTime);\n \n       statuses.persist(SparkMemoryUtils.getWriteStatusStorageLevel(config.getProps()));\n+      context.setJobStatus(this.getClass().getSimpleName(), \"Collect compaction metadata status\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM3ODcyOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowNDoyNlrOIF76kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowNDoyNlrOIF76kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NTQ0Mg==", "bodyText": "Change to:  Rolling back using marker files", "url": "https://github.com/apache/hudi/pull/2322#discussion_r543095442", "createdAt": "2020-12-15T07:04:26Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/rollback/SparkMarkerBasedRollbackStrategy.java", "diffHunk": "@@ -52,6 +52,7 @@ public SparkMarkerBasedRollbackStrategy(HoodieTable<T, JavaRDD<HoodieRecord<T>>,\n       MarkerFiles markerFiles = new MarkerFiles(table, instantToRollback.getTimestamp());\n       List<String> markerFilePaths = markerFiles.allMarkerFilePaths();\n       int parallelism = Math.max(Math.min(markerFilePaths.size(), config.getRollbackParallelism()), 1);\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Marker files rollback\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4181d08d22184035dcb6f73a1103fedcb95eaef3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3998, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}