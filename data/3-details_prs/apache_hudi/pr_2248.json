{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NjY4MTc2", "number": 2248, "title": "[HUDI-1196] Update HoodieKey when deduplicating records", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nCurrently when records are deduplicated HoodieKey is chosen without respect to results of precombine method. This creates issues when using global index if partition values are different in a batch. The record can be placed in the incorrect partition since partitionPath in HoodieKey does not correspond to data returned by precombine().\nhttps://issues.apache.org/jira/browse/HUDI-1196\nBrief change log\nThis change checks to see whether data returned by precombine() corresponds to record1 or record2 and creates HoodieRecord with the proper HoodieKey\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is a trivial rework / code cleanup without any test coverage.\n(or)\nThis pull request is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end.\nAdded HoodieClientWriteTest to verify the change.\nManually verified the change by running a job locally.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-11-12T06:59:13Z", "url": "https://github.com/apache/hudi/pull/2248", "merged": true, "mergeCommit": {"oid": "78fd12259404cad8117862fdf0b948cbe115e453"}, "closed": true, "closedAt": "2020-12-01T21:50:47Z", "author": {"login": "rmpifer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbsBjzgH2gAyNTE5NjY4MTc2OjY5MmMwODAwZTk0NThhNzQyMjA5MTRjOWI1OTcwZTljOTJlN2E0ZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiBHhhgFqTU0MjMyNDI1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/692c0800e9458a74220914c9b5970e9c92e7a4f0", "committedDate": "2020-11-12T05:50:43Z", "message": "Update HoodieKey when deduplicating records"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTY1NDc0", "url": "https://github.com/apache/hudi/pull/2248#pullrequestreview-528965474", "createdAt": "2020-11-12T10:48:51Z", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDo0ODo1MlrOHx1HLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDo0ODo1MlrOHx1HLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAxMjQ2MQ==", "bodyText": "Hi @rmpifer thanks for your contribution\nIt seems  rec1.getKey() equals  rec2.getKey() ? each of them is ok.", "url": "https://github.com/apache/hudi/pull/2248#discussion_r522012461", "createdAt": "2020-11-12T10:48:52Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/SparkWriteHelper.java", "diffHunk": "@@ -59,10 +59,9 @@ public static SparkWriteHelper newInstance() {\n     }).reduceByKey((rec1, rec2) -> {\n       @SuppressWarnings(\"unchecked\")\n       T reducedData = (T) rec1.getData().preCombine(rec2.getData());\n-      // we cannot allow the user to change the key or partitionPath, since that will affect\n-      // everything\n-      // so pick it from one of the records.\n-      return new HoodieRecord<T>(rec1.getKey(), reducedData);\n+      HoodieKey reducedKey = rec1.getData().equals(reducedData) ? rec1.getKey() : rec2.getKey();\n+\n+      return new HoodieRecord<T>(reducedKey, reducedData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjUzNjkw", "url": "https://github.com/apache/hudi/pull/2248#pullrequestreview-529653690", "createdAt": "2020-11-13T02:11:33Z", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMjoxMTozM1rOHyW8tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMjoxMTozM1rOHyW8tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU2NjgzOA==", "bodyText": "@wangxianghu Not necessarily. If global indexed it is reduced on record key not hoodie key. In the case I mentioned rec1 and rec2 would have different partitionPath values which is why arbitrarily choosing this causes an issue.\n\nI get your point, you're right. when using a global index,  we might get a wrong HoodieKey for the HoodieRecord. how about adding some comments to note this change?\nBTW, please file a Jira ticket to track this change, and rename this pr to 'Fix xxx when .....' ?", "url": "https://github.com/apache/hudi/pull/2248#discussion_r522566838", "createdAt": "2020-11-13T02:11:33Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/SparkWriteHelper.java", "diffHunk": "@@ -59,10 +59,9 @@ public static SparkWriteHelper newInstance() {\n     }).reduceByKey((rec1, rec2) -> {\n       @SuppressWarnings(\"unchecked\")\n       T reducedData = (T) rec1.getData().preCombine(rec2.getData());\n-      // we cannot allow the user to change the key or partitionPath, since that will affect\n-      // everything\n-      // so pick it from one of the records.\n-      return new HoodieRecord<T>(rec1.getKey(), reducedData);\n+      HoodieKey reducedKey = rec1.getData().equals(reducedData) ? rec1.getKey() : rec2.getKey();\n+\n+      return new HoodieRecord<T>(reducedKey, reducedData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAxMjQ2MQ=="}, "originalCommit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzY1MzQ0", "url": "https://github.com/apache/hudi/pull/2248#pullrequestreview-531365344", "createdAt": "2020-11-16T14:23:35Z", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Nzg1ODA1", "url": "https://github.com/apache/hudi/pull/2248#pullrequestreview-536785805", "createdAt": "2020-11-23T19:35:21Z", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozNToyMVrOH4cdWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozNToyMVrOH4cdWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0ODU3MA==", "bodyText": "so if preCombine() is a merge, then the equals check may not succed?", "url": "https://github.com/apache/hudi/pull/2248#discussion_r528948570", "createdAt": "2020-11-23T19:35:21Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/SparkWriteHelper.java", "diffHunk": "@@ -59,10 +59,9 @@ public static SparkWriteHelper newInstance() {\n     }).reduceByKey((rec1, rec2) -> {\n       @SuppressWarnings(\"unchecked\")\n       T reducedData = (T) rec1.getData().preCombine(rec2.getData());\n-      // we cannot allow the user to change the key or partitionPath, since that will affect\n-      // everything\n-      // so pick it from one of the records.\n-      return new HoodieRecord<T>(rec1.getKey(), reducedData);\n+      HoodieKey reducedKey = rec1.getData().equals(reducedData) ? rec1.getKey() : rec2.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzI0MjU4", "url": "https://github.com/apache/hudi/pull/2248#pullrequestreview-542324258", "createdAt": "2020-12-01T21:48:47Z", "commit": {"oid": "692c0800e9458a74220914c9b5970e9c92e7a4f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4302, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}