{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTExNDU0", "number": 2227, "title": "[HUDI-1367] Make deltaStreamer transition from dfsSouce to kafkasouce", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\n(For example: This pull request adds quick-start document.)\nCurrently, after using dfsSouce to write hudi, if you want to use kafkasouce to continue writing hudi, you need to specify the kafka checkpoint value. I will make the program automatically get the latest or earliest offect\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-11-02T14:51:07Z", "url": "https://github.com/apache/hudi/pull/2227", "merged": true, "mergeCommit": {"oid": "617cc24ad1a28196b872df5663e9e0f48cd7f0fa"}, "closed": true, "closedAt": "2021-02-25T12:08:14Z", "author": {"login": "liujinhui1994"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZFE3fgFqTUyMzAxODQ4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd9juwnAFqTU5ODQ2MTE4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDE4NDgz", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-523018483", "createdAt": "2020-11-04T03:18:43Z", "commit": {"oid": "07153c11e5650506c929d1875069b79696127b59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMzoxODo0M1rOHtH0Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMzoxODo0M1rOHtH0Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3NTk4Nw==", "bodyText": "I suggest check the string value of  auto.offset.reset and set default value to LATEST  if it is not set to LATEST or EARLIEST before we get the KafkaResetOffsetStrategies.\nBecause KafkaResetOffsetStrategies has only two values: LATEST and LATEST, if the user set it to other value this line will throw an exception.\nthe lines bellow is useless:\ndefault:\n            throw new HoodieNotSupportedException(\"Auto reset value must be one of 'earliest' or 'latest' \");", "url": "https://github.com/apache/hudi/pull/2227#discussion_r517075987", "createdAt": "2020-11-04T03:18:43Z", "author": {"login": "wangxianghu"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -156,15 +160,18 @@ public static long totalNewMessages(OffsetRange[] ranges) {\n   private final HashMap<String, Object> kafkaParams;\n   private final TypedProperties props;\n   protected final String topicName;\n+  private final KafkaResetOffsetStrategies autoResetValue;\n \n   public KafkaOffsetGen(TypedProperties props) {\n     this.props = props;\n+\n     kafkaParams = new HashMap<>();\n     for (Object prop : props.keySet()) {\n       kafkaParams.put(prop.toString(), props.get(prop.toString()));\n     }\n     DataSourceUtils.checkRequiredProperties(props, Collections.singletonList(Config.KAFKA_TOPIC_NAME));\n     topicName = props.getString(Config.KAFKA_TOPIC_NAME);\n+    autoResetValue = KafkaResetOffsetStrategies.valueOf(props.getString(\"auto.offset.reset\", Config.DEFAULT_AUTO_RESET_OFFSET.toString()).toUpperCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07153c11e5650506c929d1875069b79696127b59"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0ODc5ODQ0", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-584879844", "createdAt": "2021-02-06T12:15:51Z", "commit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMjoxNTo1MVrOIg9Jcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMjoxNTo1MVrOIg9Jcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQyNzE4Ng==", "bodyText": "checkTopicCheckpoint  looks better\uff1f", "url": "https://github.com/apache/hudi/pull/2227#discussion_r571427186", "createdAt": "2021-02-06T12:15:51Z", "author": {"login": "yanghua"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -257,6 +273,11 @@ public boolean checkTopicExists(KafkaConsumer consumer)  {\n     return result.containsKey(topicName);\n   }\n \n+  public boolean checkTopicCheckPoint(Option<String> lastCheckpointStr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0ODc5OTg1", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-584879985", "createdAt": "2021-02-06T12:17:33Z", "commit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMjoxNzozNFrOIg9Pbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNlQxMjoxNzozNFrOIg9Pbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQyODcxOA==", "bodyText": "Please add some comments to describe the pattern? i.e. an example checkpoint string?", "url": "https://github.com/apache/hudi/pull/2227#discussion_r571428718", "createdAt": "2021-02-06T12:17:34Z", "author": {"login": "yanghua"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -49,6 +51,8 @@\n \n   private static final Logger LOG = LogManager.getLogger(KafkaOffsetGen.class);\n \n+  private final Pattern pattern = Pattern.compile(\".*,.*:.*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1NDQwNzE2", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-585440716", "createdAt": "2021-02-08T12:18:36Z", "commit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQxMjoxODozNlrOIhgP4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wOFQxMjoxOTozOVrOIhgSNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjAwMjI3Mg==", "bodyText": "may I know why this is public ?", "url": "https://github.com/apache/hudi/pull/2227#discussion_r572002272", "createdAt": "2021-02-08T12:18:36Z", "author": {"login": "nsivabalan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -257,6 +273,11 @@ public boolean checkTopicExists(KafkaConsumer consumer)  {\n     return result.containsKey(topicName);\n   }\n \n+  public boolean checkTopicCheckPoint(Option<String> lastCheckpointStr) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQyNzE4Ng=="}, "originalCommit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjAwMjg3MA==", "bodyText": "is it intentional for NONE we will throw exception? also, may I know where is NONE(KafkaResetOffsetStrategies) used?", "url": "https://github.com/apache/hudi/pull/2227#discussion_r572002870", "createdAt": "2021-02-08T12:19:39Z", "author": {"login": "nsivabalan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -227,12 +232,23 @@ public KafkaOffsetGen(TypedProperties props) {\n   // else return earliest offsets\n   private Map<TopicPartition, Long> checkupValidOffsets(KafkaConsumer consumer,\n                                                         Option<String> lastCheckpointStr, Set<TopicPartition> topicPartitions) {\n-    Map<TopicPartition, Long> checkpointOffsets = CheckpointUtils.strToOffsets(lastCheckpointStr.get());\n     Map<TopicPartition, Long> earliestOffsets = consumer.beginningOffsets(topicPartitions);\n+    if (checkTopicCheckPoint(lastCheckpointStr)) {\n+      Map<TopicPartition, Long> checkpointOffsets = CheckpointUtils.strToOffsets(lastCheckpointStr.get());\n+      boolean checkpointOffsetReseter = checkpointOffsets.entrySet().stream()\n+              .anyMatch(offset -> offset.getValue() < earliestOffsets.get(offset.getKey()));\n+      return checkpointOffsetReseter ? earliestOffsets : checkpointOffsets;\n+    }\n+\n+    switch (autoResetValue) {\n+      case EARLIEST:\n+        return earliestOffsets;\n+      case LATEST:\n+        return consumer.endOffsets(topicPartitions);\n+      default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3fe5e042f31f5b76657eabbbb7bfc954b458843"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzcwNDQ5", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-594770449", "createdAt": "2021-02-20T17:29:25Z", "commit": {"oid": "43d4f7f639a19f389c4d7ca9725b963ada2c7e80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxNzoyOToyNVrOIo1HuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxNzoyOToyNVrOIo1HuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTY4NDI4MA==", "bodyText": "lets add this to Config (in line 154 in this file)\nAlso, lets name this our usual way.\n\"hoodie.deltastreamer.source.kafka.auto.offset.reset\"", "url": "https://github.com/apache/hudi/pull/2227#discussion_r579684280", "createdAt": "2021-02-20T17:29:25Z", "author": {"login": "nsivabalan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/helpers/KafkaOffsetGen.java", "diffHunk": "@@ -156,15 +163,18 @@ public static long totalNewMessages(OffsetRange[] ranges) {\n   private final HashMap<String, Object> kafkaParams;\n   private final TypedProperties props;\n   protected final String topicName;\n+  private final KafkaResetOffsetStrategies autoResetValue;\n \n   public KafkaOffsetGen(TypedProperties props) {\n     this.props = props;\n+\n     kafkaParams = new HashMap<>();\n     for (Object prop : props.keySet()) {\n       kafkaParams.put(prop.toString(), props.get(prop.toString()));\n     }\n     DataSourceUtils.checkRequiredProperties(props, Collections.singletonList(Config.KAFKA_TOPIC_NAME));\n     topicName = props.getString(Config.KAFKA_TOPIC_NAME);\n+    autoResetValue = KafkaResetOffsetStrategies.valueOf(props.getString(\"auto.offset.reset\", Config.DEFAULT_AUTO_RESET_OFFSET.toString()).toUpperCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43d4f7f639a19f389c4d7ca9725b963ada2c7e80"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208e59e7c6125fb4b499ac8bbcf45ac690d2b6bf", "author": {"user": {"login": "liujinhui1994", "name": "liujinhui"}}, "url": "https://github.com/apache/hudi/commit/208e59e7c6125fb4b499ac8bbcf45ac690d2b6bf", "committedDate": "2021-02-24T12:34:58Z", "message": "hudi-1367"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a5fd9b91b20cfc245855d2e7d0c5902fada60e6", "author": {"user": {"login": "liujinhui1994", "name": "liujinhui"}}, "url": "https://github.com/apache/hudi/commit/3a5fd9b91b20cfc245855d2e7d0c5902fada60e6", "committedDate": "2021-02-24T12:34:59Z", "message": "hudi-1367"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b998d8547208490753d0fdf0b15f12121a128636", "author": {"user": {"login": "liujinhui1994", "name": "liujinhui"}}, "url": "https://github.com/apache/hudi/commit/b998d8547208490753d0fdf0b15f12121a128636", "committedDate": "2021-02-24T12:35:00Z", "message": "hudi-1367"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2a0ce91bf7f784bfb294c9574e78115131cfb92", "author": {"user": {"login": "liujinhui1994", "name": "liujinhui"}}, "url": "https://github.com/apache/hudi/commit/e2a0ce91bf7f784bfb294c9574e78115131cfb92", "committedDate": "2021-02-24T12:35:00Z", "message": "hudi-1367\nModify as suggested: Enum more KafkaResetOffsetStrategies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33444fdb84f3f1b9de22ed90a7db6ebc8eeb0b2b", "author": {"user": {"login": "liujinhui1994", "name": "liujinhui"}}, "url": "https://github.com/apache/hudi/commit/33444fdb84f3f1b9de22ed90a7db6ebc8eeb0b2b", "committedDate": "2021-02-24T12:35:01Z", "message": "Fix some defect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d531fb1d2d97797fbe2ea9faf7e8a774498550a8", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/d531fb1d2d97797fbe2ea9faf7e8a774498550a8", "committedDate": "2021-02-24T12:35:01Z", "message": "Adding tests to delta streamer to test transition from parquet source to kafka source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39adecbf70449aaa02b083146662f2507dec3355", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/39adecbf70449aaa02b083146662f2507dec3355", "committedDate": "2021-02-24T12:44:20Z", "message": "Fixing test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f14edeb95d5079c4c168533b4409a0f911bdf260", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/f14edeb95d5079c4c168533b4409a0f911bdf260", "committedDate": "2021-02-24T15:23:25Z", "message": "Fixing fialing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ea040e1ec261cac4a1f894bc5197c34774e717c", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/3ea040e1ec261cac4a1f894bc5197c34774e717c", "committedDate": "2021-02-25T03:13:20Z", "message": "Addressing feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NDYxMTgy", "url": "https://github.com/apache/hudi/pull/2227#pullrequestreview-598461182", "createdAt": "2021-02-25T11:24:22Z", "commit": {"oid": "3ea040e1ec261cac4a1f894bc5197c34774e717c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4271, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}