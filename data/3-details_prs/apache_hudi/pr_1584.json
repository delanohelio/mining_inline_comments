{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDI2MDc0", "number": 1584, "title": "[HUDI-902] Avoid exception when getSchemaProvider", "bodyText": "When no new data is fetched after reading from row source (like parquet), schema provider cannot be inferred and calling getSchemaProvider() results in HoodieException and requires schema provider to be set. This is not an ideal case for reading from schema-inferable source. Return null schema provider in case of no new data should be allowed.\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-05-02T09:30:52Z", "url": "https://github.com/apache/hudi/pull/1584", "merged": true, "mergeCommit": {"oid": "2ada2ef50fc373ed3083d0e7a96e5e644be52bfb"}, "closed": true, "closedAt": "2020-05-16T04:33:02Z", "author": {"login": "xushiyan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdwGJzgFqTQwNDY1MDA1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchvBYnAFqTQxMzA0NjY2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUwMDUy", "url": "https://github.com/apache/hudi/pull/1584#pullrequestreview-404650052", "createdAt": "2020-05-03T19:32:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozMjowM1rOGPuzIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozMjowM1rOGPuzIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0ODU3OA==", "bodyText": "So this is the line where you mentioned the exception is thrown for you. Am I correct?", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419148578", "createdAt": "2020-05-03T19:32:03Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/SourceFormatAdapter.java", "diffHunk": "@@ -64,19 +64,22 @@ public SourceFormatAdapter(Source source) {\n       }\n       case ROW: {\n         InputBatch<Dataset<Row>> r = ((RowSource) source).fetchNext(lastCkptStr, sourceLimit);\n-        return new InputBatch<>(Option.ofNullable(r.getBatch().map(\n-            rdd -> (\n-                (r.getSchemaProvider() instanceof FilebasedSchemaProvider)\n-                    // If the source schema is specified through Avro schema,\n-                    // pass in the schema for the Row-to-Avro conversion\n-                    // to avoid nullability mismatch between Avro schema and Row schema\n-                    ? AvroConversionUtils.createRdd(\n-                        rdd, r.getSchemaProvider().getSourceSchema(),\n-                        HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                    : AvroConversionUtils.createRdd(\n-                        rdd, HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                ))\n-            .orElse(null)), r.getCheckpointForNextBatch(), r.getSchemaProvider());\n+        if (r.getBatch().isPresent()) {\n+          return new InputBatch<>(r.getBatch().map(\n+              rdd -> (\n+                  (r.getSchemaProvider() instanceof FilebasedSchemaProvider)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUwMzM2", "url": "https://github.com/apache/hudi/pull/1584#pullrequestreview-404650336", "createdAt": "2020-05-03T19:35:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozNToyM1rOGPu05A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTozNToyM1rOGPu05A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0OTAyOA==", "bodyText": "I think since this method tries to fetch data in avro format, pre specifying a schema provider is mandatory. So even if you do not get any data, you should mention RowBasedSchemaProvider as the schema provider in the very beginning. If that is done, there is no need to do this change I believe. :)\nDo you face issues after pre specifying schema provider?\nPlease let me know your thoughts on this.", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419149028", "createdAt": "2020-05-03T19:35:23Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/SourceFormatAdapter.java", "diffHunk": "@@ -64,19 +64,22 @@ public SourceFormatAdapter(Source source) {\n       }\n       case ROW: {\n         InputBatch<Dataset<Row>> r = ((RowSource) source).fetchNext(lastCkptStr, sourceLimit);\n-        return new InputBatch<>(Option.ofNullable(r.getBatch().map(\n-            rdd -> (\n-                (r.getSchemaProvider() instanceof FilebasedSchemaProvider)\n-                    // If the source schema is specified through Avro schema,\n-                    // pass in the schema for the Row-to-Avro conversion\n-                    // to avoid nullability mismatch between Avro schema and Row schema\n-                    ? AvroConversionUtils.createRdd(\n-                        rdd, r.getSchemaProvider().getSourceSchema(),\n-                        HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                    : AvroConversionUtils.createRdd(\n-                        rdd, HOODIE_RECORD_STRUCT_NAME, HOODIE_RECORD_NAMESPACE).toJavaRDD()\n-                ))\n-            .orElse(null)), r.getCheckpointForNextBatch(), r.getSchemaProvider());\n+        if (r.getBatch().isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUxNTIy", "url": "https://github.com/apache/hudi/pull/1584#pullrequestreview-404651522", "createdAt": "2020-05-03T19:50:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTo1MDoyMFrOGPu8SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTo1MDoyMFrOGPu8SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MDkyMQ==", "bodyText": "when fetching in row format, this change should not be needed since RowBasedSchemaProvider is already getting initialised at the end.", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419150921", "createdAt": "2020-05-03T19:50:20Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -276,6 +276,8 @@ private void refreshTimeline() throws IOException {\n       // to generic records for writing\n       InputBatch<Dataset<Row>> dataAndCheckpoint =\n           formatAdapter.fetchNewDataInRowFormat(resumeCheckpointStr, cfg.sourceLimit);\n+      SchemaProvider schemaProviderFromFetched = dataAndCheckpoint.getBatch().isPresent()\n+          ? dataAndCheckpoint.getSchemaProvider() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUxNTkz", "url": "https://github.com/apache/hudi/pull/1584#pullrequestreview-404651593", "createdAt": "2020-05-03T19:51:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTo1MToyMFrOGPu8uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOTo1MToyMFrOGPu8uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE1MTAzMg==", "bodyText": "please refer to my other comment on the changes in SourceFormatAdapter.", "url": "https://github.com/apache/hudi/pull/1584#discussion_r419151032", "createdAt": "2020-05-03T19:51:20Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -298,15 +300,15 @@ private void refreshTimeline() throws IOException {\n       // default to RowBasedSchemaProvider\n       schemaProvider = this.schemaProvider == null || this.schemaProvider.getTargetSchema() == null\n           ? transformed.map(r -> (SchemaProvider) new RowBasedSchemaProvider(r.schema())).orElse(\n-          dataAndCheckpoint.getSchemaProvider())\n+          schemaProviderFromFetched)\n           : this.schemaProvider;\n     } else {\n       // Pull the data from the source & prepare the write\n       InputBatch<JavaRDD<GenericRecord>> dataAndCheckpoint =\n           formatAdapter.fetchNewDataInAvroFormat(resumeCheckpointStr, cfg.sourceLimit);\n       avroRDDOptional = dataAndCheckpoint.getBatch();\n       checkpointStr = dataAndCheckpoint.getCheckpointForNextBatch();\n-      schemaProvider = dataAndCheckpoint.getSchemaProvider();\n+      schemaProvider = avroRDDOptional.isPresent() ? dataAndCheckpoint.getSchemaProvider() : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "29ba2223ad1ee729ee3330693e2514081335cd9d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/29ba2223ad1ee729ee3330693e2514081335cd9d", "committedDate": "2020-05-16T01:45:40Z", "message": "[HUDI-902] Avoid exception when getSchemaProvider\n\n* When no new input data, don't throw exception for null SchemaProvider\n* Return the newly added NullSchemaProvider instead"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "29ba2223ad1ee729ee3330693e2514081335cd9d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/29ba2223ad1ee729ee3330693e2514081335cd9d", "committedDate": "2020-05-16T01:45:40Z", "message": "[HUDI-902] Avoid exception when getSchemaProvider\n\n* When no new input data, don't throw exception for null SchemaProvider\n* Return the newly added NullSchemaProvider instead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQ2NjYy", "url": "https://github.com/apache/hudi/pull/1584#pullrequestreview-413046662", "createdAt": "2020-05-16T04:32:38Z", "commit": {"oid": "29ba2223ad1ee729ee3330693e2514081335cd9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}