{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDY2NzE1", "number": 2143, "title": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable", "bodyText": "Remove APIs in HoodieTestUtils\n\nlistAllDataFilesAndLogFilesInPath\nlistAllLogFilesInPath\nlistAllDataFilesInPath\nwriteRecordsToLogFiles\ncreateCleanFiles\ncreatePendingCleanFiles\n\nMigrate the callers to use HoodieTestTable and HoodieWriteableTestTable with new APIs added\n\nlistAllBaseAndLogFiles\nlistAllLogFiles\nlistAllBaseFiles\nwithLogAppends\naddClean\naddInflightClean\n\nAlso added related APIs in FileCreateUtils\n\ncreateCleanFile\ncreateRequestedCleanFile\ncreateInflightCleanFile\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-10-04T17:10:27Z", "url": "https://github.com/apache/hudi/pull/2143", "merged": true, "mergeCommit": {"oid": "1d1d91d444b6af2b24b17d94068512a930877a98"}, "closed": true, "closedAt": "2020-10-09T02:21:28Z", "author": {"login": "xushiyan"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPSt-8gBqjM4Mzc3NzczMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQsoykAFqTUwNTMxODAwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e259ef2b8b6474058e48e68f5399b72810b5eb8", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/1e259ef2b8b6474058e48e68f5399b72810b5eb8", "committedDate": "2020-10-04T17:08:53Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}, "afterCommit": {"oid": "08ca27f468b87150a6c1568fe74f03155b5df3b6", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/08ca27f468b87150a6c1568fe74f03155b5df3b6", "committedDate": "2020-10-04T17:34:31Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d4f2c568e53dcb6685cdf2c76e07c5e323c9a83", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/5d4f2c568e53dcb6685cdf2c76e07c5e323c9a83", "committedDate": "2020-10-04T17:43:03Z", "message": "fix usage"}, "afterCommit": {"oid": "b4298c36d59f29b607642f0e456fdd2907e3604d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/b4298c36d59f29b607642f0e456fdd2907e3604d", "committedDate": "2020-10-04T18:12:16Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4298c36d59f29b607642f0e456fdd2907e3604d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/b4298c36d59f29b607642f0e456fdd2907e3604d", "committedDate": "2020-10-04T18:12:16Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}, "afterCommit": {"oid": "b7aa3df2b5eacc1a8d090cb00fc1e43b3e92fa8e", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/b7aa3df2b5eacc1a8d090cb00fc1e43b3e92fa8e", "committedDate": "2020-10-04T18:20:28Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7aa3df2b5eacc1a8d090cb00fc1e43b3e92fa8e", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/b7aa3df2b5eacc1a8d090cb00fc1e43b3e92fa8e", "committedDate": "2020-10-04T18:20:28Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}, "afterCommit": {"oid": "6fb5d84167389c39fd8d02779b759ed816508453", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/6fb5d84167389c39fd8d02779b759ed816508453", "committedDate": "2020-10-04T21:59:36Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fb5d84167389c39fd8d02779b759ed816508453", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/6fb5d84167389c39fd8d02779b759ed816508453", "committedDate": "2020-10-04T21:59:36Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}, "afterCommit": {"oid": "3be9ec7ec9081ae61eab6315dc8ed773f13c0531", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/3be9ec7ec9081ae61eab6315dc8ed773f13c0531", "committedDate": "2020-10-05T00:02:38Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/1d9dac8ea23598dc778a4d86058b919580da0d3d", "committedDate": "2020-10-05T02:15:41Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable\n\nRemove APIs in `HoodieTestUtils`\n- listAllDataFilesAndLogFilesInPath\n- listAllLogFilesInPath\n- listAllDataFilesInPath\n- writeRecordsToLogFiles\n- createCleanFiles\n- createPendingCleanFiles\n\nMigrate the callers to use `HoodieTestTable` and `HoodieWriteableTestTable` with new APIs added\n- listAllBaseAndLogFiles\n- listAllLogFiles\n- listAllBaseFiles\n- withLogAppends\n- addClean\n- addInflightClean\n\nAlso added related APIs in `FileCreateUtils`\n- createCleanFile\n- createRequestedCleanFile\n- createInflightCleanFile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3be9ec7ec9081ae61eab6315dc8ed773f13c0531", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/3be9ec7ec9081ae61eab6315dc8ed773f13c0531", "committedDate": "2020-10-05T00:02:38Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable"}, "afterCommit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/1d9dac8ea23598dc778a4d86058b919580da0d3d", "committedDate": "2020-10-05T02:15:41Z", "message": "[HUDI-995] Migrate HoodieTestUtils APIs to HoodieTestTable\n\nRemove APIs in `HoodieTestUtils`\n- listAllDataFilesAndLogFilesInPath\n- listAllLogFilesInPath\n- listAllDataFilesInPath\n- writeRecordsToLogFiles\n- createCleanFiles\n- createPendingCleanFiles\n\nMigrate the callers to use `HoodieTestTable` and `HoodieWriteableTestTable` with new APIs added\n- listAllBaseAndLogFiles\n- listAllLogFiles\n- listAllBaseFiles\n- withLogAppends\n- addClean\n- addInflightClean\n\nAlso added related APIs in `FileCreateUtils`\n- createCleanFile\n- createRequestedCleanFile\n- createInflightCleanFile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjkxMjA3", "url": "https://github.com/apache/hudi/pull/2143#pullrequestreview-501691207", "createdAt": "2020-10-05T02:24:55Z", "commit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMjoyNDo1NVrOHcMFfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMjoyNDo1NVrOHcMFfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyMDE4OQ==", "bodyText": "refer to hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestUtils.java#writeRecordsToLogFiles", "url": "https://github.com/apache/hudi/pull/2143#discussion_r499320189", "createdAt": "2020-10-05T02:24:55Z", "author": {"login": "xushiyan"}, "path": "hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieWriteableTestTable.java", "diffHunk": "@@ -128,4 +148,37 @@ public HoodieWriteableTestTable withInserts(String partition, String fileId, Hoo\n \n     return this;\n   }\n+\n+  public HoodieWriteableTestTable withLogAppends(HoodieRecord... records) throws Exception {\n+    return withLogAppends(Arrays.asList(records));\n+  }\n+\n+  public HoodieWriteableTestTable withLogAppends(List<HoodieRecord> records) throws Exception {\n+    for (List<HoodieRecord> groupedRecords: records.stream()\n+        .collect(Collectors.groupingBy(HoodieRecord::getCurrentLocation)).values()) {\n+      appendRecordsToLogFile(groupedRecords);\n+    }\n+    return this;\n+  }\n+\n+  private void appendRecordsToLogFile(List<HoodieRecord> groupedRecords) throws Exception {\n+    String partitionPath = groupedRecords.get(0).getPartitionPath();\n+    HoodieRecordLocation location = groupedRecords.get(0).getCurrentLocation();\n+    try (HoodieLogFormat.Writer logWriter = HoodieLogFormat.newWriterBuilder().onParentPath(new Path(basePath, partitionPath))\n+        .withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(location.getFileId())\n+        .overBaseCommit(location.getInstantTime()).withFs(fs).build()) {\n+      Map<HoodieLogBlock.HeaderMetadataType, String> header = new HashMap<>();\n+      header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME, location.getInstantTime());\n+      header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA, schema.toString());\n+      logWriter.appendBlock(new HoodieAvroDataBlock(groupedRecords.stream().map(r -> {\n+        try {\n+          GenericRecord val = (GenericRecord) r.getData().getInsertValue(schema).get();\n+          HoodieAvroUtils.addHoodieKeyToRecord(val, r.getRecordKey(), r.getPartitionPath(), \"\");\n+          return (IndexedRecord) val;\n+        } catch (IOException e) {\n+          return null;\n+        }\n+      }).collect(Collectors.toList()), header));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjkxNzcy", "url": "https://github.com/apache/hudi/pull/2143#pullrequestreview-501691772", "createdAt": "2020-10-05T02:27:28Z", "commit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMjoyNzoyOFrOHcMHWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMjoyNzoyOFrOHcMHWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyMDY2Ng==", "bodyText": "change to return array to work with HoodieTableFileSystemView APIs which take in array", "url": "https://github.com/apache/hudi/pull/2143#discussion_r499320666", "createdAt": "2020-10-05T02:27:28Z", "author": {"login": "xushiyan"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "diffHunk": "@@ -348,12 +372,36 @@ public String getBaseFileNameById(String fileId) {\n     return baseFileName(currentInstantTime, fileId);\n   }\n \n-  public List<FileStatus> listAllFiles(String partitionPath) throws IOException {\n-    return FileSystemTestUtils.listRecursive(fs, new Path(Paths.get(basePath, partitionPath).toString()));\n+  public FileStatus[] listAllBaseFiles() throws IOException {\n+    return listAllBaseFiles(HoodieFileFormat.PARQUET.getFileExtension());\n+  }\n+\n+  public FileStatus[] listAllBaseFiles(String fileExtension) throws IOException {\n+    return FileSystemTestUtils.listRecursive(fs, new Path(basePath)).stream()\n+        .filter(status -> status.getPath().getName().endsWith(fileExtension))\n+        .toArray(FileStatus[]::new);\n+  }\n+\n+  public FileStatus[] listAllLogFiles() throws IOException {\n+    return listAllLogFiles(HoodieFileFormat.HOODIE_LOG.getFileExtension());\n+  }\n+\n+  public FileStatus[] listAllLogFiles(String fileExtension) throws IOException {\n+    return FileSystemTestUtils.listRecursive(fs, new Path(basePath)).stream()\n+        .filter(status -> status.getPath().getName().contains(fileExtension))\n+        .toArray(FileStatus[]::new);\n+  }\n+\n+  public FileStatus[] listAllBaseAndLogFiles() throws IOException {\n+    return Stream.concat(Stream.of(listAllBaseFiles()), Stream.of(listAllLogFiles())).toArray(FileStatus[]::new);\n+  }\n+\n+  public FileStatus[] listAllFilesInPartition(String partitionPath) throws IOException {\n+    return FileSystemTestUtils.listRecursive(fs, new Path(Paths.get(basePath, partitionPath).toString())).toArray(new FileStatus[0]);\n   }\n \n-  public List<FileStatus> listAllFilesInTempFolder() throws IOException {\n-    return FileSystemTestUtils.listRecursive(fs, new Path(Paths.get(basePath, HoodieTableMetaClient.TEMPFOLDER_NAME).toString()));\n+  public FileStatus[] listAllFilesInTempFolder() throws IOException {\n+    return FileSystemTestUtils.listRecursive(fs, new Path(Paths.get(basePath, HoodieTableMetaClient.TEMPFOLDER_NAME).toString())).toArray(new FileStatus[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MjgxMDYz", "url": "https://github.com/apache/hudi/pull/2143#pullrequestreview-505281063", "createdAt": "2020-10-09T00:50:25Z", "commit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDo1MDoyNVrOHe18gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDo1MTozMFrOHe1-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEwMzE2OQ==", "bodyText": "Considering the fluent APIs have one general pattern: method withXXX returns HoodieWriteableTestTable  itself. However, this method and above break this rule. WDYT about renaming them to getFileIdWithInserts or returnFileIdWithInserts?", "url": "https://github.com/apache/hudi/pull/2143#discussion_r502103169", "createdAt": "2020-10-09T00:50:25Z", "author": {"login": "yanghua"}, "path": "hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieWriteableTestTable.java", "diffHunk": "@@ -94,6 +106,10 @@ public String withInserts(String partition) throws Exception {\n   }\n \n   public String withInserts(String partition, HoodieRecord... records) throws Exception {\n+    return withInserts(partition, Arrays.asList(records));\n+  }\n+\n+  public String withInserts(String partition, List<HoodieRecord> records) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEwMzc1NQ==", "bodyText": "Logging the detailed exception information looks better?", "url": "https://github.com/apache/hudi/pull/2143#discussion_r502103755", "createdAt": "2020-10-09T00:51:30Z", "author": {"login": "yanghua"}, "path": "hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieWriteableTestTable.java", "diffHunk": "@@ -128,4 +148,37 @@ public HoodieWriteableTestTable withInserts(String partition, String fileId, Hoo\n \n     return this;\n   }\n+\n+  public HoodieWriteableTestTable withLogAppends(HoodieRecord... records) throws Exception {\n+    return withLogAppends(Arrays.asList(records));\n+  }\n+\n+  public HoodieWriteableTestTable withLogAppends(List<HoodieRecord> records) throws Exception {\n+    for (List<HoodieRecord> groupedRecords: records.stream()\n+        .collect(Collectors.groupingBy(HoodieRecord::getCurrentLocation)).values()) {\n+      appendRecordsToLogFile(groupedRecords);\n+    }\n+    return this;\n+  }\n+\n+  private void appendRecordsToLogFile(List<HoodieRecord> groupedRecords) throws Exception {\n+    String partitionPath = groupedRecords.get(0).getPartitionPath();\n+    HoodieRecordLocation location = groupedRecords.get(0).getCurrentLocation();\n+    try (HoodieLogFormat.Writer logWriter = HoodieLogFormat.newWriterBuilder().onParentPath(new Path(basePath, partitionPath))\n+        .withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(location.getFileId())\n+        .overBaseCommit(location.getInstantTime()).withFs(fs).build()) {\n+      Map<HoodieLogBlock.HeaderMetadataType, String> header = new HashMap<>();\n+      header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME, location.getInstantTime());\n+      header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA, schema.toString());\n+      logWriter.appendBlock(new HoodieAvroDataBlock(groupedRecords.stream().map(r -> {\n+        try {\n+          GenericRecord val = (GenericRecord) r.getData().getInsertValue(schema).get();\n+          HoodieAvroUtils.addHoodieKeyToRecord(val, r.getRecordKey(), r.getPartitionPath(), \"\");\n+          return (IndexedRecord) val;\n+        } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9dac8ea23598dc778a4d86058b919580da0d3d"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cabcf317c2bdf1874f3b4e2fc8478b8e63e730a6", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/cabcf317c2bdf1874f3b4e2fc8478b8e63e730a6", "committedDate": "2020-10-09T01:34:22Z", "message": "add log warn and fix API namings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MzE4MDAw", "url": "https://github.com/apache/hudi/pull/2143#pullrequestreview-505318000", "createdAt": "2020-10-09T02:20:24Z", "commit": {"oid": "cabcf317c2bdf1874f3b4e2fc8478b8e63e730a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4649, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}