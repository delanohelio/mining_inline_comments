{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTk1Njk3", "number": 1346, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzo0MTowNVrODiOyAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzoxNzo0MVrODilsCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjIwMzUyOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/rollback/RollbackExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzo0MTowNVrOFtXftw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToyOTo0NFrOFttBig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNTE5MQ==", "bodyText": "Is the original indent the right one?", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383115191", "createdAt": "2020-02-24T07:41:05Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/rollback/RollbackExecutor.java", "diffHunk": "@@ -69,7 +69,7 @@ public RollbackExecutor(HoodieTableMetaClient metaClient, HoodieWriteConfig conf\n    * Performs all rollback actions that we have collected in parallel.\n    */\n   public List<HoodieRollbackStat> performRollback(JavaSparkContext jsc, HoodieInstant instantToRollback,\n-      List<RollbackRequest> rollbackRequests) {\n+                                           List<RollbackRequest> rollbackRequests) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2NzkxNA==", "bodyText": "yes.. will revert. dont know how it got changed", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383467914", "createdAt": "2020-02-24T19:29:44Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/rollback/RollbackExecutor.java", "diffHunk": "@@ -69,7 +69,7 @@ public RollbackExecutor(HoodieTableMetaClient metaClient, HoodieWriteConfig conf\n    * Performs all rollback actions that we have collected in parallel.\n    */\n   public List<HoodieRollbackStat> performRollback(JavaSparkContext jsc, HoodieInstant instantToRollback,\n-      List<RollbackRequest> rollbackRequests) {\n+                                           List<RollbackRequest> rollbackRequests) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNTE5MQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjIxNTc1OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/TestUpdateSchemaEvolution.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzo0ODowNlrOFtXmuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToyOToxOFrOFttArQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNjk4NA==", "bodyText": "IMO, org.apache.hudi is a very common( or say generic) level. It would be better to make the specific classes host in a detailed package that can represent his location. WDYT?", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383116984", "createdAt": "2020-02-24T07:48:06Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/TestUpdateSchemaEvolution.java", "diffHunk": "@@ -16,10 +16,9 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi.func;\n+package org.apache.hudi;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjA0Ng==", "bodyText": "+1", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383462046", "createdAt": "2020-02-24T19:18:30Z", "author": {"login": "n3nash"}, "path": "hudi-client/src/test/java/org/apache/hudi/TestUpdateSchemaEvolution.java", "diffHunk": "@@ -16,10 +16,9 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi.func;\n+package org.apache.hudi;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNjk4NA=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2NzY5Mw==", "bodyText": "I will move classes out to specific packages.. The test files I left out there are kind of cross functional across packages.. But agree. let me make one more pass", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383467693", "createdAt": "2020-02-24T19:29:18Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/TestUpdateSchemaEvolution.java", "diffHunk": "@@ -16,10 +16,9 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi.func;\n+package org.apache.hudi;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNjk4NA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjIxOTI1OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientBase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNzo0OTo0MFrOFtXokQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMzoxMzoxMlrOFt3WZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNzQ1Nw==", "bodyText": "ditto, can we place it into e.g. org.apache.hudi.write.common.WriteStatus?", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383117457", "createdAt": "2020-02-24T07:49:40Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientBase.java", "diffHunk": "@@ -16,8 +16,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi;\n+package org.apache.hudi.client;\n \n+import org.apache.hudi.common.HoodieClientTestHarness;\n+import org.apache.hudi.WriteStatus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2NzI2Mg==", "bodyText": "Actually, top level API classes e.g SparkContext can be placed under the root package right.?  That was my reasoning at-least.. This is the object we return back to the user and made sense to leave at the top level. WDYT", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383467262", "createdAt": "2020-02-24T19:28:25Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientBase.java", "diffHunk": "@@ -16,8 +16,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi;\n+package org.apache.hudi.client;\n \n+import org.apache.hudi.common.HoodieClientTestHarness;\n+import org.apache.hudi.WriteStatus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNzQ1Nw=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzMzYzNw==", "bodyText": "Actually, I agree with the context like SparkContext can be placed under the top-level package.  However, IMO, the WriteStatus is not as important as SparkContext. It is not been used anywhere. Hudi support write and read operation. We should make them a pair relationship.", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383633637", "createdAt": "2020-02-25T02:57:50Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientBase.java", "diffHunk": "@@ -16,8 +16,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi;\n+package org.apache.hudi.client;\n \n+import org.apache.hudi.common.HoodieClientTestHarness;\n+import org.apache.hudi.WriteStatus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNzQ1Nw=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzNzA5NQ==", "bodyText": "It is not been used anywhere.\n\nRDD level APIs have return types like this and projects like uber's marmaray , hudi's deltastramer do use them. Since, you feel strongly, let me move it. :)", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383637095", "createdAt": "2020-02-25T03:13:12Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientBase.java", "diffHunk": "@@ -16,8 +16,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi;\n+package org.apache.hudi.client;\n \n+import org.apache.hudi.common.HoodieClientTestHarness;\n+import org.apache.hudi.WriteStatus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzExNzQ1Nw=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDQ1NzExOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/CleanExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToxNzo0MVrOFtso-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToyNTozMVrOFts5GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MTYyNA==", "bodyText": "This looks like there should be an Executor<> interface if we are going to move to *executor style of naming ? Do you have plans to introduce one later ?", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383461624", "createdAt": "2020-02-24T19:17:41Z", "author": {"login": "n3nash"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/CleanExecutor.java", "diffHunk": "@@ -60,17 +59,17 @@\n  * <p>\n  * TODO: Should all cleaning be done based on {@link HoodieCommitMetadata}\n  */\n-public class HoodieCleanHelper<T extends HoodieRecordPayload<T>> implements Serializable {\n+public class CleanExecutor<T extends HoodieRecordPayload<T>> implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2NTc1Mw==", "bodyText": "Agree.. Renamed this to stay consistent with RollbackExecutor.. but may be we should rename that to RollbackHelper.  Will take a pass and rename both consistently.", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383465753", "createdAt": "2020-02-24T19:25:31Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/CleanExecutor.java", "diffHunk": "@@ -60,17 +59,17 @@\n  * <p>\n  * TODO: Should all cleaning be done based on {@link HoodieCommitMetadata}\n  */\n-public class HoodieCleanHelper<T extends HoodieRecordPayload<T>> implements Serializable {\n+public class CleanExecutor<T extends HoodieRecordPayload<T>> implements Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MTYyNA=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTk1NjU4OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/CleanHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzoxNzo0MVrOFt65iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzoxNzo0MVrOFt65iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY5NTI0Mw==", "bodyText": "My personal feeling, XXXHelper usually means a utility class that contains some static helper methods. I would prefer the old one.", "url": "https://github.com/apache/hudi/pull/1346#discussion_r383695243", "createdAt": "2020-02-25T07:17:41Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/CleanHelper.java", "diffHunk": "@@ -59,17 +59,17 @@\n  * <p>\n  * TODO: Should all cleaning be done based on {@link HoodieCommitMetadata}\n  */\n-public class CleanExecutor<T extends HoodieRecordPayload<T>> implements Serializable {\n+public class CleanHelper<T extends HoodieRecordPayload<T>> implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4846, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}