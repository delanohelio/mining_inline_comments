{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNjMzOTAw", "number": 1589, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzowOTo0MlrOD4ywDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzoxMzo0OFrOD4yxag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODc4MzUxOnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHiveIncrementalPuller.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzowOTo0MlrOGPtx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzowOTo0MlrOGPtx-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzMTg5Ng==", "bodyText": "e.getMessage() will be included in message printed by assertDoesNotThrow() hence no need to concat it manually.", "url": "https://github.com/apache/hudi/pull/1589#discussion_r419131896", "createdAt": "2020-05-03T17:09:42Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHiveIncrementalPuller.java", "diffHunk": "@@ -18,27 +18,26 @@\n \n package org.apache.hudi.utilities;\n \n-import org.junit.Assert;\n-import org.junit.Before;\n-import org.junit.Test;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n \n public class TestHiveIncrementalPuller {\n \n   private HiveIncrementalPuller.Config config;\n \n-  @Before\n+  @BeforeEach\n   public void setup() {\n     config = new HiveIncrementalPuller.Config();\n   }\n \n   @Test\n   public void testInitHiveIncrementalPuller() {\n \n-    try {\n+    assertDoesNotThrow(() -> {\n       new HiveIncrementalPuller(config);\n-    } catch (Exception e) {\n-      Assert.fail(\"Unexpected exception while initing HiveIncrementalPuller, msg: \" + e.getMessage());\n-    }\n+    }, \"Unexpected exception while initing HiveIncrementalPuller.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODc4Njk4OnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHoodieDeltaStreamer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzoxMzo0OFrOGPtzwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzoxMzo0OFrOGPtzwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzMjM1Mg==", "bodyText": "Changing log level from error to debug. It is a good practice to not print anything unless test case failed thus we tend to mute the output here when it's passing. Same to other similar changes below.", "url": "https://github.com/apache/hudi/pull/1589#discussion_r419132352", "createdAt": "2020-05-03T17:13:48Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHoodieDeltaStreamer.java", "diffHunk": "@@ -413,37 +412,33 @@ public void testKafkaConnectCheckpointProvider() throws IOException {\n     HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n     Helpers.saveParquetToDFS(Helpers.toGenericRecords(dataGenerator.generateInserts(\"000\", 100)), new Path(filePath));\n     HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(cfg, jsc, dfs, hdfsTestService.getHadoopConf(), props);\n-    assertEquals(deltaStreamer.getConfig().checkpoint, \"kafka_topic1,0:200\");\n+    assertEquals(\"kafka_topic1,0:200\", deltaStreamer.getConfig().checkpoint);\n   }\n \n   @Test\n   public void testPropsWithInvalidKeyGenerator() throws Exception {\n-    try {\n+    Exception e = assertThrows(IOException.class, () -> {\n       String tableBasePath = dfsBasePath + \"/test_table\";\n       HoodieDeltaStreamer deltaStreamer =\n           new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath, Operation.BULK_INSERT,\n               Collections.singletonList(TripsWithDistanceTransformer.class.getName()), PROPS_FILENAME_TEST_INVALID, false), jsc);\n       deltaStreamer.sync();\n-      fail(\"Should error out when setting the key generator class property to an invalid value\");\n-    } catch (IOException e) {\n-      // expected\n-      LOG.error(\"Expected error during getting the key generator\", e);\n-      assertTrue(e.getMessage().contains(\"Could not load key generator class\"));\n-    }\n+    }, \"Should error out when setting the key generator class property to an invalid value\");\n+    // expected\n+    LOG.debug(\"Expected error during getting the key generator\", e);\n+    assertTrue(e.getMessage().contains(\"Could not load key generator class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 111}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4616, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}