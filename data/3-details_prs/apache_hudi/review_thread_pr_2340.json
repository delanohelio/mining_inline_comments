{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDEzMDg0", "number": 2340, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTozMTo1N1rOFGJROg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNTowNzozMlrOFGPYZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTg3NjQyOnYy", "diffSide": "RIGHT", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTozMTo1N1rOIHA2Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo0Nzo0OVrOIHBbgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyNDgwMg==", "bodyText": "It's not good for reading.  now - daysBefore  = now - (now - daysTillNow * 24 * 60 * 60 * 1000L)?", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544224802", "createdAt": "2020-12-16T11:31:57Z", "author": {"login": "yanghua"}, "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,23 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"\n+              + riderDriverSuffix, generateRangeRandomTimestamp(7));\n       return new OverwriteWithLatestAvroPayload(Option.of(rec));\n     }\n \n+    /**\n+     * Generate timestamp range from {@param daysTillNow} before to now.\n+     */\n+    private static long generateRangeRandomTimestamp(int daysTillNow) {\n+      long now = System.currentTimeMillis();\n+      long daysBefore = now - daysTillNow * 24 * 60 * 60 * 1000L;\n+      return daysBefore + (long)(Math.random() * (now - daysBefore));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99af63bdc0b94adb8cd6f364175c91039c3ac6af"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNDM3MA==", "bodyText": "It's not good for reading. now - daysBefore  = now - (now - daysTillNow * 24 * 60 * 60 * 1000L)?\n\nhow about this\n    private static long generateRangeRandomTimestamp(int daysTillNow) {\n      long interval = daysTillNow * 24 * 60 * 60 * 1000L;\n      return System.currentTimeMillis() - (long)(Math.random() * interval);\n    }", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544234370", "createdAt": "2020-12-16T11:47:49Z", "author": {"login": "wangxianghu"}, "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,23 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"\n+              + riderDriverSuffix, generateRangeRandomTimestamp(7));\n       return new OverwriteWithLatestAvroPayload(Option.of(rec));\n     }\n \n+    /**\n+     * Generate timestamp range from {@param daysTillNow} before to now.\n+     */\n+    private static long generateRangeRandomTimestamp(int daysTillNow) {\n+      long now = System.currentTimeMillis();\n+      long daysBefore = now - daysTillNow * 24 * 60 * 60 * 1000L;\n+      return daysBefore + (long)(Math.random() * (now - daysBefore));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyNDgwMg=="}, "originalCommit": {"oid": "99af63bdc0b94adb8cd6f364175c91039c3ac6af"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMDc4NDY0OnYy", "diffSide": "RIGHT", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNDo1MDowM1rOIHJEFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNDo1MDowM1rOIHJEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM1OTQ0NA==", "bodyText": "Does maxIntervalMillis look better?", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544359444", "createdAt": "2020-12-16T14:50:03Z", "author": {"login": "yanghua"}, "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,22 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"\n+              + riderDriverSuffix, generateRangeRandomTimestamp(7));\n       return new OverwriteWithLatestAvroPayload(Option.of(rec));\n     }\n \n+    /**\n+     * Generate timestamp range from {@param daysTillNow} before to now.\n+     */\n+    private static long generateRangeRandomTimestamp(int daysTillNow) {\n+      long interval = daysTillNow * 24 * 60 * 60 * 1000L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d61040f6bc755b9acf8302b61649e9e13a336b4"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMDg3NzgzOnYy", "diffSide": "RIGHT", "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNTowNzozMlrOIHJ8tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNTowNzozMlrOIHJ8tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM3Mzk0Mg==", "bodyText": "Miss whitespace before \"driver-\"", "url": "https://github.com/apache/hudi/pull/2340#discussion_r544373942", "createdAt": "2020-12-16T15:07:32Z", "author": {"login": "yanghua"}, "path": "hudi-spark-datasource/hudi-spark/src/main/java/org/apache/hudi/QuickstartUtils.java", "diffHunk": "@@ -121,11 +121,22 @@ public static GenericRecord generateGenericRecord(String rowKey, String riderNam\n      */\n     public static OverwriteWithLatestAvroPayload generateRandomValue(HoodieKey key, String riderDriverSuffix)\n         throws IOException {\n+      // The timestamp generated is limited to range from 7 days before to now, to avoid generating too many\n+      // partitionPaths when user use timestamp as partitionPath filed.\n       GenericRecord rec =\n-          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix, \"driver-\" + riderDriverSuffix, 0);\n+          generateGenericRecord(key.getRecordKey(), \"rider-\" + riderDriverSuffix,\"driver-\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d61040f6bc755b9acf8302b61649e9e13a336b4"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4016, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}