{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NDA3NDY1", "number": 2326, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MzowOVrOFGDcEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDo1MjowM1rOFGvwEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODkyMTE0OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MzowOVrOIG4NpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjoyMzowNVrOIHhq9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MzM2NA==", "bodyText": "minor: these seen to be duplicated from metadata code. If there is a simple way of moving them to a common class and accessing from there, that would be better.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r544083364", "createdAt": "2020-12-16T07:53:09Z", "author": {"login": "prashantwason"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -56,6 +58,15 @@\n public class HoodieROTablePathFilter implements Configurable, PathFilter, Serializable {\n \n   private static final long serialVersionUID = 1L;\n+  public static final String METADATA_PREFIX = \"hoodie.metadata\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "877c4d60acdb9dd23dbd60b0b4e8d6db46098409"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2MjYxMw==", "bodyText": "I have moved the HoodieMetadataConfig class to hudi-common.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r544762613", "createdAt": "2020-12-17T02:23:05Z", "author": {"login": "umehrot2"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -56,6 +58,15 @@\n public class HoodieROTablePathFilter implements Configurable, PathFilter, Serializable {\n \n   private static final long serialVersionUID = 1L;\n+  public static final String METADATA_PREFIX = \"hoodie.metadata\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MzM2NA=="}, "originalCommit": {"oid": "877c4d60acdb9dd23dbd60b0b4e8d6db46098409"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODkzNjI0OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1NzoyM1rOIG4WJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjo0MTozOFrOIHiETw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4NTU0MA==", "bodyText": "This default can be true as within HoodieTableMetadata - If the metadata table does not exist, RPC calls are used to retrieve file listings from the file system.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r544085540", "createdAt": "2020-12-16T07:57:23Z", "author": {"login": "prashantwason"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -56,6 +58,15 @@\n public class HoodieROTablePathFilter implements Configurable, PathFilter, Serializable {\n \n   private static final long serialVersionUID = 1L;\n+  public static final String METADATA_PREFIX = \"hoodie.metadata\";\n+\n+  // List using internal metadata table which saves file listings\n+  public static final String METADATA_ENABLE_PROP = METADATA_PREFIX + \".enable\";\n+  public static final boolean DEFAULT_METADATA_ENABLE = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "877c4d60acdb9dd23dbd60b0b4e8d6db46098409"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2OTEwMw==", "bodyText": "Makes sense. I introduced a true default for the readers, but just a but concerned about the additional overhead this introduces in the regular (non metadata table) hudi path, as it would keep checking for the metadata folder and call getFileStatus() and then fail. This can be an overhead for S3.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r544769103", "createdAt": "2020-12-17T02:41:38Z", "author": {"login": "umehrot2"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -56,6 +58,15 @@\n public class HoodieROTablePathFilter implements Configurable, PathFilter, Serializable {\n \n   private static final long serialVersionUID = 1L;\n+  public static final String METADATA_PREFIX = \"hoodie.metadata\";\n+\n+  // List using internal metadata table which saves file listings\n+  public static final String METADATA_ENABLE_PROP = METADATA_PREFIX + \".enable\";\n+  public static final boolean DEFAULT_METADATA_ENABLE = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4NTU0MA=="}, "originalCommit": {"oid": "877c4d60acdb9dd23dbd60b0b4e8d6db46098409"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjE1MDk1OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/main/java/org/apache/hudi/common/config/HoodieMetadataConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDo0NjoyNlrOIH5A6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMToxMDo0MVrOIIPKxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTA2Nw==", "bodyText": "trying to understand these formatting changes. can we use whichever aligns with checkstyle?", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545145067", "createdAt": "2020-12-17T14:46:26Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/HoodieMetadataConfig.java", "diffHunk": "@@ -128,24 +128,23 @@ public Builder retainCommits(int commitsRetained) {\n     public HoodieMetadataConfig build() {\n       HoodieMetadataConfig config = new HoodieMetadataConfig(props);\n       setDefaultOnCondition(props, !props.containsKey(METADATA_ENABLE_PROP), METADATA_ENABLE_PROP,\n-          String.valueOf(DEFAULT_METADATA_ENABLE));\n+              String.valueOf(DEFAULT_METADATA_ENABLE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUwODAzNw==", "bodyText": "Reverted it back. The earlier one aligns better with Hudi checkstyle.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545508037", "createdAt": "2020-12-18T01:10:41Z", "author": {"login": "umehrot2"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/config/HoodieMetadataConfig.java", "diffHunk": "@@ -128,24 +128,23 @@ public Builder retainCommits(int commitsRetained) {\n     public HoodieMetadataConfig build() {\n       HoodieMetadataConfig config = new HoodieMetadataConfig(props);\n       setDefaultOnCondition(props, !props.containsKey(METADATA_ENABLE_PROP), METADATA_ENABLE_PROP,\n-          String.valueOf(DEFAULT_METADATA_ENABLE));\n+              String.valueOf(DEFAULT_METADATA_ENABLE));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0NTA2Nw=="}, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjE4MTMwOnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/test/scala/org/apache/hudi/functional/TestCOWDataSource.scala", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNDo1MjowM1rOIH5SkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMToxNzozMVrOIIPTPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTU4NQ==", "bodyText": "should we test via TestHoodieROTablePathFilter directly?  in the future, Datasource may not call the path filter at all for e.g?", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545149585", "createdAt": "2020-12-17T14:52:03Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/test/scala/org/apache/hudi/functional/TestCOWDataSource.scala", "diffHunk": "@@ -194,4 +195,42 @@ class TestCOWDataSource extends HoodieClientTestBase {\n       .load(basePath)\n     assertEquals(hoodieIncViewDF2.count(), insert2NewKeyCnt)\n   }\n+\n+  @Test def testCopyOnWriteStorageWithMetadata() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE1MDI5OA==", "bodyText": "any way to just parameterize this entire test with and without metadata. might be easier to extend down the line as well?", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545150298", "createdAt": "2020-12-17T14:52:57Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/test/scala/org/apache/hudi/functional/TestCOWDataSource.scala", "diffHunk": "@@ -194,4 +195,42 @@ class TestCOWDataSource extends HoodieClientTestBase {\n       .load(basePath)\n     assertEquals(hoodieIncViewDF2.count(), insert2NewKeyCnt)\n   }\n+\n+  @Test def testCopyOnWriteStorageWithMetadata() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTU4NQ=="}, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUwODE3OA==", "bodyText": "Made the test parameterized.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545508178", "createdAt": "2020-12-18T01:11:11Z", "author": {"login": "umehrot2"}, "path": "hudi-spark/src/test/scala/org/apache/hudi/functional/TestCOWDataSource.scala", "diffHunk": "@@ -194,4 +195,42 @@ class TestCOWDataSource extends HoodieClientTestBase {\n       .load(basePath)\n     assertEquals(hoodieIncViewDF2.count(), insert2NewKeyCnt)\n   }\n+\n+  @Test def testCopyOnWriteStorageWithMetadata() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTU4NQ=="}, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUxMDIwNg==", "bodyText": "Testing from TestHoodieROTablePathFilter directly seems to be quite a task in itself, given the logic inside it. HoodieTestTable will have to be modified to be able to simulate metadata table, and create relevant HFiles inside the metadata table. Let me create a Jira for this for now and come to it later.\nFor now want to merge this, and focus on get all partition paths before I head for my time off.", "url": "https://github.com/apache/hudi/pull/2326#discussion_r545510206", "createdAt": "2020-12-18T01:17:31Z", "author": {"login": "umehrot2"}, "path": "hudi-spark/src/test/scala/org/apache/hudi/functional/TestCOWDataSource.scala", "diffHunk": "@@ -194,4 +195,42 @@ class TestCOWDataSource extends HoodieClientTestBase {\n       .load(basePath)\n     assertEquals(hoodieIncViewDF2.count(), insert2NewKeyCnt)\n   }\n+\n+  @Test def testCopyOnWriteStorageWithMetadata() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE0OTU4NQ=="}, "originalCommit": {"oid": "a3701aaf95988e65de3c45652f71f164a52b13fd"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4005, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}