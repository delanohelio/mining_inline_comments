{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5Mzc2MTUy", "number": 1188, "title": "[HUDI-502] provide a custom time zone definition for TimestampBasedKeyGenerator", "bodyText": "What is the purpose of the pull request\nprovide a custom time zone definition, such as GMT+8:00 Instead of default \"GMT\"\nVerify this pull request\nalrealy exists test units\n#JIRA\nhttps://issues.apache.org/jira/browse/HUDI-502\nTimestampBasedKeyGenerator defualt TimeZone is GMT, but it's not cover all everthing. example, i push chinese time zone GMT+8:00 style timestamp data to hudi, but keygenerator create GMT time zone data, it's wrong! so i submit this pr.", "createdAt": "2020-01-06T03:32:42Z", "url": "https://github.com/apache/hudi/pull/1188", "merged": true, "mergeCommit": {"oid": "a44c61b81356e93340710ccc0022e576b7b6e077"}, "closed": true, "closedAt": "2020-01-12T23:45:24Z", "author": {"login": "OpenOpened"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3jlqrgH2gAyMzU5Mzc2MTUyOjBkZmQ1MDA3Y2RjYTRkZjAzZmUzODcxZTJjYWM2ZTRlZmI5OWNjYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5wlp1gFqTM0MTYwODc0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0dfd5007cdca4df03fe3871e2cac6e4efb99ccc6", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/0dfd5007cdca4df03fe3871e2cac6e4efb99ccc6", "committedDate": "2020-01-06T03:28:35Z", "message": "provide a custom time zone definition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTAwMjI3", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-338900227", "createdAt": "2020-01-06T21:16:56Z", "commit": {"oid": "0dfd5007cdca4df03fe3871e2cac6e4efb99ccc6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToxNjo1NlrOFape3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMToxNjo1NlrOFape3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ4Njk0MA==", "bodyText": "any reason why this is not final too?", "url": "https://github.com/apache/hudi/pull/1188#discussion_r363486940", "createdAt": "2020-01-06T21:16:56Z", "author": {"login": "vinothchandar"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -51,6 +51,8 @@\n \n   private final String outputDateFormat;\n \n+  private TimeZone timeZone;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfd5007cdca4df03fe3871e2cac6e4efb99ccc6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8e702167f05d9a65efd280010d556c3a5816ad0", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/a8e702167f05d9a65efd280010d556c3a5816ad0", "committedDate": "2020-01-07T02:21:03Z", "message": "fix NPE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MDEzNDE4", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-339013418", "createdAt": "2020-01-07T03:21:25Z", "commit": {"oid": "a8e702167f05d9a65efd280010d556c3a5816ad0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMzoyMToyNVrOFavAnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwMzoyMToyNVrOFavAnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzU3NzUwMQ==", "bodyText": "timeZone has been init. I don't think we need to do this again.", "url": "https://github.com/apache/hudi/pull/1188#discussion_r363577501", "createdAt": "2020-01-07T03:21:25Z", "author": {"login": "sev7e0"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -70,20 +74,22 @@ public TimestampBasedKeyGenerator(TypedProperties config) {\n         Arrays.asList(Config.TIMESTAMP_TYPE_FIELD_PROP, Config.TIMESTAMP_OUTPUT_DATE_FORMAT_PROP));\n     this.timestampType = TimestampType.valueOf(config.getString(Config.TIMESTAMP_TYPE_FIELD_PROP));\n     this.outputDateFormat = config.getString(Config.TIMESTAMP_OUTPUT_DATE_FORMAT_PROP);\n+    this.timeZone = TimeZone.getTimeZone(config.getString(Config.TIMESTAMP_TIMEZONE_FORMAT_PROP, \"GMT\"));\n \n     if (timestampType == TimestampType.DATE_STRING || timestampType == TimestampType.MIXED) {\n       DataSourceUtils.checkRequiredProperties(config,\n           Collections.singletonList(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP));\n       this.inputDateFormat = new SimpleDateFormat(config.getString(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP));\n-      this.inputDateFormat.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      this.timeZone = TimeZone.getTimeZone(config.getString(Config.TIMESTAMP_TIMEZONE_FORMAT_PROP, \"GMT\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e702167f05d9a65efd280010d556c3a5816ad0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9236dff0298ba8d7f530273903578d6d7a9a8639", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/9236dff0298ba8d7f530273903578d6d7a9a8639", "committedDate": "2020-01-07T03:24:42Z", "message": "fix NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d0440fe42fa28cf3933a7ed39053683e5f1e1a", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/59d0440fe42fa28cf3933a7ed39053683e5f1e1a", "committedDate": "2020-01-07T03:28:19Z", "message": "add test unit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "963ef18fbdeb029125a41ed6fcef315d33977a40", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/963ef18fbdeb029125a41ed6fcef315d33977a40", "committedDate": "2020-01-07T06:22:24Z", "message": "fix check style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e555c818b342ac66f806d2ae5da87cee9436a31", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/1e555c818b342ac66f806d2ae5da87cee9436a31", "committedDate": "2020-01-07T08:01:30Z", "message": "add apache license"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDk4NjUw", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-340498650", "createdAt": "2020-01-09T12:54:31Z", "commit": {"oid": "1e555c818b342ac66f806d2ae5da87cee9436a31"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjo1NDozMlrOFb05nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjo1NDozMlrOFb05nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyMjU4OA==", "bodyText": "would these three methods simplify to just one method?", "url": "https://github.com/apache/hudi/pull/1188#discussion_r364722588", "createdAt": "2020-01-09T12:54:32Z", "author": {"login": "leesf"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestTimestampBasedKeyGenerator.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities;\n+\n+import org.apache.avro.Schema;\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.hudi.DataSourceWriteOptions;\n+import org.apache.hudi.common.model.HoodieKey;\n+import org.apache.hudi.common.util.SchemaTestUtil;\n+import org.apache.hudi.common.util.TypedProperties;\n+import org.apache.hudi.utilities.keygen.TimestampBasedKeyGenerator;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class TestTimestampBasedKeyGenerator {\n+  private Schema schema = SchemaTestUtil.getTimestampEvolvedSchema();\n+  private GenericRecord baseRecord = null;\n+\n+  public TestTimestampBasedKeyGenerator() throws IOException {\n+  }\n+\n+  @Before\n+  public void initialize() throws IOException {\n+    baseRecord = SchemaTestUtil\n+        .generateAvroRecordFromJson(schema, 1, \"001\", \"f1\");\n+  }\n+\n+  private TypedProperties getKeyConfig(String recordKeyFieldName, String partitionPathField, String hiveStylePartitioning) {\n+    TypedProperties props = new TypedProperties();\n+    props.setProperty(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY(), recordKeyFieldName);\n+    props.setProperty(DataSourceWriteOptions.PARTITIONPATH_FIELD_OPT_KEY(), partitionPathField);\n+    props.setProperty(DataSourceWriteOptions.HIVE_STYLE_PARTITIONING_OPT_KEY(), hiveStylePartitioning);\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timestamp.type\", \"EPOCHMILLISECONDS\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.output.dateformat\", \"yyyy-MM-dd hh\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT+8:00\");\n+    return props;\n+  }\n+\n+  private TypedProperties getKeyConfig2(String recordKeyFieldName, String partitionPathField, String hiveStylePartitioning) {\n+    TypedProperties props = getKeyConfig(recordKeyFieldName, partitionPathField, hiveStylePartitioning);\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT\");\n+    return props;\n+  }\n+\n+  private TypedProperties getKeyConfig3(String recordKeyFieldName, String partitionPathField, String hiveStylePartitioning) {\n+    TypedProperties props = getKeyConfig(recordKeyFieldName, partitionPathField, hiveStylePartitioning);\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timestamp.type\", \"DATE_STRING\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\", \"yyyy-MM-dd hh:mm:ss\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT+8:00\");\n+    return props;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e555c818b342ac66f806d2ae5da87cee9436a31"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1640c4d246fc42cf24deb8f2974725264c5da15", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/c1640c4d246fc42cf24deb8f2974725264c5da15", "committedDate": "2020-01-10T02:27:48Z", "message": "combine the redundant methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67277a0ab8b9cf66c547e5363daef7766aed74ee", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/67277a0ab8b9cf66c547e5363daef7766aed74ee", "committedDate": "2020-01-10T02:36:34Z", "message": "a little comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDcxOTc0", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-341071974", "createdAt": "2020-01-10T10:22:00Z", "commit": {"oid": "67277a0ab8b9cf66c547e5363daef7766aed74ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMjowMFrOFcP8iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMjowMFrOFcP8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE2NTcwNQ==", "bodyText": "Would we remove this useless fields?", "url": "https://github.com/apache/hudi/pull/1188#discussion_r365165705", "createdAt": "2020-01-10T10:22:00Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/resources/timestamp-test-evolved.avsc", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+{\n+  \"namespace\": \"example.avro\",\n+  \"type\": \"record\",\n+  \"name\": \"User\",\n+  \"fields\": [\n+    {\"name\": \"field1\", \"type\": [\"null\", \"string\"], \"default\": null},\n+    {\"name\": \"field2\", \"type\": [\"null\", \"string\"], \"default\": null},\n+    {\"name\": \"createTime\", \"type\": [\"null\", \"string\"], \"default\": null},\n+    {\"name\": \"name\", \"type\": [\"null\", \"string\"], \"default\": null},\n+    {\"name\": \"favoriteIntNumber\",  \"type\": [\"null\", \"int\"], \"default\": null},\n+    {\"name\": \"favoriteNumber\",  \"type\": [\"null\", \"long\"], \"default\": null},\n+    {\"name\": \"favoriteFloatNumber\",  \"type\": [\"null\", \"float\"], \"default\": null},\n+    {\"name\": \"favoriteDoubleNumber\",  \"type\": [\"null\", \"double\"], \"default\": null},\n+    {\"name\": \"tags\", \"type\": [\"null\", {\"values\": [\"null\", {\"fields\": [{\"default\": null, \"type\": [\"null\", \"string\"], \"name\": \"item1\"}, {\"default\": null, \"type\": [\"null\", \"string\"], \"name\": \"item2\"} ], \"type\": \"record\", \"name\": \"tagsMapItems\"} ], \"type\": \"map\"} ], \"default\": null},\n+    {\"default\": null, \"name\": \"testNestedRecord\", \"type\": [\"null\", {\"fields\": [{\"default\": null, \"name\": \"isAdmin\", \"type\": [\"null\", \"boolean\"] }, {\"default\": null, \"name\": \"userId\", \"type\": [\"null\", \"string\"] } ], \"name\": \"notes\", \"type\": \"record\"}]},\n+    {\"default\": null, \"name\": \"stringArray\", \"type\": [\"null\", {\"items\": \"string\", \"type\": \"array\"}]}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67277a0ab8b9cf66c547e5363daef7766aed74ee"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDcyOTM1", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-341072935", "createdAt": "2020-01-10T10:23:55Z", "commit": {"oid": "67277a0ab8b9cf66c547e5363daef7766aed74ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMzo1NVrOFcP_ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMDoyMzo1NVrOFcP_ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE2NjQzNw==", "bodyText": "I think we would optimize the TestTimestampBasedKeyGenerator to the gist, WDYT?", "url": "https://github.com/apache/hudi/pull/1188#discussion_r365166437", "createdAt": "2020-01-10T10:23:55Z", "author": {"login": "leesf"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestTimestampBasedKeyGenerator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities;\n+\n+import org.apache.avro.Schema;\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.hudi.DataSourceWriteOptions;\n+import org.apache.hudi.common.model.HoodieKey;\n+import org.apache.hudi.common.util.SchemaTestUtil;\n+import org.apache.hudi.common.util.TypedProperties;\n+import org.apache.hudi.utilities.keygen.TimestampBasedKeyGenerator;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class TestTimestampBasedKeyGenerator {\n+  private Schema schema = SchemaTestUtil.getTimestampEvolvedSchema();\n+  private GenericRecord baseRecord = null;\n+\n+  public TestTimestampBasedKeyGenerator() throws IOException {\n+  }\n+\n+  @Before\n+  public void initialize() throws IOException {\n+    baseRecord = SchemaTestUtil\n+        .generateAvroRecordFromJson(schema, 1, \"001\", \"f1\");\n+  }\n+\n+  private TypedProperties getBaseKeyConfig(String recordKeyFieldName, String partitionPathField, String hiveStylePartitioning) {\n+    TypedProperties props = new TypedProperties();\n+    props.setProperty(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY(), recordKeyFieldName);\n+    props.setProperty(DataSourceWriteOptions.PARTITIONPATH_FIELD_OPT_KEY(), partitionPathField);\n+    props.setProperty(DataSourceWriteOptions.HIVE_STYLE_PARTITIONING_OPT_KEY(), hiveStylePartitioning);\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timestamp.type\", \"EPOCHMILLISECONDS\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.output.dateformat\", \"yyyy-MM-dd hh\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT+8:00\");\n+    return props;\n+  }\n+\n+  @Test\n+  public void testTimestampBasedKeyGenerator() {\n+    // if timezone is GMT+8:00\n+    baseRecord.put(\"createTime\", 1578283932000L);\n+    TypedProperties props = getBaseKeyConfig(\"field1\", \"createTime\", \"false\");\n+    HoodieKey hk1 = new TimestampBasedKeyGenerator(props).getKey(baseRecord);\n+    assertEquals(hk1.getPartitionPath(), \"2020-01-06 12\");\n+\n+    // if timezone is GMT\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT\");\n+    HoodieKey hk2 = new TimestampBasedKeyGenerator(props).getKey(baseRecord);\n+    assertEquals(hk2.getPartitionPath(), \"2020-01-06 04\");\n+\n+    // if timestamp is DATE_STRING, and timestamp type is DATE_STRING\n+    baseRecord.put(\"createTime\", \"2020-01-06 12:12:12\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timestamp.type\", \"DATE_STRING\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\", \"yyyy-MM-dd hh:mm:ss\");\n+    props.setProperty(\"hoodie.deltastreamer.keygen.timebased.timezone\", \"GMT+8:00\");\n+    HoodieKey hk3 = new TimestampBasedKeyGenerator(props).getKey(baseRecord);\n+    assertEquals(hk3.getPartitionPath(), \"2020-01-06 12\");\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67277a0ab8b9cf66c547e5363daef7766aed74ee"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f865eb604232f3564034d48cefaa986942ef0ce6", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/f865eb604232f3564034d48cefaa986942ef0ce6", "committedDate": "2020-01-10T10:41:44Z", "message": "remove useless fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fa533dfe9d853a7d0f43d5624fe2be85a8ee441", "author": {"user": {"login": "OpenOpened", "name": "openopen2"}}, "url": "https://github.com/apache/hudi/commit/8fa533dfe9d853a7d0f43d5624fe2be85a8ee441", "committedDate": "2020-01-10T14:45:55Z", "message": "Update TestTimestampBasedKeyGenerator.java\n\nfix comment bug, and code more friendly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTAyNjcy", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-341502672", "createdAt": "2020-01-11T04:10:12Z", "commit": {"oid": "8fa533dfe9d853a7d0f43d5624fe2be85a8ee441"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjA4NzQ1", "url": "https://github.com/apache/hudi/pull/1188#pullrequestreview-341608745", "createdAt": "2020-01-12T23:45:11Z", "commit": {"oid": "8fa533dfe9d853a7d0f43d5624fe2be85a8ee441"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}