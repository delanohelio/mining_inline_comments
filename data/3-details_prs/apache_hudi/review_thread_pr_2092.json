{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NzExNTMw", "number": 2092, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzowNDowNVrOEkJWBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDo1ODo0NFrOExKD7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzM3Mjg3OnYy", "diffSide": "RIGHT", "path": "docker/demo/config/test-suite/complex-dag-mor.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzowNDowNVrOHS6NAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzowNDoxOFrOHS6Ngg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MDAxNw==", "bodyText": "while you are at it, since rollback is not effective, can we remove it from this dag file until we have a fix. I see this dag more as a sanity check dag and so everything should be succeeding.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r489590017", "createdAt": "2020-09-16T17:04:05Z", "author": {"login": "nsivabalan"}, "path": "docker/demo/config/test-suite/complex-dag-mor.yaml", "diffHunk": "@@ -81,11 +81,7 @@ second_hive_query:\n       query1: \"select count(*) from testdb.table1 group by `_row_key` having count(*) > 1\"\n       result1: 0\n       query2: \"select count(*) from testdb.table1\"\n-      result2: 3100\n-      query3: \"select count(*) from testdb.table1_rt group by `_row_key` having count(*) > 1\"\n-      result3: 0\n-      query4: \"select count(*) from testdb.table1_rt\"\n-      result4: 3100\n+      result2: 1100", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeedccf895f02bff36f262356f1677d9391eb41a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MDE0Ng==", "bodyText": "same for cow dag as well.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r489590146", "createdAt": "2020-09-16T17:04:18Z", "author": {"login": "nsivabalan"}, "path": "docker/demo/config/test-suite/complex-dag-mor.yaml", "diffHunk": "@@ -81,11 +81,7 @@ second_hive_query:\n       query1: \"select count(*) from testdb.table1 group by `_row_key` having count(*) > 1\"\n       result1: 0\n       query2: \"select count(*) from testdb.table1\"\n-      result2: 3100\n-      query3: \"select count(*) from testdb.table1_rt group by `_row_key` having count(*) > 1\"\n-      result3: 0\n-      query4: \"select count(*) from testdb.table1_rt\"\n-      result4: 3100\n+      result2: 1100", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5MDAxNw=="}, "originalCommit": {"oid": "eeedccf895f02bff36f262356f1677d9391eb41a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzA1ODAzOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDo1NDozMVrOHgq7Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjo0MzoxMlrOHhb9Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ==", "bodyText": "am I missing something here. once the node is set to complete, how can we execute in next cycle if repeatCount > 1 ? shouldn't we set it outside of while loop", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504019799", "createdAt": "2020-10-13T14:54:31Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -109,12 +109,16 @@ private void executeNode(DagNode node) {\n       throw new RuntimeException(\"DagNode already completed! Cannot re-execute\");\n     }\n     try {\n-      log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n-      node.execute(executionContext);\n-      node.setCompleted(true);\n-      log.info(\"Finished executing {}\", node.getName());\n+      int repeatCount = node.getConfig().getRepeatCount();\n+      while (repeatCount > 0) {\n+        log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n+        node.execute(executionContext);\n+        node.setCompleted(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzOTE3Mw==", "bodyText": "in general repeatCount is confusing. for eg:\nfirst_insert:\n  config:\n    record_size: 70000\n    num_insert_partitions: 1\n    repeat_count: 5\n    num_records_insert: 1000\n  type: InsertNode\n  deps: none\n\nIn this dag yaml, I expect 5*1000 records to be inserted since repeat count is 5. If 5000 records are to be expected, don't we need to fix all yaml dags(complex-dag-mow.yaml etc) for hive query results. I don't see any fixes in this patch for expected record counts though.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504039173", "createdAt": "2020-10-13T15:19:15Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -109,12 +109,16 @@ private void executeNode(DagNode node) {\n       throw new RuntimeException(\"DagNode already completed! Cannot re-execute\");\n     }\n     try {\n-      log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n-      node.execute(executionContext);\n-      node.setCompleted(true);\n-      log.info(\"Finished executing {}\", node.getName());\n+      int repeatCount = node.getConfig().getRepeatCount();\n+      while (repeatCount > 0) {\n+        log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n+        node.execute(executionContext);\n+        node.setCompleted(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyMzA5NA==", "bodyText": "You're right, I fixed the repeat count and tested it on the unit tests but didn't confirm the DAG under the demo's. I've changed the repeat count to be 1 in the docker DAG so it doesn't cause confusion and have added repeat_count only to the unit_test dags to confirm repeat count works.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504823094", "createdAt": "2020-10-14T16:43:12Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -109,12 +109,16 @@ private void executeNode(DagNode node) {\n       throw new RuntimeException(\"DagNode already completed! Cannot re-execute\");\n     }\n     try {\n-      log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n-      node.execute(executionContext);\n-      node.setCompleted(true);\n-      log.info(\"Finished executing {}\", node.getName());\n+      int repeatCount = node.getConfig().getRepeatCount();\n+      while (repeatCount > 0) {\n+        log.warn(\"executing node: \" + node.getName() + \" of type: \" + node.getClass());\n+        node.execute(executionContext);\n+        node.setCompleted(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAxOTc5OQ=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzExMzg3OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNTowNToyOFrOHgrdyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjozNzozMFrOHhbv0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyODYxNw==", "bodyText": "minor. Can we first rollback from hudi and then delete from input data. Just incase rollback from hudi fails, we will have the input data intact for any debugging.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504028617", "createdAt": "2020-10-13T15:05:28Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {\n       log.info(\"Rolling back last instant {}\", lastInstant.get());\n+      log.info(\"Cleaning up generated data for the instant being rolled back {}\", lastInstant.get());\n+      ValidationUtils.checkArgument(executionContext.getWriterContext().getProps().getOrDefault(DFSPathSelector.Config.SOURCE_INPUT_SELECTOR,\n+          DFSPathSelector.class.getName()).toString().equalsIgnoreCase(DFSTestSuitePathSelector.class.getName()), \"Test Suite only supports DFSTestSuitePathSelector\");\n+      metaClient.getFs().delete(new Path(executionContext.getWriterContext().getCfg().inputBasePath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgxOTY2NQ==", "bodyText": "Done", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504819665", "createdAt": "2020-10-14T16:37:30Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {\n       log.info(\"Rolling back last instant {}\", lastInstant.get());\n+      log.info(\"Cleaning up generated data for the instant being rolled back {}\", lastInstant.get());\n+      ValidationUtils.checkArgument(executionContext.getWriterContext().getProps().getOrDefault(DFSPathSelector.Config.SOURCE_INPUT_SELECTOR,\n+          DFSPathSelector.class.getName()).toString().equalsIgnoreCase(DFSTestSuitePathSelector.class.getName()), \"Test Suite only supports DFSTestSuitePathSelector\");\n+      metaClient.getFs().delete(new Path(executionContext.getWriterContext().getCfg().inputBasePath,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAyODYxNw=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzE0NTg1OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/helpers/DFSTestSuitePathSelector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxMjowN1rOHgrxzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjozNzoyNVrOHhbvjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzMzc0Mw==", "bodyText": "sorry, are we not looking for max value here. why min ?\nfor eg, input/1, input/2, input/5. in this, we are interested in \"5\" right?", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504033743", "createdAt": "2020-10-13T15:12:07Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/helpers/DFSTestSuitePathSelector.java", "diffHunk": "@@ -62,19 +67,26 @@ public DFSTestSuitePathSelector(TypedProperties props, Configuration hadoopConf)\n         lastBatchId = 0;\n         nextBatchId = 1;\n       }\n-\n-      log.info(\"Using DFSTestSuitePathSelector, checkpoint: \" + lastCheckpointStr + \" sourceLimit: \" + sourceLimit\n-          + \" lastBatchId: \" + lastBatchId + \" nextBatchId: \" + nextBatchId);\n       // obtain all eligible files for the batch\n       List<FileStatus> eligibleFiles = new ArrayList<>();\n       FileStatus[] fileStatuses = fs.globStatus(\n           new Path(props.getString(Config.ROOT_INPUT_PATH_PROP), \"*\"));\n+      // Say input data is as follow input/1, input/2, input/5 since 3,4 was rolled back and 5 is new generated data\n+      // checkpoint from the latest commit metadata will be 2 since 3,4 has been rolled back. We need to set the\n+      // next batch id correctly as 5 instead of 3\n+      Optional<String> correctBatchIdDueToRollback = Arrays.stream(fileStatuses)\n+          .map(f -> f.getPath().toString().split(\"/\")[f.getPath().toString().split(\"/\").length - 1])\n+          .min((bid1, bid2) -> Integer.min(Integer.parseInt(bid1), Integer.parseInt(bid2)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgxOTU5OQ==", "bodyText": "Had some uncomitted changes, pushed it now", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504819599", "createdAt": "2020-10-14T16:37:25Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/helpers/DFSTestSuitePathSelector.java", "diffHunk": "@@ -62,19 +67,26 @@ public DFSTestSuitePathSelector(TypedProperties props, Configuration hadoopConf)\n         lastBatchId = 0;\n         nextBatchId = 1;\n       }\n-\n-      log.info(\"Using DFSTestSuitePathSelector, checkpoint: \" + lastCheckpointStr + \" sourceLimit: \" + sourceLimit\n-          + \" lastBatchId: \" + lastBatchId + \" nextBatchId: \" + nextBatchId);\n       // obtain all eligible files for the batch\n       List<FileStatus> eligibleFiles = new ArrayList<>();\n       FileStatus[] fileStatuses = fs.globStatus(\n           new Path(props.getString(Config.ROOT_INPUT_PATH_PROP), \"*\"));\n+      // Say input data is as follow input/1, input/2, input/5 since 3,4 was rolled back and 5 is new generated data\n+      // checkpoint from the latest commit metadata will be 2 since 3,4 has been rolled back. We need to set the\n+      // next batch id correctly as 5 instead of 3\n+      Optional<String> correctBatchIdDueToRollback = Arrays.stream(fileStatuses)\n+          .map(f -> f.getPath().toString().split(\"/\")[f.getPath().toString().split(\"/\").length - 1])\n+          .min((bid1, bid2) -> Integer.min(Integer.parseInt(bid1), Integer.parseInt(bid2)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzMzc0Mw=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzE2NjA0OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxNjoxNlrOHgr-ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDo1Mjo1OVrOHhs_5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA==", "bodyText": "looks like our rollback only supports rolling back the last commit. I assume we need to fix this in some later patch.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504036964", "createdAt": "2020-10-13T15:16:16Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mjk1Mg==", "bodyText": "So, you can add multiple rollbackNode's to simulate multiple commit rollbacks, it will always start from the last node. We still have to implement a RestoreNode that will do this in one shot..", "url": "https://github.com/apache/hudi/pull/2092#discussion_r504152952", "createdAt": "2020-10-13T18:01:58Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMjMxMQ==", "bodyText": "my bad. I missed that we can rollback only the latest commit.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r505102311", "createdAt": "2020-10-15T00:52:59Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/RollbackNode.java", "diffHunk": "@@ -49,6 +54,11 @@ public void execute(ExecutionContext executionContext) throws Exception {\n     Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n     if (lastInstant.isPresent()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjk2NA=="}, "originalCommit": {"oid": "44a5a80fd0917446ae500767db7844c37b56e5e7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mzk0NDA1OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/test/resources/unit-test-cow-dag.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMDo1ODoxMlrOHhtFJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzo0ODowNFrOHi-vHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMzY1NA==", "bodyText": "@n3nash : my bad. can you clarify what does repeat do here. will it add 2* 100 records ?  If yes, total expected records should be 400 right in line 66.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r505103654", "createdAt": "2020-10-15T00:58:12Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/test/resources/unit-test-cow-dag.yaml", "diffHunk": "@@ -17,23 +17,53 @@ first_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1\n-    repeat_count: 1\n+    repeat_count: 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "615958a197747dd8ffc04e73cb0d0c841a9900e3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc5NzUxMA==", "bodyText": "@nsivabalan We rollback 1 InsertNode, so total 2*100 + 100 - 100 + 100.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r505797510", "createdAt": "2020-10-15T19:46:25Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/test/resources/unit-test-cow-dag.yaml", "diffHunk": "@@ -17,23 +17,53 @@ first_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1\n-    repeat_count: 1\n+    repeat_count: 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMzY1NA=="}, "originalCommit": {"oid": "615958a197747dd8ffc04e73cb0d0c841a9900e3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MTUwMA==", "bodyText": "my bad, I mistook num records in first_upsert as insert records. just now noticed it as upsert records.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r506441500", "createdAt": "2020-10-16T13:48:04Z", "author": {"login": "nsivabalan"}, "path": "hudi-integ-test/src/test/resources/unit-test-cow-dag.yaml", "diffHunk": "@@ -17,23 +17,53 @@ first_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1\n-    repeat_count: 1\n+    repeat_count: 2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwMzY1NA=="}, "originalCommit": {"oid": "615958a197747dd8ffc04e73cb0d0c841a9900e3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTgwNTI1OnYy", "diffSide": "RIGHT", "path": "docker/demo/config/test-suite/complex-dag-cow.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDo1ODo0NFrOHnJBRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDo1ODo0NFrOHnJBRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwNDI5Mg==", "bodyText": "@n3nash : all dags need to be fixed for partition config.\nright ones are\nnum_partitions_insert\nnum_partitions_upsert.\nwhere as so far we are using\nnum_insert_partitions\nnum_upsert_partitions.\nCan you fix these and re-run all your tests and dags. specially around upsert and rollbacks to ensure things are looking good.", "url": "https://github.com/apache/hudi/pull/2092#discussion_r510804292", "createdAt": "2020-10-23T10:58:44Z", "author": {"login": "nsivabalan"}, "path": "docker/demo/config/test-suite/complex-dag-cow.yaml", "diffHunk": "@@ -17,23 +17,23 @@ first_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1\n-    repeat_count: 5\n+    repeat_count: 1\n     num_records_insert: 1000\n   type: InsertNode\n   deps: none\n second_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1\n-    repeat_count: 5\n+    repeat_count: 1\n     num_records_insert: 10000\n   deps: first_insert\n   type: InsertNode\n third_insert:\n   config:\n     record_size: 70000\n     num_insert_partitions: 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7116c44cefdac1e96c0e43be0e0ec1297d02f140"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4284, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}