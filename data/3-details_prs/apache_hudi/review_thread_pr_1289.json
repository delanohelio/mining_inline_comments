{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzE4MTM3", "number": 1289, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo1NDo0OVrODdlERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowNTozMVrODdlKwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQyNTk4OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/CompactionAdminClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo1NDo0OVrOFmQ0pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo1NDo0OVrOFmQ0pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2NTgzMA==", "bodyText": "Change to Execute unschedule operations", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375665830", "createdAt": "2020-02-06T06:54:49Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/CompactionAdminClient.java", "diffHunk": "@@ -356,6 +357,7 @@ private ValidationOpResult validateCompactionOperation(HoodieTableMetaClient met\n     } else {\n       LOG.info(\"The following compaction renaming operations needs to be performed to un-schedule\");\n       if (!dryRun) {\n+        jsc.setJobGroup(this.getClass().getSimpleName(), \"Execute renaming operations\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQyNjk2OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/CompactionAdminClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo1NTozNVrOFmQ1Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNjo1NTozNVrOFmQ1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2NTk3OA==", "bodyText": "change to Generate compaction unscheduling operations ?", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375665978", "createdAt": "2020-02-06T06:55:35Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/CompactionAdminClient.java", "diffHunk": "@@ -398,6 +400,7 @@ private ValidationOpResult validateCompactionOperation(HoodieTableMetaClient met\n           \"Number of Compaction Operations :\" + plan.getOperations().size() + \" for instant :\" + compactionInstant);\n       List<CompactionOperation> ops = plan.getOperations().stream()\n           .map(CompactionOperation::convertFromAvroRecordInstance).collect(Collectors.toList());\n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Generate renaming operations\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQzNDg5OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/HoodieWriteClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMDozM1rOFmQ59g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMDozM1rOFmQ59g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2NzE5MA==", "bodyText": "In general lets provide some context into what higher level context, the action is being performed i.e savepoints, compaction, rollbacks. etc . In that spirit, change to Collecting latest files for savepoint ?\nAlso wonder if we can include the commitTime in the detail i.e Collecting latest files for savepoint 20200205010000. This way, you can just go to past runs on spark history server and relate them to commits on hudi.. Even better, if someone is running deltastreamer in continuous mode, then they can see activity for commits over time", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375667190", "createdAt": "2020-02-06T07:00:33Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/HoodieWriteClient.java", "diffHunk": "@@ -586,6 +586,7 @@ public boolean savepoint(String commitTime, String user, String comment) {\n           HoodieTimeline.compareTimestamps(commitTime, lastCommitRetained, HoodieTimeline.GREATER_OR_EQUAL),\n           \"Could not savepoint commit \" + commitTime + \" as this is beyond the lookup window \" + lastCommitRetained);\n \n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Collecting latest files in partition\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQzNzMwOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/index/bloom/HoodieBloomIndex.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMjoxMFrOFmQ7cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMjoxMFrOFmQ7cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2NzU2OQ==", "bodyText": "Obtain key ranges for file slices (range pruning=on)", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375667569", "createdAt": "2020-02-06T07:02:10Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/bloom/HoodieBloomIndex.java", "diffHunk": "@@ -254,6 +255,7 @@ private int determineParallelism(int inputParallelism, int totalSubPartitions) {\n \n     if (config.getBloomIndexPruneByRanges()) {\n       // also obtain file ranges, if range pruning is enabled\n+      jsc.setJobDescription(\"Obtain file ranges as range pruning is enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQzODA5OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/io/compact/HoodieMergeOnReadTableCompactor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMjo0MlrOFmQ76A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowMjo0MlrOFmQ76A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2NzY4OA==", "bodyText": "Compacting file slices?", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375667688", "createdAt": "2020-02-06T07:02:42Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/io/compact/HoodieMergeOnReadTableCompactor.java", "diffHunk": "@@ -94,6 +94,7 @@\n         .map(CompactionOperation::convertFromAvroRecordInstance).collect(toList());\n     LOG.info(\"Compactor compacting \" + operations + \" files\");\n \n+    jsc.setJobGroup(this.getClass().getSimpleName(), \"Compacting files\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQzOTk5OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCopyOnWriteTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowNDowMVrOFmQ9Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowNDowMVrOFmQ9Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2ODAwNg==", "bodyText": "I know the comments say files and you are just using that. but would be nice to stick to our terminologies as much as possible. https://cwiki.apache.org/confluence/display/HUDI/Design+And+Architecture", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375668006", "createdAt": "2020-02-06T07:04:01Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCopyOnWriteTable.java", "diffHunk": "@@ -298,6 +298,7 @@ public HoodieCleanerPlan scheduleClean(JavaSparkContext jsc) {\n       int cleanerParallelism = Math.min(partitionsToClean.size(), config.getCleanerParallelism());\n       LOG.info(\"Using cleanerParallelism: \" + cleanerParallelism);\n \n+      jsc.setJobGroup(this.getClass().getSimpleName(), \"Generates List of files to be cleaned\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQ0MjU4OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/HoodieClientTestHarness.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowNTozMVrOFmQ-mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzowNTozMVrOFmQ-mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY2ODM3Nw==", "bodyText": "can we do this in a single line?", "url": "https://github.com/apache/hudi/pull/1289#discussion_r375668377", "createdAt": "2020-02-06T07:05:31Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/HoodieClientTestHarness.java", "diffHunk": "@@ -107,11 +107,12 @@ protected void initSparkContexts(String appName) {\n   }\n \n   /**\n-   * Initializes the Spark contexts ({@link JavaSparkContext} and {@link SQLContext}) with a default name\n-   * <b>TestHoodieClient</b>.\n+   * Initializes the Spark contexts ({@link JavaSparkContext} and {@link SQLContext}) \n+   * with a default name matching the name of the class.\n    */\n   protected void initSparkContexts() {\n-    initSparkContexts(\"TestHoodieClient\");\n+    String ctxName = this.getClass().getSimpleName() + \"#\" + testName.getMethodName();\n+    initSparkContexts(ctxName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 22, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}