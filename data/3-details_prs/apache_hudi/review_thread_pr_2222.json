{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzU5NDU3", "number": 2222, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwOTozMjo1NFrOE1JDqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyMjo1NlrOE1l0BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTU4Mzc2OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwOTozMjo1NFrOHtP5nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNjozOTo0MlrOHt1UPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwODQ3Nw==", "bodyText": "Hi @shenh062326,  sorry for another round review\nwhen implementing hudi-flink-writer, I found this method could be implemented to return  data.stream().map(throwingMapToPairWrapper(func)).collect(Collectors.toMap(Tuple2::_1, Tuple2::_2));  WDYT?\ncc @garyli1019", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517208477", "createdAt": "2020-11-04T09:32:54Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hudi.client.common.function.SerializableConsumer;\n+import org.apache.hudi.client.common.function.SerializableFunction;\n+import org.apache.hudi.client.common.function.SerializablePairFunction;\n+import org.apache.hudi.common.config.SerializableConfiguration;\n+import org.apache.hudi.common.util.Option;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import static java.util.stream.Collectors.toList;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingFlatMapWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingForeachWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapToPairWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapWrapper;\n+\n+/**\n+ * A java engine implementation of HoodieEngineContext.\n+ */\n+public class HoodieJavaEngineContext extends HoodieEngineContext {\n+\n+  public HoodieJavaEngineContext(Configuration conf, TaskContextSupplier taskContextSupplier) {\n+    super(new SerializableConfiguration(conf), taskContextSupplier);\n+  }\n+\n+  @Override\n+  public <I, O> List<O> map(List<I> data, SerializableFunction<I, O> func, int parallelism) {\n+    return data.stream().parallel().map(throwingMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I, O> List<O> flatMap(List<I> data, SerializableFunction<I, Stream<O>> func, int parallelism) {\n+    return data.stream().parallel().flatMap(throwingFlatMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I> void foreach(List<I> data, SerializableConsumer<I> consumer, int parallelism) {\n+    data.stream().forEach(throwingForeachWrapper(consumer));\n+  }\n+\n+  @Override\n+  public <I, K, V> Map<K, V> mapToPair(List<I> data, SerializablePairFunction<I, K, V> func, Integer parallelism) {\n+    Map<K, V> map = new HashMap<>();\n+    data.stream().map(throwingMapToPairWrapper(func)).forEach(x -> map.put(x._1, x._2));\n+    return map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9a2c5623727066fbc7aec0151be9a7f73af8cd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgyMDE3OQ==", "bodyText": "Can I ask what are the benefits of the new implementation?", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517820179", "createdAt": "2020-11-05T06:35:31Z", "author": {"login": "shenh062326"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hudi.client.common.function.SerializableConsumer;\n+import org.apache.hudi.client.common.function.SerializableFunction;\n+import org.apache.hudi.client.common.function.SerializablePairFunction;\n+import org.apache.hudi.common.config.SerializableConfiguration;\n+import org.apache.hudi.common.util.Option;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import static java.util.stream.Collectors.toList;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingFlatMapWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingForeachWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapToPairWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapWrapper;\n+\n+/**\n+ * A java engine implementation of HoodieEngineContext.\n+ */\n+public class HoodieJavaEngineContext extends HoodieEngineContext {\n+\n+  public HoodieJavaEngineContext(Configuration conf, TaskContextSupplier taskContextSupplier) {\n+    super(new SerializableConfiguration(conf), taskContextSupplier);\n+  }\n+\n+  @Override\n+  public <I, O> List<O> map(List<I> data, SerializableFunction<I, O> func, int parallelism) {\n+    return data.stream().parallel().map(throwingMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I, O> List<O> flatMap(List<I> data, SerializableFunction<I, Stream<O>> func, int parallelism) {\n+    return data.stream().parallel().flatMap(throwingFlatMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I> void foreach(List<I> data, SerializableConsumer<I> consumer, int parallelism) {\n+    data.stream().forEach(throwingForeachWrapper(consumer));\n+  }\n+\n+  @Override\n+  public <I, K, V> Map<K, V> mapToPair(List<I> data, SerializablePairFunction<I, K, V> func, Integer parallelism) {\n+    Map<K, V> map = new HashMap<>();\n+    data.stream().map(throwingMapToPairWrapper(func)).forEach(x -> map.put(x._1, x._2));\n+    return map;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwODQ3Nw=="}, "originalCommit": {"oid": "cd9a2c5623727066fbc7aec0151be9a7f73af8cd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgyMTUwMw==", "bodyText": "Can I ask what are the benefits of the new implementation?\n\nlogically\uff0cthe latter is the same as SparkRDD\u2018s MapToPair, identical keys are not allowed\nand it is more elegant in code style I think.\nIt is just advice, no big deal :)", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517821503", "createdAt": "2020-11-05T06:39:42Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hudi.client.common.function.SerializableConsumer;\n+import org.apache.hudi.client.common.function.SerializableFunction;\n+import org.apache.hudi.client.common.function.SerializablePairFunction;\n+import org.apache.hudi.common.config.SerializableConfiguration;\n+import org.apache.hudi.common.util.Option;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+\n+import static java.util.stream.Collectors.toList;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingFlatMapWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingForeachWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapToPairWrapper;\n+import static org.apache.hudi.client.common.function.FunctionWrapper.throwingMapWrapper;\n+\n+/**\n+ * A java engine implementation of HoodieEngineContext.\n+ */\n+public class HoodieJavaEngineContext extends HoodieEngineContext {\n+\n+  public HoodieJavaEngineContext(Configuration conf, TaskContextSupplier taskContextSupplier) {\n+    super(new SerializableConfiguration(conf), taskContextSupplier);\n+  }\n+\n+  @Override\n+  public <I, O> List<O> map(List<I> data, SerializableFunction<I, O> func, int parallelism) {\n+    return data.stream().parallel().map(throwingMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I, O> List<O> flatMap(List<I> data, SerializableFunction<I, Stream<O>> func, int parallelism) {\n+    return data.stream().parallel().flatMap(throwingFlatMapWrapper(func)).collect(toList());\n+  }\n+\n+  @Override\n+  public <I> void foreach(List<I> data, SerializableConsumer<I> consumer, int parallelism) {\n+    data.stream().forEach(throwingForeachWrapper(consumer));\n+  }\n+\n+  @Override\n+  public <I, K, V> Map<K, V> mapToPair(List<I> data, SerializablePairFunction<I, K, V> func, Integer parallelism) {\n+    Map<K, V> map = new HashMap<>();\n+    data.stream().map(throwingMapToPairWrapper(func)).forEach(x -> map.put(x._1, x._2));\n+    return map;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIwODQ3Nw=="}, "originalCommit": {"oid": "cd9a2c5623727066fbc7aec0151be9a7f73af8cd"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI3ODY0OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxODo0OFrOHt8f5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNjoxMTowMVrOHuhUhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzOTE3Mw==", "bodyText": "nit: import needs to be reordered", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517939173", "createdAt": "2020-11-05T10:18:48Z", "author": {"login": "garyli1019"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NTAwMg==", "bodyText": "I am not sure about it, when I run \"mvn checkstyle:checkstyle\", there is no error message. Is there any way to find out where the import order is wrong.", "url": "https://github.com/apache/hudi/pull/2222#discussion_r518495002", "createdAt": "2020-11-06T02:56:05Z", "author": {"login": "shenh062326"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzOTE3Mw=="}, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MjQ3MA==", "bodyText": "I couldn't find the import ordering from docs anymore, probably being rephrased or somehow. The checkstyle and spotless are not mature enough at this point https://issues.apache.org/jira/browse/HUDI-1237, so I personally reformating the code myself by looking at other codes. Apologize for the confusion.", "url": "https://github.com/apache/hudi/pull/2222#discussion_r518542470", "createdAt": "2020-11-06T06:11:01Z", "author": {"login": "garyli1019"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzOTE3Mw=="}, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI4MTYwOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-java-client/src/test/java/org/apache/hudi/client/common/TestHoodieJavaEngineContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxOToyNVrOHt8htQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxOToyNVrOHt8htQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzOTYzNw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517939637", "createdAt": "2020-11-05T10:19:25Z", "author": {"login": "garyli1019"}, "path": "hudi-client/hudi-java-client/src/test/java/org/apache/hudi/client/common/TestHoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Assertions;\n+import org.apache.hudi.DummyTaskContextSupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI5Mjg5OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyMjoxM1rOHt8orw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyMjoxM1rOHt8orw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0MTQyMw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517941423", "createdAt": "2020-11-05T10:22:13Z", "author": {"login": "garyli1019"}, "path": "hudi-client/hudi-java-client/src/main/java/org/apache/hudi/client/common/HoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hudi.client.common.function.SerializableConsumer;\n+import org.apache.hudi.client.common.function.SerializableFunction;\n+import org.apache.hudi.client.common.function.SerializablePairFunction;\n+import org.apache.hudi.common.config.SerializableConfiguration;\n+import org.apache.hudi.common.util.Option;\n+import scala.Tuple2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI5NTA4OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-java-client/src/test/java/org/apache/hudi/client/common/TestHoodieJavaEngineContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyMjo1NlrOHt8qNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyMjo1NlrOHt8qNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0MTgxNA==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/2222#discussion_r517941814", "createdAt": "2020-11-05T10:22:56Z", "author": {"login": "garyli1019"}, "path": "hudi-client/hudi-java-client/src/test/java/org/apache/hudi/client/common/TestHoodieJavaEngineContext.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.client.common;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Assertions;\n+import org.apache.hudi.DummyTaskContextSupplier;\n+import scala.Tuple2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ae5a51c884904469e194ddb35e027b1351274b4"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4142, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}