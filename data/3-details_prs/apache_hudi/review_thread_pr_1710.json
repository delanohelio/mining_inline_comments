{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5NTk2OTA3", "number": 1710, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QwMTo0Nzo1OFrOEDM9AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MzozNlrOEDZMhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzkzNDA4OnYy", "diffSide": "LEFT", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QwMTo0Nzo1OFrOGgGoTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QwMTo0Nzo1OFrOGgGoTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMxNjIzOQ==", "bodyText": "@vinothchandar I think this fixed index type to BLOOM. Not sure any historical reason behind it.", "url": "https://github.com/apache/hudi/pull/1710#discussion_r436316239", "createdAt": "2020-06-07T01:47:58Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -497,25 +499,30 @@ private void setupWriteClient() {\n    * @param schemaProvider Schema Provider\n    */\n   private HoodieWriteConfig getHoodieClientConfig(SchemaProvider schemaProvider) {\n+    final boolean combineBeforeUpsert = true;\n+    final boolean autoCommit = false;\n     HoodieWriteConfig.Builder builder =\n-        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, true)\n+        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, combineBeforeUpsert)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder().withPayloadClass(cfg.payloadClassName)\n                 // Inline compaction is disabled for continuous mode. otherwise enabled for MOR\n                 .withInlineCompaction(cfg.isInlineCompactionEnabled()).build())\n             .forTable(cfg.targetTableName)\n-            .withIndexConfig(HoodieIndexConfig.newBuilder().withIndexType(HoodieIndex.IndexType.BLOOM).build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22533afb177b94dc54273d7f70eae198fd60de16"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTkzOTkxOnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MzozNlrOGgYqCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzozNzozOVrOGinvXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMTU5Mg==", "bodyText": "but this will override this.. the withProps(). no?", "url": "https://github.com/apache/hudi/pull/1710#discussion_r436611592", "createdAt": "2020-06-08T10:53:36Z", "author": {"login": "vinothchandar"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -497,25 +499,30 @@ private void setupWriteClient() {\n    * @param schemaProvider Schema Provider\n    */\n   private HoodieWriteConfig getHoodieClientConfig(SchemaProvider schemaProvider) {\n+    final boolean combineBeforeUpsert = true;\n+    final boolean autoCommit = false;\n     HoodieWriteConfig.Builder builder =\n-        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, true)\n+        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, combineBeforeUpsert)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder().withPayloadClass(cfg.payloadClassName)\n                 // Inline compaction is disabled for continuous mode. otherwise enabled for MOR\n                 .withInlineCompaction(cfg.isInlineCompactionEnabled()).build())\n             .forTable(cfg.targetTableName)\n-            .withIndexConfig(HoodieIndexConfig.newBuilder().withIndexType(HoodieIndex.IndexType.BLOOM).build())\n-            .withAutoCommit(false).withProps(props);\n+            .withAutoCommit(autoCommit).withProps(props);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f985401f9a7c8e074b2a49ddb431686f999d00a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNjcwMA==", "bodyText": "@vinothchandar you're right. it was my overlook. But i guess this line is redundant anyway as index is default to BLOOM, setting the index config may cause some confusion.", "url": "https://github.com/apache/hudi/pull/1710#discussion_r438526700", "createdAt": "2020-06-11T03:47:17Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -497,25 +499,30 @@ private void setupWriteClient() {\n    * @param schemaProvider Schema Provider\n    */\n   private HoodieWriteConfig getHoodieClientConfig(SchemaProvider schemaProvider) {\n+    final boolean combineBeforeUpsert = true;\n+    final boolean autoCommit = false;\n     HoodieWriteConfig.Builder builder =\n-        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, true)\n+        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, combineBeforeUpsert)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder().withPayloadClass(cfg.payloadClassName)\n                 // Inline compaction is disabled for continuous mode. otherwise enabled for MOR\n                 .withInlineCompaction(cfg.isInlineCompactionEnabled()).build())\n             .forTable(cfg.targetTableName)\n-            .withIndexConfig(HoodieIndexConfig.newBuilder().withIndexType(HoodieIndex.IndexType.BLOOM).build())\n-            .withAutoCommit(false).withProps(props);\n+            .withAutoCommit(autoCommit).withProps(props);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMTU5Mg=="}, "originalCommit": {"oid": "6f985401f9a7c8e074b2a49ddb431686f999d00a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NTg3MQ==", "bodyText": "ok makes sense", "url": "https://github.com/apache/hudi/pull/1710#discussion_r438955871", "createdAt": "2020-06-11T17:37:39Z", "author": {"login": "vinothchandar"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/deltastreamer/DeltaSync.java", "diffHunk": "@@ -497,25 +499,30 @@ private void setupWriteClient() {\n    * @param schemaProvider Schema Provider\n    */\n   private HoodieWriteConfig getHoodieClientConfig(SchemaProvider schemaProvider) {\n+    final boolean combineBeforeUpsert = true;\n+    final boolean autoCommit = false;\n     HoodieWriteConfig.Builder builder =\n-        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, true)\n+        HoodieWriteConfig.newBuilder().withPath(cfg.targetBasePath).combineInput(cfg.filterDupes, combineBeforeUpsert)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder().withPayloadClass(cfg.payloadClassName)\n                 // Inline compaction is disabled for continuous mode. otherwise enabled for MOR\n                 .withInlineCompaction(cfg.isInlineCompactionEnabled()).build())\n             .forTable(cfg.targetTableName)\n-            .withIndexConfig(HoodieIndexConfig.newBuilder().withIndexType(HoodieIndex.IndexType.BLOOM).build())\n-            .withAutoCommit(false).withProps(props);\n+            .withAutoCommit(autoCommit).withProps(props);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMTU5Mg=="}, "originalCommit": {"oid": "6f985401f9a7c8e074b2a49ddb431686f999d00a"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4469, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}