{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjYwNDcx", "number": 1312, "title": "[HUDI-571] Add \"compactions show archived\" command to CLI", "bodyText": "What is the purpose of the pull request\nAdd command to show archived compactions. This is useful for debugging historical timeline.\nBrief change log\nFollow up from #1274 to list all archived compactions.\nNote that compactions are not being written to archive file, so this returns empty. If anyone have context why compactions are not being written to archive, let me know.\nVerify this pull request\nManually verified the change by running CLI locally. Example output:\n->compactions show all (verify that listing active timeline compactions work)\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 Compaction Instant Time \u2502 State     \u2502 Total FileIds to be Compacted \u2551\n\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\n\u2551 20200208002351          \u2502 INFLIGHT  \u2502 5968                          \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 20200208002335          \u2502 COMPLETED \u2502 65                            \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 20200207235341          \u2502 COMPLETED \u2502 84                            \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n\u2551 20200207231819          \u2502 COMPLETED \u2502 84                            \u2551\n\u255f\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2562\n->compactions show archived\n\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 Compaction Instant Time \u2502 State \u2502 Total FileIds to be Compacted \u2551\n\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\n\u2551 (empty)                                                         \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-02-08T01:03:26Z", "url": "https://github.com/apache/hudi/pull/1312", "merged": true, "mergeCommit": {"oid": "20ed2516d38b9ce4b3e185bd89b62264b8bd3f25"}, "closed": true, "closedAt": "2020-02-14T18:58:29Z", "author": {"login": "satishkotha"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDqp9fAFqTM1NzY4NTU4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEUQ4PgFqTM1OTE1MTk2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Njg1NTg3", "url": "https://github.com/apache/hudi/pull/1312#pullrequestreview-357685587", "createdAt": "2020-02-12T18:28:11Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODoyODoxMVrOFo5uPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODoyODoxMVrOFo5uPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzMzA4Ng==", "bodyText": "Pass timeline containing commit + compaction actions only, instead of activeTimeline (which may have other actions)?\nHoodieTimeline timeline = activeTimeline.getCommitsAndCompactionTimeline();", "url": "https://github.com/apache/hudi/pull/1312#discussion_r378433086", "createdAt": "2020-02-12T18:28:11Z", "author": {"login": "nbalajee"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/CompactionCommand.java", "diffHunk": "@@ -95,51 +101,9 @@ public String compactionsAll(\n       throws IOException {\n     HoodieTableMetaClient client = checkAndGetMetaClient();\n     HoodieActiveTimeline activeTimeline = client.getActiveTimeline();\n-    HoodieTimeline timeline = activeTimeline.getCommitsAndCompactionTimeline();\n-    HoodieTimeline commitTimeline = activeTimeline.getCommitTimeline().filterCompletedInstants();\n-    Set<String> committed = commitTimeline.getInstants().map(HoodieInstant::getTimestamp).collect(Collectors.toSet());\n-\n-    List<HoodieInstant> instants = timeline.getReverseOrderedInstants().collect(Collectors.toList());\n-    List<Comparable[]> rows = new ArrayList<>();\n-    for (HoodieInstant instant : instants) {\n-      HoodieCompactionPlan compactionPlan = null;\n-      if (!HoodieTimeline.COMPACTION_ACTION.equals(instant.getAction())) {\n-        try {\n-          // This could be a completed compaction. Assume a compaction request file is present but skip if fails\n-          compactionPlan = AvroUtils.deserializeCompactionPlan(\n-              activeTimeline.readCompactionPlanAsBytes(\n-                  HoodieTimeline.getCompactionRequestedInstant(instant.getTimestamp())).get());\n-        } catch (HoodieIOException ioe) {\n-          // SKIP\n-        }\n-      } else {\n-        compactionPlan = AvroUtils.deserializeCompactionPlan(activeTimeline.readCompactionPlanAsBytes(\n-            HoodieTimeline.getCompactionRequestedInstant(instant.getTimestamp())).get());\n-      }\n-\n-      if (null != compactionPlan) {\n-        State state = instant.getState();\n-        if (committed.contains(instant.getTimestamp())) {\n-          state = State.COMPLETED;\n-        }\n-        if (includeExtraMetadata) {\n-          rows.add(new Comparable[] {instant.getTimestamp(), state.toString(),\n-              compactionPlan.getOperations() == null ? 0 : compactionPlan.getOperations().size(),\n-              compactionPlan.getExtraMetadata().toString()});\n-        } else {\n-          rows.add(new Comparable[] {instant.getTimestamp(), state.toString(),\n-              compactionPlan.getOperations() == null ? 0 : compactionPlan.getOperations().size()});\n-        }\n-      }\n-    }\n-\n-    Map<String, Function<Object, String>> fieldNameToConverterMap = new HashMap<>();\n-    TableHeader header = new TableHeader().addTableHeaderField(\"Compaction Instant Time\").addTableHeaderField(\"State\")\n-        .addTableHeaderField(\"Total FileIds to be Compacted\");\n-    if (includeExtraMetadata) {\n-      header = header.addTableHeaderField(\"Extra Metadata\");\n-    }\n-    return HoodiePrintHelper.print(header, fieldNameToConverterMap, sortByField, descending, limit, headerOnly, rows);\n+    return printAllCompactions(activeTimeline,\n+            compactionPlanReader(this::readCompactionPlanForActiveTimeline, activeTimeline),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NjA5Nzkz", "url": "https://github.com/apache/hudi/pull/1312#pullrequestreview-358609793", "createdAt": "2020-02-13T22:52:43Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1Mjo0M1rOFpmXYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1Mjo0M1rOFpmXYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NDUxMw==", "bodyText": "what does this comment mean ?", "url": "https://github.com/apache/hudi/pull/1312#discussion_r379164513", "createdAt": "2020-02-13T22:52:43Z", "author": {"login": "n3nash"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/CompactionCommand.java", "diffHunk": "@@ -249,6 +262,128 @@ public String compact(\n     return \"Compaction successfully completed for \" + compactionInstantTime;\n   }\n \n+  /**\n+   * Prints all compaction details.\n+   * Note values in compactionsPlans and instants lists are expected to be in cohesion", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258ac06a83f8e90905134c95f617d87271ebe23f", "author": {"user": {"login": "satishkotha", "name": null}}, "url": "https://github.com/apache/hudi/commit/258ac06a83f8e90905134c95f617d87271ebe23f", "committedDate": "2020-02-14T02:23:01Z", "message": "[HUDI-571] Add show archived compaction(s) to CLI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "258ac06a83f8e90905134c95f617d87271ebe23f", "author": {"user": {"login": "satishkotha", "name": null}}, "url": "https://github.com/apache/hudi/commit/258ac06a83f8e90905134c95f617d87271ebe23f", "committedDate": "2020-02-14T02:23:01Z", "message": "[HUDI-571] Add show archived compaction(s) to CLI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTUxOTYz", "url": "https://github.com/apache/hudi/pull/1312#pullrequestreview-359151963", "createdAt": "2020-02-14T18:58:19Z", "commit": {"oid": "258ac06a83f8e90905134c95f617d87271ebe23f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}