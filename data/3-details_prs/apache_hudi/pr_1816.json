{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTk5Mzcw", "number": 1816, "title": "[HUDI-859]: Added section for key generation in writing data docs", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\n(For example: This pull request adds quick-start document.)\nBrief change log\n(for example:)\n\nModify AnnotationLocation checkstyle rule in checkstyle.xml\n\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is a trivial rework / code cleanup without any test coverage.\n(or)\nThis pull request is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end.\nAdded HoodieClientWriteTest to verify the change.\nManually verified the change by running a job locally.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-07-10T19:06:11Z", "url": "https://github.com/apache/hudi/pull/1816", "merged": true, "mergeCommit": {"oid": "3df26743ebf1f125c072804a6e50775d5c53f6e0"}, "closed": true, "closedAt": "2020-08-13T08:04:50Z", "author": {"login": "pratyakshsharma"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczn-HjAH2gAyNDQ3NTk5MzcwOmRlNGFkZGU2NGNhNDA0ZDI2ODQxN2MxZTA4YmJmZTRhNjM3NmYzOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-bKFHAH2gAyNDQ3NTk5MzcwOjllMmZmOTVhOTZkMGY3MTUyNDNkYTM4YWUwMmUxYzljNWVkOTY3ZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "de4adde64ca404d268417c1e08bbfe4a6376f39f", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/de4adde64ca404d268417c1e08bbfe4a6376f39f", "committedDate": "2020-07-10T18:30:22Z", "message": "[HUDI-859]: Added section for key generation in Writing data page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dc71b2876bf9adf321fc3ca4a5705e7ef021a47", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/2dc71b2876bf9adf321fc3ca4a5705e7ef021a47", "committedDate": "2020-07-10T18:33:27Z", "message": "Merge branch 'asf-site' of https://github.com/apache/incubator-hudi into asf-site-docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98d07c2775ab489c51262346f08f9a695072de99", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/98d07c2775ab489c51262346f08f9a695072de99", "committedDate": "2020-07-10T19:00:12Z", "message": "[HUDI-859]: added key generation section in writing data docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dabb3dda59227e3129fbe3d40424725c0541bcf", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/3dabb3dda59227e3129fbe3d40424725c0541bcf", "committedDate": "2020-07-10T19:05:24Z", "message": "[HUDI-859]: removed unnecessary changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODA5MTkw", "url": "https://github.com/apache/hudi/pull/1816#pullrequestreview-446809190", "createdAt": "2020-07-11T15:18:37Z", "commit": {"oid": "3dabb3dda59227e3129fbe3d40424725c0541bcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNToxODozN1rOGwNbCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNToxODozN1rOGwNbCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNDc0NA==", "bodyText": "should we also point out the hoodie.datasource.write.keygenerator.class should be set to NonpartitionedKeyGenerator ?", "url": "https://github.com/apache/hudi/pull/1816#discussion_r453204744", "createdAt": "2020-07-11T15:18:37Z", "author": {"login": "leesf"}, "path": "docs/_docs/2_2_writing_data.md", "diffHunk": "@@ -28,6 +28,58 @@ can be chosen/changed across each commit/deltacommit issued against the table.\n  of initial load. However, this just does a best-effort job at sizing files vs guaranteeing file sizes like inserts/upserts do. \n \n \n+## Key Generation\n+\n+Hudi maintains hoodie keys (record key + partition path) for uniquely identifying a particular record. Hudi currently supports different combinations of record keys and partition paths as below - \n+\n+ - Simple record key (consisting of only one field) and simple partition path (with optional hive style partitioning)\n+ - Simple record key and custom timestamp based partition path (with optional hive style partitioning)\n+ - Composite record keys (combination of multiple fields) and composite partition paths\n+ - Composite record keys and timestamp based partition paths (composite also supported)\n+ - Non partitioned table\n+\n+`CustomKeyGenerator.java` (part of hudi-spark module) class provides great support for generating hoodie keys of all the above listed types. All you need to do is supply values for the following properties properly to create your desired keys - \n+\n+```java\n+hoodie.datasource.write.recordkey.field\n+hoodie.datasource.write.partitionpath.field\n+hoodie.datasource.write.keygenerator.class\n+```\n+\n+For having composite record keys, you need to provide comma separated fields like\n+```java\n+hoodie.datasource.write.recordkey.field=field1,field2\n+```\n+\n+This will create your record key in the format `field1:value1,field2:value2` and so on, otherwise you can specify only one field in case of simple record keys. `CustomKeyGenerator` class defines an enum `PartitionKeyType` for configuring partition paths. It can take two possible values - SIMPLE and TIMESTAMP. \n+The value for `hoodie.datasource.write.partitionpath.field` property in case of partitioned tables needs to be provided in the format `field1:PartitionKeyType1,field2:PartitionKeyType2` and so on. For example, if you want to create partition path using 2 fields `country` and `date` where the latter has timestamp based values and needs to be customised in a given format, you can specify the following \n+\n+```java\n+hoodie.datasource.write.partitionpath.field=country:SIMPLE,date:TIMESTAMP\n+``` \n+This will create the partition path in the format `<country_name>/<date>` or `country=<country_name>/date=<date>` depending on whether you want hive style partitioning or not.\n+\n+`TimestampBasedKeyGenerator` class defines the following properties which can be used for doing the customizations for timestamp based partition paths\n+\n+```java\n+hoodie.deltastreamer.keygen.timebased.timestamp.type\n+  This defines the type of the value that your field contains. It can be in string format or epoch format, for example\n+hoodie.deltastreamer.keygen.timebased.timestamp.scalar.time.unit\n+  This defines the granularity of your field, whether it contains the values in seconds or milliseconds\n+hoodie.deltastreamer.keygen.timebased.input.dateformat\n+  This defines the custom format in which the values are present in your field, for example yyyy/MM/dd\n+hoodie.deltastreamer.keygen.timebased.output.dateformat\n+  This defines the custom format in which you want the partition paths to be created, for example dt=yyyyMMdd\n+hoodie.deltastreamer.keygen.timebased.timezone\n+  This defines the timezone which the timestamp based values belong to\n+```\n+\n+Finally, if you want to have non partitioned table, you can simply leave the property blank like", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dabb3dda59227e3129fbe3d40424725c0541bcf"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODA5MzM5", "url": "https://github.com/apache/hudi/pull/1816#pullrequestreview-446809339", "createdAt": "2020-07-11T15:20:48Z", "commit": {"oid": "3dabb3dda59227e3129fbe3d40424725c0541bcf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0372e177251c7ec9ec9e89f211f6a5afb11fa4f", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/e0372e177251c7ec9ec9e89f211f6a5afb11fa4f", "committedDate": "2020-07-11T15:42:28Z", "message": "[HUDI-859]: addressed review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3b85a6ec9e3add9b2859bedb52629bcca52340", "author": {"user": {"login": "pratyakshsharma", "name": "Pratyaksh Sharma"}}, "url": "https://github.com/apache/hudi/commit/ca3b85a6ec9e3add9b2859bedb52629bcca52340", "committedDate": "2020-07-23T12:24:36Z", "message": "[HUDI-859]: review comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDk2MDUx", "url": "https://github.com/apache/hudi/pull/1816#pullrequestreview-454096051", "createdAt": "2020-07-23T12:50:45Z", "commit": {"oid": "ca3b85a6ec9e3add9b2859bedb52629bcca52340"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e2ff95a96d0f715243da38ae02e1c9c5ed967e3", "author": {"user": {"login": "bhasudha", "name": "Bhavani Sudha Saktheeswaran"}}, "url": "https://github.com/apache/hudi/commit/9e2ff95a96d0f715243da38ae02e1c9c5ed967e3", "committedDate": "2020-08-13T07:47:50Z", "message": "Minor fixes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2929, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}