{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDAxMTYy", "number": 1602, "title": "[HUDI-494] fix incorrect record size estimation", "bodyText": "What is the purpose of the pull request\nJIRA: https://issues.apache.org/jira/browse/HUDI-494\nThis PR fixes an edge case:\nthe previous commit is very small but the bloom filter is large, this will cause the totalWriteBytes in the commit metadata not representing the record size. For example, commit1 only wrote 1 record but the parquet file is 20MB. This will lead to incorrect estimate record size and a very small number of recordsToAppend. Then Hudi will create many small files.\nBrief change log\n\nchanged averageBytesPerRecord function in two locations\n\nVerify this pull request\nThis pull request is already covered by existing tests, such as (please describe tests).\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-05-08T01:43:28Z", "url": "https://github.com/apache/hudi/pull/1602", "merged": true, "mergeCommit": {"oid": "22cd824d993bf43d88121ea89bad3a1f23a28518"}, "closed": true, "closedAt": "2020-06-09T03:29:30Z", "author": {"login": "garyli1019"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgrmiOABqjMzMjk0ODgyODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpSuuJABqjM0MjA4NjgzOTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjEzMzA3", "url": "https://github.com/apache/hudi/pull/1602#pullrequestreview-411213307", "createdAt": "2020-05-13T18:59:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1OToyNVrOGU_bBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1OToyNVrOGU_bBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MzgxNQ==", "bodyText": "This method seems only being used in a unit test and has an identical copy on upsertPartitioner. So I removed this.", "url": "https://github.com/apache/hudi/pull/1602#discussion_r424663815", "createdAt": "2020-05-13T18:59:25Z", "author": {"login": "garyli1019"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCopyOnWriteTable.java", "diffHunk": "@@ -299,33 +297,4 @@ public String toString() {\n       return sb.toString();\n     }\n   }\n-\n-  /**\n-   * Obtains the average record size based on records written during previous commits. Used for estimating how many\n-   * records pack into one file.\n-   */\n-  protected static long averageBytesPerRecord(HoodieTimeline commitTimeline, int defaultRecordSizeEstimate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTQ3NDM4", "url": "https://github.com/apache/hudi/pull/1602#pullrequestreview-416547438", "createdAt": "2020-05-21T22:58:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjo1ODo1OVrOGZFmIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjo1OTowN1rOGZFmSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1OTI2NQ==", "bodyText": "since you are at it, can we fix the naming. can you add suffix the units for size. whether its bits or bytes.", "url": "https://github.com/apache/hudi/pull/1602#discussion_r428959265", "createdAt": "2020-05-21T22:58:59Z", "author": {"login": "nsivabalan"}, "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -70,7 +70,9 @@\n public class HoodieTestDataGenerator {\n \n   // based on examination of sample file, the schema produces the following per record size\n-  public static final int SIZE_PER_RECORD = 50 * 1024;\n+  public static final int SIZE_PER_RECORD = (int) (1.2 * 1024);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1OTMwNw==", "bodyText": "same for BLOOM_FILTER_SIZE", "url": "https://github.com/apache/hudi/pull/1602#discussion_r428959307", "createdAt": "2020-05-21T22:59:07Z", "author": {"login": "nsivabalan"}, "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -70,7 +70,9 @@\n public class HoodieTestDataGenerator {\n \n   // based on examination of sample file, the schema produces the following per record size\n-  public static final int SIZE_PER_RECORD = 50 * 1024;\n+  public static final int SIZE_PER_RECORD = (int) (1.2 * 1024);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1OTI2NQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTI1MTgw", "url": "https://github.com/apache/hudi/pull/1602#pullrequestreview-424925180", "createdAt": "2020-06-05T00:37:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozNzoxOFrOGfcv6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDo0MzoyNVrOGfc1jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDA1Ng==", "bodyText": "Why did the size shrink that much? Was this wrong?", "url": "https://github.com/apache/hudi/pull/1602#discussion_r435630056", "createdAt": "2020-06-05T00:37:18Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/testutils/HoodieTestDataGenerator.java", "diffHunk": "@@ -70,7 +70,9 @@\n public class HoodieTestDataGenerator {\n \n   // based on examination of sample file, the schema produces the following per record size\n-  public static final int SIZE_PER_RECORD = 50 * 1024;\n+  public static final int BYTES_PER_RECORD = (int) (1.2 * 1024);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTA0Mw==", "bodyText": "Can we keep a single variable in HoodieTestDataGenerator that sums this up? This code need not be aware of how this is computed really", "url": "https://github.com/apache/hudi/pull/1602#discussion_r435631043", "createdAt": "2020-06-05T00:41:33Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientOnCopyOnWriteStorage.java", "diffHunk": "@@ -1041,10 +1041,12 @@ private HoodieWriteConfig getSmallInsertWriteConfig(int insertSplitSize, boolean\n     HoodieWriteConfig.Builder builder = getConfigBuilder(useNullSchema ? NULL_SCHEMA : TRIP_EXAMPLE_SCHEMA);\n     return builder\n         .withCompactionConfig(\n-            HoodieCompactionConfig.newBuilder().compactionSmallFileSize(HoodieTestDataGenerator.SIZE_PER_RECORD * 15)\n-                .insertSplitSize(insertSplitSize).build()) // tolerate upto 15 records\n+            HoodieCompactionConfig.newBuilder()\n+                .compactionSmallFileSize(HoodieTestDataGenerator.BYTES_PER_RECORD * 150 + HoodieTestDataGenerator.BLOOM_FILTER_BYTES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTUwMQ==", "bodyText": "So the main change here is that the code will keep looking for a commit that wrote at least smallFileLimit bytes do we get as better value? Wonder if this will have any side effects. For eg if there are a bunch of small commutes like you are referring to, then it means we may fallback to the de fault vale lot more?\nWhat do think about introducing another config here that controls this threshold as a fraction of parquetSmallFileLimit? I feel we can destroy it to 0.5, as opposed to 1.0 that you have now..", "url": "https://github.com/apache/hudi/pull/1602#discussion_r435631501", "createdAt": "2020-06-05T00:43:25Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/commit/UpsertPartitioner.java", "diffHunk": "@@ -301,7 +301,7 @@ protected static long averageBytesPerRecord(HoodieTimeline commitTimeline, int d\n               .fromBytes(commitTimeline.getInstantDetails(instant).get(), HoodieCommitMetadata.class);\n           long totalBytesWritten = commitMetadata.fetchTotalBytesWritten();\n           long totalRecordsWritten = commitMetadata.fetchTotalRecordsWritten();\n-          if (totalBytesWritten > 0 && totalRecordsWritten > 0) {\n+          if (totalBytesWritten > hoodieWriteConfig.getParquetSmallFileLimit() && totalRecordsWritten > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MTUwMTQ2", "url": "https://github.com/apache/hudi/pull/1602#pullrequestreview-426150146", "createdAt": "2020-06-08T11:48:17Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0ODoxOFrOGgaJ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMTo0ODoxOFrOGgaJ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNjE1MA==", "bodyText": "rename:  RECORD_SIZE_ESTIMATION_THRESHOLD_PROP", "url": "https://github.com/apache/hudi/pull/1602#discussion_r436636150", "createdAt": "2020-06-08T11:48:18Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieCompactionConfig.java", "diffHunk": "@@ -54,6 +54,12 @@\n   public static final String PARQUET_SMALL_FILE_LIMIT_BYTES = \"hoodie.parquet.small.file.limit\";\n   // By default, treat any file <= 100MB as a small file.\n   public static final String DEFAULT_PARQUET_SMALL_FILE_LIMIT_BYTES = String.valueOf(104857600);\n+  // Hudi will use the previous commit to calculate the estimated record size by totalBytesWritten/totalRecordsWritten.\n+  // If the previous commit is too small to make an accurate estimation, Hudi will search commits in the reverse order,\n+  // until find a commit has totalBytesWritten larger than (PARQUET_SMALL_FILE_LIMIT_BYTES * RECORD_SIZE_ESTIMATION_THRESHOLD)\n+  public static final String RECORD_SIZE_ESTIMATION_THRESHOLD = \"hoodie.record.size.estimation.threshold\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9099c0ea05720c431ae16544155783d6d39d834b", "author": {"user": {"login": "garyli1019", "name": "Gary Li"}}, "url": "https://github.com/apache/hudi/commit/9099c0ea05720c431ae16544155783d6d39d834b", "committedDate": "2020-06-08T16:04:41Z", "message": "HUDI-494 fix incorrect record size estimation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9099c0ea05720c431ae16544155783d6d39d834b", "author": {"user": {"login": "garyli1019", "name": "Gary Li"}}, "url": "https://github.com/apache/hudi/commit/9099c0ea05720c431ae16544155783d6d39d834b", "committedDate": "2020-06-08T16:04:41Z", "message": "HUDI-494 fix incorrect record size estimation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3096, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}