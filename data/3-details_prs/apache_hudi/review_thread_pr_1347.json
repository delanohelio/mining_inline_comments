{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDgwMjE3", "number": 1347, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOTo1NDoyMlrODidQ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjoyOToyNlrODilHUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDU3NjI4OnYy", "diffSide": "RIGHT", "path": "scripts/upload_code_coverage.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOTo1NDoyMlrOFttybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDo0OTo0NlrOFtvXFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4MDQyOQ==", "bodyText": "Integration tests do not generate jacoco report (as yet). This is not detected by codecov as an error.  So it may be simple to just add \"bash <(curl -s https://codecov.io/bash)\" directly to the travis.yml. Future changes to integration test wont require any changes here.", "url": "https://github.com/apache/hudi/pull/1347#discussion_r383480429", "createdAt": "2020-02-24T19:54:22Z", "author": {"login": "prashantwason"}, "path": "scripts/upload_code_coverage.sh", "diffHunk": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+mode=$1\n+\n+if [ \"$mode\" = \"unit\" ];", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwNjE5Nw==", "bodyText": "made changes as u have suggested.", "url": "https://github.com/apache/hudi/pull/1347#discussion_r383506197", "createdAt": "2020-02-24T20:49:46Z", "author": {"login": "ramachandranms"}, "path": "scripts/upload_code_coverage.sh", "diffHunk": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+mode=$1\n+\n+if [ \"$mode\" = \"unit\" ];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4MDQyOQ=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDU5NjEyOnYy", "diffSide": "LEFT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDowMDozNVrOFtt_HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMDozNzoxOVrOFtvAUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4MzY3Ng==", "bodyText": "As per the following link, you can have JaCoCo append coverage of all modules in the same file in the parent module target folder. We can change the dataFile to \"${project.basedir}/../target/coverage-reports/jacoco-ut.exec\".\nMight also have to change the prepare-agent destFile.\nhttps://community.sonarsource.com/t/unit-tests-across-multi-module-projects/9662/3", "url": "https://github.com/apache/hudi/pull/1347#discussion_r383483676", "createdAt": "2020-02-24T20:00:35Z", "author": {"login": "prashantwason"}, "path": "pom.xml", "diffHunk": "@@ -278,8 +276,6 @@\n                 <goal>report</goal>\n               </goals>\n               <configuration>\n-                <!-- Sets the path to the file which contains the execution data. -->\n-                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMDM2OA==", "bodyText": "This seems to be specific to how sonarqube works and we don't use sonar/sonarqube for aggregation\nThis is the recommendation from official jacoco documentation, which I have followed in this PR.\n\nI did try out the sonar documentation on a test project locally and couldn't make it to work.", "url": "https://github.com/apache/hudi/pull/1347#discussion_r383500368", "createdAt": "2020-02-24T20:37:19Z", "author": {"login": "ramachandranms"}, "path": "pom.xml", "diffHunk": "@@ -278,8 +276,6 @@\n                 <goal>report</goal>\n               </goals>\n               <configuration>\n-                <!-- Sets the path to the file which contains the execution data. -->\n-                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ4MzY3Ng=="}, "originalCommit": null, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTg2MjU5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNjoyOToyNlrOFt6B9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNToyNToxMFrOFvFmyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4MTAxNA==", "bodyText": "is there a way to do this without adding this module?", "url": "https://github.com/apache/hudi/pull/1347#discussion_r383681014", "createdAt": "2020-02-25T06:29:26Z", "author": {"login": "vinothchandar"}, "path": "pom.xml", "diffHunk": "@@ -51,6 +51,7 @@\n     <module>packaging/hudi-timeline-server-bundle</module>\n     <module>docker/hoodie/hadoop</module>\n     <module>hudi-integ-test</module>\n+    <module>hudi-test-coverage-aggregator</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MzA2MA==", "bodyText": "for now we cannot do without adding a new module in jacoco. there is a PR out in jacoco OSS to avoid this. But it is not getting much traction. i am closely following it. will remove this module once that PR gets merged to a release. for now this is just a wrapper module that does not get deployed.", "url": "https://github.com/apache/hudi/pull/1347#discussion_r384053060", "createdAt": "2020-02-25T18:44:21Z", "author": {"login": "ramachandranms"}, "path": "pom.xml", "diffHunk": "@@ -51,6 +51,7 @@\n     <module>packaging/hudi-timeline-server-bundle</module>\n     <module>docker/hoodie/hadoop</module>\n     <module>hudi-integ-test</module>\n+    <module>hudi-test-coverage-aggregator</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4MTAxNA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxOTI0Mg==", "bodyText": "I really dislike the additional module. can you reuse one of the bundle modules instead?  or hudi-integ-test?", "url": "https://github.com/apache/hudi/pull/1347#discussion_r384919242", "createdAt": "2020-02-27T05:25:10Z", "author": {"login": "vinothchandar"}, "path": "pom.xml", "diffHunk": "@@ -51,6 +51,7 @@\n     <module>packaging/hudi-timeline-server-bundle</module>\n     <module>docker/hoodie/hadoop</module>\n     <module>hudi-integ-test</module>\n+    <module>hudi-test-coverage-aggregator</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY4MTAxNA=="}, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4849, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}