{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0Njg0NjMz", "number": 1524, "title": "[HUDI-801] Adding a way to post process schema after it is fetched", "bodyText": "What is the purpose of the pull request\nThis PR adds extension point to SchemaProvider. Sometimes it is needed to postprocess schemas after they are fetched from the external sources. Some examples of postprocessing:\n\nmake sure all the defaults are set correctly.\ninsert marker columns into records with no fields (no writable as parquest)\n...\n\nBrief change log\n\nAdded SchemaPostProcessor\nrefactored SchemaProvider to use SchemaPostProcessor and load schemas when constructed.\nUpdated current schemas providers to use\n\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded TestSchemaPostProcessor\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-04-16T20:11:26Z", "url": "https://github.com/apache/hudi/pull/1524", "merged": true, "mergeCommit": {"oid": "c8e19e2def0c33415bc3945ffb81f524c484c924"}, "closed": true, "closedAt": "2020-09-19T18:18:37Z", "author": {"login": "afilipchik"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYgLHVAFqTM5NTM5NzYxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKU2aqgH2gAyNDA0Njg0NjMzOjNlMDQ3ZTZkMzNkZmE5MTY0NTYyZWVhMzI5Nzg3YzU3ZjcwMDlmNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Mzk3NjE3", "url": "https://github.com/apache/hudi/pull/1524#pullrequestreview-395397617", "createdAt": "2020-04-17T12:09:21Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjowOToyMlrOGHLZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjowOToyMlrOGHLZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4MDA0NQ==", "bodyText": "Can we try to use the one from TestHoodieDeltaStreamer? That would help avoid code duplication.", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410180045", "createdAt": "2020-04-17T12:09:22Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestSchemaPostProcessor.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.apache.hudi.utilities;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.io.IOException;\n+import org.apache.avro.Schema;\n+import org.apache.avro.Schema.Type;\n+import org.apache.avro.SchemaBuilder;\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.apache.hudi.common.util.collection.Pair;\n+import org.apache.hudi.utilities.schema.SchemaPostProcessor;\n+import org.apache.hudi.utilities.schema.SchemaProvider;\n+import org.apache.hudi.utilities.schema.SchemaProvider.Config;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.junit.Test;\n+\n+public class TestSchemaPostProcessor {\n+\n+  private TypedProperties properties = new TypedProperties();\n+\n+  @Test\n+  public void testPostProcessor() throws IOException {\n+    properties.put(Config.SCHEMA_POST_PROCESSOR_PROP, DummySchemaPostProcessor.class.getName());\n+\n+    JavaSparkContext jsc =\n+        UtilHelpers.buildSparkContext(this.getClass().getName() + \"-hoodie\", \"local[2]\");\n+    SchemaProvider provider =\n+        UtilHelpers.createSchemaProvider(DummySchemaProvider.class.getName(), properties, jsc);\n+\n+    Schema schema = provider.getSourceSchema();\n+    assertEquals(schema.getType(), Type.RECORD);\n+    assertEquals(schema.getName(), \"test\");\n+    assertNotNull(schema.getField(\"testString\"));\n+  }\n+\n+  public static class DummySchemaProvider extends SchemaProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzM0MjY1", "url": "https://github.com/apache/hudi/pull/1524#pullrequestreview-395734265", "createdAt": "2020-04-17T19:56:14Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1NjoxNVrOGHbQLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1NjoxNVrOGHbQLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzOTcyNA==", "bodyText": "can we fix the import order here?", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410439724", "createdAt": "2020-04-17T19:56:15Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/UtilHelpers.java", "diffHunk": "@@ -18,6 +18,30 @@\n \n package org.apache.hudi.utilities;\n \n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.StringReader;\n+import java.nio.ByteBuffer;\n+import java.sql.Connection;\n+import java.sql.Driver;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Properties;\n+import org.apache.avro.Schema;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzM0NjIz", "url": "https://github.com/apache/hudi/pull/1524#pullrequestreview-395734623", "createdAt": "2020-04-17T19:56:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1Njo1MFrOGHbRMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1Njo1MFrOGHbRMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzOTk4NQ==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410439985", "createdAt": "2020-04-17T19:56:50Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/FilebasedSchemaProvider.java", "diffHunk": "@@ -18,24 +18,27 @@\n \n package org.apache.hudi.utilities.schema;\n \n+import java.io.IOException;\n+import java.util.Collections;\n+import org.apache.avro.Schema;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzM1MTUy", "url": "https://github.com/apache/hudi/pull/1524#pullrequestreview-395735152", "createdAt": "2020-04-17T19:57:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1Nzo0NVrOGHbSrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1Nzo0NVrOGHbSrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MDM2Ng==", "bodyText": "ditto.", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410440366", "createdAt": "2020-04-17T19:57:45Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/NullTargetSchemaRegistryProvider.java", "diffHunk": "@@ -18,14 +18,14 @@\n \n package org.apache.hudi.utilities.schema;\n \n-import org.apache.hudi.common.config.TypedProperties;\n-\n import org.apache.avro.Schema;\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.apache.hudi.common.util.collection.Pair;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzM1Njcw", "url": "https://github.com/apache/hudi/pull/1524#pullrequestreview-395735670", "createdAt": "2020-04-17T19:58:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1ODozN1rOGHbUOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTo1ODozN1rOGHbUOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MDc2MA==", "bodyText": "please reorder imports according to our checkstyle rules everywhere.", "url": "https://github.com/apache/hudi/pull/1524#discussion_r410440760", "createdAt": "2020-04-17T19:58:37Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/schema/RowBasedSchemaProvider.java", "diffHunk": "@@ -22,29 +22,30 @@\n import org.apache.hudi.common.config.TypedProperties;\n \n import org.apache.avro.Schema;\n+import org.apache.hudi.common.util.collection.Pair;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6d5ec76aa98d2a3e6246104cb757f60eac0332d8", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/6d5ec76aa98d2a3e6246104cb757f60eac0332d8", "committedDate": "2020-05-15T19:59:06Z", "message": "merged TestHoodieDeltaStreamer\nAdded test\nMoved DummySchemaProvider to a separate class\nReformatted imports using HUDI checkstyle\nReformatted imports using HUDI checkstyle\nUpdated docs\nFixed codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a0c8332518833605a80c79aa538a3eeac3bb7d7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/8a0c8332518833605a80c79aa538a3eeac3bb7d7", "committedDate": "2020-09-17T23:34:14Z", "message": "[HUDI-801] Adding a way to post process schema after it is fetched"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ebde0f6bcf05c363f2a99063002d32e82da0be3", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/0ebde0f6bcf05c363f2a99063002d32e82da0be3", "committedDate": "2020-05-15T23:26:39Z", "message": "Used Composition to implement Post-Processing. Allows us to not break public API"}, "afterCommit": {"oid": "8a0c8332518833605a80c79aa538a3eeac3bb7d7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/8a0c8332518833605a80c79aa538a3eeac3bb7d7", "committedDate": "2020-09-17T23:34:14Z", "message": "[HUDI-801] Adding a way to post process schema after it is fetched"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e047e6d33dfa9164562eea329787c57f7009f72", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/3e047e6d33dfa9164562eea329787c57f7009f72", "committedDate": "2020-09-19T07:14:01Z", "message": "Fix unit-tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}