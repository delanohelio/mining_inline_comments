{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzY1OTI5", "number": 1648, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1NDo1NlrOD-8I5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTozNzoxNVrOEKeZwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzIzNjIzOnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1NDo1NlrOGZWD7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1NDo1NlrOGZWD7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyOTAzNg==", "bodyText": "why public? package private isn't sufficient?", "url": "https://github.com/apache/hudi/pull/1648#discussion_r429229036", "createdAt": "2020-05-22T12:54:56Z", "author": {"login": "nsivabalan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -53,44 +56,74 @@\n \n   private final TimestampType timestampType;\n \n-  private SimpleDateFormat inputDateFormat;\n-\n   private final String outputDateFormat;\n+  private DateTimeFormatter inputFormatter;\n+  private final String configInputDateFormatList;\n+  private final String configInputDateFormatDelimiter;\n \n   // TimeZone detailed settings reference\n   // https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html\n-  private final TimeZone timeZone;\n+  private final DateTimeZone inputDateTimeZone;\n+  private final DateTimeZone outputDateTimeZone;\n \n   /**\n    * Supported configs.\n    */\n   static class Config {\n \n     // One value from TimestampType above\n-    private static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n-    private static final String INPUT_TIME_UNIT =\n+    public static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzI0NTE5OnYy", "diffSide": "RIGHT", "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1Nzo1NlrOGZWJnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjo1Nzo1NlrOGZWJnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMDQ5Mg==", "bodyText": "can we add dots (\".\") between words. hoodie.deltastreamer.keygen.timebased.input.dateformat.list.delimiter.regex", "url": "https://github.com/apache/hudi/pull/1648#discussion_r429230492", "createdAt": "2020-05-22T12:57:56Z", "author": {"login": "nsivabalan"}, "path": "hudi-utilities/src/main/java/org/apache/hudi/utilities/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -53,44 +56,74 @@\n \n   private final TimestampType timestampType;\n \n-  private SimpleDateFormat inputDateFormat;\n-\n   private final String outputDateFormat;\n+  private DateTimeFormatter inputFormatter;\n+  private final String configInputDateFormatList;\n+  private final String configInputDateFormatDelimiter;\n \n   // TimeZone detailed settings reference\n   // https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html\n-  private final TimeZone timeZone;\n+  private final DateTimeZone inputDateTimeZone;\n+  private final DateTimeZone outputDateTimeZone;\n \n   /**\n    * Supported configs.\n    */\n   static class Config {\n \n     // One value from TimestampType above\n-    private static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n-    private static final String INPUT_TIME_UNIT =\n+    public static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n+    public static final String INPUT_TIME_UNIT =\n         \"hoodie.deltastreamer.keygen.timebased.timestamp.scalar.time.unit\";\n-    private static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n+    //This prop can now accept list of input date formats.\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n         \"hoodie.deltastreamer.keygen.timebased.input.dateformat\";\n-    private static final String TIMESTAMP_OUTPUT_DATE_FORMAT_PROP =\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_LIST_DELIMITER_REGEX_PROP = \"hoodie.deltastreamer.keygen.timebased.input.dateformatlistdelimiterregex\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjExNTg5OnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNzo1ODo1OFrOGZwYLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxNTozODozMFrOGp2jHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2MDIwNA==", "bodyText": "actually my bad. just now it strikes me. Lets add an arg for the config params. If we leave it completely to the parser, then we can't enforce the parameter used. Each impl can define their own params. Lets not leave it loose like that.", "url": "https://github.com/apache/hudi/pull/1648#discussion_r429660204", "createdAt": "2020-05-24T17:58:58Z", "author": {"login": "nsivabalan"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParser.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.keygen.parser;\n+\n+import org.joda.time.DateTimeZone;\n+import org.joda.time.format.DateTimeFormatter;\n+\n+public interface HoodieDateTimeParser {\n+\n+  /**\n+   * Returns the output date format in which the partition paths will be created for the hudi dataset.\n+   * @return\n+   */\n+  String getOutputDateFormat();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzODUyNA==", "bodyText": "The purpose of not passing any params here is to actually use the parameters defined in TimestampBasedKeyGenerator.Config class. I want to have that Config class as the only place for having all the config parameters for timestamp based key generation and I have actually used those config parameters in my implementation as well. But I do not have any strong reason for not passing any parameters around as part of signature of all functions in HoodieDateTimeParser interface. The other reason is we cannot enforce the usage of parameter by passing in the function as someone might still want to change the code and they can change the interface contract itself at a later point of time. I guess we can take care of config parameters getting used as part of code review itself :)\nPlease let me know your thoughts on this. @nsivabalan", "url": "https://github.com/apache/hudi/pull/1648#discussion_r446538524", "createdAt": "2020-06-27T15:38:30Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParser.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.keygen.parser;\n+\n+import org.joda.time.DateTimeZone;\n+import org.joda.time.format.DateTimeFormatter;\n+\n+public interface HoodieDateTimeParser {\n+\n+  /**\n+   * Returns the output date format in which the partition paths will be created for the hudi dataset.\n+   * @return\n+   */\n+  String getOutputDateFormat();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2MDIwNA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDE5MzMwOnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTozNzoxNVrOGriPtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjozMDozNlrOGvY3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwMzAyOQ==", "bodyText": "lets not add \"class\" in the config name. guess thats not nomenclature.", "url": "https://github.com/apache/hudi/pull/1648#discussion_r448303029", "createdAt": "2020-07-01T11:37:15Z", "author": {"login": "nsivabalan"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -45,52 +45,54 @@\n  */\n public class TimestampBasedKeyGenerator extends SimpleKeyGenerator {\n \n-  enum TimestampType implements Serializable {\n+  public enum TimestampType implements Serializable {\n     UNIX_TIMESTAMP, DATE_STRING, MIXED, EPOCHMILLISECONDS, SCALAR\n   }\n \n   private final TimeUnit timeUnit;\n-\n   private final TimestampType timestampType;\n-\n-  private SimpleDateFormat inputDateFormat;\n-\n   private final String outputDateFormat;\n+  private DateTimeFormatter inputFormatter;\n+  private final HoodieDateTimeParser parser;\n \n   // TimeZone detailed settings reference\n   // https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html\n-  private final TimeZone timeZone;\n+  private final DateTimeZone outputDateTimeZone;\n \n   /**\n    * Supported configs.\n    */\n-  static class Config {\n+  public static class Config {\n \n     // One value from TimestampType above\n-    private static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n-    private static final String INPUT_TIME_UNIT =\n+    public static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n+    public static final String INPUT_TIME_UNIT =\n         \"hoodie.deltastreamer.keygen.timebased.timestamp.scalar.time.unit\";\n-    private static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n+    //This prop can now accept list of input date formats.\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n         \"hoodie.deltastreamer.keygen.timebased.input.dateformat\";\n-    private static final String TIMESTAMP_OUTPUT_DATE_FORMAT_PROP =\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_LIST_DELIMITER_REGEX_PROP = \"hoodie.deltastreamer.keygen.timebased.input.dateformat.list.delimiter.regex\";\n+    public static final String TIMESTAMP_INPUT_TIMEZONE_FORMAT_PROP = \"hoodie.deltastreamer.keygen.timebased.input.timezone\";\n+    public static final String TIMESTAMP_OUTPUT_DATE_FORMAT_PROP =\n         \"hoodie.deltastreamer.keygen.timebased.output.dateformat\";\n-    private static final String TIMESTAMP_TIMEZONE_FORMAT_PROP =\n-            \"hoodie.deltastreamer.keygen.timebased.timezone\";\n+    //still keeping this prop for backward compatibility so that functionality for existing users does not break.\n+    public static final String TIMESTAMP_TIMEZONE_FORMAT_PROP =\n+        \"hoodie.deltastreamer.keygen.timebased.timezone\";\n+    public static final String TIMESTAMP_OUTPUT_TIMEZONE_FORMAT_PROP = \"hoodie.deltastreamer.keygen.timebased.output.timezone\";\n+    static final String DATE_TIME_PARSER_CLASS = \"hoodie.deltastreamer.keygen.datetime.parser.class\";\n   }\n \n-  public TimestampBasedKeyGenerator(TypedProperties config) {\n+  public TimestampBasedKeyGenerator(TypedProperties config) throws IOException {\n     super(config);\n-    DataSourceUtils.checkRequiredProperties(config,\n-        Arrays.asList(Config.TIMESTAMP_TYPE_FIELD_PROP, Config.TIMESTAMP_OUTPUT_DATE_FORMAT_PROP));\n+    String dateTimeParserClass = config.getString(Config.DATE_TIME_PARSER_CLASS, HoodieDateTimeParserImpl.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0Mzc1Mg==", "bodyText": "Done.", "url": "https://github.com/apache/hudi/pull/1648#discussion_r452343752", "createdAt": "2020-07-09T16:30:36Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -45,52 +45,54 @@\n  */\n public class TimestampBasedKeyGenerator extends SimpleKeyGenerator {\n \n-  enum TimestampType implements Serializable {\n+  public enum TimestampType implements Serializable {\n     UNIX_TIMESTAMP, DATE_STRING, MIXED, EPOCHMILLISECONDS, SCALAR\n   }\n \n   private final TimeUnit timeUnit;\n-\n   private final TimestampType timestampType;\n-\n-  private SimpleDateFormat inputDateFormat;\n-\n   private final String outputDateFormat;\n+  private DateTimeFormatter inputFormatter;\n+  private final HoodieDateTimeParser parser;\n \n   // TimeZone detailed settings reference\n   // https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html\n-  private final TimeZone timeZone;\n+  private final DateTimeZone outputDateTimeZone;\n \n   /**\n    * Supported configs.\n    */\n-  static class Config {\n+  public static class Config {\n \n     // One value from TimestampType above\n-    private static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n-    private static final String INPUT_TIME_UNIT =\n+    public static final String TIMESTAMP_TYPE_FIELD_PROP = \"hoodie.deltastreamer.keygen.timebased.timestamp.type\";\n+    public static final String INPUT_TIME_UNIT =\n         \"hoodie.deltastreamer.keygen.timebased.timestamp.scalar.time.unit\";\n-    private static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n+    //This prop can now accept list of input date formats.\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_PROP =\n         \"hoodie.deltastreamer.keygen.timebased.input.dateformat\";\n-    private static final String TIMESTAMP_OUTPUT_DATE_FORMAT_PROP =\n+    public static final String TIMESTAMP_INPUT_DATE_FORMAT_LIST_DELIMITER_REGEX_PROP = \"hoodie.deltastreamer.keygen.timebased.input.dateformat.list.delimiter.regex\";\n+    public static final String TIMESTAMP_INPUT_TIMEZONE_FORMAT_PROP = \"hoodie.deltastreamer.keygen.timebased.input.timezone\";\n+    public static final String TIMESTAMP_OUTPUT_DATE_FORMAT_PROP =\n         \"hoodie.deltastreamer.keygen.timebased.output.dateformat\";\n-    private static final String TIMESTAMP_TIMEZONE_FORMAT_PROP =\n-            \"hoodie.deltastreamer.keygen.timebased.timezone\";\n+    //still keeping this prop for backward compatibility so that functionality for existing users does not break.\n+    public static final String TIMESTAMP_TIMEZONE_FORMAT_PROP =\n+        \"hoodie.deltastreamer.keygen.timebased.timezone\";\n+    public static final String TIMESTAMP_OUTPUT_TIMEZONE_FORMAT_PROP = \"hoodie.deltastreamer.keygen.timebased.output.timezone\";\n+    static final String DATE_TIME_PARSER_CLASS = \"hoodie.deltastreamer.keygen.datetime.parser.class\";\n   }\n \n-  public TimestampBasedKeyGenerator(TypedProperties config) {\n+  public TimestampBasedKeyGenerator(TypedProperties config) throws IOException {\n     super(config);\n-    DataSourceUtils.checkRequiredProperties(config,\n-        Arrays.asList(Config.TIMESTAMP_TYPE_FIELD_PROP, Config.TIMESTAMP_OUTPUT_DATE_FORMAT_PROP));\n+    String dateTimeParserClass = config.getString(Config.DATE_TIME_PARSER_CLASS, HoodieDateTimeParserImpl.class.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwMzAyOQ=="}, "originalCommit": null, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4665, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}