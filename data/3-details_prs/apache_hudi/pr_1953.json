{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTM1ODM4", "number": 1953, "title": "[HUDI-1181] Fix decimal type display issue for record key field", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nWhen using fixed_len_byte_array decimal type as Hudi record key, Hudi would not correctly display the decimal value, instead, Hudi would display it as a byte array.\nDuring the Hudi writing phase, Hudi would save the parquet source data into Avro Generic Record. For example, the source parquet data has a column with decimal type:\noptional fixed_len_byte_array(16) LN_LQDN_OBJ_ID (DECIMAL(38,0));\n\nThen Hudi will convert it into the following avro decimal type:\n{\n    \"name\" : \"LN_LQDN_OBJ_ID\",\n    \"type\" : [ {\n      \"type\" : \"fixed\",\n      \"name\" : \"fixed\",\n      \"namespace\" : \"hoodie.hudi_ln_lqdn.hudi_ln_lqdn_record.LN_LQDN_OBJ_ID\",\n      \"size\" : 16,\n      \"logicalType\" : \"decimal\",\n      \"precision\" : 38,\n      \"scale\" : 0\n    }, \"null\" ]\n}\n\nThis decimal field would be stored as a fixed length bytes array. And in the reading phase, Hudi will convert this bytes array back to a readable decimal value through this converter.\nHowever, the problem is, when setting decimal type as record keys, Hudi would read the value from Avro Generic Record and then directly convert it into String type(See here). As a result, what shows in the _hoodie_record_key field would be something like: LN_LQDN_OBJ_ID:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 40, 95, -71].\nSo we need to handle this special case to convert bytes array back before converting to String.\nBrief change log\nSimilar to what we did for Date type columns: 2d04014#diff-21f77fb372831d468dab018505592e12, I added another logic to handle decimal type column.\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded a decimal test case in TestDataSourceUtils.java to verify the change.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-08-12T05:57:37Z", "url": "https://github.com/apache/hudi/pull/1953", "merged": true, "mergeCommit": {"oid": "2fee087f0f167370570a88b6d9d28ddbe8402a3e"}, "closed": true, "closedAt": "2020-09-09T00:50:56Z", "author": {"login": "zhedoubushishi"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-GQeqgBqjM2NDYzNTY4NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFB6ANgFqTQ4MTI2OTI5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "286ddf8cf0babc5867f274c7c21c2740016d03d7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/286ddf8cf0babc5867f274c7c21c2740016d03d7", "committedDate": "2020-08-12T07:24:59Z", "message": "Remove getNestedFieldVal method from DataSourceUtils"}, "afterCommit": {"oid": "3225e96866aadef083a9b310c5d17cd87335dba3", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/3225e96866aadef083a9b310c5d17cd87335dba3", "committedDate": "2020-08-12T07:26:41Z", "message": "Remove getNestedFieldVal method from DataSourceUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODc3NzI5", "url": "https://github.com/apache/hudi/pull/1953#pullrequestreview-472877729", "createdAt": "2020-08-22T00:36:16Z", "commit": {"oid": "3225e96866aadef083a9b310c5d17cd87335dba3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwMDozNjoxNlrOHFBB6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQwMDozNjoxNlrOHFBB6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAyMTgwMg==", "bodyText": "I would suggest to abstract this out into its own function like convertValueForAvroLogicalTypes() and call it from both places instead of using recursive call which is adding overhead of more repetitive checks happening. Since this will be called for each record I would like to keep it as lightweight as possible.\n     if (fieldSchema.getType() == Schema.Type.UNION) {\n           for (Schema schema : fieldSchema.getTypes()) {\n                  return convertValueForAvroLogicalTypes()\n               }\n    } else {\n       return convertValueForAvroLogicalTypes()\n   }", "url": "https://github.com/apache/hudi/pull/1953#discussion_r475021802", "createdAt": "2020-08-22T00:36:16Z", "author": {"login": "umehrot2"}, "path": "hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java", "diffHunk": "@@ -431,25 +435,30 @@ private static Object convertValueForSpecificDataTypes(Schema fieldSchema, Objec\n       return fieldValue;\n     }\n \n-    if (isLogicalTypeDate(fieldSchema)) {\n+    if (fieldSchema.getType() == Schema.Type.UNION) {\n+      for (Schema schema : fieldSchema.getTypes()) {\n+        if (schema.getLogicalType() == LogicalTypes.date() || schema.getLogicalType() instanceof LogicalTypes.Decimal) {\n+          return convertValueForSpecificDataTypes(schema, fieldValue);\n+        }\n+      }\n+    } else if (fieldSchema.getLogicalType() == LogicalTypes.date()) {\n+      // special handle for Logical Date type\n       return LocalDate.ofEpochDay(Long.parseLong(fieldValue.toString()));\n+    } else if (fieldSchema.getLogicalType() instanceof LogicalTypes.Decimal) {\n+      // special handle for Logical Decimal type\n+      Decimal dc = (Decimal) fieldSchema.getLogicalType();\n+      DecimalConversion decimalConversion = new DecimalConversion();\n+      if (fieldSchema.getType() == Schema.Type.FIXED) {\n+        return decimalConversion.fromFixed((GenericFixed) fieldValue, fieldSchema,\n+            LogicalTypes.decimal(dc.getPrecision(), dc.getScale()));\n+      } else if (fieldSchema.getType() == Schema.Type.BYTES) {\n+        return decimalConversion.fromBytes((ByteBuffer) fieldValue, fieldSchema,\n+            LogicalTypes.decimal(dc.getPrecision(), dc.getScale()));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3225e96866aadef083a9b310c5d17cd87335dba3"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3dcd1b72e13cada5eef864edbe44a626700e277", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/e3dcd1b72e13cada5eef864edbe44a626700e277", "committedDate": "2020-08-25T18:38:29Z", "message": "[HUDI-1181] Fix decimal type display issue for record key field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07fdb19549e8f040c5e400d99007cbd345395920", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/07fdb19549e8f040c5e400d99007cbd345395920", "committedDate": "2020-08-25T18:40:44Z", "message": "Remove getNestedFieldVal method from DataSourceUtils"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3225e96866aadef083a9b310c5d17cd87335dba3", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/3225e96866aadef083a9b310c5d17cd87335dba3", "committedDate": "2020-08-12T07:26:41Z", "message": "Remove getNestedFieldVal method from DataSourceUtils"}, "afterCommit": {"oid": "55f6a57bc17c0c298041343f611c5d9dfa605ac3", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/55f6a57bc17c0c298041343f611c5d9dfa605ac3", "committedDate": "2020-08-25T21:54:42Z", "message": "resolve comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55f6a57bc17c0c298041343f611c5d9dfa605ac3", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/55f6a57bc17c0c298041343f611c5d9dfa605ac3", "committedDate": "2020-08-25T21:54:42Z", "message": "resolve comments"}, "afterCommit": {"oid": "3f8bb76135edccfdb2a576adff8a84385d6f32eb", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/3f8bb76135edccfdb2a576adff8a84385d6f32eb", "committedDate": "2020-08-25T21:56:10Z", "message": "resolve comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDQ3MDI4", "url": "https://github.com/apache/hudi/pull/1953#pullrequestreview-475047028", "createdAt": "2020-08-25T23:13:39Z", "commit": {"oid": "3f8bb76135edccfdb2a576adff8a84385d6f32eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxMzo0MFrOHGwB9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxMzo0MFrOHGwB9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg0MDQzNg==", "bodyText": "Do we need to check this explicitly ? convertValueForAvroLogicalTypes will either ways just return the field value in this case.\nThe check is either ways not being performed in case Schema type is not UNION. It might be okay to remove this.", "url": "https://github.com/apache/hudi/pull/1953#discussion_r476840436", "createdAt": "2020-08-25T23:13:40Z", "author": {"login": "umehrot2"}, "path": "hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java", "diffHunk": "@@ -433,23 +434,46 @@ private static Object convertValueForSpecificDataTypes(Schema fieldSchema, Objec\n       return fieldValue;\n     }\n \n-    if (isLogicalTypeDate(fieldSchema)) {\n-      return LocalDate.ofEpochDay(Long.parseLong(fieldValue.toString()));\n+    if (fieldSchema.getType() == Schema.Type.UNION) {\n+      for (Schema schema : fieldSchema.getTypes()) {\n+        if (schema.getType() != Schema.Type.NULL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f8bb76135edccfdb2a576adff8a84385d6f32eb"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f8bb76135edccfdb2a576adff8a84385d6f32eb", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/3f8bb76135edccfdb2a576adff8a84385d6f32eb", "committedDate": "2020-08-25T21:56:10Z", "message": "resolve comments"}, "afterCommit": {"oid": "1548cfb5d54fef1ddce18131810423f9c8fbe4e2", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/1548cfb5d54fef1ddce18131810423f9c8fbe4e2", "committedDate": "2020-08-26T00:14:30Z", "message": "resolve comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0cc45854d2f2336ae97c148a2a9dd09d7edcf9b", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/f0cc45854d2f2336ae97c148a2a9dd09d7edcf9b", "committedDate": "2020-08-27T19:03:54Z", "message": "resolve comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1548cfb5d54fef1ddce18131810423f9c8fbe4e2", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/1548cfb5d54fef1ddce18131810423f9c8fbe4e2", "committedDate": "2020-08-26T00:14:30Z", "message": "resolve comments"}, "afterCommit": {"oid": "f0cc45854d2f2336ae97c148a2a9dd09d7edcf9b", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/f0cc45854d2f2336ae97c148a2a9dd09d7edcf9b", "committedDate": "2020-08-27T19:03:54Z", "message": "resolve comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMjY5Mjk1", "url": "https://github.com/apache/hudi/pull/1953#pullrequestreview-481269295", "createdAt": "2020-09-02T20:20:07Z", "commit": {"oid": "f0cc45854d2f2336ae97c148a2a9dd09d7edcf9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4829, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}