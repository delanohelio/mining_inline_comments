{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzgxNTc2", "number": 1338, "title": "[HUDI-615]: Add Test cases for StringUtils.", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nAdd unit tests for StringUtils.java\nBrief change log\n(for example:)\n\nModify AnnotationLocation checkstyle rule in checkstyle.xml\n\nVerify this pull request\n(Please pick either of the following options)\nThis change added tests and can be verified as follows:\n\n*Added unit tests for StringUtils.java\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-02-16T03:13:50Z", "url": "https://github.com/apache/hudi/pull/1338", "merged": true, "mergeCommit": {"oid": "b8f9d0ec4548a2487914c4cc982fc5e1f4e0c88c"}, "closed": true, "closedAt": "2020-02-17T06:13:34Z", "author": {"login": "smarthi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEycPqgFqTM1OTM4MjI1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFFk2qgFqTM1OTQ4MjcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzgyMjU5", "url": "https://github.com/apache/hudi/pull/1338#pullrequestreview-359382259", "createdAt": "2020-02-16T06:07:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjowNzo1MlrOFqR59w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjowNzo1MlrOFqR59w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3Nzg3OQ==", "bodyText": "hi smarthi, thanks for opening the PR, I am wondering if we really need these methods? or will them be used somewhere later?", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379877879", "createdAt": "2020-02-16T06:07:52Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/StringUtils.java", "diffHunk": "@@ -67,4 +69,29 @@ public static String toHexString(byte[] bytes) {\n   public static boolean isNullOrEmpty(String str) {\n     return str == null || str.length() == 0;\n   }\n+\n+\n+  /**\n+   * Returns the given string if it is non-null; the empty string otherwise.\n+   *\n+   * @param string the string to test and possibly return\n+   * @return {@code string} itself if it is non-null; {@code \"\"} if it is null\n+   */\n+  public static String nullToEmpty(@Nullable String string) {\n+    return string == null ? \"\" : string;\n+  }\n+\n+  /**\n+   * Returns the given string if it is nonempty; {@code null} otherwise.\n+   *\n+   * @param string the string to test and possibly return\n+   * @return {@code string} itself if it is nonempty; {@code null} if it is empty or null\n+   */\n+  public static @Nullable String emptyToNull(@Nullable String string) {\n+    return stringIsNullOrEmpty(string) ? null : string;\n+  }\n+\n+  private static boolean stringIsNullOrEmpty(@Nullable String string) {\n+    return string == null || string.isEmpty();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDAzOTc0", "url": "https://github.com/apache/hudi/pull/1338#pullrequestreview-359403974", "createdAt": "2020-02-16T13:32:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMzozMjo0OFrOFqTemg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMzozOTo1M1rOFqTgSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwMzY0Mg==", "bodyText": "IMO, here we can compare it with the joined literal string? It is not necessary to use split it. WDYT?", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379903642", "createdAt": "2020-02-16T13:32:48Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestStringUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.util;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestStringUtils {\n+\n+  @Test\n+  public void testStringJoinWithDelim() {\n+    String[] strings = {\"This\", \"is\", \"not a\", \"test\"};\n+    String joinedString = StringUtils.joinUsingDelim(\"-\", strings);\n+    Assert.assertEquals(strings.length, (joinedString.split(\"-\")).length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwMzk0NQ==", "bodyText": "Can we use static import here for all these static assertion methods to remove Assert.\nAnd can we write a testStringJoin method to test the null and non-null scene(rather than write a method for a special scene)?", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379903945", "createdAt": "2020-02-16T13:37:37Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestStringUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.util;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestStringUtils {\n+\n+  @Test\n+  public void testStringJoinWithDelim() {\n+    String[] strings = {\"This\", \"is\", \"not a\", \"test\"};\n+    String joinedString = StringUtils.joinUsingDelim(\"-\", strings);\n+    Assert.assertEquals(strings.length, (joinedString.split(\"-\")).length);\n+  }\n+\n+  @Test\n+  public void testNullStringJoin() {\n+    Assert.assertNull(StringUtils.join(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkwNDA3NA==", "bodyText": "We can also add a test case for non-null and non-empty string here.", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379904074", "createdAt": "2020-02-16T13:39:53Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestStringUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.util;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestStringUtils {\n+\n+  @Test\n+  public void testStringJoinWithDelim() {\n+    String[] strings = {\"This\", \"is\", \"not a\", \"test\"};\n+    String joinedString = StringUtils.joinUsingDelim(\"-\", strings);\n+    Assert.assertEquals(strings.length, (joinedString.split(\"-\")).length);\n+  }\n+\n+  @Test\n+  public void testNullStringJoin() {\n+    Assert.assertNull(StringUtils.join(null));\n+  }\n+\n+  @Test\n+  public void testStringNullToEmpty() {\n+    String str = \"This is a test\";\n+    Assert.assertEquals(str, StringUtils.nullToEmpty(str));\n+    Assert.assertEquals(\"\", StringUtils.nullToEmpty(null));\n+  }\n+\n+  @Test\n+  public void testStringEmptyToNull() {\n+    Assert.assertNull(StringUtils.emptyToNull(\"\"));\n+    Assert.assertEquals(\"Test String\", StringUtils.emptyToNull(\"Test String\"));\n+  }\n+\n+  @Test\n+  public void testStringNullOrEmpty() {\n+    Assert.assertTrue(StringUtils.isNullOrEmpty(null));\n+    Assert.assertTrue(StringUtils.isNullOrEmpty(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe", "author": {"user": {"login": "smarthi", "name": "Suneel Marthi"}}, "url": "https://github.com/apache/hudi/commit/de8e23bb09608654010e5f865449171effa8a0fe", "committedDate": "2020-02-16T15:44:50Z", "message": "[HUDI-615]: Add Test cases for StringUtils."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe", "author": {"user": {"login": "smarthi", "name": "Suneel Marthi"}}, "url": "https://github.com/apache/hudi/commit/de8e23bb09608654010e5f865449171effa8a0fe", "committedDate": "2020-02-16T15:44:50Z", "message": "[HUDI-615]: Add Test cases for StringUtils."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDUxNjA0", "url": "https://github.com/apache/hudi/pull/1338#pullrequestreview-359451604", "createdAt": "2020-02-17T01:34:25Z", "commit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDgyMDk4", "url": "https://github.com/apache/hudi/pull/1338#pullrequestreview-359482098", "createdAt": "2020-02-17T04:22:06Z", "commit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNDoyMjowN1rOFqYKGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNDoyMjowN1rOFqYKGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk4MDMxNQ==", "bodyText": "This line is repeated and would be removed, you would merge it @smarthi after the change.", "url": "https://github.com/apache/hudi/pull/1338#discussion_r379980315", "createdAt": "2020-02-17T04:22:07Z", "author": {"login": "leesf"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestStringUtils.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.util;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class TestStringUtils {\n+\n+  private static final String[] STRINGS = {\"This\", \"is\", \"a\", \"test\"};\n+\n+  @Test\n+  public void testStringJoinWithDelim() {\n+    String joinedString = StringUtils.joinUsingDelim(\"-\", STRINGS);\n+    assertEquals(STRINGS.length, joinedString.split(\"-\").length);\n+  }\n+\n+  @Test\n+  public void testStringJoin() {\n+    assertNotEquals(null, StringUtils.join(\"\"));\n+    assertNotEquals(null, StringUtils.join(STRINGS));\n+  }\n+\n+  @Test\n+  public void testStringNullToEmpty() {\n+    String str = \"This is a test\";\n+    assertEquals(str, StringUtils.nullToEmpty(str));\n+    assertEquals(\"\", StringUtils.nullToEmpty(null));\n+  }\n+\n+  @Test\n+  public void testStringEmptyToNull() {\n+    assertNull(StringUtils.emptyToNull(\"\"));\n+    assertEquals(\"Test String\", StringUtils.emptyToNull(\"Test String\"));\n+  }\n+\n+  @Test\n+  public void testStringNullOrEmpty() {\n+    assertTrue(StringUtils.isNullOrEmpty(null));\n+    assertTrue(StringUtils.isNullOrEmpty(\"\"));\n+    assertNotEquals(null, StringUtils.isNullOrEmpty(\"this is not empty\"));\n+    assertTrue(StringUtils.isNullOrEmpty(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDgyNzE1", "url": "https://github.com/apache/hudi/pull/1338#pullrequestreview-359482715", "createdAt": "2020-02-17T04:25:29Z", "commit": {"oid": "de8e23bb09608654010e5f865449171effa8a0fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3574, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}