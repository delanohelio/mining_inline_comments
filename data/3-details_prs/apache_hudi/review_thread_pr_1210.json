{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzEzMTYy", "number": 1210, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMDoyOTo0MVrODXXnKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjoyMTo0N1rODXaTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODMwNjk5OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/HoodieParquetRealtimeInputFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMDoyOTo0MVrOFcoydQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMDoyOTo0MVrOFcoydQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3MjcyNQ==", "bodyText": "Hi @wangxianghu, may is [ ] is better, example:\nLOG.debug(\"The projection Ids: [{}] start with ','. First comma is removed\", columnIds);", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365572725", "createdAt": "2020-01-12T10:29:41Z", "author": {"login": "lamberken"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/HoodieParquetRealtimeInputFormat.java", "diffHunk": "@@ -210,7 +210,7 @@ private static Configuration cleanProjectionColumnIds(Configuration conf) {\n     if (!columnIds.isEmpty() && columnIds.charAt(0) == ',') {\n       conf.set(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR, columnIds.substring(1));\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"The projection Ids: {\" + columnIds + \"} start with ','. First comma is removed\");\n+        LOG.debug(\"The projection Ids: {{}} start with ','. First comma is removed\", columnIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0221978831a37810034e781eeff0cb1bdef6138b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODMxMDQ1OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieHiveUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxMDozNzo1NlrOFco0Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMTo1NTo0NlrOFcsRvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3MzE5OA==", "bodyText": "\ud83d\ude03 May be bellow is better:\nLOG.info(\"Hoodie consume mode pattern is : {}, mode is : {}\", modePropertyName, mode);", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365573198", "createdAt": "2020-01-12T10:37:56Z", "author": {"login": "lamberken"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieHiveUtil.java", "diffHunk": "@@ -43,20 +43,20 @@ public static Integer readMaxCommits(JobContext job, String tableName) {\n     if (maxCommits == MAX_COMMIT_ALL) {\n       maxCommits = Integer.MAX_VALUE;\n     }\n-    LOG.info(\"Read max commits - \" + maxCommits);\n+    LOG.info(\"Read max commits - {}\", maxCommits);\n     return maxCommits;\n   }\n \n   public static String readStartCommitTime(JobContext job, String tableName) {\n     String startCommitTimestampName = String.format(HOODIE_START_COMMIT_PATTERN, tableName);\n-    LOG.info(\"Read start commit time - \" + job.getConfiguration().get(startCommitTimestampName));\n+    LOG.info(\"Read start commit time - {}\", job.getConfiguration().get(startCommitTimestampName));\n     return job.getConfiguration().get(startCommitTimestampName);\n   }\n \n   public static String readMode(JobContext job, String tableName) {\n     String modePropertyName = String.format(HOODIE_CONSUME_MODE_PATTERN, tableName);\n     String mode = job.getConfiguration().get(modePropertyName, DEFAULT_SCAN_MODE);\n-    LOG.info(modePropertyName + \": \" + mode);\n+    LOG.info(\"{} : {}\", modePropertyName, mode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0221978831a37810034e781eeff0cb1bdef6138b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyOTg4NQ==", "bodyText": "Hi @lamber-ken  It is better, I'll fix it", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365629885", "createdAt": "2020-01-13T01:55:46Z", "author": {"login": "wangxianghu"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieHiveUtil.java", "diffHunk": "@@ -43,20 +43,20 @@ public static Integer readMaxCommits(JobContext job, String tableName) {\n     if (maxCommits == MAX_COMMIT_ALL) {\n       maxCommits = Integer.MAX_VALUE;\n     }\n-    LOG.info(\"Read max commits - \" + maxCommits);\n+    LOG.info(\"Read max commits - {}\", maxCommits);\n     return maxCommits;\n   }\n \n   public static String readStartCommitTime(JobContext job, String tableName) {\n     String startCommitTimestampName = String.format(HOODIE_START_COMMIT_PATTERN, tableName);\n-    LOG.info(\"Read start commit time - \" + job.getConfiguration().get(startCommitTimestampName));\n+    LOG.info(\"Read start commit time - {}\", job.getConfiguration().get(startCommitTimestampName));\n     return job.getConfiguration().get(startCommitTimestampName);\n   }\n \n   public static String readMode(JobContext job, String tableName) {\n     String modePropertyName = String.format(HOODIE_CONSUME_MODE_PATTERN, tableName);\n     String mode = job.getConfiguration().get(modePropertyName, DEFAULT_SCAN_MODE);\n-    LOG.info(modePropertyName + \": \" + mode);\n+    LOG.info(\"{} : {}\", modePropertyName, mode);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU3MzE5OA=="}, "originalCommit": {"oid": "0221978831a37810034e781eeff0cb1bdef6138b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODc0NzA2OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/HoodieParquetRealtimeInputFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjoyMToyOFrOFcsZrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjoyMToyOFrOFcsZrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzMTkxOA==", "bodyText": "I think the auto indent was brought by idea. drop it.", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365631918", "createdAt": "2020-01-13T02:21:28Z", "author": {"login": "sev7e0"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/HoodieParquetRealtimeInputFormat.java", "diffHunk": "@@ -226,9 +226,9 @@ private static Configuration cleanProjectionColumnIds(Configuration conf) {\n     // actual heavy lifting of reading the parquet files happen.\n     if (job.get(HOODIE_READ_COLUMNS_PROP) == null) {\n       synchronized (job) {\n-        LOG.info(\n-            \"Before adding Hoodie columns, Projections :\" + job.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR)\n-                + \", Ids :\" + job.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR));\n+        LOG.info(\"Before adding Hoodie columns, Projections : {}, Ids : {}\",\n+                job.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR),\n+                job.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22bd6b95a3559b31e1f194e0caf597f03e98ff8b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODc0NzM5OnYy", "diffSide": "RIGHT", "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjoyMTo0N1rOFcsZ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMjozMzowNFrOFcseIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzMTk1NQ==", "bodyText": "\ud83c\udf1f Two lines is better, attention to auto indent.", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365631955", "createdAt": "2020-01-13T02:21:47Z", "author": {"login": "sev7e0"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -144,30 +144,32 @@ public boolean accept(Path path) {\n           if (!hoodiePathCache.containsKey(folder.toString())) {\n             hoodiePathCache.put(folder.toString(), new HashSet<>());\n           }\n-          LOG.info(\"Based on hoodie metadata from base path: \" + baseDir.toString() + \", caching \" + latestFiles.size()\n-              + \" files under \" + folder);\n+          LOG.info(\"Based on hoodie metadata from base path: {}, caching {} files under {}\",\n+                  baseDir,\n+                  latestFiles.size(),\n+                  folder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22bd6b95a3559b31e1f194e0caf597f03e98ff8b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzMzA1Ng==", "bodyText": "fixed", "url": "https://github.com/apache/hudi/pull/1210#discussion_r365633056", "createdAt": "2020-01-13T02:33:04Z", "author": {"login": "wangxianghu"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieROTablePathFilter.java", "diffHunk": "@@ -144,30 +144,32 @@ public boolean accept(Path path) {\n           if (!hoodiePathCache.containsKey(folder.toString())) {\n             hoodiePathCache.put(folder.toString(), new HashSet<>());\n           }\n-          LOG.info(\"Based on hoodie metadata from base path: \" + baseDir.toString() + \", caching \" + latestFiles.size()\n-              + \" files under \" + folder);\n+          LOG.info(\"Based on hoodie metadata from base path: {}, caching {} files under {}\",\n+                  baseDir,\n+                  latestFiles.size(),\n+                  folder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzMTk1NQ=="}, "originalCommit": {"oid": "22bd6b95a3559b31e1f194e0caf597f03e98ff8b"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4961, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}