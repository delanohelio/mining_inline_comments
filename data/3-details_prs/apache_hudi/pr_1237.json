{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODg3NDU5", "number": 1237, "title": "[HUDI-583] Code Cleanup, remove redundant code, and other changes", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nCode cleanup, and other minor tweaks\nBrief change log\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is a trivial rework / code cleanup without any test coverage.\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-01-16T23:00:04Z", "url": "https://github.com/apache/hudi/pull/1237", "merged": true, "mergeCommit": {"oid": "5b7bb142dc6712c41fd8ada208ab3186369431f9"}, "closed": true, "closedAt": "2020-02-02T10:03:45Z", "author": {"login": "smarthi"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7OyP6gFqTM0NDU3Njk1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAFYElAFqTM1MTg4OTA1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTc2OTU0", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-344576954", "createdAt": "2020-01-17T13:30:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTA1OTc1", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-344905975", "createdAt": "2020-01-18T00:27:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNzo1NlrOFfIZ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDoyNzo1NlrOFfIZ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4Nzg4Mg==", "bodyText": "better to List<Object> listRes = new ArrayList<>(); ?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368187882", "createdAt": "2020-01-18T00:27:56Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/avro/MercifulJsonConverter.java", "diffHunk": "@@ -286,7 +284,7 @@ private static JsonToAvroFieldProcessor generateArrayTypeHandler() {\n       public Pair<Boolean, Object> convert(Object value, String name, Schema schema)\n           throws HoodieJsonToAvroConversionException {\n         Schema elementSchema = schema.getElementType();\n-        List listRes = new ArrayList();\n+        List listRes = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTA4NTA4", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-344908508", "createdAt": "2020-01-18T00:42:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDo1MDozNVrOFfIm4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMTozNDoyMFrOFfI7eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MTIwMA==", "bodyText": "still keep this line uncommented?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368191200", "createdAt": "2020-01-18T00:50:35Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java", "diffHunk": "@@ -194,69 +193,66 @@ protected void storePartitionView(String partitionPath, List<HoodieFileGroup> fi\n    */\n   protected void applyDeltaFileSlicesToPartitionView(String partition, List<HoodieFileGroup> deltaFileGroups,\n       DeltaApplyMode mode) {\n-    rocksDB.writeBatch(batch -> {\n-      deltaFileGroups.stream().forEach(fg -> {\n-        fg.getAllRawFileSlices().map(fs -> {\n-          FileSlice oldSlice = getFileSlice(partition, fs.getFileId(), fs.getBaseInstantTime());\n-          if (null == oldSlice) {\n-            return fs;\n-          } else {\n-            // First remove the file-slice\n-            LOG.info(\"Removing old Slice in DB. FS=\" + oldSlice);\n-            rocksDB.deleteInBatch(batch, schemaHelper.getColFamilyForView(),\n-                schemaHelper.getKeyForSliceView(fg, oldSlice));\n-            rocksDB.deleteInBatch(batch, schemaHelper.getColFamilyForView(),\n-                schemaHelper.getKeyForDataFileView(fg, oldSlice));\n-\n-            Map<String, HoodieLogFile> logFiles = oldSlice.getLogFiles()\n-                .map(lf -> Pair.of(Path.getPathWithoutSchemeAndAuthority(lf.getPath()).toString(), lf))\n-                .collect(Collectors.toMap(Pair::getKey, Pair::getValue));\n-            Map<String, HoodieLogFile> deltaLogFiles =\n-                fs.getLogFiles().map(lf -> Pair.of(Path.getPathWithoutSchemeAndAuthority(lf.getPath()).toString(), lf))\n+    rocksDB.writeBatch(batch ->\n+        deltaFileGroups.forEach(fg ->\n+            fg.getAllRawFileSlices().map(fs -> {\n+              FileSlice oldSlice = getFileSlice(partition, fs.getFileId(), fs.getBaseInstantTime());\n+              if (null == oldSlice) {\n+                return fs;\n+              } else {\n+                // First remove the file-slice\n+                // LOG.info(\"Removing old Slice in DB. FS=\" + oldSlice);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MTcyOA==", "bodyText": "ditto, any concerns?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368191728", "createdAt": "2020-01-18T00:54:49Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/FSUtils.java", "diffHunk": "@@ -198,7 +193,7 @@ public static String getRelativePartitionPath(Path basePath, Path partitionPath)\n     return partitions;\n   }\n \n-  public static final List<String> getAllDataFilesForMarkers(FileSystem fs, String basePath, String instantTs,\n+  public static List<String> getAllDataFilesForMarkers(FileSystem fs, String basePath, String instantTs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NjI3Nw==", "bodyText": "would it return null? we need avoid return null.", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368196277", "createdAt": "2020-01-18T01:31:49Z", "author": {"login": "leesf"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieHiveUtil.java", "diffHunk": "@@ -71,18 +71,13 @@ public static Path getNthParent(Path path, int n) {\n   public static List<String> getIncrementalTableNames(JobContext job) {\n     Map<String, String> tablesModeMap = job.getConfiguration()\n         .getValByRegex(HOODIE_CONSUME_MODE_PATTERN_STRING.pattern());\n-    List<String> result = tablesModeMap.entrySet().stream().map(s -> {\n+    return tablesModeMap.entrySet().stream().map(s -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NjM2Nw==", "bodyText": "skip null result?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368196367", "createdAt": "2020-01-18T01:33:02Z", "author": {"login": "leesf"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieParquetInputFormat.java", "diffHunk": "@@ -108,9 +107,7 @@\n       LOG.info(\"Found a total of \" + groupedFileStatus.size() + \" groups\");\n       for (Map.Entry<HoodieTableMetaClient, List<FileStatus>> entry : groupedFileStatus.entrySet()) {\n         List<FileStatus> result = filterFileStatusForSnapshotMode(entry.getKey(), entry.getValue());\n-        if (result != null) {\n-          returns.addAll(result);\n-        }\n+        returns.addAll(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NjQ3Mw==", "bodyText": "incrementalInputPaths won't be null?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368196473", "createdAt": "2020-01-18T01:34:20Z", "author": {"login": "leesf"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/HoodieParquetInputFormat.java", "diffHunk": "@@ -171,15 +167,15 @@\n           return false;\n         })\n         .collect(Collectors.joining(\",\"));\n-    if (incrementalInputPaths == null || incrementalInputPaths.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTI4OTE4", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-344928918", "createdAt": "2020-01-18T06:41:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwNjo0MToxMlrOFfJycQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwNjo0MToxMlrOFfJycQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMDU0NQ==", "bodyText": "Based on other test code style, we can let the @Test annotation close to the method so that we can keep /** here. WDYT?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r368210545", "createdAt": "2020-01-18T06:41:12Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/util/TestFSUtils.java", "diffHunk": "@@ -74,7 +74,7 @@ public void testMaskFileName() {\n   }\n \n   @Test\n-  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODY5NDU3", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351869457", "createdAt": "2020-02-01T06:43:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo0Mzo1MlrOFkcp9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo0Mzo1MlrOFkcp9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MjU0OQ==", "bodyText": "So org.apache.hadoop.util.bloom.BloomFilter could be also changed to BloomFilter?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373762549", "createdAt": "2020-02-01T06:43:52Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/bloom/filter/InternalDynamicBloomFilter.java", "diffHunk": "@@ -217,12 +214,8 @@ public void readFields(DataInput in) throws IOException {\n    * Adds a new row to <i>this</i> dynamic Bloom filter.\n    */\n   private void addRow() {\n-    org.apache.hadoop.util.bloom.BloomFilter[] tmp = new org.apache.hadoop.util.bloom.BloomFilter[matrix.length + 1];\n-\n-    for (int i = 0; i < matrix.length; i++) {\n-      tmp[i] = matrix[i];\n-    }\n-\n+    BloomFilter[] tmp = new BloomFilter[matrix.length + 1];\n+    System.arraycopy(matrix, 0, tmp, 0, matrix.length);\n     tmp[tmp.length - 1] = new org.apache.hadoop.util.bloom.BloomFilter(vectorSize, nbHash, hashType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODY5NTYy", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351869562", "createdAt": "2020-02-01T06:47:02Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo0NzowMlrOFkcqhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo0NzowMlrOFkcqhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MjY5NQ==", "bodyText": "keep the final  as is ?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373762695", "createdAt": "2020-02-01T06:47:02Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/table/timeline/HoodieInstant.java", "diffHunk": "@@ -45,13 +45,13 @@\n       .put(HoodieTimeline.COMPACTION_ACTION, HoodieTimeline.COMMIT_ACTION).build();\n \n   public static final Comparator<HoodieInstant> ACTION_COMPARATOR =\n-      Comparator.<HoodieInstant, String>comparing(instant -> getComparableAction(instant.getAction()));\n+      Comparator.comparing(instant -> getComparableAction(instant.getAction()));\n \n   public static final Comparator<HoodieInstant> COMPARATOR = Comparator.comparing(HoodieInstant::getTimestamp)\n       .thenComparing(ACTION_COMPARATOR).thenComparing(HoodieInstant::getState);\n \n-  public static final String getComparableAction(String action) {\n-    return COMPARABLE_ACTIONS.containsKey(action) ? COMPARABLE_ACTIONS.get(action) : action;\n+  public static String getComparableAction(String action) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODY5NzM0", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351869734", "createdAt": "2020-02-01T06:52:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo1MjozMFrOFkcrXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNjo1MjozMFrOFkcrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MjkwOA==", "bodyText": "good catch", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373762908", "createdAt": "2020-02-01T06:52:30Z", "author": {"login": "leesf"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/BufferedRandomAccessFile.java", "diffHunk": "@@ -1,4 +1,4 @@\n-/**\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODcxMTcw", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351871170", "createdAt": "2020-02-01T07:39:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzozOToxOFrOFkcx7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzozOToxOFrOFkcx7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NDU4OA==", "bodyText": "good catch, combine == null is always false.", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373764588", "createdAt": "2020-02-01T07:39:18Z", "author": {"login": "leesf"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/hive/HoodieCombineHiveInputFormat.java", "diffHunk": "@@ -356,25 +357,21 @@ public int hashCode() {\n     HoodieCombineHiveInputFormat.HoodieCombineFileInputFormatShim combine =\n         new HoodieCombineHiveInputFormat.HoodieCombineFileInputFormatShim();\n \n-    InputSplit[] splits = null;\n-    if (combine == null) {\n-      splits = super.getSplits(job, numSplits);\n-      return splits;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODcxNjE2", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351871616", "createdAt": "2020-02-01T07:54:04Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzo1NDowNFrOFkc0Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNzo1NDowNFrOFkc0Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NTE2Nw==", "bodyText": "readColNames is not null. so !readColNames.contains(fieldName) is okay.", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373765167", "createdAt": "2020-02-01T07:54:04Z", "author": {"login": "leesf"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/realtime/HoodieParquetRealtimeInputFormat.java", "diffHunk": "@@ -175,7 +176,7 @@ private static Configuration addProjectionField(Configuration conf, String field\n       readColIdsPrefix = \"\";\n     }\n \n-    if (!readColNames.contains(fieldName)) {\n+    if (!Objects.requireNonNull(readColNames).contains(fieldName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODcxOTU4", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351871958", "createdAt": "2020-02-01T08:03:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODc4MzQ0", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351878344", "createdAt": "2020-02-01T10:34:31Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODgzNDE5", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351883419", "createdAt": "2020-02-01T12:58:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxMjo1ODoyNlrOFkdpYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxMzozMjo0N1rOFkdusQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3ODc4NQ==", "bodyText": "If we let builder's each setXXX method one line, the readability would be better. WDYT?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373778785", "createdAt": "2020-02-01T12:58:26Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/versioning/compaction/CompactionV1MigrationHandler.java", "diffHunk": "@@ -59,14 +59,12 @@ public HoodieCompactionPlan downgradeFrom(HoodieCompactionPlan input) {\n     final Path basePath = new Path(metaClient.getBasePath());\n     List<HoodieCompactionOperation> v1CompactionOperationList = new ArrayList<>();\n     if (null != input.getOperations()) {\n-      v1CompactionOperationList = input.getOperations().stream().map(inp -> {\n-        return HoodieCompactionOperation.newBuilder().setBaseInstantTime(inp.getBaseInstantTime())\n-            .setFileId(inp.getFileId()).setPartitionPath(inp.getPartitionPath()).setMetrics(inp.getMetrics())\n-            .setDataFilePath(convertToV1Path(basePath, inp.getPartitionPath(), inp.getDataFilePath()))\n-            .setDeltaFilePaths(inp.getDeltaFilePaths().stream()\n-                .map(s -> convertToV1Path(basePath, inp.getPartitionPath(), s)).collect(Collectors.toList()))\n-            .build();\n-      }).collect(Collectors.toList());\n+      v1CompactionOperationList = input.getOperations().stream().map(inp -> HoodieCompactionOperation.newBuilder().setBaseInstantTime(inp.getBaseInstantTime())\n+          .setFileId(inp.getFileId()).setPartitionPath(inp.getPartitionPath()).setMetrics(inp.getMetrics())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3OTA4Ng==", "bodyText": "Would you mind to explain why we should to remove this assertion?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373779086", "createdAt": "2020-02-01T13:06:15Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/table/log/TestHoodieLogFormat.java", "diffHunk": "@@ -414,7 +414,6 @@ public void testBasicAppendAndRead() throws IOException, URISyntaxException, Int\n         dataBlockRead.getRecords().size());\n     assertEquals(\"Both records lists should be the same. (ordering guaranteed)\", copyOfRecords1,\n         dataBlockRead.getRecords());\n-    assertEquals(dataBlockRead.getSchema(), getSimpleSchema());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4MDE0NQ==", "bodyText": "We can also use List<InputSplit> result = new ArrayList<>(); to follow the same code style in this file. WDYT?", "url": "https://github.com/apache/hudi/pull/1237#discussion_r373780145", "createdAt": "2020-02-01T13:32:47Z", "author": {"login": "yanghua"}, "path": "hudi-hadoop-mr/src/main/java/org/apache/hudi/hadoop/hive/HoodieCombineHiveInputFormat.java", "diffHunk": "@@ -522,12 +519,12 @@ public int hashCode() {\n     perfLogger.PerfLogBegin(CLASS_NAME, PerfLogger.GET_SPLITS);\n     init(job);\n \n-    ArrayList<InputSplit> result = new ArrayList<InputSplit>();\n+    ArrayList<InputSplit> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d09d3bec9ac2c0c0e5c5b25df3963d8e77beb24", "author": {"user": {"login": "smarthi", "name": "Suneel Marthi"}}, "url": "https://github.com/apache/hudi/commit/4d09d3bec9ac2c0c0e5c5b25df3963d8e77beb24", "committedDate": "2020-02-01T14:06:00Z", "message": "[MINOR] Code Cleanup, remove redundant code, and other changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4d09d3bec9ac2c0c0e5c5b25df3963d8e77beb24", "author": {"user": {"login": "smarthi", "name": "Suneel Marthi"}}, "url": "https://github.com/apache/hudi/commit/4d09d3bec9ac2c0c0e5c5b25df3963d8e77beb24", "committedDate": "2020-02-01T14:06:00Z", "message": "[MINOR] Code Cleanup, remove redundant code, and other changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODg5MDU0", "url": "https://github.com/apache/hudi/pull/1237#pullrequestreview-351889054", "createdAt": "2020-02-01T15:21:54Z", "commit": {"oid": "4d09d3bec9ac2c0c0e5c5b25df3963d8e77beb24"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4095, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}