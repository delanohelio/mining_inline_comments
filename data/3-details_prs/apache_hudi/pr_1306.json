{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTgwNjM3", "number": 1306, "title": "[HUDI-598] Update quick start page", "bodyText": "What is the purpose of the pull request\n\nUnify code indent ( 4 -> 2 )\nChange org.apache.hudi to hudi\nFix hudi_ro_table not exists at Delete section\n\nVerify this pull request\nCompare changes\n\nhttps://hudi.apache.org/docs/quick-start-guide.html\nhttps://lamber-ken.github.io/docs/quick-start-guide.html\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-02-04T18:14:59Z", "url": "https://github.com/apache/hudi/pull/1306", "merged": true, "mergeCommit": {"oid": "35b0aef62e27290657f5561658bf828b1a2c1b87"}, "closed": true, "closedAt": "2020-03-06T23:20:17Z", "author": {"login": "lamberken"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBFiJpAH2gAyMzcwOTgwNjM3OjM4OTBkMGY1ZmM0NWViMWI5MGM0MzBmOTdjN2QxMmQ5MzVkNDI4MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBPPMtgH2gAyMzcwOTgwNjM3OmI3MWYxYzczN2Y0YmZjZmIyNzE5NzZkNjAwY2RiZjQ5MTcwMzE4OTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3890d0f5fc45eb1b90c430f97c7d12d935d4282e", "author": {"user": {"login": "lamberken", "name": "lamberken"}}, "url": "https://github.com/apache/hudi/commit/3890d0f5fc45eb1b90c430f97c7d12d935d4282e", "committedDate": "2020-02-04T18:06:50Z", "message": "[HUDI-598] Update quick start page"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzQzMTc2", "url": "https://github.com/apache/hudi/pull/1306#pullrequestreview-353343176", "createdAt": "2020-02-04T22:19:36Z", "commit": {"oid": "3890d0f5fc45eb1b90c430f97c7d12d935d4282e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjoxOTozN1rOFlleSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjoyMDo0NVrOFllgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1NTU5Mg==", "bodyText": "hudi_ro_table -> hudi_trips_snapshot here as well.", "url": "https://github.com/apache/hudi/pull/1306#discussion_r374955592", "createdAt": "2020-02-04T22:19:37Z", "author": {"login": "bhasudha"}, "path": "docs/_docs/1_1_quick_start_guide.md", "diffHunk": "@@ -176,28 +176,28 @@ Delete records for the HoodieKeys passed in.\n \n ```scala\n // fetch total records count\n-spark.sql(\"select uuid, partitionPath from hudi_ro_table\").count()\n+spark.sql(\"select uuid, partitionPath from hudi_trips_snapshot\").count()\n // fetch two records to be deleted\n-val ds = spark.sql(\"select uuid, partitionPath from hudi_ro_table\").limit(2)\n+val ds = spark.sql(\"select uuid, partitionPath from hudi_trips_snapshot\").limit(2)\n \n // issue deletes\n val deletes = dataGen.generateDeletes(ds.collectAsList())\n val df = spark.read.json(spark.sparkContext.parallelize(deletes, 2));\n-df.write.format(\"org.apache.hudi\").\n-options(getQuickstartWriteConfigs).\n-option(OPERATION_OPT_KEY,\"delete\").\n-option(PRECOMBINE_FIELD_OPT_KEY, \"ts\").\n-option(RECORDKEY_FIELD_OPT_KEY, \"uuid\").\n-option(PARTITIONPATH_FIELD_OPT_KEY, \"partitionpath\").\n-option(TABLE_NAME, tableName).\n-mode(Append).\n-save(basePath);\n+df.write.format(\"hudi\").\n+  options(getQuickstartWriteConfigs).\n+  option(OPERATION_OPT_KEY,\"delete\").\n+  option(PRECOMBINE_FIELD_OPT_KEY, \"ts\").\n+  option(RECORDKEY_FIELD_OPT_KEY, \"uuid\").\n+  option(PARTITIONPATH_FIELD_OPT_KEY, \"partitionpath\").\n+  option(TABLE_NAME, tableName).\n+  mode(Append).\n+  save(basePath)\n \n // run the same read query as above.\n val roAfterDeleteViewDF = spark.\n-    read.\n-    format(\"org.apache.hudi\").\n-    load(basePath + \"/*/*/*/*\")\n+  read.\n+  format(\"hudi\").\n+  load(basePath + \"/*/*/*/*\")\n roAfterDeleteViewDF.registerTempTable(\"hudi_ro_table\")\n // fetch should return (total - 2) records\n spark.sql(\"select uuid, partitionPath from hudi_ro_table\").count()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3890d0f5fc45eb1b90c430f97c7d12d935d4282e"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1NjA5OA==", "bodyText": "consider changing hudi_ro_table -> hudi_trips_snapshot here as well for consistency ?", "url": "https://github.com/apache/hudi/pull/1306#discussion_r374956098", "createdAt": "2020-02-04T22:20:45Z", "author": {"login": "bhasudha"}, "path": "docs/_docs/1_1_quick_start_guide.md", "diffHunk": "@@ -176,28 +176,28 @@ Delete records for the HoodieKeys passed in.\n \n ```scala\n // fetch total records count\n-spark.sql(\"select uuid, partitionPath from hudi_ro_table\").count()\n+spark.sql(\"select uuid, partitionPath from hudi_trips_snapshot\").count()\n // fetch two records to be deleted\n-val ds = spark.sql(\"select uuid, partitionPath from hudi_ro_table\").limit(2)\n+val ds = spark.sql(\"select uuid, partitionPath from hudi_trips_snapshot\").limit(2)\n \n // issue deletes\n val deletes = dataGen.generateDeletes(ds.collectAsList())\n val df = spark.read.json(spark.sparkContext.parallelize(deletes, 2));\n-df.write.format(\"org.apache.hudi\").\n-options(getQuickstartWriteConfigs).\n-option(OPERATION_OPT_KEY,\"delete\").\n-option(PRECOMBINE_FIELD_OPT_KEY, \"ts\").\n-option(RECORDKEY_FIELD_OPT_KEY, \"uuid\").\n-option(PARTITIONPATH_FIELD_OPT_KEY, \"partitionpath\").\n-option(TABLE_NAME, tableName).\n-mode(Append).\n-save(basePath);\n+df.write.format(\"hudi\").\n+  options(getQuickstartWriteConfigs).\n+  option(OPERATION_OPT_KEY,\"delete\").\n+  option(PRECOMBINE_FIELD_OPT_KEY, \"ts\").\n+  option(RECORDKEY_FIELD_OPT_KEY, \"uuid\").\n+  option(PARTITIONPATH_FIELD_OPT_KEY, \"partitionpath\").\n+  option(TABLE_NAME, tableName).\n+  mode(Append).\n+  save(basePath)\n \n // run the same read query as above.\n val roAfterDeleteViewDF = spark.\n-    read.\n-    format(\"org.apache.hudi\").\n-    load(basePath + \"/*/*/*/*\")\n+  read.\n+  format(\"hudi\").\n+  load(basePath + \"/*/*/*/*\")\n roAfterDeleteViewDF.registerTempTable(\"hudi_ro_table\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3890d0f5fc45eb1b90c430f97c7d12d935d4282e"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b71f1c737f4bfcfb271976d600cdbf4917031898", "author": {"user": {"login": "lamberken", "name": "lamberken"}}, "url": "https://github.com/apache/hudi/commit/b71f1c737f4bfcfb271976d600cdbf4917031898", "committedDate": "2020-02-05T05:25:11Z", "message": "Unify table name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4200, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}