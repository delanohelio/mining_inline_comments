{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDI4NzMx", "number": 1515, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozNTowMVrODyJwQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxOTozN1rODz3EVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTE1MjAwOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozNTowMVrOGGCF1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjo1NDo0M1rOGIeOHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3ODkwMw==", "bodyText": "Can you please provide specific pointers on how the folder gets removed on GCS? Is it GCS specific?", "url": "https://github.com/apache/hudi/pull/1515#discussion_r408978903", "createdAt": "2020-04-15T16:35:01Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,23 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe29645d312200a4dca8d33e4ba5ec099f7e8f4e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIwODAzMg==", "bodyText": "not sure about it. Did see that folder disappears/reappears sometimes. Can be related to the way GCS connector treats a situation when all the files from the folder are removed.\nOn gcs folders are not real, they are just logical. So, file with name: gs://bucket/folder/file doesn't live in the folder \"folder\", it just has a long \"/\" separated name. I saw some logic in the GCS FS java implementation that creates fake file \"/\" when everything is removed from the logical folder. So, my speculation is that if this call fails or not enabled, that removing all the files from the folder will end up if folder being removed as well.", "url": "https://github.com/apache/hudi/pull/1515#discussion_r409208032", "createdAt": "2020-04-16T00:19:14Z", "author": {"login": "afilipchik"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,23 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3ODkwMw=="}, "originalCommit": {"oid": "fe29645d312200a4dca8d33e4ba5ec099f7e8f4e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5MDE0MA==", "bodyText": "@afilipchik : Can you add the above comment in the Exception code block. Easy to understand the reason for this code. Also, Does this mean, we need to create the \"aux\" folder next time we create a file under aux ?", "url": "https://github.com/apache/hudi/pull/1515#discussion_r411490140", "createdAt": "2020-04-20T15:51:22Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,23 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3ODkwMw=="}, "originalCommit": {"oid": "fe29645d312200a4dca8d33e4ba5ec099f7e8f4e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUzNjkyNA==", "bodyText": "Will add comment. On create folder -> no, as GCS will create \"folder\" automatically.", "url": "https://github.com/apache/hudi/pull/1515#discussion_r411536924", "createdAt": "2020-04-20T16:54:43Z", "author": {"login": "afilipchik"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,23 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3ODkwMw=="}, "originalCommit": {"oid": "fe29645d312200a4dca8d33e4ba5ec099f7e8f4e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzA2MTk3OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxOTozN1rOGIhltw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMzo1NzoxOFrOGJdXwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MjExOQ==", "bodyText": "Guess it would be better to use multi line comments here like\n/*\n*\n*/", "url": "https://github.com/apache/hudi/pull/1515#discussion_r411592119", "createdAt": "2020-04-20T18:19:37Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,29 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {\n+      // On some FSs deletion of all files in the directory can auto remove the directory itself.\n+      // GCS is one example, as it doesn't have real directories and subdirectories. When client\n+      // removes all the files from a \"folder\" on GCS is has to create a special \"/\" to keep the folder\n+      // around. If this doesn't happen (timeout, misconfigured client, ...) folder will be deleted and\n+      // in this case we should not break when aux folder is not found.\n+      // GCS information: (https://cloud.google.com/storage/docs/gsutil/addlhelp/HowSubdirectoriesWork)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa7850d7e3d3398205e41dfd0c1a1569449daee1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU3MTU4NA==", "bodyText": "updated", "url": "https://github.com/apache/hudi/pull/1515#discussion_r412571584", "createdAt": "2020-04-21T23:57:18Z", "author": {"login": "afilipchik"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/HoodieCommitArchiveLog.java", "diffHunk": "@@ -219,14 +220,29 @@ private boolean deleteArchivedInstants(List<HoodieInstant> archivedInstants) thr\n    * @throws IOException in case of error\n    */\n   private boolean deleteAllInstantsOlderorEqualsInAuxMetaFolder(HoodieInstant thresholdInstant) throws IOException {\n-    List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(\n-        new Path(metaClient.getMetaAuxiliaryPath()), HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE, false);\n+    List<HoodieInstant> instants = null;\n+    boolean success = true;\n+    try {\n+      instants =\n+          metaClient.scanHoodieInstantsFromFileSystem(\n+              new Path(metaClient.getMetaAuxiliaryPath()),\n+              HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,\n+              false);\n+    } catch (FileNotFoundException e) {\n+      // On some FSs deletion of all files in the directory can auto remove the directory itself.\n+      // GCS is one example, as it doesn't have real directories and subdirectories. When client\n+      // removes all the files from a \"folder\" on GCS is has to create a special \"/\" to keep the folder\n+      // around. If this doesn't happen (timeout, misconfigured client, ...) folder will be deleted and\n+      // in this case we should not break when aux folder is not found.\n+      // GCS information: (https://cloud.google.com/storage/docs/gsutil/addlhelp/HowSubdirectoriesWork)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MjExOQ=="}, "originalCommit": {"oid": "aa7850d7e3d3398205e41dfd0c1a1569449daee1"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4772, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}