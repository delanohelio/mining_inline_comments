{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzIzMjY2", "number": 1987, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODo1OToxNVrOEaHDdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTowNjo0OVrOEaHNLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODE0MDA3OnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODo1OToxNVrOHDVGVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMDoxNzoyM1rOHDXjrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg==", "bodyText": "let's make these transient and lazily init this as needed.\nprivate void initIfNeeded() {\n  if (inputFormatter != null) {\n   this.inputFormatter = parser.getInputFormatter();\n   this.partitionFormatter = DateTimeFormat.forPattern(outputDateFormat);\n  }\n}", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473253462", "createdAt": "2020-08-19T18:59:15Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzY4NA==", "bodyText": "let's move any other per record allocation here.", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473253684", "createdAt": "2020-08-19T18:59:38Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4MjYyMQ==", "bodyText": "I did not get this check, if (inputFormatter != null) then why are we re-initialising? Ok, you mean to say the variable will be marked transient and will still get initialised in constructor? initIfNeeded() gets called from getPartitionPath() then? Please help me understand. @vinothchandar", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473282621", "createdAt": "2020-08-19T19:55:31Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4OTc0Mg==", "bodyText": "@pratyakshsharma  InitIfNeeded() should be called from getPartitionPath that way for each getPartitionPath() call we dont create DateTimeFormatter objects. And initIfNeeded() should check for if (inputFormatter == null) {. The variables will be marked transient and dont get initialized in the constructor.", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473289742", "createdAt": "2020-08-19T20:09:36Z", "author": {"login": "bhasudha"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI5Mzc0Mg==", "bodyText": "ok, I was thinking on similar lines but got confused by that if condition. Let me do the changes. :) Thank you for the clarification.", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473293742", "createdAt": "2020-08-19T20:17:23Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/TimestampBasedKeyGenerator.java", "diffHunk": "@@ -153,7 +147,8 @@ public String getPartitionPath(GenericRecord record) {\n    * @return the parsed partition path based on data type\n    * @throws ParseException on any parse exception\n    */\n-  private String getPartitionPath(Object partitionVal) throws ParseException {\n+  private String getPartitionPath(Object partitionVal) {\n+    DateTimeFormatter inputFormatter = parser.getInputFormatter();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1MzQ2Mg=="}, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODE2NDk0OnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParserImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTowNjo0OVrOHDVVwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOTo1NTo1M1rOHDW48A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1NzQwOQ==", "bodyText": "throw an exception?  returning null is like playing with fire :)", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473257409", "createdAt": "2020-08-19T19:06:49Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParserImpl.java", "diffHunk": "@@ -95,7 +86,15 @@ public String getOutputDateFormat() {\n \n   @Override\n   public DateTimeFormatter getInputFormatter() {\n-    return this.inputFormatter;\n+    TimestampType timestampType = TimestampType.valueOf(config.getString(Config.TIMESTAMP_TYPE_FIELD_PROP));\n+    if (timestampType == TimestampType.DATE_STRING || timestampType == TimestampType.MIXED) {\n+      DataSourceUtils.checkRequiredProperties(config,\n+          Collections.singletonList(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP));\n+      this.configInputDateFormatList = config.getString(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP, \"\");\n+      return getInputDateFormatter();\n+    }\n+\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4MjgwMA==", "bodyText": "Taken care of this :)", "url": "https://github.com/apache/hudi/pull/1987#discussion_r473282800", "createdAt": "2020-08-19T19:55:53Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/parser/HoodieDateTimeParserImpl.java", "diffHunk": "@@ -95,7 +86,15 @@ public String getOutputDateFormat() {\n \n   @Override\n   public DateTimeFormatter getInputFormatter() {\n-    return this.inputFormatter;\n+    TimestampType timestampType = TimestampType.valueOf(config.getString(Config.TIMESTAMP_TYPE_FIELD_PROP));\n+    if (timestampType == TimestampType.DATE_STRING || timestampType == TimestampType.MIXED) {\n+      DataSourceUtils.checkRequiredProperties(config,\n+          Collections.singletonList(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP));\n+      this.configInputDateFormatList = config.getString(Config.TIMESTAMP_INPUT_DATE_FORMAT_PROP, \"\");\n+      return getInputDateFormatter();\n+    }\n+\n+    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI1NzQwOQ=="}, "originalCommit": {"oid": "62bfa3460fa72543ffcf943e594130ab9cb4294e"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4439, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}