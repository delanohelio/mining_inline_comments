{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNjMzOTAw", "number": 1589, "title": "[HUDI-813] Migrate hudi-utilities tests to JUnit 5", "bodyText": "Migrate the test cases in hudi-utilities to JUnit 5.\nFollows #1570\nMigration status (after merging)\n\n\n\nPackage\nJUnit 5 lib\nAPI migration\nRestructure packages\n\n\n\n\nhudi-cli\n\u2705\n\u2705\n-\n\n\nhudi-client\n\u2705\n\u2705\n-\n\n\nhudi-common\n\u2705\n\ud83d\udea7\n\ud83d\udea7\n\n\nhudi-hadoop-mr\n\u2705\n\u2705\n-\n\n\nhudi-hive-sync\n\u2705\n\u2705\n-\n\n\nhudi-integ-test\n\u2705\n\u2705\nN.A.\n\n\nhudi-spark\n\u2705\n\u2705\n-\n\n\nhudi-timeline-service\n\u2705\n\u2705\n-\n\n\nhudi-utilities\n\u2705\n\u2705\n-\n\n\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-05-03T17:07:02Z", "url": "https://github.com/apache/hudi/pull/1589", "merged": true, "mergeCommit": {"oid": "096f7f55b2553265c0b72f42a1eb7f291e5626ad"}, "closed": true, "closedAt": "2020-05-04T04:43:43Z", "author": {"login": "xushiyan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcduTYGgH2gAyNDEyNjMzOTAwOmQ3MWQzMTg0MTk3NDU0MWVmOGQwNDU0MmJiOWVhN2U3MTFkODIwZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd3_BVAFqTQwNDcwNjc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d71d31841974541ef8d04542bb9ea7e711d820f4", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/d71d31841974541ef8d04542bb9ea7e711d820f4", "committedDate": "2020-05-03T17:26:41Z", "message": "[HUDI-813] Migrate hudi-utilities tests to JUnit 5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d71d31841974541ef8d04542bb9ea7e711d820f4", "author": {"user": {"login": "xushiyan", "name": "Raymond Xu"}}, "url": "https://github.com/apache/hudi/commit/d71d31841974541ef8d04542bb9ea7e711d820f4", "committedDate": "2020-05-03T17:26:41Z", "message": "[HUDI-813] Migrate hudi-utilities tests to JUnit 5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjM4NjU2", "url": "https://github.com/apache/hudi/pull/1589#pullrequestreview-404638656", "createdAt": "2020-05-03T17:09:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzowOTo0MlrOGPtx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxNzoxMzo0OFrOGPtzwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzMTg5Ng==", "bodyText": "e.getMessage() will be included in message printed by assertDoesNotThrow() hence no need to concat it manually.", "url": "https://github.com/apache/hudi/pull/1589#discussion_r419131896", "createdAt": "2020-05-03T17:09:42Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHiveIncrementalPuller.java", "diffHunk": "@@ -18,27 +18,26 @@\n \n package org.apache.hudi.utilities;\n \n-import org.junit.Assert;\n-import org.junit.Before;\n-import org.junit.Test;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n \n public class TestHiveIncrementalPuller {\n \n   private HiveIncrementalPuller.Config config;\n \n-  @Before\n+  @BeforeEach\n   public void setup() {\n     config = new HiveIncrementalPuller.Config();\n   }\n \n   @Test\n   public void testInitHiveIncrementalPuller() {\n \n-    try {\n+    assertDoesNotThrow(() -> {\n       new HiveIncrementalPuller(config);\n-    } catch (Exception e) {\n-      Assert.fail(\"Unexpected exception while initing HiveIncrementalPuller, msg: \" + e.getMessage());\n-    }\n+    }, \"Unexpected exception while initing HiveIncrementalPuller.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzMjM1Mg==", "bodyText": "Changing log level from error to debug. It is a good practice to not print anything unless test case failed thus we tend to mute the output here when it's passing. Same to other similar changes below.", "url": "https://github.com/apache/hudi/pull/1589#discussion_r419132352", "createdAt": "2020-05-03T17:13:48Z", "author": {"login": "xushiyan"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/TestHoodieDeltaStreamer.java", "diffHunk": "@@ -413,37 +412,33 @@ public void testKafkaConnectCheckpointProvider() throws IOException {\n     HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n     Helpers.saveParquetToDFS(Helpers.toGenericRecords(dataGenerator.generateInserts(\"000\", 100)), new Path(filePath));\n     HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(cfg, jsc, dfs, hdfsTestService.getHadoopConf(), props);\n-    assertEquals(deltaStreamer.getConfig().checkpoint, \"kafka_topic1,0:200\");\n+    assertEquals(\"kafka_topic1,0:200\", deltaStreamer.getConfig().checkpoint);\n   }\n \n   @Test\n   public void testPropsWithInvalidKeyGenerator() throws Exception {\n-    try {\n+    Exception e = assertThrows(IOException.class, () -> {\n       String tableBasePath = dfsBasePath + \"/test_table\";\n       HoodieDeltaStreamer deltaStreamer =\n           new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath, Operation.BULK_INSERT,\n               Collections.singletonList(TripsWithDistanceTransformer.class.getName()), PROPS_FILENAME_TEST_INVALID, false), jsc);\n       deltaStreamer.sync();\n-      fail(\"Should error out when setting the key generator class property to an invalid value\");\n-    } catch (IOException e) {\n-      // expected\n-      LOG.error(\"Expected error during getting the key generator\", e);\n-      assertTrue(e.getMessage().contains(\"Could not load key generator class\"));\n-    }\n+    }, \"Should error out when setting the key generator class property to an invalid value\");\n+    // expected\n+    LOG.debug(\"Expected error during getting the key generator\", e);\n+    assertTrue(e.getMessage().contains(\"Could not load key generator class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzA2NzYy", "url": "https://github.com/apache/hudi/pull/1589#pullrequestreview-404706762", "createdAt": "2020-05-04T04:43:30Z", "commit": {"oid": "d71d31841974541ef8d04542bb9ea7e711d820f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3071, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}