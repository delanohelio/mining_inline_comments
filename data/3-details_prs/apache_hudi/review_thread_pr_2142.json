{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzY5MzM5", "number": 2142, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzozODoxNlrOEqIaZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo0NDoyNFrOEqIb3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzNDc5OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/AbstractHoodieClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzozODoxNlrOHcK6GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMTo1ODoyNVrOHcZyPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMDg4OA==", "bodyText": "nit: avoid the extra int variable?", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499300888", "createdAt": "2020-10-04T23:38:16Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/AbstractHoodieClient.java", "diffHunk": "@@ -102,7 +102,8 @@ private synchronized void startEmbeddedServerView() {\n         // Run Embedded Timeline Server\n         LOG.info(\"Starting Timeline service !!\");\n         Option<String> hostAddr = context.getProperty(EngineProperty.EMBEDDED_SERVER_HOST);\n-        timelineServer = Option.of(new EmbeddedTimelineService(context, hostAddr.orElse(null),\n+        int embeddedTimelineServerPort = config.getEmbeddedTimelineServerPort();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0NDYzOQ==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499544639", "createdAt": "2020-10-05T11:58:25Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/AbstractHoodieClient.java", "diffHunk": "@@ -102,7 +102,8 @@ private synchronized void startEmbeddedServerView() {\n         // Run Embedded Timeline Server\n         LOG.info(\"Starting Timeline service !!\");\n         Option<String> hostAddr = context.getProperty(EngineProperty.EMBEDDED_SERVER_HOST);\n-        timelineServer = Option.of(new EmbeddedTimelineService(context, hostAddr.orElse(null),\n+        int embeddedTimelineServerPort = config.getEmbeddedTimelineServerPort();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMDg4OA=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzNTQ5OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/embedded/EmbeddedTimelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzozOToyM1rOHcK6dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMTo1OToxMVrOHcZz-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMDk4MQ==", "bodyText": "rename: preferredPort", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499300981", "createdAt": "2020-10-04T23:39:23Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/embedded/EmbeddedTimelineService.java", "diffHunk": "@@ -39,17 +39,19 @@\n   private static final Logger LOG = LogManager.getLogger(EmbeddedTimelineService.class);\n \n   private int serverPort;\n+  private int userConfigPort;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0NTA4Mg==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499545082", "createdAt": "2020-10-05T11:59:11Z", "author": {"login": "lw309637554"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/client/embedded/EmbeddedTimelineService.java", "diffHunk": "@@ -39,17 +39,19 @@\n   private static final Logger LOG = LogManager.getLogger(EmbeddedTimelineService.class);\n \n   private int serverPort;\n+  private int userConfigPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMDk4MQ=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzNjI4OnYy", "diffSide": "RIGHT", "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo0MDozNVrOHcK61A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjowODo1M1rOHcaGjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTA3Ng==", "bodyText": "pull into static final variable?", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499301076", "createdAt": "2020-10-04T23:40:35Z", "author": {"login": "vinothchandar"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTMwOQ==", "bodyText": "you also probably want to add a small wait between attempts?", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499301309", "createdAt": "2020-10-04T23:43:24Z", "author": {"login": "vinothchandar"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTA3Ng=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0ODY2Mw==", "bodyText": "pull into static final variable?\n\ndone", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499548663", "createdAt": "2020-10-05T12:06:24Z", "author": {"login": "lw309637554"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTA3Ng=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0OTgzNg==", "bodyText": "you also probably want to add a small wait between attempts?\n\ni think not need to add a small wait between attempts. because in most cases will retry when port is already in use, a attempt will change to new port .", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499549836", "createdAt": "2020-10-05T12:08:53Z", "author": {"login": "lw309637554"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTA3Ng=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzNzE0OnYy", "diffSide": "RIGHT", "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo0MTo0N1rOHcK7SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjowOTowMlrOHcaGzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTE5Mw==", "bodyText": "rename: offset -> attempt?", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499301193", "createdAt": "2020-10-04T23:41:47Z", "author": {"login": "vinothchandar"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU0OTkwMQ==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499549901", "createdAt": "2020-10-05T12:09:02Z", "author": {"login": "lw309637554"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTE5Mw=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzNzYxOnYy", "diffSide": "RIGHT", "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo0MjozOVrOHcK7iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjowOToxOFrOHcaHWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTI1Nw==", "bodyText": "what are we trying to do in the : else part? a line of comment could help", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499301257", "createdAt": "2020-10-04T23:42:39Z", "author": {"login": "vinothchandar"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {\n+      int tryPort = port == 0 ? port : (port + offset - 1024) % (65536 - 1024) + 1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1MDA0MQ==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499550041", "createdAt": "2020-10-05T12:09:18Z", "author": {"login": "lw309637554"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {\n+      int tryPort = port == 0 ? port : (port + offset - 1024) % (65536 - 1024) + 1024;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTI1Nw=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjEzODU0OnYy", "diffSide": "RIGHT", "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo0NDoyNFrOHcK8BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjowOToyMlrOHcaHgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTM4MQ==", "bodyText": "nit: %d times", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499301381", "createdAt": "2020-10-04T23:44:24Z", "author": {"login": "vinothchandar"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {\n+      int tryPort = port == 0 ? port : (port + offset - 1024) % (65536 - 1024) + 1024;\n+      try {\n+        app.start(tryPort);\n+        return app.port();\n+      } catch (Exception e) {\n+        if (e.getMessage() != null && e.getMessage().contains(\"Failed to bind to\")) {\n+          if (tryPort == 0) {\n+            LOG.warn(\"Timeline server could not bind on a random free port.\");\n+          } else {\n+            LOG.warn(String.format(\"Timeline server could not bind on port %d. \"\n+                + \"Attempting port %d + 1.\",tryPort, tryPort));\n+          }\n+        } else {\n+          LOG.warn(String.format(\"Timeline server start failed on port %d. Attempting port %d + 1.\",tryPort, tryPort), e);\n+        }\n+      }\n+    }\n+    throw new IOException(String.format(\"Timeline server start failed on port %d, after retry %d time\", port, maxRetries));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1MDA4MQ==", "bodyText": "done", "url": "https://github.com/apache/hudi/pull/2142#discussion_r499550081", "createdAt": "2020-10-05T12:09:22Z", "author": {"login": "lw309637554"}, "path": "hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/TimelineService.java", "diffHunk": "@@ -98,16 +98,42 @@ public TimelineService(Config config) throws IOException {\n     public Boolean help = false;\n   }\n \n+  private int startServiceOnPort(int port) throws IOException {\n+    if (!(port == 0 || (1024 <= port && port < 65536))) {\n+      throw new IllegalArgumentException(String.format(\"startPort should be between 1024 and 65535 (inclusive), \"\n+          + \"or 0 for a random free port. but now is %s.\", port));\n+    }\n+    int maxRetries = 16;\n+    for (int offset = 0; offset < maxRetries; offset++) {\n+      int tryPort = port == 0 ? port : (port + offset - 1024) % (65536 - 1024) + 1024;\n+      try {\n+        app.start(tryPort);\n+        return app.port();\n+      } catch (Exception e) {\n+        if (e.getMessage() != null && e.getMessage().contains(\"Failed to bind to\")) {\n+          if (tryPort == 0) {\n+            LOG.warn(\"Timeline server could not bind on a random free port.\");\n+          } else {\n+            LOG.warn(String.format(\"Timeline server could not bind on port %d. \"\n+                + \"Attempting port %d + 1.\",tryPort, tryPort));\n+          }\n+        } else {\n+          LOG.warn(String.format(\"Timeline server start failed on port %d. Attempting port %d + 1.\",tryPort, tryPort), e);\n+        }\n+      }\n+    }\n+    throw new IOException(String.format(\"Timeline server start failed on port %d, after retry %d time\", port, maxRetries));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMTM4MQ=="}, "originalCommit": {"oid": "cf745430a882774b1cdd714bd0eaf99bc0ddd094"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4320, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}