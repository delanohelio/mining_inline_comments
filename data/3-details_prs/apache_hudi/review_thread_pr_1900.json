{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxNjY1MjM4", "number": 1900, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozODo1NFrOEUb0oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMTo1OVrOEdLM1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYyODE3OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/BulkInsertNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozODo1NFrOG6pI2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozODo1NFrOG6pI2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDYwMg==", "bodyText": "bulkInsert Node -> bulk insert node?", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144602", "createdAt": "2020-08-03T00:38:54Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/BulkInsertNode.java", "diffHunk": "@@ -24,6 +24,9 @@\n import org.apache.hudi.integ.testsuite.configuration.DeltaConfig.Config;\n import org.apache.spark.api.java.JavaRDD;\n \n+/**\n+ * Represents a bulkInsert Node in the DAG of operations for a workflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYyODUwOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CleanNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTowOVrOG6pJBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTowOVrOG6pJBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDY0Ng==", "bodyText": "Node -> node?", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144646", "createdAt": "2020-08-03T00:39:09Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CleanNode.java", "diffHunk": "@@ -20,6 +20,9 @@\n \n import org.apache.hudi.integ.testsuite.dag.ExecutionContext;\n \n+/**\n+ * Represents a clean Node in the DAG of operations for a workflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYyODkzOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTozM1rOG6pJQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTozM1rOG6pJQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDcwNg==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144706", "createdAt": "2020-08-03T00:39:33Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java", "diffHunk": "@@ -26,6 +26,9 @@\n import org.apache.hudi.integ.testsuite.dag.ExecutionContext;\n import org.apache.spark.api.java.JavaRDD;\n \n+/**\n+ * Represents a compact Node in the DAG of operations for a workflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYyOTE1OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/HiveQueryNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTo0N1rOG6pJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDozOTo0N1rOG6pJXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDczNQ==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144735", "createdAt": "2020-08-03T00:39:47Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/HiveQueryNode.java", "diffHunk": "@@ -30,6 +30,9 @@\n import org.apache.hudi.integ.testsuite.dag.ExecutionContext;\n import org.apache.hudi.integ.testsuite.helpers.HiveServiceProvider;\n \n+/**\n+ * Represents a hive query Node in the DAG of operations for a workflow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYzMDIyOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDo0MDo1MVrOG6pJ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDo0MDo1MVrOG6pJ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDg3OA==", "bodyText": "DagScheduler  -> DAG scheduler", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144878", "createdAt": "2020-08-03T00:40:51Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -37,6 +37,9 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+/**\n+ * The DagScheduler schedules the workflowDag.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5ODYzMDgwOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMDo0MTozMFrOG6pKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTo1MDo0MVrOG9NVOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDk0Nw==", "bodyText": "workflowDags  -> workflow DAGs", "url": "https://github.com/apache/hudi/pull/1900#discussion_r464144947", "createdAt": "2020-08-03T00:41:30Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -48,6 +51,11 @@ public DagScheduler(WorkflowDag workflowDag, HoodieTestSuiteWriter hoodieTestSui\n     this.executionContext = new ExecutionContext(null, hoodieTestSuiteWriter, deltaGenerator);\n   }\n \n+  /**\n+   * Method to start execute workflowDags.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNDc0NQ==", "bodyText": "execute -> executing.", "url": "https://github.com/apache/hudi/pull/1900#discussion_r466834745", "createdAt": "2020-08-07T05:50:41Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/scheduler/DagScheduler.java", "diffHunk": "@@ -48,6 +51,11 @@ public DagScheduler(WorkflowDag workflowDag, HoodieTestSuiteWriter hoodieTestSui\n     this.executionContext = new ExecutionContext(null, hoodieTestSuiteWriter, deltaGenerator);\n   }\n \n+  /**\n+   * Method to start execute workflowDags.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE0NDk0Nw=="}, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTk1MzYwOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/DagNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTo0OTowOVrOG9NTZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTo0OTowOVrOG9NTZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNDI3OA==", "bodyText": "execute -> execution", "url": "https://github.com/apache/hudi/pull/1900#discussion_r466834278", "createdAt": "2020-08-07T05:49:09Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/DagNode.java", "diffHunk": "@@ -76,6 +76,12 @@ public void setParentNodes(List<DagNode<O>> parentNodes) {\n     this.parentNodes = parentNodes;\n   }\n \n+  /**\n+   * Execute the {@link DagNode}.\n+   *\n+   * @param context The context needed for an execute of a node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTk1NDE0OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/DagNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTo0OToyOVrOG9NTwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTo0OToyOVrOG9NTwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzNDM3MA==", "bodyText": "Execution -> execution.", "url": "https://github.com/apache/hudi/pull/1900#discussion_r466834370", "createdAt": "2020-08-07T05:49:29Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/DagNode.java", "diffHunk": "@@ -76,6 +76,12 @@ public void setParentNodes(List<DagNode<O>> parentNodes) {\n     this.parentNodes = parentNodes;\n   }\n \n+  /**\n+   * Execute the {@link DagNode}.\n+   *\n+   * @param context The context needed for an execute of a node.\n+   * @throws Exception Thrown if the Execution failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fd433a8937404b19696427ba5e9d88e56dfbdaf"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2NDM0OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DeltaConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODowNlrOHILnmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODowNlrOHILnmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTAxOQ==", "bodyText": "IMO, we do not need this comment.", "url": "https://github.com/apache/hudi/pull/1900#discussion_r478341019", "createdAt": "2020-08-27T11:18:06Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DeltaConfig.java", "diffHunk": "@@ -35,7 +35,13 @@\n  */\n public class DeltaConfig implements Serializable {\n \n+  /**\n+   * Output destination type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ded66530fc1cdbfe135de8542d39c0076296953"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI2NDY5OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DeltaConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODoxNFrOHILn0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToxODoxNFrOHILn0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MTA3Mw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1900#discussion_r478341073", "createdAt": "2020-08-27T11:18:14Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DeltaConfig.java", "diffHunk": "@@ -35,7 +35,13 @@\n  */\n public class DeltaConfig implements Serializable {\n \n+  /**\n+   * Output destination type.\n+   */\n   private final DeltaOutputMode deltaOutputMode;\n+  /**\n+   * Input data type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ded66530fc1cdbfe135de8542d39c0076296953"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI3NDg1OnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMToyOFrOHILt_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMToyOFrOHILt_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MjY1NQ==", "bodyText": "we may not change this.", "url": "https://github.com/apache/hudi/pull/1900#discussion_r478342655", "createdAt": "2020-08-27T11:21:28Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "diffHunk": "@@ -43,22 +44,39 @@\n  */\n public class GenericRecordFullPayloadGenerator implements Serializable {\n \n-  public static final int DEFAULT_PAYLOAD_SIZE = 1024 * 10; // 10 KB\n+  /**\n+   * 10 KB.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ded66530fc1cdbfe135de8542d39c0076296953"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDI3NjcwOnYy", "diffSide": "RIGHT", "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMToyMTo1OVrOHILvEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzozNDo1M1rOHIQo1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MjkyOQ==", "bodyText": "Why we should change these comment styles for fields?", "url": "https://github.com/apache/hudi/pull/1900#discussion_r478342929", "createdAt": "2020-08-27T11:21:59Z", "author": {"login": "yanghua"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "diffHunk": "@@ -43,22 +44,39 @@\n  */\n public class GenericRecordFullPayloadGenerator implements Serializable {\n \n-  public static final int DEFAULT_PAYLOAD_SIZE = 1024 * 10; // 10 KB\n+  /**\n+   * 10 KB.\n+   */\n+  public static final int DEFAULT_PAYLOAD_SIZE = 1024 * 10;\n   private static Logger log = LoggerFactory.getLogger(GenericRecordFullPayloadGenerator.class);\n   protected final Random random = new Random();\n-  // The source schema used to generate a payload\n+  /**\n+   * The source schema used to generate a payload.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ded66530fc1cdbfe135de8542d39c0076296953"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQyMzI1NQ==", "bodyText": "Why we should change these comment styles for fields?\n\nmy bad,  that`s the coding guidelines of Alibaba.\nrolled back already :)", "url": "https://github.com/apache/hudi/pull/1900#discussion_r478423255", "createdAt": "2020-08-27T13:34:53Z", "author": {"login": "wangxianghu"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "diffHunk": "@@ -43,22 +44,39 @@\n  */\n public class GenericRecordFullPayloadGenerator implements Serializable {\n \n-  public static final int DEFAULT_PAYLOAD_SIZE = 1024 * 10; // 10 KB\n+  /**\n+   * 10 KB.\n+   */\n+  public static final int DEFAULT_PAYLOAD_SIZE = 1024 * 10;\n   private static Logger log = LoggerFactory.getLogger(GenericRecordFullPayloadGenerator.class);\n   protected final Random random = new Random();\n-  // The source schema used to generate a payload\n+  /**\n+   * The source schema used to generate a payload.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM0MjkyOQ=="}, "originalCommit": {"oid": "7ded66530fc1cdbfe135de8542d39c0076296953"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4385, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}