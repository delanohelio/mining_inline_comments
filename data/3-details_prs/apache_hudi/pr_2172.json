{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMTQzODkx", "number": 2172, "title": "[HUDI-1338] Adding Delete support to test suite framework", "bodyText": "What is the purpose of the pull request\nAdding Delete support to test suite framework\nBrief change log\n\nAdding DeleteNode to assist in issuing deletes to hudi in integ test suite framework\n\nVerify this pull request\nTested using docker set up using complex-dag-cow.yaml\nCommitter checklist\n\n\n[ x] Has a corresponding JIRA in PR title & commit\n\n\n[ x] Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-10-11T14:12:12Z", "url": "https://github.com/apache/hudi/pull/2172", "merged": true, "mergeCommit": {"oid": "a205dd10faba0a83dcb39a12abb6f744b5224992"}, "closed": true, "closedAt": "2020-11-01T04:15:42Z", "author": {"login": "nsivabalan"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRgBo5ABqjM4NjM3MjE1ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXrM_YABqjM5NDI2MTg1Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d674228066348fa0b9a3b29f59d85d986c59a27", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/2d674228066348fa0b9a3b29f59d85d986c59a27", "committedDate": "2020-10-11T14:06:27Z", "message": "Adding Delete support to test suite"}, "afterCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/8832628562139b75906c9cff38edecac215b1669", "committedDate": "2020-10-11T14:12:29Z", "message": "Adding Delete support to test suite"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU0NjY0", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516454664", "createdAt": "2020-10-26T03:53:12Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1MzoxMlrOHoAJWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1MzoxMlrOHoAJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzQ4Mw==", "bodyText": "Is this prod needed ? Also the naming should start from prop1 ?", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511707483", "createdAt": "2020-10-26T03:53:12Z", "author": {"login": "n3nash"}, "path": "docker/demo/config/test-suite/complex-dag-cow.yaml", "diffHunk": "@@ -93,3 +93,50 @@ second_hive_query:\n       result2: 11900\n   type: HiveQueryNode\n   deps: second_upsert\n+fourth_insert:\n+  config:\n+    record_size: 70000\n+    num_insert_partitions: 1\n+    repeat_count: 1\n+    num_records_insert: 1000\n+  deps: second_hive_query\n+  type: InsertNode\n+third_hive_query:\n+  config:\n+    hive_props:\n+      prop2: \"set spark.yarn.queue=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU0NzE2", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516454716", "createdAt": "2020-10-26T03:53:26Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1MzoyNlrOHoAJgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1MzoyNlrOHoAJgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzUyMQ==", "bodyText": "same here", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511707521", "createdAt": "2020-10-26T03:53:26Z", "author": {"login": "n3nash"}, "path": "docker/demo/config/test-suite/complex-dag-cow.yaml", "diffHunk": "@@ -93,3 +93,50 @@ second_hive_query:\n       result2: 11900\n   type: HiveQueryNode\n   deps: second_upsert\n+fourth_insert:\n+  config:\n+    record_size: 70000\n+    num_insert_partitions: 1\n+    repeat_count: 1\n+    num_records_insert: 1000\n+  deps: second_hive_query\n+  type: InsertNode\n+third_hive_query:\n+  config:\n+    hive_props:\n+      prop2: \"set spark.yarn.queue=\"\n+      prop3: \"set hive.strict.checks.large.query=false\"\n+      prop4: \"set hive.stats.autogather=false\"\n+    hive_queries:\n+      query1: \"select count(*) from testdb.table1 group by `_row_key` having count(*) > 1\"\n+      result1: 0\n+      query2: \"select count(*) from testdb.table1\"\n+      result2: 12900\n+  type: HiveQueryNode\n+  deps: fourth_insert\n+first_delete:\n+  config:\n+    record_size: 70000\n+    num_partitions_delete: 1\n+    num_records_delete: 200\n+  deps: third_hive_query\n+  type: DeleteNode\n+fourth_hive_sync:\n+  config:\n+    queue_name: \"adhoc\"\n+    engine: \"mr\"\n+  type: HiveSyncNode\n+  deps: first_delete\n+fourth_hive_query:\n+  config:\n+    hive_props:\n+      prop2: \"set spark.yarn.queue=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU0ODUx", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516454851", "createdAt": "2020-10-26T03:54:10Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NDoxMFrOHoAJ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NDoxMFrOHoAJ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzYzMw==", "bodyText": "What does default value \"1\" mean in this case ?", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511707633", "createdAt": "2020-10-26T03:54:10Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/configuration/DeltaConfig.java", "diffHunk": "@@ -118,6 +125,10 @@ public int getNumUpsertPartitions() {\n       return Integer.valueOf(configsMap.getOrDefault(NUM_PARTITIONS_UPSERT, 0).toString());\n     }\n \n+    public int getNumDeletePartitions() {\n+      return Integer.valueOf(configsMap.getOrDefault(NUM_PARTITIONS_DELETE, 1).toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU1MDIz", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516455023", "createdAt": "2020-10-26T03:55:00Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NTowMFrOHoAKhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NTowMFrOHoAKhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzc4Mg==", "bodyText": "Nit: revert whitespace changes", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511707782", "createdAt": "2020-10-26T03:55:00Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/UpsertNode.java", "diffHunk": "@@ -23,6 +23,7 @@\n import org.apache.hudi.integ.testsuite.HoodieTestSuiteWriter;\n import org.apache.hudi.integ.testsuite.configuration.DeltaConfig.Config;\n import org.apache.hudi.integ.testsuite.generator.DeltaGenerator;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU1NjEz", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516455613", "createdAt": "2020-10-26T03:57:51Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1Nzo1MlrOHoAMwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1Nzo1MlrOHoAMwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwODM1NA==", "bodyText": "Should this be renamed from adjustedRDD to something else ?", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511708354", "createdAt": "2020-10-26T03:57:52Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/DeltaGenerator.java", "diffHunk": "@@ -155,6 +156,42 @@ public DeltaGenerator(DeltaConfig deltaOutputConfig, JavaSparkContext jsc, Spark\n     }\n   }\n \n+  public JavaRDD<GenericRecord> generateDeletes(Config config) throws IOException {\n+    if (deltaOutputConfig.getDeltaOutputMode() == DeltaOutputMode.DFS) {\n+      DeltaInputReader deltaInputReader = null;\n+      JavaRDD<GenericRecord> adjustedRDD = null;\n+\n+      if (config.getNumDeletePartitions() < 1) {\n+        // randomly generate deletes for a given number of records without regard to partitions and files\n+        deltaInputReader = new DFSAvroDeltaInputReader(sparkSession, schemaStr,\n+            ((DFSDeltaConfig) deltaOutputConfig).getDeltaBasePath(), Option.empty(), Option.empty());\n+        adjustedRDD = deltaInputReader.read(config.getNumRecordsDelete());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU2Mjcy", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516456272", "createdAt": "2020-10-26T04:00:51Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDowMDo1MlrOHoAO8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDowMDo1MlrOHoAO8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwODkxNA==", "bodyText": "Make this an inline else-if ?", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511708914", "createdAt": "2020-10-26T04:00:52Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java", "diffHunk": "@@ -130,43 +132,60 @@ public GenericRecord getUpdatePayload(GenericRecord record, List<String> blackli\n   }\n \n   /**\n-   * Create a new {@link GenericRecord} with random values. Not all the fields have value, it is random, and its value\n-   * is random too.\n+   * Create a new {@link GenericRecord} with random values. Not all the fields have value, it is random, and its value is random too.\n    *\n    * @param schema Schema to create with.\n    * @return A {@link GenericRecord} with random value.\n    */\n   protected GenericRecord convertPartial(Schema schema) {\n     GenericRecord result = new GenericData.Record(schema);\n     for (Schema.Field f : schema.getFields()) {\n-      boolean setNull = random.nextBoolean();\n-      if (!setNull) {\n-        result.put(f.name(), typeConvert(f));\n+      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n+        result.put(f.name(), false);\n       } else {\n-        result.put(f.name(), null);\n+        boolean setNull = random.nextBoolean();\n+        if (!setNull) {\n+          result.put(f.name(), typeConvert(f));\n+        } else {\n+          result.put(f.name(), null);\n+        }\n       }\n     }\n     // TODO : pack remaining bytes into a complex field\n     return result;\n   }\n \n   /**\n-   * Set random value to {@link GenericRecord} according to the schema type of field.\n-   * The field in blacklist will not be set.\n+   * Set random value to {@link GenericRecord} according to the schema type of field. The field in blacklist will not be set.\n    *\n-   * @param record          GenericRecord to randomize.\n+   * @param record GenericRecord to randomize.\n    * @param blacklistFields blacklistFields where the filed will not be randomized.\n    * @return Randomized GenericRecord.\n    */\n   protected GenericRecord randomize(GenericRecord record, List<String> blacklistFields) {\n     for (Schema.Field f : record.getSchema().getFields()) {\n-      if (blacklistFields == null || !blacklistFields.contains(f.name())) {\n-        record.put(f.name(), typeConvert(f));\n+      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n+        record.put(f.name(), false);\n+      } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU2NTI2", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516456526", "createdAt": "2020-10-26T04:02:07Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDowMjowN1rOHoAPzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNDowMjowN1rOHoAPzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwOTEzNA==", "bodyText": "Should these be uncommented or removed ?", "url": "https://github.com/apache/hudi/pull/2172#discussion_r511709134", "createdAt": "2020-10-26T04:02:07Z", "author": {"login": "n3nash"}, "path": "hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/writer/DFSDeltaWriterAdapter.java", "diffHunk": "@@ -40,10 +40,12 @@ public DFSDeltaWriterAdapter(DeltaInputWriter<GenericRecord> deltaInputGenerator\n   @Override\n   public List<DeltaWriteStats> write(Iterator<GenericRecord> input) throws IOException {\n     while (input.hasNext()) {\n+      //GenericRecord next = input.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU2Njk2", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-516456696", "createdAt": "2020-10-26T04:02:56Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NzkxMzAz", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-518791303", "createdAt": "2020-10-28T15:28:51Z", "commit": {"oid": "8832628562139b75906c9cff38edecac215b1669"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "977aa79e2a8ab7d733790a7e11a016afdfdab00b", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/977aa79e2a8ab7d733790a7e11a016afdfdab00b", "committedDate": "2020-10-29T03:29:52Z", "message": "Addressing feedback"}, "afterCommit": {"oid": "bede6f88f1964b87a68bf18babb7348d6ba4f614", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/bede6f88f1964b87a68bf18babb7348d6ba4f614", "committedDate": "2020-10-29T03:32:38Z", "message": "Addressing feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Njk0NTc4", "url": "https://github.com/apache/hudi/pull/2172#pullrequestreview-519694578", "createdAt": "2020-10-29T14:00:13Z", "commit": {"oid": "2a6bb5737a7586f965119b7b2dab325bfd13b2ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d59ffd065756417474337ae24d9c4c886b057f9", "author": {"user": {"login": "lamberken", "name": "lamberken"}}, "url": "https://github.com/apache/hudi/commit/9d59ffd065756417474337ae24d9c4c886b057f9", "committedDate": "2020-10-30T13:07:01Z", "message": "trigger rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e5c71d9446a63ec7c354e6f38d9e8df7718d2f", "author": {"user": {"login": "linshan-ma", "name": null}}, "url": "https://github.com/apache/hudi/commit/e7e5c71d9446a63ec7c354e6f38d9e8df7718d2f", "committedDate": "2020-10-30T13:07:01Z", "message": "[HUDI-1156] Remove unused dependencies from HoodieDeltaStreamerWrapper Class (#1927)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86fe78daba7e80e82a0ce0b7af6179ffbb4383ef", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/86fe78daba7e80e82a0ce0b7af6179ffbb4383ef", "committedDate": "2020-10-30T13:17:54Z", "message": "Adding Delete support to test suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc65d9502c6fcba59be7c20e7ac495ea2dcf02dc", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/cc65d9502c6fcba59be7c20e7ac495ea2dcf02dc", "committedDate": "2020-10-30T13:17:59Z", "message": "Addressing feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a6bb5737a7586f965119b7b2dab325bfd13b2ae", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/2a6bb5737a7586f965119b7b2dab325bfd13b2ae", "committedDate": "2020-10-29T04:41:05Z", "message": "Fixing test.properties instructions in README"}, "afterCommit": {"oid": "7b8d2bcfd62a80df39ef84ea8235bc5831781838", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/7b8d2bcfd62a80df39ef84ea8235bc5831781838", "committedDate": "2020-10-30T13:18:29Z", "message": "Fixing test.properties instructions in README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f24856b379b371c882e215c9fabd0992d126652", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/9f24856b379b371c882e215c9fabd0992d126652", "committedDate": "2020-10-30T18:37:22Z", "message": "Fixing test.properties instructions in README"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b8d2bcfd62a80df39ef84ea8235bc5831781838", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/7b8d2bcfd62a80df39ef84ea8235bc5831781838", "committedDate": "2020-10-30T13:18:29Z", "message": "Fixing test.properties instructions in README"}, "afterCommit": {"oid": "9f24856b379b371c882e215c9fabd0992d126652", "author": {"user": {"login": "nsivabalan", "name": "Sivabalan Narayanan"}}, "url": "https://github.com/apache/hudi/commit/9f24856b379b371c882e215c9fabd0992d126652", "committedDate": "2020-10-30T18:37:22Z", "message": "Fixing test.properties instructions in README"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4162, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}