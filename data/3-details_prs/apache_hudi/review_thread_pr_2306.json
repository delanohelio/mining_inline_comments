{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MTUxODYz", "number": 2306, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDo0ODo0M1rOFCQWwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDo0ODo0M1rOFCQWwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTA5NDQxOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/simple/SparkHoodieSimpleIndex.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDo0ODo0M1rOIBTTHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMDo0ODo0M1rOIBTTHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIzNTY3OQ==", "bodyText": "is there a way to do this lazily? convert to a stream and map to tuple and get the underlying iterator?", "url": "https://github.com/apache/hudi/pull/2306#discussion_r538235679", "createdAt": "2020-12-08T10:48:43Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/simple/SparkHoodieSimpleIndex.java", "diffHunk": "@@ -147,6 +150,12 @@ public boolean isImplicitWithStorage() {\n     JavaSparkContext jsc = HoodieSparkEngineContext.getSparkContext(context);\n     int fetchParallelism = Math.max(1, Math.max(baseFiles.size(), parallelism));\n     return jsc.parallelize(baseFiles, fetchParallelism)\n-        .flatMapToPair(partitionPathBaseFile -> new HoodieKeyLocationFetchHandle(config, hoodieTable, partitionPathBaseFile).locations());\n+        .flatMapToPair( partitionPathBaseFile -> {\n+          Iterator<ImmutablePair<HoodieKey, HoodieRecordLocation>> iter =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdb46dfa7708ae410afa3cd97bc204be80af502"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4227, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}