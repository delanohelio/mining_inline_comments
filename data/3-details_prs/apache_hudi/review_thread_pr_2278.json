{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NTI2MDUx", "number": 2278, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTozMDoyNFrOE99kCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Mzo1OFrOFA1Q0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDA3MjQxOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/main/java/org/apache/hudi/common/model/EngineType.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTozMDoyNFrOH67BQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzozOTowNlrOH_EaYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NjQzNQ==", "bodyText": "Can we put this definition into hudi-client-common?", "url": "https://github.com/apache/hudi/pull/2278#discussion_r531546435", "createdAt": "2020-11-27T11:30:24Z", "author": {"login": "yanghua"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/model/EngineType.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.model;\n+\n+/**\n+ * Hoodie data processing engine. support only Apache Spark and Apache Flink for now.\n+ */\n+public enum EngineType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c6d2374dabac1586fc50d56659c36b907735e1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgzMDU2Ng==", "bodyText": "@yanghua EngineType is an attribute of DefaultHoodieConfig, should be place in hudi-common", "url": "https://github.com/apache/hudi/pull/2278#discussion_r531830566", "createdAt": "2020-11-28T03:53:13Z", "author": {"login": "wangxianghu"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/model/EngineType.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.model;\n+\n+/**\n+ * Hoodie data processing engine. support only Apache Spark and Apache Flink for now.\n+ */\n+public enum EngineType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NjQzNQ=="}, "originalCommit": {"oid": "40c6d2374dabac1586fc50d56659c36b907735e1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5NDYyNg==", "bodyText": "Can we put this definition into hudi-client-common?\n\nplease take another look when free", "url": "https://github.com/apache/hudi/pull/2278#discussion_r535894626", "createdAt": "2020-12-04T07:39:06Z", "author": {"login": "wangxianghu"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/model/EngineType.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.model;\n+\n+/**\n+ * Hoodie data processing engine. support only Apache Spark and Apache Flink for now.\n+ */\n+public enum EngineType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NjQzNQ=="}, "originalCommit": {"oid": "40c6d2374dabac1586fc50d56659c36b907735e1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzODUyNzkwOnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieIndexConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMjowNjoyMlrOH7i6_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMjo0NzoyM1rOH7jOIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwMDE5MA==", "bodyText": "Are there other configurations that are different in different engines, and if there are many, are they easy to implement in this way?", "url": "https://github.com/apache/hudi/pull/2278#discussion_r532200190", "createdAt": "2020-11-29T12:06:22Z", "author": {"login": "shenh062326"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieIndexConfig.java", "diffHunk": "@@ -278,5 +299,16 @@ public HoodieIndexConfig build() {\n       HoodieIndex.IndexType.valueOf(props.getProperty(INDEX_TYPE_PROP));\n       return config;\n     }\n+\n+    private String getDefaultIndexType(EngineType engineType) {\n+      switch (engineType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c6d2374dabac1586fc50d56659c36b907735e1"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwNTA4OA==", "bodyText": "Are there other configurations that are different in different engines, and if there are many, are they easy to implement in this way?\n\nCurrently, I recognized this only as I am working on flink index.\nI think it is simple, just add a check step before initialized it.\nthis way should be ok.", "url": "https://github.com/apache/hudi/pull/2278#discussion_r532205088", "createdAt": "2020-11-29T12:47:23Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieIndexConfig.java", "diffHunk": "@@ -278,5 +299,16 @@ public HoodieIndexConfig build() {\n       HoodieIndex.IndexType.valueOf(props.getProperty(INDEX_TYPE_PROP));\n       return config;\n     }\n+\n+    private String getDefaultIndexType(EngineType engineType) {\n+      switch (engineType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIwMDE5MA=="}, "originalCommit": {"oid": "40c6d2374dabac1586fc50d56659c36b907735e1"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDE2OTc5OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Mzo1OFrOH_T7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwNTo1OTo1NlrOH_qv0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE0ODg0NA==", "bodyText": "how about adding a method withEngineType() instead of making it a Builder constructor param?", "url": "https://github.com/apache/hudi/pull/2278#discussion_r536148844", "createdAt": "2020-12-04T14:43:58Z", "author": {"login": "leesf"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -789,6 +809,14 @@ public Long getMaxMemoryPerPartitionMerge() {\n     private boolean isConsistencyGuardSet = false;\n     private boolean isCallbackConfigSet = false;\n \n+    public Builder() {\n+      this(EngineType.SPARK);\n+    }\n+\n+    public Builder(EngineType engineType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d818e49c7f7f47e2655eac69b17594ded5b502"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUyMjcwNw==", "bodyText": "how about adding a method withEngineType() instead of making it a Builder constructor param?\n\ndone", "url": "https://github.com/apache/hudi/pull/2278#discussion_r536522707", "createdAt": "2020-12-05T05:59:56Z", "author": {"login": "wangxianghu"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -789,6 +809,14 @@ public Long getMaxMemoryPerPartitionMerge() {\n     private boolean isConsistencyGuardSet = false;\n     private boolean isCallbackConfigSet = false;\n \n+    public Builder() {\n+      this(EngineType.SPARK);\n+    }\n+\n+    public Builder(EngineType engineType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE0ODg0NA=="}, "originalCommit": {"oid": "f1d818e49c7f7f47e2655eac69b17594ded5b502"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4200, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}