{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1ODAzNDkz", "number": 1612, "title": "[HUDI-528] Handle empty commit in incremental pulling", "bodyText": "What is the purpose of the pull request\nhttps://issues.apache.org/jira/browse/HUDI-528\nBrief change log\n\nAvoid loading empty instant in IncrementalRelation.scala\n\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded an empty data frame test case in TestDataSource\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-05-11T00:09:14Z", "url": "https://github.com/apache/hudi/pull/1612", "merged": true, "mergeCommit": {"oid": "a64afdfd17ac974e451bceb877f3d40a9c775253"}, "closed": true, "closedAt": "2020-05-15T05:55:26Z", "author": {"login": "garyli1019"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgRvNygFqTQwOTMwMDk5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchbl3pgFqTQxMjM2NTIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzAwOTk4", "url": "https://github.com/apache/hudi/pull/1612#pullrequestreview-409300998", "createdAt": "2020-05-11T15:49:16Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0OToxNlrOGTiVMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1MDoxN1rOGTiYCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODYwOQ==", "bodyText": "Original Avro Schema (without hudi fields) is now getting written in commit metadata. Can we try reading it first and fallback to reading from parquet if we cannot find schema in commit metadata ?", "url": "https://github.com/apache/hudi/pull/1612#discussion_r423138609", "createdAt": "2020-05-11T15:49:16Z", "author": {"login": "bvaradar"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -65,15 +65,20 @@ class IncrementalRelation(val sqlContext: SQLContext,\n       s\"option ${DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY}\")\n   }\n \n-  val lastInstant = commitTimeline.lastInstant().get()\n+  private val lastInstant = commitTimeline.getReverseOrderedInstants.iterator().find(instant => {\n+    // Skip empty instants\n+    HoodieCommitMetadata\n+      .fromBytes(commitTimeline.getInstantDetails(instant).get(), classOf[HoodieCommitMetadata])\n+      .fetchTotalRecordsWritten() > 0\n+  }).getOrElse(throw new HoodieException(\"Couldn't find any non empty instant in the hoodie commit timeline.\"))\n \n-  val commitsToReturn = commitTimeline.findInstantsInRange(\n+  private val commitsToReturn = commitTimeline.findInstantsInRange(\n     optParams(DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY),\n     optParams.getOrElse(DataSourceReadOptions.END_INSTANTTIME_OPT_KEY, lastInstant.getTimestamp))\n     .getInstants.iterator().toList\n \n   // use schema from a file produced in the latest instant\n-  val latestSchema = {\n+  private val latestSchema = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzOTMzNw==", "bodyText": "Can we return an empty relation instead of throwing an error here.", "url": "https://github.com/apache/hudi/pull/1612#discussion_r423139337", "createdAt": "2020-05-11T15:50:17Z", "author": {"login": "bvaradar"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/IncrementalRelation.scala", "diffHunk": "@@ -65,15 +65,20 @@ class IncrementalRelation(val sqlContext: SQLContext,\n       s\"option ${DataSourceReadOptions.BEGIN_INSTANTTIME_OPT_KEY}\")\n   }\n \n-  val lastInstant = commitTimeline.lastInstant().get()\n+  private val lastInstant = commitTimeline.getReverseOrderedInstants.iterator().find(instant => {\n+    // Skip empty instants\n+    HoodieCommitMetadata\n+      .fromBytes(commitTimeline.getInstantDetails(instant).get(), classOf[HoodieCommitMetadata])\n+      .fetchTotalRecordsWritten() > 0\n+  }).getOrElse(throw new HoodieException(\"Couldn't find any non empty instant in the hoodie commit timeline.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "author": {"user": {"login": "garyli1019", "name": "Gary Li"}}, "url": "https://github.com/apache/hudi/commit/f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "committedDate": "2020-05-14T19:19:21Z", "message": "HUDI-528 Handle empty commit in incremental pulling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "author": {"user": {"login": "garyli1019", "name": "Gary Li"}}, "url": "https://github.com/apache/hudi/commit/f1dde61bfc519f97d8c4fe4db8f4afc9ac793713", "committedDate": "2020-05-14T19:19:21Z", "message": "HUDI-528 Handle empty commit in incremental pulling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzY1MjAx", "url": "https://github.com/apache/hudi/pull/1612#pullrequestreview-412365201", "createdAt": "2020-05-15T05:54:23Z", "commit": {"oid": "f1dde61bfc519f97d8c4fe4db8f4afc9ac793713"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3122, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}