{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2Nzg5MDg0", "number": 1624, "title": "[HUDI-706]Add unit test for SavepointsCommand", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nAdd unit test for SavepointsCommand\nBrief change log\n\nAdd unit test for SavepointsCommand\n\nVerify this pull request\nThis pull request is a trivial rework / code cleanup without any test coverage.\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-05-12T15:08:24Z", "url": "https://github.com/apache/hudi/pull/1624", "merged": true, "mergeCommit": {"oid": "161a7983375b0787398a1219a80531019810e692"}, "closed": true, "closedAt": "2020-05-19T10:36:02Z", "author": {"login": "hddong"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchOYp5gFqTQxMTg2NTEzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABciyA86AFqTQxNDMxNjQwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY1MTM0", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-411865134", "createdAt": "2020-05-14T14:31:11Z", "commit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMToxMVrOGVfHjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMToxMVrOGVfHjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MzExNg==", "bodyText": "any reason to return 1?", "url": "https://github.com/apache/hudi/pull/1624#discussion_r425183116", "createdAt": "2020-05-14T14:31:11Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/SparkMain.java", "diffHunk": "@@ -282,6 +293,19 @@ private static int rollback(JavaSparkContext jsc, String instantTime, String bas\n     }\n   }\n \n+  private static int createSavepoint(JavaSparkContext jsc, String commitTime, String user,\n+      String comments, String basePath) throws Exception {\n+    HoodieWriteClient client = createHoodieClient(jsc, basePath);\n+    try {\n+      client.savepoint(commitTime, user, comments);\n+      LOG.info(String.format(\"The commit \\\"%s\\\" has been savepointed.\", commitTime));\n+      return 0;\n+    } catch (HoodieSavepointException se) {\n+      LOG.info(String.format(\"Failed: Could not create savepoint \\\"%s\\\".\", commitTime));\n+      return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY1NDM2", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-411865436", "createdAt": "2020-05-14T14:31:27Z", "commit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMToyN1rOGVfIYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMToyN1rOGVfIYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MzMzMQ==", "bodyText": "this returns -1 while upper return 1", "url": "https://github.com/apache/hudi/pull/1624#discussion_r425183331", "createdAt": "2020-05-14T14:31:27Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/SparkMain.java", "diffHunk": "@@ -294,6 +318,18 @@ private static int rollbackToSavepoint(JavaSparkContext jsc, String savepointTim\n     }\n   }\n \n+  private static int deleteSavepoint(JavaSparkContext jsc, String savepointTime, String basePath) throws Exception {\n+    HoodieWriteClient client = createHoodieClient(jsc, basePath);\n+    try {\n+      client.deleteSavepoint(savepointTime);\n+      LOG.info(String.format(\"Savepoint \\\"%s\\\" deleted.\", savepointTime));\n+      return 0;\n+    } catch (Exception e) {\n+      LOG.info(String.format(\"Failed: Could not delete savepoint \\\"%s\\\".\", savepointTime));\n+      return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY2ODUx", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-411866851", "createdAt": "2020-05-14T14:32:50Z", "commit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMjo1MFrOGVfM9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMjo1MFrOGVfM9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NDUwMQ==", "bodyText": "also test MERGE_ON_READ?", "url": "https://github.com/apache/hudi/pull/1624#discussion_r425184501", "createdAt": "2020-05-14T14:32:50Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestSavepointsCommand.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.cli.commands;\n+\n+import org.apache.hudi.cli.AbstractShellIntegrationTest;\n+import org.apache.hudi.cli.HoodieCLI;\n+import org.apache.hudi.cli.HoodiePrintHelper;\n+import org.apache.hudi.cli.HoodieTableHeaderFields;\n+import org.apache.hudi.common.HoodieTestDataGenerator;\n+import org.apache.hudi.common.model.HoodieTableType;\n+import org.apache.hudi.common.table.timeline.HoodieTimeline;\n+import org.apache.hudi.common.table.timeline.versioning.TimelineLayoutVersion;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.shell.core.CommandResult;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Test class for {@link org.apache.hudi.cli.commands.SavepointsCommand}.\n+ */\n+public class TestSavepointsCommand extends AbstractShellIntegrationTest {\n+\n+  private String tablePath;\n+\n+  @BeforeEach\n+  public void init() throws IOException {\n+    String tableName = \"test_table\";\n+    tablePath = basePath + File.separator + tableName;\n+\n+    // Create table and connect\n+    new TableCommand().createTable(\n+        tablePath, \"test_table\", HoodieTableType.COPY_ON_WRITE.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY3MzU0", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-411867354", "createdAt": "2020-05-14T14:33:21Z", "commit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMzoyMVrOGVfOZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMzoyMVrOGVfOZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NDg2OA==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1624#discussion_r425184868", "createdAt": "2020-05-14T14:33:21Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/test/java/org/apache/hudi/cli/integ/ITTestSavepointsCommand.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.cli.integ;\n+\n+import org.apache.hudi.cli.AbstractShellIntegrationTest;\n+import org.apache.hudi.cli.HoodieCLI;\n+import org.apache.hudi.cli.commands.TableCommand;\n+import org.apache.hudi.common.HoodieTestDataGenerator;\n+import org.apache.hudi.common.model.HoodieTableType;\n+import org.apache.hudi.common.table.timeline.HoodieActiveTimeline;\n+import org.apache.hudi.common.table.timeline.HoodieInstant;\n+import org.apache.hudi.common.table.timeline.HoodieTimeline;\n+import org.apache.hudi.common.table.timeline.versioning.TimelineLayoutVersion;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import org.springframework.shell.core.CommandResult;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.junit.jupiter.api.Assertions.assertAll;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Integration test class for {@link org.apache.hudi.cli.commands.SavepointsCommand}.\n+ * <p/>\n+ * A command use SparkLauncher need load jars under lib which generate during mvn package.\n+ * Use integration test instead of unit test.\n+ */\n+public class ITTestSavepointsCommand extends AbstractShellIntegrationTest {\n+\n+  private String tablePath;\n+\n+  @BeforeEach\n+  public void init() throws IOException {\n+    String tableName = \"test_table\";\n+    tablePath = basePath + File.separator + tableName;\n+\n+    // Create table and connect\n+    new TableCommand().createTable(\n+        tablePath, \"test_table\", HoodieTableType.COPY_ON_WRITE.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODY4MjMw", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-411868230", "createdAt": "2020-05-14T14:34:21Z", "commit": {"oid": "bdc8c8e8634ae1ff7860402be7ab1adff8486af0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3", "author": {"user": {"login": "hddong", "name": "hongdd"}}, "url": "https://github.com/apache/hudi/commit/89d8c2b2bff6d0a51b0ff404a5c29db2319facd3", "committedDate": "2020-05-16T07:07:02Z", "message": "Add test for SavepointsCommand"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3", "author": {"user": {"login": "hddong", "name": "hongdd"}}, "url": "https://github.com/apache/hudi/commit/89d8c2b2bff6d0a51b0ff404a5c29db2319facd3", "committedDate": "2020-05-16T07:07:02Z", "message": "Add test for SavepointsCommand"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDY0MzMy", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-413064332", "createdAt": "2020-05-16T09:55:54Z", "commit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwOTo1NTo1NFrOGWZcvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwOTo1NTo1NFrOGWZcvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODgxMw==", "bodyText": "I think we could change to log.warn, wdyt?", "url": "https://github.com/apache/hudi/pull/1624#discussion_r426138813", "createdAt": "2020-05-16T09:55:54Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/SparkMain.java", "diffHunk": "@@ -281,6 +292,19 @@ private static int rollback(JavaSparkContext jsc, String instantTime, String bas\n     }\n   }\n \n+  private static int createSavepoint(JavaSparkContext jsc, String commitTime, String user,\n+      String comments, String basePath) throws Exception {\n+    HoodieWriteClient client = createHoodieClient(jsc, basePath);\n+    try {\n+      client.savepoint(commitTime, user, comments);\n+      LOG.info(String.format(\"The commit \\\"%s\\\" has been savepointed.\", commitTime));\n+      return 0;\n+    } catch (HoodieSavepointException se) {\n+      LOG.info(String.format(\"Failed: Could not create savepoint \\\"%s\\\".\", commitTime));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDY0MzM4", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-413064338", "createdAt": "2020-05-16T09:56:01Z", "commit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwOTo1NjowMVrOGWZcwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwOTo1NjowMVrOGWZcwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODgxNg==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1624#discussion_r426138816", "createdAt": "2020-05-16T09:56:01Z", "author": {"login": "leesf"}, "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/SparkMain.java", "diffHunk": "@@ -293,6 +317,18 @@ private static int rollbackToSavepoint(JavaSparkContext jsc, String savepointTim\n     }\n   }\n \n+  private static int deleteSavepoint(JavaSparkContext jsc, String savepointTime, String basePath) throws Exception {\n+    HoodieWriteClient client = createHoodieClient(jsc, basePath);\n+    try {\n+      client.deleteSavepoint(savepointTime);\n+      LOG.info(String.format(\"Savepoint \\\"%s\\\" deleted.\", savepointTime));\n+      return 0;\n+    } catch (Exception e) {\n+      LOG.info(String.format(\"Failed: Could not delete savepoint \\\"%s\\\".\", savepointTime));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89d8c2b2bff6d0a51b0ff404a5c29db2319facd3"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91cbc59a23027eb2bf6c1b3b6c6d195ce5871472", "author": {"user": {"login": "hddong", "name": "hongdd"}}, "url": "https://github.com/apache/hudi/commit/91cbc59a23027eb2bf6c1b3b6c6d195ce5871472", "committedDate": "2020-05-17T14:32:54Z", "message": "Change exception log to warn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee59cd04c5c210a802a0c1d848b2b0dfa89ad9df", "author": {"user": {"login": "hddong", "name": "hongdd"}}, "url": "https://github.com/apache/hudi/commit/ee59cd04c5c210a802a0c1d848b2b0dfa89ad9df", "committedDate": "2020-05-19T07:05:47Z", "message": "Merge branch 'master' into add-test-SavepointsCommand"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzE2NDA3", "url": "https://github.com/apache/hudi/pull/1624#pullrequestreview-414316407", "createdAt": "2020-05-19T10:35:48Z", "commit": {"oid": "ee59cd04c5c210a802a0c1d848b2b0dfa89ad9df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3131, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}