{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMTczMzQ4", "number": 2343, "title": "[HUDI-1469] Faster initialization of metadata table using parallelized listing.", "bodyText": "This finds partitions and files in a single scan rather than listing partitions first and then listing each partition.\nBrief change log\n(for example:)\n\nModify AnnotationLocation checkstyle rule in checkstyle.xml\n\nVerify this pull request\nmvn-test -pl hudi-client -Dtest=TestHoodieFsMetadata\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-12-17T22:31:29Z", "url": "https://github.com/apache/hudi/pull/2343", "merged": true, "mergeCommit": {"oid": "f7f8c33f804b1bb2cfecf3ac18edc9eb584c679e"}, "closed": true, "closedAt": "2020-12-21T18:42:32Z", "author": {"login": "prashantwason"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnPyNbAFqTU1NTE0NjEyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoaHs6gFqTU1NjA0MzA3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTQ2MTI3", "url": "https://github.com/apache/hudi/pull/2343#pullrequestreview-555146127", "createdAt": "2020-12-18T03:16:00Z", "commit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzoxNjowMFrOIIRhlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzo0MzoxNFrOIIR-bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0NjY0Ng==", "bodyText": "Perhaps name it getPartitionsToFilesMapping() ?\nIdeally, it would have been good to have it as a utility in FsUtils but because of our current structure we can't move it, since FsUtils is in hudi-common which we don't want to depend on spark.", "url": "https://github.com/apache/hudi/pull/2343#discussion_r545546646", "createdAt": "2020-12-18T03:16:00Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -369,10 +343,56 @@ private void bootstrapFromFilesystem(JavaSparkContext jsc, HoodieTableMetaClient\n       }\n     });\n \n-    LOG.info(\"Committing \" + partitionFileList.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n+    LOG.info(\"Committing \" + partitionToFileStatus.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n     update(commitMetadata, createInstantTime);\n   }\n \n+  /**\n+   * Function to find hoodie partitions and list files in them in parallel.\n+   *\n+   * @param jsc\n+   * @param datasetMetaClient\n+   * @return Map of partition names to a list of FileStatus for all the files in the partition\n+   */\n+  private Map<String, List<FileStatus>> parallelFileSystemListing(JavaSparkContext jsc,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU0ODM3NA==", "bodyText": "I think we should introduce like a LISTING_PARALLELISM property with a default of 1500 and use it here. (https://github.com/apache/hudi/blob/rfc-15/hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java#L70)", "url": "https://github.com/apache/hudi/pull/2343#discussion_r545548374", "createdAt": "2020-12-18T03:22:33Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -369,10 +343,56 @@ private void bootstrapFromFilesystem(JavaSparkContext jsc, HoodieTableMetaClient\n       }\n     });\n \n-    LOG.info(\"Committing \" + partitionFileList.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n+    LOG.info(\"Committing \" + partitionToFileStatus.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n     update(commitMetadata, createInstantTime);\n   }\n \n+  /**\n+   * Function to find hoodie partitions and list files in them in parallel.\n+   *\n+   * @param jsc\n+   * @param datasetMetaClient\n+   * @return Map of partition names to a list of FileStatus for all the files in the partition\n+   */\n+  private Map<String, List<FileStatus>> parallelFileSystemListing(JavaSparkContext jsc,\n+      HoodieTableMetaClient datasetMetaClient) {\n+    List<Path> pathsToList = new LinkedList<>();\n+    pathsToList.add(new Path(datasetWriteConfig.getBasePath()));\n+    Map<String, List<FileStatus>> partitionToFileStatus = new HashMap<>();\n+\n+    while (!pathsToList.isEmpty()) {\n+      // List all directories in parallel\n+      List<Pair<Path, FileStatus[]>> dirToFileListing =\n+          jsc.parallelize(pathsToList, Math.min(pathsToList.size(), jsc.defaultParallelism()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MDM5OA==", "bodyText": "This adds unnecessary overhead of serialization/deserialization of HoodieTableMetaClient. Instead, we can  do:\npath.getFileSystem(new Configuration());\n\nto get the file system.", "url": "https://github.com/apache/hudi/pull/2343#discussion_r545550398", "createdAt": "2020-12-18T03:29:41Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -369,10 +343,56 @@ private void bootstrapFromFilesystem(JavaSparkContext jsc, HoodieTableMetaClient\n       }\n     });\n \n-    LOG.info(\"Committing \" + partitionFileList.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n+    LOG.info(\"Committing \" + partitionToFileStatus.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n     update(commitMetadata, createInstantTime);\n   }\n \n+  /**\n+   * Function to find hoodie partitions and list files in them in parallel.\n+   *\n+   * @param jsc\n+   * @param datasetMetaClient\n+   * @return Map of partition names to a list of FileStatus for all the files in the partition\n+   */\n+  private Map<String, List<FileStatus>> parallelFileSystemListing(JavaSparkContext jsc,\n+      HoodieTableMetaClient datasetMetaClient) {\n+    List<Path> pathsToList = new LinkedList<>();\n+    pathsToList.add(new Path(datasetWriteConfig.getBasePath()));\n+    Map<String, List<FileStatus>> partitionToFileStatus = new HashMap<>();\n+\n+    while (!pathsToList.isEmpty()) {\n+      // List all directories in parallel\n+      List<Pair<Path, FileStatus[]>> dirToFileListing =\n+          jsc.parallelize(pathsToList, Math.min(pathsToList.size(), jsc.defaultParallelism()))\n+            .map(path -> {\n+              FileSystem fs = datasetMetaClient.getFs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MTE2MA==", "bodyText": "May be Arrays.stream().parallel() ? This can be a huge list to go through for large datasets.", "url": "https://github.com/apache/hudi/pull/2343#discussion_r545551160", "createdAt": "2020-12-18T03:32:42Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -369,10 +343,56 @@ private void bootstrapFromFilesystem(JavaSparkContext jsc, HoodieTableMetaClient\n       }\n     });\n \n-    LOG.info(\"Committing \" + partitionFileList.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n+    LOG.info(\"Committing \" + partitionToFileStatus.size() + \" partitions and \" + stats[0] + \" files to metadata\");\n     update(commitMetadata, createInstantTime);\n   }\n \n+  /**\n+   * Function to find hoodie partitions and list files in them in parallel.\n+   *\n+   * @param jsc\n+   * @param datasetMetaClient\n+   * @return Map of partition names to a list of FileStatus for all the files in the partition\n+   */\n+  private Map<String, List<FileStatus>> parallelFileSystemListing(JavaSparkContext jsc,\n+      HoodieTableMetaClient datasetMetaClient) {\n+    List<Path> pathsToList = new LinkedList<>();\n+    pathsToList.add(new Path(datasetWriteConfig.getBasePath()));\n+    Map<String, List<FileStatus>> partitionToFileStatus = new HashMap<>();\n+\n+    while (!pathsToList.isEmpty()) {\n+      // List all directories in parallel\n+      List<Pair<Path, FileStatus[]>> dirToFileListing =\n+          jsc.parallelize(pathsToList, Math.min(pathsToList.size(), jsc.defaultParallelism()))\n+            .map(path -> {\n+              FileSystem fs = datasetMetaClient.getFs();\n+              return Pair.of(path, fs.listStatus(path));\n+            }).collect();\n+      pathsToList.clear();\n+\n+      // If the listing reveals a directory, add it to queue. If the listing reveals a hoodie partition, add it to\n+      // the results.\n+      dirToFileListing.forEach(p -> {\n+        List<FileStatus> filesInDir = Arrays.stream(p.getRight())\n+            .filter(fs -> !fs.getPath().getName().equals(HoodiePartitionMetadata.HOODIE_PARTITION_METAFILE))\n+            .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDAyOA==", "bodyText": "Can you re-use this same thing to getAllPartitionPaths() here: https://github.com/apache/hudi/blob/rfc-15/hudi-common/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadata.java#L149\nThe default mechanism is really slow. I investigated FsUtils.getAllPartitionPaths() is also used at multiple places across Hudi code-base which can benefit from RFC-15. So, what I am thinking is by default we can let FsUtils.getAllPartitionPaths() always default to the metadata table, and internally if the table is not present, it will use this default parallelized/optimized listing of partition paths.\nSo, it benefits both customers who use metadata table and who don't.", "url": "https://github.com/apache/hudi/pull/2343#discussion_r545554028", "createdAt": "2020-12-18T03:43:14Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -51,6 +51,7 @@\n import org.apache.hudi.common.util.HoodieTimer;\n import org.apache.hudi.common.util.Option;\n import org.apache.hudi.common.util.ValidationUtils;\n+import org.apache.hudi.common.util.collection.Pair;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/374bbb61592137feab4fb56ad540700cbc9e7373", "committedDate": "2020-12-17T22:21:15Z", "message": "[HUDI-1469] Faster initialization of metadata table using parallelized listing which finds partitions and files in a single scan."}, "afterCommit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/b7fc074f0534c2be891a0c144ac70a73ede79e46", "committedDate": "2020-12-18T23:06:16Z", "message": "[HUDI-1469] Faster initialization of metadata table using parallelized listing which finds partitions and files in a single scan."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODc0Mjg5", "url": "https://github.com/apache/hudi/pull/2343#pullrequestreview-555874289", "createdAt": "2020-12-18T23:18:20Z", "commit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTgyMzM5", "url": "https://github.com/apache/hudi/pull/2343#pullrequestreview-555982339", "createdAt": "2020-12-20T03:03:50Z", "commit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzowMzo1MFrOIJATYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzowNTozN1rOIJAT6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxMzA1Nw==", "bodyText": "I think we can drop .shuffle", "url": "https://github.com/apache/hudi/pull/2343#discussion_r546313057", "createdAt": "2020-12-20T03:03:50Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieWriteConfig.java", "diffHunk": "@@ -72,6 +72,7 @@\n   public static final String BULKINSERT_USER_DEFINED_PARTITIONER_CLASS = \"hoodie.bulkinsert.user.defined.partitioner.class\";\n   public static final String UPSERT_PARALLELISM = \"hoodie.upsert.shuffle.parallelism\";\n   public static final String DELETE_PARALLELISM = \"hoodie.delete.shuffle.parallelism\";\n+  public static final String FILE_LISTING_PARALLELISM = \"hoodie.file.listing.shuffle.parallelism\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxMzE5Mw==", "bodyText": "We can pass in the HoodieEngineContext which can also be plain old java if needed. I ll take a closer look in #2351 and how best we can do this. We can scope this PR to just what you just fixed now", "url": "https://github.com/apache/hudi/pull/2343#discussion_r546313193", "createdAt": "2020-12-20T03:05:37Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -51,6 +51,7 @@\n import org.apache.hudi.common.util.HoodieTimer;\n import org.apache.hudi.common.util.Option;\n import org.apache.hudi.common.util.ValidationUtils;\n+import org.apache.hudi.common.util.collection.Pair;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDAyOA=="}, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "828a51ae04eeb41582a13a1f1b78c432134056f1", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/828a51ae04eeb41582a13a1f1b78c432134056f1", "committedDate": "2020-12-20T19:33:34Z", "message": "[HUDI-1469] Faster initialization of metadata table using parallelized listing which finds partitions and files in a single scan."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71922dd72c2437e20863db924c5b20fad2150f4", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/apache/hudi/commit/d71922dd72c2437e20863db924c5b20fad2150f4", "committedDate": "2020-12-21T18:00:35Z", "message": "MINOR fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46", "author": {"user": {"login": "prashantwason", "name": "Prashant Wason"}}, "url": "https://github.com/apache/hudi/commit/b7fc074f0534c2be891a0c144ac70a73ede79e46", "committedDate": "2020-12-18T23:06:16Z", "message": "[HUDI-1469] Faster initialization of metadata table using parallelized listing which finds partitions and files in a single scan."}, "afterCommit": {"oid": "d71922dd72c2437e20863db924c5b20fad2150f4", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/apache/hudi/commit/d71922dd72c2437e20863db924c5b20fad2150f4", "committedDate": "2020-12-21T18:00:35Z", "message": "MINOR fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDQzMDc3", "url": "https://github.com/apache/hudi/pull/2343#pullrequestreview-556043077", "createdAt": "2020-12-20T19:09:41Z", "commit": {"oid": "b7fc074f0534c2be891a0c144ac70a73ede79e46"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOTowOTo0MVrOIJGnMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOTowOTo0MVrOIJGnMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxNjQzMg==", "bodyText": "https://issues.apache.org/jira/browse/HUDI-1479 filed to track follow up. This needs to be done on master, since it has HoodieEngineContext abstraction that can be moved to hudi-common.", "url": "https://github.com/apache/hudi/pull/2343#discussion_r546416432", "createdAt": "2020-12-20T19:09:41Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -51,6 +51,7 @@\n import org.apache.hudi.common.util.HoodieTimer;\n import org.apache.hudi.common.util.Option;\n import org.apache.hudi.common.util.ValidationUtils;\n+import org.apache.hudi.common.util.collection.Pair;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDAyOA=="}, "originalCommit": {"oid": "374bbb61592137feab4fb56ad540700cbc9e7373"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4023, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}