{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MjkxMDk0", "number": 2272, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTozMjozNFrOE99mhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTozMjozNFrOE99mhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDA3ODc2OnYy", "diffSide": "RIGHT", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTozMjozNFrOH67FIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNDo1OTo0MVrOH7BPkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NzQyNA==", "bodyText": "Using String#format would be better?", "url": "https://github.com/apache/hudi/pull/2272#discussion_r531547424", "createdAt": "2020-11-27T11:32:34Z", "author": {"login": "yanghua"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java", "diffHunk": "@@ -241,14 +241,11 @@ public void write(GenericRecord oldRecord) {\n \n     if (copyOldRecord) {\n       // this should work as it is, since this is an existing record\n-      String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()\n-          + \" to new file \" + newFilePath + \" with writerSchema \" + writerSchemaWithMetafields.toString(true);\n       try {\n         fileWriter.writeAvro(key, oldRecord);\n-      } catch (ClassCastException e) {\n-        LOG.debug(\"Old record is \" + oldRecord);\n-        throw new HoodieUpsertException(errMsg, e);\n       } catch (IOException | RuntimeException e) {\n+        String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd9337de129f45e7858389234eca55df854ccc2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY0ODQwMQ==", "bodyText": "Using String#format would be better?\n\ndone", "url": "https://github.com/apache/hudi/pull/2272#discussion_r531648401", "createdAt": "2020-11-27T14:59:41Z", "author": {"login": "leesf"}, "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java", "diffHunk": "@@ -241,14 +241,11 @@ public void write(GenericRecord oldRecord) {\n \n     if (copyOldRecord) {\n       // this should work as it is, since this is an existing record\n-      String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()\n-          + \" to new file \" + newFilePath + \" with writerSchema \" + writerSchemaWithMetafields.toString(true);\n       try {\n         fileWriter.writeAvro(key, oldRecord);\n-      } catch (ClassCastException e) {\n-        LOG.debug(\"Old record is \" + oldRecord);\n-        throw new HoodieUpsertException(errMsg, e);\n       } catch (IOException | RuntimeException e) {\n+        String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NzQyNA=="}, "originalCommit": {"oid": "6dd9337de129f45e7858389234eca55df854ccc2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4193, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}