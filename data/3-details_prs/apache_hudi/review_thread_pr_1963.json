{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3Njc4MTg1", "number": 1963, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjoxOToyNVrOEYWaZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDo0NTo0NFrOEZxr6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTY4NDg1OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjoxOToyNVrOHAo3Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNTowMzowMFrOHCDcMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzMTU2Ng==", "bodyText": "we could use the metaClient.getCommitsTimeline() or one of those methods which will automatically determine the commit instant type based on table type?", "url": "https://github.com/apache/hudi/pull/1963#discussion_r470431566", "createdAt": "2020-08-14T06:19:25Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -182,6 +182,7 @@ private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String comm\n     // 2) is less than the first commit ts in the timeline\n     return !commitTimeline.empty()\n         && (commitTimeline.containsInstant(new HoodieInstant(false, HoodieTimeline.COMMIT_ACTION, commitTs))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97410397d0214b7171cd17b42ba636fecb2a92d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc2ODU3NQ==", "bodyText": "Yes, @rmpifer please use the above API Vinoth mentioned to refactor this code so we can include both DELTA_COMMIT & COMMIT actions", "url": "https://github.com/apache/hudi/pull/1963#discussion_r470768575", "createdAt": "2020-08-14T17:49:43Z", "author": {"login": "n3nash"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -182,6 +182,7 @@ private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String comm\n     // 2) is less than the first commit ts in the timeline\n     return !commitTimeline.empty()\n         && (commitTimeline.containsInstant(new HoodieInstant(false, HoodieTimeline.COMMIT_ACTION, commitTs))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzMTU2Ng=="}, "originalCommit": {"oid": "c97410397d0214b7171cd17b42ba636fecb2a92d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkxNTU3MQ==", "bodyText": "Thanks for the suggestion. Updated to address comment", "url": "https://github.com/apache/hudi/pull/1963#discussion_r471915571", "createdAt": "2020-08-18T05:03:00Z", "author": {"login": "rmpifer"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -182,6 +182,7 @@ private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String comm\n     // 2) is less than the first commit ts in the timeline\n     return !commitTimeline.empty()\n         && (commitTimeline.containsInstant(new HoodieInstant(false, HoodieTimeline.COMMIT_ACTION, commitTs))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQzMTU2Ng=="}, "originalCommit": {"oid": "c97410397d0214b7171cd17b42ba636fecb2a92d"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NDYzOTE0OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNDo0NTo0NFrOHCyjKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMTo1NTo0MlrOHDbvpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4NzQwMQ==", "bodyText": "Can you please change this to -> metaClient.getActiveTimeline().getCommitsTimeline(). For context, the getActiveTimeline() loads the timeline once and then caches it. The getCommitsTimeline() call will not force this, in this case it's working by coincidence because the metaClient passed already has the loaded timeline from the caller but I would want to avoid having that assumption.\n@rmpifer", "url": "https://github.com/apache/hudi/pull/1963#discussion_r472687401", "createdAt": "2020-08-19T04:45:44Z", "author": {"login": "n3nash"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -177,13 +176,11 @@ private Get generateStatement(String key) throws IOException {\n   }\n \n   private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String commitTs) {\n-    HoodieTimeline commitTimeline = metaClient.getActiveTimeline().filterCompletedInstants();\n+    HoodieTimeline commitTimeline = metaClient.getCommitsTimeline().filterCompletedInstants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ded9dba8cff584fbbf31494bebecf4d9f199d68"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0NzM4Nw==", "bodyText": "@n3nash It looks like HoodieTableMetaClient.getCommitsTimeline internally calls getActiveTimeline()\nhttps://github.com/rmpifer/hudi/blob/master/hudi-common/src/main/java/org/apache/hudi/common/table/HoodieTableMetaClient.java#L478", "url": "https://github.com/apache/hudi/pull/1963#discussion_r473247387", "createdAt": "2020-08-19T18:47:25Z", "author": {"login": "rmpifer"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -177,13 +176,11 @@ private Get generateStatement(String key) throws IOException {\n   }\n \n   private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String commitTs) {\n-    HoodieTimeline commitTimeline = metaClient.getActiveTimeline().filterCompletedInstants();\n+    HoodieTimeline commitTimeline = metaClient.getCommitsTimeline().filterCompletedInstants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4NzQwMQ=="}, "originalCommit": {"oid": "0ded9dba8cff584fbbf31494bebecf4d9f199d68"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM2MjM0Mg==", "bodyText": "okay, great, thanks for checking.", "url": "https://github.com/apache/hudi/pull/1963#discussion_r473362342", "createdAt": "2020-08-19T21:55:42Z", "author": {"login": "n3nash"}, "path": "hudi-client/src/main/java/org/apache/hudi/index/hbase/HBaseIndex.java", "diffHunk": "@@ -177,13 +176,11 @@ private Get generateStatement(String key) throws IOException {\n   }\n \n   private boolean checkIfValidCommit(HoodieTableMetaClient metaClient, String commitTs) {\n-    HoodieTimeline commitTimeline = metaClient.getActiveTimeline().filterCompletedInstants();\n+    HoodieTimeline commitTimeline = metaClient.getCommitsTimeline().filterCompletedInstants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY4NzQwMQ=="}, "originalCommit": {"oid": "0ded9dba8cff584fbbf31494bebecf4d9f199d68"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4424, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}