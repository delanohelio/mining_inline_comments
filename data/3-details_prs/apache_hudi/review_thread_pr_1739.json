{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjAxNTA0", "number": 1739, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjoyNTowNlrOEKLXaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozNzo1NVrOEKLwgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTA3NDMzOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/client/AbstractHoodieWriteClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjoyNTowNlrOGrEfRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMjozM1rOGrNFFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgxNTQ5Mg==", "bodyText": "Since, this method is just callling writeStats.forEach(stat -> metadata.addWriteStat(stat.getPartitionPath(), stat)); , can we remove this function altogether and move \"writeStats.forEach(stat -> metadata.addWriteStat(stat.getPartitionPath(), stat));\" to the caller.", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447815492", "createdAt": "2020-06-30T16:25:06Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/client/AbstractHoodieWriteClient.java", "diffHunk": "@@ -177,44 +175,7 @@ protected void finalizeWrite(HoodieTable<T> table, String instantTime, List<Hood\n \n   private void updateMetadataAndRollingStats(String actionType, HoodieCommitMetadata metadata,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjI0NQ==", "bodyText": "Good suggestion, fixed", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447956245", "createdAt": "2020-06-30T20:22:33Z", "author": {"login": "baobaoyeye"}, "path": "hudi-client/src/main/java/org/apache/hudi/client/AbstractHoodieWriteClient.java", "diffHunk": "@@ -177,44 +175,7 @@ protected void finalizeWrite(HoodieTable<T> table, String instantTime, List<Hood\n \n   private void updateMetadataAndRollingStats(String actionType, HoodieCommitMetadata metadata,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgxNTQ5Mg=="}, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTA4NjYzOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/main/java/org/apache/hudi/table/action/commit/BaseCommitActionExecutor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjoyNzo0MFrOGrEmmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMjo1MFrOGrNFmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgxNzM2OA==", "bodyText": "Same case for this also. Can you remove this method and move \"writeStats.forEach(stat -> metadata.addWriteStat(stat.getPartitionPath(), stat));\" to caller", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447817368", "createdAt": "2020-06-30T16:27:40Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/commit/BaseCommitActionExecutor.java", "diffHunk": "@@ -231,15 +231,7 @@ protected void finalizeWrite(String instantTime, List<HoodieWriteStat> stats, Ho\n   }\n \n   private void updateMetadataAndRollingStats(HoodieCommitMetadata metadata, List<HoodieWriteStat> writeStats) {\n-    // 1. Look up the previous compaction/commit and get the HoodieCommitMetadata from there.\n-    // 2. Now, first read the existing rolling stats and merge with the result of current metadata.\n-\n-    // Need to do this on every commit (delta or commit) to support COW and MOR.\n-    for (HoodieWriteStat stat : writeStats) {\n-      String partitionPath = stat.getPartitionPath();\n-      // TODO: why is stat.getPartitionPath() null at times here.\n-      metadata.addWriteStat(partitionPath, stat);\n-    }\n+    writeStats.forEach(stat -> metadata.addWriteStat(stat.getPartitionPath(), stat));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjM3Ng==", "bodyText": "Good suggestion, fixed", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447956376", "createdAt": "2020-06-30T20:22:50Z", "author": {"login": "baobaoyeye"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/commit/BaseCommitActionExecutor.java", "diffHunk": "@@ -231,15 +231,7 @@ protected void finalizeWrite(String instantTime, List<HoodieWriteStat> stats, Ho\n   }\n \n   private void updateMetadataAndRollingStats(HoodieCommitMetadata metadata, List<HoodieWriteStat> writeStats) {\n-    // 1. Look up the previous compaction/commit and get the HoodieCommitMetadata from there.\n-    // 2. Now, first read the existing rolling stats and merge with the result of current metadata.\n-\n-    // Need to do this on every commit (delta or commit) to support COW and MOR.\n-    for (HoodieWriteStat stat : writeStats) {\n-      String partitionPath = stat.getPartitionPath();\n-      // TODO: why is stat.getPartitionPath() null at times here.\n-      metadata.addWriteStat(partitionPath, stat);\n-    }\n+    writeStats.forEach(stat -> metadata.addWriteStat(stat.getPartitionPath(), stat));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgxNzM2OA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTEyMzk0OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientOnCopyOnWriteStorage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozNDo1NVrOGrE8Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMzowNFrOGrNGFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMjkxOQ==", "bodyText": "Rename to testMetadataStatsOnCommit", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447822919", "createdAt": "2020-06-30T16:34:55Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientOnCopyOnWriteStorage.java", "diffHunk": "@@ -849,7 +848,7 @@ public void testCommitWritesRelativePaths() throws Exception {\n   }\n \n   /**\n-   * Test to ensure commit metadata points to valid files.\n+   * Test to ensure commit metadata points to valid files.10.\n    */\n   @Test\n   public void testRollingStatsInMetadata() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjUwMg==", "bodyText": "fixed", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447956502", "createdAt": "2020-06-30T20:23:04Z", "author": {"login": "baobaoyeye"}, "path": "hudi-client/src/test/java/org/apache/hudi/client/TestHoodieClientOnCopyOnWriteStorage.java", "diffHunk": "@@ -849,7 +848,7 @@ public void testCommitWritesRelativePaths() throws Exception {\n   }\n \n   /**\n-   * Test to ensure commit metadata points to valid files.\n+   * Test to ensure commit metadata points to valid files.10.\n    */\n   @Test\n   public void testRollingStatsInMetadata() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyMjkxOQ=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTEzODU3OnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/table/TestHoodieMergeOnReadTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjozNzo1NVrOGrFFBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyMzoxMFrOGrNGTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNTE1OQ==", "bodyText": "Also rename this test in the same way.", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447825159", "createdAt": "2020-06-30T16:37:55Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/test/java/org/apache/hudi/table/TestHoodieMergeOnReadTable.java", "diffHunk": "@@ -1094,14 +1093,10 @@ public void testRollingStatsInMetadata() throws Exception {\n       HoodieCommitMetadata metadata = HoodieCommitMetadata.fromBytes(\n           table.getActiveTimeline().getInstantDetails(table.getActiveTimeline().getDeltaCommitTimeline().lastInstant().get()).get(),\n           HoodieCommitMetadata.class);\n-      HoodieRollingStatMetadata rollingStatMetadata = HoodieCommitMetadata.fromBytes(\n-          metadata.getExtraMetadata().get(HoodieRollingStatMetadata.ROLLING_STAT_METADATA_KEY).getBytes(),\n-          HoodieRollingStatMetadata.class);\n       int inserts = 0;\n-      for (Map.Entry<String, Map<String, HoodieRollingStat>> pstat : rollingStatMetadata.getPartitionToRollingStats()\n-          .entrySet()) {\n-        for (Map.Entry<String, HoodieRollingStat> stat : pstat.getValue().entrySet()) {\n-          inserts += stat.getValue().getInserts();\n+      for (Map.Entry<String, List<HoodieWriteStat>> pstat : metadata.getPartitionToWriteStats().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NjU1OQ==", "bodyText": "fixed", "url": "https://github.com/apache/hudi/pull/1739#discussion_r447956559", "createdAt": "2020-06-30T20:23:10Z", "author": {"login": "baobaoyeye"}, "path": "hudi-client/src/test/java/org/apache/hudi/table/TestHoodieMergeOnReadTable.java", "diffHunk": "@@ -1094,14 +1093,10 @@ public void testRollingStatsInMetadata() throws Exception {\n       HoodieCommitMetadata metadata = HoodieCommitMetadata.fromBytes(\n           table.getActiveTimeline().getInstantDetails(table.getActiveTimeline().getDeltaCommitTimeline().lastInstant().get()).get(),\n           HoodieCommitMetadata.class);\n-      HoodieRollingStatMetadata rollingStatMetadata = HoodieCommitMetadata.fromBytes(\n-          metadata.getExtraMetadata().get(HoodieRollingStatMetadata.ROLLING_STAT_METADATA_KEY).getBytes(),\n-          HoodieRollingStatMetadata.class);\n       int inserts = 0;\n-      for (Map.Entry<String, Map<String, HoodieRollingStat>> pstat : rollingStatMetadata.getPartitionToRollingStats()\n-          .entrySet()) {\n-        for (Map.Entry<String, HoodieRollingStat> stat : pstat.getValue().entrySet()) {\n-          inserts += stat.getValue().getInserts();\n+      for (Map.Entry<String, List<HoodieWriteStat>> pstat : metadata.getPartitionToWriteStats().entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNTE1OQ=="}, "originalCommit": null, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4492, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}