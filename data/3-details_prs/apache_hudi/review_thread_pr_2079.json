{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTExODQ0", "number": 2079, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxODowMzoyN1rOEizC2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo1Mjo0NFrOEjOr4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTIzMzU0OnYy", "diffSide": "LEFT", "path": "hudi-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestHarness.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxODowMzoyN1rOHQ2lsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxODowMzoyN1rOHQ2lsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMzY1MA==", "bodyText": "Remove this implementation due to lack of reusability; use HoodieTestTable#makeNewCommitTime(int sequence) instead", "url": "https://github.com/apache/hudi/pull/2079#discussion_r487433650", "createdAt": "2020-09-12T18:03:27Z", "author": {"login": "xushiyan"}, "path": "hudi-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestHarness.java", "diffHunk": "@@ -66,17 +65,12 @@\n   protected transient HoodieTestDataGenerator dataGen = null;\n   protected transient ExecutorService executorService;\n   protected transient HoodieTableMetaClient metaClient;\n-  private static AtomicInteger instantGen = new AtomicInteger(1);\n   protected transient HoodieWriteClient writeClient;\n   protected transient HoodieReadClient readClient;\n   protected transient HoodieTableFileSystemView tableView;\n \n   protected final SparkTaskContextSupplier supplier = new SparkTaskContextSupplier();\n \n-  public String getNextInstant() {\n-    return String.format(\"%09d\", instantGen.getAndIncrement());\n-  }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9e5a2bbc74ebc72528e16e1ef6b073f8c2f12c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0OTIzNDkyOnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxODowNToxNFrOHQ2mRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxODowNToxNFrOHQ2mRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMzc5Ng==", "bodyText": "to replace HoodieTestUtils#monotonicIncreasingCommitTimestamps(int numTimestamps, int startSecsDelta)", "url": "https://github.com/apache/hudi/pull/2079#discussion_r487433796", "createdAt": "2020-09-12T18:05:14Z", "author": {"login": "xushiyan"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "diffHunk": "@@ -66,6 +73,30 @@ public static HoodieTestTable of(HoodieTableMetaClient metaClient) {\n     return new HoodieTestTable(metaClient.getBasePath(), metaClient.getRawFs(), metaClient);\n   }\n \n+  public static String makeNewCommitTime(int sequence) {\n+    return String.format(\"%09d\", sequence);\n+  }\n+\n+  public static String makeNewCommitTime() {\n+    return makeNewCommitTime(Instant.now());\n+  }\n+\n+  public static String makeNewCommitTime(Instant time) {\n+    return COMMIT_FORMATTER.format(time);\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num) {\n+    return makeNewCommitTimes(num, 1);\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num, int firstOffsetSeconds) {\n+    final Instant now = Instant.now();\n+    return IntStream.range(0, num)\n+        .mapToObj(i ->\n+            makeNewCommitTime(now.plus(i == 0 ? firstOffsetSeconds : firstOffsetSeconds + i, SECONDS)))\n+        .collect(Collectors.toList());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a9e5a2bbc74ebc72528e16e1ef6b073f8c2f12c"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDY4NjYwOnYy", "diffSide": "RIGHT", "path": "hudi-client/src/test/java/org/apache/hudi/table/TestCleaner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMTo0NjoyM1rOHRBcHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzowMzoyNlrOHRSuog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxMTQyMQ==", "bodyText": "redundant indent?", "url": "https://github.com/apache/hudi/pull/2079#discussion_r487611421", "createdAt": "2020-09-14T01:46:23Z", "author": {"login": "yanghua"}, "path": "hudi-client/src/test/java/org/apache/hudi/table/TestCleaner.java", "diffHunk": "@@ -1058,10 +1069,21 @@ public void testCleanPreviousCorruptedCleanFiles() throws IOException {\n         HoodieWriteConfig.newBuilder()\n             .withPath(basePath).withAssumeDatePartitioning(true)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder()\n-            .withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build())\n+                .withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dcf002af99d8a3ee383a2cf42dede28bb1d7efb"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NDY5MA==", "bodyText": "fixed", "url": "https://github.com/apache/hudi/pull/2079#discussion_r487894690", "createdAt": "2020-09-14T13:03:26Z", "author": {"login": "xushiyan"}, "path": "hudi-client/src/test/java/org/apache/hudi/table/TestCleaner.java", "diffHunk": "@@ -1058,10 +1069,21 @@ public void testCleanPreviousCorruptedCleanFiles() throws IOException {\n         HoodieWriteConfig.newBuilder()\n             .withPath(basePath).withAssumeDatePartitioning(true)\n             .withCompactionConfig(HoodieCompactionConfig.newBuilder()\n-            .withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build())\n+                .withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxMTQyMQ=="}, "originalCommit": {"oid": "7dcf002af99d8a3ee383a2cf42dede28bb1d7efb"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzc2MjI0OnYy", "diffSide": "RIGHT", "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo1Mjo0NFrOHReH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODowNjoyMlrOHRgxcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4MTM4OQ==", "bodyText": "can we name this something like \"makeIncrementalCommitTimes\"", "url": "https://github.com/apache/hudi/pull/2079#discussion_r488081389", "createdAt": "2020-09-14T16:52:44Z", "author": {"login": "nsivabalan"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "diffHunk": "@@ -66,6 +74,30 @@ public static HoodieTestTable of(HoodieTableMetaClient metaClient) {\n     return new HoodieTestTable(metaClient.getBasePath(), metaClient.getRawFs(), metaClient);\n   }\n \n+  public static String makeNewCommitTime(int sequence) {\n+    return String.format(\"%09d\", sequence);\n+  }\n+\n+  public static String makeNewCommitTime() {\n+    return makeNewCommitTime(Instant.now());\n+  }\n+\n+  public static String makeNewCommitTime(Instant dateTime) {\n+    return COMMIT_FORMATTER.format(Date.from(dateTime));\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num) {\n+    return makeNewCommitTimes(num, 1);\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num, int firstOffsetSeconds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e9afbea96305a44994548ea866502350a863dc"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNDc4Nw==", "bodyText": "ok changed.", "url": "https://github.com/apache/hudi/pull/2079#discussion_r488124787", "createdAt": "2020-09-14T18:06:22Z", "author": {"login": "xushiyan"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestTable.java", "diffHunk": "@@ -66,6 +74,30 @@ public static HoodieTestTable of(HoodieTableMetaClient metaClient) {\n     return new HoodieTestTable(metaClient.getBasePath(), metaClient.getRawFs(), metaClient);\n   }\n \n+  public static String makeNewCommitTime(int sequence) {\n+    return String.format(\"%09d\", sequence);\n+  }\n+\n+  public static String makeNewCommitTime() {\n+    return makeNewCommitTime(Instant.now());\n+  }\n+\n+  public static String makeNewCommitTime(Instant dateTime) {\n+    return COMMIT_FORMATTER.format(Date.from(dateTime));\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num) {\n+    return makeNewCommitTimes(num, 1);\n+  }\n+\n+  public static List<String> makeNewCommitTimes(int num, int firstOffsetSeconds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA4MTM4OQ=="}, "originalCommit": {"oid": "88e9afbea96305a44994548ea866502350a863dc"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4276, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}