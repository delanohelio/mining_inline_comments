{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDgyNTI2", "number": 1870, "title": "[HUDI-808] Support cleaning bootstrap source data", "bodyText": "Tips\n\nThank you very much for contributing to Apache Hudi.\nPlease review https://hudi.apache.org/contributing.html before opening a pull request.\n\nWhat is the purpose of the pull request\nJIRA https://issues.apache.org/jira/browse/HUDI-808\nThis is an important requirement from GDPR perspective. When performing deletion on a metadata only bootstrapped partition, users should have the ability to tell to clean up the original data from the source location because as per this new bootstrapping mechanism the original data serves as the data in original commit for Hudi.\nCreate an option named hoodie.cleaner.bootstrap.source.file, when set it to true, users have the ability to clean the original source data for the bootstrap table. By default, it is false.\nBrief change log\nCreate an option named hoodie.cleaner.bootstrap.source.file, when set it to true, users have the ability to clean the original source data for the bootstrap table. By default, it is false.\nAlso added corresponding unit tests for this option in TestCleaner.java.\nVerify this pull request\nThis change added tests and can be verified as follows:\n\nAdded two test case in TestCleaner.java to verify the change.\n\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-07-24T05:23:10Z", "url": "https://github.com/apache/hudi/pull/1870", "merged": true, "mergeCommit": {"oid": "8b928e9bca5ecac8f956b17e5d18f2deaf526253"}, "closed": true, "closedAt": "2020-08-11T08:43:47Z", "author": {"login": "zhedoubushishi"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5ah--gBqjM1OTU1OTYzMjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9x9EjgBqjM2NDE4ODY5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d849f03255588dcc7291b08d164c75a640ab0efc", "author": {"user": {"login": "zhedoubushishi", "name": "wenningd"}}, "url": "https://github.com/apache/hudi/commit/d849f03255588dcc7291b08d164c75a640ab0efc", "committedDate": "2020-07-28T18:06:12Z", "message": "Merge branch 'master' into pr-for-bootstrap-clean"}, "afterCommit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/946b08eeab23a8fe78d5916b96e502714fa9bee7", "committedDate": "2020-07-28T18:12:15Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzgxNDU5", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-458781459", "createdAt": "2020-07-30T21:51:09Z", "commit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTo1MTowOVrOG51F0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTo1MTowOVrOG51F0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5MTg1Nw==", "bodyText": "I see some private functions in this class to test cleaning based on commits and file versions, that are re-used by other tests. Is it possible to re-use some of these already created ones. May be introduce another boolean flag for bootstrap which can do additional creation of source files and later check if they are cleaned up.", "url": "https://github.com/apache/hudi/pull/1870#discussion_r463291857", "createdAt": "2020-07-30T21:51:09Z", "author": {"login": "umehrot2"}, "path": "hudi-client/src/test/java/org/apache/hudi/table/TestCleaner.java", "diffHunk": "@@ -885,6 +888,109 @@ private void testKeepLatestCommits(boolean simulateFailureRetry, boolean enableI\n         file2P0C1));\n   }\n \n+  @Test\n+  public void testBootstrapSourceFileCleanWithKeepLatestFileVersions() throws IOException {\n+    testBootstrapSourceFileClean(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS);\n+  }\n+\n+  @Test\n+  public void testBootstrapSourceFileCleanWithKeepLatestCommits() throws IOException {\n+    testBootstrapSourceFileClean(HoodieCleaningPolicy.KEEP_LATEST_COMMITS);\n+  }\n+\n+  /**\n+   * Test HoodieTable.clean() with Bootstrap source file clean enable.\n+   */\n+  @Test\n+  private void testBootstrapSourceFileClean(HoodieCleaningPolicy cleaningPolicy) throws IOException {\n+    HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withAssumeDatePartitioning(true)\n+        .withCompactionConfig(HoodieCompactionConfig.newBuilder()\n+            .withCleanBootstrapSourceFileEnabled(true)\n+            .withCleanerPolicy(cleaningPolicy).retainCommits(1).retainFileVersions(2).build())\n+        .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzA2NjA3", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-462306607", "createdAt": "2020-08-06T08:43:21Z", "commit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODo0MzoyMVrOG8pN8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODo0MzoyMVrOG8pN8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI0MzA1Ng==", "bodyText": "can we move these to the test class itself? these are very specific to bootstrap.", "url": "https://github.com/apache/hudi/pull/1870#discussion_r466243056", "createdAt": "2020-08-06T08:43:21Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/test/java/org/apache/hudi/common/testutils/HoodieTestUtils.java", "diffHunk": "@@ -513,4 +522,41 @@ public static void writeRecordsToLogFiles(FileSystem fs, String basePath, Schema\n     }\n     return writeStatList;\n   }\n+\n+  public static Map<String, List<BootstrapSourceFileMapping>> generateBootstrapIndex(HoodieTableMetaClient metaClient,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "946b08eeab23a8fe78d5916b96e502714fa9bee7", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/946b08eeab23a8fe78d5916b96e502714fa9bee7", "committedDate": "2020-07-28T18:12:15Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "98cb7ccc736005fc9e907f19608e6be5d8596aaf", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/98cb7ccc736005fc9e907f19608e6be5d8596aaf", "committedDate": "2020-08-08T07:08:55Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98cb7ccc736005fc9e907f19608e6be5d8596aaf", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/98cb7ccc736005fc9e907f19608e6be5d8596aaf", "committedDate": "2020-08-08T07:08:55Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "e25ea60f77252ca81b212e1147ecef36f25d63d2", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/e25ea60f77252ca81b212e1147ecef36f25d63d2", "committedDate": "2020-08-08T07:18:26Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e25ea60f77252ca81b212e1147ecef36f25d63d2", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/e25ea60f77252ca81b212e1147ecef36f25d63d2", "committedDate": "2020-08-08T07:18:26Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "82edf2206f83574f1577175cfa2606039683ffea", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/82edf2206f83574f1577175cfa2606039683ffea", "committedDate": "2020-08-08T08:34:59Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzg5NzM3", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-463789737", "createdAt": "2020-08-08T08:50:11Z", "commit": {"oid": "82edf2206f83574f1577175cfa2606039683ffea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwODo1MDoxMVrOG9v8kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwODo1MDoxMVrOG9v8kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQwMTg3Mg==", "bodyText": "@zhedoubushishi : I think this is an unnecessary call we will be making per file deletion. With embedded timeline service, this request will be routed to driver. Instead, I think we can handle it using versioning in clean plan.  Thoughts ?", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467401872", "createdAt": "2020-08-08T08:50:11Z", "author": {"login": "bvaradar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/clean/CleanActionExecutor.java", "diffHunk": "@@ -116,6 +119,19 @@ HoodieCleanerPlan requestClean(JavaSparkContext jsc) {\n         PartitionCleanStat partitionCleanStat = partitionCleanStatMap.get(partitionPath);\n         partitionCleanStat.addDeleteFilePatterns(deletePath.getName());\n         partitionCleanStat.addDeletedFileResult(deletePath.getName(), deletedFileResult);\n+\n+        // If CleanBootstrapSourceFileEnabled and it is a metadata bootstrap commit, also delete the corresponding source file\n+        if (cleanBootstrapSourceFileEnabled && !FSUtils.isLogFile(deletePath)\n+            && FSUtils.getCommitTime(delFileName).equals(HoodieTimeline.METADATA_BOOTSTRAP_INSTANT_TS)) {\n+          Option<HoodieBaseFile> baseFile = fileSystemView.getBaseFileOn(partitionPath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82edf2206f83574f1577175cfa2606039683ffea"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82edf2206f83574f1577175cfa2606039683ffea", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/82edf2206f83574f1577175cfa2606039683ffea", "committedDate": "2020-08-08T08:34:59Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "60c5bfb67ef09972a5ccaa5c45085aac41d84932", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/60c5bfb67ef09972a5ccaa5c45085aac41d84932", "committedDate": "2020-08-09T01:45:12Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60c5bfb67ef09972a5ccaa5c45085aac41d84932", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/60c5bfb67ef09972a5ccaa5c45085aac41d84932", "committedDate": "2020-08-09T01:45:12Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/8344982d6c125e70faa3ea83ac0dcd612d14694f", "committedDate": "2020-08-09T02:09:39Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODM4MTQ3", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-463838147", "createdAt": "2020-08-09T02:21:04Z", "commit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwMjoyMTowNFrOG93iCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwMjoyMTowNFrOG93iCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNjE1NA==", "bodyText": "this is not deletion. I simply moved this to a separate file for it to be referenced in another place. The idea is to keep these information for bootstrap base files in a separate Avro field for it to be skipped by incremental timeline syncing.", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467526154", "createdAt": "2020-08-09T02:21:04Z", "author": {"login": "bvaradar"}, "path": "hudi-common/src/main/avro/HoodieCleanMetadata.avsc", "diffHunk": "@@ -24,23 +24,22 @@\n      {\"name\": \"totalFilesDeleted\", \"type\": \"int\"},\n      {\"name\": \"earliestCommitToRetain\", \"type\": \"string\"},\n      {\"name\": \"partitionMetadata\", \"type\": {\n-     \"type\" : \"map\", \"values\" : {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODM4MjE3", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-463838217", "createdAt": "2020-08-09T02:22:38Z", "commit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwMjoyMjozOVrOG93ifw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQwMjoyMjozOVrOG93ifw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNjI3MQ==", "bodyText": "I am adding a new field filePathsToBeDeletedPerPartition which deprecates filesToBeDeletedPerPartition field. filePathsToBeDeletedPerPartition retains information to distinguish cleaning of regular hudi and bootstrap base files.", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467526271", "createdAt": "2020-08-09T02:22:39Z", "author": {"login": "bvaradar"}, "path": "hudi-common/src/main/avro/HoodieCleanerPlan.avsc", "diffHunk": "@@ -47,6 +47,7 @@\n       \"type\": \"string\"\n     },\n     {\n+      /** This is deprecated and replaced by the field filePathsToBeDeletedPerPartition **/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/8344982d6c125e70faa3ea83ac0dcd612d14694f", "committedDate": "2020-08-09T02:09:39Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "6174d890b8d6fa91e3a8d1b960443222350446bd", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/6174d890b8d6fa91e3a8d1b960443222350446bd", "committedDate": "2020-08-09T02:26:45Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6174d890b8d6fa91e3a8d1b960443222350446bd", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/6174d890b8d6fa91e3a8d1b960443222350446bd", "committedDate": "2020-08-09T02:26:45Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "c0bd452d0367eee8b8c37502f6b56c2ee645ef24", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/c0bd452d0367eee8b8c37502f6b56c2ee645ef24", "committedDate": "2020-08-09T05:35:05Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0bd452d0367eee8b8c37502f6b56c2ee645ef24", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/c0bd452d0367eee8b8c37502f6b56c2ee645ef24", "committedDate": "2020-08-09T05:35:05Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/896828d0340183369b8faf0c96721f446c30135f", "committedDate": "2020-08-09T16:07:57Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTAzMjQx", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-463903241", "createdAt": "2020-08-09T21:04:08Z", "commit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQyMTowNDowOVrOG99yaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0NDowOFrOG-RpTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYyODY0OQ==", "bodyText": "rename : hoodie.cleaner.delete.bootstrap.base.file ?", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467628649", "createdAt": "2020-08-09T21:04:09Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/config/HoodieCompactionConfig.java", "diffHunk": "@@ -52,6 +52,8 @@\n   public static final String MAX_COMMITS_TO_KEEP_PROP = \"hoodie.keep.max.commits\";\n   public static final String MIN_COMMITS_TO_KEEP_PROP = \"hoodie.keep.min.commits\";\n   public static final String COMMITS_ARCHIVAL_BATCH_SIZE_PROP = \"hoodie.commits.archival.batch\";\n+  // Set true to clean bootstrap source files when necessary\n+  public static final String CLEANER_BOOTSTRAP_BASE_FILE_ENABLED = \"hoodie.cleaner.bootstrap.base.file\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYzODIxMw==", "bodyText": "do we know that would be backwards compatible?", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467638213", "createdAt": "2020-08-09T22:50:44Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/avro/HoodieCleanMetadata.avsc", "diffHunk": "@@ -24,23 +24,22 @@\n      {\"name\": \"totalFilesDeleted\", \"type\": \"int\"},\n      {\"name\": \"earliestCommitToRetain\", \"type\": \"string\"},\n      {\"name\": \"partitionMetadata\", \"type\": {\n-     \"type\" : \"map\", \"values\" : {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUyNjE1NA=="}, "originalCommit": {"oid": "8344982d6c125e70faa3ea83ac0dcd612d14694f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0NDE5Ng==", "bodyText": "stylistic: in general, a stream within stream is a bit hard to read. flatMap() first? but guess this is a map. probably using a named lambda function may help", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467944196", "createdAt": "2020-08-10T14:29:58Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/clean/CleanActionExecutor.java", "diffHunk": "@@ -82,40 +83,45 @@ HoodieCleanerPlan requestClean(JavaSparkContext jsc) {\n       LOG.info(\"Using cleanerParallelism: \" + cleanerParallelism);\n \n       jsc.setJobGroup(this.getClass().getSimpleName(), \"Generates list of file slices to be cleaned\");\n-      Map<String, List<String>> cleanOps = jsc\n+      Map<String, List<HoodieCleanFileInfo>> cleanOps = jsc\n           .parallelize(partitionsToClean, cleanerParallelism)\n           .map(partitionPathToClean -> Pair.of(partitionPathToClean, planner.getDeletePaths(partitionPathToClean)))\n           .collect().stream()\n-          .collect(Collectors.toMap(Pair::getKey, Pair::getValue));\n+          .collect(Collectors.toMap(Pair::getKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0NzA5OA==", "bodyText": "this is same as\npartitionCleanStat.addDeleteFilePatterns(deletePath.toString(), isBootstrapBasePathFile);\npartitionCleanStat.addDeletedFileResult(deletePath.toString(), deletedFileResult, isBootstrapBasePathFile);\n\nright", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467947098", "createdAt": "2020-08-10T14:34:10Z", "author": {"login": "vinothchandar"}, "path": "hudi-client/src/main/java/org/apache/hudi/table/action/clean/CleanActionExecutor.java", "diffHunk": "@@ -82,40 +83,45 @@ HoodieCleanerPlan requestClean(JavaSparkContext jsc) {\n       LOG.info(\"Using cleanerParallelism: \" + cleanerParallelism);\n \n       jsc.setJobGroup(this.getClass().getSimpleName(), \"Generates list of file slices to be cleaned\");\n-      Map<String, List<String>> cleanOps = jsc\n+      Map<String, List<HoodieCleanFileInfo>> cleanOps = jsc\n           .parallelize(partitionsToClean, cleanerParallelism)\n           .map(partitionPathToClean -> Pair.of(partitionPathToClean, planner.getDeletePaths(partitionPathToClean)))\n           .collect().stream()\n-          .collect(Collectors.toMap(Pair::getKey, Pair::getValue));\n+          .collect(Collectors.toMap(Pair::getKey,\n+            (y) -> y.getValue().stream().map(CleanFileInfo::toHoodieFileCleanInfo).collect(Collectors.toList())));\n \n       return new HoodieCleanerPlan(earliestInstant\n           .map(x -> new HoodieActionInstant(x.getTimestamp(), x.getAction(), x.getState().name())).orElse(null),\n-          config.getCleanerPolicy().name(), cleanOps, 1);\n+          config.getCleanerPolicy().name(), null, CleanPlanner.LATEST_CLEAN_PLAN_VERSION, cleanOps);\n     } catch (IOException e) {\n       throw new HoodieIOException(\"Failed to schedule clean operation\", e);\n     }\n   }\n \n-  private static PairFlatMapFunction<Iterator<Tuple2<String, String>>, String, PartitionCleanStat> deleteFilesFunc(\n-      HoodieTable table) {\n-    return (PairFlatMapFunction<Iterator<Tuple2<String, String>>, String, PartitionCleanStat>) iter -> {\n+  private static PairFlatMapFunction<Iterator<Tuple2<String, CleanFileInfo>>, String, PartitionCleanStat>\n+        deleteFilesFunc(HoodieTable table) {\n+    return (PairFlatMapFunction<Iterator<Tuple2<String, CleanFileInfo>>, String, PartitionCleanStat>) iter -> {\n       Map<String, PartitionCleanStat> partitionCleanStatMap = new HashMap<>();\n-\n       FileSystem fs = table.getMetaClient().getFs();\n-      Path basePath = new Path(table.getMetaClient().getBasePath());\n       while (iter.hasNext()) {\n-        Tuple2<String, String> partitionDelFileTuple = iter.next();\n+        Tuple2<String, CleanFileInfo> partitionDelFileTuple = iter.next();\n         String partitionPath = partitionDelFileTuple._1();\n-        String delFileName = partitionDelFileTuple._2();\n-        Path deletePath = FSUtils.getPartitionPath(FSUtils.getPartitionPath(basePath, partitionPath), delFileName);\n+        Path deletePath = new Path(partitionDelFileTuple._2().getFilePath());\n         String deletePathStr = deletePath.toString();\n         Boolean deletedFileResult = deleteFileAndGetResult(fs, deletePathStr);\n         if (!partitionCleanStatMap.containsKey(partitionPath)) {\n           partitionCleanStatMap.put(partitionPath, new PartitionCleanStat(partitionPath));\n         }\n+        boolean isBootstrapBasePathFile = partitionDelFileTuple._2().isBootstrapBaseFile();\n         PartitionCleanStat partitionCleanStat = partitionCleanStatMap.get(partitionPath);\n-        partitionCleanStat.addDeleteFilePatterns(deletePath.getName());\n-        partitionCleanStat.addDeletedFileResult(deletePath.getName(), deletedFileResult);\n+        if (isBootstrapBasePathFile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1Mzk5OQ==", "bodyText": "CollectionUtils.emptyList or something?", "url": "https://github.com/apache/hudi/pull/1870#discussion_r467953999", "createdAt": "2020-08-10T14:44:08Z", "author": {"login": "vinothchandar"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/HoodieCleanStat.java", "diffHunk": "@@ -39,17 +40,34 @@\n   private final List<String> successDeleteFiles;\n   // Files that could not be deleted\n   private final List<String> failedDeleteFiles;\n+  // Boostrap Base Path patterns that were generated for the delete operation\n+  private final List<String> deleteBootstrapBasePathPatterns;\n+  private final List<String> successDeleteBootstrapBaseFiles;\n+  // Files that could not be deleted\n+  private final List<String> failedDeleteBootstrapBaseFiles;\n   // Earliest commit that was retained in this clean\n   private final String earliestCommitToRetain;\n \n   public HoodieCleanStat(HoodieCleaningPolicy policy, String partitionPath, List<String> deletePathPatterns,\n       List<String> successDeleteFiles, List<String> failedDeleteFiles, String earliestCommitToRetain) {\n+    this(policy, partitionPath, deletePathPatterns, successDeleteFiles, failedDeleteFiles, earliestCommitToRetain,\n+        new ArrayList<>(), new ArrayList<>(), new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDM4NDY3", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-464438467", "createdAt": "2020-08-10T17:39:33Z", "commit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzozOTozM1rOG-YtQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo1NjowMFrOG-ZSHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2OTY5OQ==", "bodyText": "[typo] boostrap -> bootstrap", "url": "https://github.com/apache/hudi/pull/1870#discussion_r468069699", "createdAt": "2020-08-10T17:39:33Z", "author": {"login": "zhedoubushishi"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/HoodieCleanStat.java", "diffHunk": "@@ -39,17 +40,34 @@\n   private final List<String> successDeleteFiles;\n   // Files that could not be deleted\n   private final List<String> failedDeleteFiles;\n+  // Boostrap Base Path patterns that were generated for the delete operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MDQ3OA==", "bodyText": "[nit] wrong line", "url": "https://github.com/apache/hudi/pull/1870#discussion_r468070478", "createdAt": "2020-08-10T17:40:59Z", "author": {"login": "zhedoubushishi"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/HoodieCleanStat.java", "diffHunk": "@@ -18,6 +18,7 @@\n \n package org.apache.hudi.common;\n \n+import java.util.ArrayList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3NjE0Mg==", "bodyText": "[nit] wrong line", "url": "https://github.com/apache/hudi/pull/1870#discussion_r468076142", "createdAt": "2020-08-10T17:50:50Z", "author": {"login": "zhedoubushishi"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/table/timeline/versioning/clean/CleanPlanV2MigrationHandler.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.table.timeline.versioning.clean;\n+\n+import java.util.HashMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3OTEzMw==", "bodyText": "[nit] wrong line", "url": "https://github.com/apache/hudi/pull/1870#discussion_r468079133", "createdAt": "2020-08-10T17:56:00Z", "author": {"login": "zhedoubushishi"}, "path": "hudi-common/src/main/java/org/apache/hudi/common/util/CleanerUtils.java", "diffHunk": "@@ -26,39 +26,49 @@\n import org.apache.hudi.common.table.timeline.HoodieInstant;\n import org.apache.hudi.common.table.timeline.TimelineMetadataUtils;\n import org.apache.hudi.common.table.timeline.versioning.clean.CleanMetadataMigrator;\n-import org.apache.hudi.common.table.timeline.versioning.clean.CleanV1MigrationHandler;\n-import org.apache.hudi.common.table.timeline.versioning.clean.CleanV2MigrationHandler;\n+import org.apache.hudi.common.table.timeline.versioning.clean.CleanMetadataV1MigrationHandler;\n+import org.apache.hudi.common.table.timeline.versioning.clean.CleanMetadataV2MigrationHandler;\n \n import java.io.IOException;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.hudi.common.table.timeline.versioning.clean.CleanPlanMigrator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NjgzNzEx", "url": "https://github.com/apache/hudi/pull/1870#pullrequestreview-464683711", "createdAt": "2020-08-11T01:08:36Z", "commit": {"oid": "896828d0340183369b8faf0c96721f446c30135f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcad7aa9afca86e204dba67f678c2330bdc3fa41", "author": {"user": null}, "url": "https://github.com/apache/hudi/commit/dcad7aa9afca86e204dba67f678c2330bdc3fa41", "committedDate": "2020-08-11T05:19:53Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0e71b0416b4cd58c4e971f1d4a6807b08a34aa", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/ee0e71b0416b4cd58c4e971f1d4a6807b08a34aa", "committedDate": "2020-08-11T07:45:23Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "896828d0340183369b8faf0c96721f446c30135f", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/896828d0340183369b8faf0c96721f446c30135f", "committedDate": "2020-08-09T16:07:57Z", "message": "[HUDI-808] Support cleaning bootstrap source data"}, "afterCommit": {"oid": "ee0e71b0416b4cd58c4e971f1d4a6807b08a34aa", "author": {"user": {"login": "bvaradar", "name": "Balaji Varadarajan"}}, "url": "https://github.com/apache/hudi/commit/ee0e71b0416b4cd58c4e971f1d4a6807b08a34aa", "committedDate": "2020-08-11T07:45:23Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4702, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}