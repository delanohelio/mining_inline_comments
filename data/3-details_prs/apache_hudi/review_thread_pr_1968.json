{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3OTE0NjIx", "number": 1968, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzowMzo1M1rOEY6tvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTo0OTowMVrOEnytQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTYzMjYxOnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzowMzo1M1rOHBcQBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDowNzowM1rOHDAbZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI3MzQ3Ng==", "bodyText": "Can you update the key so that it could describe the thing: initialize the database automatically?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r471273476", "createdAt": "2020-08-17T07:03:53Z", "author": {"login": "yanghua"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -282,6 +282,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_CREATE_DATABASE_OPT_KEY = \"hoodie.datasource.hive_sync.create.database\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "694cb35d0192440e0e786a2cca15f6ea546e12b6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxNDc5MA==", "bodyText": "Okay, I am finished, please review\n@yanghua", "url": "https://github.com/apache/hudi/pull/1968#discussion_r472914790", "createdAt": "2020-08-19T10:07:03Z", "author": {"login": "liujinhui1994"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -282,6 +282,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_CREATE_DATABASE_OPT_KEY = \"hoodie.datasource.hive_sync.create.database\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI3MzQ3Ng=="}, "originalCommit": {"oid": "694cb35d0192440e0e786a2cca15f6ea546e12b6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDg5MTc2OnYy", "diffSide": "RIGHT", "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMDo1MTo0N1rOHEX8LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjozOTowOVrOHEdZVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0ODU4OQ==", "bodyText": "\"Create hive database\" -> \"Enable create hive database\"", "url": "https://github.com/apache/hudi/pull/1968#discussion_r474348589", "createdAt": "2020-08-21T00:51:47Z", "author": {"login": "yanghua"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Create hive database\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzNzk3Mw==", "bodyText": "ok", "url": "https://github.com/apache/hudi/pull/1968#discussion_r474437973", "createdAt": "2020-08-21T06:39:09Z", "author": {"login": "liujinhui1994"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Create hive database\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0ODU4OQ=="}, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDkwMDExOnYy", "diffSide": "RIGHT", "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMDo1Njo0OVrOHEYBFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDo0MzoxN1rOHPZnXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0OTg0Ng==", "bodyText": "I still have a question here. If we do not allow initializing hive database. Or if the database does not exist. Would affect the subsequent business logic?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r474349846", "createdAt": "2020-08-21T00:56:49Z", "author": {"login": "yanghua"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -117,11 +117,13 @@ private void syncHoodieTable(String tableName, boolean useRealtimeInputFormat) {\n     boolean tableExists = hoodieHiveClient.doesTableExist(tableName);\n \n     // check if the database exists else create it\n-    try {\n-      hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);\n-    } catch (Exception e) {\n-      // this is harmless since table creation will fail anyways, creation of DB is needed for in-memory testing\n-      LOG.warn(\"Unable to create database\", e);\n+    if (cfg.enableCreateDatabase) {\n+      try {\n+        hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQzNjE5Nw==", "bodyText": "The choice to create a database here is because hive database is usually only created by hive users, and other users have no permission to create hive tables.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r474436197", "createdAt": "2020-08-21T06:34:28Z", "author": {"login": "liujinhui1994"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -117,11 +117,13 @@ private void syncHoodieTable(String tableName, boolean useRealtimeInputFormat) {\n     boolean tableExists = hoodieHiveClient.doesTableExist(tableName);\n \n     // check if the database exists else create it\n-    try {\n-      hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);\n-    } catch (Exception e) {\n-      // this is harmless since table creation will fail anyways, creation of DB is needed for in-memory testing\n-      LOG.warn(\"Unable to create database\", e);\n+    if (cfg.enableCreateDatabase) {\n+      try {\n+        hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0OTg0Ng=="}, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2MTA0Mw==", "bodyText": "Should we just throw an error and exit if enableCreateDatabase=false and the database does not exist?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r480261043", "createdAt": "2020-08-31T16:56:10Z", "author": {"login": "vinothchandar"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -117,11 +117,13 @@ private void syncHoodieTable(String tableName, boolean useRealtimeInputFormat) {\n     boolean tableExists = hoodieHiveClient.doesTableExist(tableName);\n \n     // check if the database exists else create it\n-    try {\n-      hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);\n-    } catch (Exception e) {\n-      // this is harmless since table creation will fail anyways, creation of DB is needed for in-memory testing\n-      LOG.warn(\"Unable to create database\", e);\n+    if (cfg.enableCreateDatabase) {\n+      try {\n+        hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0OTg0Ng=="}, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ5MjYxNw==", "bodyText": "Yes, I have discussed with @liujinhui1994 off-line about this issue and asked him to find a way to check whether the database exists or not.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r480492617", "createdAt": "2020-09-01T00:22:19Z", "author": {"login": "yanghua"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -117,11 +117,13 @@ private void syncHoodieTable(String tableName, boolean useRealtimeInputFormat) {\n     boolean tableExists = hoodieHiveClient.doesTableExist(tableName);\n \n     // check if the database exists else create it\n-    try {\n-      hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);\n-    } catch (Exception e) {\n-      // this is harmless since table creation will fail anyways, creation of DB is needed for in-memory testing\n-      LOG.warn(\"Unable to create database\", e);\n+    if (cfg.enableCreateDatabase) {\n+      try {\n+        hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0OTg0Ng=="}, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxMDM2Nw==", "bodyText": "+1 on throwing the error.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r485910367", "createdAt": "2020-09-09T20:43:17Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncTool.java", "diffHunk": "@@ -117,11 +117,13 @@ private void syncHoodieTable(String tableName, boolean useRealtimeInputFormat) {\n     boolean tableExists = hoodieHiveClient.doesTableExist(tableName);\n \n     // check if the database exists else create it\n-    try {\n-      hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);\n-    } catch (Exception e) {\n-      // this is harmless since table creation will fail anyways, creation of DB is needed for in-memory testing\n-      LOG.warn(\"Unable to create database\", e);\n+    if (cfg.enableCreateDatabase) {\n+      try {\n+        hoodieHiveClient.updateHiveSQL(\"create database if not exists \" + cfg.databaseName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0OTg0Ng=="}, "originalCommit": {"oid": "c28e4801807d6dad4e904c5e154526af943399c7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjk5MDI3OnYy", "diffSide": "RIGHT", "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjo1NDowMlrOHKAsSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozMjozOVrOHRUBxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI1OTE0Nw==", "bodyText": "rename: autoCreateDatabase ?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r480259147", "createdAt": "2020-08-31T16:54:02Z", "author": {"login": "vinothchandar"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Enable create hive database\")\n+  public Boolean enableCreateDatabase = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2MDAxNw==", "bodyText": "Also should the value be true by default to preserve existing behavior", "url": "https://github.com/apache/hudi/pull/1968#discussion_r480260017", "createdAt": "2020-08-31T16:54:49Z", "author": {"login": "vinothchandar"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Enable create hive database\")\n+  public Boolean enableCreateDatabase = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI1OTE0Nw=="}, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTYyNA==", "bodyText": "@vinothchandar We do not let hudi create databases by default. So false seems to be ok :) @bvaradar to chime in here.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r485909624", "createdAt": "2020-09-09T20:41:46Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Enable create hive database\")\n+  public Boolean enableCreateDatabase = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI1OTE0Nw=="}, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkyMTk4Mg==", "bodyText": "https://lists.apache.org/thread.html/e1b7f97c774e1d7d7fc54fbb46db49aaf2e217303a50d9885150242d%40%3Cdev.hudi.apache.org%3E - this is what I am referring to. :)", "url": "https://github.com/apache/hudi/pull/1968#discussion_r485921982", "createdAt": "2020-09-09T21:06:18Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Enable create hive database\")\n+  public Boolean enableCreateDatabase = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI1OTE0Nw=="}, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxNTk3NQ==", "bodyText": "Ok, my bad. Missed changes for creation of hive database.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r487915975", "createdAt": "2020-09-14T13:32:39Z", "author": {"login": "pratyakshsharma"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java", "diffHunk": "@@ -71,6 +71,9 @@\n   @Parameter(names = {\"--use-jdbc\"}, description = \"Hive jdbc connect url\")\n   public Boolean useJdbc = true;\n \n+  @Parameter(names = {\"--enable-create-database\"}, description = \"Enable create hive database\")\n+  public Boolean enableCreateDatabase = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI1OTE0Nw=="}, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjk5NzMzOnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjo1NToxNVrOHKAxNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwMjoyMzo1OVrOHOKmKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2MDQwNQ==", "bodyText": "rename this well to .auto.create.database ?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r480260405", "createdAt": "2020-08-31T16:55:15Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -282,6 +282,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_CREATE_DATABASE_ENABLED_OPT_KEY = \"hoodie.datasource.hive_sync.create.database.enable\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDYxNTcyMQ==", "bodyText": "just bumping this. I think this naming is not more self-explanatory @liujinhui1994  wdyt?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r484615721", "createdAt": "2020-09-08T02:23:59Z", "author": {"login": "vinothchandar"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -282,6 +282,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_CREATE_DATABASE_ENABLED_OPT_KEY = \"hoodie.datasource.hive_sync.create.database.enable\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2MDQwNQ=="}, "originalCommit": {"oid": "cbf33682e63ce84e1b9a83689065846d4170ccc9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzM1MDk0OnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMTozNjowNVrOHU-www==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1NDoxOVrOHVosUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc2MTg1OQ==", "bodyText": "Following the existing style, it would be better hoodie.datasource.hive_sync.auto_create_database. WDYT?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r491761859", "createdAt": "2020-09-21T01:36:05Z", "author": {"login": "yanghua"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -290,6 +290,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_AUTO_CREATE_DATABASE_OPT_KEY = \"hoodie.datasource.hive_sync.auto.create.database\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c9deb3ac5c821b4455a64ae59481957921a2cb1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0ODg0OQ==", "bodyText": "ok,thanks for the suggestion", "url": "https://github.com/apache/hudi/pull/1968#discussion_r492448849", "createdAt": "2020-09-22T02:54:19Z", "author": {"login": "liujinhui1994"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -290,6 +290,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_AUTO_CREATE_DATABASE_OPT_KEY = \"hoodie.datasource.hive_sync.auto.create.database\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc2MTg1OQ=="}, "originalCommit": {"oid": "6c9deb3ac5c821b4455a64ae59481957921a2cb1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDgyMzI5OnYy", "diffSide": "RIGHT", "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoyMjowOFrOHYeKdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNjoyMjowOFrOHYeKdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyMjA3MQ==", "bodyText": "Can you follow the other pattern??? hoodie.datasource.hive_sync.xxx\nCheck it carefully, please.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r495422071", "createdAt": "2020-09-26T06:22:08Z", "author": {"login": "yanghua"}, "path": "hudi-spark/src/main/scala/org/apache/hudi/DataSourceOptions.scala", "diffHunk": "@@ -290,6 +290,7 @@ object DataSourceWriteOptions {\n   val HIVE_ASSUME_DATE_PARTITION_OPT_KEY = \"hoodie.datasource.hive_sync.assume_date_partitioning\"\n   val HIVE_USE_PRE_APACHE_INPUT_FORMAT_OPT_KEY = \"hoodie.datasource.hive_sync.use_pre_apache_input_format\"\n   val HIVE_USE_JDBC_OPT_KEY = \"hoodie.datasource.hive_sync.use_jdbc\"\n+  val HIVE_AUTO_CREATE_DATABASE_OPT_KEY = \"hoodie.datasource.hive_sync_auto_create_database\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f134be68e3c7746aaea59c4df0a198e516ea559c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTYwNzA0OnYy", "diffSide": "RIGHT", "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTo0OTowMVrOHYj19w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjowNzoxOVrOHYk_cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTEyNw==", "bodyText": "It's an open topic. IMHO, checkDatabaseExist is a better method name. WDYT?", "url": "https://github.com/apache/hudi/pull/1968#discussion_r495515127", "createdAt": "2020-09-27T01:49:01Z", "author": {"login": "yanghua"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java", "diffHunk": "@@ -336,6 +337,22 @@ public boolean doesTableExist(String tableName) {\n     }\n   }\n \n+  /**\n+   * @param databaseName\n+   * @return  true if the configured database exists\n+   */\n+  public boolean doesDataBaseExist(String databaseName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b613380156f77051b2f8c44b2066aabad83026e9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTQ4Ng==", "bodyText": "I refer to other names in the source code that also have similar functions", "url": "https://github.com/apache/hudi/pull/1968#discussion_r495515486", "createdAt": "2020-09-27T01:54:41Z", "author": {"login": "liujinhui1994"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java", "diffHunk": "@@ -336,6 +337,22 @@ public boolean doesTableExist(String tableName) {\n     }\n   }\n \n+  /**\n+   * @param databaseName\n+   * @return  true if the configured database exists\n+   */\n+  public boolean doesDataBaseExist(String databaseName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTEyNw=="}, "originalCommit": {"oid": "b613380156f77051b2f8c44b2066aabad83026e9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTYyNA==", "bodyText": "What do you think\uff1f if checkDatabaseExist is better, I am very willing to modify\n@yanghua", "url": "https://github.com/apache/hudi/pull/1968#discussion_r495515624", "createdAt": "2020-09-27T01:56:13Z", "author": {"login": "liujinhui1994"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java", "diffHunk": "@@ -336,6 +337,22 @@ public boolean doesTableExist(String tableName) {\n     }\n   }\n \n+  /**\n+   * @param databaseName\n+   * @return  true if the configured database exists\n+   */\n+  public boolean doesDataBaseExist(String databaseName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTEyNw=="}, "originalCommit": {"oid": "b613380156f77051b2f8c44b2066aabad83026e9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMzkzNw==", "bodyText": "What do you think\uff1f if checkDatabaseExist is better, I am very willing to modify\n@yanghua\n\nOK, keep the current name.", "url": "https://github.com/apache/hudi/pull/1968#discussion_r495533937", "createdAt": "2020-09-27T06:07:19Z", "author": {"login": "yanghua"}, "path": "hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java", "diffHunk": "@@ -336,6 +337,22 @@ public boolean doesTableExist(String tableName) {\n     }\n   }\n \n+  /**\n+   * @param databaseName\n+   * @return  true if the configured database exists\n+   */\n+  public boolean doesDataBaseExist(String databaseName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNTEyNw=="}, "originalCommit": {"oid": "b613380156f77051b2f8c44b2066aabad83026e9"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4429, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}