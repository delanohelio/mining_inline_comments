{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTk5NTI3", "number": 1239, "title": "[HUDI-551] Abstract a test case class for DFS Source to make it extensible", "bodyText": "What is the purpose of the pull request\nTestDFSSource class contains redundant code of the test logic for different Sources reading from DFS.  This PR abstracts a test case class for DFS Source to make it extensible.  It can be easily extended to run test for new DFS Source, such as CsvDFSSource to come in HUDI-76.\nBrief change log\n\nRefactored the code in TestDFSSource to add a new abstract class AbstractDFSSourceTestBase  to make the test of different DFS Source extensible.\nCreated separate new test classes, TestJsonDFSSource  for JsonDFSSource and TestParquetDFSSource for ParquetDFSSource.\nDeleted TestDFSSource class.\n\nVerify this pull request\nThis pull request is a code refactoring of the DFS Source tests, and the modified tests are verified to finish successfully.\nCommitter checklist\n\n\n Has a corresponding JIRA in PR title & commit\n\n\n Commit message is descriptive of the change\n\n\n CI is green\n\n\n Necessary doc changes done or have another open PR\n\n\n For large changes, please consider breaking it into sub-tasks under an umbrella JIRA.", "createdAt": "2020-01-17T07:06:51Z", "url": "https://github.com/apache/hudi/pull/1239", "merged": true, "mergeCommit": {"oid": "9489d0fb844208443a18964be878102e9560bd0d"}, "closed": true, "closedAt": "2020-01-19T10:50:12Z", "author": {"login": "yihua"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7doz2gFqTM0NDkyOTA4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb71r15gFqTM0NDk5MzI4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTI5MDg1", "url": "https://github.com/apache/hudi/pull/1239#pullrequestreview-344929085", "createdAt": "2020-01-18T06:46:19Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwNjo0NjoxOVrOFfJzTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwNjo0Njo1MFrOFfJzbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMDc2Ng==", "bodyText": "Based on the latest checkstyle about import, the order of these import statement is not correct.", "url": "https://github.com/apache/hudi/pull/1239#discussion_r368210766", "createdAt": "2020-01-18T06:46:19Z", "author": {"login": "yanghua"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/AbstractDFSSourceTestBase.java", "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities.sources;\n+\n+import static org.junit.Assert.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMDc4Mw==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1239#discussion_r368210783", "createdAt": "2020-01-18T06:46:37Z", "author": {"login": "yanghua"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestJsonDFSSource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities.sources;\n+\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMDc5Ng==", "bodyText": "ditto", "url": "https://github.com/apache/hudi/pull/1239#discussion_r368210796", "createdAt": "2020-01-18T06:46:50Z", "author": {"login": "yanghua"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestParquetDFSSource.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities.sources;\n+\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1875b16b569eca1df0cb33818110d0b91763f183", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/1875b16b569eca1df0cb33818110d0b91763f183", "committedDate": "2020-01-18T07:45:17Z", "message": "[MINOR] Abstract a test case class for DFS Source to make it extensible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2b8ead8d1a1fc024040cc75fcd842c9ef268e6", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/4e2b8ead8d1a1fc024040cc75fcd842c9ef268e6", "committedDate": "2020-01-18T07:45:21Z", "message": "Rearrange the test classes of DFS Source."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54032670a865e1498fa266648e3397f8f6908694", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/54032670a865e1498fa266648e3397f8f6908694", "committedDate": "2020-01-18T07:45:21Z", "message": "Fix import ordering."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "54032670a865e1498fa266648e3397f8f6908694", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/54032670a865e1498fa266648e3397f8f6908694", "committedDate": "2020-01-18T07:45:21Z", "message": "Fix import ordering."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTc2MTg3", "url": "https://github.com/apache/hudi/pull/1239#pullrequestreview-344976187", "createdAt": "2020-01-19T04:25:57Z", "commit": {"oid": "54032670a865e1498fa266648e3397f8f6908694"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNDoyNTo1N1rOFfNGcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwNDoyNTo1N1rOFfNGcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2NDgxOA==", "bodyText": "Would not get the point of this method, a bit of tricky.", "url": "https://github.com/apache/hudi/pull/1239#discussion_r368264818", "createdAt": "2020-01-19T04:25:57Z", "author": {"login": "leesf"}, "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/AbstractDFSSourceTestBase.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.utilities.sources;\n+\n+import org.apache.hudi.AvroConversionUtils;\n+import org.apache.hudi.common.HoodieTestDataGenerator;\n+import org.apache.hudi.common.model.HoodieRecord;\n+import org.apache.hudi.common.util.Option;\n+import org.apache.hudi.utilities.UtilitiesTestBase;\n+import org.apache.hudi.utilities.deltastreamer.SourceFormatAdapter;\n+import org.apache.hudi.utilities.schema.FilebasedSchemaProvider;\n+\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.LocatedFileStatus;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.fs.RemoteIterator;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.SparkSession;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * An abstract test base for {@link Source} using DFS as the file system.\n+ */\n+public abstract class AbstractDFSSourceTestBase extends UtilitiesTestBase {\n+\n+  FilebasedSchemaProvider schemaProvider;\n+  String dfsRoot;\n+  String fileSuffix;\n+  int fileCount = 1;\n+  HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n+\n+  @BeforeClass\n+  public static void initClass() throws Exception {\n+    UtilitiesTestBase.initClass();\n+  }\n+\n+  @AfterClass\n+  public static void cleanupClass() throws Exception {\n+    UtilitiesTestBase.cleanupClass();\n+  }\n+\n+  @Before\n+  public void setup() throws Exception {\n+    super.setup();\n+    schemaProvider = new FilebasedSchemaProvider(Helpers.setupSchemaOnDFS(), jsc);\n+  }\n+\n+  @After\n+  public void teardown() throws Exception {\n+    super.teardown();\n+  }\n+\n+  /**\n+   * Prepares the specific {@link Source} to test, by passing in necessary configurations.\n+   *\n+   * @return A {@link Source} using DFS as the file system.\n+   */\n+  abstract Source prepareDFSSource();\n+\n+  /**\n+   * Writes test data, i.e., a {@link List} of {@link HoodieRecord}, to a file on DFS.\n+   *\n+   * @param records Test data.\n+   * @param path    The path in {@link Path} of the file to write.\n+   * @throws IOException\n+   */\n+  abstract void writeNewDataToFile(List<HoodieRecord> records, Path path) throws IOException;\n+\n+  /**\n+   * Generates a batch of test data and writes the data to a file.  This can be called multiple times to generate multiple files.\n+   *\n+   * @return The {@link Path} of the file.\n+   * @throws IOException\n+   */\n+  Path generateOneFile() throws IOException {\n+    Path path = new Path(dfsRoot, fileCount + fileSuffix);\n+    switch (fileCount) {\n+      case 1:\n+        writeNewDataToFile(dataGenerator.generateInserts(\"000\", 100), path);\n+        fileCount++;\n+        return path;\n+      case 2:\n+        writeNewDataToFile(dataGenerator.generateInserts(\"001\", 10000), path);\n+        fileCount++;\n+        return path;\n+      default:\n+        return null;\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54032670a865e1498fa266648e3397f8f6908694"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a589e984a37b49406b8372a31e08f80b8c981cc", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/4a589e984a37b49406b8372a31e08f80b8c981cc", "committedDate": "2020-01-19T05:52:36Z", "message": "Simplify the generateOneFile() method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33a19a68c014682884e06f0348348747db790ed4", "author": {"user": {"login": "yihua", "name": "Y Ethan Guo"}}, "url": "https://github.com/apache/hudi/commit/33a19a68c014682884e06f0348348747db790ed4", "committedDate": "2020-01-19T05:58:04Z", "message": "Remove redundant comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTkzMjgz", "url": "https://github.com/apache/hudi/pull/1239#pullrequestreview-344993283", "createdAt": "2020-01-19T10:49:19Z", "commit": {"oid": "33a19a68c014682884e06f0348348747db790ed4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4098, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}