{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTc1MzI3", "number": 889, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjowOTo1NFrODoTUaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1ODoyMVrODosLVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTg2MTU1OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjowOTo1NFrOF2xELA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjowOTo1NFrOF2xELA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3MTMwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Json.encode(cli.getRespHeaders().entries()));\n          \n          \n            \n                    () -> Json.encode(cli.getRespHeaders().entries()));\n          \n      \n    \n    \n  \n\nAvoid encoding when debug logging is diabled.", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r392971308", "createdAt": "2020-03-16T12:09:54Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -1108,14 +1092,13 @@ private void authForSystemInterface(ModuleDescriptor authMod, RoutingEntry filt,\n     ModuleInstance authInst = new ModuleInstance(authMod, filt, inst.getPath(), HttpMethod.HEAD, inst.isHandler());\n     doCallSystemInterface(headers, tenantId, null, authInst, modPerms, \"\", res -> {\n       if (res.failed()) {\n-        logger.warn(\"Auth check for systemInterface failed!\");\n-        fut.handle(new Failure<>(res.getType(), res.cause()));\n+        fut.handle(res);\n         return;\n       }\n       OkapiClient cli = res.result();\n       String deftok = cli.getRespHeaders().get(XOkapiHeaders.TOKEN);\n-      logger.debug(\"authForSystemInterface:\"\n-        + Json.encode(cli.getRespHeaders().entries()));\n+      logger.debug(\"authForSystemInterface: {}\",\n+        Json.encode(cli.getRespHeaders().entries()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTg2NTk5OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoxMToxNlrOF2xG6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoxMToxNlrOF2xG6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3MjAwOA==", "bodyText": "Good!", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r392972008", "createdAt": "2020-03-16T12:11:16Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -1033,7 +1017,7 @@ private DeploymentDescriptor pickInstance(List<DeploymentDescriptor> instances)\n    */\n   public void callSystemInterface(Tenant tenant, ModuleInstance inst,\n     String request, ProxyContext pc,\n-    Handler<ExtendedAsyncResult<OkapiClient>> fut) {\n+    Handler<AsyncResult<OkapiClient>> fut) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTkyOTc0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/MainVerticle.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjoyNzo1MlrOF2xuHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxNDo0M1rOF3ZlDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk4MjA0NQ==", "bodyText": "If it is intentional that the failure is only logged and not reported via promise there should be a // comment saying so.", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r392982045", "createdAt": "2020-03-16T12:27:52Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/MainVerticle.java", "diffHunk": "@@ -457,7 +434,7 @@ private void checkSuperTenant(String okapiModule, Promise<Void> promise) {\n       if (res.succeeded()) {\n         logger.info(\"Deploy completed succesfully\");\n       } else {\n-        logger.info(\"Deploy failed: {}\", res.cause());\n+        logger.info(\"Deploy failed\", res.cause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAzNjY5MQ==", "bodyText": "It should probably report failure, but I'd rather not change behavior WRT this, so I'll add a comment.", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r393036691", "createdAt": "2020-03-16T13:51:51Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/MainVerticle.java", "diffHunk": "@@ -457,7 +434,7 @@ private void checkSuperTenant(String okapiModule, Promise<Void> promise) {\n       if (res.succeeded()) {\n         logger.info(\"Deploy completed succesfully\");\n       } else {\n-        logger.info(\"Deploy failed: {}\", res.cause());\n+        logger.info(\"Deploy failed\", res.cause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk4MjA0NQ=="}, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNTA4NA==", "bodyText": "Created an issue for this: https://issues.folio.org/browse/OKAPI-816", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r393635084", "createdAt": "2020-03-17T12:14:43Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/MainVerticle.java", "diffHunk": "@@ -457,7 +434,7 @@ private void checkSuperTenant(String okapiModule, Promise<Void> promise) {\n       if (res.succeeded()) {\n         logger.info(\"Deploy completed succesfully\");\n       } else {\n-        logger.info(\"Deploy failed: {}\", res.cause());\n+        logger.info(\"Deploy failed\", res.cause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk4MjA0NQ=="}, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 230}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTk1NTk1OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/PullManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjozMjo1NFrOF2x-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjozMjo1NFrOF2x-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk4NjI3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.warn(\"pull for {} failed with status {}\", baseUrl,\n          \n          \n            \n                      res1.cause().getMessage());\n          \n          \n            \n                    logger.warn(\"pull for {} failed: {}\", baseUrl,\n          \n          \n            \n                      res1.cause().getMessage(), res1);\n          \n      \n    \n    \n  \n\nAdd stacktrace.", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r392986276", "createdAt": "2020-03-16T12:32:54Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/PullManager.java", "diffHunk": "@@ -52,17 +52,17 @@ private void getRemoteUrl(Iterator<String> it,\n     final Buffer body = Buffer.buffer();\n     HttpClientRequest req = httpClient.getAbs(url, res1 -> {\n       if (res1.failed()) {\n-        logger.info(\"pull for \" + baseUrl + \" failed with status \"\n-          + res1.cause().getMessage());\n+        logger.warn(\"pull for {} failed with status {}\", baseUrl,\n+          res1.cause().getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzOTkzNDI4OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTo1ODoyMVrOF3ZENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDozMTozN1rOF4ohtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNjY3Ng==", "bodyText": "The duplicate code should be extracted into a method:\n private void undeployFirstAndDeploy(TestContext context, JsonObject aConf, Handler<AsyncResult<String>> fut) {\n   Async myAsync = context.async();\n   undeployFirst(context.asyncAssertSuccess(handler -> {\n     DeploymentOptions opt = new DeploymentOptions().setConfig(aConf);\n     vertx.deployVerticle(MainVerticle.class.getName(), opt, res -> {\n       fut.handle(res);\n       myAsync.complete();\n     });\n   }));\n   myAsync.await(2000);\n }\n\n private void undeployFirstAndDeploy(TestContext context, JsonObject aConf) {\n   undeployFirstAndDeploy(context, aConf, context.asyncAssertSuccess());\n }\n\nExample usage:\nundeployFirstAndDeploy(context, conf);\n\nundeployFirstAndDeploy(context, conf, context.asyncAssertFailure(cause -> {\n  Assert.assertThat(cause.getMessage(), containsString(\n      \"password authentication failed for user \\\"okapi\\\"\"));\n}));", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r393626676", "createdAt": "2020-03-17T11:58:21Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -2681,32 +2683,97 @@ private void undeployFirst(Handler<AsyncResult<Void>> fut) {\n   }\n \n   @Test\n-  public void testInternalModule(TestContext context) {\n-    logger.info(\"testInternalModule 1\");\n+  public void testInitdatabase(TestContext context) {\n+    conf.remove(\"mongo_db_init\");\n+    conf.remove(\"postgres_db_init\");\n+    conf.put(\"mode\", \"initdatabase\");\n     async = context.async();\n     undeployFirst(x -> {\n-      conf.remove(\"mongo_db_init\");\n-      conf.remove(\"postgres_db_init\");\n+      DeploymentOptions opt = new DeploymentOptions().setConfig(conf);\n+      vertx.deployVerticle(MainVerticle.class.getName(), opt, res -> {\n+        context.assertTrue(res.succeeded());\n+        async.complete();\n+      });\n+    });\n+    async.await(1000);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkyODU2Nw==", "bodyText": "ok. Done", "url": "https://github.com/folio-org/okapi/pull/889#discussion_r394928567", "createdAt": "2020-03-19T10:31:37Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -2681,32 +2683,97 @@ private void undeployFirst(Handler<AsyncResult<Void>> fut) {\n   }\n \n   @Test\n-  public void testInternalModule(TestContext context) {\n-    logger.info(\"testInternalModule 1\");\n+  public void testInitdatabase(TestContext context) {\n+    conf.remove(\"mongo_db_init\");\n+    conf.remove(\"postgres_db_init\");\n+    conf.put(\"mode\", \"initdatabase\");\n     async = context.async();\n     undeployFirst(x -> {\n-      conf.remove(\"mongo_db_init\");\n-      conf.remove(\"postgres_db_init\");\n+      DeploymentOptions opt = new DeploymentOptions().setConfig(conf);\n+      vertx.deployVerticle(MainVerticle.class.getName(), opt, res -> {\n+        context.assertTrue(res.succeeded());\n+        async.complete();\n+      });\n+    });\n+    async.await(1000);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNjY3Ng=="}, "originalCommit": {"oid": "0179852657bb4c6af67f96d67f2d67e3358d3360"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 219, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}