{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzQ2NzYy", "number": 1036, "title": "Upgrade okapi module for tenants OKAPI-930", "bodyText": "Updates okapi modules for all tenants that have okapi module enabled already (supertenant always has okapi module enabled by default). Downgrade also possible, but it will refuse to downgrade to major lower version.\nThis PR also include a serious error for the mongo storage.\nAlso includes various fixes to MainDeployTest plus major clean up of ModuleTest.", "createdAt": "2020-11-06T13:34:15Z", "url": "https://github.com/folio-org/okapi/pull/1036", "merged": true, "mergeCommit": {"oid": "0b884937b90decb7fd58ae962e68beb169ea7874"}, "closed": true, "closedAt": "2020-11-17T12:18:08Z", "author": {"login": "adamdickmeiss"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ22FAgH2gAyNTE2NzQ2NzYyOjA4OTc2ZGMxZTdjNDAwODhkYmNiNTY3ZmQ4NjZjZDRjNDBmZDhhMWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddYZA8gH2gAyNTE2NzQ2NzYyOjI0MTkwY2VhZGUzZWEzYTdhM2Y4YTc2MmEwNmU3OTBjNzAwNWY0ZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "08976dc1e7c40088dbcb567fd866cd4c40fd8a1e", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/08976dc1e7c40088dbcb567fd866cd4c40fd8a1e", "committedDate": "2020-11-06T13:19:17Z", "message": "A lot of clean up in MainDeployTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2d13b8290bbddcb22082d88cf829e6b296afee", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/ff2d13b8290bbddcb22082d88cf829e6b296afee", "committedDate": "2020-11-06T13:32:02Z", "message": "Upgrade Okapi for all tenants OKAPI-930"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a6e151b3d5e946ce2d96495ccfc7a1387e37b8c", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/0a6e151b3d5e946ce2d96495ccfc7a1387e37b8c", "committedDate": "2020-11-06T14:26:55Z", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-930-upgrade-okapi-module-for-tenants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffb4cdf7a02d323720fc46e326f3c7ee338d88c8", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/ffb4cdf7a02d323720fc46e326f3c7ee338d88c8", "committedDate": "2020-11-06T15:48:32Z", "message": "Fix deployment mode that uses local maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5d537114254a5e6a8061bf9f189b46ed89d021", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/0d5d537114254a5e6a8061bf9f189b46ed89d021", "committedDate": "2020-11-06T15:57:21Z", "message": "Unused logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a8f8b0833a54f880a672ccab50181859dc21e2f", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/3a8f8b0833a54f880a672ccab50181859dc21e2f", "committedDate": "2020-11-06T16:09:29Z", "message": "Unused function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a7fb348807e16c54eed0164cee93ea070e56674", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/7a7fb348807e16c54eed0164cee93ea070e56674", "committedDate": "2020-11-06T16:09:36Z", "message": "Unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9fec55c44d5180c84605c5faba345721456fad1", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/a9fec55c44d5180c84605c5faba345721456fad1", "committedDate": "2020-11-06T16:22:21Z", "message": "Further checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MzA1ODMz", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-528305833", "createdAt": "2020-11-11T15:59:44Z", "commit": {"oid": "a9fec55c44d5180c84605c5faba345721456fad1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNTo1OTo0NFrOHxTZFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNTo1OTo0NFrOHxTZFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ1OTk5MQ==", "bodyText": "This indentation allows to remove @SuppressWarnings(\"indentation\"):\nreturn moduleManager.get(okapiModule).compose(\n    gres -> {\n      // we already have one, go on\n      logger.debug(\"checkInternalModules: Already have {} \"\n          + \" with interface version {}\", okapiModule, interfaceVersion);\n      // See Okapi-359 about version checks across the cluster\n      return Future.succeededFuture();\n    },\n    cause -> {\n      if (OkapiError.getType(cause) != ErrorType.NOT_FOUND) {\n        return Future.failedFuture(cause); // something went badly wrong\n      }\n      logger.debug(\"Creating the internal Okapi module {} with interface version {}\",\n          okapiModule, interfaceVersion);\n      return moduleManager.create(md, true, true, true);\n    })\n    .compose(x -> checkSuperTenant(okapiModule));", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r521459991", "createdAt": "2020-11-11T15:59:44Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/MainVerticle.java", "diffHunk": "@@ -244,93 +243,45 @@ public void start(Promise<Void> promise) {\n     return tenantManager.init(vertx);\n   }\n \n+  @SuppressWarnings(\"indentation\")\n   private Future<Void> checkInternalModules() {\n     logger.info(\"checkInternalModules\");\n-    Promise<Void> promise = Promise.promise();\n     final ModuleDescriptor md = InternalModule.moduleDescriptor(okapiVersion);\n     final String okapiModule = md.getId();\n     final String interfaceVersion = md.getProvides()[0].getVersion();\n-    moduleManager.get(okapiModule).onSuccess(gres -> {\n+    return moduleManager.get(okapiModule).compose(gres -> {\n       // we already have one, go on\n       logger.debug(\"checkInternalModules: Already have {} \"\n           + \" with interface version {}\", okapiModule, interfaceVersion);\n       // See Okapi-359 about version checks across the cluster\n-      checkSuperTenant(okapiModule, promise);\n-    }).onFailure(cause -> {\n+      return Future.succeededFuture();\n+    }, cause -> {\n       if (OkapiError.getType(cause) != ErrorType.NOT_FOUND) {\n-        promise.fail(cause); // something went badly wrong\n-        return;\n+        return Future.failedFuture(cause); // something went badly wrong\n       }\n       logger.debug(\"Creating the internal Okapi module {} with interface version {}\",\n           okapiModule, interfaceVersion);\n-      moduleManager.create(md, true, true, true).onFailure(cause1 ->\n-          promise.fail(cause1) // something went badly wrong\n-      ).onSuccess(ires -> {\n-        checkSuperTenant(okapiModule, promise);\n-      });\n-    });\n-    return promise.future();\n+      return moduleManager.create(md, true, true, true);\n+    }).compose(x -> checkSuperTenant(okapiModule));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9fec55c44d5180c84605c5faba345721456fad1"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca8ff9743f5cbdb535a080f9c7a267bdb148a3c", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/7ca8ff9743f5cbdb535a080f9c7a267bdb148a3c", "committedDate": "2020-11-11T19:27:21Z", "message": "Merge branch 'master' into OKAPI-930-upgrade-okapi-module-for-tenants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7aafeb6518e3fc22dab9b7104c9959759f1dca", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/db7aafeb6518e3fc22dab9b7104c9959759f1dca", "committedDate": "2020-11-12T09:08:25Z", "message": "ModuleTest refactor (Future, async)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00933a9f0f7d3ecd46f58181fa53a96126f1c30d", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/00933a9f0f7d3ecd46f58181fa53a96126f1c30d", "committedDate": "2020-11-12T09:34:51Z", "message": "redeploy with async wait"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1e8d5bb2a4741fd6791cafb1abe3840c771328", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/5c1e8d5bb2a4741fd6791cafb1abe3840c771328", "committedDate": "2020-11-12T09:45:50Z", "message": "Only use db_init for setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e399363c5f560dd97ced60fc8d174dab39969fb", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/5e399363c5f560dd97ced60fc8d174dab39969fb", "committedDate": "2020-11-12T12:42:08Z", "message": "Fix waiting for tests to stop in MainDeployTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6784a0874b34b8fc85ae8c9e32fbe71f05e76aef", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/6784a0874b34b8fc85ae8c9e32fbe71f05e76aef", "committedDate": "2020-11-12T13:32:17Z", "message": "Check permissions for Okapi module upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b49a65c43bff9b1d710c1432c1948e81454dc3db", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/b49a65c43bff9b1d710c1432c1948e81454dc3db", "committedDate": "2020-11-12T13:45:20Z", "message": "Fix tests (tenant not preserved in inmemory mode)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab8db6793775fbf4a4f42d139cf778f8937916c5", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/ab8db6793775fbf4a4f42d139cf778f8937916c5", "committedDate": "2020-11-12T14:02:15Z", "message": "Mongo does not restore header-1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab6f648c9bb6308f3379c7a79fa3b3f02e439173", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/ab6f648c9bb6308f3379c7a79fa3b3f02e439173", "committedDate": "2020-11-12T15:55:54Z", "message": "Header module saves permissions per tenant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12dfbf80049af14dcbde28e43832c3740485a586", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/12dfbf80049af14dcbde28e43832c3740485a586", "committedDate": "2020-11-12T16:03:21Z", "message": "Import sort order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6dc1b63383d9350ddffc4bda180540a913a80c0", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/b6dc1b63383d9350ddffc4bda180540a913a80c0", "committedDate": "2020-11-12T17:38:11Z", "message": "Fix Mongo Json decode\n\nIn particular, header-1, which is an unsual module ID was\nnot decoded properly from Mongo storage."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5716177ac49b1d731b782492f2b91303cc940802", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/5716177ac49b1d731b782492f2b91303cc940802", "committedDate": "2020-11-13T21:03:12Z", "message": "Changing log messages a bit for Okapi upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/666b739d11ec7033a4224cb22c027a156a95a0bb", "committedDate": "2020-11-13T21:04:29Z", "message": "Merge branch 'master' into OKAPI-930-upgrade-okapi-module-for-tenants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTYyNTY3", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-531562567", "createdAt": "2020-11-16T17:48:55Z", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0ODo1NVrOH0KcZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0ODo1NVrOH0KcZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1OTExMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Get a module descriptor from ID and return Error if not found.\n          \n          \n            \n               * Get a module descriptor from ID, if not found the Future will fail with\n          \n          \n            \n               * an {@link OkapiError} with {@link ErrorType#NOT_FOUND}.", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r524459110", "createdAt": "2020-11-16T17:48:55Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ModuleManager.java", "diffHunk": "@@ -193,15 +185,12 @@ private void invalidateCacheEntry(String id) {\n   }\n \n   /**\n-   * Get a module descriptor from ID.\n+   * Get a module descriptor from ID and return Error if not found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTkwMTYz", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-531590163", "createdAt": "2020-11-16T18:24:29Z", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyNDozMFrOH0Lx7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyNDozMFrOH0Lx7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4MTAwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Future<ModuleDescriptor> future1 = moduleTo != null\n          \n          \n            \n                    ?  moduleManager.getLatest(moduleTo) : Future.succeededFuture(null);\n          \n          \n            \n                return future1.compose(mdTo -> {\n          \n          \n            \n                  Future<ModuleDescriptor> future2 = moduleFrom != null\n          \n          \n            \n                      ? moduleManager.get(moduleFrom) : Future.succeededFuture(null);\n          \n          \n            \n                  return future2.compose(mdFrom -> {\n          \n          \n            \n                    Future<Void> future3 = options.getDepCheck()\n          \n          \n            \n                        ? enableAndDisableCheck(tenant, mdFrom, mdTo) : Future.succeededFuture();\n          \n          \n            \n                    return future3\n          \n          \n            \n                        .compose(x -> enableAndDisableModule(tenant, options, mdFrom, mdTo, pc));\n          \n          \n            \n                  });\n          \n          \n            \n                });\n          \n          \n            \n                Future<ModuleDescriptor> mdFrom = moduleFrom != null\n          \n          \n            \n                    ? moduleManager.get(moduleFrom) : Future.succeededFuture(null);\n          \n          \n            \n                Future<ModuleDescriptor> mdTo = moduleTo != null\n          \n          \n            \n                    ? moduleManager.getLatest(moduleTo) : Future.succeededFuture(null);\n          \n          \n            \n                return mdFrom\n          \n          \n            \n                    .compose(x -> mdTo)\n          \n          \n            \n                    .compose(x -> options.getDepCheck()\n          \n          \n            \n                          ? enableAndDisableCheck(tenant, mdFrom.result(), mdTo.result())\n          \n          \n            \n                          : Future.succeededFuture())\n          \n          \n            \n                    .compose(x -> enableAndDisableModule(tenant, options, mdFrom.result(), mdTo.result(), pc));", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r524481006", "createdAt": "2020-11-16T18:24:30Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java", "diffHunk": "@@ -268,30 +247,30 @@ public void setProxyService(ProxyService px) {\n     });\n   }\n \n-\n   Future<String> enableAndDisableModule(\n       String tenantId, TenantInstallOptions options, String moduleFrom,\n       TenantModuleDescriptor td, ProxyContext pc) {\n \n-    return tenants.getNotFound(tenantId)\n-        .compose(tenant -> Future.succeededFuture()\n-            .compose(res -> {\n-              if (td == null) {\n-                return Future.succeededFuture(null);\n-              }\n-              return moduleManager.getLatest(td.getId());\n-            }).compose(mdTo ->\n-                moduleManager.get(moduleFrom).compose(mdFrom -> {\n-                  Future<Void> future = Future.succeededFuture();\n-                  if (options.getDepCheck()) {\n-                    future = future\n-                        .compose(x -> enableAndDisableCheck(tenant, mdFrom, mdTo));\n-                  }\n-                  return future\n-                      .compose(x -> enableAndDisableModule(tenant, options, mdFrom, mdTo, pc));\n-                })\n-            )\n-        );\n+    return tenants.getNotFound(tenantId).compose(tenant ->\n+        enableAndDisableModule(tenant, options, moduleFrom, td != null ? td.getId() : null, pc));\n+  }\n+\n+  private Future<String> enableAndDisableModule(\n+      Tenant tenant, TenantInstallOptions options, String moduleFrom,\n+      String moduleTo, ProxyContext pc) {\n+\n+    Future<ModuleDescriptor> future1 = moduleTo != null\n+        ?  moduleManager.getLatest(moduleTo) : Future.succeededFuture(null);\n+    return future1.compose(mdTo -> {\n+      Future<ModuleDescriptor> future2 = moduleFrom != null\n+          ? moduleManager.get(moduleFrom) : Future.succeededFuture(null);\n+      return future2.compose(mdFrom -> {\n+        Future<Void> future3 = options.getDepCheck()\n+            ? enableAndDisableCheck(tenant, mdFrom, mdTo) : Future.succeededFuture();\n+        return future3\n+            .compose(x -> enableAndDisableModule(tenant, options, mdFrom, mdTo, pc));\n+      });\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjM2NTA0", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-531636504", "createdAt": "2020-11-16T19:26:42Z", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOToyNjo0MlrOH0OCkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOToyNjo0MlrOH0OCkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUxODAzMg==", "bodyText": "The comment should be removed.", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r524518032", "createdAt": "2020-11-16T19:26:42Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/MainDeployTest.java", "diffHunk": "@@ -22,30 +22,28 @@\n public class MainDeployTest {\n \n   private final Logger logger = OkapiLogger.get();\n-  private final int port = 9230;\n-  private Async async;\n-  private Vertx vertx;\n-  private RamlDefinition api;\n+  private static final int port = 9230;\n+  // private Async async;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjQwMDk3", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-531640097", "createdAt": "2020-11-16T19:31:37Z", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTozMTozN1rOH0ONdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTozMTozN1rOH0ONdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyMDgyMw==", "bodyText": "@After can be changed to @AfterClass, setProperty can be changed to clearProperty.", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r524520823", "createdAt": "2020-11-16T19:31:37Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/MainDeployTest.java", "diffHunk": "@@ -22,30 +22,28 @@\n public class MainDeployTest {\n \n   private final Logger logger = OkapiLogger.get();\n-  private final int port = 9230;\n-  private Async async;\n-  private Vertx vertx;\n-  private RamlDefinition api;\n+  private static final int port = 9230;\n+  // private Async async;\n+  private static RamlDefinition api;\n \n-  @Before\n-  public void setUp(TestContext context) {\n+  @BeforeClass\n+  public static void setupBeforeClass(TestContext context) {\n     System.setProperty(\"vertx.logger-delegate-factory-class-name\",\n         \"io.vertx.core.logging.Log4jLogDelegateFactory\");\n     // can't set Verticle options so we set a property instead\n     System.setProperty(\"port\", Integer.toString(port));\n-    async = context.async();\n     api = RamlLoaders.fromFile(\"src/main/raml\").load(\"okapi.raml\");\n     RestAssured.port = port;\n-    async.complete();\n+  }\n+\n+  @Before\n+  public void setup(TestContext context) {\n+    System.setProperty(\"port\", Integer.toString(port));\n   }\n \n   @After\n   public void tearDown(TestContext context) {\n     System.setProperty(\"port\", \"\"); // disable port by emptying it\n-    if (vertx != null) {\n-      vertx.close(context.asyncAssertSuccess());\n-      vertx = null;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjQ1NjIx", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-531645621", "createdAt": "2020-11-16T19:39:10Z", "commit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTozOToxMFrOH0OduQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTozOToxMFrOH0OduQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyNDk4NQ==", "bodyText": "countDown() should be replaced by complete()", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r524524985", "createdAt": "2020-11-16T19:39:10Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/MainDeployTest.java", "diffHunk": "@@ -236,87 +189,53 @@ public void testClusterMode(TestContext context) {\n         .then().statusCode(200).log().ifValidationFails().extract().response();\n       Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n         c.getLastReport().isEmpty());\n-      async.complete();\n-    });\n+      vertx.close(context.asyncAssertSuccess(x -> async.complete()));\n+    }));\n+    async.await();\n   }\n \n   @Test\n   public void testClusterModeFail1(TestContext context) {\n-    async = context.async();\n-\n     String[] args = {\"cluster\", \"-cluster-host\", \"foobar\", \"-cluster-port\", \"5701\"};\n \n     MainDeploy d = new MainDeploy();\n-    d.init(args, res -> {\n-      vertx = res.succeeded() ? res.result() : null;\n-      Assert.assertTrue(\"main1 \" + res.cause(), res.failed());\n-      async.complete();\n-    });\n-    async.await(1000);\n+    d.init(args, context.asyncAssertFailure());\n   }\n \n   @Test\n   public void testClusterModeFail2(TestContext context) {\n-    async = context.async();\n-\n     String[] args = {\"cluster\", \"-hazelcast-config-file\", \"foobar\"};\n-\n     MainDeploy d = new MainDeploy();\n-    d.init(args, res -> {\n-      vertx = res.succeeded() ? res.result() : null;\n-      Assert.assertTrue(\"main1 \" + res.cause(), res.failed());\n-      async.complete();\n-    });\n-    async.await(1000);\n+    d.init(args, context.asyncAssertFailure());\n   }\n \n   @Test\n   public void testClusterModeFail3(TestContext context) {\n-    async = context.async();\n-\n     String[] args = {\"cluster\", \"-hazelcast-config-cp\", \"foobar\"};\n-\n     MainDeploy d = new MainDeploy();\n-    d.init(args, res -> {\n-      vertx = res.succeeded() ? res.result() : null;\n-      Assert.assertTrue(\"main1 \" + res.cause(), res.failed());\n-      async.complete();\n-    });\n-    async.await(1000);\n+    d.init(args, context.asyncAssertFailure());\n   }\n \n   @Test\n   public void testClusterModeFail4(TestContext context) {\n-    async = context.async();\n-\n     String[] args = {\"cluster\", \"-hazelcast-config-url\", \"foobar\"};\n \n     MainDeploy d = new MainDeploy();\n-    d.init(args, res -> {\n-      vertx = res.succeeded() ? res.result() : null;\n-      Assert.assertTrue(\"main1 \" + res.cause(), res.failed());\n-      async.complete();\n-    });\n-    async.await(1000);\n+    d.init(args, context.asyncAssertFailure());\n   }\n \n   @Test\n   public void testOkapiSamePort(TestContext context) {\n-    async = context.async();\n-\n     String[] args = {\"dev\"};\n \n+    Async async = context.async();\n     MainDeploy d1 = new MainDeploy();\n-    d1.init(args, res1 -> {\n-      vertx = res1.succeeded() ? res1.result() : null;\n-      Assert.assertTrue(\"d1 \" + res1.cause(), res1.succeeded());\n-\n+    d1.init(args, context.asyncAssertSuccess(vertx -> {\n       MainDeploy d2 = new MainDeploy();\n-      d2.init(args, res2 -> {\n-        Assert.assertTrue(\"d2 \" + res2.cause(), res2.failed());\n-        async.complete();\n-      });\n-    });\n+      d2.init(args, context.asyncAssertFailure(\n+          x -> vertx.close(context.asyncAssertSuccess(y -> async.countDown()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "666b739d11ec7033a4224cb22c027a156a95a0bb"}, "originalPosition": 348}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a49bfabe54f6a496912af9ddae57e4397451ffde", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/a49bfabe54f6a496912af9ddae57e4397451ffde", "committedDate": "2020-11-17T06:58:36Z", "message": "Update okapi-core/src/main/java/org/folio/okapi/managers/ModuleManager.java\n\nCo-authored-by: julianladisch <julianladisch@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1aa3937c3e4e12a176d31e88426aa909c805012", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/f1aa3937c3e4e12a176d31e88426aa909c805012", "committedDate": "2020-11-17T07:06:43Z", "message": "Better JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9d09948dce22ee35e4360d99d1974d3ff32b87", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/fa9d09948dce22ee35e4360d99d1974d3ff32b87", "committedDate": "2020-11-17T07:06:52Z", "message": "Simplify construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bd5cbc3a72ece1609318ef14eb360af46a7e67d", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/3bd5cbc3a72ece1609318ef14eb360af46a7e67d", "committedDate": "2020-11-17T07:07:12Z", "message": "Port property only needs setting once"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1335aea227398273986a81c32cf35ff48919c16", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/f1335aea227398273986a81c32cf35ff48919c16", "committedDate": "2020-11-17T07:07:56Z", "message": "Unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e2218793d4a6bc25c1ad4759042cbaa4de6fb69", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/3e2218793d4a6bc25c1ad4759042cbaa4de6fb69", "committedDate": "2020-11-17T07:08:05Z", "message": "Async complete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbdeec047ac9cd2dcbb4808b58a90d3e00c9a4be", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/dbdeec047ac9cd2dcbb4808b58a90d3e00c9a4be", "committedDate": "2020-11-17T07:08:30Z", "message": "Merge branch 'OKAPI-930-upgrade-okapi-module-for-tenants' of github.com:folio-org/okapi into OKAPI-930-upgrade-okapi-module-for-tenants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "806752cf0c9b840f98fe5011039cf46abe339558", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/806752cf0c9b840f98fe5011039cf46abe339558", "committedDate": "2020-11-17T07:08:54Z", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-930-upgrade-okapi-module-for-tenants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjY0ODgx", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-532264881", "createdAt": "2020-11-17T11:23:24Z", "commit": {"oid": "806752cf0c9b840f98fe5011039cf46abe339558"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToyMzoyNFrOH0wVug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToyMzoyNFrOH0wVug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3OTk5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Future<String> redeploy(TestContext context) {\n          \n          \n            \n                Async async = context.async();\n          \n          \n            \n                Promise<String> promise = Promise.promise();\n          \n          \n            \n                redeploy().onComplete(res -> {\n          \n          \n            \n                  promise.handle(res);\n          \n          \n            \n                  async.complete();\n          \n          \n            \n                });\n          \n          \n            \n                async.await();\n          \n          \n            \n                return promise.future();\n          \n          \n            \n              private Future<String> redeploy(TestContext context) {\n          \n          \n            \n                Async async = context.async();\n          \n          \n            \n                Future<String> future = redeploy().onComplete(res -> async.complete());\n          \n          \n            \n                async.await();\n          \n          \n            \n                return future;", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r525079994", "createdAt": "2020-11-17T11:23:24Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -2551,122 +2501,234 @@ public void testSemVer(TestContext context) {\n         .log().ifValidationFails()\n         .extract().response();\n     assertEmptyReport(c);\n-\n-    async.complete();\n   }\n \n-  @Test\n-  public void testManyModules(TestContext context) {\n-    async = context.async();\n-\n-    RestAssuredClient c;\n-    Response r;\n-\n-    int i;\n-    for (i = 0; i < 10; i++) {\n-      String docSampleModule = \"{\" + LS\n-        + \"  \\\"id\\\" : \\\"sample-1.2.\" + Integer.toString(i) + \"\\\",\" + LS\n-        + \"  \\\"name\\\" : \\\"sample module \" + Integer.toString(i) + \"\\\",\" + LS\n-        + \"  \\\"requires\\\" : [ ]\" + LS\n-        + \"}\";\n-      c = api.createRestAssured3();\n-      c.given()\n-        .header(\"Content-Type\", \"application/json\")\n-        .body(docSampleModule)\n-        .post(\"/_/proxy/modules\")\n-        .then()\n-        .statusCode(201)\n-        .log().ifValidationFails();\n-      assertEmptyReport(c);\n-    }\n-    c = api.createRestAssured3();\n-    r = c.given()\n-      .get(\"/_/proxy/modules\")\n-      .then()\n-      .statusCode(200).log().ifValidationFails().extract().response();\n-    assertEmptyReport(c);\n-\n-    async.complete();\n-  }\n-\n-  private void undeployFirst(Handler<AsyncResult<Void>> fut) {\n+  private Future<Void> undeployAll() {\n     Set<String> ids = vertx.deploymentIDs();\n     Iterator<String> it = ids.iterator();\n-    if (it.hasNext()) {\n-      vertx.undeploy(it.next(), fut);\n-    } else {\n-      fut.handle(Future.succeededFuture());\n+    Future<Void> future = Future.succeededFuture();\n+    while (it.hasNext()) {\n+      future = future.compose(x -> vertx.undeploy(it.next()));\n     }\n+    return future;\n   }\n \n-  private void undeployFirstAndDeploy(TestContext context, Handler<AsyncResult<String>> fut) {\n-    async = context.async();\n+  private Future<String> redeploy() {\n     httpClient = null;\n-    undeployFirst(context.asyncAssertSuccess(handler -> {\n+    return undeployAll().compose(x -> {\n       DeploymentOptions opt = new DeploymentOptions().setConfig(conf);\n-      vertx.deployVerticle(MainVerticle.class.getName(), opt, res -> {\n-        fut.handle(res);\n-        async.complete();\n-      });\n-    }));\n+      return vertx.deployVerticle(MainVerticle.class.getName(), opt);\n+    });\n+  }\n+\n+  private Future<String> redeploy(TestContext context) {\n+    Async async = context.async();\n+    Promise<String> promise = Promise.promise();\n+    redeploy().onComplete(res -> {\n+      promise.handle(res);\n+      async.complete();\n+    });\n+    async.await();\n+    return promise.future();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "806752cf0c9b840f98fe5011039cf46abe339558"}, "originalPosition": 437}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/7261c4cb2caa750f1aff441438194954b50bca33", "committedDate": "2020-11-17T11:26:40Z", "message": "Update okapi-core/src/test/java/org/folio/okapi/ModuleTest.java\n\nCo-authored-by: julianladisch <julianladisch@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjgxNDM1", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-532281435", "createdAt": "2020-11-17T11:46:02Z", "commit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMTo0NjowMlrOH0xHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMTo0NjowMlrOH0xHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA5Mjc4Mw==", "bodyText": "This is from a POST request, MainVerticle.java should write \"POST test-header-module ...\" into the header.", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r525092783", "createdAt": "2020-11-17T11:46:02Z", "author": {"login": "julianladisch"}, "path": "okapi-test-header-module/src/test/java/HeaderModuleTest.java", "diffHunk": "@@ -49,52 +49,69 @@ public void tearDown(TestContext context) {\n \n   @Test\n   public void test1(TestContext context) {\n-    Async async = context.async();\n-\n-    HashMap<String, String> headers = new HashMap<>();\n-\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.get(\"/testb\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"foo\", cli.getRespHeaders().get(\"X-my-header\"));\n-      test2(context, async);\n-    });\n-  }\n-\n-  private void test2(TestContext context, Async async) {\n-\n     HashMap<String, String> headers = new HashMap<>();\n+    {\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      Async async = context.async();\n+      cli.get(\"/testb\", res -> {\n+        cli.close();\n+        context.assertTrue(res.succeeded());\n+        context.assertEquals(\"foo\", cli.getRespHeaders().get(\"X-my-header\"));\n+        async.complete();\n+      });\n+      async.await();\n+    }\n+    headers = new HashMap<>();\n     headers.put(\"X-my-header\", \"hello\");\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.get(\"/testb\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"hello,foo\", cli.getRespHeaders().get(\"X-my-header\"));\n-      test3(context, async);\n-    });\n-\n-  }\n-\n-  public void test3(TestContext context, Async async) {\n-\n-    HashMap<String, String> headers = new HashMap<>();\n-\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n-      context.assertTrue(res1.failed());\n-      JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n-      cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n-        context.assertTrue(res2.succeeded());\n-        context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",\n-            cli.getRespHeaders().get(XOkapiHeaders.TRACE));\n-        cli.get(\"/permResult\", res3 -> {\n-          cli.close();\n-          context.assertEquals(perm, new JsonArray(res3.result()).getJsonObject(0));\n+    {\n+      Async async = context.async();\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+\n+      cli.get(\"/testb\", res -> {\n+        cli.close();\n+        context.assertTrue(res.succeeded());\n+        context.assertEquals(\"hello,foo\", cli.getRespHeaders().get(\"X-my-header\"));\n+        async.complete();\n+      });\n+      async.await();\n+    }\n+    headers = new HashMap<>();\n+    headers.put(XOkapiHeaders.TENANT, \"testlib\");\n+    JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n+    {\n+      Async async = context.async();\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n+        context.assertTrue(res1.failed());\n+        cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n+          context.assertTrue(res2.succeeded());\n+          context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjgzMDI0", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-532283024", "createdAt": "2020-11-17T11:48:15Z", "commit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMTo0ODoxNVrOH0xMkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMTo0ODoxNVrOH0xMkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA5NDAzNQ==", "bodyText": "Splitting this big method into smaller ones and using rest-assured could improve readability. It's up to you if you want to change it or merge as is.", "url": "https://github.com/folio-org/okapi/pull/1036#discussion_r525094035", "createdAt": "2020-11-17T11:48:15Z", "author": {"login": "julianladisch"}, "path": "okapi-test-header-module/src/test/java/HeaderModuleTest.java", "diffHunk": "@@ -49,52 +49,69 @@ public void tearDown(TestContext context) {\n \n   @Test\n   public void test1(TestContext context) {\n-    Async async = context.async();\n-\n-    HashMap<String, String> headers = new HashMap<>();\n-\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.get(\"/testb\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"foo\", cli.getRespHeaders().get(\"X-my-header\"));\n-      test2(context, async);\n-    });\n-  }\n-\n-  private void test2(TestContext context, Async async) {\n-\n     HashMap<String, String> headers = new HashMap<>();\n+    {\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      Async async = context.async();\n+      cli.get(\"/testb\", res -> {\n+        cli.close();\n+        context.assertTrue(res.succeeded());\n+        context.assertEquals(\"foo\", cli.getRespHeaders().get(\"X-my-header\"));\n+        async.complete();\n+      });\n+      async.await();\n+    }\n+    headers = new HashMap<>();\n     headers.put(\"X-my-header\", \"hello\");\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.get(\"/testb\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"hello,foo\", cli.getRespHeaders().get(\"X-my-header\"));\n-      test3(context, async);\n-    });\n-\n-  }\n-\n-  public void test3(TestContext context, Async async) {\n-\n-    HashMap<String, String> headers = new HashMap<>();\n-\n-    OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n-      context.assertTrue(res1.failed());\n-      JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n-      cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n-        context.assertTrue(res2.succeeded());\n-        context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",\n-            cli.getRespHeaders().get(XOkapiHeaders.TRACE));\n-        cli.get(\"/permResult\", res3 -> {\n-          cli.close();\n-          context.assertEquals(perm, new JsonArray(res3.result()).getJsonObject(0));\n+    {\n+      Async async = context.async();\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+\n+      cli.get(\"/testb\", res -> {\n+        cli.close();\n+        context.assertTrue(res.succeeded());\n+        context.assertEquals(\"hello,foo\", cli.getRespHeaders().get(\"X-my-header\"));\n+        async.complete();\n+      });\n+      async.await();\n+    }\n+    headers = new HashMap<>();\n+    headers.put(XOkapiHeaders.TENANT, \"testlib\");\n+    JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n+    {\n+      Async async = context.async();\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n+        context.assertTrue(res1.failed());\n+        cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n+          context.assertTrue(res2.succeeded());\n+          context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",\n+              cli.getRespHeaders().get(XOkapiHeaders.TRACE));\n           async.complete();\n         });\n       });\n-    });\n+      async.await();\n+    }\n+    {\n+      Async async = context.async();\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      cli.get(\"/permResult\", res -> {\n+        context.assertEquals(perm, new JsonArray(res.result()).getJsonObject(0));\n+        cli.close();\n+        async.complete();\n+      });\n+      async.await();\n+    }\n+    {\n+      Async async = context.async();\n+      headers.replace(XOkapiHeaders.TENANT, \"other\");\n+      OkapiClient cli = new OkapiClient(URL, vertx, headers);\n+      cli.get(\"/permResult\", res -> {\n+        context.assertNull(res.result());\n+        cli.close();\n+        async.complete();\n+      });\n+      async.await();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjg0Nzgz", "url": "https://github.com/folio-org/okapi/pull/1036#pullrequestreview-532284783", "createdAt": "2020-11-17T11:50:49Z", "commit": {"oid": "7261c4cb2caa750f1aff441438194954b50bca33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eed951ea9116cbc619461549ae26f5547482ef7", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/5eed951ea9116cbc619461549ae26f5547482ef7", "committedDate": "2020-11-17T11:53:48Z", "message": "Make method match in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b4d82d4ceb417faed9dbd9af9c8aad63a1e4ebf", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/8b4d82d4ceb417faed9dbd9af9c8aad63a1e4ebf", "committedDate": "2020-11-17T12:05:41Z", "message": "Split tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24190ceade3ea3a7a3f8a762a06e790c7005f4f1", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/24190ceade3ea3a7a3f8a762a06e790c7005f4f1", "committedDate": "2020-11-17T12:06:05Z", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-930-upgrade-okapi-module-for-tenants"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2909, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}