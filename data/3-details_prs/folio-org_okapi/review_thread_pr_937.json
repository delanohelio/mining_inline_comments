{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjg1MTE2", "number": 937, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1ODoxNFrOEEeVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1Mzo1M1rOEEsdog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTI2NzM0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMTo1ODoxNFrOGiHtww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxODo1MlrOGiP6NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMTE3MQ==", "bodyText": "Can you fix the comment in lines 98-101?", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438431171", "createdAt": "2020-06-10T21:58:14Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -216,12 +216,12 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   }, {\"\n         + \"    \\\"methods\\\" :  [ \\\"GET\\\" ],\"\n         + \"    \\\"pathPattern\\\" : \\\"/_/proxy/modules\\\",\"\n-        + \"    \\\"permissionsRequired\\\" : [ ], \"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.proxy.modules.list\\\" ], \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c11efe2e572b42aacdd695f186e3296d627a462"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2NTQyOA==", "bodyText": "Sure.", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438565428", "createdAt": "2020-06-11T06:18:52Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -216,12 +216,12 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   }, {\"\n         + \"    \\\"methods\\\" :  [ \\\"GET\\\" ],\"\n         + \"    \\\"pathPattern\\\" : \\\"/_/proxy/modules\\\",\"\n-        + \"    \\\"permissionsRequired\\\" : [ ], \"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.proxy.modules.list\\\" ], \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMTE3MQ=="}, "originalCommit": {"oid": "8c11efe2e572b42aacdd695f186e3296d627a462"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU0MDY3OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0Njo0M1rOGieBjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTowMDoxOVrOGk8gyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NjY4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .extract().body().asString();\n          \n          \n            \n            \n          \n          \n            \n                JsonArray ar = new JsonArray(body);\n          \n          \n            \n                context.assertEquals(2, ar.size());\n          \n          \n            \n                context.assertEquals(\"okapi-0.0.0\", ar.getJsonObject(0).getString(\"moduleId\"));\n          \n          \n            \n                context.assertEquals(\"header-1\", ar.getJsonObject(1).getString(\"moduleId\"));\n          \n          \n            \n                .body(\"$\", hasSize(2))\n          \n          \n            \n                .body(\"[0].moduleId\", is(\"okapi-0.0.0\"))\n          \n          \n            \n                .body(\"[1].moduleId\", is(\"header-1\"));\n          \n      \n    \n    \n  \n\nRestAssured has JSON path (GPath syntax) support. Simply use a recent RestAssured version, put RestAssured.defaultParser = Parser.JSON; into setUp, and import the hamcrest matcher:\n+import static org.hamcrest.collection.IsCollectionWithSize.hasSize;\n+import static org.hamcrest.Matchers.is;", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438796684", "createdAt": "2020-06-11T13:46:43Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1241,12 +1250,21 @@ public void testSystemInterfaces(TestContext context) {\n       .log().ifValidationFails()\n       .extract().headers();\n     final String locHdrEnable = headers.getValue(\"Location\");\n-    List<Header> list = headers.getList(\"X-Tenant-Perms-Result\");\n-    Assert.assertEquals(2, list.size()); // one for okapi, one for header-1\n-    Assert.assertThat(\"okapi perm result\",\n-      list.get(0).getValue(), containsString(\"okapi.all\"));\n-    Assert.assertThat(\"header-1perm result\",\n-      list.get(1).getValue(), containsString(\"header-1\"));\n+    // one trace from Okapi, two from the header module since it's called twice\n+    context.assertEquals(3, headers.getValues(\"X-Okapi-Trace\").size());\n+\n+    String body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    JsonArray ar = new JsonArray(body);\n+    context.assertEquals(2, ar.size());\n+    context.assertEquals(\"okapi-0.0.0\", ar.getJsonObject(0).getString(\"moduleId\"));\n+    context.assertEquals(\"header-1\", ar.getJsonObject(1).getString(\"moduleId\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MzM1Mg==", "bodyText": "yet another way of doing things.. But shorter, so I've done that.", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r441393352", "createdAt": "2020-06-17T09:00:19Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1241,12 +1250,21 @@ public void testSystemInterfaces(TestContext context) {\n       .log().ifValidationFails()\n       .extract().headers();\n     final String locHdrEnable = headers.getValue(\"Location\");\n-    List<Header> list = headers.getList(\"X-Tenant-Perms-Result\");\n-    Assert.assertEquals(2, list.size()); // one for okapi, one for header-1\n-    Assert.assertThat(\"okapi perm result\",\n-      list.get(0).getValue(), containsString(\"okapi.all\"));\n-    Assert.assertThat(\"header-1perm result\",\n-      list.get(1).getValue(), containsString(\"header-1\"));\n+    // one trace from Okapi, two from the header module since it's called twice\n+    context.assertEquals(3, headers.getValues(\"X-Okapi-Trace\").size());\n+\n+    String body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    JsonArray ar = new JsonArray(body);\n+    context.assertEquals(2, ar.size());\n+    context.assertEquals(\"okapi-0.0.0\", ar.getJsonObject(0).getString(\"moduleId\"));\n+    context.assertEquals(\"header-1\", ar.getJsonObject(1).getString(\"moduleId\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NjY4NA=="}, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU2NDc0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1MTowN1rOGieQ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1OTozN1rOGk8fCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMDYwNw==", "bodyText": "encode() does not guarantee the order of the keys. You probably want to compare without encode().", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438800607", "createdAt": "2020-06-11T13:51:07Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1330,9 +1348,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms)\n       .extract().header(\"Location\");\n \n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(1, ar.size());\n+    context.assertEquals(new JsonObject(expPerms).encode(), ar.getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MjkwNQ==", "bodyText": "yes", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r441392905", "createdAt": "2020-06-17T08:59:37Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1330,9 +1348,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms)\n       .extract().header(\"Location\");\n \n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(1, ar.size());\n+    context.assertEquals(new JsonObject(expPerms).encode(), ar.getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMDYwNw=="}, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU2NzY0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1MTozN1rOGieS0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1OTozMlrOGk8e3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMTEwNQ==", "bodyText": "encode() does not guarantee the order of the keys. You probably want to compare without encode().", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438801105", "createdAt": "2020-06-11T13:51:37Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1361,9 +1390,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms2)\n       .extract().header(\"Location\");\n \n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(1, ar.size());\n+    context.assertEquals(new JsonObject(expPerms2).encode(), ar.getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5Mjg2Mg==", "bodyText": "yes", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r441392862", "createdAt": "2020-06-17T08:59:32Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1361,9 +1390,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms2)\n       .extract().header(\"Location\");\n \n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(1, ar.size());\n+    context.assertEquals(new JsonObject(expPerms2).encode(), ar.getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMTEwNQ=="}, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU2ODcyOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1MTo0OFrOGieTeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1OToyNlrOGk8ejg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMTI3Mg==", "bodyText": "encode() does not guarantee the order of the keys. You probably want to compare without encode().", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438801272", "createdAt": "2020-06-11T13:51:48Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1420,8 +1460,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms)\n       .extract().header(\"Location\");\n+\n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(2, ar.size());\n+    context.assertEquals(new JsonObject(expPerms).encode(), ar.getJsonObject(1).encode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5Mjc4Mg==", "bodyText": "yes", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r441392782", "createdAt": "2020-06-17T08:59:26Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ModuleTest.java", "diffHunk": "@@ -1420,8 +1460,20 @@ public void testSystemInterfaces(TestContext context) {\n       .then()\n       .statusCode(201)\n       .log().ifValidationFails()\n-      .header(\"X-Tenant-Perms-Result\", expPerms)\n       .extract().header(\"Location\");\n+\n+    body = given()\n+        .header(\"X-Okapi-Tenant\", okapiTenant)\n+        .get(\"/permResult\")\n+        .then()\n+        .statusCode(200)\n+        .log().ifValidationFails()\n+        .extract().body().asString();\n+\n+    ar = new JsonArray(body);\n+    context.assertEquals(2, ar.size());\n+    context.assertEquals(new JsonObject(expPerms).encode(), ar.getJsonObject(1).encode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMTI3Mg=="}, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU4MjQyOnYy", "diffSide": "RIGHT", "path": "okapi-test-header-module/src/test/java/HeaderModuleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1Mzo1M1rOGiebtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1OToyMlrOGk8eWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMzM4Mw==", "bodyText": "encode() does not guarantee the order of the keys. You probably want to compare without encode().", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r438803383", "createdAt": "2020-06-11T13:53:53Z", "author": {"login": "julianladisch"}, "path": "okapi-test-header-module/src/test/java/HeaderModuleTest.java", "diffHunk": "@@ -78,11 +81,19 @@ public void test3(TestContext context, Async async) {\n     HashMap<String, String> headers = new HashMap<>();\n \n     OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.post(\"/_/tenantPermissions\", \"a, b,\\nc\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"a, b, c\", cli.getRespHeaders().get(\"X-Tenant-Perms-Result\"));\n-      async.complete();\n+    cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n+      context.assertTrue(res1.failed());\n+      JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n+      cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n+        context.assertTrue(res2.succeeded());\n+        context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",\n+            cli.getRespHeaders().get(XOkapiHeaders.TRACE));\n+        cli.get(\"/permResult\", res3 -> {\n+          cli.close();\n+          context.assertEquals(perm.encode(), new JsonArray(res3.result()).getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MjcyOQ==", "bodyText": "yes.", "url": "https://github.com/folio-org/okapi/pull/937#discussion_r441392729", "createdAt": "2020-06-17T08:59:22Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-test-header-module/src/test/java/HeaderModuleTest.java", "diffHunk": "@@ -78,11 +81,19 @@ public void test3(TestContext context, Async async) {\n     HashMap<String, String> headers = new HashMap<>();\n \n     OkapiClient cli = new OkapiClient(URL, vertx, headers);\n-    cli.post(\"/_/tenantPermissions\", \"a, b,\\nc\", res -> {\n-      cli.close();\n-      context.assertTrue(res.succeeded());\n-      context.assertEquals(\"a, b, c\", cli.getRespHeaders().get(\"X-Tenant-Perms-Result\"));\n-      async.complete();\n+    cli.post(\"/_/tenantPermissions\", \"{\", res1 -> {\n+      context.assertTrue(res1.failed());\n+      JsonObject perm = new JsonObject(\"{\\\"k\\\": \\\"v\\\"}\");\n+      cli.post(\"/_/tenantPermissions\", perm.encode(), res2 -> {\n+        context.assertTrue(res2.succeeded());\n+        context.assertEquals(\"GET test-header-module /_/tenantPermissions 200 -\",\n+            cli.getRespHeaders().get(XOkapiHeaders.TRACE));\n+        cli.get(\"/permResult\", res3 -> {\n+          cli.close();\n+          context.assertEquals(perm.encode(), new JsonArray(res3.result()).getJsonObject(0).encode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwMzM4Mw=="}, "originalCommit": {"oid": "99bff29bac49f4d74259dfdc8e30e2ec5ca5d43c"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 254, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}