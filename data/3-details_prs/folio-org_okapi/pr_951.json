{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzAwNDY1", "number": 951, "title": "OKAPI-871 FolioLoggingContext", "bodyText": "", "createdAt": "2020-07-08T14:57:57Z", "url": "https://github.com/folio-org/okapi/pull/951", "merged": true, "mergeCommit": {"oid": "2944651f795ae9286aa61dec6a96ef48d728da1f"}, "closed": true, "closedAt": "2020-08-24T10:02:06Z", "author": {"login": "MikhailFokanov"}, "timelineItems": {"totalCount": 69, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy6DQogH2gAyNDQ2MzAwNDY1OjYwNTBhYjM2NWQyMGVlMmZmNzk2OTNiZWY2YWRkNTU1NWVkNmQyMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA1_mGAFqTQ3MTk1MTIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6050ab365d20ee2ff79693bef6add5555ed6d204", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/6050ab365d20ee2ff79693bef6add5555ed6d204", "committedDate": "2020-07-08T13:00:21Z", "message": "OKAPI-871 FolioLoggingContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a254aa2e3881e691350a344a3f65599664b00aaa", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/a254aa2e3881e691350a344a3f65599664b00aaa", "committedDate": "2020-07-09T08:24:33Z", "message": "OKAPI-871 FolioLoggingContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3497c2f142fffce4205c105622d2d083ab7d4a9b", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/3497c2f142fffce4205c105622d2d083ab7d4a9b", "committedDate": "2020-07-09T10:06:26Z", "message": "OKAPI-871 FolioLoggingContext userId added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd3a943cff715588d67d796c12d19bb1d94b3544", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/dd3a943cff715588d67d796c12d19bb1d94b3544", "committedDate": "2020-07-09T10:39:30Z", "message": "OKAPI-871 FolioLoggingContext userId added"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTQwNTgy", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-445540582", "createdAt": "2020-07-09T11:48:58Z", "commit": {"oid": "dd3a943cff715588d67d796c12d19bb1d94b3544"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo0ODo1OFrOGvNnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo0ODo1OFrOGvNnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1OTM4NA==", "bodyText": "I don't think that we need to create yet another context map.\nVert.x already has a map we can easily access with getLocal and putLocal:\nhttps://github.com/eclipse-vertx/vert.x/blob/4.0.0-milestone5/src/main/java/io/vertx/core/impl/ContextImpl.java#L218-L220\nhttps://github.com/eclipse-vertx/vert.x/blob/4.0.0-milestone5/src/main/java/io/vertx/core/impl/AbstractContext.java#L303-L312", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452159384", "createdAt": "2020-07-09T11:48:58Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.impl.ContextInternal;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  public static final String EMPTY_VALUE = \"\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();\n+    if (ctx != null) {\n+      return getContextMap(ctx).getOrDefault(key, EMPTY_VALUE);\n+    }\n+    return EMPTY_VALUE;\n+  }\n+\n+  /**\n+  * Put value by key to the logging context.   *\n+  * @param key the name of logging variable (e.g. requestId)\n+  */\n+  public static void put(String key, String value) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();\n+    if (ctx != null) {\n+      getContextMap(ctx).put(key, value);\n+    }\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private static ConcurrentMap<String, String> getContextMap(ContextInternal ctx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3a943cff715588d67d796c12d19bb1d94b3544"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NTQyMzUz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-445542353", "createdAt": "2020-07-09T11:51:51Z", "commit": {"oid": "dd3a943cff715588d67d796c12d19bb1d94b3544"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1MTo1MlrOGvNtAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1MTo1MlrOGvNtAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2MDc2OQ==", "bodyText": "If we have traditional (non-JSON) log lines we may need EMPTY_VALUE as placeholder.\nFor JSON log lines this is not needed. The key should be completely omitted: https://softwareengineering.stackexchange.com/questions/343710/use-empty-string-null-or-remove-empty-property-in-api-request-response", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452160769", "createdAt": "2020-07-09T11:51:52Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.impl.ContextInternal;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  public static final String EMPTY_VALUE = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3a943cff715588d67d796c12d19bb1d94b3544"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/21ef7503f84e93b2e6acc321bf42b0c2c6242d87", "committedDate": "2020-07-10T10:03:18Z", "message": "OKAPI-871 FolioLoggingContext userId added"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzIyMjk5", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446322299", "createdAt": "2020-07-10T11:18:17Z", "commit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToxODoxN1rOGvzpeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToxODoxN1rOGvzpeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MjQ1OA==", "bodyText": "No casting is needed because getLocal is in Context.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452782458", "createdAt": "2020-07-10T11:18:17Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.impl.ContextInternal;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  public static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzIyNTc0", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446322574", "createdAt": "2020-07-10T11:18:50Z", "commit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToxODo1MFrOGvzqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToxODo1MFrOGvzqVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MjY3OA==", "bodyText": "No casting is needed because putLocal is in Context.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452782678", "createdAt": "2020-07-10T11:18:50Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.impl.ContextInternal;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  public static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();\n+    if (ctx != null) {\n+      String val = ctx.getLocal(LOGGING_VAR_PREFIX + key);\n+      if (val != null) {\n+        return val;\n+      }\n+    }\n+    return EMPTY_VALUE;\n+  }\n+\n+  /**\n+  * Put value by key to the logging context.   *\n+  * @param key the name of logging variable (e.g. requestId)\n+  */\n+  public static void put(String key, String value) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzI1MDE1", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446325015", "createdAt": "2020-07-10T11:23:37Z", "commit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyMzozN1rOGvzxfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyMzozN1rOGvzxfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4NDUwOA==", "bodyText": "In https://stackoverflow.com/questions/31342950 they advise not to use camel case for plugin names.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452784508", "createdAt": "2020-07-10T11:23:37Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/resources/log4j2.properties", "diffHunk": "@@ -10,8 +10,27 @@ appenders = console\n \n appender.console.type = Console\n appender.console.name = STDOUT\n-appender.console.layout.type = PatternLayout\n-appender.console.layout.pattern = %d{HH:mm:ss} %-5p %-20.20C{1} %m%n\n+appender.console.layout.type = JSONLayout\n+appender.console.layout.compact = true\n+appender.console.layout.eventEol = true\n+appender.console.layout.stacktraceAsString = true\n+\n+## Folio fields\n+appender.console.layout.requestId.type = KeyValuePair\n+appender.console.layout.requestId.key = requestId\n+appender.console.layout.requestId.value = $${FolioLoggingContext:requestId}\n+\n+appender.console.layout.tenantId.type = KeyValuePair\n+appender.console.layout.tenantId.key = tenantId\n+appender.console.layout.tenantId.value = $${FolioLoggingContext:tenantId}\n+\n+appender.console.layout.userId.type = KeyValuePair\n+appender.console.layout.userId.key = userId\n+appender.console.layout.userId.value = $${FolioLoggingContext:userId}\n+\n+appender.console.layout.moduleId.type = KeyValuePair\n+appender.console.layout.moduleId.key = moduleId\n+appender.console.layout.moduleId.value = $${FolioLoggingContext:moduleId}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzI2NTIx", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446326521", "createdAt": "2020-07-10T11:26:28Z", "commit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyNjoyOFrOGvz2KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMToyNjoyOFrOGvz2KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4NTcwNA==", "bodyText": "Do we need to add LOGGING_VAR_PREFIX here or should ProxyService prepend it?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452785704", "createdAt": "2020-07-10T11:26:28Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.core.impl.ContextInternal;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  public static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();\n+    if (ctx != null) {\n+      String val = ctx.getLocal(LOGGING_VAR_PREFIX + key);\n+      if (val != null) {\n+        return val;\n+      }\n+    }\n+    return EMPTY_VALUE;\n+  }\n+\n+  /**\n+  * Put value by key to the logging context.   *\n+  * @param key the name of logging variable (e.g. requestId)\n+  */\n+  public static void put(String key, String value) {\n+    ContextInternal ctx = (ContextInternal) Vertx.currentContext();\n+    if (ctx != null) {\n+      ctx.putLocal(key, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21ef7503f84e93b2e6acc321bf42b0c2c6242d87"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7571208a39cfac565a61288662ada60a132be040", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/7571208a39cfac565a61288662ada60a132be040", "committedDate": "2020-07-10T11:51:03Z", "message": "OKAPI-871 Fixes for comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06618ef2b8b97825b2e903a8cb9f8ebce9dbadc6", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/06618ef2b8b97825b2e903a8cb9f8ebce9dbadc6", "committedDate": "2020-07-10T11:59:33Z", "message": "OKAPI-871 Fixes for comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/96f318785a198ef39bfa3c50fd10868b11005893", "committedDate": "2020-07-10T12:16:10Z", "message": "OKAPI-871 Fixes for null values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzcyMDI2", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446372026", "createdAt": "2020-07-10T12:47:26Z", "commit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo0NzoyNlrOGv1_yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo0NzoyNlrOGv1_yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyMDkzOA==", "bodyText": "Redundant checks here.. headers are always present.  Move your stuff below the headers local and have it more readable, please.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452820938", "createdAt": "2020-07-10T12:47:26Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -514,6 +515,18 @@ public void proxy(RoutingContext ctx) {\n       return; // Error code already set in ctx\n     }\n \n+    FolioLoggingContext.put(\"tenantId\", tenantId);\n+\n+    if (ctx.request() != null && ctx.request().headers() != null) {\n+\n+      FolioLoggingContext.put(\"requestId\", ctx.request().headers().get(XOkapiHeaders.REQUEST_ID));\n+\n+      FolioLoggingContext.put(\"moduleId\", ctx.request().headers().get(XOkapiHeaders.MODULE_ID));\n+\n+      FolioLoggingContext.put(\"userId\", ctx.request().headers().get(XOkapiHeaders.USER_ID));\n+\n+    }\n+\n     final MultiMap headers = ctx.request().headers();\n     sanitizeAuthHeaders(headers);\n     tenantManager.get(tenantId, gres -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTUwNDg5", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446550489", "createdAt": "2020-07-10T16:50:05Z", "commit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo1MDowNVrOGv-Y8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo1MDowNVrOGv-Y8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1ODQ1MQ==", "bodyText": "The class should be moved from okapi-core to okapi-common that already is a dependency of RMB: https://github.com/folio-org/raml-module-builder/blob/v30.2.4/pom.xml#L162", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452958451", "createdAt": "2020-07-10T16:50:05Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.folio.okapi.logging;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTUyNTQx", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-446552541", "createdAt": "2020-07-10T16:53:26Z", "commit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo1MzoyNlrOGv-fLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo1MzoyNlrOGv-fLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2MDA0NQ==", "bodyText": "\"Folio\" can be removed from the class name because \"folio\" is already in the package name: \"org.folio.okapi.logging\" or \"org.folio.okapi.common\"", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r452960045", "createdAt": "2020-07-10T16:53:26Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.folio.okapi.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96f318785a198ef39bfa3c50fd10868b11005893"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5268dac92ba8d22df969242c6645add40584bdc", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/a5268dac92ba8d22df969242c6645add40584bdc", "committedDate": "2020-07-14T13:05:29Z", "message": "OKAPI-871 Move to common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f27962e97e166334f526f6802b833206fea5e2", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/d7f27962e97e166334f526f6802b833206fea5e2", "committedDate": "2020-07-14T13:11:20Z", "message": "OKAPI-871 Dev log4j configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3f4593e6f4ceb7bfa3ae7c397ae17a7d6082a77", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/f3f4593e6f4ceb7bfa3ae7c397ae17a7d6082a77", "committedDate": "2020-07-14T13:19:41Z", "message": "OKAPI-871 Dev log4j configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/ff2fe11c0f195f26cfc0ee17f257491c42004166", "committedDate": "2020-07-14T14:10:14Z", "message": "OKAPI-871 Unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg0MTgw", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448284180", "createdAt": "2020-07-14T16:46:35Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0NjozNVrOGxcP1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0NjozNVrOGxcP1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5NjIxNA==", "bodyText": "Can you be more specific about the usage of this class? It should mention log4j, Vertx context, Vertx vertx local data.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454496214", "createdAt": "2020-07-14T16:46:35Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg1ODkx", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448285891", "createdAt": "2020-07-14T16:48:40Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0ODo0MFrOGxcVpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0ODo0MFrOGxcVpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5NzcwMQ==", "bodyText": "Can you add javadoc for value and explain that null is accepted and will remove the entry?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454497701", "createdAt": "2020-07-14T16:48:40Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {\n+    Context ctx = Vertx.currentContext();\n+    if (ctx != null) {\n+      String val = ctx.getLocal(LOGGING_VAR_PREFIX + key);\n+      if (val != null) {\n+        return val;\n+      }\n+    }\n+    return EMPTY_VALUE;\n+  }\n+\n+  /**\n+  * Put value by key to the logging context.   *\n+  * @param key the name of logging variable (e.g. requestId)\n+  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg2NjQ1", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448286645", "createdAt": "2020-07-14T16:49:35Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0OTozNVrOGxcX8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo0OTozNVrOGxcX8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5ODI4OQ==", "bodyText": "VertxLoggingContext might be a better name.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454498289", "createdAt": "2020-07-14T16:49:35Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg5NDAz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448289403", "createdAt": "2020-07-14T16:52:53Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1Mjo1M1rOGxcgvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1Mjo1M1rOGxcgvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMDU0MA==", "bodyText": "Why isn't this <optional>true</optional> to allow users of okapi-common to use some other logging library if they want?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454500540", "createdAt": "2020-07-14T16:52:53Z", "author": {"login": "julianladisch"}, "path": "okapi-common/pom.xml", "diffHunk": "@@ -15,7 +15,6 @@\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n       <artifactId>log4j-core</artifactId>\n-      <scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjkxNDk4", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448291498", "createdAt": "2020-07-14T16:55:36Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1NTozNlrOGxcnow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1NTozNlrOGxcnow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMjMwNw==", "bodyText": "The return value should be asserted.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454502307", "createdAt": "2020-07-14T16:55:36Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjkyNTA0", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448292504", "createdAt": "2020-07-14T16:56:58Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1Njo1OFrOGxcq7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1Njo1OFrOGxcq7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMzE1MA==", "bodyText": "This line should be wrapped in yet another vertx.runOnContext to make sure that the entry really is passed on.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454503150", "createdAt": "2020-07-14T16:56:58Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {\n+      FolioLoggingContext loggingContext = new FolioLoggingContext();\n+      FolioLoggingContext.put(KEY, VALUE);\n+      context.assertEquals(loggingContext.lookup(KEY), VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjkzNTM5", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448293539", "createdAt": "2020-07-14T16:58:21Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1ODoyMVrOGxcuKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1ODoyMVrOGxcuKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwMzk3OQ==", "bodyText": "Async is required, otherwise the code inside the runOnContext is executed after test completion and therefore cannot report any failures.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454503979", "createdAt": "2020-07-14T16:58:21Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjk0MDEx", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448294011", "createdAt": "2020-07-14T16:58:58Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1ODo1OFrOGxcvtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjo1ODo1OFrOGxcvtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwNDM3Mg==", "bodyText": "Async is missing", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454504372", "createdAt": "2020-07-14T16:58:58Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {\n+      FolioLoggingContext loggingContext = new FolioLoggingContext();\n+      FolioLoggingContext.put(KEY, VALUE);\n+      context.assertEquals(loggingContext.lookup(KEY), VALUE);\n+    });\n+  }\n+\n+  @Test\n+  public void lookupNullTest(TestContext context) {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjk5NDA3", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448299407", "createdAt": "2020-07-14T17:06:11Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowNjoxMVrOGxdAtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowNjoxMVrOGxdAtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUwODcyNA==", "bodyText": "These should be moved to okapi-core ProxyService, because this logging context is a general purpose library class.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454508724", "createdAt": "2020-07-14T17:06:11Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzAxMzAw", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448301300", "createdAt": "2020-07-14T17:08:47Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowODo0N1rOGxdGsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowODo0N1rOGxdGsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMDI1Nw==", "bodyText": "Can you add @Override?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454510257", "createdAt": "2020-07-14T17:08:47Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzAxNTAz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448301503", "createdAt": "2020-07-14T17:09:03Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowOTowNFrOGxdHPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowOTowNFrOGxdHPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMDM5OA==", "bodyText": "Can you add @Override?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454510398", "createdAt": "2020-07-14T17:09:04Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable (e.g. requestId)\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  public String lookup(LogEvent event, String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzAyMTQz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448302143", "createdAt": "2020-07-14T17:09:55Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowOTo1NVrOGxdJMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzowOTo1NVrOGxdJMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMDg5OQ==", "bodyText": "The return value should be asserted.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454510899", "createdAt": "2020-07-14T17:09:55Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {\n+      FolioLoggingContext loggingContext = new FolioLoggingContext();\n+      FolioLoggingContext.put(KEY, VALUE);\n+      context.assertEquals(loggingContext.lookup(KEY), VALUE);\n+    });\n+  }\n+\n+  @Test\n+  public void lookupNullTest(TestContext context) {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    vertx.runOnContext(e -> {\n+      loggingContext.lookup(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzA3MjU5", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448307259", "createdAt": "2020-07-14T17:17:05Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoxNzowNVrOGxdaOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoxNzowNVrOGxdaOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNTI1OA==", "bodyText": "null as a key may cause an exception, can you use a proper key?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454515258", "createdAt": "2020-07-14T17:17:05Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzA4MjQz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448308243", "createdAt": "2020-07-14T17:18:24Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoxODoyNVrOGxddSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoxODoyNVrOGxddSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxNjA0MQ==", "bodyText": "Can you add whether null key is allowed?\nThe same for lookup(LogEvent, String)?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454516041", "createdAt": "2020-07-14T17:18:25Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable (e.g. requestId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzExMDA5", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448311009", "createdAt": "2020-07-14T17:22:10Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoyMjoxMFrOGxdmTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoyMjoxMFrOGxdmTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxODM1MA==", "bodyText": "You need to swap the order for context.assertEquals(expected, actual).", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454518350", "createdAt": "2020-07-14T17:22:10Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {\n+      FolioLoggingContext loggingContext = new FolioLoggingContext();\n+      FolioLoggingContext.put(KEY, VALUE);\n+      context.assertEquals(loggingContext.lookup(KEY), VALUE);\n+    });\n+  }\n+\n+  @Test\n+  public void lookupNullTest(TestContext context) {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    vertx.runOnContext(e -> {\n+      loggingContext.lookup(null);\n+    });\n+  }\n+\n+  @Test\n+  public void putNullTest(TestContext context) {\n+    Async async = context.async();\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    vertx.runOnContext(e -> {\n+          FolioLoggingContext.put(KEY, null);\n+          context.assertEquals(loggingContext.lookup(KEY), \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzExMjg0", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-448311284", "createdAt": "2020-07-14T17:22:33Z", "commit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoyMjozM1rOGxdnJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzoyMjozM1rOGxdnJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxODU2Nw==", "bodyText": "You need to swap the order for context.assertEquals(expected, actual).", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r454518567", "createdAt": "2020-07-14T17:22:33Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static String KEY = \"KEY\";\n+  private static String VALUE = \"VALUE\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest() {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    loggingContext.lookup(null);\n+  }\n+\n+\n+  @Test\n+  public void lookupPutTest(TestContext context) {\n+    vertx.runOnContext(e -> {\n+      FolioLoggingContext loggingContext = new FolioLoggingContext();\n+      FolioLoggingContext.put(KEY, VALUE);\n+      context.assertEquals(loggingContext.lookup(KEY), VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff2fe11c0f195f26cfc0ee17f257491c42004166"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ca1de29e993454d22074bd463117a7c315bd02", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/a0ca1de29e993454d22074bd463117a7c315bd02", "committedDate": "2020-07-20T13:25:36Z", "message": "OKAPI-871 Unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e3ee1867a8b13ea78349e20874bb70bc39750ae", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/5e3ee1867a8b13ea78349e20874bb70bc39750ae", "committedDate": "2020-07-20T13:48:12Z", "message": "OKAPI-871 Unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjY2NjUz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-451666653", "createdAt": "2020-07-20T14:35:19Z", "commit": {"oid": "5e3ee1867a8b13ea78349e20874bb70bc39750ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozNToxOVrOG0QMiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozNToxOVrOG0QMiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0NDQ5MQ==", "bodyText": "Can you fix the javadoc? The build fails with a Checkstyle violation.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r457444491", "createdAt": "2020-07-20T14:35:19Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ * The variables are stored in the local vert.x\n+ * {@link io.vertx.core.Context#putLocal Context}\n+ * and can be used in log4j log lines by using\n+ * {@link org.apache.logging.log4j.core.lookup.StrLookup StrLookup}\n+ *\n+ * , Vertx vertx local data\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3ee1867a8b13ea78349e20874bb70bc39750ae"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjY3NjMz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-451667633", "createdAt": "2020-07-20T14:36:18Z", "commit": {"oid": "5e3ee1867a8b13ea78349e20874bb70bc39750ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozNjoxOFrOG0QQsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDozNjoxOFrOG0QQsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0NTU1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              * @param value the value of  logging variable.\n          \n          \n            \n              * @param value the value of logging variable.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r457445552", "createdAt": "2020-07-20T14:36:18Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ * The variables are stored in the local vert.x\n+ * {@link io.vertx.core.Context#putLocal Context}\n+ * and can be used in log4j log lines by using\n+ * {@link org.apache.logging.log4j.core.lookup.StrLookup StrLookup}\n+ *\n+ * , Vertx vertx local data\n+ */\n+@Plugin(name = \"FolioLoggingContext\", category = StrLookup.CATEGORY)\n+public class FolioLoggingContext implements StrLookup {\n+\n+  private static final String EMPTY_VALUE = \"\";\n+\n+  private static final String LOGGING_VAR_PREFIX = \"folio_\";\n+\n+  public static final String TENANT_ID_LOGGING_VAR_NAME = \"tenantid\";\n+\n+  public static final String REQUEST_ID_LOGGING_VAR_NAME = \"requestid\";\n+\n+  public static final String MODULE_ID_LOGGING_VAR_NAME = \"moduleid\";\n+\n+  public static final String USER_ID_LOGGING_VAR_NAME = \"userid\";\n+\n+  /**\n+   * Lookup value by key.\n+   *\n+   * @param key the name of logging variable, {@code null} key isn't allowed\n+   * @return value for key or *empty string* if there is no such key\n+   */\n+  @Override\n+  public String lookup(String key) {\n+    return lookup(null, key);\n+  }\n+\n+  /**\n+  * Lookup value by key. LogEvent isn't used.\n+  *\n+  * @param key the name of logging variable, {@code null} key isn't allowed\n+  * @return value for key or *empty string* if there is no such key\n+  */\n+  @Override\n+  public String lookup(LogEvent event, String key) {\n+    if (key == null) {\n+      throw new IllegalArgumentException(\"Key cannot be null\");\n+    }\n+    Context ctx = Vertx.currentContext();\n+    if (ctx != null) {\n+      String val = ctx.getLocal(LOGGING_VAR_PREFIX + key);\n+      if (val != null) {\n+        return val;\n+      }\n+    }\n+    return EMPTY_VALUE;\n+  }\n+\n+  /**\n+  * Put value by key to the logging context.\n+  * @param key the name of logging variable, {@code null} key isn't allowed.\n+  * @param value the value of  logging variable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3ee1867a8b13ea78349e20874bb70bc39750ae"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41a043d50cea7b1ee45f1f9fb757071a7ca57484", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/41a043d50cea7b1ee45f1f9fb757071a7ca57484", "committedDate": "2020-07-20T14:36:41Z", "message": "Update okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java\n\nCo-authored-by: julianladisch <julianladisch@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjc3NTIx", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-451677521", "createdAt": "2020-07-20T14:46:30Z", "commit": {"oid": "41a043d50cea7b1ee45f1f9fb757071a7ca57484"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo0NjozMFrOG0Q1HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo0NjozMFrOG0Q1HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ1NDg3Ng==", "bodyText": "Adam said that production default should be JSONLayout and development default should be PatternLayout for readability.\nCan you copy okapi-core/src/main/resources/log4j2-dev.properties to  okapi-core/src/test/resources/log4j2-test.properties?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r457454876", "createdAt": "2020-07-20T14:46:30Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/resources/log4j2-dev.properties", "diffHunk": "@@ -0,0 +1,18 @@\n+status = error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a043d50cea7b1ee45f1f9fb757071a7ca57484"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjkyMDgw", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-451692080", "createdAt": "2020-07-20T15:01:47Z", "commit": {"oid": "41a043d50cea7b1ee45f1f9fb757071a7ca57484"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowMTo0N1rOG0RtzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowMTo0N1rOG0RtzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2OTM4OQ==", "bodyText": "When running mvn clean install there isn't a single unit test that logs a user id. Can you extend an existing test by adding XOkapiHeaders.USER_ID? You don't need to assert that it is logged, I can look at the output.", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r457469389", "createdAt": "2020-07-20T15:01:47Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -515,6 +516,16 @@ public void proxy(RoutingContext ctx) {\n     }\n \n     final MultiMap headers = ctx.request().headers();\n+\n+    FolioLoggingContext.put(FolioLoggingContext.TENANT_ID_LOGGING_VAR_NAME,\n+        tenantId);\n+    FolioLoggingContext.put(FolioLoggingContext.REQUEST_ID_LOGGING_VAR_NAME,\n+        headers.get(XOkapiHeaders.REQUEST_ID));\n+    FolioLoggingContext.put(FolioLoggingContext.MODULE_ID_LOGGING_VAR_NAME,\n+        headers.get(XOkapiHeaders.MODULE_ID));\n+    FolioLoggingContext.put(FolioLoggingContext.USER_ID_LOGGING_VAR_NAME,\n+        headers.get(XOkapiHeaders.USER_ID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a043d50cea7b1ee45f1f9fb757071a7ca57484"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8a634bd1fdf79569544676507bd7cc79c640c58", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/e8a634bd1fdf79569544676507bd7cc79c640c58", "committedDate": "2020-07-23T15:53:53Z", "message": "OKAPI-871 Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125eefe1c3fa42ac92684dd5f0a85381e4286713", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/125eefe1c3fa42ac92684dd5f0a85381e4286713", "committedDate": "2020-07-23T15:54:16Z", "message": "OKAPI-871 Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b67f6e621f5d2fecf03610da69878abf42cd70de", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/b67f6e621f5d2fecf03610da69878abf42cd70de", "committedDate": "2020-07-23T15:54:39Z", "message": "Merge remote-tracking branch 'origin/OKAPI-871' into OKAPI-871"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MzE3MzY4", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-454317368", "createdAt": "2020-07-23T16:47:27Z", "commit": {"oid": "b67f6e621f5d2fecf03610da69878abf42cd70de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0NzoyN1rOG2TAXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0NzoyN1rOG2TAXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NzY3OQ==", "bodyText": "I don't see StrLookup in log4j2.properties. I only see references like $${FolioLoggingContext:requestid}. Can you make the usage explanation more instructive?", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r459587679", "createdAt": "2020-07-23T16:47:27Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/logging/FolioLoggingContext.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.folio.okapi.common.logging;\n+\n+import io.vertx.core.Context;\n+import io.vertx.core.Vertx;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+import org.apache.logging.log4j.core.lookup.StrLookup;\n+\n+/**\n+ * This class should be used for storing context variables\n+ * and use them in logging events.\n+ * The variables are stored in the local vert.x\n+ * {@link io.vertx.core.Context#putLocal Context}\n+ * and can be used in log4j log lines by using\n+ * {@link org.apache.logging.log4j.core.lookup.StrLookup StrLookup}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b67f6e621f5d2fecf03610da69878abf42cd70de"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e14ddcb0b44ccb1b0d1c9c5f5927c239159321f9", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/e14ddcb0b44ccb1b0d1c9c5f5927c239159321f9", "committedDate": "2020-07-23T17:04:16Z", "message": "Merge branch 'master' into OKAPI-871"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c75e868db3be0a12fc188897dedcf1c9050a49", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/a4c75e868db3be0a12fc188897dedcf1c9050a49", "committedDate": "2020-07-27T12:02:51Z", "message": "OKAPI-871 Review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbcb10b0cd9c736df93cddb4e8197dabe062aa57", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/bbcb10b0cd9c736df93cddb4e8197dabe062aa57", "committedDate": "2020-07-27T12:03:52Z", "message": "Merge remote-tracking branch 'origin/OKAPI-871' into OKAPI-871"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe2ae252812765ac8a1af3c4775556298581d839", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/fe2ae252812765ac8a1af3c4775556298581d839", "committedDate": "2020-07-27T12:33:37Z", "message": "OKAPI-871 Review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ddb504fc362abfe011a6051abb0f08f2af262fc", "author": {"user": {"login": "hjiebsco", "name": "Hongwei Ji"}}, "url": "https://github.com/folio-org/okapi/commit/3ddb504fc362abfe011a6051abb0f08f2af262fc", "committedDate": "2020-07-29T11:00:36Z", "message": "Add methods to extract username and userId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDI0NDA3", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-457424407", "createdAt": "2020-07-29T11:17:37Z", "commit": {"oid": "fe2ae252812765ac8a1af3c4775556298581d839"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMToxNzozN1rOG4z4vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMToxNzozN1rOG4z4vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyMzU0OQ==", "bodyText": "Maybe also add following lines?\n    FolioLoggingContext.put(KEY, VALUE);\n    context.assertEquals(EMPTY_STRING, loggingContext.lookup(KEY));", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r462223549", "createdAt": "2020-07-29T11:17:37Z", "author": {"login": "hjiebsco"}, "path": "okapi-common/src/test/java/org/folio/okapi/common/FolioLoggingContextTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.folio.okapi.common;\n+\n+import org.folio.okapi.common.logging.FolioLoggingContext;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.unit.Async;\n+import io.vertx.ext.unit.TestContext;\n+import io.vertx.ext.unit.junit.VertxUnitRunner;\n+\n+@RunWith(VertxUnitRunner.class)\n+public class FolioLoggingContextTest {\n+\n+\n+  private static final String KEY = \"KEY\";\n+  private static final String VALUE = \"VALUE\";\n+  private static final String EMPTY_STRING = \"\";\n+\n+  private Vertx vertx;\n+\n+  @Before\n+  public void setup() {\n+    vertx = Vertx.vertx();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    vertx.close();\n+  }\n+\n+  @Test\n+  public void lookupWithoutContextTest(TestContext context) {\n+    FolioLoggingContext loggingContext = new FolioLoggingContext();\n+    context.assertEquals(EMPTY_STRING, loggingContext.lookup(KEY));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2ae252812765ac8a1af3c4775556298581d839"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c361848fdaa858cf9af23d74c7750d42a71e33b", "author": {"user": {"login": "hjiebsco", "name": "Hongwei Ji"}}, "url": "https://github.com/folio-org/okapi/commit/5c361848fdaa858cf9af23d74c7750d42a71e33b", "committedDate": "2020-07-29T11:26:28Z", "message": "Test null token"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5010edb6c691488d479e6b086736b91483500729", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/5010edb6c691488d479e6b086736b91483500729", "committedDate": "2020-07-30T12:15:51Z", "message": "OKAPI-871 Additional test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08efadd3db3f7ba349775199b9986ab7809d9e57", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/08efadd3db3f7ba349775199b9986ab7809d9e57", "committedDate": "2020-07-30T12:18:48Z", "message": "OKAPI-871 Add userId in Auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "978c3c7e40fcc0e2784eecb86939d5bc436e3109", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/978c3c7e40fcc0e2784eecb86939d5bc436e3109", "committedDate": "2020-07-30T13:34:37Z", "message": "Merge remote-tracking branch 'origin/username-userid' into OKAPI-871"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDEwMDU3", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-458410057", "createdAt": "2020-07-30T13:40:30Z", "commit": {"oid": "08efadd3db3f7ba349775199b9986ab7809d9e57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo0MDozMFrOG5jf3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzo0MDozMFrOG5jf3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMzYxNA==", "bodyText": "As chatted, we do not need to change okapi-test-auth-module/src/main/java/org/folio/okapi/auth/Auth.java", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r463003614", "createdAt": "2020-07-30T13:40:30Z", "author": {"login": "hjiebsco"}, "path": "okapi-test-auth-module/src/main/java/org/folio/okapi/auth/Auth.java", "diffHunk": "@@ -222,6 +223,8 @@ public void check(RoutingContext ctx) {\n     }\n     // Fake some module tokens\n     String modTok = moduleTokens(ctx);\n+    FolioLoggingContext.put(FolioLoggingContext.USER_ID_LOGGING_VAR_NAME,\n+        userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08efadd3db3f7ba349775199b9986ab7809d9e57"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72f8410820987d085c7ae4022421c4a903bbcdd3", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/72f8410820987d085c7ae4022421c4a903bbcdd3", "committedDate": "2020-07-30T13:47:06Z", "message": "OKAPI-871 Add userId in Auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de4092d38f0e6913cb7e251f80b2537c21f27466", "author": {"user": {"login": "hjiebsco", "name": "Hongwei Ji"}}, "url": "https://github.com/folio-org/okapi/commit/de4092d38f0e6913cb7e251f80b2537c21f27466", "committedDate": "2020-08-01T11:14:17Z", "message": "Fix broken build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a5d7a4e5ba7fb951a2e7aa15ee009680e5fdf04", "author": {"user": {"login": "hjiebsco", "name": "Hongwei Ji"}}, "url": "https://github.com/folio-org/okapi/commit/3a5d7a4e5ba7fb951a2e7aa15ee009680e5fdf04", "committedDate": "2020-08-01T11:15:29Z", "message": "Add bin to gitignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTI3OTUy", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-465127952", "createdAt": "2020-08-11T14:32:33Z", "commit": {"oid": "3a5d7a4e5ba7fb951a2e7aa15ee009680e5fdf04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDozMjozM1rOG-6y_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDozMjozM1rOG-6y_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyODIyMg==", "bodyText": "Taking a value out of a JWT token without validating the token can cause a security issue because anyone can spoof it.\nSuch a value must be handled with caution and care.\nI suggest to rename the methods to draw developer attention to the missing validation:\n\nrename getTenant() to getTenantWithoutValidation()\nrename getUsername() to getUsernameWithoutValidation()\nrename getUserId() to getUserIdWithoutValidation()\nrename getFieldFromToken(String) to getFieldFromTokenWithoutValidation(String)", "url": "https://github.com/folio-org/okapi/pull/951#discussion_r468628222", "createdAt": "2020-08-11T14:32:33Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java", "diffHunk": "@@ -41,16 +46,37 @@ private JsonObject getPayloadWithoutValidation() {\n     }\n   }\n \n+  private String getFieldFromToken(String field) {\n+    if (payloadWithoutValidation == null) {\n+      return null;\n+    }\n+    return payloadWithoutValidation.getString(field);\n+  }\n+\n   /**\n    * Get the tenant out from the token.\n    * Note there is no JWT validation taking place.\n    * @return null if no token, or no tenant there\n    */\n   public String getTenant() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a5d7a4e5ba7fb951a2e7aa15ee009680e5fdf04"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95a46cbbf506c7b8b5a86c1f61cd81a9c3d86e54", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/95a46cbbf506c7b8b5a86c1f61cd81a9c3d86e54", "committedDate": "2020-08-19T12:08:32Z", "message": "OKAPI-871 Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8134de1a2c3d32da8d902db36604dfd0a271812", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/d8134de1a2c3d32da8d902db36604dfd0a271812", "committedDate": "2020-08-19T12:15:26Z", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-871\n\n# Conflicts:\n#\t.gitignore\n#\tokapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6683bff1742773173f0bd22b101c27920850fb4", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/d6683bff1742773173f0bd22b101c27920850fb4", "committedDate": "2020-08-19T20:03:42Z", "message": "OKAPI-871 Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bb223ac68c9f9d817876be5024c70ba4b0ca28a", "author": {"user": {"login": "MikhailFokanov", "name": "Mikhail Fokanov"}}, "url": "https://github.com/folio-org/okapi/commit/9bb223ac68c9f9d817876be5024c70ba4b0ca28a", "committedDate": "2020-08-19T20:11:58Z", "message": "OKAPI-871 Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODUyODkz", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-471852893", "createdAt": "2020-08-20T17:54:30Z", "commit": {"oid": "9bb223ac68c9f9d817876be5024c70ba4b0ca28a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTUxMjA4", "url": "https://github.com/folio-org/okapi/pull/951#pullrequestreview-471951208", "createdAt": "2020-08-20T20:11:40Z", "commit": {"oid": "9bb223ac68c9f9d817876be5024c70ba4b0ca28a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2802, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}