{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MjIyNDQ2", "number": 869, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwOToxMzozMlrODXUoVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwOToxMzozMlrODXUoVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzgxODQ1OnYy", "diffSide": "RIGHT", "path": "okapi-common/src/main/java/org/folio/okapi/common/HttpClientCached.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQwOToxMzozMlrOFck9-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo0NzowOVrOFc3XRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUxMDEzNg==", "bodyText": "The list of authors that contributes code is tracked in the git commit history.\nDo you want to duplicate that information in the source code? How do we ensure that it is kept up to date? Is \"adam\" unambiguous now and in future?", "url": "https://github.com/folio-org/okapi/pull/869#discussion_r365510136", "createdAt": "2020-01-11T09:13:32Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/HttpClientCached.java", "diffHunk": "@@ -0,0 +1,286 @@\n+package org.folio.okapi.common;\n+\n+import io.vertx.core.AsyncResult;\n+import io.vertx.core.Handler;\n+import io.vertx.core.MultiMap;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.HttpClientRequest;\n+import io.vertx.core.http.HttpClientResponse;\n+import io.vertx.core.http.HttpMethod;\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import org.apache.logging.log4j.Logger;\n+\n+/**\n+ * HTTP client with cache .. Can be used in most case as a replacement of\n+ * Vert.x {@link io.vertx.core.http.HttpClient}\n+ *\n+ * @author adam", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ab42025afecfb11d4a01ba7bad8666ba749b73"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3MjIyOQ==", "bodyText": "Yes.. I'll remove it and the 8 in total Okapi. 67 in RMB by the way", "url": "https://github.com/folio-org/okapi/pull/869#discussion_r365772229", "createdAt": "2020-01-13T12:13:02Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/HttpClientCached.java", "diffHunk": "@@ -0,0 +1,286 @@\n+package org.folio.okapi.common;\n+\n+import io.vertx.core.AsyncResult;\n+import io.vertx.core.Handler;\n+import io.vertx.core.MultiMap;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.HttpClientRequest;\n+import io.vertx.core.http.HttpClientResponse;\n+import io.vertx.core.http.HttpMethod;\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import org.apache.logging.log4j.Logger;\n+\n+/**\n+ * HTTP client with cache .. Can be used in most case as a replacement of\n+ * Vert.x {@link io.vertx.core.http.HttpClient}\n+ *\n+ * @author adam", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUxMDEzNg=="}, "originalCommit": {"oid": "43ab42025afecfb11d4a01ba7bad8666ba749b73"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxMTUyNA==", "bodyText": "Thanks, resolved. (I cannot resolve this @author conversion because I don't have write permissions for this repository.)", "url": "https://github.com/folio-org/okapi/pull/869#discussion_r365811524", "createdAt": "2020-01-13T13:47:09Z", "author": {"login": "julianladisch"}, "path": "okapi-common/src/main/java/org/folio/okapi/common/HttpClientCached.java", "diffHunk": "@@ -0,0 +1,286 @@\n+package org.folio.okapi.common;\n+\n+import io.vertx.core.AsyncResult;\n+import io.vertx.core.Handler;\n+import io.vertx.core.MultiMap;\n+import io.vertx.core.http.HttpClient;\n+import io.vertx.core.http.HttpClientRequest;\n+import io.vertx.core.http.HttpClientResponse;\n+import io.vertx.core.http.HttpMethod;\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import org.apache.logging.log4j.Logger;\n+\n+/**\n+ * HTTP client with cache .. Can be used in most case as a replacement of\n+ * Vert.x {@link io.vertx.core.http.HttpClient}\n+ *\n+ * @author adam", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUxMDEzNg=="}, "originalCommit": {"oid": "43ab42025afecfb11d4a01ba7bad8666ba749b73"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 210, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}