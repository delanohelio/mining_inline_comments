{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Njk1NjM1", "number": 1007, "title": "Docker pull with authenticated user OKAPI-912", "bodyText": "Configuration property dockerRegistries includes list of registries\nwith authentication properties (as Docker uses them) and/or registry property. The latter to allow for pull on other repositories than DockerHub.", "createdAt": "2020-10-20T11:00:54Z", "url": "https://github.com/folio-org/okapi/pull/1007", "merged": true, "mergeCommit": {"oid": "16e334ea957ff7a140c3a5cb4ac965a154e8790d"}, "closed": true, "closedAt": "2020-10-22T13:08:20Z", "author": {"login": "adamdickmeiss"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUWo6PgH2gAyNTA2Njk1NjM1OjJhYjUzMzVkMGY3MDE4YjU5ZjVkYzc4ZGQ0YjEyMjFiY2M4MDMwMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVBlO0gFqTUxNDY5NzY3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2ab5335d0f7018b59f5dc78dd4b1221bcc803005", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/2ab5335d0f7018b59f5dc78dd4b1221bcc803005", "committedDate": "2020-10-20T10:58:19Z", "message": "Docker pull with authenticated user OKAPI-912\n\nConfiguration property `dockerRegistries` includes list of registries\nwith authenticaition at the moment. Expected to be extended with\na specifier for other registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb", "committedDate": "2020-10-20T11:36:55Z", "message": "Registry can be specified as part of dockerRegistries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODA5Njk4", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512809698", "createdAt": "2020-10-20T14:53:35Z", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzozNVrOHlBM7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzozNVrOHlBM7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3OTA1Mg==", "bodyText": "https://docs.docker.com/engine/api/v1.40/#section/Authentication allows \"identitytoken\", we should also support this.", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508579052", "createdAt": "2020-10-20T14:53:35Z", "author": {"login": "julianladisch"}, "path": "doc/guide.md", "diffHunk": "@@ -2750,6 +2750,13 @@ there happens to be one, Okapi will remove it.  Note that it may end\n with a path like in `https://folio.example.com/okapi`.\n * `dockerUrl`: Tells the Okapi deployment where the Docker Daemon\n is. Defaults to `unix:///var/run/docker.sock`.\n+* `dockerRegistries`: List of registries to use for Docker image pull. The\n+value is a JSON array of of objects where each object may have the following properties\n+`username`, `password`, `email`, `serveraddress` and `registry`. The first 4 properties\n+are passed as autentication to the Docker registry - refer to\n+[Docker Authenticaton](https://docs.docker.com/engine/api/v1.40/#section/Authentication).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODEwMTQz", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512810143", "createdAt": "2020-10-20T14:53:59Z", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1Mzo1OVrOHlBORw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1Mzo1OVrOHlBORw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3OTM5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            value is a JSON array of of objects where each object may have the following properties\n          \n          \n            \n            value is a JSON array of objects where each object may have the following properties", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508579399", "createdAt": "2020-10-20T14:53:59Z", "author": {"login": "julianladisch"}, "path": "doc/guide.md", "diffHunk": "@@ -2750,6 +2750,13 @@ there happens to be one, Okapi will remove it.  Note that it may end\n with a path like in `https://folio.example.com/okapi`.\n * `dockerUrl`: Tells the Okapi deployment where the Docker Daemon\n is. Defaults to `unix:///var/run/docker.sock`.\n+* `dockerRegistries`: List of registries to use for Docker image pull. The\n+value is a JSON array of of objects where each object may have the following properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODExNjY5", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512811669", "createdAt": "2020-10-20T14:55:19Z", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1NToxOVrOHlBTHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1NToxOVrOHlBTHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4MDYzNg==", "bodyText": "Can you add an example that also shows how we support unauthenticated pulls?", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508580636", "createdAt": "2020-10-20T14:55:19Z", "author": {"login": "julianladisch"}, "path": "doc/guide.md", "diffHunk": "@@ -2750,6 +2750,13 @@ there happens to be one, Okapi will remove it.  Note that it may end\n with a path like in `https://folio.example.com/okapi`.\n * `dockerUrl`: Tells the Okapi deployment where the Docker Daemon\n is. Defaults to `unix:///var/run/docker.sock`.\n+* `dockerRegistries`: List of registries to use for Docker image pull. The\n+value is a JSON array of of objects where each object may have the following properties\n+`username`, `password`, `email`, `serveraddress` and `registry`. The first 4 properties\n+are passed as autentication to the Docker registry - refer to\n+[Docker Authenticaton](https://docs.docker.com/engine/api/v1.40/#section/Authentication).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODYzOTYz", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512863963", "createdAt": "2020-10-20T15:30:04Z", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMDowNFrOHlDOhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMDowNFrOHlDOhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMjIyOA==", "bodyText": "You can replace the Boolean by future.recover:\nFuture<Void> future = Future.failedFuture(\"\");\nfor (int i = 0; i < dockerRegistries.size(); i++) {\n  ...\n  future = future.recover(failure -> {\n    ...\n    return postUrlJson(\"/images/create?fromImage=\" + prefix + image, authObject, \"pullImage\", \"\");\n  });\n}\nreturn future;\n\nThis has the additional benefit of returning the failure details of the last registry entry.", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508612228", "createdAt": "2020-10-20T15:30:04Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -237,15 +242,51 @@ private void logHandler(Buffer b) {\n     return getUrl(\"/images/\" + image + \"/json\");\n   }\n \n-  private Future<Void> pullImage() {\n-    logger.info(\"pull image {}\", image);\n-    return postUrlJson(\"/images/create?fromImage=\" + image, \"pullImage\", \"\")\n-        .mapEmpty();\n+  Future<Void> pullImage() {\n+    if (dockerRegistries == null) {\n+      logger.info(\"pull image {}\", image);\n+      return postUrlJson(\"/images/create?fromImage=\" + image, null, \"pullImage\", \"\")\n+          .mapEmpty();\n+    }\n+    logger.info(\"pull Image using dockerRegistries\");\n+    Future<Boolean> future = Future.succeededFuture(Boolean.FALSE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODc0NjU4", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512874658", "createdAt": "2020-10-20T15:40:23Z", "commit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo0MDoyM1rOHlD-SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo0MDoyM1rOHlD-SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYyNDQ1Nw==", "bodyText": "Can you also add a test with an empty JsonObject for unauthenticated pull?\nconf.put(\"dockerRegistries\", new JsonArray()\n        .add(new JsonObject())\n        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"y\")));", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508624457", "createdAt": "2020-10-20T15:40:23Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -136,6 +150,110 @@ private void dockerMockHandle(RoutingContext ctx) {\n     }\n   }\n \n+  @Test\n+  public void testDockerPull(TestContext context) {\n+    Vertx vertx = Vertx.vertx();\n+    int dockerPort = 9231;\n+\n+    Router router = Router.router(vertx);\n+    router.routeWithRegex(\"/.*\").handler(this::dockerMockHandle);\n+\n+    HttpServerOptions so = new HttpServerOptions().setHandle100ContinueAutomatically(true);\n+    HttpServer listen = vertx.createHttpServer(so)\n+        .requestHandler(router)\n+        .listen(dockerPort, context.asyncAssertSuccess());\n+    LaunchDescriptor ld = new LaunchDescriptor();\n+    ld.setWaitIterations(2);\n+    ld.setDockerImage(\"folioci/mod-x\");\n+    ld.setDockerPull(true);\n+\n+    Ports ports = new Ports(9232, 9233);\n+    JsonObject conf = new JsonObject().put(\"dockerUrl\", \"tcp://localhost:\" + dockerPort);\n+\n+    dockerPullJson = new JsonObject().put(\"message\", \"some message\");\n+    dockerPullStatus = 200;\n+\n+    {\n+      DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n+          \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\",\n+          9231, conf);\n+      Async async = context.async();\n+      dh.pullImage().onComplete(context.asyncAssertSuccess(x -> {\n+        async.complete();\n+      }));\n+      async.await();\n+    }\n+\n+    conf.put(\"dockerRegistries\", new JsonArray());\n+    {\n+      DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n+          \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\",\n+          9231, conf);\n+      Async async = context.async();\n+      dh.pullImage().onComplete(context.asyncAssertFailure(x -> {\n+        async.complete();\n+      }));\n+      async.await();\n+    }\n+\n+    conf.put(\"dockerRegistries\", new JsonArray()\n+        .addNull()\n+        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"y\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b555d00a24ebdcca5500ee4d2fdef9f21a28f3bb"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c16a790cb343aefef38d6e48e23646d076c214eb", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/c16a790cb343aefef38d6e48e23646d076c214eb", "committedDate": "2020-10-20T15:47:10Z", "message": "Merge branch 'master' of github.com:folio-org/okapi into OKAPI-912-docker-pull-with-auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31943da72b52fbff12b2bef1837dfa912423cc1", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/c31943da72b52fbff12b2bef1837dfa912423cc1", "committedDate": "2020-10-20T15:47:53Z", "message": "Doc updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1458fc08d146dc8b6db082f5884bc80f3ea6ef3", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/c1458fc08d146dc8b6db082f5884bc80f3ea6ef3", "committedDate": "2020-10-20T15:48:24Z", "message": "Simplify with recover (and no compose)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eca09b869fe2645c09b7e3babe100f1f408a334b", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/eca09b869fe2645c09b7e3babe100f1f408a334b", "committedDate": "2020-10-20T15:48:35Z", "message": "Case with empty object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74f949e1e2b0fd32afa0bfebabac6cee891cd0bd", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/74f949e1e2b0fd32afa0bfebabac6cee891cd0bd", "committedDate": "2020-10-20T15:51:34Z", "message": "identitytoken also passed if given"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODk3MTEy", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512897112", "createdAt": "2020-10-20T16:02:34Z", "commit": {"oid": "74f949e1e2b0fd32afa0bfebabac6cee891cd0bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjowMjozNFrOHlFg0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjowMjozNFrOHlFg0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY0OTY4MQ==", "bodyText": "All these code blocks are almost the same and might be extracted into a method, for example\nboolean pullImage(TestContext context, Vertx vertx, String host, JsonObject conf) {\n  LaunchDescriptor ld = new LaunchDescriptor();\n  ld.setWaitIterations(2);\n  ld.setDockerImage(\"folioci/mod-x\");\n  ld.setDockerPull(true);\n  Ports ports = new Ports(9232, 9233);\n  DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n          \"mod-users-5.0.0-SNAPSHOT\", ports, host,\n          9231, conf);\n  Async async = context.async();\n  AtomicBoolean succeeded = new AtomicBoolean();\n  dh.pullImage().onComplete(done -> {\n    succeeded.set(done.succeeded()));\n    async.complete();\n  });\n  async.await();\n  return succeeded.get();\n}\n\nassertThat(pullImage(context, vertx, \"localhost\", conf), is(true));", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508649681", "createdAt": "2020-10-20T16:02:34Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -136,6 +150,124 @@ private void dockerMockHandle(RoutingContext ctx) {\n     }\n   }\n \n+  @Test\n+  public void testDockerPull(TestContext context) {\n+    Vertx vertx = Vertx.vertx();\n+    int dockerPort = 9231;\n+\n+    Router router = Router.router(vertx);\n+    router.routeWithRegex(\"/.*\").handler(this::dockerMockHandle);\n+\n+    HttpServerOptions so = new HttpServerOptions().setHandle100ContinueAutomatically(true);\n+    HttpServer listen = vertx.createHttpServer(so)\n+        .requestHandler(router)\n+        .listen(dockerPort, context.asyncAssertSuccess());\n+    LaunchDescriptor ld = new LaunchDescriptor();\n+    ld.setWaitIterations(2);\n+    ld.setDockerImage(\"folioci/mod-x\");\n+    ld.setDockerPull(true);\n+\n+    Ports ports = new Ports(9232, 9233);\n+    JsonObject conf = new JsonObject().put(\"dockerUrl\", \"tcp://localhost:\" + dockerPort);\n+\n+    dockerPullJson = new JsonObject().put(\"message\", \"some message\");\n+    dockerPullStatus = 200;\n+\n+    {\n+      DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n+          \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\",\n+          9231, conf);\n+      Async async = context.async();\n+      dh.pullImage().onComplete(context.asyncAssertSuccess(x -> {\n+        async.complete();\n+      }));\n+      async.await();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f949e1e2b0fd32afa0bfebabac6cee891cd0bd"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c04206e278c0a9ca50cc6dd85d8d220e230454", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/c6c04206e278c0a9ca50cc6dd85d8d220e230454", "committedDate": "2020-10-20T16:42:37Z", "message": "pullImage helper for testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTUzMjE3", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-512953217", "createdAt": "2020-10-20T17:06:44Z", "commit": {"oid": "c6c04206e278c0a9ca50cc6dd85d8d220e230454"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNjo0NVrOHlIYzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzowNjo0NVrOHlIYzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5Njc4MA==", "bodyText": "The host value was \"localhost:5000\" before the last commit.\nIf we always use \"localhost\" this parameter can be removed and it can be hardcoded in pullImage.\nHow can we unit test that the \"registry\" parameter is handled correctly?", "url": "https://github.com/folio-org/okapi/pull/1007#discussion_r508696780", "createdAt": "2020-10-20T17:06:45Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -136,6 +151,68 @@ private void dockerMockHandle(RoutingContext ctx) {\n     }\n   }\n \n+  boolean pullImage(TestContext context, Vertx vertx, String host, JsonObject conf) {\n+    LaunchDescriptor ld = new LaunchDescriptor();\n+    ld.setWaitIterations(2);\n+    ld.setDockerImage(\"folioci/mod-x\");\n+    ld.setDockerPull(true);\n+    Ports ports = new Ports(9232, 9233);\n+    DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n+        \"mod-users-5.0.0-SNAPSHOT\", ports, host,\n+        9231, conf);\n+    Async async = context.async();\n+    AtomicBoolean succeeded = new AtomicBoolean();\n+    dh.pullImage().onComplete(done -> {\n+      succeeded.set(done.succeeded());\n+      async.complete();\n+    });\n+    async.await();\n+    return succeeded.get();\n+  }\n+\n+  @Test\n+  public void testDockerPull(TestContext context) {\n+    Vertx vertx = Vertx.vertx();\n+    int dockerPort = 9231;\n+\n+    Router router = Router.router(vertx);\n+    router.routeWithRegex(\"/.*\").handler(this::dockerMockHandle);\n+\n+    HttpServerOptions so = new HttpServerOptions().setHandle100ContinueAutomatically(true);\n+    HttpServer listen = vertx.createHttpServer(so)\n+        .requestHandler(router)\n+        .listen(dockerPort, context.asyncAssertSuccess());\n+    dockerPullJson = new JsonObject().put(\"message\", \"some message\");\n+    dockerPullStatus = 200;\n+\n+    JsonObject conf = new JsonObject().put(\"dockerUrl\", \"tcp://localhost:\" + dockerPort);\n+    context.assertTrue(pullImage(context, vertx, \"localhost\", conf));\n+\n+    conf.put(\"dockerRegistries\", new JsonArray());\n+    context.assertFalse(pullImage(context, vertx, \"localhost\", conf));\n+\n+    conf.put(\"dockerRegistries\", new JsonArray()\n+        .addNull()\n+        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"y\")));\n+    context.assertFalse(pullImage(context, vertx, \"localhost\", conf));\n+\n+    conf.put(\"dockerRegistries\", new JsonArray()\n+        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"y\"))\n+        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"x\"))\n+        .add(new JsonObject().put(\"username\", \"x\").put(\"password\", \"z\")));\n+    context.assertTrue(pullImage(context, vertx, \"localhost\", conf));\n+\n+    conf.put(\"dockerRegistries\", new JsonArray()\n+        .add(new JsonObject().put(\"registry\", \"localhost:5000\")));\n+    context.assertTrue(pullImage(context, vertx, \"localhost\", conf));\n+\n+    conf.put(\"dockerRegistries\", new JsonArray()\n+        .add(new JsonObject().put(\"registry\", \"localhost:5000/\")));\n+    context.assertTrue(pullImage(context, vertx, \"localhost\", conf));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6c04206e278c0a9ca50cc6dd85d8d220e230454"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNTE1MzI4", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-513515328", "createdAt": "2020-10-21T10:08:44Z", "commit": {"oid": "c6c04206e278c0a9ca50cc6dd85d8d220e230454"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d36021d2c3bc25967b2b03f397824ab39f53b260", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/d36021d2c3bc25967b2b03f397824ab39f53b260", "committedDate": "2020-10-22T09:16:38Z", "message": "Empty object for dockerRegistry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f93c1a6e432bd9b565d3cad255bcb63285d7b72e", "author": {"user": {"login": "adamdickmeiss", "name": "Adam Dickmeiss"}}, "url": "https://github.com/folio-org/okapi/commit/f93c1a6e432bd9b565d3cad255bcb63285d7b72e", "committedDate": "2020-10-22T09:43:29Z", "message": "Registry testing and containerHost is always \"localhost\"\n\nRegistry tested in two ways.. Against local mock to see we see the correct\nhost+port. Also testing against real Docker instance (if available) and\nsee that it indeed uses the registry we provide."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0Njk3Njcx", "url": "https://github.com/folio-org/okapi/pull/1007#pullrequestreview-514697671", "createdAt": "2020-10-22T13:00:13Z", "commit": {"oid": "f93c1a6e432bd9b565d3cad255bcb63285d7b72e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2877, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}