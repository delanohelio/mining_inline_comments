{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjU0NDMw", "number": 999, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxODoyOFrOEtamOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxODoyOFrOEtamOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU3MTQ1OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxODoyOFrOHhMMkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjo1NjozMlrOHiRR-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDg4Mg==", "bodyText": "Maybe adding a line to explain why x -> prepareContainer() is called twice?", "url": "https://github.com/folio-org/okapi/pull/999#discussion_r504564882", "createdAt": "2020-10-14T10:18:28Z", "author": {"login": "hjiebsco"}, "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -367,7 +367,7 @@ private int getExposedPort(JsonObject b) {\n   @Override\n   public Future<Void> start() {\n     if (dockerPull) {\n-      return pullImage().compose(x -> prepareContainer());\n+      return pullImage().compose(x -> prepareContainer(), x -> prepareContainer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46e89068ce92e25541680f888150911ce4324fe6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5Njc2Mg==", "bodyText": "It's not called twice.. Called on success and failure.. I'll use another more explicit method: Future.recover.", "url": "https://github.com/folio-org/okapi/pull/999#discussion_r505696762", "createdAt": "2020-10-15T16:56:32Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -367,7 +367,7 @@ private int getExposedPort(JsonObject b) {\n   @Override\n   public Future<Void> start() {\n     if (dockerPull) {\n-      return pullImage().compose(x -> prepareContainer());\n+      return pullImage().compose(x -> prepareContainer(), x -> prepareContainer());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDg4Mg=="}, "originalCommit": {"oid": "46e89068ce92e25541680f888150911ce4324fe6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 167, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}