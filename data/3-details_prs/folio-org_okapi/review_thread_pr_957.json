{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzc1MjE2", "number": 957, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo0MzowMFrOEV1Yjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyNjozOFrOEV2kNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzMwMTkxOnYy", "diffSide": "LEFT", "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo0MzowMFrOG80HGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjoxMDoxMFrOG9XcRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMTUyOQ==", "bodyText": "what is the reason for stripping this out?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466421529", "createdAt": "2020-08-06T13:43:00Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "diffHunk": "@@ -195,11 +194,6 @@ public String getPhaseLevel() {\n    * @param methods HTTP method name or \"*\" for all\n    */\n   public void setMethods(String[] methods) {\n-    for (String s : methods) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMTE1Ng==", "bodyText": "Because it never fires.. In fact HttpMethod.valueOf(\"GYF)\".name() == \"GYF\".", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466931156", "createdAt": "2020-08-07T09:32:29Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "diffHunk": "@@ -195,11 +194,6 @@ public String getPhaseLevel() {\n    * @param methods HTTP method name or \"*\" for all\n    */\n   public void setMethods(String[] methods) {\n-    for (String s : methods) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMTUyOQ=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAwMDM4OA==", "bodyText": "I've fixed this so that exception is thrown for invalid method.", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r467000388", "createdAt": "2020-08-07T12:10:10Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/bean/RoutingEntry.java", "diffHunk": "@@ -195,11 +194,6 @@ public String getPhaseLevel() {\n    * @param methods HTTP method name or \"*\" for all\n    */\n   public void setMethods(String[] methods) {\n-    for (String s : methods) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMTUyOQ=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzMzNDA1OnYy", "diffSide": "LEFT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo1MDoyM1rOG80bcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMzoyNlrOG9TPvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNjczNw==", "bodyText": "this refactoring is annoying, but at least this is cleaner...", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466426737", "createdAt": "2020-08-06T13:50:23Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -609,53 +608,55 @@ private void proxyRequestHttpClient(\n     RoutingContext ctx = pc.getCtx();\n     String url = makeUrl(mi, ctx);\n     HttpMethod meth = ctx.request().method();\n-    HttpClientRequest clientRequest = httpClient.requestAbs(meth, url, res1 -> {\n-      if (proxyHttpFail(pc, mi, res1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMTY0NQ==", "bodyText": "Yes.. It is a better API..", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466931645", "createdAt": "2020-08-07T09:33:26Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -609,53 +608,55 @@ private void proxyRequestHttpClient(\n     RoutingContext ctx = pc.getCtx();\n     String url = makeUrl(mi, ctx);\n     HttpMethod meth = ctx.request().method();\n-    HttpClientRequest clientRequest = httpClient.requestAbs(meth, url, res1 -> {\n-      if (proxyHttpFail(pc, mi, res1)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNjczNw=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzQyOTYyOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoxMjoxMlrOG81YAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozNjoyOFrOG9TVag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0MjI0Mw==", "bodyText": "why not just call res.result() once?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466442243", "createdAt": "2020-08-06T14:12:12Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -99,48 +100,62 @@ static String setupDockerAddress(StringBuilder socketAddress, String u) {\n     return u + \"/\" + DEFAULT_DOCKER_VERSION;\n   }\n \n-  private void handle204(HttpClientResponse res, String msg,\n+  private void handle204(AsyncResult<HttpClientResponse> res, String msg,\n                          Handler<AsyncResult<Void>> future) {\n+    if (res.failed()) {\n+      future.handle(res.mapEmpty());\n+      return;\n+    }\n     Buffer body = Buffer.buffer();\n-    res.handler(body::appendBuffer);\n-    res.endHandler(d -> {\n-      if (res.statusCode() == 204) {\n+    res.result().handler(body::appendBuffer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMzA5OA==", "bodyText": "Sure. Will do", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466933098", "createdAt": "2020-08-07T09:36:28Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -99,48 +100,62 @@ static String setupDockerAddress(StringBuilder socketAddress, String u) {\n     return u + \"/\" + DEFAULT_DOCKER_VERSION;\n   }\n \n-  private void handle204(HttpClientResponse res, String msg,\n+  private void handle204(AsyncResult<HttpClientResponse> res, String msg,\n                          Handler<AsyncResult<Void>> future) {\n+    if (res.failed()) {\n+      future.handle(res.mapEmpty());\n+      return;\n+    }\n     Buffer body = Buffer.buffer();\n-    res.handler(body::appendBuffer);\n-    res.endHandler(d -> {\n-      if (res.statusCode() == 204) {\n+    res.result().handler(body::appendBuffer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0MjI0Mw=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzQ3MTAwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyMTo0NlrOG81xlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyMTo0NlrOG81xlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0ODc5MQ==", "bodyText": "neat trick", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466448791", "createdAt": "2020-08-06T14:21:46Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -65,10 +69,19 @@\n   private int timerDelaySum = 0;\n   private int timerTenantInitStatus = 200;\n   private int timerTenantPermissionsStatus = 200;\n+  private HttpServer listenTimer;\n   private JsonObject timerPermissions = new JsonObject();\n   private JsonArray edgePermissionsAtInit = null;\n   private JsonObject timerTenantData;\n \n+  @Rule\n+  public TestWatcher watchman = new TestWatcher() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzQ4MTA5OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyMzo1M1rOG813uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMDoyNzowOVrOG9UxYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MDM2Mw==", "bodyText": "not sure it's a big deal, but is this really an equivalent test to 404 or 204?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466450363", "createdAt": "2020-08-06T14:23:53Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -314,14 +342,15 @@ private void td(TestContext context, Async async) {\n   @After\n   public void tearDown(TestContext context) {\n     Async async = context.async();\n-\n-    HttpClientLegacy.delete(httpClient, port, \"localhost\", \"/_/discovery/modules\", response -> {\n-      context.assertTrue(response.statusCode() == 404 || response.statusCode() == 204);\n-      response.endHandler(x -> {\n-        httpClient.close();\n-        td(context, async);\n-      });\n-    }).end();\n+    httpClient.delete(port, \"localhost\", \"/_/discovery/modules\",\n+        MultiMap.caseInsensitiveMultiMap(), res1 -> {\n+          context.assertTrue(res1.succeeded());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1NjY0MQ==", "bodyText": "Adding a test for 204 there.", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466956641", "createdAt": "2020-08-07T10:27:09Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -314,14 +342,15 @@ private void td(TestContext context, Async async) {\n   @After\n   public void tearDown(TestContext context) {\n     Async async = context.async();\n-\n-    HttpClientLegacy.delete(httpClient, port, \"localhost\", \"/_/discovery/modules\", response -> {\n-      context.assertTrue(response.statusCode() == 404 || response.statusCode() == 204);\n-      response.endHandler(x -> {\n-        httpClient.close();\n-        td(context, async);\n-      });\n-    }).end();\n+    httpClient.delete(port, \"localhost\", \"/_/discovery/modules\",\n+        MultiMap.caseInsensitiveMultiMap(), res1 -> {\n+          context.assertTrue(res1.succeeded());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MDM2Mw=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzQ4NTc4OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyNDo0NVrOG816XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjo1NjozM1rOG9YzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MTAzNw==", "bodyText": "Just curious why?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466451037", "createdAt": "2020-08-06T14:24:45Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -2177,20 +2214,20 @@ public void testRequestOnly(TestContext context) {\n       c.getLastReport().isEmpty());\n \n     final String docRequestOnly = \"{\" + LS\n-      + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n-      + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n-      + \"  \\\"filters\\\" : [ {\" + LS\n-      + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n-      + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n-      + \"    \\\"level\\\" : \\\"33\\\",\" + LS\n-      + \"    \\\"type\\\" : \\\"request-only\\\",\" + LS\n-      + \"    \\\"permissionsRequired\\\" : [ ]\" + LS\n-      + \"  } ],\" + LS\n-      + \"  \\\"launchDescriptor\\\" : {\" + LS\n-      + \"    \\\"exec\\\" : \"\n-      + \"\\\"java -Dport=%p -jar ../okapi-test-module/target/okapi-test-module-fat.jar\\\"\" + LS\n-      + \"  }\" + LS\n-      + \"}\";\n+        + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n+        + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n+        + \"  \\\"filters\\\" : [ {\" + LS\n+        + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n+        + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n+        + \"    \\\"level\\\" : \\\"30\\\",\" + LS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2MDUyNQ==", "bodyText": "It is meant to be executed after auth (level=10) and and before pre(level=40).", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466960525", "createdAt": "2020-08-07T10:36:35Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -2177,20 +2214,20 @@ public void testRequestOnly(TestContext context) {\n       c.getLastReport().isEmpty());\n \n     final String docRequestOnly = \"{\" + LS\n-      + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n-      + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n-      + \"  \\\"filters\\\" : [ {\" + LS\n-      + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n-      + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n-      + \"    \\\"level\\\" : \\\"33\\\",\" + LS\n-      + \"    \\\"type\\\" : \\\"request-only\\\",\" + LS\n-      + \"    \\\"permissionsRequired\\\" : [ ]\" + LS\n-      + \"  } ],\" + LS\n-      + \"  \\\"launchDescriptor\\\" : {\" + LS\n-      + \"    \\\"exec\\\" : \"\n-      + \"\\\"java -Dport=%p -jar ../okapi-test-module/target/okapi-test-module-fat.jar\\\"\" + LS\n-      + \"  }\" + LS\n-      + \"}\";\n+        + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n+        + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n+        + \"  \\\"filters\\\" : [ {\" + LS\n+        + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n+        + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n+        + \"    \\\"level\\\" : \\\"30\\\",\" + LS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MTAzNw=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAyMjY0MA==", "bodyText": "I get that, but by change from 33 to 30?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r467022640", "createdAt": "2020-08-07T12:56:33Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -2177,20 +2214,20 @@ public void testRequestOnly(TestContext context) {\n       c.getLastReport().isEmpty());\n \n     final String docRequestOnly = \"{\" + LS\n-      + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n-      + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n-      + \"  \\\"filters\\\" : [ {\" + LS\n-      + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n-      + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n-      + \"    \\\"level\\\" : \\\"33\\\",\" + LS\n-      + \"    \\\"type\\\" : \\\"request-only\\\",\" + LS\n-      + \"    \\\"permissionsRequired\\\" : [ ]\" + LS\n-      + \"  } ],\" + LS\n-      + \"  \\\"launchDescriptor\\\" : {\" + LS\n-      + \"    \\\"exec\\\" : \"\n-      + \"\\\"java -Dport=%p -jar ../okapi-test-module/target/okapi-test-module-fat.jar\\\"\" + LS\n-      + \"  }\" + LS\n-      + \"}\";\n+        + \"  \\\"id\\\" : \\\"request-only-1.0.0\\\",\" + LS\n+        + \"  \\\"name\\\" : \\\"request-only\\\",\" + LS\n+        + \"  \\\"filters\\\" : [ {\" + LS\n+        + \"    \\\"methods\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS\n+        + \"    \\\"path\\\" : \\\"/testb\\\",\" + LS\n+        + \"    \\\"level\\\" : \\\"30\\\",\" + LS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MTAzNw=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 272}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzQ5NTU4OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/bean/BeanTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoyNjozOFrOG82ASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxMjowOToyOFrOG9XazQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MjU1Mg==", "bodyText": "is having an invalid property value tested elsewhere?", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466452552", "createdAt": "2020-08-06T14:26:38Z", "author": {"login": "craigmcnally"}, "path": "okapi-core/src/test/java/org/folio/okapi/bean/BeanTest.java", "diffHunk": "@@ -233,7 +233,7 @@ public void testModuleDescriptorBadMethod() {\n       + \"    \\\"id\\\" : \\\"sample\\\",\" + LS\n       + \"    \\\"version\\\" : \\\"1.0\\\",\" + LS\n       + \"    \\\"handlers\\\" : [ {\" + LS\n-      + \"      \\\"methods\\\" : [ \\\"GET\\\", \\\"NOST\\\" ],\" + LS\n+      + \"      \\\"methods1\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk2MTczMg==", "bodyText": "Adding one for RoutingEntryTest .. However HttpMethod accepts any value, so Okapi doesn not reject, say, method=GYF", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r466961732", "createdAt": "2020-08-07T10:39:23Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/bean/BeanTest.java", "diffHunk": "@@ -233,7 +233,7 @@ public void testModuleDescriptorBadMethod() {\n       + \"    \\\"id\\\" : \\\"sample\\\",\" + LS\n       + \"    \\\"version\\\" : \\\"1.0\\\",\" + LS\n       + \"    \\\"handlers\\\" : [ {\" + LS\n-      + \"      \\\"methods\\\" : [ \\\"GET\\\", \\\"NOST\\\" ],\" + LS\n+      + \"      \\\"methods1\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MjU1Mg=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAwMDAxMw==", "bodyText": "I reverted this and fixed setMethod to throw exception for bad method.", "url": "https://github.com/folio-org/okapi/pull/957#discussion_r467000013", "createdAt": "2020-08-07T12:09:28Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/bean/BeanTest.java", "diffHunk": "@@ -233,7 +233,7 @@ public void testModuleDescriptorBadMethod() {\n       + \"    \\\"id\\\" : \\\"sample\\\",\" + LS\n       + \"    \\\"version\\\" : \\\"1.0\\\",\" + LS\n       + \"    \\\"handlers\\\" : [ {\" + LS\n-      + \"      \\\"methods\\\" : [ \\\"GET\\\", \\\"NOST\\\" ],\" + LS\n+      + \"      \\\"methods1\\\" : [ \\\"GET\\\", \\\"POST\\\" ],\" + LS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1MjU1Mg=="}, "originalCommit": {"oid": "6d9c7884fcd3f4433f3e144d4bc678f9f6b0b71c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 120, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}