{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDc2OTY2", "number": 1034, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowNzo1N1rOE2Bflg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo1MzowM1rOE3JXew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDgzMDMwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowNzo1N1rOHunzDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzozODoxOFrOHuuVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODU4OA==", "bodyText": "The method should be renamed to createModules to parallel the createModule method.\nThe method should be moved directly below to the createModule method.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518648588", "createdAt": "2020-11-06T10:07:57Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NTczMg==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518755732", "createdAt": "2020-11-06T13:38:18Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODU4OA=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDgzMzYwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDowODo1OFrOHun1NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzozODoxNFrOHuuVdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTE0MA==", "bodyText": "The each module descriptor should be validated the same way as createModule validates it.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518649140", "createdAt": "2020-11-06T10:08:58Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {\n+    try {\n+      HttpServerRequest req = pc.getCtx().request();\n+      final boolean check = ModuleUtil.getParamBoolean(req, \"check\", true);\n+      final boolean preRelease = ModuleUtil.getParamBoolean(req, \"preRelease\", true);\n+      final boolean npmSnapshot = ModuleUtil.getParamBoolean(req, \"npmSnapshot\", true);\n+      final ModuleDescriptor[] modules = Json.decodeValue(body, ModuleDescriptor[].class);\n+      return moduleManager.createList(Arrays.asList(modules), check, preRelease, npmSnapshot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NTcwMA==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518755700", "createdAt": "2020-11-06T13:38:14Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {\n+    try {\n+      HttpServerRequest req = pc.getCtx().request();\n+      final boolean check = ModuleUtil.getParamBoolean(req, \"check\", true);\n+      final boolean preRelease = ModuleUtil.getParamBoolean(req, \"preRelease\", true);\n+      final boolean npmSnapshot = ModuleUtil.getParamBoolean(req, \"npmSnapshot\", true);\n+      final ModuleDescriptor[] modules = Json.decodeValue(body, ModuleDescriptor[].class);\n+      return moduleManager.createList(Arrays.asList(modules), check, preRelease, npmSnapshot);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTE0MA=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDg0NDUyOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/raml/okapi.raml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxMjowOFrOHun7zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzozODoxMFrOHuuVSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MDgzMQ==", "bodyText": "Can you move it just before /_/proxy/modules: to have these very similar endpoints next to each other?", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518650831", "createdAt": "2020-11-06T10:12:08Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NTY1Nw==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518755657", "createdAt": "2020-11-06T13:38:10Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MDgzMQ=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDg2NDkxOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/raml/okapi.raml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxODowMlrOHuoILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzozOTowM1rOHuuXNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1Mzk5Nw==", "bodyText": "The related endpoints should have related descriptions:\n/_/proxy/modules:\n  description: Proxy modules service\n\n/_/proxy/import/modules:\n  description: Proxy modules service, list import", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518653997", "createdAt": "2020-11-06T10:18:02Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NjE1MA==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518756150", "createdAt": "2020-11-06T13:39:03Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1Mzk5Nw=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDg2OTg3OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/raml/okapi.raml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxOTo0M1rOHuoLjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzozOTowOVrOHuuXdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NDg2MA==", "bodyText": "Please copy the queryParameters documentation from /_/proxy/modules.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518654860", "createdAt": "2020-11-06T10:19:43Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules\n+  post:\n+    description: Import list modules.\n+    body:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NjIxNQ==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518756215", "createdAt": "2020-11-06T13:39:09Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules\n+  post:\n+    description: Import list modules.\n+    body:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NDg2MA=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDkxMDM0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/raml/okapi.raml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDozMTowNlrOHuoj1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMzo0MDozMlrOHuuaqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2MTA3Ng==", "bodyText": "The descriptions of the related endpoints should link to each other, be similar and verbose.\n/_/proxy/modules:\n  post:\n    description: Announce one new module to the proxy. Once successful a module\n      can be selected for a specific tenant. To announce a list of modules use\n      /_/proxy/import/modules.\n\n/_/proxy/import/modules:\n  post:\n    description: Announce a list of new modules to the proxy. Once successful a module\n      can be selected for a specific tenant. To announce only one module you may use\n      /_/proxy/modules.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518661076", "createdAt": "2020-11-06T10:31:06Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules\n+  post:\n+    description: Import list modules.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NzAzNQ==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518757035", "createdAt": "2020-11-06T13:40:32Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/raml/okapi.raml", "diffHunk": "@@ -1128,6 +1128,31 @@ types:\n         body:\n           text/plain:\n \n+/_/proxy/import/modules:\n+  description: Import modules\n+  post:\n+    description: Import list modules.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2MTA3Ng=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTA1MTAwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTowOToyM1rOHup5gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTowOToyM1rOHup5gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzAwOQ==", "bodyText": "Such code blocks can be avoided if the classes provide methods/constructors that reduce noise in the test setup.\nmdA.setProvides(\"intA\", \"1.0\", new RoutingEntry(\"/a\", \"GET\"));\n\npublic RoutingEntry(String pathPattern, String... httpMethods)", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518683009", "createdAt": "2020-11-06T11:09:23Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4196,6 +4196,87 @@ private void setupBasicModule(String tenant, String moduleId, String tenantPermi\n         .then().statusCode(200).log().ifValidationFails();\n   }\n \n+  @Test\n+  public void testImportModules(TestContext context) {\n+    RestAssuredClient c;\n+\n+    c = api.createRestAssured3();\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"{\\\"id\\\":\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(400);\n+\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"[]\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(204);\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    ModuleDescriptor mdA = new ModuleDescriptor();\n+    mdA.setId(\"moduleA-1.0.0\");\n+    {\n+      RoutingEntry[] routingEntries = new RoutingEntry[1];\n+      RoutingEntry routingEntry = routingEntries[0] = new RoutingEntry();\n+      routingEntry.setPathPattern(\"/a\");\n+      routingEntry.setMethods(new String[]{\"GET\"});\n+\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      interfaceDescriptor.setHandlers(routingEntries);\n+      mdA.setProvides(interfaceDescriptors);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTA1MTI5OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTowOToyNlrOHup5pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTo0MToxOFrOHvqv7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzA0NQ==", "bodyText": "Such code blocks can be avoided if the classes provide methods/constructors that reduce noise in the test setup.\nmdB.setRequires(\"intA\", \"1.0\");", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518683045", "createdAt": "2020-11-06T11:09:26Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4196,6 +4196,87 @@ private void setupBasicModule(String tenant, String moduleId, String tenantPermi\n         .then().statusCode(200).log().ifValidationFails();\n   }\n \n+  @Test\n+  public void testImportModules(TestContext context) {\n+    RestAssuredClient c;\n+\n+    c = api.createRestAssured3();\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"{\\\"id\\\":\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(400);\n+\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"[]\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(204);\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    ModuleDescriptor mdA = new ModuleDescriptor();\n+    mdA.setId(\"moduleA-1.0.0\");\n+    {\n+      RoutingEntry[] routingEntries = new RoutingEntry[1];\n+      RoutingEntry routingEntry = routingEntries[0] = new RoutingEntry();\n+      routingEntry.setPathPattern(\"/a\");\n+      routingEntry.setMethods(new String[]{\"GET\"});\n+\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      interfaceDescriptor.setHandlers(routingEntries);\n+      mdA.setProvides(interfaceDescriptors);\n+    }\n+\n+    ModuleDescriptor mdB = new ModuleDescriptor();\n+    mdB.setId(\"moduleB-1.0.0\");\n+    {\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      mdB.setRequires(interfaceDescriptors);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0NTUxOQ==", "bodyText": "OK. Not much saving here.. But I'm sure it can come in handy.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r519745519", "createdAt": "2020-11-09T11:41:18Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4196,6 +4196,87 @@ private void setupBasicModule(String tenant, String moduleId, String tenantPermi\n         .then().statusCode(200).log().ifValidationFails();\n   }\n \n+  @Test\n+  public void testImportModules(TestContext context) {\n+    RestAssuredClient c;\n+\n+    c = api.createRestAssured3();\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"{\\\"id\\\":\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(400);\n+\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"[]\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(204);\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    ModuleDescriptor mdA = new ModuleDescriptor();\n+    mdA.setId(\"moduleA-1.0.0\");\n+    {\n+      RoutingEntry[] routingEntries = new RoutingEntry[1];\n+      RoutingEntry routingEntry = routingEntries[0] = new RoutingEntry();\n+      routingEntry.setPathPattern(\"/a\");\n+      routingEntry.setMethods(new String[]{\"GET\"});\n+\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      interfaceDescriptor.setHandlers(routingEntries);\n+      mdA.setProvides(interfaceDescriptors);\n+    }\n+\n+    ModuleDescriptor mdB = new ModuleDescriptor();\n+    mdB.setId(\"moduleB-1.0.0\");\n+    {\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      mdB.setRequires(interfaceDescriptors);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzA0NQ=="}, "originalCommit": {"oid": "3c204f75d76b818b143818887914563536bb7e2d"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjQ4ODQ1OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOToyNjowMFrOHwTZdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo0MTozNVrOHxNnNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA==", "bodyText": "cause can be null\npublic void responseError(ErrorType t, Throwable cause) might be called with a null cause and calls private void responseError(int code, Throwable cause) .\nString msg = (cause != null && cause.getMessage() != null) ? cause.getMessage() : messages.getMessage(\"10300\");\nif (code == 500) {\n  logger.warn(msg, cause);\n}\nresponseError(code, msg);", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520411508", "createdAt": "2020-11-10T09:26:00Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java", "diffHunk": "@@ -237,7 +237,10 @@ public void responseError(ErrorType t, Throwable cause) {\n   }\n \n   private void responseError(int code, Throwable cause) {\n-    if (cause != null && cause.getMessage() != null) {\n+    if (code == 500) {\n+      logger.warn(cause.getMessage(), cause);\n+    }\n+    if (cause.getMessage() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MDk3Nw==", "bodyText": "I don't see how cause can be null, so can not make coverage of that, unless I fake it with a ProxyContext unit test.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521360977", "createdAt": "2020-11-11T13:34:29Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java", "diffHunk": "@@ -237,7 +237,10 @@ public void responseError(ErrorType t, Throwable cause) {\n   }\n \n   private void responseError(int code, Throwable cause) {\n-    if (cause != null && cause.getMessage() != null) {\n+    if (code == 500) {\n+      logger.warn(cause.getMessage(), cause);\n+    }\n+    if (cause.getMessage() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA=="}, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NTMwMA==", "bodyText": "Regret that I didn't make this change in a separate PR. It an important backtrace to get..", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521365300", "createdAt": "2020-11-11T13:41:35Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java", "diffHunk": "@@ -237,7 +237,10 @@ public void responseError(ErrorType t, Throwable cause) {\n   }\n \n   private void responseError(int code, Throwable cause) {\n-    if (cause != null && cause.getMessage() != null) {\n+    if (code == 500) {\n+      logger.warn(cause.getMessage(), cause);\n+    }\n+    if (cause.getMessage() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA=="}, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjUzMjIwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTozNTo1M1rOHwT0dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzozNTowMVrOHxNXfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxODQyMQ==", "bodyText": "If someone has okapi.proxy.tenants.post permission and therefore is allowed to use POST /_/proxy/modules with one module at a time why should they not do exactly the same thing with a list of modules?\nMy suggestion is to avoid this new permission and reuse okapi.proxy.tenants.post.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520418421", "createdAt": "2020-11-10T09:35:53Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -201,6 +201,13 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.discovery.nodes.get\\\"  ], \"\n         + \"    \\\"type\\\" : \\\"internal\\\" \"\n         + \"   }, \"\n+        // import modules\n+        + \"   {\"\n+        + \"    \\\"methods\\\" :  [ \\\"POST\\\" ],\"\n+        + \"    \\\"pathPattern\\\" : \\\"/_/proxy/import/modules\\\",\"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.import.modules.post\\\" ], \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MTI3Ng==", "bodyText": "Not what we typically, do. But ok.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521361276", "createdAt": "2020-11-11T13:35:01Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -201,6 +201,13 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.discovery.nodes.get\\\"  ], \"\n         + \"    \\\"type\\\" : \\\"internal\\\" \"\n         + \"   }, \"\n+        // import modules\n+        + \"   {\"\n+        + \"    \\\"methods\\\" :  [ \\\"POST\\\" ],\"\n+        + \"    \\\"pathPattern\\\" : \\\"/_/proxy/import/modules\\\",\"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.import.modules.post\\\" ], \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxODQyMQ=="}, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjU5ODQwOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo1MToxM1rOHwUc5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo1NzowNVrOHxONSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyODc3Mg==", "bodyText": "If we decide that we need a new permission.\nThen we should\n\nuse a permission name the reflects the similarity to okapi.proxy.tenants.post\ncopy the wording we use in the raml file.\n\nExample:\n\"permissionName\" : \"okapi.proxy.tenants.post-list\"\n\"displayName\" : \"Okapi - announce new modules to proxy\"\n\"description\" : \"Announce a list of new modules to the proxy\"", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520428772", "createdAt": "2020-11-10T09:51:13Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NTA0OQ==", "bodyText": "I'm lazy and will reuse the existing permission.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521375049", "createdAt": "2020-11-11T13:57:05Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyODc3Mg=="}, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjYwNjAzOnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo1MzowM1rOHwUhrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo1Njo0OFrOHxOMfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyOTk5OQ==", "bodyText": "Can you copy the wording from the .raml file into the existing permission in the descriptor?\nThe existing permission\n\"permissionName\" : \"okapi.proxy.modules.post\"\n\"displayName\" : \"Okapi - declare a module\"\n\"description\" : \"Declare a module\"\n\nshould become\n\"permissionName\" : \"okapi.proxy.modules.post\"\n\"displayName\" : \"Okapi - announce new module to proxy\"\n\"description\" : \"Announce a new module to the proxy\"", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520429999", "createdAt": "2020-11-10T09:53:03Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"\n+        + \" }, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NDg0NA==", "bodyText": "ok.", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521374844", "createdAt": "2020-11-11T13:56:48Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"\n+        + \" }, \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyOTk5OQ=="}, "originalCommit": {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 192, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}