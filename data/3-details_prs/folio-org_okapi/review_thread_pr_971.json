{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1ODA3OTMy", "number": 971, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozNjoxNVrOEjEHqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDoxMFrOEjEnCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjAzMTE0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/main/java/org/folio/okapi/managers/DiscoveryManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDozNjoxNVrOHRN0JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDowMzoxNFrOHR6ZXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNDE4MQ==", "bodyText": "x should be renamed to e and the fail method been used.", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487814181", "createdAt": "2020-09-14T10:36:15Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/DiscoveryManager.java", "diffHunk": "@@ -578,23 +587,28 @@ void health(DeploymentDescriptor md,\n       fut.handle(new Success<>(hd));\n       return;\n     }\n-    httpClient.get(new RequestOptions().setAbsoluteURI(url), res1 -> {\n-      if (res1.failed()) {\n-        hd.setHealthMessage(\"Fail: \" + res1.cause().getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+    httpClient.request(new RequestOptions().setAbsoluteURI(url).setMethod(HttpMethod.GET), req -> {\n+      if (req.failed()) {\n+        fail(req.cause(), hd, fut);\n         return;\n       }\n-      HttpClientResponse response = res1.result();\n-      response.endHandler(res -> {\n-        hd.setHealthMessage(\"OK\");\n-        hd.setHealthStatus(true);\n-        fut.handle(new Success<>(hd));\n-      });\n-      response.exceptionHandler(res -> {\n-        hd.setHealthMessage(\"Fail: \" + res.getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+      req.result().end();\n+      req.result().onComplete(res -> {\n+        if (res.failed()) {\n+          fail(res.cause(), hd, fut);\n+          return;\n+        }\n+        HttpClientResponse response = res.result();\n+        response.endHandler(x -> {\n+          hd.setHealthMessage(\"OK\");\n+          hd.setHealthStatus(true);\n+          fut.handle(new Success<>(hd));\n+        });\n+        response.exceptionHandler(x -> {\n+          hd.setHealthMessage(\"Fail: \" + x.getMessage());\n+          hd.setHealthStatus(false);\n+          fut.handle(new Success<>(hd));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDYwNg==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544606", "createdAt": "2020-09-15T10:03:14Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/main/java/org/folio/okapi/managers/DiscoveryManager.java", "diffHunk": "@@ -578,23 +587,28 @@ void health(DeploymentDescriptor md,\n       fut.handle(new Success<>(hd));\n       return;\n     }\n-    httpClient.get(new RequestOptions().setAbsoluteURI(url), res1 -> {\n-      if (res1.failed()) {\n-        hd.setHealthMessage(\"Fail: \" + res1.cause().getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+    httpClient.request(new RequestOptions().setAbsoluteURI(url).setMethod(HttpMethod.GET), req -> {\n+      if (req.failed()) {\n+        fail(req.cause(), hd, fut);\n         return;\n       }\n-      HttpClientResponse response = res1.result();\n-      response.endHandler(res -> {\n-        hd.setHealthMessage(\"OK\");\n-        hd.setHealthStatus(true);\n-        fut.handle(new Success<>(hd));\n-      });\n-      response.exceptionHandler(res -> {\n-        hd.setHealthMessage(\"Fail: \" + res.getMessage());\n-        hd.setHealthStatus(false);\n-        fut.handle(new Success<>(hd));\n+      req.result().end();\n+      req.result().onComplete(res -> {\n+        if (res.failed()) {\n+          fail(res.cause(), hd, fut);\n+          return;\n+        }\n+        HttpClientResponse response = res.result();\n+        response.endHandler(x -> {\n+          hd.setHealthMessage(\"OK\");\n+          hd.setHealthStatus(true);\n+          fut.handle(new Success<>(hd));\n+        });\n+        response.exceptionHandler(x -> {\n+          hd.setHealthMessage(\"Fail: \" + x.getMessage());\n+          hd.setHealthStatus(false);\n+          fut.handle(new Success<>(hd));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgxNDE4MQ=="}, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjA4MzY3OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/MultiTenantTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMDo1MTo0MlrOHROThw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDowMzowOFrOHR6ZNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjIxNQ==", "bodyText": "This is a more natural way because it also checks that closing vertx succeeds:\nhttpClient.close();\nvertx.close(context.asyncAssertSuccess());\nasync.complete();", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487822215", "createdAt": "2020-09-14T10:51:42Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/MultiTenantTest.java", "diffHunk": "@@ -142,15 +143,19 @@ private void td(TestContext context, Async async) {\n   public void tearDown(TestContext context) {\n     Async async = context.async();\n     HttpClient httpClient = vertx.createHttpClient();\n-\n-    httpClient.delete(port, \"localhost\",\n-      \"/_/discovery/modules\", context.asyncAssertSuccess(response -> {\n-      context.assertEquals(204, response.statusCode());\n-      response.endHandler(x -> {\n-        httpClient.close();\n-        td(context, async);\n-      });\n-    }));\n+    httpClient.request(HttpMethod.DELETE, port,\n+        \"localhost\", \"/_/discovery/modules\", context.asyncAssertSuccess(request -> {\n+          request.end();\n+          request.onComplete(context.asyncAssertSuccess(response -> {\n+            context.assertEquals(204, response.statusCode());\n+            response.endHandler(x -> {\n+              httpClient.close();\n+              vertx.close(y -> {\n+                async.complete();\n+              });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDU2NQ==", "bodyText": "ok", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544565", "createdAt": "2020-09-15T10:03:08Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/MultiTenantTest.java", "diffHunk": "@@ -142,15 +143,19 @@ private void td(TestContext context, Async async) {\n   public void tearDown(TestContext context) {\n     Async async = context.async();\n     HttpClient httpClient = vertx.createHttpClient();\n-\n-    httpClient.delete(port, \"localhost\",\n-      \"/_/discovery/modules\", context.asyncAssertSuccess(response -> {\n-      context.assertEquals(204, response.statusCode());\n-      response.endHandler(x -> {\n-        httpClient.close();\n-        td(context, async);\n-      });\n-    }));\n+    httpClient.request(HttpMethod.DELETE, port,\n+        \"localhost\", \"/_/discovery/modules\", context.asyncAssertSuccess(request -> {\n+          request.end();\n+          request.onComplete(context.asyncAssertSuccess(response -> {\n+            context.assertEquals(204, response.statusCode());\n+            response.endHandler(x -> {\n+              httpClient.close();\n+              vertx.close(y -> {\n+                async.complete();\n+              });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyMjIxNQ=="}, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjExMTQ0OnYy", "diffSide": "RIGHT", "path": "okapi-core/src/test/java/org/folio/okapi/OkapiPerformance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDoxMFrOHROkEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMDowMzowNVrOHR6ZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjQ1MA==", "bodyText": "Remove x -> otherwise this will be called after the test has finished and will therefore not check whether vertx close has failed.", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r487826450", "createdAt": "2020-09-14T11:00:10Z", "author": {"login": "julianladisch"}, "path": "okapi-core/src/test/java/org/folio/okapi/OkapiPerformance.java", "diffHunk": "@@ -55,53 +56,11 @@ public void setUp(TestContext context) {\n   @After\n   public void tearDown(TestContext context) {\n     async = context.async();\n-    td(context);\n-  }\n-\n-  public void td(TestContext context) {\n-    if (locationAuth != null) {\n-      httpClient.delete(port, \"localhost\", locationAuth, context.asyncAssertSuccess(response -> {\n-            context.assertEquals(204, response.statusCode());\n-            response.endHandler(x -> {\n-              locationAuth = null;\n-              td(context);\n-            });\n-          }));\n-      return;\n-    }\n-    if (locationSample != null) {\n-      httpClient.delete(port, \"localhost\", locationSample, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample2 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample2, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample2 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample3 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample3, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample3 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    vertx.close(x -> {\n-      async.complete();\n-    });\n+    httpClient.request(HttpMethod.DELETE, port, \"localhost\", \"/_/discovery/modules\")\n+        .onComplete(context.asyncAssertSuccess(res -> {\n+          vertx.close(x -> context.asyncAssertSuccess());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU0NDUyMw==", "bodyText": "good catch", "url": "https://github.com/folio-org/okapi/pull/971#discussion_r488544523", "createdAt": "2020-09-15T10:03:05Z", "author": {"login": "adamdickmeiss"}, "path": "okapi-core/src/test/java/org/folio/okapi/OkapiPerformance.java", "diffHunk": "@@ -55,53 +56,11 @@ public void setUp(TestContext context) {\n   @After\n   public void tearDown(TestContext context) {\n     async = context.async();\n-    td(context);\n-  }\n-\n-  public void td(TestContext context) {\n-    if (locationAuth != null) {\n-      httpClient.delete(port, \"localhost\", locationAuth, context.asyncAssertSuccess(response -> {\n-            context.assertEquals(204, response.statusCode());\n-            response.endHandler(x -> {\n-              locationAuth = null;\n-              td(context);\n-            });\n-          }));\n-      return;\n-    }\n-    if (locationSample != null) {\n-      httpClient.delete(port, \"localhost\", locationSample, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample2 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample2, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample2 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    if (locationSample3 != null) {\n-      httpClient.delete(port, \"localhost\", locationSample3, context.asyncAssertSuccess(response -> {\n-        context.assertEquals(204, response.statusCode());\n-        response.endHandler(x -> {\n-          locationSample3 = null;\n-          td(context);\n-        });\n-      }));\n-      return;\n-    }\n-    vertx.close(x -> {\n-      async.complete();\n-    });\n+    httpClient.request(HttpMethod.DELETE, port, \"localhost\", \"/_/discovery/modules\")\n+        .onComplete(context.asyncAssertSuccess(res -> {\n+          vertx.close(x -> context.asyncAssertSuccess());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjQ1MA=="}, "originalCommit": {"oid": "bb4f4c32ec15fdda2064a3838311035bc853c3cb"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 133, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}