{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MzM0MDEz", "number": 634, "title": "SO-4202: fix merge performance issue when merging huge amount of changes into a branch", "bodyText": "", "createdAt": "2020-08-11T20:19:25Z", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634", "merged": true, "mergeCommit": {"oid": "21ca43ee093ad77908c0afe7b1e6ee3f4425d304"}, "closed": true, "closedAt": "2020-08-12T12:23:06Z", "author": {"login": "cmark"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8SZtvgH2gAyNDY2MzM0MDEzOmM3NzJkYWRhYjJiZjk1YTNjOWUxZjUzMzJlN2FhNTk1MmFkNjM1ZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-HpFkAH2gAyNDY2MzM0MDEzOmE5OGQyZGU1M2I3MTQ5ZDdjODg2N2EzOTEyMGM0ZjJmMmRkMmRkNGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c772dadab2bf95a3c9e1f5332e7aa5952ad635df", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/c772dadab2bf95a3c9e1f5332e7aa5952ad635df", "committedDate": "2020-08-06T16:27:55Z", "message": "SO-4202: load commits in batches of 20 to reduce memory constraint...\n\n...when comparing changes between to branches with large result sets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08cdb4d51648bdfe17eee038b051224b8f722ba4", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/08cdb4d51648bdfe17eee038b051224b8f722ba4", "committedDate": "2020-08-06T16:28:42Z", "message": "SO-4202: replace String.format with String.join...\n\n...in ObjectId and RevisionCompareDetail to improve performance of\ncompare and merge processes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ffe6b83545d8315b6cb6865514981aca538f087", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/6ffe6b83545d8315b6cb6865514981aca538f087", "committedDate": "2020-08-06T19:30:22Z", "message": "SO-4202: unrelated String.format replacements, cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b8e5e2de9977240c1a87c222f75e1fe01405be", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/b2b8e5e2de9977240c1a87c222f75e1fe01405be", "committedDate": "2020-08-11T17:41:00Z", "message": "Merge remote-tracking branch 'origin/7.x' into issue/SO-4202-merge_performance_issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/7b41cdc8dd81e236afff1c1938625c74dbf68ec9", "committedDate": "2020-08-11T20:18:34Z", "message": "SO-4202 #resolve\n\nFix merge performance issue when merging huge amount of changes from a\nbranch into another (speed up conflict detection)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjgyMjQ5", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634#pullrequestreview-465682249", "createdAt": "2020-08-12T08:06:02Z", "commit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODowNjowMlrOG_WYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODoyOTozOVrOG_XO_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MDA4MA==", "bodyText": "This is now a separator, not a String template. Please rename the constant", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634#discussion_r469080080", "createdAt": "2020-08-12T08:06:02Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/revision/RevisionCompareDetail.java", "diffHunk": "@@ -27,6 +27,8 @@\n  */\n public final class RevisionCompareDetail {\n \n+\tprivate static final String PROPERTY_CHANGE_KEY_TEMPLATE = \"_\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MDc5OA==", "bodyText": "The property also has a @JsonIgnore annotation.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634#discussion_r469080798", "createdAt": "2020-08-12T08:07:30Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/revision/RevisionCompareDetail.java", "diffHunk": "@@ -40,6 +42,9 @@\n \tprivate final String fromValue;\n \tprivate final String value;\n \t\n+\t@JsonIgnore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA5MjUzOA==", "bodyText": "It no longer seems to be necessary to consume Map entries here \ud83e\udd14 We're not doing anything with any leftover entries in sourcePropertyChanges (or indirectly via sourcePropertyChangesByObject).", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634#discussion_r469092538", "createdAt": "2020-08-12T08:26:50Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java", "diffHunk": "@@ -673,43 +673,41 @@ void merge(RevisionBranchRef fromRef, RevisionBranchRef toRef, boolean squash, R\n \t\t\t// then handle changed vs. changed with the conflict processor\n \t\t\tSet<String> changedInSourceAndTargetIds = Sets.intersection(changedRevisionIdsToMerge, changedRevisionIdsToCheck);\n \t\t\tif (!changedInSourceAndTargetIds.isEmpty()) {\n+\t\t\t\tfinal Map<String, Map<String, RevisionCompareDetail>> sourcePropertyChangesByObject = indexPropertyChangesByObject(fromChangeDetails);\n+\t\t\t\tfinal Map<String, Map<String, RevisionCompareDetail>> targetPropertyChangesByObject = indexPropertyChangesByObject(toChangeDetails);\n \t\t\t\tfor (String changedInSourceAndTargetId : changedInSourceAndTargetIds) {\n-\t\t\t\t\tMap<String, RevisionCompareDetail> sourcePropertyChanges = fromChangeDetails.stream()\n-\t\t\t\t\t\t\t.filter(detail -> detail.getObject().id().equals(changedInSourceAndTargetId))\n-\t\t\t\t\t\t\t.filter(detail -> !detail.isComponentChange())\n-\t\t\t\t\t\t\t.collect(Collectors.toMap(RevisionCompareDetail::getProperty, d -> d));\n-\t\t\t\t\tMap<String, RevisionCompareDetail> targetPropertyChanges = toChangeDetails.stream()\n-\t\t\t\t\t\t\t.filter(detail -> detail.getObject().id().equals(changedInSourceAndTargetId))\n-\t\t\t\t\t\t\t.filter(detail -> !detail.isComponentChange())\n-\t\t\t\t\t\t\t.collect(Collectors.toMap(RevisionCompareDetail::getProperty, d -> d));\n+\t\t\t\t\tfinal Map<String, RevisionCompareDetail> sourcePropertyChanges = sourcePropertyChangesByObject.get(changedInSourceAndTargetId);\n+\t\t\t\t\tfinal Map<String, RevisionCompareDetail> targetPropertyChanges = targetPropertyChangesByObject.get(changedInSourceAndTargetId);\n \t\t\t\t\t\n-\t\t\t\t\tfor (Entry<String, RevisionCompareDetail> sourceChange : Iterables.consumingIterable(sourcePropertyChanges.entrySet())) {\n-\t\t\t\t\t\tfinal RevisionPropertyDiff sourceChangeDiff = new RevisionPropertyDiff(sourceChange.getValue().getProperty(), sourceChange.getValue().getFromValue(), sourceChange.getValue().getValue());\n-\t\t\t\t\t\tfinal RevisionCompareDetail targetPropertyChange = targetPropertyChanges.remove(sourceChange.getKey());\n-\t\t\t\t\t\tif (targetPropertyChange == null) {\n-\t\t\t\t\t\t\t// this property did not change in target, just apply directly on the target object via\n-\t\t\t\t\t\t\tif (!propertyUpdatesToApply.containsKey(type)) {\n-\t\t\t\t\t\t\t\tpropertyUpdatesToApply.put(type, HashMultimap.create());\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tpropertyUpdatesToApply.get(type).put(changedInSourceAndTargetId, sourceChangeDiff);\n-\t\t\t\t\t\t\tfromChangeSet.removeChanged(type, changedInSourceAndTargetId);\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tRevisionPropertyDiff targetChangeDiff = new RevisionPropertyDiff(targetPropertyChange.getProperty(), targetPropertyChange.getFromValue(), targetPropertyChange.getValue());\n-\t\t\t\t\t\t\t// changed on both sides, ask conflict processor to resolve the issue or raise conflict error\n-\t\t\t\t\t\t\tRevisionPropertyDiff resolution = conflictProcessor.handleChangedInSourceAndTarget(\n-\t\t\t\t\t\t\t\tchangedInSourceAndTargetId, \n-\t\t\t\t\t\t\t\tsourceChangeDiff,\n-\t\t\t\t\t\t\t\ttargetChangeDiff\n-\t\t\t\t\t\t\t);\n-\t\t\t\t\t\t\tif (resolution == null) {\n-\t\t\t\t\t\t\t\tconflicts.add(new ChangedInSourceAndTargetConflict(sourceChange.getValue().getObject(), sourceChangeDiff.convert(conflictProcessor), targetChangeDiff.convert(conflictProcessor)));\n-\t\t\t\t\t\t\t} else {\n+\t\t\t\t\tif (sourcePropertyChanges != null) {\n+\t\t\t\t\t\tfor (Entry<String, RevisionCompareDetail> sourceChange : Iterables.consumingIterable(sourcePropertyChanges.entrySet())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA5NDE0Mg==", "bodyText": "Same here.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/634#discussion_r469094142", "createdAt": "2020-08-12T08:29:39Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java", "diffHunk": "@@ -673,43 +673,41 @@ void merge(RevisionBranchRef fromRef, RevisionBranchRef toRef, boolean squash, R\n \t\t\t// then handle changed vs. changed with the conflict processor\n \t\t\tSet<String> changedInSourceAndTargetIds = Sets.intersection(changedRevisionIdsToMerge, changedRevisionIdsToCheck);\n \t\t\tif (!changedInSourceAndTargetIds.isEmpty()) {\n+\t\t\t\tfinal Map<String, Map<String, RevisionCompareDetail>> sourcePropertyChangesByObject = indexPropertyChangesByObject(fromChangeDetails);\n+\t\t\t\tfinal Map<String, Map<String, RevisionCompareDetail>> targetPropertyChangesByObject = indexPropertyChangesByObject(toChangeDetails);\n \t\t\t\tfor (String changedInSourceAndTargetId : changedInSourceAndTargetIds) {\n-\t\t\t\t\tMap<String, RevisionCompareDetail> sourcePropertyChanges = fromChangeDetails.stream()\n-\t\t\t\t\t\t\t.filter(detail -> detail.getObject().id().equals(changedInSourceAndTargetId))\n-\t\t\t\t\t\t\t.filter(detail -> !detail.isComponentChange())\n-\t\t\t\t\t\t\t.collect(Collectors.toMap(RevisionCompareDetail::getProperty, d -> d));\n-\t\t\t\t\tMap<String, RevisionCompareDetail> targetPropertyChanges = toChangeDetails.stream()\n-\t\t\t\t\t\t\t.filter(detail -> detail.getObject().id().equals(changedInSourceAndTargetId))\n-\t\t\t\t\t\t\t.filter(detail -> !detail.isComponentChange())\n-\t\t\t\t\t\t\t.collect(Collectors.toMap(RevisionCompareDetail::getProperty, d -> d));\n+\t\t\t\t\tfinal Map<String, RevisionCompareDetail> sourcePropertyChanges = sourcePropertyChangesByObject.get(changedInSourceAndTargetId);\n+\t\t\t\t\tfinal Map<String, RevisionCompareDetail> targetPropertyChanges = targetPropertyChangesByObject.get(changedInSourceAndTargetId);\n \t\t\t\t\t\n-\t\t\t\t\tfor (Entry<String, RevisionCompareDetail> sourceChange : Iterables.consumingIterable(sourcePropertyChanges.entrySet())) {\n-\t\t\t\t\t\tfinal RevisionPropertyDiff sourceChangeDiff = new RevisionPropertyDiff(sourceChange.getValue().getProperty(), sourceChange.getValue().getFromValue(), sourceChange.getValue().getValue());\n-\t\t\t\t\t\tfinal RevisionCompareDetail targetPropertyChange = targetPropertyChanges.remove(sourceChange.getKey());\n-\t\t\t\t\t\tif (targetPropertyChange == null) {\n-\t\t\t\t\t\t\t// this property did not change in target, just apply directly on the target object via\n-\t\t\t\t\t\t\tif (!propertyUpdatesToApply.containsKey(type)) {\n-\t\t\t\t\t\t\t\tpropertyUpdatesToApply.put(type, HashMultimap.create());\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tpropertyUpdatesToApply.get(type).put(changedInSourceAndTargetId, sourceChangeDiff);\n-\t\t\t\t\t\t\tfromChangeSet.removeChanged(type, changedInSourceAndTargetId);\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tRevisionPropertyDiff targetChangeDiff = new RevisionPropertyDiff(targetPropertyChange.getProperty(), targetPropertyChange.getFromValue(), targetPropertyChange.getValue());\n-\t\t\t\t\t\t\t// changed on both sides, ask conflict processor to resolve the issue or raise conflict error\n-\t\t\t\t\t\t\tRevisionPropertyDiff resolution = conflictProcessor.handleChangedInSourceAndTarget(\n-\t\t\t\t\t\t\t\tchangedInSourceAndTargetId, \n-\t\t\t\t\t\t\t\tsourceChangeDiff,\n-\t\t\t\t\t\t\t\ttargetChangeDiff\n-\t\t\t\t\t\t\t);\n-\t\t\t\t\t\t\tif (resolution == null) {\n-\t\t\t\t\t\t\t\tconflicts.add(new ChangedInSourceAndTargetConflict(sourceChange.getValue().getObject(), sourceChangeDiff.convert(conflictProcessor), targetChangeDiff.convert(conflictProcessor)));\n-\t\t\t\t\t\t\t} else {\n+\t\t\t\t\tif (sourcePropertyChanges != null) {\n+\t\t\t\t\t\tfor (Entry<String, RevisionCompareDetail> sourceChange : Iterables.consumingIterable(sourcePropertyChanges.entrySet())) {\n+\t\t\t\t\t\t\tfinal RevisionPropertyDiff sourceChangeDiff = new RevisionPropertyDiff(sourceChange.getValue().getProperty(), sourceChange.getValue().getFromValue(), sourceChange.getValue().getValue());\n+\t\t\t\t\t\t\tfinal RevisionCompareDetail targetPropertyChange = targetPropertyChanges.remove(sourceChange.getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b41cdc8dd81e236afff1c1938625c74dbf68ec9"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eec619581107d6fc8947cecbc5521a70100ae4c0", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/eec619581107d6fc8947cecbc5521a70100ae4c0", "committedDate": "2020-08-12T08:58:06Z", "message": "SO-4202: make property conflict detection algorithm more readable\n\nRemove source,target prop change Maps from byObject Map before checking\nfor conflicts to slowly release allocated memory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "212d20a9563fb8d19c94b5225efe4f7c378d3325", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/212d20a9563fb8d19c94b5225efe4f7c378d3325", "committedDate": "2020-08-12T08:58:43Z", "message": "SO-4202: rename constant to SEPARATOR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a98d2de53b7149d7c8867a39120c4f2f2dd2dd4d", "author": {"user": {"login": "cmark", "name": "Mark Czotter"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/a98d2de53b7149d7c8867a39120c4f2f2dd2dd4d", "committedDate": "2020-08-12T09:03:36Z", "message": "SO-4202: use `String.join()` in RevisionIndex.toRevisionRange"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4867, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}