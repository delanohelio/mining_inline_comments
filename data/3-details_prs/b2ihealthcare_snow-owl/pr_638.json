{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MDM5Mjg4", "number": 638, "title": "Fix for task synchronization conflicts", "bodyText": "", "createdAt": "2020-08-14T15:13:56Z", "url": "https://github.com/b2ihealthcare/snow-owl/pull/638", "merged": true, "mergeCommit": {"oid": "d465d24460c96039af679013eab47915689039e9"}, "closed": true, "closedAt": "2020-08-17T07:25:15Z", "author": {"login": "apeteri"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-19XbgH2gAyNDY4MDM5Mjg4OjliMmM4Nzc0ZThmOWRjZTlkNjRkZDI3MDNkMzBiYzM5MzVkZWI1NWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_HYvOAFqTQ2Nzk2NTIyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b2c8774e8f9dce9d64dd2703d30bc3935deb55c", "author": {"user": {"login": "apeteri", "name": "Andr\u00e1s P\u00e9teri"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/9b2c8774e8f9dce9d64dd2703d30bc3935deb55c", "committedDate": "2020-08-14T15:01:23Z", "message": "[snomed] Add test case for rebase-then-merge scenario"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44263445e33a524145426c587c13cf5948627503", "author": {"user": {"login": "apeteri", "name": "Andr\u00e1s P\u00e9teri"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/44263445e33a524145426c587c13cf5948627503", "committedDate": "2020-08-14T15:04:40Z", "message": "[commons] Synchronize the contents of commit documents with changes\n\nIf an existing revision on the branch is revised, it should be put into\nthe commit document as a change, even if:\n\n- the source change set treated it as an addition, or\n- the revision is part of a merge and needed to be revised on both\nsource and target"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9f516fbdd495ce075a6c3a764b92fd894021b3e", "author": {"user": {"login": "apeteri", "name": "Andr\u00e1s P\u00e9teri"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/c9f516fbdd495ce075a6c3a764b92fd894021b3e", "committedDate": "2020-08-14T15:09:16Z", "message": "[commons] Extract the component ID from \"changed\" compare details...\n\n...when no property-level information is available"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTY1MjI3", "url": "https://github.com/b2ihealthcare/snow-owl/pull/638#pullrequestreview-467965227", "createdAt": "2020-08-15T11:18:28Z", "commit": {"oid": "c9f516fbdd495ce075a6c3a764b92fd894021b3e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOHBJjlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOHBJjlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2NzE4OA==", "bodyText": "Does this synchronization still cause an extra revision (which is equivalent with the parent branch revision) on the child branch? If not, then it would worth adding an extra low-level check here to make sure there is no actual revision registered for parentConcept on the task2/task1 branches.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/638#discussion_r470967188", "createdAt": "2020-08-15T11:18:28Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.core.rest.tests/src/com/b2international/snowowl/snomed/core/rest/branches/SnomedMergeApiTest.java", "diffHunk": "@@ -881,5 +881,42 @@ public void mergeThenRebaseOtherTask() throws Exception {\n \t\t\n \t\tgetComponent(b, SnomedComponentType.CONCEPT, conceptB, \"relationships()\").statusCode(200).extract().as(SnomedConcept.class);\n \t}\n-\n+\t\n+\t@Test\n+\tpublic void rebaseDivergedThenMerge() throws Exception {\n+\t\tfinal IBranchPath task1 = BranchPathUtils.createPath(branchPath, \"task1\");\n+\t\tbranching.createBranch(task1).statusCode(201);\n+\t\t\n+\t\tfinal IBranchPath task2 = BranchPathUtils.createPath(branchPath, \"task2\");\n+\t\tbranching.createBranch(task2).statusCode(201);\n+\t\t\n+\t\tfinal String task1Concept = createNewConcept(task1);\n+\t\tfinal String task2Concept = createNewConcept(task2);\n+\t\tfinal String parentConcept = createNewConcept(branchPath);\n+\n+\t\t// Synchronization makes parentConcept visible on task 2\n+\t\tgetComponent(task2, SnomedComponentType.CONCEPT, parentConcept).statusCode(404);\n+\t\tmerge(branchPath, task2, \"Synchronize task 2\").body(\"status\", equalTo(Merge.Status.COMPLETED.name()));\n+\t\tgetComponent(task2, SnomedComponentType.CONCEPT, parentConcept).statusCode(200);\n+\n+\t\t// Synchronization makes parentConcept visible on task 1\n+\t\tgetComponent(task1, SnomedComponentType.CONCEPT, parentConcept).statusCode(404);\n+\t\tmerge(branchPath, task1, \"Synchronize task 1\").body(\"status\", equalTo(Merge.Status.COMPLETED.name()));\n+\t\tgetComponent(task1, SnomedComponentType.CONCEPT, parentConcept).statusCode(200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f516fbdd495ce075a6c3a764b92fd894021b3e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4871, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}