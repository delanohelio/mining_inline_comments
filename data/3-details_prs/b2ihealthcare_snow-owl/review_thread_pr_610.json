{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMjg2Njc1", "number": 610, "reviewThreads": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyNTozNlrOEQAxLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyNTozNlrOESTsrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI1MjYyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyNTozNlrOGz84AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzo1OToxNVrOGz-Rjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyNzkzNg==", "bodyText": "\u26a0\ufe0f Incorrect license. Please use the Apache 2.0 license.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457127936", "createdAt": "2020-07-20T07:25:36Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE1MDg2Mg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457150862", "createdAt": "2020-07-20T07:59:15Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyNzkzNg=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI1NDE4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyNTo1OFrOGz847Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowNDozMFrOG000jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODE3Mw==", "bodyText": "Make this class final.\nRename it to ConceptMapCompareResult.\nWhat can be T here?\nThis is too generic, and it won't work well in REST APIs with Swagger.\nEither we create abstract superclass with T type parameter and concrete implementations for each possible T type (like CollectionResource) or introduce a generic interface for type T.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457128173", "createdAt": "2020-07-20T07:25:58Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDU1OA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458044558", "createdAt": "2020-07-21T12:04:30Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODE3Mw=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI1OTA0OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyNzowMFrOGz87kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowNDoyNVrOG000WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODg1MA==", "bodyText": "Simplify if block to inlined return value expression.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457128850", "createdAt": "2020-07-20T07:27:00Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Sets;\n+/**\n+ * @since 7.8\n+ */\n+public interface CompareSets <T,R> {\n+\n+\tdefault CompareSetResult<T> compareDifferents(List<T> baseSet, List<T> compareSet) {\n+\t\tListMultimap<T, T> changes = ArrayListMultimap.create();\n+\t\tSet<T> remove = Sets.newHashSet();\n+\t\tSet<T> add = Sets.newHashSet();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (T memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new CompareSetResult<T>(add, remove, changes);\n+\t}\n+\t\n+\tdefault boolean isSame(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && isTargetEqual(memberA, memberB)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDUwNQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458044505", "createdAt": "2020-07-21T12:04:25Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Sets;\n+/**\n+ * @since 7.8\n+ */\n+public interface CompareSets <T,R> {\n+\n+\tdefault CompareSetResult<T> compareDifferents(List<T> baseSet, List<T> compareSet) {\n+\t\tListMultimap<T, T> changes = ArrayListMultimap.create();\n+\t\tSet<T> remove = Sets.newHashSet();\n+\t\tSet<T> add = Sets.newHashSet();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (T memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new CompareSetResult<T>(add, remove, changes);\n+\t}\n+\t\n+\tdefault boolean isSame(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && isTargetEqual(memberA, memberB)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODg1MA=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI1OTkyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzoyNzowOFrOGz88AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowNDoxOFrOG000GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODk2MA==", "bodyText": "Simplify if block to inlined return value expression.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457128960", "createdAt": "2020-07-20T07:27:08Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Sets;\n+/**\n+ * @since 7.8\n+ */\n+public interface CompareSets <T,R> {\n+\n+\tdefault CompareSetResult<T> compareDifferents(List<T> baseSet, List<T> compareSet) {\n+\t\tListMultimap<T, T> changes = ArrayListMultimap.create();\n+\t\tSet<T> remove = Sets.newHashSet();\n+\t\tSet<T> add = Sets.newHashSet();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (T memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new CompareSetResult<T>(add, remove, changes);\n+\t}\n+\t\n+\tdefault boolean isSame(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && isTargetEqual(memberA, memberB)) {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\tdefault boolean isChanged(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && !isTargetEqual(memberA, memberB)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDQ0MQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458044441", "createdAt": "2020-07-21T12:04:18Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSets.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Sets;\n+/**\n+ * @since 7.8\n+ */\n+public interface CompareSets <T,R> {\n+\n+\tdefault CompareSetResult<T> compareDifferents(List<T> baseSet, List<T> compareSet) {\n+\t\tListMultimap<T, T> changes = ArrayListMultimap.create();\n+\t\tSet<T> remove = Sets.newHashSet();\n+\t\tSet<T> add = Sets.newHashSet();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (T memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new CompareSetResult<T>(add, remove, changes);\n+\t}\n+\t\n+\tdefault boolean isSame(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && isTargetEqual(memberA, memberB)) {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\tdefault boolean isChanged(T memberA, T memberB) {\n+\t\tif (isSourceEqual(memberA, memberB) && !isTargetEqual(memberA, memberB)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEyODk2MA=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI4MTEwOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozMjoxNVrOGz9JAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowNDoxM1rOG00z-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMjI5MA==", "bodyText": "Fields should be final and private.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457132290", "createdAt": "2020-07-20T07:32:15Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {\n+\tSet<T> addedMembers;\n+\tSet<T> removedMembers;\n+\tListMultimap<T, T> changedMembers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDQxMQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458044411", "createdAt": "2020-07-21T12:04:13Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {\n+\tSet<T> addedMembers;\n+\tSet<T> removedMembers;\n+\tListMultimap<T, T> changedMembers;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMjI5MA=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI4NDM4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozMjo1OFrOGz9K3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowNDowOVrOG00z3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMjc2Nw==", "bodyText": "Make sure you defensive copy the incoming Collection-like parameters with the Immutable*.copyOf() equivalent.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457132767", "createdAt": "2020-07-20T07:32:58Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {\n+\tSet<T> addedMembers;\n+\tSet<T> removedMembers;\n+\tListMultimap<T, T> changedMembers;\n+\t\n+\tpublic CompareSetResult(Set<T> addedMembers, Set<T> removedMembers, ListMultimap<T, T> changedMembers) {\n+\t\tthis.addedMembers = addedMembers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0NDM4MQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458044381", "createdAt": "2020-07-21T12:04:09Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/CompareSetResult.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.core.compare;\n+\n+import java.util.Set;\n+\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+public class CompareSetResult <T> {\n+\tSet<T> addedMembers;\n+\tSet<T> removedMembers;\n+\tListMultimap<T, T> changedMembers;\n+\t\n+\tpublic CompareSetResult(Set<T> addedMembers, Set<T> removedMembers, ListMultimap<T, T> changedMembers) {\n+\t\tthis.addedMembers = addedMembers;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMjc2Nw=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI5MTM5OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozNDozMFrOGz9OrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo0MjowOVrOG1i-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMzc0MA==", "bodyText": "Rename this to SnomedMapTypeReferenceSetCompareTest.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457133740", "createdAt": "2020-07-20T07:34:30Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwMDY1Ng==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458800656", "createdAt": "2020-07-22T13:42:09Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzMzc0MA=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI5NjMzOnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.common/src/com/b2international/snowowl/snomed/common/SnomedTerminologyComponentConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozNTozNlrOGz9Rjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzo0ODoyM1rOG1jP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDQ3OA==", "bodyText": "Why do you need this? Also, this uses the same value as the TEMPLATE_NUMBER constant.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457134478", "createdAt": "2020-07-20T07:35:36Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.common/src/com/b2international/snowowl/snomed/common/SnomedTerminologyComponentConstants.java", "diffHunk": "@@ -51,6 +51,8 @@ private SnomedTerminologyComponentConstants() {}\n \tpublic static final short CONSTRAINT_NUMBER = 105;\n \tpublic static final String TEMPLATE = \"com.b2international.snowowl.terminology.snomed.template\";\n \tpublic static final short TEMPLATE_NUMBER = 106;\n+\tpublic static final String COMPARE_RESULT = \"com.b2international.snowowl.terminology.snomed.compare\";\n+\tpublic static final short COMPARE_RESULT_NUMBER = 106;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNTIxNQ==", "bodyText": "I used it for creating a component URI for the editor, but I will use the unspecified id instead.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458805215", "createdAt": "2020-07-22T13:48:23Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.common/src/com/b2international/snowowl/snomed/common/SnomedTerminologyComponentConstants.java", "diffHunk": "@@ -51,6 +51,8 @@ private SnomedTerminologyComponentConstants() {}\n \tpublic static final short CONSTRAINT_NUMBER = 105;\n \tpublic static final String TEMPLATE = \"com.b2international.snowowl.terminology.snomed.template\";\n \tpublic static final short TEMPLATE_NUMBER = 106;\n+\tpublic static final String COMPARE_RESULT = \"com.b2international.snowowl.terminology.snomed.compare\";\n+\tpublic static final short COMPARE_RESULT_NUMBER = 106;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDQ3OA=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjI5OTUyOnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozNjoxNlrOGz9TPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowMjo0NlrOG00xQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDkxMQ==", "bodyText": "Typo!", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457134911", "createdAt": "2020-07-20T07:36:16Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {\n+\tprivate static final String CODE_SYSTEM_1 = SnomedTerminologyComponentConstants.TERMINOLOGY_ID;\n+\tprivate static final String CODE_SYSTEM_2 = \"cs1\";\n+\tprivate static final String CODE_SYSTEM_3 = \"cs2\";\n+\t\n+\tfinal ReferenceSetCompare comparator = new ReferenceSetCompare();\n+\t\n+\t@Test\n+\tpublic void compareEqualSimleMapRefSets() {\n+\t\tSnomedReferenceSet rf1 = new SnomedReferenceSet();\n+\t\trf1.setId(\"rf1\");\n+\t\trf1.setReferencedComponentType(CODE_SYSTEM_1);\n+\t\trf1.setMapTargetComponentType(CODE_SYSTEM_2);\n+\t\trf1.setType(SnomedRefSetType.SIMPLE_MAP);\n+\t\t\n+\t\tSnomedReferenceSet rf2 = new SnomedReferenceSet();\n+\t\trf2.setId(\"rf2\");\n+\t\trf2.setReferencedComponentType(CODE_SYSTEM_1);\n+\t\trf2.setMapTargetComponentType(CODE_SYSTEM_2);\n+\t\trf2.setType(SnomedRefSetType.SIMPLE_MAP);\n+\t\t\n+\t\tfinal Map<String, Object> properties1 = new HashMap<String, Object>();\n+\t\tproperties1.put(SnomedRf2Headers.FIELD_MAP_TARGET, \"2\");\n+\t\t\n+\t\tSnomedConcept concept1 = new SnomedConcept(\"1\");\n+\t\t\n+\t\tSnomedReferenceSetMember member1 = new SnomedReferenceSetMember();\n+\t\tmember1.setId(\"1\");\n+\t\tmember1.setProperties(properties1);\n+\t\tmember1.setReferencedComponent(concept1);\n+\t\t\n+\t\tSnomedReferenceSetMember member2 = new SnomedReferenceSetMember();\n+\t\tmember2.setId(\"2\");\n+\t\tmember2.setProperties(properties1);\n+\t\tmember2.setReferencedComponent(concept1);\n+\t\t\n+\t\trf1.setMembers(new SnomedReferenceSetMembers(ImmutableList.of(member1), null, 1, 1));\n+\t\trf2.setMembers(new SnomedReferenceSetMembers(ImmutableList.of(member2), null, 1, 1));\n+\t\t\n+\t\tCompareSetResult<SnomedReferenceSetMember> result = comparator.doCompare(rf1, rf2);\n+\t\tassertEquals(0, result.getRemovedMembers().size());\n+\t\tassertEquals(0, result.getAddedMembers().size());\n+\t\tassertEquals(0, result.getChangedMembers().size());\n+\t\t\n+\t}\n+\t\n+\t@Test(expected = BadRequestException.class)\n+\tpublic void compareNonSympleTypeRefSets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0MzcxNQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458043715", "createdAt": "2020-07-21T12:02:46Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {\n+\tprivate static final String CODE_SYSTEM_1 = SnomedTerminologyComponentConstants.TERMINOLOGY_ID;\n+\tprivate static final String CODE_SYSTEM_2 = \"cs1\";\n+\tprivate static final String CODE_SYSTEM_3 = \"cs2\";\n+\t\n+\tfinal ReferenceSetCompare comparator = new ReferenceSetCompare();\n+\t\n+\t@Test\n+\tpublic void compareEqualSimleMapRefSets() {\n+\t\tSnomedReferenceSet rf1 = new SnomedReferenceSet();\n+\t\trf1.setId(\"rf1\");\n+\t\trf1.setReferencedComponentType(CODE_SYSTEM_1);\n+\t\trf1.setMapTargetComponentType(CODE_SYSTEM_2);\n+\t\trf1.setType(SnomedRefSetType.SIMPLE_MAP);\n+\t\t\n+\t\tSnomedReferenceSet rf2 = new SnomedReferenceSet();\n+\t\trf2.setId(\"rf2\");\n+\t\trf2.setReferencedComponentType(CODE_SYSTEM_1);\n+\t\trf2.setMapTargetComponentType(CODE_SYSTEM_2);\n+\t\trf2.setType(SnomedRefSetType.SIMPLE_MAP);\n+\t\t\n+\t\tfinal Map<String, Object> properties1 = new HashMap<String, Object>();\n+\t\tproperties1.put(SnomedRf2Headers.FIELD_MAP_TARGET, \"2\");\n+\t\t\n+\t\tSnomedConcept concept1 = new SnomedConcept(\"1\");\n+\t\t\n+\t\tSnomedReferenceSetMember member1 = new SnomedReferenceSetMember();\n+\t\tmember1.setId(\"1\");\n+\t\tmember1.setProperties(properties1);\n+\t\tmember1.setReferencedComponent(concept1);\n+\t\t\n+\t\tSnomedReferenceSetMember member2 = new SnomedReferenceSetMember();\n+\t\tmember2.setId(\"2\");\n+\t\tmember2.setProperties(properties1);\n+\t\tmember2.setReferencedComponent(concept1);\n+\t\t\n+\t\trf1.setMembers(new SnomedReferenceSetMembers(ImmutableList.of(member1), null, 1, 1));\n+\t\trf2.setMembers(new SnomedReferenceSetMembers(ImmutableList.of(member2), null, 1, 1));\n+\t\t\n+\t\tCompareSetResult<SnomedReferenceSetMember> result = comparator.doCompare(rf1, rf2);\n+\t\tassertEquals(0, result.getRemovedMembers().size());\n+\t\tassertEquals(0, result.getAddedMembers().size());\n+\t\tassertEquals(0, result.getChangedMembers().size());\n+\t\t\n+\t}\n+\t\n+\t@Test(expected = BadRequestException.class)\n+\tpublic void compareNonSympleTypeRefSets() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNDkxMQ=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjMwNTU3OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozNzozOVrOGz9Wlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowMjo0MVrOG00xIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNTc2Ng==", "bodyText": "Simplify test cases by reducing the size of the build phase in each test.\nYou could extract common set of test fixtures to build methods or to constants.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457135766", "createdAt": "2020-07-20T07:37:39Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {\n+\tprivate static final String CODE_SYSTEM_1 = SnomedTerminologyComponentConstants.TERMINOLOGY_ID;\n+\tprivate static final String CODE_SYSTEM_2 = \"cs1\";\n+\tprivate static final String CODE_SYSTEM_3 = \"cs2\";\n+\t\n+\tfinal ReferenceSetCompare comparator = new ReferenceSetCompare();\n+\t\n+\t@Test\n+\tpublic void compareEqualSimleMapRefSets() {\n+\t\tSnomedReferenceSet rf1 = new SnomedReferenceSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0MzY4MA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458043680", "createdAt": "2020-07-21T12:02:41Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore.tests/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompareTest.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.collect.ImmutableList;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class ReferenceSetCompareTest {\n+\tprivate static final String CODE_SYSTEM_1 = SnomedTerminologyComponentConstants.TERMINOLOGY_ID;\n+\tprivate static final String CODE_SYSTEM_2 = \"cs1\";\n+\tprivate static final String CODE_SYSTEM_3 = \"cs2\";\n+\t\n+\tfinal ReferenceSetCompare comparator = new ReferenceSetCompare();\n+\t\n+\t@Test\n+\tpublic void compareEqualSimleMapRefSets() {\n+\t\tSnomedReferenceSet rf1 = new SnomedReferenceSet();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNTc2Ng=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjMxMTAyOnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzozODo0OFrOGz9Zig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowMjozNFrOG00w5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNjUyMg==", "bodyText": "Possible NPE here, use Objects.equals instead.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457136522", "createdAt": "2020-07-20T07:38:48Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.core.compare.CompareSets;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class ReferenceSetCompare implements CompareSets<SnomedReferenceSetMember, SnomedReferenceSet> {\n+\n+\t@Override\n+\tpublic CompareSetResult<SnomedReferenceSetMember> doCompare(SnomedReferenceSet baseRf, SnomedReferenceSet compareRf) {\n+\t\tif (!SnomedRefSetType.SIMPLE_MAP.equals(baseRf.getType()) || !SnomedRefSetType.SIMPLE_MAP.equals(compareRf.getType())) {\n+\t\t\tthrow new BadRequestException(\"Comparing Reference Sets requires the following Reference Sets (%s, %s) to be Simple Map Reference Sets!\", baseRf.getId(), compareRf.getId());\n+\t\t}\n+\t\treturn compareDifferents(baseRf.getMembers().getItems(), compareRf.getMembers().getItems());\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSourceEqual(SnomedReferenceSetMember memberA, SnomedReferenceSetMember memberB) {\n+\t\tif (memberA.getReferencedComponent().getId().equals(memberB.getReferencedComponent().getId())) {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean isTargetEqual(SnomedReferenceSetMember memberA, SnomedReferenceSetMember memberB) {\n+\t\tif (memberA.getProperties().get(SnomedRf2Headers.FIELD_MAP_TARGET).equals(memberB.getProperties().get(SnomedRf2Headers.FIELD_MAP_TARGET))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0MzYyMg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458043622", "createdAt": "2020-07-21T12:02:34Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.core.compare.CompareSets;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class ReferenceSetCompare implements CompareSets<SnomedReferenceSetMember, SnomedReferenceSet> {\n+\n+\t@Override\n+\tpublic CompareSetResult<SnomedReferenceSetMember> doCompare(SnomedReferenceSet baseRf, SnomedReferenceSet compareRf) {\n+\t\tif (!SnomedRefSetType.SIMPLE_MAP.equals(baseRf.getType()) || !SnomedRefSetType.SIMPLE_MAP.equals(compareRf.getType())) {\n+\t\t\tthrow new BadRequestException(\"Comparing Reference Sets requires the following Reference Sets (%s, %s) to be Simple Map Reference Sets!\", baseRf.getId(), compareRf.getId());\n+\t\t}\n+\t\treturn compareDifferents(baseRf.getMembers().getItems(), compareRf.getMembers().getItems());\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSourceEqual(SnomedReferenceSetMember memberA, SnomedReferenceSetMember memberB) {\n+\t\tif (memberA.getReferencedComponent().getId().equals(memberB.getReferencedComponent().getId())) {\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic boolean isTargetEqual(SnomedReferenceSetMember memberA, SnomedReferenceSetMember memberB) {\n+\t\tif (memberA.getProperties().get(SnomedRf2Headers.FIELD_MAP_TARGET).equals(memberB.getProperties().get(SnomedRf2Headers.FIELD_MAP_TARGET))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzNjUyMg=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjMzMTQ1OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetSearchRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzo0Mjo1MlrOGz9kUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjoyMjo1MVrOG01aEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzOTI4Mw==", "bodyText": "Never ever put conditional blocks into filterBy methods.\nHandle all these in the actual Request implementation instead.\nNot sure if these are actually needed.\nThis way we cannot filter reference sets where the mapTargetComponentType is UNSPECIFIED.\nNull values are the only values that do NOT generate actual clauses in search requests.\nPlease refactor.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457139283", "createdAt": "2020-07-20T07:42:52Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetSearchRequestBuilder.java", "diffHunk": "@@ -82,6 +82,17 @@ public SnomedRefSetSearchRequestBuilder filterByMapTargetComponentType(Integer m\n \t\t}\n \t\treturn addOption(SnomedRefSetSearchRequest.OptionKey.MAP_TARGET_COMPONENT_TYPE, mapTargetComponentType);\n \t}\n+\t\n+\tpublic SnomedRefSetSearchRequestBuilder filterByMapTargetComponentType(String mapTargetComponentType) {\n+\t\tif (Strings.isNullOrEmpty(mapTargetComponentType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA1NDE2MQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458054161", "createdAt": "2020-07-21T12:22:51Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetSearchRequestBuilder.java", "diffHunk": "@@ -82,6 +82,17 @@ public SnomedRefSetSearchRequestBuilder filterByMapTargetComponentType(Integer m\n \t\t}\n \t\treturn addOption(SnomedRefSetSearchRequest.OptionKey.MAP_TARGET_COMPONENT_TYPE, mapTargetComponentType);\n \t}\n+\t\n+\tpublic SnomedRefSetSearchRequestBuilder filterByMapTargetComponentType(String mapTargetComponentType) {\n+\t\tif (Strings.isNullOrEmpty(mapTargetComponentType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzOTI4Mw=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjMzNjMyOnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNzo0Mzo0OVrOGz9m5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjowMjoyOFrOG00wqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzOTk0Mg==", "bodyText": "Too complex boolean expression, invert it to make it more readable.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r457139942", "createdAt": "2020-07-20T07:43:49Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.core.compare.CompareSets;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class ReferenceSetCompare implements CompareSets<SnomedReferenceSetMember, SnomedReferenceSet> {\n+\n+\t@Override\n+\tpublic CompareSetResult<SnomedReferenceSetMember> doCompare(SnomedReferenceSet baseRf, SnomedReferenceSet compareRf) {\n+\t\tif (!SnomedRefSetType.SIMPLE_MAP.equals(baseRf.getType()) || !SnomedRefSetType.SIMPLE_MAP.equals(compareRf.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0MzU2Mg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r458043562", "createdAt": "2020-07-21T12:02:28Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/compare/ReferenceSetCompare.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 B2i Healthcare. All rights reserved.\n+ *******************************************************************************/\n+package com.b2international.snowowl.snomed.datastore.compare;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.b2international.snowowl.core.compare.CompareSetResult;\n+import com.b2international.snowowl.core.compare.CompareSets;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class ReferenceSetCompare implements CompareSets<SnomedReferenceSetMember, SnomedReferenceSet> {\n+\n+\t@Override\n+\tpublic CompareSetResult<SnomedReferenceSetMember> doCompare(SnomedReferenceSet baseRf, SnomedReferenceSet compareRf) {\n+\t\tif (!SnomedRefSetType.SIMPLE_MAP.equals(baseRf.getType()) || !SnomedRefSetType.SIMPLE_MAP.equals(compareRf.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzEzOTk0Mg=="}, "originalCommit": {"oid": "9fc87b2bd05dca4360e7c2843e1eb2109de06c59"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjEzMzM2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODozNTowMVrOG3Y1Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MzozM1rOG3bRPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMTcxMQ==", "bodyText": "Rename prepareSearchCodeSystemsInAllRepositories() method to prepareSearchAllCodeSystems().", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460731711", "createdAt": "2020-07-27T08:35:01Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MTY0Ng==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460771646", "createdAt": "2020-07-27T09:43:33Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMTcxMQ=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjEzOTcxOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODozNjozOFrOG3Y49A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo1MTo0MlrOG3jZlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMjY2MA==", "bodyText": "Change this to assertThat(codeSystems).hasSize(2) or swap arguments to match expected and actual values.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460732660", "createdAt": "2020-07-27T08:36:38Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3NzAzNg==", "bodyText": "Evaluated all core-e2e-tests on this branch and got java.lang.AssertionError: expected:<15> but was:<2>", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460777036", "createdAt": "2020-07-27T09:52:53Z", "author": {"login": "nagyo"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMjY2MA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNDg1Mw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460904853", "createdAt": "2020-07-27T13:51:42Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMjY2MA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE0OTQ3OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODozOToxNVrOG3Y-5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjozNzo1M1rOG3glpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNDE4Mw==", "bodyText": "This is a separate test case, please move it to its own test method.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460734183", "createdAt": "2020-07-27T08:39:15Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);\n+\t}\n+\t\n+\t@Test\n+\tpublic void getCodeSystemByShortNameFromAllRepositoreis() {\n+\t\tfinal CodeSystems existingCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.filterById(SNOMEDCT)\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(existingCodeSystem.getTotal(), 1);\n+\t\tassertEquals(SNOMEDCT, Iterables.getOnlyElement(existingCodeSystem.getItems()).getShortName());\n+\n+\t\tfinal CodeSystems nonExistentCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1ODc4OQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460858789", "createdAt": "2020-07-27T12:37:53Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);\n+\t}\n+\t\n+\t@Test\n+\tpublic void getCodeSystemByShortNameFromAllRepositoreis() {\n+\t\tfinal CodeSystems existingCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.filterById(SNOMEDCT)\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(existingCodeSystem.getTotal(), 1);\n+\t\tassertEquals(SNOMEDCT, Iterables.getOnlyElement(existingCodeSystem.getItems()).getShortName());\n+\n+\t\tfinal CodeSystems nonExistentCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNDE4Mw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE2NTI4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0MzoxOVrOG3ZIVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjo0MjoxNFrOG3gvLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNjU5OA==", "bodyText": "Make sure you create a CodeSystem before filtering, so there won't be any issues in the future when we remove the default SNOMEDCT CodeSystem.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460736598", "createdAt": "2020-07-27T08:43:19Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);\n+\t}\n+\t\n+\t@Test\n+\tpublic void getCodeSystemByShortNameFromAllRepositoreis() {\n+\t\tfinal CodeSystems existingCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2MTIyOQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460861229", "createdAt": "2020-07-27T12:42:14Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core.rest.tests/src/com/b2international/snowowl/core/codesystem/CodeSystemRequestTest.java", "diffHunk": "@@ -43,6 +43,38 @@ public void setup() {\n \t\tthis.bus = Services.bus();\n \t}\n \t\n+\t@Test\n+\tpublic void getAllCodeSystems() {\n+\t\tfinal String shortName = \"newCodeSystemShortName\";\n+\t\tfinal String oid = \"newCodeSystemOid\";\n+\t\t\n+\t\tassertCodeSystemCreated(shortName, oid);\n+\t\t\n+\t\tfinal CodeSystems codeSystems = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(Services.context());\n+\n+\t\tassertEquals(codeSystems.getTotal(), 2);\n+\t}\n+\t\n+\t@Test\n+\tpublic void getCodeSystemByShortNameFromAllRepositoreis() {\n+\t\tfinal CodeSystems existingCodeSystem = CodeSystemRequests.prepareSearchCodeSystemsInAllRepositories()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNjU5OA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE3MTM0OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NDo1MlrOG3ZMIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoxNjo0N1rOG3f6aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNzU2OA==", "bodyText": "Make this class final and package private.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460737568", "createdAt": "2020-07-27T08:44:52Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.Repositories;\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.repository.RepositoryRequests;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequest implements Request<ServiceProvider, CodeSystems> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0NzcyMA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460847720", "createdAt": "2020-07-27T12:16:47Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.Repositories;\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.repository.RepositoryRequests;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequest implements Request<ServiceProvider, CodeSystems> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczNzU2OA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE5MTQ3OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1MDowN1rOG3ZYbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoxNzo0MFrOG3f8fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MDcxOA==", "bodyText": "Replace limit 50 with codeSystemList.size().", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460740718", "createdAt": "2020-07-27T08:50:07Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.Repositories;\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.repository.RepositoryRequests;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequest implements Request<ServiceProvider, CodeSystems> {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final Collection<String> ids;\n+\tprivate final List<String> fields;\n+\tprivate final String expand;\n+\t\n+\tAllCodeSystemSearchRequest(final Collection<String> ids, final List<String> fields, final String expand) {\n+\t\tthis.ids = ids;\n+\t\tthis.fields = fields;\n+\t\tthis.expand = expand;\n+\t}\n+\n+\t@Override\n+\tpublic CodeSystems execute(ServiceProvider context) {\n+\t\tfinal List<CodeSystem> codeSystemList = Lists.newArrayList();\n+\n+\t\tfinal Repositories repositories = RepositoryRequests.prepareSearch()\n+\t\t\t\t.all()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(context);\n+\t\t\n+\t\trepositories.forEach(repositoryInfo -> {\n+\t\t\tCodeSystems css = CodeSystemRequests.prepareSearchCodeSystem()\n+\t\t\t\t\t.all()\n+\t\t\t\t\t.filterByIds(ids)\n+\t\t\t\t\t.setFields(fields)\n+\t\t\t\t\t.setExpand(expand)\n+\t\t\t\t\t.build(repositoryInfo.id())\n+\t\t\t\t\t.getRequest()\n+\t\t\t\t\t.execute(context);\n+\t\t\t\n+\t\t\tcodeSystemList.addAll(css.getItems());\n+\t\t});\n+\t\t\n+\t\treturn new CodeSystems(codeSystemList, null, 50, codeSystemList.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0ODI1Mw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460848253", "createdAt": "2020-07-27T12:17:40Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.Repositories;\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.repository.RepositoryRequests;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequest implements Request<ServiceProvider, CodeSystems> {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final Collection<String> ids;\n+\tprivate final List<String> fields;\n+\tprivate final String expand;\n+\t\n+\tAllCodeSystemSearchRequest(final Collection<String> ids, final List<String> fields, final String expand) {\n+\t\tthis.ids = ids;\n+\t\tthis.fields = fields;\n+\t\tthis.expand = expand;\n+\t}\n+\n+\t@Override\n+\tpublic CodeSystems execute(ServiceProvider context) {\n+\t\tfinal List<CodeSystem> codeSystemList = Lists.newArrayList();\n+\n+\t\tfinal Repositories repositories = RepositoryRequests.prepareSearch()\n+\t\t\t\t.all()\n+\t\t\t\t.build()\n+\t\t\t\t.execute(context);\n+\t\t\n+\t\trepositories.forEach(repositoryInfo -> {\n+\t\t\tCodeSystems css = CodeSystemRequests.prepareSearchCodeSystem()\n+\t\t\t\t\t.all()\n+\t\t\t\t\t.filterByIds(ids)\n+\t\t\t\t\t.setFields(fields)\n+\t\t\t\t\t.setExpand(expand)\n+\t\t\t\t\t.build(repositoryInfo.id())\n+\t\t\t\t\t.getRequest()\n+\t\t\t\t\t.execute(context);\n+\t\t\t\n+\t\t\tcodeSystemList.addAll(css.getItems());\n+\t\t});\n+\t\t\n+\t\treturn new CodeSystems(codeSystemList, null, 50, codeSystemList.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MDcxOA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE5MjM1OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1MDoyMFrOG3ZY8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoxODozMFrOG3f-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MDg1MA==", "bodyText": "Make this class final.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460740850", "createdAt": "2020-07-27T08:50:20Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.request.SystemRequestBuilder;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequestBuilder implements SystemRequestBuilder<CodeSystems>  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0ODY3OA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460848678", "createdAt": "2020-07-27T12:18:30Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/AllCodeSystemSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.codesystem;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.request.SystemRequestBuilder;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class AllCodeSystemSearchRequestBuilder implements SystemRequestBuilder<CodeSystems>  {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MDg1MA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIwMTQ4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/CodeSystemRequests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1MjozN1rOG3ZeaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0NDoxOFrOG3e8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MjI0OA==", "bodyText": "Rename prepareSearchMappings to prepareSearchConceptMapMappings", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460742248", "createdAt": "2020-07-27T08:52:37Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/CodeSystemRequests.java", "diffHunk": "@@ -81,13 +84,30 @@ public static MemberSearchRequestBuilder prepareSearchMembers() {\n \t\treturn new MemberSearchRequestBuilder();\n \t}\n \t\n+\t/**\n+\t * Creates a new generic set mapping search request builder.\n+\t * \n+\t * @return the builder to configure for generic mappings search\n+\t */\n+\tpublic static MappingSearchRequestBuilder prepareSearchMappings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMTk1MA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460831950", "createdAt": "2020-07-27T11:44:18Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/codesystem/CodeSystemRequests.java", "diffHunk": "@@ -81,13 +84,30 @@ public static MemberSearchRequestBuilder prepareSearchMembers() {\n \t\treturn new MemberSearchRequestBuilder();\n \t}\n \t\n+\t/**\n+\t * Creates a new generic set mapping search request builder.\n+\t * \n+\t * @return the builder to configure for generic mappings search\n+\t */\n+\tpublic static MappingSearchRequestBuilder prepareSearchMappings() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MjI0OA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIwNTE3OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/ConceptMapCompareResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1MzoyNlrOG3Zgcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoxOTozNFrOG3gASQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0Mjc3MA==", "bodyText": "Use public final instead of final public.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460742770", "createdAt": "2020-07-27T08:53:26Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/ConceptMapCompareResult.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.compare;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+final public class ConceptMapCompareResult implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0OTIyNQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460849225", "createdAt": "2020-07-27T12:19:34Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/compare/ConceptMapCompareResult.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.compare;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableListMultimap;\n+import com.google.common.collect.ListMultimap;\n+/**\n+ * @since 7.8\n+ */\n+final public class ConceptMapCompareResult implements Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0Mjc3MA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIwNjgwOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1Mzo1MVrOG3ZheA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0ODoxMVrOG3fD3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MzAzMg==", "bodyText": "Rename this to ConceptMapMapping.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460743032", "createdAt": "2020-07-27T08:53:51Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMzc1OQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460833759", "createdAt": "2020-07-27T11:48:11Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MzAzMg=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIxMDM0OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1NDo0OFrOG3Zjmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoyMDo1MVrOG3gC4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MzU3OA==", "bodyText": "Make Builder final as well.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460743578", "createdAt": "2020-07-27T08:54:48Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg0OTg5MA==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460849890", "createdAt": "2020-07-27T12:20:51Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0MzU3OA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIxMzczOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1NToyN1rOG3ZleA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoyMjo1N1rOG3gHFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDA1Ng==", "bodyText": "Rename this field to active.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460744056", "createdAt": "2020-07-27T08:55:27Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {\n+\t\t\n+\t\tprivate String sourceIconId;\n+\t\tprivate String sourceTerm;\n+\t\tprivate ComponentURI sourceComponentURI;\n+\t\t\n+\t\tprivate String targetTerm;\n+\t\tprivate ComponentURI targetComponentURI = ComponentURI.UNSPECIFIED;\n+\t\t\n+\t\tprivate boolean isActive;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1MDk2Nw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460850967", "createdAt": "2020-07-27T12:22:57Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {\n+\t\t\n+\t\tprivate String sourceIconId;\n+\t\tprivate String sourceTerm;\n+\t\tprivate ComponentURI sourceComponentURI;\n+\t\t\n+\t\tprivate String targetTerm;\n+\t\tprivate ComponentURI targetComponentURI = ComponentURI.UNSPECIFIED;\n+\t\t\n+\t\tprivate boolean isActive;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDA1Ng=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIxNzU2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1NjoyMVrOG3ZnvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoyMzozOVrOG3gIvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDYzNg==", "bodyText": "Make these fields final as well.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460744636", "createdAt": "2020-07-27T08:56:21Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {\n+\t\t\n+\t\tprivate String sourceIconId;\n+\t\tprivate String sourceTerm;\n+\t\tprivate ComponentURI sourceComponentURI;\n+\t\t\n+\t\tprivate String targetTerm;\n+\t\tprivate ComponentURI targetComponentURI = ComponentURI.UNSPECIFIED;\n+\t\t\n+\t\tprivate boolean isActive;\n+\t\tprivate MappingCorrelation mappingCorrelation = MappingCorrelation.NOT_SPECIFIED;\n+\t\t\n+\t\tprivate Integer mapGroup = 0;\n+\t\tprivate Integer mapPriority = 0;\n+\t\tprivate String mapRule = \"\";\n+\t\tprivate String mapAdvice = \"\";\n+\t\t\n+\t\tpublic Builder sourceTerm(final String sourceTerm) {\n+\t\t\tthis.sourceTerm = sourceTerm;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder sourceIconId(final String sourceIconId) {\n+\t\t\tthis.sourceIconId = sourceIconId;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder sourceComponentURI(final ComponentURI sourceComponentURI) {\n+\t\t\tthis.sourceComponentURI = sourceComponentURI;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder targetTerm(final String targetTerm) {\n+\t\t\tthis.targetTerm = targetTerm;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder targetComponentURI(final ComponentURI targetComponentURI) {\n+\t\t\tthis.targetComponentURI = targetComponentURI;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder active(final boolean isActive) {\n+\t\t\tthis.isActive = isActive;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mappingCorrelation(final MappingCorrelation mappingCorrelation) {\n+\t\t\tthis.mappingCorrelation = mappingCorrelation;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapGroup(final Integer mapGroup) {\n+\t\t\tthis.mapGroup = mapGroup;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapPriority(final Integer mapPriority) {\n+\t\t\tthis.mapPriority = mapPriority;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapRule(final String mapRule) {\n+\t\t\tthis.mapRule = mapRule;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapAdvice(final String mapAdvice) {\n+\t\t\tthis.mapAdvice = mapAdvice;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic SetMapping build() {\n+\t\t\treturn new SetMapping(sourceIconId, sourceTerm, sourceComponentURI, \n+\t\t\t\t\ttargetTerm, targetComponentURI, isActive, mappingCorrelation, mapGroup, mapPriority, mapRule, mapAdvice);\n+\t\t}\n+\t\n+\t}\n+\t\n+\tprivate final String sourceIconId;\n+\tprivate final String sourceTerm;\n+\tprivate final ComponentURI sourceComponentURI;\n+\t\n+\tprivate final String targetTerm;\n+\tprivate final ComponentURI targetComponentURI;\n+\t\n+\tprivate final boolean isActive;\n+\tprivate final MappingCorrelation mappingCorrelation;\n+\t\n+\tprivate Integer mapGroup;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1MTM5MQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460851391", "createdAt": "2020-07-27T12:23:39Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMapping.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMapping implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\t\n+\tpublic static class Builder {\n+\t\t\n+\t\tprivate String sourceIconId;\n+\t\tprivate String sourceTerm;\n+\t\tprivate ComponentURI sourceComponentURI;\n+\t\t\n+\t\tprivate String targetTerm;\n+\t\tprivate ComponentURI targetComponentURI = ComponentURI.UNSPECIFIED;\n+\t\t\n+\t\tprivate boolean isActive;\n+\t\tprivate MappingCorrelation mappingCorrelation = MappingCorrelation.NOT_SPECIFIED;\n+\t\t\n+\t\tprivate Integer mapGroup = 0;\n+\t\tprivate Integer mapPriority = 0;\n+\t\tprivate String mapRule = \"\";\n+\t\tprivate String mapAdvice = \"\";\n+\t\t\n+\t\tpublic Builder sourceTerm(final String sourceTerm) {\n+\t\t\tthis.sourceTerm = sourceTerm;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder sourceIconId(final String sourceIconId) {\n+\t\t\tthis.sourceIconId = sourceIconId;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder sourceComponentURI(final ComponentURI sourceComponentURI) {\n+\t\t\tthis.sourceComponentURI = sourceComponentURI;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder targetTerm(final String targetTerm) {\n+\t\t\tthis.targetTerm = targetTerm;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder targetComponentURI(final ComponentURI targetComponentURI) {\n+\t\t\tthis.targetComponentURI = targetComponentURI;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder active(final boolean isActive) {\n+\t\t\tthis.isActive = isActive;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mappingCorrelation(final MappingCorrelation mappingCorrelation) {\n+\t\t\tthis.mappingCorrelation = mappingCorrelation;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapGroup(final Integer mapGroup) {\n+\t\t\tthis.mapGroup = mapGroup;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapPriority(final Integer mapPriority) {\n+\t\t\tthis.mapPriority = mapPriority;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapRule(final String mapRule) {\n+\t\t\tthis.mapRule = mapRule;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic Builder mapAdvice(final String mapAdvice) {\n+\t\t\tthis.mapAdvice = mapAdvice;\n+\t\t\treturn this;\n+\t\t}\n+\t\t\n+\t\tpublic SetMapping build() {\n+\t\t\treturn new SetMapping(sourceIconId, sourceTerm, sourceComponentURI, \n+\t\t\t\t\ttargetTerm, targetComponentURI, isActive, mappingCorrelation, mapGroup, mapPriority, mapRule, mapAdvice);\n+\t\t}\n+\t\n+\t}\n+\t\n+\tprivate final String sourceIconId;\n+\tprivate final String sourceTerm;\n+\tprivate final ComponentURI sourceComponentURI;\n+\t\n+\tprivate final String targetTerm;\n+\tprivate final ComponentURI targetComponentURI;\n+\t\n+\tprivate final boolean isActive;\n+\tprivate final MappingCorrelation mappingCorrelation;\n+\t\n+\tprivate Integer mapGroup;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDYzNg=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIxODY2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMappings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1Njo0MlrOG3Zoew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0ODoxN1rOG3fEFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDgyNw==", "bodyText": "Rename this to ConceptMapMappings.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460744827", "createdAt": "2020-07-27T08:56:42Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMappings.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMappings extends PageableCollectionResource<SetMapping> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzMzgxNQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460833815", "createdAt": "2020-07-27T11:48:17Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/domain/SetMappings.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.domain;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * @since 7.8\n+ */\n+public final class SetMappings extends PageableCollectionResource<SetMapping> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDgyNw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIyMTg0OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/repository/TerminologyRepositoryPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1NzoyNVrOG3ZqUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo0OTo1M1rOG3fHOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NTI5OQ==", "bodyText": "Rename method to getConceptMapMappingSearchRequestEvaluator()", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460745299", "createdAt": "2020-07-27T08:57:25Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/repository/TerminologyRepositoryPlugin.java", "diffHunk": "@@ -151,6 +155,16 @@ protected SetMemberSearchRequestEvaluator getMemberSearchRequestEvaluator() {\n \t\treturn SetMemberSearchRequestEvaluator.NOOP;\n \t}\n \t\n+\t/**\n+\t * An evaluator that can evaluate generic {@link MappingSearchRequest member search requests}. \n+\t * @return a {@link SetMappingSearchRequestEvaluator} instance\n+\t * @see MappingSearchRequestBuilder\n+\t * @see MappingSearchRequest\n+\t */\n+\tprotected SetMappingSearchRequestEvaluator getMappingSearchRequestEvaluator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNDYxNw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460834617", "createdAt": "2020-07-27T11:49:53Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/repository/TerminologyRepositoryPlugin.java", "diffHunk": "@@ -151,6 +155,16 @@ protected SetMemberSearchRequestEvaluator getMemberSearchRequestEvaluator() {\n \t\treturn SetMemberSearchRequestEvaluator.NOOP;\n \t}\n \t\n+\t/**\n+\t * An evaluator that can evaluate generic {@link MappingSearchRequest member search requests}. \n+\t * @return a {@link SetMappingSearchRequestEvaluator} instance\n+\t * @see MappingSearchRequestBuilder\n+\t * @see MappingSearchRequest\n+\t */\n+\tprotected SetMappingSearchRequestEvaluator getMappingSearchRequestEvaluator() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NTI5OQ=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIyNjEyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1ODozM1rOG3ZtAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1MTowOVrOG3fJmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NTk4Ng==", "bodyText": "Rename these variables to changed, added, removed.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460745986", "createdAt": "2020-07-27T08:58:33Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.compare.ConceptMapCompareResult;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+* @since 7.8\n+*/\n+final class ConceptMapCompareRequest extends ResourceRequest<BranchContext, ConceptMapCompareResult> {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final ComponentURI baseConceptMapURI;\n+\tprivate final ComponentURI compareConceptMapURI;\n+\t\n+\tConceptMapCompareRequest(ComponentURI baseConceptMapURI, ComponentURI compareConceptMapURI) {\n+\t\tthis.baseConceptMapURI = baseConceptMapURI;\n+\t\tthis.compareConceptMapURI = compareConceptMapURI;\n+\t}\n+\n+\t@Override\n+\tpublic ConceptMapCompareResult execute(BranchContext context) {\n+\t\t\n+\t\tList<SetMapping> baseMappings = Lists.newArrayList();\n+\t\tList<SetMapping> compareMappings = Lists.newArrayList();\n+\t\t\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> baseIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(baseConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tbaseIterator.forEachRemaining(hits -> hits.forEach(baseMappings::add));\n+\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> compareIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(compareConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tcompareIterator.forEachRemaining(hits -> hits.forEach(compareMappings::add));\n+\t\t\n+\t\tConceptMapCompareResult result = compareDifferents(baseMappings, compareMappings);\n+\t\treturn result; \n+\t}\n+\t\n+\tprivate ConceptMapCompareResult compareDifferents(List<SetMapping> baseSet, List<SetMapping> compareSet) {\n+\t\tListMultimap<SetMapping, SetMapping> changes = ArrayListMultimap.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTIyNg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460835226", "createdAt": "2020-07-27T11:51:09Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.compare.ConceptMapCompareResult;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+* @since 7.8\n+*/\n+final class ConceptMapCompareRequest extends ResourceRequest<BranchContext, ConceptMapCompareResult> {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final ComponentURI baseConceptMapURI;\n+\tprivate final ComponentURI compareConceptMapURI;\n+\t\n+\tConceptMapCompareRequest(ComponentURI baseConceptMapURI, ComponentURI compareConceptMapURI) {\n+\t\tthis.baseConceptMapURI = baseConceptMapURI;\n+\t\tthis.compareConceptMapURI = compareConceptMapURI;\n+\t}\n+\n+\t@Override\n+\tpublic ConceptMapCompareResult execute(BranchContext context) {\n+\t\t\n+\t\tList<SetMapping> baseMappings = Lists.newArrayList();\n+\t\tList<SetMapping> compareMappings = Lists.newArrayList();\n+\t\t\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> baseIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(baseConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tbaseIterator.forEachRemaining(hits -> hits.forEach(baseMappings::add));\n+\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> compareIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(compareConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tcompareIterator.forEachRemaining(hits -> hits.forEach(compareMappings::add));\n+\t\t\n+\t\tConceptMapCompareResult result = compareDifferents(baseMappings, compareMappings);\n+\t\treturn result; \n+\t}\n+\t\n+\tprivate ConceptMapCompareResult compareDifferents(List<SetMapping> baseSet, List<SetMapping> compareSet) {\n+\t\tListMultimap<SetMapping, SetMapping> changes = ArrayListMultimap.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NTk4Ng=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIzMTc2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo1OTo1NlrOG3Zwcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1MTo1M1rOG3fK6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0Njg2Nw==", "bodyText": "Rename this method to isEqual().", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460746867", "createdAt": "2020-07-27T08:59:56Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.compare.ConceptMapCompareResult;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+* @since 7.8\n+*/\n+final class ConceptMapCompareRequest extends ResourceRequest<BranchContext, ConceptMapCompareResult> {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final ComponentURI baseConceptMapURI;\n+\tprivate final ComponentURI compareConceptMapURI;\n+\t\n+\tConceptMapCompareRequest(ComponentURI baseConceptMapURI, ComponentURI compareConceptMapURI) {\n+\t\tthis.baseConceptMapURI = baseConceptMapURI;\n+\t\tthis.compareConceptMapURI = compareConceptMapURI;\n+\t}\n+\n+\t@Override\n+\tpublic ConceptMapCompareResult execute(BranchContext context) {\n+\t\t\n+\t\tList<SetMapping> baseMappings = Lists.newArrayList();\n+\t\tList<SetMapping> compareMappings = Lists.newArrayList();\n+\t\t\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> baseIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(baseConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tbaseIterator.forEachRemaining(hits -> hits.forEach(baseMappings::add));\n+\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> compareIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(compareConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tcompareIterator.forEachRemaining(hits -> hits.forEach(compareMappings::add));\n+\t\t\n+\t\tConceptMapCompareResult result = compareDifferents(baseMappings, compareMappings);\n+\t\treturn result; \n+\t}\n+\t\n+\tprivate ConceptMapCompareResult compareDifferents(List<SetMapping> baseSet, List<SetMapping> compareSet) {\n+\t\tListMultimap<SetMapping, SetMapping> changes = ArrayListMultimap.create();\n+\t\tList<SetMapping> remove = Lists.newArrayList();\n+\t\tList<SetMapping> add = Lists.newArrayList();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (SetMapping memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new ConceptMapCompareResult (add, remove, changes);\n+\t}\n+\n+\tprivate boolean isSame(SetMapping memberA, SetMapping memberB) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTU2Mw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460835563", "createdAt": "2020-07-27T11:51:53Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptMapCompareRequest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.compare.ConceptMapCompareResult;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.ListMultimap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+* @since 7.8\n+*/\n+final class ConceptMapCompareRequest extends ResourceRequest<BranchContext, ConceptMapCompareResult> {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate final ComponentURI baseConceptMapURI;\n+\tprivate final ComponentURI compareConceptMapURI;\n+\t\n+\tConceptMapCompareRequest(ComponentURI baseConceptMapURI, ComponentURI compareConceptMapURI) {\n+\t\tthis.baseConceptMapURI = baseConceptMapURI;\n+\t\tthis.compareConceptMapURI = compareConceptMapURI;\n+\t}\n+\n+\t@Override\n+\tpublic ConceptMapCompareResult execute(BranchContext context) {\n+\t\t\n+\t\tList<SetMapping> baseMappings = Lists.newArrayList();\n+\t\tList<SetMapping> compareMappings = Lists.newArrayList();\n+\t\t\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> baseIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(baseConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tbaseIterator.forEachRemaining(hits -> hits.forEach(baseMappings::add));\n+\n+\t\tfinal SearchResourceRequestIterator<MappingSearchRequestBuilder, SetMappings> compareIterator = new SearchResourceRequestIterator<>(\n+\t\t\t\tCodeSystemRequests.prepareSearchMappings()\n+\t\t\t\t.filterBySet(compareConceptMapURI.identifier())\n+\t\t\t\t.setLocales(locales())\n+\t\t\t\t.setLimit(10_000),\n+\t\t\t\tr -> r.build().execute(context)\n+\t\t);\n+\t\t\n+\t\tcompareIterator.forEachRemaining(hits -> hits.forEach(compareMappings::add));\n+\t\t\n+\t\tConceptMapCompareResult result = compareDifferents(baseMappings, compareMappings);\n+\t\treturn result; \n+\t}\n+\t\n+\tprivate ConceptMapCompareResult compareDifferents(List<SetMapping> baseSet, List<SetMapping> compareSet) {\n+\t\tListMultimap<SetMapping, SetMapping> changes = ArrayListMultimap.create();\n+\t\tList<SetMapping> remove = Lists.newArrayList();\n+\t\tList<SetMapping> add = Lists.newArrayList();\n+\n+\t\tremove.addAll(baseSet);\n+\t\tadd.addAll(compareSet);\n+\n+\t\tfor (SetMapping memberA : baseSet) {\n+\t\t\tcompareSet.forEach(memberB -> {\n+\t\t\t\tif (isSame(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t} else if (isChanged(memberA, memberB)) {\n+\t\t\t\t\tremove.remove(memberA);\n+\t\t\t\t\tadd.remove(memberB);\n+\t\t\t\t\tchanges.put(memberA, memberB);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t}\n+\t\treturn new ConceptMapCompareResult (add, remove, changes);\n+\t}\n+\n+\tprivate boolean isSame(SetMapping memberA, SetMapping memberB) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0Njg2Nw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIzNDIyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingCorrelation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMDozNlrOG3ZyCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1Mjo0OFrOG3fMkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzI3NA==", "bodyText": "Incorrect license and year.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460747274", "createdAt": "2020-07-27T09:00:36Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingCorrelation.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 B2i Healthcare. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTk4NQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460835985", "createdAt": "2020-07-27T11:52:48Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingCorrelation.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\n+ * Copyright (c) 2019 B2i Healthcare. All rights reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzI3NA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIzNTU5OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMDo1N1rOG3Zy5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1NDozMVrOG3fPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzQ5Mg==", "bodyText": "Rename this to ConceptMapMappingSearchRequest.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460747492", "createdAt": "2020-07-27T09:00:57Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.io.IOException;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequest extends SearchResourceRequest<BranchContext, SetMappings> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNjgxMQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460836811", "createdAt": "2020-07-27T11:54:31Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.io.IOException;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequest extends SearchResourceRequest<BranchContext, SetMappings> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzQ5Mg=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIzNzcyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMTozMlrOG3Z0Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1NTo0NlrOG3fSUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzgyNw==", "bodyText": "Rename this to ConceptMapMappingSearchRequestBuilder.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460747827", "createdAt": "2020-07-27T09:01:32Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNzQ1OQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460837459", "createdAt": "2020-07-27T11:55:46Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzgyNw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjIzOTY5OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMjowNFrOG3Z1cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1NzozOFrOG3fWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODE0NA==", "bodyText": "Rename this method to filterByConceptMap(conceptMapId).", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460748144", "createdAt": "2020-07-27T09:02:04Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> \n+\t\timplements RevisionIndexRequestBuilder<SetMappings> {\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySet(String setId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzODQxMg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460838412", "createdAt": "2020-07-27T11:57:38Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> \n+\t\timplements RevisionIndexRequestBuilder<SetMappings> {\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySet(String setId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODE0NA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjI0MDIzOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMjoxM1rOG3Z1wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTo1Nzo0NlrOG3fWUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODIyNA==", "bodyText": "Rename this method to filterByConceptMaps(conceptMapIds).", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460748224", "createdAt": "2020-07-27T09:02:13Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> \n+\t\timplements RevisionIndexRequestBuilder<SetMappings> {\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySet(String setId) {\n+\t\treturn filterBySets(ImmutableSet.of(setId));\n+\t}\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySets(Iterable<String> setIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzODQ4MQ==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460838481", "createdAt": "2020-07-27T11:57:46Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/MappingSearchRequestBuilder.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.SetSearchRequestEvaluator.OptionKey;\n+import com.google.common.collect.ImmutableSet;\n+\n+/**\n+* @since 7.8\n+*/\n+public final class MappingSearchRequestBuilder extends SearchResourceRequestBuilder<MappingSearchRequestBuilder, BranchContext, SetMappings> \n+\t\timplements RevisionIndexRequestBuilder<SetMappings> {\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySet(String setId) {\n+\t\treturn filterBySets(ImmutableSet.of(setId));\n+\t}\n+\t\n+\tpublic MappingSearchRequestBuilder filterBySets(Iterable<String> setIds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODIyNA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjI0MTk4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SetMappingSearchRequestEvaluator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowMjo0MVrOG3Z22w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MzoyMVrOG3bQ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODUwNw==", "bodyText": "Rename this to ConceptMapMappingSearchRequestEvaluator.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460748507", "createdAt": "2020-07-27T09:02:41Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+\n+/**\n+ * @since 7.8\n+ */\n+public interface SetMappingSearchRequestEvaluator extends SetSearchRequestEvaluator<SetMappings> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MTU2Mg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460771562", "createdAt": "2020-07-27T09:43:21Z", "author": {"login": "molnarlaura"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+\n+/**\n+ * @since 7.8\n+ */\n+public interface SetMappingSearchRequestEvaluator extends SetSearchRequestEvaluator<SetMappings> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0ODUwNw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjI0NzQ5OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowNDoyMlrOG3Z6dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowNDoyMlrOG3Z6dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0OTQyOQ==", "bodyText": "It would be great to list all possible exceptions instead of catching all.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460749429", "createdAt": "2020-07-27T09:04:22Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java", "diffHunk": "@@ -122,6 +122,16 @@ private static ComponentURI getOrCache(final ComponentURI componentURI) {\n \t\treturn COMPONENT_URI_INTERNER.intern(componentURI);\n \t}\n \t\n+\tpublic static boolean isValid(String uriString) {\n+\t\ttry {\n+\t\t\tof(uriString);\n+\t\t} catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjI2Njk0OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/core/SnomedPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTowOTo1NFrOG3aGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MzoxOFrOG3bQvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1MjQ2Mw==", "bodyText": "Rename this to SnomedConceptMapSearchRequestEvaluator.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460752463", "createdAt": "2020-07-27T09:09:54Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/core/SnomedPlugin.java", "diffHunk": "@@ -231,7 +233,12 @@ protected ComponentRevisionConflictProcessor getComponentRevisionConflictProcess\n \t\n \t@Override\n \tprotected SetMemberSearchRequestEvaluator getMemberSearchRequestEvaluator() {\n-\t\treturn new SnomedRefSetMemberSearchRequestEvaluator();\n+\t\treturn new SnomedMemberSearchRequestEvaluator();\n+\t}\n+\t\n+\t@Override\n+\tprotected SetMappingSearchRequestEvaluator getMappingSearchRequestEvaluator() {\n+\t\treturn new SnomedRefSetMappingSearchRequestEvaluator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MTUxNw==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460771517", "createdAt": "2020-07-27T09:43:18Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/core/SnomedPlugin.java", "diffHunk": "@@ -231,7 +233,12 @@ protected ComponentRevisionConflictProcessor getComponentRevisionConflictProcess\n \t\n \t@Override\n \tprotected SetMemberSearchRequestEvaluator getMemberSearchRequestEvaluator() {\n-\t\treturn new SnomedRefSetMemberSearchRequestEvaluator();\n+\t\treturn new SnomedMemberSearchRequestEvaluator();\n+\t}\n+\t\n+\t@Override\n+\tprotected SetMappingSearchRequestEvaluator getMappingSearchRequestEvaluator() {\n+\t\treturn new SnomedRefSetMappingSearchRequestEvaluator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1MjQ2Mw=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjMxMDQ1OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyMTozNFrOG3agmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToyMTowOVrOG3nZtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1OTE5NA==", "bodyText": "This needs to be removed because it can cause ConcurrentModificationExceptions or incorrect return values when executing by more than one thread.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460759194", "createdAt": "2020-07-27T09:21:34Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.snomed.datastore.request;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.codesystem.CodeSystem;\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMapping.Builder;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.request.SetMappingSearchRequestEvaluator;\n+import com.b2international.snowowl.core.terminology.Terminology;\n+import com.b2international.snowowl.core.terminology.TerminologyComponent;\n+import com.b2international.snowowl.core.terminology.TerminologyRegistry;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.b2international.snowowl.snomed.common.SnomedConstants.Concepts;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class SnomedRefSetMappingSearchRequestEvaluator extends SnomedCollectionSearchRequestEvaluator<SetMapping, SetMappings> implements SetMappingSearchRequestEvaluator {\n+\n+\t//RefsetID -> targetComponentURI\n+\tprivate Map<String, ComponentURI> targetCodeSystemMap = Maps.newHashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MDQyMg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460970422", "createdAt": "2020-07-27T15:21:09Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.snomed.datastore.request;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.codesystem.CodeSystem;\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMapping.Builder;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.request.SetMappingSearchRequestEvaluator;\n+import com.b2international.snowowl.core.terminology.Terminology;\n+import com.b2international.snowowl.core.terminology.TerminologyComponent;\n+import com.b2international.snowowl.core.terminology.TerminologyRegistry;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.b2international.snowowl.snomed.common.SnomedConstants.Concepts;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class SnomedRefSetMappingSearchRequestEvaluator extends SnomedCollectionSearchRequestEvaluator<SetMapping, SetMappings> implements SetMappingSearchRequestEvaluator {\n+\n+\t//RefsetID -> targetComponentURI\n+\tprivate Map<String, ComponentURI> targetCodeSystemMap = Maps.newHashMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1OTE5NA=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjMyNTU4OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyNTozNlrOG3aqCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxODoxNFrOG3nRZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2MTYwOQ==", "bodyText": "MIssing override annotation.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460761609", "createdAt": "2020-07-27T09:25:36Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.snomed.datastore.request;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.codesystem.CodeSystem;\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMapping.Builder;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.request.SetMappingSearchRequestEvaluator;\n+import com.b2international.snowowl.core.terminology.Terminology;\n+import com.b2international.snowowl.core.terminology.TerminologyComponent;\n+import com.b2international.snowowl.core.terminology.TerminologyRegistry;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.b2international.snowowl.snomed.common.SnomedConstants.Concepts;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class SnomedRefSetMappingSearchRequestEvaluator extends SnomedCollectionSearchRequestEvaluator<SetMapping, SetMappings> implements SetMappingSearchRequestEvaluator {\n+\n+\t//RefsetID -> targetComponentURI\n+\tprivate Map<String, ComponentURI> targetCodeSystemMap = Maps.newHashMap();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2ODI5Mg==", "bodyText": "Done", "url": "https://github.com/b2ihealthcare/snow-owl/pull/610#discussion_r460968292", "createdAt": "2020-07-27T15:18:14Z", "author": {"login": "molnarlaura"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedRefSetMappingSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.snomed.datastore.request;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.codesystem.CodeSystem;\n+import com.b2international.snowowl.core.codesystem.CodeSystemRequests;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.SetMapping;\n+import com.b2international.snowowl.core.domain.SetMapping.Builder;\n+import com.b2international.snowowl.core.domain.SetMappings;\n+import com.b2international.snowowl.core.request.MappingCorrelation;\n+import com.b2international.snowowl.core.request.SetMappingSearchRequestEvaluator;\n+import com.b2international.snowowl.core.terminology.Terminology;\n+import com.b2international.snowowl.core.terminology.TerminologyComponent;\n+import com.b2international.snowowl.core.terminology.TerminologyRegistry;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+import com.b2international.snowowl.core.uri.ComponentURI;\n+import com.b2international.snowowl.snomed.common.SnomedConstants.Concepts;\n+import com.b2international.snowowl.snomed.common.SnomedRf2Headers;\n+import com.b2international.snowowl.snomed.common.SnomedTerminologyComponentConstants;\n+import com.b2international.snowowl.snomed.core.domain.SnomedConcept;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedRefSetType;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSet;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMember;\n+import com.b2international.snowowl.snomed.core.domain.refset.SnomedReferenceSetMembers;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+\n+/**\n+ * @since 7.8\n+ */\n+public class SnomedRefSetMappingSearchRequestEvaluator extends SnomedCollectionSearchRequestEvaluator<SetMapping, SetMappings> implements SetMappingSearchRequestEvaluator {\n+\n+\t//RefsetID -> targetComponentURI\n+\tprivate Map<String, ComponentURI> targetCodeSystemMap = Maps.newHashMap();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2MTYwOQ=="}, "originalCommit": {"oid": "2e4c32c6e8053ecbafe4552a6a8d1e36ef1b0d64"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1644, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}