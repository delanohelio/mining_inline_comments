{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDI5Mzg3", "number": 597, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0NDoxNlrOEJCUXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoxNjoyN1rOEJC5fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTEwNjIyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0NDoxNlrOGpXAzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoxNzoxOVrOGpX-ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMTgzOA==", "bodyText": "Isn't there a need here to check array length? I'm also not sure whether it is guaranteed that the query string does have at least one whitespace or not?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446021838", "createdAt": "2020-06-26T07:44:16Z", "author": {"login": "nagyo"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "diffHunk": "@@ -113,4 +116,17 @@ public Concepts evaluate(CodeSystemURI uri, BranchContext context, Options searc\n \t\t}\n \t};\n \t\n+\t/**\n+\t * Support value set clause evaluation\n+\t * @since 7.7\n+\t */\n+\tpublic static Collection<String> getIds(Collection<String> querys) {\n+\t\tCollection<String> ids = Lists.newArrayList();\n+\t\tquerys.forEach(query -> {\n+\t\t\tString[] id = query.replaceAll(\"\\\\|\", \"\").split(\" \", 2);\n+\t\t\tids.add(id[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzY2Mg==", "bodyText": "Fixed.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446037662", "createdAt": "2020-06-26T08:17:19Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "diffHunk": "@@ -113,4 +116,17 @@ public Concepts evaluate(CodeSystemURI uri, BranchContext context, Options searc\n \t\t}\n \t};\n \t\n+\t/**\n+\t * Support value set clause evaluation\n+\t * @since 7.7\n+\t */\n+\tpublic static Collection<String> getIds(Collection<String> querys) {\n+\t\tCollection<String> ids = Lists.newArrayList();\n+\t\tquerys.forEach(query -> {\n+\t\t\tString[] id = query.replaceAll(\"\\\\|\", \"\").split(\" \", 2);\n+\t\t\tids.add(id[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMTgzOA=="}, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTE5NjIzOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoxNDo1NVrOGpX5_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoyODo1MVrOGpYVrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNjQ3OQ==", "bodyText": "This will throw UnsupportedOperationException if no extension has been registered for a tooling ID.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446036479", "createdAt": "2020-06-26T08:14:55Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MzU2NQ==", "bodyText": "Fixed.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446043565", "createdAt": "2020-06-26T08:28:51Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNjQ3OQ=="}, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTIwMTI2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoxNjoyN1rOGpX9Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoyOTowMFrOGpYWAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA==", "bodyText": "If there are multiple toolingId values given, and one adds their own query clauses to the builder, we might end up with a final query that is \"impossible\".", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446037250", "createdAt": "2020-06-26T08:16:27Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);\n \t\t\t\tOptions options = getOptions(OptionKey.DETAILS);\n-\t\t\t\textension.prepareQuery(queryBuilder, options);\n+\t\t\t\tvalidationDetailExtension.prepareQuery(queryBuilder, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MzY0OA==", "bodyText": "Fixed.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446043648", "createdAt": "2020-06-26T08:29:00Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);\n \t\t\t\tOptions options = getOptions(OptionKey.DETAILS);\n-\t\t\t\textension.prepareQuery(queryBuilder, options);\n+\t\t\t\tvalidationDetailExtension.prepareQuery(queryBuilder, options);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA=="}, "originalCommit": {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1639, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}