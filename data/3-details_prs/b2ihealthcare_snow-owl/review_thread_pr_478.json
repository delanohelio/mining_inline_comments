{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDM3NDA0", "number": 478, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTowNzowM1rODeDQrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1NzoyNFrODeEXzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODM3Mjk1OnYy", "diffSide": "RIGHT", "path": "commons/com.b2international.index/src/com/b2international/index/es/EsDocumentSearcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTowNzowM1rOFnAA2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTowOTo0MFrOFnAG1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzOTAwMA==", "bodyText": "Accuracy of total hits counting changed with ES 7.0 (\"Track total hits up to 10,000 by default\"): https://www.elastic.co/guide/en/elasticsearch/reference/current/release-notes-7.0.0.html", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376439000", "createdAt": "2020-02-07T15:07:03Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/es/EsDocumentSearcher.java", "diffHunk": "@@ -190,7 +189,7 @@ public EsDocumentSearcher(EsIndexAdmin admin, ObjectMapper mapper) {\n \t\t\tthrow new IndexException(\"Couldn't execute query: \" + e.getMessage(), null);\n \t\t}\n \t\t\n-\t\tfinal int totalHits = (int) response.getHits().getTotalHits();\n+\t\tfinal int totalHits = (int) response.getHits().getTotalHits().value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69b6aeb86743535de7a961cb23b145390f6e51a4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0MDUzMg==", "bodyText": "Thanks! Fixed in commit 562a6e6.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376440532", "createdAt": "2020-02-07T15:09:40Z", "author": {"login": "cmark"}, "path": "commons/com.b2international.index/src/com/b2international/index/es/EsDocumentSearcher.java", "diffHunk": "@@ -190,7 +189,7 @@ public EsDocumentSearcher(EsIndexAdmin admin, ObjectMapper mapper) {\n \t\t\tthrow new IndexException(\"Couldn't execute query: \" + e.getMessage(), null);\n \t\t}\n \t\t\n-\t\tfinal int totalHits = (int) response.getHits().getTotalHits();\n+\t\tfinal int totalHits = (int) response.getHits().getTotalHits().value;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzOTAwMA=="}, "originalCommit": {"oid": "69b6aeb86743535de7a961cb23b145390f6e51a4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODM5MzI0OnYy", "diffSide": "RIGHT", "path": "commons/com.b2international.index/src/com/b2international/index/es/admin/EsIndexAdmin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNToxMjoyNFrOFnANEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNToxNToxOFrOFnATdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0MjEyOQ==", "bodyText": "Is types still needed here?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376442129", "createdAt": "2020-02-07T15:12:24Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/es/admin/EsIndexAdmin.java", "diffHunk": "@@ -145,24 +145,23 @@ public void create() {\n \t\tfor (DocumentMapping mapping : mappings.getMappings()) {\n \t\t\tfinal String index = getTypeIndex(mapping);\n \t\t\tfinal String type = mapping.typeAsString();\n-\t\t\tfinal Map<String, Object> typeMapping = ImmutableMap.of(type,\n-\t\t\t\t\tImmutableMap.builder()\n+\t\t\tfinal Map<String, Object> typeMapping = ImmutableMap.<String, Object>builder()\n \t\t\t\t\t.put(\"date_detection\", false)\n \t\t\t\t\t.put(\"numeric_detection\", false)\n \t\t\t\t\t.putAll(toProperties(mapping))\n-\t\t\t\t\t.build());\n+\t\t\t\t\t.build();\n \t\t\t\n \t\t\tif (exists(mapping)) {\n \t\t\t\t// update mapping if required\n \t\t\t\tImmutableOpenMap<String, MappingMetaData> currentIndexMapping;\n \t\t\t\ttry {\n-\t\t\t\t\tcurrentIndexMapping = client.indices().getMapping(new GetMappingsRequest().indices(index).types(type)).mappings().get(index);\n+\t\t\t\t\tcurrentIndexMapping = client.indices().getMapping(new GetMappingsRequest().types(type).indices(index)).mappings().get(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69b6aeb86743535de7a961cb23b145390f6e51a4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0Mzc2Nw==", "bodyText": "Yes, unfortunately, the GetMapping/PutMapping/CreateIndex action requests still require type value to be specified. The new ES HLRC however uses a different set of Request classes which do not require the type value. I was able to remove all other type fields from the EsClient interface and implementations.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376443767", "createdAt": "2020-02-07T15:15:18Z", "author": {"login": "cmark"}, "path": "commons/com.b2international.index/src/com/b2international/index/es/admin/EsIndexAdmin.java", "diffHunk": "@@ -145,24 +145,23 @@ public void create() {\n \t\tfor (DocumentMapping mapping : mappings.getMappings()) {\n \t\t\tfinal String index = getTypeIndex(mapping);\n \t\t\tfinal String type = mapping.typeAsString();\n-\t\t\tfinal Map<String, Object> typeMapping = ImmutableMap.of(type,\n-\t\t\t\t\tImmutableMap.builder()\n+\t\t\tfinal Map<String, Object> typeMapping = ImmutableMap.<String, Object>builder()\n \t\t\t\t\t.put(\"date_detection\", false)\n \t\t\t\t\t.put(\"numeric_detection\", false)\n \t\t\t\t\t.putAll(toProperties(mapping))\n-\t\t\t\t\t.build());\n+\t\t\t\t\t.build();\n \t\t\t\n \t\t\tif (exists(mapping)) {\n \t\t\t\t// update mapping if required\n \t\t\t\tImmutableOpenMap<String, MappingMetaData> currentIndexMapping;\n \t\t\t\ttry {\n-\t\t\t\t\tcurrentIndexMapping = client.indices().getMapping(new GetMappingsRequest().indices(index).types(type)).mappings().get(index);\n+\t\t\t\t\tcurrentIndexMapping = client.indices().getMapping(new GetMappingsRequest().types(type).indices(index)).mappings().get(index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0MjEyOQ=="}, "originalCommit": {"oid": "69b6aeb86743535de7a961cb23b145390f6e51a4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODQ3Nzk4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestIterator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTozNTozN1rOFnBBZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTozNTozN1rOFnBBZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ1NTUyNw==", "bodyText": "This comment should be updated as well.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376455527", "createdAt": "2020-02-07T15:35:37Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestIterator.java", "diffHunk": "@@ -84,7 +72,7 @@ protected R computeNext() {\n \t\t}\n \n \t\t// Update scrollId and visited counter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed070c281db9d04adc6bf16554adcf0e1cddac1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODUwODMwOnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.reasoner/src/com/b2international/snowowl/snomed/reasoner/request/SaveJobRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo0NDoxNlrOFnBUKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo0NDoxNlrOFnBUKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2MDMzMQ==", "bodyText": "Now that SearchResourceRequestIterator relies on the revision system for snapshot semantics, limit constants like the above could be changed to eg. BATCH_SIZE or similar.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376460331", "createdAt": "2020-02-07T15:44:16Z", "author": {"login": "apeteri"}, "path": "snomed/com.b2international.snowowl.snomed.reasoner/src/com/b2international/snowowl/snomed/reasoner/request/SaveJobRequest.java", "diffHunk": "@@ -87,7 +87,6 @@\n \tprivate static final Logger LOG = LoggerFactory.getLogger(\"reasoner\");\n \n \tprivate static final int SCROLL_LIMIT = 10_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed070c281db9d04adc6bf16554adcf0e1cddac1"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODUyNDc5OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/rf2/SnomedRf2ExportRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo0ODo0NVrOFnBeXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1NjozNlrOFnBv1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2Mjk0Mw==", "bodyText": "How about using the export reference branch's head timestamp? We could even run the export on a BranchContext just to ensure that it's not a moving target.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376462943", "createdAt": "2020-02-07T15:48:45Z", "author": {"login": "apeteri"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/rf2/SnomedRf2ExportRequest.java", "diffHunk": "@@ -251,6 +252,8 @@ void setLocales(List<ExtendedLocale> locales) {\n \n \t@Override\n \tpublic ExportResult execute(final RepositoryContext context) {\n+\t\t// register export start time for later use\n+\t\tfinal long exportStartTime = Instant.now().toEpochMilli();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3108cfd0640e32da6953c7e6914243480589128d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NzQxNQ==", "bodyText": "Great idea, but I'm afraid we cannot change the RepositoryContext to BranchContext in the SnomedRF2ExportRequest now. Feel free to experiment with it.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376467415", "createdAt": "2020-02-07T15:56:36Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/rf2/SnomedRf2ExportRequest.java", "diffHunk": "@@ -251,6 +252,8 @@ void setLocales(List<ExtendedLocale> locales) {\n \n \t@Override\n \tpublic ExportResult execute(final RepositoryContext context) {\n+\t\t// register export start time for later use\n+\t\tfinal long exportStartTime = Instant.now().toEpochMilli();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2Mjk0Mw=="}, "originalCommit": {"oid": "3108cfd0640e32da6953c7e6914243480589128d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODU1NTAzOnYy", "diffSide": "RIGHT", "path": "commons/com.b2international.index/src/com/b2international/index/es/admin/EsIndexAdmin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1NzoyNFrOFnBxfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTo1NzoyNFrOFnBxfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2NzgzOQ==", "bodyText": "\u26a0\ufe0f typo in constant", "url": "https://github.com/b2ihealthcare/snow-owl/pull/478#discussion_r376467839", "createdAt": "2020-02-07T15:57:24Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.index/src/com/b2international/index/es/admin/EsIndexAdmin.java", "diffHunk": "@@ -556,9 +556,9 @@ private void bulkIndexByScroll(final EsClient client,\n \t\t\t\t\n \t\t\t\tfinal BulkByScrollResponse response; \n \t\t\t\tif (\"update\".equals(command)) {\n-\t\t\t\t\tresponse = client.updateByQuery(getTypeIndex(mapping), mapping.typeAsString(), BATCHS_SIZE, script, getConcurrencyLevel(), query);\n+\t\t\t\t\tresponse = client.updateByQuery(getTypeIndex(mapping), BATCHS_SIZE, script, getConcurrencyLevel(), query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95bcd094ebbe4f669c66a9682474154e87baefbc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1697, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}