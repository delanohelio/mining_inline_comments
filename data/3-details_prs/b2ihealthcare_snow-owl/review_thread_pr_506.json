{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTU0MTMx", "number": 506, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoyNlrODlDGUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0OTo0NlrODlDPAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc0Njc0OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/CodeSystemResourceRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoyNlrOFxttYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoyNlrOFxttYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MzQ0Mw==", "bodyText": "The code system version search request is only used in the else block below; move the local variable declaration inside the block.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387673443", "createdAt": "2020-03-04T13:43:26Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/CodeSystemResourceRequest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.datastore.request;\n+\n+import com.b2international.snowowl.core.ServiceProvider;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.events.DelegatingRequest;\n+import com.b2international.snowowl.core.events.Request;\n+import com.b2international.snowowl.core.request.SearchResourceRequest;\n+import com.b2international.snowowl.core.uri.CodeSystemURI;\n+import com.b2international.snowowl.datastore.CodeSystemEntry;\n+import com.b2international.snowowl.datastore.CodeSystemVersionEntry;\n+import com.b2international.snowowl.terminologyregistry.core.request.CodeSystemRequests;\n+import com.b2international.snowowl.terminologyregistry.core.request.CodeSystemVersionSearchRequestBuilder;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * @since 7.5\n+ */\n+public final class CodeSystemResourceRequest<R> extends DelegatingRequest<ServiceProvider, BranchContext, R> {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@JsonProperty\n+\tprivate final CodeSystemURI uri;\n+\t\n+\tprivate transient CodeSystemEntry codeSystem;\n+\t\n+\tprivate transient String branchPath;\n+\t\n+\tCodeSystemResourceRequest(String codeSystemUri, Request<BranchContext, R> next) {\n+\t\tsuper(next);\n+\t\tthis.uri = new CodeSystemURI(codeSystemUri);\n+\t}\n+\n+\t@Override\n+\tpublic R execute(ServiceProvider context) {\n+\t\treturn new RepositoryRequest<R>(getRepositoryId(context),\n+\t\t\tnew BranchRequest<R>(getBranchPath(context),\n+\t\t\t\tnext()\n+\t\t\t)\n+\t\t).execute(context);\n+\t}\n+\n+\tpublic CodeSystemEntry getCodeSystem(ServiceProvider context) {\n+\t\tif (codeSystem == null) {\n+\t\t\tcodeSystem = CodeSystemRequests.getCodeSystem(context, uri.getCodeSystem());\n+\t\t}\n+\t\treturn codeSystem;\n+\t}\n+\t\n+\tpublic String getRepositoryId(ServiceProvider context) {\n+\t\treturn getCodeSystem(context).getRepositoryUuid();\n+\t}\n+\t\n+\tpublic String getBranchPath(ServiceProvider context) {\n+\t\tif (branchPath == null) {\n+\t\t\tCodeSystemVersionSearchRequestBuilder versionSearch = CodeSystemRequests.prepareSearchCodeSystemVersion()\n+\t\t\t\t.one()\n+\t\t\t\t.filterByCodeSystemShortName(codeSystem.getShortName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc1OTMxOnYy", "diffSide": "LEFT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RepositoryCommitRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0NzowNVrOFxt1Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTo0MzoxN1rOFxygTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NTQ5MA==", "bodyText": "Is there any replacement for this build method?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387675490", "createdAt": "2020-03-04T13:47:05Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RepositoryCommitRequestBuilder.java", "diffHunk": "@@ -84,18 +85,5 @@ public final RepositoryCommitRequestBuilder setParentContextDescription(String p\n \tprotected final Request<BranchContext, CommitResult> doBuild() {\n \t\treturn new TransactionalRequest(author, commitComment, getBody(), preparationTime, parentContextDescription);\n \t}\n-\t\n-\tpublic AsyncRequest<CommitResult> build(String repositoryId, String branch) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1MjAxNQ==", "bodyText": "This was the same build method as the one in RevisionIndexRequestBuilder.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387752015", "createdAt": "2020-03-04T15:43:17Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RepositoryCommitRequestBuilder.java", "diffHunk": "@@ -84,18 +85,5 @@ public final RepositoryCommitRequestBuilder setParentContextDescription(String p\n \tprotected final Request<BranchContext, CommitResult> doBuild() {\n \t\treturn new TransactionalRequest(author, commitComment, getBody(), preparationTime, parentContextDescription);\n \t}\n-\t\n-\tpublic AsyncRequest<CommitResult> build(String repositoryId, String branch) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NTQ5MA=="}, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc2MjgyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RevisionIndexRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0ODowM1rOFxt3eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTo0MzozMlrOFxyhEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NjAyNg==", "bodyText": "The URI-based alternative doesn't include the health check request wrapper.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387676026", "createdAt": "2020-03-04T13:48:03Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RevisionIndexRequestBuilder.java", "diffHunk": "@@ -29,14 +30,32 @@\n  * @since 5.7\n  * @param <R> - the return type\n  */\n-public interface RevisionIndexRequestBuilder<R> extends RequestBuilder<BranchContext, R> {\n+public interface RevisionIndexRequestBuilder<R> extends BranchRequestBuilder<R> {\n \n+\t@Override\n \tdefault AsyncRequest<R> build(String repositoryId, String branch) {\n-\t\treturn new AsyncRequest<>(\n-\t\t\tnew RepositoryRequest<>(repositoryId,\n-\t\t\t\tnew BranchRequest<>(branch, \n-\t\t\t\t\tnew RevisionIndexReadRequest<>(build())\n+\t\t// if the branch starts with MAIN, then it is an explicit branch path with a repositoryId\n+\t\tif (Strings.nullToEmpty(branch).startsWith(Branch.MAIN_PATH)) {\n+\t\t\treturn new AsyncRequest<>(\n+\t\t\t\tnew RepositoryRequest<>(repositoryId,\n+\t\t\t\t\tnew HealthCheckingRequest<>(\n+\t\t\t\t\t\tnew BranchRequest<>(branch, \n+\t\t\t\t\t\t\tnew RevisionIndexReadRequest<>(build())\n+\t\t\t\t\t\t),\n+\t\t\t\t\t\tallowedHealthstates()\n+\t\t\t\t\t)\n \t\t\t\t)\n+\t\t\t);\n+\t\t} else {\n+\t\t\treturn build(branch);\n+\t\t}\n+\t}\n+\t\n+\tdefault AsyncRequest<R> build(String codeSystemUri) {\n+\t\treturn new AsyncRequest<>(\n+\t\t\tnew CodeSystemResourceRequest<>(\n+\t\t\t\tcodeSystemUri,\n+\t\t\t\tnew RevisionIndexReadRequest<>(build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1MjIwOQ==", "bodyText": "It does, internally.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387752209", "createdAt": "2020-03-04T15:43:32Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/datastore/request/RevisionIndexRequestBuilder.java", "diffHunk": "@@ -29,14 +30,32 @@\n  * @since 5.7\n  * @param <R> - the return type\n  */\n-public interface RevisionIndexRequestBuilder<R> extends RequestBuilder<BranchContext, R> {\n+public interface RevisionIndexRequestBuilder<R> extends BranchRequestBuilder<R> {\n \n+\t@Override\n \tdefault AsyncRequest<R> build(String repositoryId, String branch) {\n-\t\treturn new AsyncRequest<>(\n-\t\t\tnew RepositoryRequest<>(repositoryId,\n-\t\t\t\tnew BranchRequest<>(branch, \n-\t\t\t\t\tnew RevisionIndexReadRequest<>(build())\n+\t\t// if the branch starts with MAIN, then it is an explicit branch path with a repositoryId\n+\t\tif (Strings.nullToEmpty(branch).startsWith(Branch.MAIN_PATH)) {\n+\t\t\treturn new AsyncRequest<>(\n+\t\t\t\tnew RepositoryRequest<>(repositoryId,\n+\t\t\t\t\tnew HealthCheckingRequest<>(\n+\t\t\t\t\t\tnew BranchRequest<>(branch, \n+\t\t\t\t\t\t\tnew RevisionIndexReadRequest<>(build())\n+\t\t\t\t\t\t),\n+\t\t\t\t\t\tallowedHealthstates()\n+\t\t\t\t\t)\n \t\t\t\t)\n+\t\t\t);\n+\t\t} else {\n+\t\t\treturn build(branch);\n+\t\t}\n+\t}\n+\t\n+\tdefault AsyncRequest<R> build(String codeSystemUri) {\n+\t\treturn new AsyncRequest<>(\n+\t\t\tnew CodeSystemResourceRequest<>(\n+\t\t\t\tcodeSystemUri,\n+\t\t\t\tnew RevisionIndexReadRequest<>(build())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NjAyNg=="}, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc2ODk4OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/terminologyregistry/core/request/CodeSystemRequests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0OTo0NlrOFxt7UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTo0Njo0NFrOFxyp2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NzAwOQ==", "bodyText": "What is the general consensus around repositories with YELLOW health? Can those still be read?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387677009", "createdAt": "2020-03-04T13:49:46Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/terminologyregistry/core/request/CodeSystemRequests.java", "diffHunk": "@@ -47,5 +57,46 @@ public static CodeSystemVersionSearchRequestBuilder prepareSearchCodeSystemVersi\n \tpublic static CodeSystemVersionCreateRequestBuilder prepareNewCodeSystemVersion() {\n \t\treturn new CodeSystemVersionCreateRequestBuilder();\n \t}\n+\n+\t/**\n+\t * Returns all {@link CodeSystemEntry}s from all repositories.\n+\t * @param context\n+\t * @return\n+\t */\n+\tpublic static List<CodeSystemEntry> getAllCodeSystems(ServiceProvider context) {\n+\t\tfinal Repositories repositories = RepositoryRequests.prepareSearch()\n+\t\t\t.all()\n+\t\t\t.build()\n+\t\t\t.execute(context);\n+\t\t\n+\t\treturn repositories.getItems()\n+\t\t\t.stream()\n+\t\t\t.filter( repository -> RepositoryInfo.Health.GREEN == repository.health() )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc1NDQ1Nw==", "bodyText": "Yes, they can be read, I'll add yellow health state as well here.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/506#discussion_r387754457", "createdAt": "2020-03-04T15:46:44Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/terminologyregistry/core/request/CodeSystemRequests.java", "diffHunk": "@@ -47,5 +57,46 @@ public static CodeSystemVersionSearchRequestBuilder prepareSearchCodeSystemVersi\n \tpublic static CodeSystemVersionCreateRequestBuilder prepareNewCodeSystemVersion() {\n \t\treturn new CodeSystemVersionCreateRequestBuilder();\n \t}\n+\n+\t/**\n+\t * Returns all {@link CodeSystemEntry}s from all repositories.\n+\t * @param context\n+\t * @return\n+\t */\n+\tpublic static List<CodeSystemEntry> getAllCodeSystems(ServiceProvider context) {\n+\t\tfinal Repositories repositories = RepositoryRequests.prepareSearch()\n+\t\t\t.all()\n+\t\t\t.build()\n+\t\t\t.execute(context);\n+\t\t\n+\t\treturn repositories.getItems()\n+\t\t\t.stream()\n+\t\t\t.filter( repository -> RepositoryInfo.Health.GREEN == repository.health() )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NzAwOQ=="}, "originalCommit": {"oid": "bafacd00c5bbe8a6884bb1ec4995d001167b0e7a"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1709, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}