{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjAwNjA5", "number": 491, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo1Njo1OVrODhdekg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxNzo0N1rODhd7HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDEyNTYyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/CompositeComponentDeletionPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo1Njo1OVrOFsM-_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo1Njo1OVrOFsM-_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NDM5OA==", "bodyText": "Probably doesn't make too much of a difference, but Predicate<RevisionDocument> occurrences could be replaced with ComponentDeletionPolicy to really drive the point home of this class being a composite of other policies.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r381894398", "createdAt": "2020-02-20T09:56:59Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/CompositeComponentDeletionPolicy.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.repository;\n+\n+import static com.google.common.collect.Maps.newHashMap;\n+\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import com.b2international.snowowl.datastore.index.RevisionDocument;\n+\n+/**\n+ * @since 7.4.0\n+ */\n+public class CompositeComponentDeletionPolicy implements ComponentDeletionPolicy {\n+\n+\tMap<Class<?>, Predicate<RevisionDocument>> deletionPolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDEzNjA1OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/CompositeComponentDeletionPolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo1OTo1NlrOFsNFcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0NDo0MlrOFsYkxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NjA1MQ==", "bodyText": "If there is no \"is the instance class same or subclass of this class\"-kind of testing needed (where you are registering multiple applicable policies, eg. for SnomedConceptDocument \u2192 SnomedComponentDocument \u2192 SnomedDocument), lookup instead of iteration would be quicker:\nif (revision == null) { return false; }\nreturn deletionPolicies.get(revision.getClass()).test(revision);", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r381896051", "createdAt": "2020-02-20T09:59:56Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/CompositeComponentDeletionPolicy.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.repository;\n+\n+import static com.google.common.collect.Maps.newHashMap;\n+\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import com.b2international.snowowl.datastore.index.RevisionDocument;\n+\n+/**\n+ * @since 7.4.0\n+ */\n+public class CompositeComponentDeletionPolicy implements ComponentDeletionPolicy {\n+\n+\tMap<Class<?>, Predicate<RevisionDocument>> deletionPolicies;\n+\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tpublic static final class Builder {\n+\n+\t\tMap<Class<?>, Predicate<RevisionDocument>> deletionPolicies = newHashMap();\n+\n+\t\tBuilder() {}\n+\n+\t\tpublic Builder withPolicy(final Class<?> clazz, final Predicate<RevisionDocument> predicate) {\n+\t\t\tthis.deletionPolicies.put(clazz, predicate);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tpublic CompositeComponentDeletionPolicy build() {\n+\t\t\treturn new CompositeComponentDeletionPolicy(this.deletionPolicies);\n+\t\t}\n+\n+\t}\n+\n+\tCompositeComponentDeletionPolicy(final Map<Class<?>, Predicate<RevisionDocument>> deletionPolicies) {\n+\t\tthis.deletionPolicies = deletionPolicies;\n+\t}\n+\n+\t@Override\n+\tpublic boolean canDelete(final RevisionDocument revision) {\n+\t\treturn deletionPolicies.entrySet().stream()\n+\t\t\t\t.filter(entry -> entry.getKey().isInstance(revision))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NDI5NQ==", "bodyText": "There is a need for those checks though, the main SNOMED deletion policy is applicable for all subtypes of SnomedDocument. I will add a fast evaluation part to the beginning of that method, that could make processing a bit faster.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r382084295", "createdAt": "2020-02-20T15:44:42Z", "author": {"login": "nagyo"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/CompositeComponentDeletionPolicy.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.repository;\n+\n+import static com.google.common.collect.Maps.newHashMap;\n+\n+import java.util.Map;\n+import java.util.function.Predicate;\n+\n+import com.b2international.snowowl.datastore.index.RevisionDocument;\n+\n+/**\n+ * @since 7.4.0\n+ */\n+public class CompositeComponentDeletionPolicy implements ComponentDeletionPolicy {\n+\n+\tMap<Class<?>, Predicate<RevisionDocument>> deletionPolicies;\n+\n+\tpublic static Builder builder() {\n+\t\treturn new Builder();\n+\t}\n+\n+\tpublic static final class Builder {\n+\n+\t\tMap<Class<?>, Predicate<RevisionDocument>> deletionPolicies = newHashMap();\n+\n+\t\tBuilder() {}\n+\n+\t\tpublic Builder withPolicy(final Class<?> clazz, final Predicate<RevisionDocument> predicate) {\n+\t\t\tthis.deletionPolicies.put(clazz, predicate);\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tpublic CompositeComponentDeletionPolicy build() {\n+\t\t\treturn new CompositeComponentDeletionPolicy(this.deletionPolicies);\n+\t\t}\n+\n+\t}\n+\n+\tCompositeComponentDeletionPolicy(final Map<Class<?>, Predicate<RevisionDocument>> deletionPolicies) {\n+\t\tthis.deletionPolicies = deletionPolicies;\n+\t}\n+\n+\t@Override\n+\tpublic boolean canDelete(final RevisionDocument revision) {\n+\t\treturn deletionPolicies.entrySet().stream()\n+\t\t\t\t.filter(entry -> entry.getKey().isInstance(revision))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NjA1MQ=="}, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDE4NjA5OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/RepositoryBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxNDowOFrOFsNj2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxNDowOFrOFsNj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMzgzNQ==", "bodyText": "compositePolicy.getDeletionPolicies().putIfAbsent(clazz, predicate);\nIt's also a bit unexpected (for me) to see a builder on CompositeComponentDeletionPolicy, suggesting that the result is immutable, then proceed to pull a writable Map out via the get method and inject extra entries. A factory method could be added to the builder that starts with an existing CompositeComponentDeletionPolicy.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r381903835", "createdAt": "2020-02-20T10:14:08Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/RepositoryBuilder.java", "diffHunk": "@@ -145,6 +145,20 @@ public Repository build(Environment env) {\n \t\t\t\tconfigurer.getAdditionalMappings().forEach(mappings::putMapping);\n \t\t\t});\n \t\t\n+\t\tif (deletionPolicy instanceof CompositeComponentDeletionPolicy) {\n+\t\t\t\n+\t\t\tCompositeComponentDeletionPolicy compositePolicy = (CompositeComponentDeletionPolicy) deletionPolicy;\n+\t\t\t\n+\t\t\trepositoryConfigurers.forEach(configurer -> {\n+\t\t\t\tconfigurer.getComponentDeletionPolicies().forEach( (clazz, predicate) -> {\n+\t\t\t\t\tif (!compositePolicy.getDeletionPolicies().containsKey(clazz)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDE5ODY5OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/TerminologyRepositoryConfigurer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxNzo0N1rOFsNr0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjowOTozNlrOFsZkbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNTg3NA==", "bodyText": "This can also be hidden entirely behind the ComponentDeletionPolicy interface:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tMap<Class<?>, Predicate<RevisionDocument>> getComponentDeletionPolicies();\n          \n          \n            \n            \tComponentDeletionPolicy getComponentDeletionPolicy();", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r381905874", "createdAt": "2020-02-20T10:17:47Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/TerminologyRepositoryConfigurer.java", "diffHunk": "@@ -32,4 +36,9 @@\n \t */\n \tCollection<Class<?>> getAdditionalMappings();\n \n+\t/**\n+\t * @return additional component deletion policies for subtypes of RevisionDocument\n+\t */\n+\tMap<Class<?>, Predicate<RevisionDocument>> getComponentDeletionPolicies();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NzI3MQ==", "bodyText": "But we need that class information to be able to select the appropriate policy for a given type, don't we?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r382087271", "createdAt": "2020-02-20T15:49:18Z", "author": {"login": "nagyo"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/TerminologyRepositoryConfigurer.java", "diffHunk": "@@ -32,4 +36,9 @@\n \t */\n \tCollection<Class<?>> getAdditionalMappings();\n \n+\t/**\n+\t * @return additional component deletion policies for subtypes of RevisionDocument\n+\t */\n+\tMap<Class<?>, Predicate<RevisionDocument>> getComponentDeletionPolicies();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNTg3NA=="}, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEwMDU4OA==", "bodyText": "My mistake; wanted to say CompositeComponentDeletionPolicy. This ties into my previous comment, this could be done if there would be a way to merge multiple composites into one, eg. via a CompositeComponentDeletionPolicy#builder(CompositeComponentDeletionPolicy) or CompositeComponentDeletionPolicy.Builder#withPolicies(CompositeComponentDeletionPolicy) method.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/491#discussion_r382100588", "createdAt": "2020-02-20T16:09:36Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/repository/TerminologyRepositoryConfigurer.java", "diffHunk": "@@ -32,4 +36,9 @@\n \t */\n \tCollection<Class<?>> getAdditionalMappings();\n \n+\t/**\n+\t * @return additional component deletion policies for subtypes of RevisionDocument\n+\t */\n+\tMap<Class<?>, Predicate<RevisionDocument>> getComponentDeletionPolicies();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNTg3NA=="}, "originalCommit": {"oid": "afd6c4cb73ea7ca8974670c1187e68b3d15c0057"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1702, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}