{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MDM5Mjg4", "number": 638, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOEYsNtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOEYsNtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MzI1Njg1OnYy", "diffSide": "RIGHT", "path": "snomed/com.b2international.snowowl.snomed.core.rest.tests/src/com/b2international/snowowl/snomed/core/rest/branches/SnomedMergeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOHBJjlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxODoyOFrOHBJjlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2NzE4OA==", "bodyText": "Does this synchronization still cause an extra revision (which is equivalent with the parent branch revision) on the child branch? If not, then it would worth adding an extra low-level check here to make sure there is no actual revision registered for parentConcept on the task2/task1 branches.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/638#discussion_r470967188", "createdAt": "2020-08-15T11:18:28Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.core.rest.tests/src/com/b2international/snowowl/snomed/core/rest/branches/SnomedMergeApiTest.java", "diffHunk": "@@ -881,5 +881,42 @@ public void mergeThenRebaseOtherTask() throws Exception {\n \t\t\n \t\tgetComponent(b, SnomedComponentType.CONCEPT, conceptB, \"relationships()\").statusCode(200).extract().as(SnomedConcept.class);\n \t}\n-\n+\t\n+\t@Test\n+\tpublic void rebaseDivergedThenMerge() throws Exception {\n+\t\tfinal IBranchPath task1 = BranchPathUtils.createPath(branchPath, \"task1\");\n+\t\tbranching.createBranch(task1).statusCode(201);\n+\t\t\n+\t\tfinal IBranchPath task2 = BranchPathUtils.createPath(branchPath, \"task2\");\n+\t\tbranching.createBranch(task2).statusCode(201);\n+\t\t\n+\t\tfinal String task1Concept = createNewConcept(task1);\n+\t\tfinal String task2Concept = createNewConcept(task2);\n+\t\tfinal String parentConcept = createNewConcept(branchPath);\n+\n+\t\t// Synchronization makes parentConcept visible on task 2\n+\t\tgetComponent(task2, SnomedComponentType.CONCEPT, parentConcept).statusCode(404);\n+\t\tmerge(branchPath, task2, \"Synchronize task 2\").body(\"status\", equalTo(Merge.Status.COMPLETED.name()));\n+\t\tgetComponent(task2, SnomedComponentType.CONCEPT, parentConcept).statusCode(200);\n+\n+\t\t// Synchronization makes parentConcept visible on task 1\n+\t\tgetComponent(task1, SnomedComponentType.CONCEPT, parentConcept).statusCode(404);\n+\t\tmerge(branchPath, task1, \"Synchronize task 1\").body(\"status\", equalTo(Merge.Status.COMPLETED.name()));\n+\t\tgetComponent(task1, SnomedComponentType.CONCEPT, parentConcept).statusCode(200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f516fbdd495ce075a6c3a764b92fd894021b3e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1654, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}