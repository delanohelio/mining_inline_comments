{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTEwNzA4", "number": 684, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1MjoxOVrOEsYBDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozOTowN1rOEt_-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTY2Mjg2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/repository/RevisionDocument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1MjoxOVrOHfm6SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1MjoxOVrOHfm6SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwNTQxNg==", "bodyText": "These are just proxies over the Expressions class static method, they do not add actual value to the RevisionDocument, please remove these and use the Expressions methods directly instead.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/684#discussion_r502905416", "createdAt": "2020-10-11T11:52:19Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/repository/RevisionDocument.java", "diffHunk": "@@ -54,6 +56,14 @@ public static Expression idPrefix(String idPrefix) {\n \t\tpublic static Expression idRegex(String idRegex) {\n \t\t\treturn regexp(Fields.ID, idRegex);\n \t\t}\n+\t\t\n+\t\tpublic static Expression anyFieldValuePresent(final String field, final String value, final int minShouldMatch) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0238116a6cedeb96a7dbb41f4e3b990990c762"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTY2NTIyOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1NTozM1rOHfm7cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1NTozM1rOHfm7cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwNTcxNQ==", "bodyText": "These new fields should be part of the options map instead. The others will be part of the options map later, but for now, please move these new fields inside the option map, you can use a new local OptionKey to access them and provide the same accessors as for the other fields.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/684#discussion_r502905715", "createdAt": "2020-10-11T11:55:33Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java", "diffHunk": "@@ -212,10 +212,15 @@ public String toString() {\n \t\n \t@Min(0)\n \tprivate int limit;\n+\t\n+\t@Min(0)\n+\tprivate int minTermMatch;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0238116a6cedeb96a7dbb41f4e3b990990c762"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTY2NjcxOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMTo1NzowMVrOHfm8Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo1OTozN1rOHf3ycQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwNTkwMg==", "bodyText": "What does the default value 0 mean? How can I ensure my search does not use this feature? What happens with existing searches that use this generic API?", "url": "https://github.com/b2ihealthcare/snow-owl/pull/684#discussion_r502905902", "createdAt": "2020-10-11T11:57:01Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestBuilder.java", "diffHunk": "@@ -42,6 +42,10 @@\n \t\n \tprivate int limit = 50;\n \t\n+\tprivate int minTermMatch = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c0238116a6cedeb96a7dbb41f4e3b990990c762"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4MTkzNw==", "bodyText": "Fixed this. To enable the new feature this parameter must be configured.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/684#discussion_r503181937", "createdAt": "2020-10-12T09:59:37Z", "author": {"login": "kovacstomi"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestBuilder.java", "diffHunk": "@@ -42,6 +42,10 @@\n \t\n \tprivate int limit = 50;\n \t\n+\tprivate int minTermMatch = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkwNTkwMg=="}, "originalCommit": {"oid": "2c0238116a6cedeb96a7dbb41f4e3b990990c762"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjY5NDgzOnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozOTowN1rOHiITFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozOTowN1rOHiITFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0OTU4OQ==", "bodyText": "Throw a BadRequestException if minTermMatch is less than or equals to 0.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/684#discussion_r505549589", "createdAt": "2020-10-15T13:39:07Z", "author": {"login": "cmark"}, "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequestBuilder.java", "diffHunk": "@@ -151,7 +147,9 @@ public final B one() {\n \t * @return this builder instance\n \t */\n \tpublic final B withMinTermMatch(int minTermMatch) {\n-\t\tthis.minTermMatch = minTermMatch;\n+\t\tif (minTermMatch > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c1f8d562a6b985427a070d88b5c0f5f327c4d3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1673, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}