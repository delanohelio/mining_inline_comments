{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3OTc4NjU1", "number": 637, "title": "SO-4219: Comparing large sets times out", "bodyText": "", "createdAt": "2020-08-14T13:16:44Z", "url": "https://github.com/b2ihealthcare/snow-owl/pull/637", "merged": true, "mergeCommit": {"oid": "29d871069f5c91231ebf5ac17709c84d158da653"}, "closed": true, "closedAt": "2020-08-18T09:48:08Z", "author": {"login": "molnarlaura"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-0Z5OAH2gAyNDY3OTc4NjU1OmNjYzU1ZWE0MDMyYzhjZDY5OTFjY2IzOGRhNDJjNmRlMWU1ODA4ODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAD37FAFqTQ2OTE2NjM0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccc55ea4032c8cd6991ccb38da42c6de1e580889", "author": {"user": {"login": "molnarlaura", "name": "Laura Alexandra Moln\u00e1r"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/ccc55ea4032c8cd6991ccb38da42c6de1e580889", "committedDate": "2020-08-14T13:12:44Z", "message": "SO-4219: enhance performance of creating mappings from reference sets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125e3ba71e5982972f566a74677bd62ce721c437", "author": {"user": {"login": "molnarlaura", "name": "Laura Alexandra Moln\u00e1r"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/125e3ba71e5982972f566a74677bd62ce721c437", "committedDate": "2020-08-14T13:14:16Z", "message": "SO-4219: change compare logic for better performance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTY0OTQz", "url": "https://github.com/b2ihealthcare/snow-owl/pull/637#pullrequestreview-467964943", "createdAt": "2020-08-15T11:11:02Z", "commit": {"oid": "125e3ba71e5982972f566a74677bd62ce721c437"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxMTowMlrOHBJhZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxMToxMTowMlrOHBJhZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2NjYzMA==", "bodyText": "Missing all() or explicit setLimit call.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/637#discussion_r470966630", "createdAt": "2020-08-15T11:11:02Z", "author": {"login": "cmark"}, "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptMapSearchRequestEvaluator.java", "diffHunk": "@@ -61,36 +62,41 @@\n \t@Override\n \tpublic ConceptMapMappings evaluate(CodeSystemURI uri, BranchContext context, Options search) {\n \t\tSnomedReferenceSetMembers referenceSetMembers = fetchRefsetMembers(uri, context, search);\n-\t\treturn toCollectionResource(referenceSetMembers, uri, context);\n+\t\treturn toCollectionResource(referenceSetMembers, uri, context, search);\n \t}\n \n-\tprivate ConceptMapMappings toCollectionResource(SnomedReferenceSetMembers referenceSetMembers, CodeSystemURI uri, BranchContext context) {\n+\tprivate ConceptMapMappings toCollectionResource(SnomedReferenceSetMembers referenceSetMembers, CodeSystemURI uri, BranchContext context, Options search) {\n+\t\tMap<String, ComponentURI> targetComponentMap = getTargetComponentMap(context, search);\n \t\tList<ConceptMapMapping> mappings = referenceSetMembers.stream()\n \t\t\t\t.filter(m -> SnomedTerminologyComponentConstants.CONCEPT_NUMBER == m.getReferencedComponent().getTerminologyComponentId())\n-\t\t\t\t.map(m -> toMapping(m, uri, getTargetComponentURI(context, m.getReferenceSetId())))\n+\t\t\t\t.map(m -> {\n+\t\t\t\t\treturn toMapping(m, uri, targetComponentMap.get(m.getReferenceSetId()));\n+\t\t\t\t})\n \t\t\t\t.collect(Collectors.toList());\n \t\t\n \t\tif (!mappings.isEmpty()) {\n-\t\t\tSet<String> targetComponentURIs = mappings.stream().map(ConceptMapMapping::getTargetComponentURI).map(ComponentURI::identifier).collect(Collectors.toSet());\n-\t\t\t\n-\t\t\tMap<String, Concept> mapTargetsById = CodeSystemRequests.prepareSearchConcepts()\n-\t\t\t\t.filterByIds(targetComponentURIs)\n-\t\t\t\t.build(mappings.stream().findFirst().get().getTargetComponentURI().codeSystemUri())\n-\t\t\t\t.execute(context.service(IEventBus.class))\n-\t\t\t\t.getSync(5, TimeUnit.MINUTES)\n-\t\t\t\t.stream()\n-\t\t\t\t.collect(Collectors.toMap(Concept::getId, c -> c));\n-\t\t\t\n-\t\t\tmappings = mappings.stream().map(mapping -> {\n-\t\t\t\tfinal String mapTarget = mapping.getTargetComponentURI().identifier();\n-\t\t\t\tif (mapTargetsById.containsKey(mapTarget)) {\n-\t\t\t\t\treturn mapping.toBuilder()\n-\t\t\t\t\t\t.targetTerm(mapTargetsById.get(mapTarget).getTerm())\n-\t\t\t\t\t\t.build();\n-\t\t\t\t} else {\n-\t\t\t\t\treturn mapping;\n-\t\t\t\t}\n-\t\t\t}).collect(Collectors.toList());\n+\t\t\tSet<String> targetIds = mappings.stream().map(ConceptMapMapping::getTargetComponentURI).map(ComponentURI::identifier).collect(Collectors.toSet());\n+\t\t\tString codeSystem = mappings.stream().findFirst().get().getTargetComponentURI().codeSystem();\n+\n+\t\t\tif (!ComponentURI.UNSPECIFIED.codeSystem().equals(codeSystem)) {\n+\t\t\t\tMap<String, Concept> mapTargetsById = CodeSystemRequests.prepareSearchConcepts()\n+\t\t\t\t\t\t.filterByIds(targetIds)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125e3ba71e5982972f566a74677bd62ce721c437"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b5bc23faa91b861e6fad569ce40c853e3908371", "author": {"user": {"login": "molnarlaura", "name": "Laura Alexandra Moln\u00e1r"}}, "url": "https://github.com/b2ihealthcare/snow-owl/commit/8b5bc23faa91b861e6fad569ce40c853e3908371", "committedDate": "2020-08-17T06:14:44Z", "message": "SO-4219: request all concepts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTY2MzQ1", "url": "https://github.com/b2ihealthcare/snow-owl/pull/637#pullrequestreview-469166345", "createdAt": "2020-08-18T09:48:02Z", "commit": {"oid": "8b5bc23faa91b861e6fad569ce40c853e3908371"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4869, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}