{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzY5OTYx", "number": 511, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjozNTowOFrODlyACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjo0MTowOFrODlyGzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTQzMTEyOnYy", "diffSide": "RIGHT", "path": "commons/com.b2international.commons/src/com/b2international/commons/options/Options.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjozNTowOFrOFy3PWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjozNTowOFrOFy3PWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3ODE2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * key.equals(k))}, then this method returns {@code v}; otherwise it returns {@code null}. (There can be at most one such mapping.)\n          \n          \n            \n            \t * key.name().equals(k))}, then this method returns {@code v}; otherwise it returns {@code null}. (There can be at most one such mapping.)", "url": "https://github.com/b2ihealthcare/snow-owl/pull/511#discussion_r388878168", "createdAt": "2020-03-06T12:35:08Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.commons/src/com/b2international/commons/options/Options.java", "diffHunk": "@@ -67,9 +67,24 @@\n \t *             if the specified key is <code>null</code>\n \t */\n \tObject get(String key);\n+\t\n+\t/**\n+\t * Returns the value to which the specified Enum key's name is mapped, or {@code null} if this map contains no mapping for the key.\n+\t *\n+\t * <p>\n+\t * More formally, if this map contains a mapping from a key {@code k} to a value {@code v} such that {@code (key==null ? k==null :\n+\t * key.equals(k))}, then this method returns {@code v}; otherwise it returns {@code null}. (There can be at most one such mapping.)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45858ba6df8d8cfb3a23a35290fc584b1b07de2e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTQ0MjQzOnYy", "diffSide": "RIGHT", "path": "commons/com.b2international.commons/src/com/b2international/commons/options/OptionsBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjozODo1NlrOFy3VwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjozODo1NlrOFy3VwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3OTgwOQ==", "bodyText": "I don't know if we ever call put twice for the same key, but null effectively removed the previous value in the method's \"before\" form, and now it doesn't.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/511#discussion_r388879809", "createdAt": "2020-03-06T12:38:56Z", "author": {"login": "apeteri"}, "path": "commons/com.b2international.commons/src/com/b2international/commons/options/OptionsBuilder.java", "diffHunk": "@@ -30,10 +30,20 @@\n \tOptionsBuilder() {}\n \t\n \tpublic OptionsBuilder put(String key, Object value) {\n-\t\toptions.put(key, value);\n+\t\tif (value != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45858ba6df8d8cfb3a23a35290fc584b1b07de2e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTQ0ODQ2OnYy", "diffSide": "RIGHT", "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjo0MTowOFrOFy3ZVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjo0MTowOFrOFy3ZVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MDcyNQ==", "bodyText": "This option key is not explained.", "url": "https://github.com/b2ihealthcare/snow-owl/pull/511#discussion_r388880725", "createdAt": "2020-03-06T12:41:08Z", "author": {"login": "apeteri"}, "path": "core/com.b2international.snowowl.datastore/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import com.b2international.commons.options.Options;\n+import com.b2international.snowowl.core.domain.BranchContext;\n+import com.b2international.snowowl.core.domain.Concept;\n+import com.b2international.snowowl.core.domain.Concepts;\n+\n+/**\n+ * @since 7.5\n+ */\n+public interface ConceptSearchRequestEvaluator {\n+\n+\tpublic enum OptionKey {\n+\n+\t\t/**\n+\t\t * Explicit ID filter to return all concepts that have any of the given IDs.\n+\t\t */\n+\t\tID,\n+\n+\t\t/**\n+\t\t * A term filter that matches concepts having a term match. The exact semantics of how a term match works depends on the given code system,\n+\t\t * but usually it supports exact, partial word and prefix matches.\n+\t\t */\n+\t\tTERM,\n+\n+\t\t/**\n+\t\t * A term filter that matches concepts having an exact term match regardless of case.\n+\t\t */\n+\t\tTERM_EXACT,\n+\n+\t\t/**\n+\t\t * A query expression defined in the target code system's query language\n+\t\t */\n+\t\tQUERY,\n+\n+\t\t/**\n+\t\t * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45858ba6df8d8cfb3a23a35290fc584b1b07de2e"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1711, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}