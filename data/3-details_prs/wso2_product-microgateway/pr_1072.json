{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODI0ODg3", "number": 1072, "title": "Provide descriptive error message when an invalid URL is provided.", "bodyText": "Purpose\nTo provide a detailed error description, when a valid URL is not present as an endpoint. This will include details like API name, version, resource (if it is resource level) and reason. (Rather than just providing the error as Malformed URL)\nIn addition to that, the servers object will only be treated as a production endpoint. (Previously, it have been treated as a sandbox endpoint as well)\nIssues\nFixes #963\nFixes #1044\nAutomation tests\n\nUnit tests added: No\nIntegration tests added: No\n\nTested environments\nOS: MacOS Mojave\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-02-29T09:24:31Z", "url": "https://github.com/wso2/product-microgateway/pull/1072", "merged": true, "mergeCommit": {"oid": "33383da924820ae9c26e4043e5efaa5d6738320d"}, "closed": true, "closedAt": "2020-03-01T05:40:57Z", "author": {"login": "VirajSalaka"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJA5rYAH2gAyMzgxODI0ODg3OmNiZGQ5NWIyNTk4ZGE2NWUzMjgyY2VjNTkxY2Y1NTJmNmE1NjNkYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJSbkKAFqTM2NjgzNjUyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cbdd95b2598da65e3282cec591cf552f6a563da5", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/cbdd95b2598da65e3282cec591cf552f6a563da5", "committedDate": "2020-02-29T09:14:24Z", "message": "Provide descriptive error message when a valid url is not present under extension or servers object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecd3a1545479a43e199a83ef7b9e30d3bf576d6b", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/ecd3a1545479a43e199a83ef7b9e30d3bf576d6b", "committedDate": "2020-02-29T09:14:55Z", "message": "ignore considering the servers object as a sandbox endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f", "committedDate": "2020-02-29T09:25:47Z", "message": "Merge branch 'master' into bug-fixes-beta"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2Nzg5MTU0", "url": "https://github.com/wso2/product-microgateway/pull/1072#pullrequestreview-366789154", "createdAt": "2020-02-29T09:52:36Z", "commit": {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwOTo1MjozN1rOFwIlkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMDowMTo1OFrOFwIncQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY1Ng==", "bodyText": "This will not look good on the bash output. output will be printed as,\nGenerating sources...\n[DONE]", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386016656", "createdAt": "2020-02-29T09:52:37Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -124,7 +124,7 @@ public void execute() {\n             }\n             String toolkitConfigPath = CmdUtils.getMainConfigLocation();\n             init(projectName, toolkitConfigPath, deploymentConfigPath);\n-            outStream.print(\"Generating sources...\");\n+            outStream.print(\"Generating sources...\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNjY4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * sets endpointUrl and isEtcdEnabled.\n          \n          \n            \n                 * Sets endpointUrl and isEtcdEnabled.", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386016683", "createdAt": "2020-02-29T09:53:23Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/mgwcodegen/MgwEndpointDTO.java", "diffHunk": "@@ -55,37 +52,25 @@ public String getEndpointUrl() {\n     }\n \n     /**\n-     * sets endpointUrl and isEtcdEnabled\n+     * sets endpointUrl and isEtcdEnabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxNzEzNw==", "bodyText": "Shouldn't we propagate e to the top? not only the message?", "url": "https://github.com/wso2/product-microgateway/pull/1072#discussion_r386017137", "createdAt": "2020-02-29T10:01:58Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaPath.java", "diffHunk": "@@ -41,51 +42,87 @@ public BallerinaPath() {\n     }\n \n     @Override\n-    public BallerinaPath buildContext(PathItem item, ExtendedAPI api) throws BallerinaServiceGenException {\n+    public BallerinaPath buildContext(PathItem item, ExtendedAPI api) throws BallerinaServiceGenException,\n+            CLICompileTimeException {\n         Map.Entry<String, BallerinaOperation> entry;\n         BallerinaOperation operation;\n \n         // Swagger PathItem object doesn't provide a iterable structure for operations\n         // Therefore we have to manually check if each http verb exists\n         if (item.getGet() != null) {\n             setServersToOperationLevel(item.getGet(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getGet(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getGet(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under GET resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"get\", operation);\n             operations.add(entry);\n         }\n         if (item.getPut() != null) {\n             setServersToOperationLevel(item.getPut(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getPut(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getPut(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under PUT resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"put\", operation);\n             operations.add(entry);\n         }\n         if (item.getPost() != null) {\n             setServersToOperationLevel(item.getPost(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getPost(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getPost(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under POST resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"post\", operation);\n             operations.add(entry);\n         }\n         if (item.getDelete() != null) {\n             setServersToOperationLevel(item.getDelete(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getDelete(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getDelete(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under DELETE resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"delete\", operation);\n             operations.add(entry);\n         }\n         if (item.getOptions() != null) {\n             setServersToOperationLevel(item.getOptions(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getOptions(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getOptions(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under OPTIONS resource.\\n\\t-\"\n+                        + e.getErrorMessage());\n+            }\n             entry = new AbstractMap.SimpleEntry<>(\"options\", operation);\n             operations.add(entry);\n         }\n         if (item.getHead() != null) {\n             setServersToOperationLevel(item.getHead(), item.getServers());\n-            operation = new BallerinaOperation().buildContext(item.getHead(), api);\n+            try {\n+                operation = new BallerinaOperation().buildContext(item.getHead(), api);\n+            } catch (CLICompileTimeException e) {\n+                throw new CLICompileTimeException(\"Error while parsing the information under HEAD resource.\\n\\t-\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cc4ee8b78eaf460374ab0be0dc2e3d849ad1d3f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/8b13b9b1338bc7afc348bf0799d3db5050254d2d", "committedDate": "2020-03-01T03:33:59Z", "message": "throw the actual error when CLICompileTime exception occurs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82c59b5081cef565abe351a7a964923609bfc731", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/82c59b5081cef565abe351a7a964923609bfc731", "committedDate": "2020-03-01T03:31:49Z", "message": "throw the actual error when CLICompileTime exception occurs"}, "afterCommit": {"oid": "8b13b9b1338bc7afc348bf0799d3db5050254d2d", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/8b13b9b1338bc7afc348bf0799d3db5050254d2d", "committedDate": "2020-03-01T03:33:59Z", "message": "throw the actual error when CLICompileTime exception occurs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b970eb250d9422a6c6ca7ff99370d4db85c55b58", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/b970eb250d9422a6c6ca7ff99370d4db85c55b58", "committedDate": "2020-03-01T03:35:10Z", "message": "Merge branch 'master' into bug-fixes-beta"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5043dff0f24b4adf3147e5a89ab88116bb68da03", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/5043dff0f24b4adf3147e5a89ab88116bb68da03", "committedDate": "2020-03-01T04:51:46Z", "message": "bug fix: add the CLICompileTimeException's exception when it is converted to CLIRuntimeException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODM2NTIx", "url": "https://github.com/wso2/product-microgateway/pull/1072#pullrequestreview-366836521", "createdAt": "2020-03-01T05:39:48Z", "commit": {"oid": "5043dff0f24b4adf3147e5a89ab88116bb68da03"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1185, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}