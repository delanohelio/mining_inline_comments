{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzA2Mzgz", "number": 1023, "title": "Multiple JWT issuers support", "bodyText": "Purpose\n\n\n\nIn mgw 3.0.2 version, JWT can be validated from a single trusted issuer.\nWith this feature we should be able to add multiple trusted jwt issuers, and micro gw will accept tokens issued by any of those trusted issuers.\n\n\nDisable mutual ssl handler if mutual ssl extension is not provided in api definition.\n\n\ncase 1 -\nx-wso2-transport:\nmutual-ssl: \"mandatory\"\nx-wso2-application-security:\noptional: true\nAuth providers : [mutualssl]\ncase 2 -\nx-wso2-transport:\nmutual-ssl: \"mandatory\"\nx-wso2-application-security:\nsecurity-types:\n\nbasic\noauth2\noptional: true\n\nAuth providers : [mutualssl, jwts,basic,opaque]\ncase 3 -\nx-wso2-transport:\nmutual-ssl: \"optional\"\nx-wso2-application-security:\nsecurity-types:\n\nbasic\noauth2\noptional: false\n\nAuth providers : [mutualssl],[jwts,basic,opaque]\ncase 4 -\nx-wso2-transport:\n// mutual-ssl: \"mandatory\"\nx-wso2-application-security:\nsecurity-types:\n\nbasic\noauth2\noptional: false\n\nAuth providers : [jwts,basic,opaque]\nIssues\n\nFixes #271\nFixes #1024\nAutomation tests\n\nUnit tests added: No\nIntegration tests added: No\n\nTested environments\n\nNot Tested\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-02-23T13:36:23Z", "url": "https://github.com/wso2/product-microgateway/pull/1023", "merged": true, "mergeCommit": {"oid": "cb3135c883550f3fc60ca40cb4e90457fd6b2cda"}, "closed": true, "closedAt": "2020-02-24T09:52:18Z", "author": {"login": "AmaliMatharaarachchi"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGeNHFAH2gAyMzc4NzA2MzgzOjY1OWUxM2UwMWZlOTgyNzExNTlmMGU3MGEzOTliODMxZjFhOGQ5OTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHacJvAFqTM2MzI2NjUzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "659e13e01fe98271159f0e70a399b831f1a8d996", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/659e13e01fe98271159f0e70a399b831f1a8d996", "committedDate": "2020-02-21T11:41:06Z", "message": "Add multiple jwt issuer handlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d23ac5ff6105fe4059456a143e39695e5def050", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/5d23ac5ff6105fe4059456a143e39695e5def050", "committedDate": "2020-02-23T13:33:53Z", "message": "Move subscription validation from filter to authn provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMTcyNzc3", "url": "https://github.com/wso2/product-microgateway/pull/1023#pullrequestreview-363172777", "createdAt": "2020-02-24T05:16:43Z", "commit": {"oid": "2b4ea2c674c472c1780f6c9e034d0a3f87918c99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNToxNjo0M1rOFtV3_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNToxNjo0M1rOFtV3_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4ODYzOQ==", "bodyText": "Change order to mutualssl, jwts, opaque, basic, apikey", "url": "https://github.com/wso2/product-microgateway/pull/1023#discussion_r383088639", "createdAt": "2020-02-24T05:16:43Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -107,26 +107,46 @@ public function initiateGatewayConfigurations(http:ListenerConfiguration config)\n     isConfigInitiated = true;\n }\n \n-public function getAuthHandlers() returns http:InboundAuthHandler[] {\n+public function getAuthHandlers(string[] appSecurity = [], boolean appSecurityOptional = false, boolean isMutualSSL = false) \n+        returns http:InboundAuthHandler[][] {\n     if (authHandlersMap.length() < 1) {\n         printDebug(KEY_GW_LISTNER, \"Initializing auth handlers\");\n         initAuthHandlers();\n     }\n-    return [authHandlersMap.get(MUTUAL_SSL_HANDLER), authHandlersMap.get(JWT_AUTH_HANDLER), authHandlersMap.get(KEY_VALIDATION_HANDLER),\n-        authHandlersMap.get(BASIC_AUTH_HANDLER), authHandlersMap.get(API_KEY_HANDLER)];\n-}\n-\n-public function getAPIAuthHandlers(boolean appSecurityOptional) returns http:InboundAuthHandler[][] {\n     if (appSecurityOptional) { \n-        return [getAuthHandlers()];\n+        if (isMutualSSL) {\n+            // add mutual ssl to the auth handlers\n+            appSecurity.push(AUTH_SCHEME_MUTUAL_SSL);\n+        }\n+        return [getHandlers(appSecurity)];\n     }\n-    if (authHandlersMap.length() < 1) {\n-        printDebug(KEY_GW_LISTNER, \"Initializing auth handlers\");\n-        initAuthHandlers();\n+    // if application security is mandatory, one of application handlers must pass. If mutual ssl enabled. it also should pass.\n+    // e.g. [mutualssl] && [jwt or basic or ...]\n+    if (isMutualSSL) {\n+        return [getHandlers([AUTH_SCHEME_MUTUAL_SSL]), getHandlers(appSecurity)];\n     }\n+    return [getHandlers(appSecurity)];\n+}\n \n-    return [[authHandlersMap.get(MUTUAL_SSL_HANDLER)], [authHandlersMap.get(JWT_AUTH_HANDLER), authHandlersMap.get(KEY_VALIDATION_HANDLER),\n-        authHandlersMap.get(BASIC_AUTH_HANDLER), authHandlersMap.get(API_KEY_HANDLER)]];\n+public function getHandlers(string[] appSecurity) returns http:InboundAuthHandler[] {\n+    http:InboundAuthHandler[] handlers = [];\n+    //enforce handler order mutualssl, opaque, basic, apikey, jwts", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b4ea2c674c472c1780f6c9e034d0a3f87918c99"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "committedDate": "2020-02-24T06:23:27Z", "message": "Fix review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b4ea2c674c472c1780f6c9e034d0a3f87918c99", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/2b4ea2c674c472c1780f6c9e034d0a3f87918c99", "committedDate": "2020-02-23T13:46:42Z", "message": "Fix review issues"}, "afterCommit": {"oid": "ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/ddbfbbcc84c7ba9dc43ce66cc0ba5bff94a461aa", "committedDate": "2020-02-24T06:23:27Z", "message": "Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "committedDate": "2020-02-24T06:43:32Z", "message": "Skip subscription validation if GRPC"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49729bab48a4803185b4f7fb88f0db67775c33c7", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/49729bab48a4803185b4f7fb88f0db67775c33c7", "committedDate": "2020-02-24T06:54:10Z", "message": "Remove auth handler in listener"}, "afterCommit": {"oid": "43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/43ba4f466ffbcb7f2fc382a9cbe8a60f22827553", "committedDate": "2020-02-24T06:43:32Z", "message": "Skip subscription validation if GRPC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7deaf6b8f31dc6f02610f7e4bddb1930c1aef3", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/8d7deaf6b8f31dc6f02610f7e4bddb1930c1aef3", "committedDate": "2020-02-24T07:12:56Z", "message": "Add code document comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3036537a72077e2480ba1b534dafbad5c7d0771a", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/3036537a72077e2480ba1b534dafbad5c7d0771a", "committedDate": "2020-02-24T09:32:14Z", "message": "Update issuer in test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMjY2NTM3", "url": "https://github.com/wso2/product-microgateway/pull/1023#pullrequestreview-363266537", "createdAt": "2020-02-24T09:51:50Z", "commit": {"oid": "3036537a72077e2480ba1b534dafbad5c7d0771a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1164, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}