{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTI2MTI1", "number": 1034, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMDo1MVrODjWIcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjo0MTo0OVrODjWQJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzg5MzYyOnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMDo1MVrOFvGkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjo0MzoyNlrOFwL79g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNDk4Mw==", "bodyText": "Why are we not copying this", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r384934983", "createdAt": "2020-02-27T06:30:51Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -135,9 +139,16 @@ public void execute() {\n             ThrottlePolicyGenerator policyGenerator = new ThrottlePolicyGenerator();\n             policyGenerator.generate(genPoliciesPath, projectName);\n \n+            // Created resources directory\n+            String resourcesPath =\n+                    CmdUtils.getProjectTargetModulePath(projectName) + File.separator + CliConstants.RESOURCES_DIR;\n+            CmdUtils.copyFolder(CmdUtils.getAPIDefinitionPath(projectName), resourcesPath);\n+            // If resources folder contains .yaml file, replace the .yaml with .json file\n+            replaceYAMLFilesToJson(resourcesPath);\n+\n             // Copy static source files\n-            CmdUtils.copyAndReplaceFolder(CmdUtils.getProjectInterceptorsPath(projectName),\n-                    CmdUtils.getProjectTargetInterceptorsPath(projectName));\n+            //CmdUtils.copyAndReplaceFolder(CmdUtils.getProjectInterceptorsPath(projectName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MTU0Mg==", "bodyText": "Fixed.", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r386071542", "createdAt": "2020-03-01T02:43:26Z", "author": {"login": "hasuniea"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -135,9 +139,16 @@ public void execute() {\n             ThrottlePolicyGenerator policyGenerator = new ThrottlePolicyGenerator();\n             policyGenerator.generate(genPoliciesPath, projectName);\n \n+            // Created resources directory\n+            String resourcesPath =\n+                    CmdUtils.getProjectTargetModulePath(projectName) + File.separator + CliConstants.RESOURCES_DIR;\n+            CmdUtils.copyFolder(CmdUtils.getAPIDefinitionPath(projectName), resourcesPath);\n+            // If resources folder contains .yaml file, replace the .yaml with .json file\n+            replaceYAMLFilesToJson(resourcesPath);\n+\n             // Copy static source files\n-            CmdUtils.copyAndReplaceFolder(CmdUtils.getProjectInterceptorsPath(projectName),\n-                    CmdUtils.getProjectTargetInterceptorsPath(projectName));\n+            //CmdUtils.copyAndReplaceFolder(CmdUtils.getProjectInterceptorsPath(projectName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNDk4Mw=="}, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzg5NTg0OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMjoyMFrOFvGlmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjo0MzozM1rOFwL7_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTMyMA==", "bodyText": "Streams are not closed properly", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r384935320", "createdAt": "2020-02-27T06:32:20Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -146,6 +157,40 @@ public void execute() {\n         }\n     }\n \n+    private String convertYamlToJson(String yaml) throws IOException {\n+        ObjectMapper yamlReader = new ObjectMapper(new YAMLFactory());\n+        Object obj = yamlReader.readValue(yaml, Object.class);\n+\n+        ObjectMapper jsonWriter = new ObjectMapper();\n+        return jsonWriter.writeValueAsString(obj);\n+    }\n+\n+    private void replaceYAMLFilesToJson(String resPath) throws IOException {\n+        String fileContent;\n+        String val = null;\n+        FileInputStream fileInputStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MTU1MA==", "bodyText": "fixed", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r386071550", "createdAt": "2020-03-01T02:43:33Z", "author": {"login": "hasuniea"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/cmd/BuildCmd.java", "diffHunk": "@@ -146,6 +157,40 @@ public void execute() {\n         }\n     }\n \n+    private String convertYamlToJson(String yaml) throws IOException {\n+        ObjectMapper yamlReader = new ObjectMapper(new YAMLFactory());\n+        Object obj = yamlReader.readValue(yaml, Object.class);\n+\n+        ObjectMapper jsonWriter = new ObjectMapper();\n+        return jsonWriter.writeValueAsString(obj);\n+    }\n+\n+    private void replaceYAMLFilesToJson(String resPath) throws IOException {\n+        String fileContent;\n+        String val = null;\n+        FileInputStream fileInputStream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTMyMA=="}, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzg5NjQ5OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/rest/ext/ExtendedAPI.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMjo0OFrOFvGmAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjo0Mzo0MFrOFwL8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTQyNw==", "bodyText": "Lets remove this from the API", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r384935427", "createdAt": "2020-02-27T06:32:48Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/rest/ext/ExtendedAPI.java", "diffHunk": "@@ -33,6 +33,8 @@\n     private String mgwApiScope = null;\n     //isGrpc\n     private boolean isGrpc = false;\n+    //projectName\n+    private  String projectName = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MTU1Mg==", "bodyText": "removed", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r386071552", "createdAt": "2020-03-01T02:43:40Z", "author": {"login": "hasuniea"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/rest/ext/ExtendedAPI.java", "diffHunk": "@@ -33,6 +33,8 @@\n     private String mgwApiScope = null;\n     //isGrpc\n     private boolean isGrpc = false;\n+    //projectName\n+    private  String projectName = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTQyNw=="}, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzkwMjEzOnYy", "diffSide": "RIGHT", "path": "tests/src/test/resources/testng.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozNToyM1rOFvGpRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjo0Mzo0OVrOFwL8BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNjI2MA==", "bodyText": "Why is this test case commented", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r384936260", "createdAt": "2020-02-27T06:35:23Z", "author": {"login": "Rajith90"}, "path": "tests/src/test/resources/testng.xml", "diffHunk": "@@ -64,7 +64,7 @@\n             <class name=\"org.wso2.micro.gateway.tests.extensions.OASAPIInvokeTestCase\"/>\n             <!--            <class name=\"org.wso2.micro.gateway.tests.security.CookieAuthTestCase\"/>-->\n             <!--            <class name=\"org.wso2.micro.gateway.tests.validation.ValidationTestCase\"/>-->\n-            <class name=\"org.wso2.micro.gateway.tests.interceptor.InterceptorTestCase\"/>\n+<!--            <class name=\"org.wso2.micro.gateway.tests.interceptor.InterceptorTestCase\"/>-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MTU1Ng==", "bodyText": "fixed", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r386071556", "createdAt": "2020-03-01T02:43:49Z", "author": {"login": "hasuniea"}, "path": "tests/src/test/resources/testng.xml", "diffHunk": "@@ -64,7 +64,7 @@\n             <class name=\"org.wso2.micro.gateway.tests.extensions.OASAPIInvokeTestCase\"/>\n             <!--            <class name=\"org.wso2.micro.gateway.tests.security.CookieAuthTestCase\"/>-->\n             <!--            <class name=\"org.wso2.micro.gateway.tests.validation.ValidationTestCase\"/>-->\n-            <class name=\"org.wso2.micro.gateway.tests.interceptor.InterceptorTestCase\"/>\n+<!--            <class name=\"org.wso2.micro.gateway.tests.interceptor.InterceptorTestCase\"/>-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNjI2MA=="}, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzkxMzM1OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjo0MTo0OVrOFvGwEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMjo0Mzo1NlrOFwL8CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzODAwMw==", "bodyText": "I think we can save the open APIs at the java side", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r384938003", "createdAt": "2020-02-27T06:41:49Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -40,6 +40,8 @@ map<FilterConfiguration?> filterConfigAnnotationMap = {};\n map<http:InboundAuthHandler> authHandlersMap = {}; //all handlers except for jwt handlers\n http:InboundAuthHandler[] jwtHandlers = [];//all jwt issuer handlers\n string authHeaderFromConfig = getConfigValue(AUTH_CONF_INSTANCE_ID, AUTH_HEADER_NAME, DEFAULT_AUTH_HEADER_NAME);\n+map<string> openAPIs = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3MTU2MA==", "bodyText": "fixed", "url": "https://github.com/wso2/product-microgateway/pull/1034#discussion_r386071560", "createdAt": "2020-03-01T02:43:56Z", "author": {"login": "hasuniea"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -40,6 +40,8 @@ map<FilterConfiguration?> filterConfigAnnotationMap = {};\n map<http:InboundAuthHandler> authHandlersMap = {}; //all handlers except for jwt handlers\n http:InboundAuthHandler[] jwtHandlers = [];//all jwt issuer handlers\n string authHeaderFromConfig = getConfigValue(AUTH_CONF_INSTANCE_ID, AUTH_HEADER_NAME, DEFAULT_AUTH_HEADER_NAME);\n+map<string> openAPIs = {};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzODAwMw=="}, "originalCommit": {"oid": "19b842948040c90bfe6b9929c09d54a467f58979"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1300, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}