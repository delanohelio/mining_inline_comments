{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDIxNTY4", "number": 939, "title": "Fix issues with the distributed throttling feature", "bodyText": "Purpose\n\nFixes the issues related to distributed throttling features\n\nIssues\n\nFixes #938\nAutomation tests\n\nUnit tests added: No\nIntegration tests added: Yes\n\nTested environments\nOS : MacOS Mojave\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-01-17T08:15:12Z", "url": "https://github.com/wso2/product-microgateway/pull/939", "merged": true, "mergeCommit": {"oid": "36c7521da3b27a2a3f8d72eb9a8b8f4ca7f461ba"}, "closed": true, "closedAt": "2020-01-22T08:24:38Z", "author": {"login": "VirajSalaka"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7HnDPgH2gAyMzY0MDIxNTY4OmFjZTg0M2UwZWQzYjI5M2ZiMmVmZDdiODI1MmJjMjkwYzllZTFhMWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8xYUpAFqTM0NjQwNzkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ace843e0ed3b293fb2efd7b8252bc290c9ee1a1c", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/ace843e0ed3b293fb2efd7b8252bc290c9ee1a1c", "committedDate": "2020-01-17T05:08:27Z", "message": "remove ballerina.toml from microgateway runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52120bede3f2ff177543e03bbd72c396e5886dc4", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/52120bede3f2ff177543e03bbd72c396e5886dc4", "committedDate": "2020-01-17T07:21:07Z", "message": "fix Distributed Throttling Implementation issues occured due to 1.1.0 upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/c1946cf2d80f33d08487cf40e694bdd9741af51f", "committedDate": "2020-01-17T07:22:07Z", "message": "Extend test case to check the throttling after expiration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d7358632b5757248974e911bca6b4dd846d66b", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/a4d7358632b5757248974e911bca6b4dd846d66b", "committedDate": "2020-01-17T07:23:09Z", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into dThrottleFix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIwMDIz", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344420023", "createdAt": "2020-01-17T08:20:19Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMDoxOVrOFexnRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMDoxOVrOFexnRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDQ2OA==", "bodyText": "Lets log the error as well", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814468", "createdAt": "2020-01-17T08:20:19Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIwMTM4", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344420138", "createdAt": "2020-01-17T08:20:37Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMDozN1rOFexniw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMDozN1rOFexniw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDUzOQ==", "bodyText": "Lets log the error as well", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814539", "createdAt": "2020-01-17T08:20:37Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIwMzA1", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344420305", "createdAt": "2020-01-17T08:20:59Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMTowMFrOFexoFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMTowMFrOFexoFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDY3Ng==", "bodyText": "Lets log the error as well", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814676", "createdAt": "2020-01-17T08:21:00Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIwNjYw", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344420660", "createdAt": "2020-01-17T08:21:49Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMTo0OVrOFexpGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMTo0OVrOFexpGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNDkzNw==", "bodyText": "Is it correct to log this as debug level rather than the error", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367814937", "createdAt": "2020-01-17T08:21:49Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");\n+        } else {\n+            var attachResult = subscriberEndpoint.__attach(messageServ);\n+            if (attachResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIwNzc0", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344420774", "createdAt": "2020-01-17T08:22:06Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMjowNlrOFexpbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMjowNlrOFexpbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTAyMg==", "bodyText": "Lets log the error as well", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367815022", "createdAt": "2020-01-17T08:22:06Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -70,25 +67,42 @@ service messageServ = service {\n # + return - jms:TopicSubscriber for global throttling event publishing\n public function startSubscriberService() returns @tainted jms:MessageConsumer | error {\n     // Initialize a JMS connection  with the provider.\n-    jms:Connection connection = check jms:createConnection({\n+    jms:Connection | error connection = trap jms:createConnection({\n         initialContextFactory: jmsConnectionInitialContextFactory,\n         providerUrl: jmsConnectionProviderUrl,\n         username: jmsConnectionUsername,\n         password: jmsConnectionPassword\n \n     });\n-    jms:Session session = check connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n-    jms:Destination dest = check session->createTopic(\"throttleData\");\n-    jms:MessageConsumer subscriberEndpoint = check session->createDurableSubscriber(dest, \"sub-1\");\n-    var attachResult = subscriberEndpoint.__attach(messageServ);\n-    if (attachResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n-    }\n-    var startResult = subscriberEndpoint.__start();\n-    if (startResult is error) {\n-        printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");\n+    if (connection is error) {\n+        printError(KEY_THROTTLE_UTIL, \"Error while creating the jms connection.\");\n+        return connection;\n+    } else {\n+        jms:Session | error session = trap connection->createSession({acknowledgementMode: \"AUTO_ACKNOWLEDGE\"});\n+        if (session is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms session.\");\n+            return session;\n+        } else {\n+        jms:Destination dest = check session->createTopic(\"throttleData\");\n+        jms:MessageConsumer | error subscriberEndpoint = trap session->createDurableSubscriber(dest, \"sub-1\");\n+        if (subscriberEndpoint is error) {\n+            printError(KEY_THROTTLE_UTIL, \"Error while creating the jms subscriber.\");\n+        } else {\n+            var attachResult = subscriberEndpoint.__attach(messageServ);\n+            if (attachResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Message consumer hasn't been attached to the service.\");\n+                return attachResult;\n+            }\n+            var startResult = subscriberEndpoint.__start();\n+            if (startResult is error) {\n+                printDebug(KEY_THROTTLE_UTIL, \"Starting the task is failed.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIyMTg0", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344422184", "createdAt": "2020-01-17T08:25:31Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyNTozMVrOFextrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyNTozMVrOFextrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjEwOQ==", "bodyText": "Lets change this as  MGW-TK_HOME", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367816109", "createdAt": "2020-01-17T08:25:31Z", "author": {"login": "Rajith90"}, "path": "distribution/resources/conf/Ballerina.toml", "diffHunk": "@@ -6,6 +6,20 @@ version= \"3.1.0\"\n [platform]\n target = \"java8\"\n \n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/andes-client-3.3.9.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDIyMzA0", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344422304", "createdAt": "2020-01-17T08:25:46Z", "commit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyNTo0NlrOFexuCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyNTo0NlrOFexuCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNjIwMA==", "bodyText": "Lets change this as MGW-TK_HOME", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367816200", "createdAt": "2020-01-17T08:25:46Z", "author": {"login": "Rajith90"}, "path": "distribution/resources/conf/Ballerina.toml", "diffHunk": "@@ -6,6 +6,20 @@ version= \"3.1.0\"\n [platform]\n target = \"java8\"\n \n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/andes-client-3.3.9.jar\"\n+        artifactId = \"andes-client\"\n+        version = \"3.3.9\"\n+        groupId = \"org.wso2.andes.wso2\"\n+\n+        [[platform.libraries]]\n+        module = \"jms\"\n+        path = \"${MICROGW_HOME}/lib/dependencies/org.wso2.securevault-1.1.1.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1946cf2d80f33d08487cf40e694bdd9741af51f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDI0MDQ5", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-344424049", "createdAt": "2020-01-17T08:29:22Z", "commit": {"oid": "9a4d023b0f82fbf50f54123478da837a6041eee5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyOToyMlrOFexzew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyOToyMlrOFexzew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNzU5NQ==", "bodyText": "Better to add new line at the EOF", "url": "https://github.com/wso2/product-microgateway/pull/939#discussion_r367817595", "createdAt": "2020-01-17T08:29:22Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/Ballerina.toml", "diffHunk": "@@ -9,4 +9,4 @@ target = \"java8\"\n     path = \"../../../target/org.wso2.micro.gateway.core-3.1.0-SNAPSHOT.jar\"\n \n [dependencies]\n-\"wso2/jms\" = \"0.6.3\"\n\\ No newline at end of file\n+\"wso2/jms\" = \"0.7.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a4d023b0f82fbf50f54123478da837a6041eee5"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "committedDate": "2020-01-17T09:54:23Z", "message": "log Full Error Message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a4d023b0f82fbf50f54123478da837a6041eee5", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/9a4d023b0f82fbf50f54123478da837a6041eee5", "committedDate": "2020-01-17T08:23:14Z", "message": "Merge branch 'master' into dThrottleFix"}, "afterCommit": {"oid": "ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/ca383ba5c1f48a4101bbf135d8f77449fb77c7a2", "committedDate": "2020-01-17T09:54:23Z", "message": "log Full Error Message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf45068358e281152bcabdbd91db90a8a9fd9a94", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/bf45068358e281152bcabdbd91db90a8a9fd9a94", "committedDate": "2020-01-17T09:58:28Z", "message": "add new line to the EOF toml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6beef3c167e26f696e9cf8c19363d46936bdbe2", "author": {"user": {"login": "VirajSalaka", "name": "Viraj Salaka"}}, "url": "https://github.com/wso2/product-microgateway/commit/b6beef3c167e26f696e9cf8c19363d46936bdbe2", "committedDate": "2020-01-20T05:11:33Z", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into dThrottleFix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NDA3OTAz", "url": "https://github.com/wso2/product-microgateway/pull/939#pullrequestreview-346407903", "createdAt": "2020-01-22T08:22:18Z", "commit": {"oid": "b6beef3c167e26f696e9cf8c19363d46936bdbe2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1232, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}