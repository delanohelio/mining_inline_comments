{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5Mzg0NDc4", "number": 1236, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyMjo0MVrOFUXQJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyNTo0NVrOFUXSRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2ODk2ODA2OnYy", "diffSide": "RIGHT", "path": "internal/pkg/oasparser/config/config.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyMjo0MVrOIcVrXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNDoyNzo1MlrOIfE7wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjIwNA==", "bodyText": "Formatting issue. Shall we fix this?", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r566586204", "createdAt": "2021-01-29T05:22:41Z", "author": {"login": "dinusha92"}, "path": "internal/pkg/oasparser/config/config.go", "diffHunk": "@@ -16,9 +16,12 @@\n  */\n package config\n \n+import \"time\"\n+\n const (\n-\tLISTENER_ADDRESS   string = \"0.0.0.0\"\n-\tLISTENER_PORT      uint32 = 10000\n-\tAPI_PORT           uint32 = 8080\n-\tMANAGER_STATPREFIX string = \"ingress_http\"\n+\tLISTENER_ADDRESS  string = \"0.0.0.0\"\n+\tLISTENER_PORT     uint32 = 10000\n+\tAPI_DEFAULT_PORT   uint32 = 8080\n+\tMANAGER_STATPREFIX    string = \"ingress_http\"\n+\tCLUSTER_CONNECT_TIMEOUT    = 5 * time.Second", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTQ1NzYwMA==", "bodyText": "This is changed in the repo", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r569457600", "createdAt": "2021-02-03T14:27:52Z", "author": {"login": "chashikajw"}, "path": "internal/pkg/oasparser/config/config.go", "diffHunk": "@@ -16,9 +16,12 @@\n  */\n package config\n \n+import \"time\"\n+\n const (\n-\tLISTENER_ADDRESS   string = \"0.0.0.0\"\n-\tLISTENER_PORT      uint32 = 10000\n-\tAPI_PORT           uint32 = 8080\n-\tMANAGER_STATPREFIX string = \"ingress_http\"\n+\tLISTENER_ADDRESS  string = \"0.0.0.0\"\n+\tLISTENER_PORT     uint32 = 10000\n+\tAPI_DEFAULT_PORT   uint32 = 8080\n+\tMANAGER_STATPREFIX    string = \"ingress_http\"\n+\tCLUSTER_CONNECT_TIMEOUT    = 5 * time.Second", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjIwNA=="}, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2ODk3MDUxOnYy", "diffSide": "RIGHT", "path": "internal/pkg/oasparser/constants/openApiConstants.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyNDoxMlrOIcVsyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNDoyODozOFrOIfE-Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjU2OA==", "bodyText": "Formatting issue.", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r566586568", "createdAt": "2021-01-29T05:24:12Z", "author": {"login": "dinusha92"}, "path": "internal/pkg/oasparser/constants/openApiConstants.go", "diffHunk": "@@ -16,5 +16,8 @@\n  */\n package constants\n \n-const PRODUCTION_ENDPOINTS string = \"x-wso2-production-endpoints\"\n-const SANDBOX_ENDPOINTS string = \"x-wso2-sandbox-endpoints\"\n+const (\n+\tPRODUCTION_ENDPOINTS string = \"x-wso2-production-endpoints\"\n+\tSANDBOX_ENDPOINTS string = \"x-wso2-sandbox-endpoints\"\n+)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTQ1ODI2Ng==", "bodyText": "This is already fixed", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r569458266", "createdAt": "2021-02-03T14:28:38Z", "author": {"login": "chashikajw"}, "path": "internal/pkg/oasparser/constants/openApiConstants.go", "diffHunk": "@@ -16,5 +16,8 @@\n  */\n package constants\n \n-const PRODUCTION_ENDPOINTS string = \"x-wso2-production-endpoints\"\n-const SANDBOX_ENDPOINTS string = \"x-wso2-sandbox-endpoints\"\n+const (\n+\tPRODUCTION_ENDPOINTS string = \"x-wso2-production-endpoints\"\n+\tSANDBOX_ENDPOINTS string = \"x-wso2-sandbox-endpoints\"\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjU2OA=="}, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2ODk3MjI2OnYy", "diffSide": "RIGHT", "path": "internal/pkg/oasparser/envoyCodegen/routesWithClusters.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyNToxMlrOIcVtyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNDoyOToxNVrOIfFAUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjgyNQ==", "bodyText": "What is the purpose of the commented code. If there's a reason shall we mention that in a comment? If not, let's remove this :)", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r566586825", "createdAt": "2021-01-29T05:25:12Z", "author": {"login": "dinusha92"}, "path": "internal/pkg/oasparser/envoyCodegen/routesWithClusters.go", "diffHunk": "@@ -173,47 +166,104 @@ func createCluster(address core.Address, clusterName string) v2.Cluster {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n-\t\t//Hosts:                []*core.Address{h},\n \t}\n-\n+\t//fmt.Println(h.GetAddress())\n \treturn cluster\n }\n \n-func createRoute(HostUrl string, resourcePath string, clusterName string) v2route.Route {\n-\t//var targetRegex = \"/\"\n-\troute := v2route.Route{\n-\t\tMatch: &v2route.RouteMatch{\n-\t\t\tPathSpecifier: &v2route.RouteMatch_SafeRegex{\n-\t\t\t\tSafeRegex: &envoy_type_matcher.RegexMatcher{\n-\t\t\t\t\tEngineType: &envoy_type_matcher.RegexMatcher_GoogleRe2{\n-\t\t\t\t\t\tGoogleRe2: &envoy_type_matcher.RegexMatcher_GoogleRE2{\n-\t\t\t\t\t\t\tMaxProgramSize: nil,\n+func createRoute(HostUrl string, basepath string, resourcePath string, clusterName string) v2route.Route {\n+\tvar fullPath = basepath + resourcePath\n+\tvar route v2route.Route\n+\n+\troutepath, isHavingPathparameter := GenerateRegex(fullPath)\n+\n+\tRouteAction := &v2route.Route_Route{\n+\t\tRoute: &v2route.RouteAction{\n+\t\t\tHostRewriteSpecifier: &v2route.RouteAction_HostRewrite{\n+\t\t\t\tHostRewrite: HostUrl,\n+\t\t\t},\n+\t\t\tClusterSpecifier: &v2route.RouteAction_Cluster{\n+\t\t\t\tCluster: clusterName,\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tif isHavingPathparameter {\n+\t\troute = v2route.Route{\n+\t\t\tMatch: &v2route.RouteMatch{\n+\t\t\t\tPathSpecifier: &v2route.RouteMatch_SafeRegex{\n+\t\t\t\t\tSafeRegex: &envoy_type_matcher.RegexMatcher{\n+\t\t\t\t\t\tEngineType: &envoy_type_matcher.RegexMatcher_GoogleRe2{\n+\t\t\t\t\t\t\tGoogleRe2: &envoy_type_matcher.RegexMatcher_GoogleRE2{\n+\t\t\t\t\t\t\t\tMaxProgramSize: nil,\n+\t\t\t\t\t\t\t},\n \t\t\t\t\t\t},\n+\t\t\t\t\t\tRegex: routepath,\n \t\t\t\t\t},\n-\t\t\t\t\tRegex: resourcePath,\n \t\t\t\t},\n+\t\t\t\t/*Headers: []*v2route.HeaderMatcher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 268}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTQ1ODc3MQ==", "bodyText": "This is already removed", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r569458771", "createdAt": "2021-02-03T14:29:15Z", "author": {"login": "chashikajw"}, "path": "internal/pkg/oasparser/envoyCodegen/routesWithClusters.go", "diffHunk": "@@ -173,47 +166,104 @@ func createCluster(address core.Address, clusterName string) v2.Cluster {\n \t\t\t\t},\n \t\t\t},\n \t\t},\n-\t\t//Hosts:                []*core.Address{h},\n \t}\n-\n+\t//fmt.Println(h.GetAddress())\n \treturn cluster\n }\n \n-func createRoute(HostUrl string, resourcePath string, clusterName string) v2route.Route {\n-\t//var targetRegex = \"/\"\n-\troute := v2route.Route{\n-\t\tMatch: &v2route.RouteMatch{\n-\t\t\tPathSpecifier: &v2route.RouteMatch_SafeRegex{\n-\t\t\t\tSafeRegex: &envoy_type_matcher.RegexMatcher{\n-\t\t\t\t\tEngineType: &envoy_type_matcher.RegexMatcher_GoogleRe2{\n-\t\t\t\t\t\tGoogleRe2: &envoy_type_matcher.RegexMatcher_GoogleRE2{\n-\t\t\t\t\t\t\tMaxProgramSize: nil,\n+func createRoute(HostUrl string, basepath string, resourcePath string, clusterName string) v2route.Route {\n+\tvar fullPath = basepath + resourcePath\n+\tvar route v2route.Route\n+\n+\troutepath, isHavingPathparameter := GenerateRegex(fullPath)\n+\n+\tRouteAction := &v2route.Route_Route{\n+\t\tRoute: &v2route.RouteAction{\n+\t\t\tHostRewriteSpecifier: &v2route.RouteAction_HostRewrite{\n+\t\t\t\tHostRewrite: HostUrl,\n+\t\t\t},\n+\t\t\tClusterSpecifier: &v2route.RouteAction_Cluster{\n+\t\t\t\tCluster: clusterName,\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tif isHavingPathparameter {\n+\t\troute = v2route.Route{\n+\t\t\tMatch: &v2route.RouteMatch{\n+\t\t\t\tPathSpecifier: &v2route.RouteMatch_SafeRegex{\n+\t\t\t\t\tSafeRegex: &envoy_type_matcher.RegexMatcher{\n+\t\t\t\t\t\tEngineType: &envoy_type_matcher.RegexMatcher_GoogleRe2{\n+\t\t\t\t\t\t\tGoogleRe2: &envoy_type_matcher.RegexMatcher_GoogleRE2{\n+\t\t\t\t\t\t\t\tMaxProgramSize: nil,\n+\t\t\t\t\t\t\t},\n \t\t\t\t\t\t},\n+\t\t\t\t\t\tRegex: routepath,\n \t\t\t\t\t},\n-\t\t\t\t\tRegex: resourcePath,\n \t\t\t\t},\n+\t\t\t\t/*Headers: []*v2route.HeaderMatcher {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4NjgyNQ=="}, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 268}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2ODk3MzQ5OnYy", "diffSide": "RIGHT", "path": "internal/pkg/oasparser/models/apiDefinition/mgwResource.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNToyNTo0NVrOIcVuaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNDoyOTo1M1rOIfFCMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4Njk4Nw==", "bodyText": "License header missing.", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r566586987", "createdAt": "2021-01-29T05:25:45Z", "author": {"login": "dinusha92"}, "path": "internal/pkg/oasparser/models/apiDefinition/mgwResource.go", "diffHunk": "@@ -0,0 +1,33 @@\n+package apiDefinition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTQ1OTI0OQ==", "bodyText": "This is already added", "url": "https://github.com/wso2/product-microgateway/pull/1236#discussion_r569459249", "createdAt": "2021-02-03T14:29:53Z", "author": {"login": "chashikajw"}, "path": "internal/pkg/oasparser/models/apiDefinition/mgwResource.go", "diffHunk": "@@ -0,0 +1,33 @@\n+package apiDefinition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU4Njk4Nw=="}, "originalCommit": {"oid": "09996bf47763259498b9474472ce8b1be69448f0"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1220, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}