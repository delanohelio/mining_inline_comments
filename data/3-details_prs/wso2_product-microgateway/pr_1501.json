{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4Mzg0MjAz", "number": 1501, "title": "Adding kubernetes artifacts related to Envoy microgateway", "bodyText": "Purpose\n\nThis PR includes the kubernetes artifacts related to envoy microgateway.\n\nApproach\n\nk8s_configmaps.yaml includes the configmaps and secrets that needed to be mounted for adapter, router and enforcer components.\nk8s_deployments.yaml includes the deployments for adapter, router and enforcer components.\nk8s_services.yaml includes the services needed to be exposed for adapter, router and enforcer components. Adapter and Router is NodePort type and enforcer is ClusterIP type.", "createdAt": "2020-11-27T04:18:00Z", "url": "https://github.com/wso2/product-microgateway/pull/1501", "merged": true, "mergeCommit": {"oid": "e35ae37f4141888a04d08bb6adf144e19eea25ba"}, "closed": true, "closedAt": "2021-01-05T06:29:37Z", "author": {"login": "Jayanie"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgf9FDgFqTUzOTcwMjI0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxOMl8gFqTU3MDE1MDkzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NzAyMjQx", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-539702241", "createdAt": "2020-11-27T04:30:21Z", "commit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwNDozMDoyMVrOH6wrXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwNDozNjoxNlrOH6wwSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3Njk4OQ==", "bodyText": "Lets add license headers.", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r531376989", "createdAt": "2020-11-27T04:30:21Z", "author": {"login": "pubudu538"}, "path": "k8s-artifacts/k8s_configmaps.yaml", "diffHunk": "@@ -0,0 +1,259 @@\n+# config maps to be mounted for deployments in wso2 Envoy micro gateway", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3NzU4NQ==", "bodyText": "We need to have separate files for each configmap, deployment service.\nStructure is like this..\nK8s-artifacts/mg-router/deployment.yaml\n/service.yaml\n/configmap.yaml\nWe need a similar folder structure here.", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r531377585", "createdAt": "2020-11-27T04:33:11Z", "author": {"login": "pubudu538"}, "path": "k8s-artifacts/k8s_configmaps.yaml", "diffHunk": "@@ -0,0 +1,259 @@\n+# config maps to be mounted for deployments in wso2 Envoy micro gateway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3Njk4OQ=="}, "originalCommit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3NzgxMg==", "bodyText": "Configmaps can be named as config-toml-confimap.yaml, log4j-configmap.yaml", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r531377812", "createdAt": "2020-11-27T04:34:16Z", "author": {"login": "pubudu538"}, "path": "k8s-artifacts/k8s_configmaps.yaml", "diffHunk": "@@ -0,0 +1,259 @@\n+# config maps to be mounted for deployments in wso2 Envoy micro gateway", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3Njk4OQ=="}, "originalCommit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3ODExNw==", "bodyText": "Lets called these deployments as mg-adapter, mg-enforcer, mg-router. I think we can keep service as it is as we need to match these with docker compose artifacts.", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r531378117", "createdAt": "2020-11-27T04:35:38Z", "author": {"login": "pubudu538"}, "path": "k8s-artifacts/k8s_deployments.yaml", "diffHunk": "@@ -0,0 +1,103 @@\n+# Deployments for Adapter, router and enforcer\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: adapter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM3ODI0OA==", "bodyText": "We need to add liveness, readiness probes here. Applies to all the deployments.", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r531378248", "createdAt": "2020-11-27T04:36:16Z", "author": {"login": "pubudu538"}, "path": "k8s-artifacts/k8s_deployments.yaml", "diffHunk": "@@ -0,0 +1,103 @@\n+# Deployments for Adapter, router and enforcer\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: adapter\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: adapter\n+  template:\n+    metadata:\n+      labels:\n+        app: adapter\n+    spec:\n+      containers:\n+        - name: adapter\n+          volumeMounts:\n+            - mountPath: /home/wso2/security\n+              name: adapter-security-vol\n+            - mountPath: /home/wso2/conf\n+              name: adapter-conf-vol\n+          image: wso2/mg-adapter:4.0.0-m1\n+          ports:\n+            - containerPort: 18000\n+            - containerPort: 9843\n+      volumes:\n+        - name: adapter-security-vol\n+          configMap:\n+            name: adapter-security\n+        - name: adapter-conf-vol\n+          configMap:\n+            name: conf\n+      restartPolicy: Always", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1525d1c8327ca4aa5d492c069a01490f574d06bf"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc1OTg2", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544675986", "createdAt": "2020-12-04T05:57:43Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo1Nzo0M1rOH_CBfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo1Nzo0M1rOH_CBfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NTQ4Ng==", "bodyText": "Lets merge these 3", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535855486", "createdAt": "2020-12-04T05:57:43Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/K8S-README.md", "diffHunk": "@@ -0,0 +1,240 @@\n+# WSO2 API Microgateway deployment in Kubernetes\n+\n+There are two modes when deploying Microgateway in Kubernetes.\n+   - Deployment without WSO2 API operator for kubernetes\n+   - Deployment with WSO2 API operator for kubernetes\n+\n+When deploying the Microgateway in kubernetes there are 3 pods for the components as follows.\n+   - mg-router\n+   - mg-adapter\n+   - mg-enforcer\n+   \n+Router and Adapter services are exposed as NodePort type in kubernetes. Enforcer service is exposed as ClusterIP type.\n+\n+## Microgateway quick start\n+\n+*Prerequisites*\n+- [Kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n+\n+- [Kubernetes v1.14 or above](https://Kubernetes.io/docs/setup/) <br>\n+\n+    - Minimum CPU : 6vCPU\n+    - Minimum Memory : 6GB\n+    \n+### Deployment without WSO2 API Operator for kubernetes\n+\n+Let's host our first API on a Microgateway in kubernetes. We will be exposing the publicly available [petstore services](https://petstore.swagger.io/) via  microgateway in kubernetes\n+\n+1. First download the CLI tool(APICTL) and the microgateway distribution from the  \n+[github release page](https://github.com/wso2/product-microgateway/releases)\n+and extract them to a folder of your choice.\n+  * [CLI (APICTL)](https://github.com/wso2/product-microgateway/releases)\n+  * [Microgateway Distribution](https://github.com/wso2/product-microgateway/releases)\n+ \n+  \n+CLI tool extracted location will be referred as `CLI_HOME` and Microgateway distribution extracted location would be \n+referred as `MG_HOME`.\n+\n+2. Using your command line client tool add the 'CLI_HOME' folder to your PATH variable.\n+```\n+export PATH=$PATH:<CLI_HOME>\n+```\n+3. Let's deploy the microgateway in kubernetes.\n+  - In kubernetes artifacts there are 3 separate folders for each component.\n+  - In each folder config maps, deployment and service are included.\n+  - You can use the following commands to deploy each microgateway component in kubernetes.\n+  ```\n+  kubectl apply -f mg-adapter/\n+  kubectl apply -f mg-enforcer/\n+  kubectl apply -f mg-router/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc2MDg1", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544676085", "createdAt": "2020-12-04T05:57:56Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo1Nzo1N1rOH_CB2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowMTozM1rOH_CGgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NTU3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                -----END CERTIFICATE-----\n          \n          \n            \n                -----END CERTIFICATE-----", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535855579", "createdAt": "2020-12-04T05:57:57Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-adapter/adapter-pem-configmap.yaml", "diffHunk": "@@ -0,0 +1,47 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the certificate for adapter\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: adapter-pem-configmap\n+data:\n+  localhost.pem: |\n+    -----BEGIN CERTIFICATE-----\n+    MIIDxTCCAq2gAwIBAgIUDo1uBJOYP7iLms9ZxVCF1CRubWQwDQYJKoZIhvcNAQEL\n+    BQAwcjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRYwFAYDVQQHDA1Nb3VudGFp\n+    biBWaWV3MQ0wCwYDVQQKDARXU08yMQ0wCwYDVQQLDARXU08yMSAwHgYDVQQDDBdh\n+    ZGFwdGVyLXNlcnZpY2UuZGVmYXVsdDAeFw0yMDExMjQxMzI0NTVaFw0yMzAyMDIx\n+    MzI0NTVaMHIxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEWMBQGA1UEBwwNTW91\n+    bnRhaW4gVmlldzENMAsGA1UECgwEV1NPMjENMAsGA1UECwwEV1NPMjEgMB4GA1UE\n+    AwwXYWRhcHRlci1zZXJ2aWNlLmRlZmF1bHQwggEiMA0GCSqGSIb3DQEBAQUAA4IB\n+    DwAwggEKAoIBAQCdt2OxUhfhqcesD+qNSEx15HQTltSD6geRmEP0MMBubcjGvmzR\n+    oy7fW+tPuyZYbGC4f4EHdOG0fkAY+HA+nzoTWaSA6oayUOg9Fmyh03G7ADnyJDCH\n+    uh1mMQzGvBU/hkNzkjgCpsBhYVigx4aPLOHRfGJI6LkP1kVmdnGYDlDduA2E02Bq\n+    jac7A76W9aje0iThdApOYa/6T4Pj57nr2BvW6KaOkLNQ/f9cvn55m5Emh/CHHLU1\n+    TY9SMKleU3egsy0cKgU/6/IqEZ0kTPEh7qNMhh6GkQl1iT7BM0bejZ9b9U1/kU2h\n+    FKoEDcQGkqR9HAZH1iF53J63E0/0wdOpko4XAgMBAAGjUzBRMB0GA1UdDgQWBBSg\n+    ySi1zWnzS9prHjvNgTDuGkULFTAfBgNVHSMEGDAWgBSgySi1zWnzS9prHjvNgTDu\n+    GkULFTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQB3e+orLj21\n+    Lb2WO0kWl5WWQyhvVgHGTf/K4IkTsc7kZs4LwMZPaisuHeSBIFVn3DTSBdZhrzQC\n+    A0BKWJr6qjLdUnXlhSYk1mhS8n37SYrUpXJI4lSBZltl0vlbOVYn1L5IDqdB1Gc+\n+    xjahW3HssO4hVE7OkK7tVebeVtu2F3OfaLimg4gmhUTHMvZEULidQAjW2dqI0W4P\n+    zTZbcv1q4cFgNZUOPnHoY35Ri0Hb6SngCtFWOCYP8svdtuhWBydWm6ly0MD8FqU9\n+    RMb+Ce+ptFTvPQfOJ4n8qMJTNp0hbw9yMRxiZXWlT36FQ8iNwULtQXpRSVZzc84+\n+    U///8FziQ713\n+    -----END CERTIFICATE-----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NTk0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  restartPolicy: Always\n          \n          \n            \n                  restartPolicy: Always", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535855946", "createdAt": "2020-12-04T05:59:08Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-adapter/deployment.yaml", "diffHunk": "@@ -0,0 +1,81 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Deployment for Adapter\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: mg-adapter\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: mg-adapter\n+  template:\n+    metadata:\n+      labels:\n+        app: mg-adapter\n+    spec:\n+      containers:\n+        - name: mg-adapter\n+          volumeMounts:\n+            - mountPath: /home/wso2/security/localhost.key\n+              subPath: localhost.key\n+              name: adapter-key-vol\n+            - mountPath: /home/wso2/security/localhost.pem\n+              subPath: localhost.pem\n+              name: adapter-pem-vol\n+            - mountPath: /home/wso2/conf/config.toml\n+              subPath: config.toml\n+              name: config-toml-vol\n+            - mountPath: /home/wso2/conf/log4j2.properties\n+              subPath: log4j2.properties\n+              name: log4j2-vol\n+            - mountPath: /home/wso2/conf/log_config.toml\n+              subPath: log_config.toml\n+              name: logconfig-toml-vol\n+          image: wso2/mg-adapter:4.0.0-m1\n+          ports:\n+            - containerPort: 18000\n+            - containerPort: 9843\n+          livenessProbe:\n+            tcpSocket:\n+              port: 9843\n+            initialDelaySeconds: 10\n+            periodSeconds: 30\n+          readinessProbe:\n+            tcpSocket:\n+              port: 9843\n+            initialDelaySeconds: 8\n+            periodSeconds: 5\n+      volumes:\n+        - name: adapter-key-vol\n+          configMap:\n+            name: adapter-key-configmap\n+        - name: adapter-pem-vol\n+          configMap:\n+            name: adapter-pem-configmap\n+        - name: config-toml-vol\n+          configMap:\n+            name: config-toml-configmap\n+        - name: log4j2-vol\n+          configMap:\n+            name: log4j2-configmap\n+        - name: logconfig-toml-vol\n+          configMap:\n+            name: logconfig-toml-configmap\n+      restartPolicy: Always", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NjIyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"\n          \n          \n            \n                format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856221", "createdAt": "2020-12-04T05:59:57Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-adapter/logconfig-toml-configmap.yaml", "diffHunk": "@@ -0,0 +1,50 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the log_config.toml file for adapter\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: logconfig-toml-configmap\n+data:\n+  log_config.toml: |\n+    # The logging configuration file for control plane\n+    ######### root Level ########\n+    logfile = \"logs/adapter.log\"\n+    logLevel = \"INFO\"\n+\n+    [rotation]\n+    MaxSize = 10    #meabytes\n+    MaxBackups = 3\n+    MaxAge =  2   #days\n+    Compress = true\n+\n+    ######### package Level ############\n+    # LogLevels = \"DEBG\", \"FATL\", \"ERRO\", \"WARN\", \"INFO\", \"PANC\"\n+\n+    [[pkg]]\n+    name = \"github.com/wso2/micro-gw/internal/pkg/mgw\"\n+    logLevel = \"INFO\"\n+\n+    [[pkg]]\n+    name = \"github.com/wso2/micro-gw/internal/pkg/oasparser\"\n+    logLevel = \"INFO\"\n+\n+\n+    [accessLogs]\n+    logfile = \"/tmp/envoy.access.log\"\n+    format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NjMxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  nodePort: 30200\n          \n          \n            \n                  nodePort: 30200", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856312", "createdAt": "2020-12-04T06:00:12Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-adapter/service.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Service for adapter\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-adapter\n+  name: adapter-service\n+spec:\n+  type: NodePort\n+  selector:\n+    app: mg-adapter\n+  ports:\n+    - name: \"18000\"\n+      port: 18000\n+      targetPort: 18000\n+      protocol: TCP\n+      nodePort: 30199\n+    - name: \"9843\"\n+      port: 9843\n+      targetPort: 9843\n+      protocol: TCP\n+      nodePort: 30200", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NjU0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"\n          \n          \n            \n                format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856540", "createdAt": "2020-12-04T06:00:52Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-enforcer/logconfig-toml-configmap.yaml", "diffHunk": "@@ -0,0 +1,50 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing log_config.toml file for enforcer\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: logconfig-toml-configmap\n+data:\n+  log_config.toml: |\n+    # The logging configuration file for control plane\n+    ######### root Level ########\n+    logfile = \"logs/adapter.log\"\n+    logLevel = \"INFO\"\n+\n+    [rotation]\n+    MaxSize = 10    #meabytes\n+    MaxBackups = 3\n+    MaxAge =  2   #days\n+    Compress = true\n+\n+    ######### package Level ############\n+    # LogLevels = \"DEBG\", \"FATL\", \"ERRO\", \"WARN\", \"INFO\", \"PANC\"\n+\n+    [[pkg]]\n+    name = \"github.com/wso2/micro-gw/internal/pkg/mgw\"\n+    logLevel = \"INFO\"\n+\n+    [[pkg]]\n+    name = \"github.com/wso2/micro-gw/internal/pkg/oasparser\"\n+    logLevel = \"INFO\"\n+\n+\n+    [accessLogs]\n+    logfile = \"/tmp/envoy.access.log\"\n+    format = \"[%START_TIME%] '%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%' %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% '%REQ(X-FORWARDED-FOR)%' '%REQ(USER-AGENT)%' '%REQ(X-REQUEST-ID)%' '%REQ(:AUTHORITY)%' '%UPSTREAM_HOST%'\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NjYwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  protocol: TCP\n          \n          \n            \n                  protocol: TCP", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856606", "createdAt": "2020-12-04T06:01:06Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-enforcer/service.yaml", "diffHunk": "@@ -0,0 +1,33 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Service for enforcer\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-enforcer\n+  name: enforcer-service\n+spec:\n+  type: ClusterIP\n+  selector:\n+    app: mg-enforcer\n+  ports:\n+    - name: \"8081\"\n+      port: 8081\n+      targetPort: 8081\n+      protocol: TCP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NjcwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  port_value: 8081\n          \n          \n            \n                                  port_value: 8081", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856700", "createdAt": "2020-12-04T06:01:24Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-router/envoy-configmap.yaml", "diffHunk": "@@ -0,0 +1,69 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the envoy.yaml file for router\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: envoy-configmap\n+data:\n+  envoy.yaml: |\n+    admin:\n+      access_log_path: /dev/null\n+      address:\n+        socket_address:\n+          address: 0.0.0.0\n+          port_value: 9000\n+    dynamic_resources:\n+      ads_config:\n+        api_type: GRPC\n+        transport_api_version: V3\n+        grpc_services:\n+          - envoy_grpc:\n+              cluster_name: xds_cluster\n+      cds_config:\n+        ads: {}\n+        resource_api_version: V3\n+      lds_config:\n+        ads: {}\n+        resource_api_version: V3\n+    node:\n+      cluster: service_greeter\n+      id: default\n+    static_resources:\n+      clusters:\n+        - name: xds_cluster\n+          type: STRICT_DNS\n+          connect_timeout: 1s\n+          hosts:\n+            - socket_address:\n+                address: adapter-service\n+                port_value: 18000\n+          http2_protocol_options: {}\n+        - name: ext-authz\n+          type: STRICT_DNS\n+          connect_timeout: 200s\n+          http2_protocol_options: {}\n+          load_assignment:\n+            cluster_name: ext-authz\n+            endpoints:\n+            - lb_endpoints:\n+              - endpoint:\n+                  address:\n+                    socket_address:\n+                      address: enforcer-service\n+                      port_value: 8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1Njc3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  nodePort: 30201\n          \n          \n            \n                  nodePort: 30201", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535856771", "createdAt": "2020-12-04T06:01:33Z", "author": {"login": "praminda"}, "path": "k8s-artifacts/mg-router/service.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# service for router\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-router\n+  name: router-service\n+spec:\n+  type: NodePort\n+  selector:\n+    app: mg-router\n+  ports:\n+    - name: \"9000\"\n+      port: 9000\n+      targetPort: 9000\n+      protocol: TCP\n+      nodePort: 30202\n+    - name: \"9095\"\n+      port: 9095\n+      targetPort: 9095\n+      protocol: TCP\n+      nodePort: 30201", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc4MTg1", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544678185", "createdAt": "2020-12-04T06:04:04Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNDowNFrOH_CJww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNDowNFrOH_CJww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NzYwMw==", "bodyText": "Move these sections to opertor docs", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535857603", "createdAt": "2020-12-04T06:04:04Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/K8S-README.md", "diffHunk": "@@ -0,0 +1,240 @@\n+# WSO2 API Microgateway deployment in Kubernetes\n+\n+There are two modes when deploying Microgateway in Kubernetes.\n+   - Deployment without WSO2 API operator for kubernetes\n+   - Deployment with WSO2 API operator for kubernetes\n+\n+When deploying the Microgateway in kubernetes there are 3 pods for the components as follows.\n+   - mg-router\n+   - mg-adapter\n+   - mg-enforcer\n+   \n+Router and Adapter services are exposed as NodePort type in kubernetes. Enforcer service is exposed as ClusterIP type.\n+\n+## Microgateway quick start\n+\n+*Prerequisites*\n+- [Kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n+\n+- [Kubernetes v1.14 or above](https://Kubernetes.io/docs/setup/) <br>\n+\n+    - Minimum CPU : 6vCPU\n+    - Minimum Memory : 6GB\n+    \n+### Deployment without WSO2 API Operator for kubernetes\n+\n+Let's host our first API on a Microgateway in kubernetes. We will be exposing the publicly available [petstore services](https://petstore.swagger.io/) via  microgateway in kubernetes\n+\n+1. First download the CLI tool(APICTL) and the microgateway distribution from the  \n+[github release page](https://github.com/wso2/product-microgateway/releases)\n+and extract them to a folder of your choice.\n+  * [CLI (APICTL)](https://github.com/wso2/product-microgateway/releases)\n+  * [Microgateway Distribution](https://github.com/wso2/product-microgateway/releases)\n+ \n+  \n+CLI tool extracted location will be referred as `CLI_HOME` and Microgateway distribution extracted location would be \n+referred as `MG_HOME`.\n+\n+2. Using your command line client tool add the 'CLI_HOME' folder to your PATH variable.\n+```\n+export PATH=$PATH:<CLI_HOME>\n+```\n+3. Let's deploy the microgateway in kubernetes.\n+  - In kubernetes artifacts there are 3 separate folders for each component.\n+  - In each folder config maps, deployment and service are included.\n+  - You can use the following commands to deploy each microgateway component in kubernetes.\n+  ```\n+  kubectl apply -f mg-adapter/\n+  kubectl apply -f mg-enforcer/\n+  kubectl apply -f mg-router/\n+  ```\n+  - You can verify the deployments using the following commands.\n+  ```\n+    kubectl get pods\n+    kubectl get services\n+  ```\n+\n+4. Let's create our first project with name \"petstore\" by adding the [open API definition](https://petstore.swagger.io/v2/swagger.json) of the petstore . You can do that by executing the following command using your command line tool.\n+```\n+apictl init petstore --oas https://petstore.swagger.io/v2/swagger.json\n+```\n+\n+5. The project is now initialized. You should notice a directory with name \"petstore\" being created in the location \n+where you executed the command. \n+\n+6. As we have exposed the adapter service and router service in Node Port type, you can use the IP address of any Kubernetes node.\n+  - For Docker for Mac use \"127.0.0.1\" for the K8s node IP\n+  - For Minikube, use minikube ip command to get the K8s node IP\n+  - For GKE\n+       ```$xslt\n+           (apictl get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type==\"ExternalIP\")].address }')\n+       ```\n+       - This will give the external IPs of the nodes available in the cluster. Pick any IP from there.\n+\n+7. Now let's deploy our first API to Microgateway in kubernetes using the project created in the step 4. Navigate to the location where the petstore project was initialized.\n+Execute the following command to deploy the API in kubernetes.\n+\n+```\n+apictl mg deploy --host https://<*Node IP*>:30200 --file petstore  -u admin -p admin -k\n+```\n+\n+The user credentials can be configured in the configurations of the `MG_HOME` distribution. `admin:admin` is the default accepted credentials by the \n+microgateway adapter.\n+\n+8. The next step would be to invoke the API using a REST tool. Since APIs on the Microgateway are by default secured. We need a valid token in order to invoke the API. \n+Use the following sample token accepted by the microgateway to access the API. Lets set the token to command line as a variable\n+\n+```\n+TOKEN=eyJ4NXQiOiJNell4TW1Ga09HWXdNV0kwWldObU5EY3hOR1l3WW1NNFpUQTNNV0kyTkRBelpHUXpOR00wWkdSbE5qSmtPREZrWkRSaU9URmtNV0ZoTXpVMlpHVmxOZyIsImtpZCI6Ik16WXhNbUZrT0dZd01XSTBaV05tTkRjeE5HWXdZbU00WlRBM01XSTJOREF6WkdRek5HTTBaR1JsTmpKa09ERmtaRFJpT1RGa01XRmhNelUyWkdWbE5nX1JTMjU2IiwiYWxnIjoiUlMyNTYifQ==.eyJhdWQiOiJBT2syNFF6WndRXzYyb2QyNDdXQnVtd0VFZndhIiwic3ViIjoiYWRtaW5AY2FyYm9uLnN1cGVyIiwibmJmIjoxNTk2MDA5NTU2LCJhenAiOiJBT2syNFF6WndRXzYyb2QyNDdXQnVtd0VFZndhIiwic2NvcGUiOiJhbV9hcHBsaWNhdGlvbl9zY29wZSBkZWZhdWx0IiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6OTQ0My9vYXV0aDIvdG9rZW4iLCJrZXl0eXBlIjoiUFJPRFVDVElPTiIsImV4cCI6MTYyNzU0NTU1NiwiaWF0IjoxNTk2MDA5NTU2LCJqdGkiOiIyN2ZkMWY4Ny01ZTI1LTQ1NjktYTJkYi04MDA3MTFlZTJjZWMifQ==.otDREOsUUmXuSbIVII7FR59HAWqtXh6WWCSX6NDylVIFfED3GbLkopo6rwCh2EX6yiP-vGTqX8sB9Zfn784cIfD3jz2hCZqOqNzSUrzamZrWui4hlYC6qt4YviMbR9LNtxxu7uQD7QMbpZQiJ5owslaASWQvFTJgBmss5t7cnurrfkatj5AkzVdKOTGxcZZPX8WrV_Mo2-rLbYMslgb2jCptgvi29VMPo9GlAFecoMsSwywL8sMyf7AJ3y4XW5Uzq7vDGxojDam7jI5W8uLVVolZPDstqqZYzxpPJ2hBFC_OZgWG3LqhUgsYNReDKKeWUIEieK7QPgjetOZ5Geb1mA==\n+``` \n+\n+9. We can now invoke the API running on the microgateway using cURL as below.\n+```\n+curl -X GET \"https://<*Node IP*>:30201/v2/pet/1\" -H \"accept: application/json\" -H \"Authorization:Bearer $TOKEN\" -k\n+```\n+\n+### Deployment with WSO2 API Operator for kubernetes\n+\n+The WSO2 API operator is running in the kubernetes cluster. This approach uses the kubernetes native way to deploy the APIS into a running microgateway cluster. \n+\n+Let's host our first API on a Microgateway in kubernetes using API Operator. We will be exposing the publicly available [petstore services](https://petstore.swagger.io/) via  microgateway in kubernetes\n+\n+1. First download the microgateway distribution from the [github release page](https://github.com/wso2/product-microgateway/releases) and extract that to a folder of your choice. Microgateway distribution extracted location would be \n+referred as `MG_HOME`.\n+\n+2. Let's deploy the API Operator in the kubernetes cluster. Please refer [API Operator documentation](https://github.com/wso2/k8s-api-operator/tree/2.0.0) for detailed steps.\n+\n+3. Let's deploy the microgateway in kubernetes.\n+  - In kubernetes artifacts there are 3 separate folders for each component.\n+  - In each folder config maps, deployment and service are included.\n+  - You can use the following commands to deploy each microgateway component in kubernetes.\n+  ```\n+  kubectl apply -f mg-adapter/\n+  kubectl apply -f mg-enforcer/\n+  kubectl apply -f mg-router/\n+  ```\n+  - You can verify the deployments using the following commands.\n+  ```\n+    kubectl get pods\n+    kubectl get services\n+  ```\n+\n+4. As we have exposed the adapter service and router service in Node Port type, you can use the IP address of any Kubernetes node.\n+  - For Docker for Mac use \"127.0.0.1\" for the K8s node IP\n+  - For Minikube, use minikube ip command to get the K8s node IP\n+  - For GKE\n+       ```$xslt\n+           (apictl get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type==\"ExternalIP\")].address }')\n+       ```\n+       - This will give the external IPs of the nodes available in the cluster. Pick any IP from there.\n+\n+5. Now let's create a config map either by providing a zip file of an API project or a swagger definition of an API.\n+  - Creating a config map using a zip file of an API project \n+      ```\n+      kubectl create configmap petstore-cm --from-file=Petstore.zip\n+      ```\n+  - Creating a config map using a swagger definition of an API\n+      ```\n+      kubectl create configmap petstore-cm --from-file=swagger.json\n+      ```\n+\n+6. After that create an api.yaml file with API Custom Resource Definition (CRD) pointing to the created config map.\n+```\n+apiVersion: wso2.com/v1alpha2\n+kind: API\n+metadata:\n+  name: petstore-api\n+spec:\n+  swaggerConfigMapName: petstore-cm\n+```\n+ - Apply the api.yaml file in the kubernetes cluster.\n+   ```\n+   kubectl apply -f api.yaml\n+   ```\n+\n+7. The next step would be to invoke the API using a REST tool. Since APIs on the Microgateway are by default secured. We need a valid token in order to invoke the API. \n+Use the following sample token accepted by the microgateway to access the API. Lets set the token to command line as a variable\n+\n+```\n+TOKEN=eyJ4NXQiOiJNell4TW1Ga09HWXdNV0kwWldObU5EY3hOR1l3WW1NNFpUQTNNV0kyTkRBelpHUXpOR00wWkdSbE5qSmtPREZrWkRSaU9URmtNV0ZoTXpVMlpHVmxOZyIsImtpZCI6Ik16WXhNbUZrT0dZd01XSTBaV05tTkRjeE5HWXdZbU00WlRBM01XSTJOREF6WkdRek5HTTBaR1JsTmpKa09ERmtaRFJpT1RGa01XRmhNelUyWkdWbE5nX1JTMjU2IiwiYWxnIjoiUlMyNTYifQ==.eyJhdWQiOiJBT2syNFF6WndRXzYyb2QyNDdXQnVtd0VFZndhIiwic3ViIjoiYWRtaW5AY2FyYm9uLnN1cGVyIiwibmJmIjoxNTk2MDA5NTU2LCJhenAiOiJBT2syNFF6WndRXzYyb2QyNDdXQnVtd0VFZndhIiwic2NvcGUiOiJhbV9hcHBsaWNhdGlvbl9zY29wZSBkZWZhdWx0IiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6OTQ0My9vYXV0aDIvdG9rZW4iLCJrZXl0eXBlIjoiUFJPRFVDVElPTiIsImV4cCI6MTYyNzU0NTU1NiwiaWF0IjoxNTk2MDA5NTU2LCJqdGkiOiIyN2ZkMWY4Ny01ZTI1LTQ1NjktYTJkYi04MDA3MTFlZTJjZWMifQ==.otDREOsUUmXuSbIVII7FR59HAWqtXh6WWCSX6NDylVIFfED3GbLkopo6rwCh2EX6yiP-vGTqX8sB9Zfn784cIfD3jz2hCZqOqNzSUrzamZrWui4hlYC6qt4YviMbR9LNtxxu7uQD7QMbpZQiJ5owslaASWQvFTJgBmss5t7cnurrfkatj5AkzVdKOTGxcZZPX8WrV_Mo2-rLbYMslgb2jCptgvi29VMPo9GlAFecoMsSwywL8sMyf7AJ3y4XW5Uzq7vDGxojDam7jI5W8uLVVolZPDstqqZYzxpPJ2hBFC_OZgWG3LqhUgsYNReDKKeWUIEieK7QPgjetOZ5Geb1mA==\n+``` \n+\n+8. We can now invoke the API running on the microgateway using cURL as below.\n+```\n+curl -X GET \"https://<*Node IP*>:30201/v2/pet/1\" -H \"accept: application/json\" -H \"Authorization:Bearer $TOKEN\" -k\n+```\n+\n+#### Microgateway Components", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 167}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc4NDYx", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544678461", "createdAt": "2020-12-04T06:04:56Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNDo1NlrOH_CK1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNDo1NlrOH_CK1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1Nzg3Nw==", "bodyText": "Lets make this a k8s secret", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535857877", "createdAt": "2020-12-04T06:04:56Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/adapter-key-configmap.yaml", "diffHunk": "@@ -0,0 +1,52 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the private key for adapter\n+\n+apiVersion: v1\n+kind: ConfigMap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc4OTk0", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544678994", "createdAt": "2020-12-04T06:06:38Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNjozOFrOH_CNFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNjozOFrOH_CNFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1ODQ1NQ==", "bodyText": "Lets remove the config map part from the name", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535858455", "createdAt": "2020-12-04T06:06:38Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/config-toml-configmap.yaml", "diffHunk": "@@ -0,0 +1,78 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing config.toml file for adapter\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: config-toml-configmap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njc5MzIz", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544679323", "createdAt": "2020-12-04T06:07:32Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNzozMlrOH_COeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowNzozMlrOH_COeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1ODgwOA==", "bodyText": "Let add resource limits as well", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535858808", "createdAt": "2020-12-04T06:07:32Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/deployment.yaml", "diffHunk": "@@ -0,0 +1,81 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Deployment for Adapter\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: mg-adapter\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: mg-adapter\n+  template:\n+    metadata:\n+      labels:\n+        app: mg-adapter\n+    spec:\n+      containers:\n+        - name: mg-adapter\n+          volumeMounts:\n+            - mountPath: /home/wso2/security/localhost.key\n+              subPath: localhost.key\n+              name: adapter-key-vol\n+            - mountPath: /home/wso2/security/localhost.pem\n+              subPath: localhost.pem\n+              name: adapter-pem-vol\n+            - mountPath: /home/wso2/conf/config.toml\n+              subPath: config.toml\n+              name: config-toml-vol\n+            - mountPath: /home/wso2/conf/log4j2.properties\n+              subPath: log4j2.properties\n+              name: log4j2-vol\n+            - mountPath: /home/wso2/conf/log_config.toml\n+              subPath: log_config.toml\n+              name: logconfig-toml-vol\n+          image: wso2/mg-adapter:4.0.0-m1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgwMTI3", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544680127", "createdAt": "2020-12-04T06:09:49Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowOTo0OVrOH_CRhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjowOTo0OVrOH_CRhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1OTU4OQ==", "bodyText": "Lets remove configmap part from the name", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535859589", "createdAt": "2020-12-04T06:09:49Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/log4j2-configmap.yaml", "diffHunk": "@@ -0,0 +1,68 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the log4j2.properties file for adapter\n+\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: log4j2-configmap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgwNzYy", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544680762", "createdAt": "2020-12-04T06:11:33Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMTozM1rOH_CUFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMTozM1rOH_CUFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MDI0Nw==", "bodyText": "lets use proper names", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535860247", "createdAt": "2020-12-04T06:11:33Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/service.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Service for adapter\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-adapter\n+  name: adapter-service\n+spec:\n+  type: NodePort\n+  selector:\n+    app: mg-adapter\n+  ports:\n+    - name: \"18000\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgxMDg5", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544681089", "createdAt": "2020-12-04T06:12:37Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMjozOFrOH_CVcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMjozOFrOH_CVcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MDU5Mg==", "bodyText": "This does not need. a node port", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535860592", "createdAt": "2020-12-04T06:12:38Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-adapter/service.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Service for adapter\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-adapter\n+  name: adapter-service\n+spec:\n+  type: NodePort\n+  selector:\n+    app: mg-adapter\n+  ports:\n+    - name: \"18000\"\n+      port: 18000\n+      targetPort: 18000\n+      protocol: TCP\n+      nodePort: 30199", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgxNTI3", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544681527", "createdAt": "2020-12-04T06:13:58Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMzo1OFrOH_CXBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMzo1OFrOH_CXBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MDk5OA==", "bodyText": "Lets use the same toml file for adapter and enforcer", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535860998", "createdAt": "2020-12-04T06:13:58Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-enforcer/config-toml-configmap.yaml", "diffHunk": "@@ -0,0 +1,78 @@\n+# --------------------------------------------------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgyMDE0", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544682014", "createdAt": "2020-12-04T06:15:17Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxNToxN1rOH_CYyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxNToxN1rOH_CYyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MTQ0OQ==", "bodyText": "Lets remove this mount from enforcer since it is used by adapter only", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535861449", "createdAt": "2020-12-04T06:15:17Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-enforcer/deployment.yaml", "diffHunk": "@@ -0,0 +1,76 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Deployment for enforcer\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: mg-enforcer\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: mg-enforcer\n+  template:\n+    metadata:\n+      labels:\n+        app: mg-enforcer\n+    spec:\n+      containers:\n+        - name: mg-enforcer\n+          volumeMounts:\n+            - mountPath: /home/wso2/mg/security/\n+              name: client-truststore-vol\n+            - mountPath: /home/wso2/conf/config.toml\n+              subPath: config.toml\n+              name: config-toml-vol\n+            - mountPath: /home/wso2/conf/log4j2.properties\n+              subPath: log4j2.properties\n+              name: log4j2-vol\n+            - mountPath: /home/wso2/conf/log_config.toml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjgyMzM1", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-544682335", "createdAt": "2020-12-04T06:16:11Z", "commit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxNjoxMVrOH_CZ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxNjoxMVrOH_CZ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MTc0Mw==", "bodyText": "Lets use proper names", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r535861743", "createdAt": "2020-12-04T06:16:11Z", "author": {"login": "Rajith90"}, "path": "k8s-artifacts/mg-enforcer/service.yaml", "diffHunk": "@@ -0,0 +1,33 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Service for enforcer\n+\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: mg-enforcer\n+  name: enforcer-service\n+spec:\n+  type: ClusterIP\n+  selector:\n+    app: mg-enforcer\n+  ports:\n+    - name: \"8081\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b5a8ef3e511758e85dd021a40d1f7f6a1ba8f0d", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/7b5a8ef3e511758e85dd021a40d1f7f6a1ba8f0d", "committedDate": "2020-12-07T07:00:26Z", "message": "kubernetes artifacts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7388e33cfdaa2a92d1eb47afe2fd36e43e7ed9ed", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/7388e33cfdaa2a92d1eb47afe2fd36e43e7ed9ed", "committedDate": "2020-12-07T07:00:26Z", "message": "Restructuring the folder and file structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "384a71bb9750fdb54617a1f0a2a3e810bd27ed68", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/384a71bb9750fdb54617a1f0a2a3e810bd27ed68", "committedDate": "2020-12-07T07:00:26Z", "message": "Configuring liveness and readiness probes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aadd87b0859b67bfe44a0f43ec4d1d60b69ad77c", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/aadd87b0859b67bfe44a0f43ec4d1d60b69ad77c", "committedDate": "2020-12-07T07:00:26Z", "message": "Add k8s readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7256a92fe0c4fc25fa54c1772d4d9fc7eef957b0", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/7256a92fe0c4fc25fa54c1772d4d9fc7eef957b0", "committedDate": "2020-12-07T07:00:26Z", "message": "Modify readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d700e07b5e4cc8f43c405127f5c2cecd6ccac63f", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/d700e07b5e4cc8f43c405127f5c2cecd6ccac63f", "committedDate": "2020-12-07T07:00:26Z", "message": "Modify the readiness and liveness probe values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6708a8472501213c00230342810f801d5df4cf", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/6b6708a8472501213c00230342810f801d5df4cf", "committedDate": "2020-12-07T07:00:26Z", "message": "Add changes according to review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f90cc0efb5effa6b396812286d85888f924594d3", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/f90cc0efb5effa6b396812286d85888f924594d3", "committedDate": "2020-12-04T03:43:31Z", "message": "Modify the readiness and liveness probe values"}, "afterCommit": {"oid": "6b6708a8472501213c00230342810f801d5df4cf", "author": {"user": {"login": "Jayanie", "name": null}}, "url": "https://github.com/wso2/product-microgateway/commit/6b6708a8472501213c00230342810f801d5df4cf", "committedDate": "2020-12-07T07:00:26Z", "message": "Add changes according to review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNTQxNjg0", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-561541684", "createdAt": "2021-01-05T06:29:22Z", "commit": {"oid": "6b6708a8472501213c00230342810f801d5df4cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMTUwOTM4", "url": "https://github.com/wso2/product-microgateway/pull/1501#pullrequestreview-570150938", "createdAt": "2021-01-18T03:31:56Z", "commit": {"oid": "6b6708a8472501213c00230342810f801d5df4cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzozMTo1NlrOIVY6mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzozMTo1NlrOIVY6mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5OTIyNQ==", "bodyText": "add new line EOF.", "url": "https://github.com/wso2/product-microgateway/pull/1501#discussion_r559299225", "createdAt": "2021-01-18T03:31:56Z", "author": {"login": "ruwiniwj"}, "path": "k8s-artifacts/mg-adapter/adapter-pem-secret.yaml", "diffHunk": "@@ -0,0 +1,24 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# Config map containing the certificate for adapter\n+\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  name: adapter-pem-secret\n+data:\n+  localhost.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoVENDQW0yZ0F3SUJBZ0lKQUpyd05Ed0xsQ0ZRTUEwR0NTcUdTSWIzRFFFQkN3VUFNR1F4Q3pBSkJnTlYKQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpEUVRFV01CUUdBMVVFQnd3TlRXOTFiblJoYVc0Z1ZtbGxkekVOTUFzRwpBMVVFQ2d3RVYxTlBNakVOTUFzR0ExVUVDd3dFVjFOUE1qRVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYCkRUSXdNVEV4TVRFeE1qY3hNRm9YRFRJek1ERXlNREV4TWpjeE1Gb3daREVMTUFrR0ExVUVCaE1DVlZNeEN6QUoKQmdOVkJBZ01Ba05CTVJZd0ZBWURWUVFIREExTmIzVnVkR0ZwYmlCV2FXVjNNUTB3Q3dZRFZRUUtEQVJYVTA4eQpNUTB3Q3dZRFZRUUxEQVJYVTA4eU1SSXdFQVlEVlFRRERBbHNiMk5oYkdodmMzUXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFNIbU5jOVhVZXJCN1kxa3dvUHQ2U3JNNFdxOEZQU2d3YTFteUkKQ21EaGVNYkhJdFBRQXM1aVNiVDJGVFJXK29rS0FjWWMzcVowRWNNU0tMVUZCWjRkUkFYb05FVDFhS3E1K05qbApQY0QwOGNYdXZrT3Bxc09vVzFoRjZ5Mm9qRXl6NkhyVFlCSjVJMTlQMXBtWFRWQ0QyTzVadVlzQ0ZQSnYrNTAwCk5CM1R5bm5POURFSzJCOFNkMzhodnJKZEl6amVDR2IwelRzUy9XeC9odTQwazkyaGxnNDYyQ2lGelVlc0RjUEUKSjFScHBXQjVFSnNxMUh2eU5ka0twOXoxNlZNN0ttc0svYjN4Wko2YjY5K05SOW1VbXMrbm9PaFlXeVJWSS81YwpyY2M5cUZtWlJxTGtkOVQxOFVtSnV3WG50Z1JEbERpbWF2Smt2YlVXMmpIY1l4YWJBZ01CQUFHak9qQTRNQXNHCkExVWREd1FFQXdJRU1EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFVQmdOVkhSRUVEVEFMZ2dsc2IyTmgKYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRlNYeVVCQ1hWeGVBbWQ5MVRJd2tHNXFRUktJS01hYQpZZk16VXF1OFlBemJYSnVZTTY5a0twSkxZbi9OaFBJaXlDL2pzN0QyK01HY1Z2cTBkVCswM2MxNHdubDRWcjluCmVmaWJna241UFFNY0NKMTJmOVdWSXpxbXVSbVU1eWJSZkp3K1F2RFFRNnNhWWJvWnNqZE5JaUJveHFXVG5zUHYKdmIra1h5WVZhZnhRZkNRTW1xTkpkZGFOczBZWnpHTytQWE0xVVUwWGk2MGg5YTB5UUlubkl6RlI2SmpSS1BqTQp6NEdSeml1OVJ0VEVWeGRtWW4zdDNXeklRdFFtKzVLWisxR1JaOGhTYmNPVUttRmlPSHNuZCtSS0xqWmF0NGpFCmRPYXhhanBFWUlqT2o5SzR1QUY2enZib3RHZXlBSUd5Z01wRExLNVJHbXl5NHpMZ3AveklrbVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b6708a8472501213c00230342810f801d5df4cf"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1018, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}