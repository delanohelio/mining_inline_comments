{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MjU2MzA3", "number": 1288, "title": "Implemented Logging framework for the envoy based microgateway", "bodyText": "Purpose\n\nAs $subjet this will introduce a logging framework for envoy based mgw.\n\n\nLogging library: https://github.com/sirupsen/logrus\n\n\nRotation library: https://github.com/natefinch/lumberjack\n\n\nFollowing log levels are supported in the framework.\n\nInfo - INFO\nWarn - WARN\nError - ERRO\nDebug - DEBG\nPanic -  PANC (Trace messages also print with exit 1)\nFatal - FATL (exit 1)\n\nLogging framework has two approaches to write logs.\n\nUsing global logger\nUsing package level loggers\n\nUsing global logger\nYou can simply import logger \"github.com/sirupsen/logrus\" and can write  logs. This method is suitable for writing logs for codes which are not in the main components. (ex: main.go )\nEx:  logger.Info(\u201c this is logger info\u201d)\nUsing package level loggers\nThere are separate loggers initiated for the main components. Those are in the loggers package. When you write the logs for main components you have to import the correct logger from the loggers package.\nEx:  logger \"github.com/wso2/micro-gw/internal/loggers\"\nlogger.LoggerOasparser.Fatal(\"Error Generating mgwSwagger struct:\", err)\n\nIf you create a main component you have to initiate a new logger instance in the logger package and define the package name as a constant.\nLog configurations\nAll the log configurations are handled  by the log_config.toml.\n\nIn order to change the package log levels, you have to define the [[pkg]] attribute in the tomle file setting the package name and loglevel.\nEx:     [[pkg]]\nname = \"github.com/wso2/micro-gw/internal/pkg/mgw\"\nlogLevel = \u201cDEBG\u201d\nEnvoy access log format and file path can be changed using access log attributes\nIssues\n\nFixes #1286\nFixes #1450\nAutomation tests\n\nUnit tests added: Yes/No\nIntegration tests added: Yes/No\n\nTested environments\n\nNot Tested\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-06-18T06:24:52Z", "url": "https://github.com/wso2/product-microgateway/pull/1288", "merged": true, "mergeCommit": {"oid": "86a04e289418c691098f58f442b6d9bf487879ba"}, "closed": true, "closedAt": "2020-07-01T11:15:24Z", "author": {"login": "chashikajw"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsO4IiAH2gAyNDM2MjU2MzA3Ojg0YmVmNzIzY2I3YWY0ZmNjOGRmNmMzMGI4NGMxM2E0ZjlkZTg1NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd31jeNgFqTU4NTAzMzI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84bef723cb7af4fcc8df6c30b84c13a4f9de8576", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/84bef723cb7af4fcc8df6c30b84c13a4f9de8576", "committedDate": "2020-06-17T19:18:44Z", "message": "add log framework and rotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "233104d70e228226d289edf56be5ffc60ded571a", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/233104d70e228226d289edf56be5ffc60ded571a", "committedDate": "2020-06-17T19:24:48Z", "message": "resolves conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13304623ca1ffad6842bbc52a4ad7d4e586d7322", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/13304623ca1ffad6842bbc52a4ad7d4e586d7322", "committedDate": "2020-06-17T19:25:20Z", "message": "implement rootlevel logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1136cd536c930b5d15ad13ef010494d959c1dd24", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/1136cd536c930b5d15ad13ef010494d959c1dd24", "committedDate": "2020-06-17T19:25:20Z", "message": "implement package level logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb8d0185a9d38ef4a13b87f9fd8b7b4bd54a47ba", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/eb8d0185a9d38ef4a13b87f9fd8b7b4bd54a47ba", "committedDate": "2020-06-17T19:25:20Z", "message": "add logging config toml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dccfb42fc068a7072616d9370e00ba74be788ae", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/0dccfb42fc068a7072616d9370e00ba74be788ae", "committedDate": "2020-06-17T19:25:20Z", "message": "add envoy access log formats to toml configurations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3d93b1a35415a88e771409069d6f92c4277f31", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/9e3d93b1a35415a88e771409069d6f92c4277f31", "committedDate": "2020-06-17T19:25:20Z", "message": "refactor the code and intiate loggers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64a6eddab4879c9c0460a4912340fe01626e50ec", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/64a6eddab4879c9c0460a4912340fe01626e50ec", "committedDate": "2020-06-17T19:25:20Z", "message": "set separete loggers for packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb04350bb01486186e1323cea6079610661c33c9", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/cb04350bb01486186e1323cea6079610661c33c9", "committedDate": "2020-06-17T19:25:20Z", "message": "log file location set to log_configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc3b862d474e62d30f210f1071c3a62dbd47f8d", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/8bc3b862d474e62d30f210f1071c3a62dbd47f8d", "committedDate": "2020-06-17T19:25:20Z", "message": "implment hot update for log configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65a49fe53087fa8904c25c28bbe5d1c101b7e3c", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/f65a49fe53087fa8904c25c28bbe5d1c101b7e3c", "committedDate": "2020-06-18T05:56:36Z", "message": "document the functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTk2OTI4", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-435596928", "createdAt": "2020-06-23T09:17:56Z", "commit": {"oid": "cbb1cb61d33b81b6043082611a7b83c2d482ca9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToxNzo1NlrOGngq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToxNzo1NlrOGngq5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MjkxNg==", "bodyText": "Why did we change this?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r444082916", "createdAt": "2020-06-23T09:17:56Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "filter-chain/envoy.yaml", "diffHunk": "@@ -17,7 +17,7 @@ static_resources:\n     - filters:\n       - name: envoy.http_connection_manager\n         typed_config:\n-          \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n+          \"@type\": type.googleapis.com/envoy.configs.filter.network.http_connection_manager.v2.HttpConnectionManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb1cb61d33b81b6043082611a7b83c2d482ca9c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjE2NTkw", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-435616590", "createdAt": "2020-06-23T09:42:40Z", "commit": {"oid": "c3c038d7eb19a63c0c719e390012d1a20ede5a39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo0Mjo0MFrOGnhkRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo0Mjo0MFrOGnhkRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NzYwNg==", "bodyText": "Yeah It's intentional. Otherwise we need to import all the packages using gopath.(It is much difficult. go doesn't support relative paths) Here we use go modules to avoid that difficulty. Since it behaves like we import it from github.", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r444097606", "createdAt": "2020-06-23T09:42:40Z", "author": {"login": "chashikajw"}, "path": "internal/pkg/api/APIServer.go", "diffHunk": "@@ -18,15 +18,19 @@ package api\n \n import (\n \t\"github.com/gorilla/mux\"\n-\t\"github.com/sirupsen/logrus\"\n-\t\"github.com/wso2/micro-gw/internal/pkg/confTypes\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb1cb61d33b81b6043082611a7b83c2d482ca9c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjMwNzk1", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-435630795", "createdAt": "2020-06-23T10:01:12Z", "commit": {"oid": "c3c038d7eb19a63c0c719e390012d1a20ede5a39"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDowMToxMlrOGniO3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDowMToxMlrOGniO3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwODUwOA==", "bodyText": "License Header?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r444108508", "createdAt": "2020-06-23T10:01:12Z", "author": {"login": "pubudu538"}, "path": "configs/tomlConfigParser.go", "diffHunk": "@@ -0,0 +1,76 @@\n+package configs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3c038d7eb19a63c0c719e390012d1a20ede5a39"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8b3efc8745e5db33599be1200b18d81715c36d5", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/c8b3efc8745e5db33599be1200b18d81715c36d5", "committedDate": "2020-06-23T14:21:35Z", "message": "add license header for files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2d6999b1e7df7d26ed0c75e1eb73bca28f9c789", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/e2d6999b1e7df7d26ed0c75e1eb73bca28f9c789", "committedDate": "2020-06-23T10:25:00Z", "message": "add license header to the files"}, "afterCommit": {"oid": "c8b3efc8745e5db33599be1200b18d81715c36d5", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/c8b3efc8745e5db33599be1200b18d81715c36d5", "committedDate": "2020-06-23T14:21:35Z", "message": "add license header for files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef", "author": {"user": {"login": "chashikajw", "name": "Chashika Weerathunga"}}, "url": "https://github.com/wso2/product-microgateway/commit/29a8f7aceb7ca7147dbd794eb2317f3189279fef", "committedDate": "2020-06-24T06:02:15Z", "message": "add log file folder and change log update message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjE4NzYx", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-581218761", "createdAt": "2021-02-02T10:54:09Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1NDowOVrOIeK8LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1NDowOVrOIeK8LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUwNzQzNw==", "bodyText": "Any reason for this empty line here? related to go specific formatting?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r568507437", "createdAt": "2021-02-02T10:54:09Z", "author": {"login": "Ketharan"}, "path": "configs/confTypes/logtypes.go", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package confTypes\n+\n+type pkg struct {\n+\tName     string\n+\tLogLevel string\n+}\n+\n+type accessLog struct {\n+\tLogFile string\n+\tFormat string\n+}\n+\n+// The log configuration struct.\n+type LogConfig struct {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjE5ODY2", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-581219866", "createdAt": "2021-02-02T10:55:29Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1NTozMFrOIeK_eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1NTozMFrOIeK_eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUwODI4MA==", "bodyText": "shall we remove this?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r568508280", "createdAt": "2021-02-02T10:55:30Z", "author": {"login": "Ketharan"}, "path": "configs/tomlConfigParser.go", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package configs\n+\n+import (\n+\t\"github.com/BurntSushi/toml\"\n+\tlogger \"github.com/sirupsen/logrus\"\n+\tconfig \"github.com/wso2/micro-gw/configs/confTypes\"\n+\t\"io/ioutil\"\n+\t\"os\"\n+\t\"sync\"\n+)\n+var (\n+\tonce_c sync.Once\n+\tonce_lc sync.Once\n+\tconfigs *config.Config\n+\tlogConfigs *config.LogConfig\n+\te error\n+)\n+\n+/**\n+ * Read the control plane main configs.\n+ *\n+ * @return *config.Config Reference for config instance\n+ * @return *error Error\n+ */\n+func ReadConfigs() (*config.Config, error) {\n+\tonce_c.Do(func() {\n+\t\tconfigs = new(config.Config)\n+\t\tmgwHome, _ := os.Getwd()\n+\t\tlogger.Info(\"MGW_HOME: \", mgwHome)\n+\t\t_, err := os.Stat(mgwHome + \"/resources/conf/config.toml\")\n+\t\tif err != nil {\n+\t\t\tlogger.Fatal(\"Configuration file not found.\", err)\n+\t\t}\n+\t\tcontent, readErr := ioutil.ReadFile(mgwHome + \"/resources/conf/config.toml\")\n+\t\tif readErr != nil {\n+\t\t\tlogger.Fatal(\"Error reading configurations. \", readErr)\n+\t\t}\n+\t\t_, e = toml.Decode(string(content), configs)\n+\t})\n+\n+\treturn configs, e\n+}\n+\n+/**\n+ * Read the control plane log configs.\n+ *\n+ * @return *config.LogConfig Reference for log config instance\n+ * @return *error Error\n+ */\n+func ReadLogConfigs() (*config.LogConfig, error) {\n+\tonce_lc.Do(func() {\n+\t\tlogConfigs = new(config.LogConfig)\n+\t\tmgwHome, _ := os.Getwd()\n+\t\t//logger.Info(\"MGW_HOME: \", mgwHome)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjIyMDEw", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-581222010", "createdAt": "2021-02-02T10:58:10Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1ODoxMVrOIeLGdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1ODoxMVrOIeLGdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUxMDA2OA==", "bodyText": "Any reason to keep these codes commented rather be removed? is this work in the initial phase?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r568510068", "createdAt": "2021-02-02T10:58:11Z", "author": {"login": "Ketharan"}, "path": "internal/pkg/api/APIServer.go", "diffHunk": "@@ -36,17 +40,17 @@ func Start(config *confTypes.Config) {\n \tapiRouter.HandleFunc(\"/add\", apiService.ApiPOST).Methods(\"POST\")\n \t// TODO: Immplement\n \t//Configuration specific routes\n-\t//configRouter := router.PathPrefix(\"/config\").Subrouter()\n+\t//configRouter := router.PathPrefix(\"/configs\").Subrouter()\n \t//\n \t//authRouter := router.PathPrefix(\"/apikey\").Subrouter()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjIyOTgw", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-581222980", "createdAt": "2021-02-02T10:59:29Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1OToyOVrOIeLJhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMDo1OToyOVrOIeLJhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUxMDg1NQ==", "bodyText": "Any reason for the indentation level change?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r568510855", "createdAt": "2021-02-02T10:59:29Z", "author": {"login": "Ketharan"}, "path": "internal/pkg/logging/logConstants.go", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package logging\n+\n+import \"github.com/sirupsen/logrus\"\n+\n+const (\n+    //LOG_FILE_NAME = \"resources/logs/microgateway.log\"\n+    DEFAULT_LOG_LEVEL = logrus.InfoLevel\n+\n+    //log levels\n+\tLEVEL_PANIC = \"PANC\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMjI1ODk0", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-581225894", "createdAt": "2021-02-02T11:03:07Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMTowMzowN1rOIeLSYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxMTowMzowN1rOIeLSYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODUxMzEyMA==", "bodyText": "new line at the EOF?", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r568513120", "createdAt": "2021-02-02T11:03:07Z", "author": {"login": "Ketharan"}, "path": "internal/pkg/oasparser/envoyCodegen/listener.go", "diffHunk": "@@ -109,15 +143,77 @@ func CreateVirtualHost(vHost_Name string, routes []*v2route.Route) (v2route.Virt\n \treturn virtual_host, nil\n }\n \n-func createAddress(remoteHost string, Port uint32) core.Address {\n+/**\n+ * Create a socket address.\n+ *\n+ * @param remoteHost  Host address or host ip\n+ * @param port  Port\n+ * @return core.Address  Endpoint as a core address\n+ */\n+func createAddress(remoteHost string, port uint32) core.Address {\n \taddress := core.Address{Address: &core.Address_SocketAddress{\n \t\tSocketAddress: &core.SocketAddress{\n \t\t\tAddress:  remoteHost,\n \t\t\tProtocol: core.SocketAddress_TCP,\n \t\t\tPortSpecifier: &core.SocketAddress_PortValue{\n-\t\t\t\tPortValue: uint32(Port),\n+\t\t\t\tPortValue: uint32(port),\n \t\t\t},\n \t\t},\n \t}}\n \treturn address\n }\n+\n+/**\n+ * Get access log configs for envoy.\n+ *\n+ * @return envoy_config_filter_accesslog_v2.AccessLog  Access log config\n+ */\n+func getAccessLogConfigs() envoy_config_filter_accesslog_v2.AccessLog {\n+\tlogFormat := \"\"\n+\n+\tlogConfig := &structpb.Struct{\n+\t\tFields: map[string]*structpb.Value{\n+\t\t\t\"path\": {\n+\t\t\t\tKind: &structpb.Value_StringValue{\n+\t\t\t\t\tStringValue: \"/tmp/envoy.access.log\",\n+\t\t\t\t},\n+\t\t\t},\n+\t\t},\n+\t}\n+\n+\tlogConf, errReadConfig := configs.ReadLogConfigs()\n+\tif errReadConfig != nil {\n+\t\tlogger.LoggerOasparser.Error(\"Error loading configuration. \", errReadConfig)\n+\t} else {\n+\t\tlogFormat = logConf.AccessLogs.Format\n+\t}\n+\n+\tif logFormat != \"\" {\n+\t\tlogConfig = &structpb.Struct{\n+\t\t\tFields: map[string]*structpb.Value{\n+\t\t\t\t\"path\": {\n+\t\t\t\t\tKind: &structpb.Value_StringValue{\n+\t\t\t\t\t\tStringValue: \"/tmp/envoy.access.log\",\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t\t\"format\": {\n+\t\t\t\t\tKind: &structpb.Value_StringValue{\n+\t\t\t\t\t\tStringValue: logConf.AccessLogs.Format,\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t}\n+\t}\n+\n+\taccess_log := envoy_config_filter_accesslog_v2.AccessLog{\n+\t\tName:                 \"envoy.file_access_log\",\n+\t\tConfigType: &envoy_config_filter_accesslog_v2.AccessLog_Config{\n+\t\t\tConfig: logConfig,\n+\t\t} ,\n+\t\tXXX_NoUnkeyedLiteral: struct{}{},\n+\t\tXXX_unrecognized:     nil,\n+\t\tXXX_sizecache:        0,\n+\t}\n+\n+\treturn access_log\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 181}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg1MDMzMjkz", "url": "https://github.com/wso2/product-microgateway/pull/1288#pullrequestreview-585033293", "createdAt": "2021-02-07T16:46:47Z", "commit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxNjo0Njo0N1rOIhKb6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wN1QxNjo0Njo0N1rOIhKb6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTY0NDkwNg==", "bodyText": "additional new line", "url": "https://github.com/wso2/product-microgateway/pull/1288#discussion_r571644906", "createdAt": "2021-02-07T16:46:47Z", "author": {"login": "VirajSalaka"}, "path": "internal/pkg/mgw/mgw.go", "diffHunk": "@@ -192,40 +145,54 @@ func updateEnvoy(location string) {\n \tlisteners, clusters, routes, endpoints := oasParser.GetProductionSources(location)\n \n \tatomic.AddInt32(&version, 1)\n-\tlog.Infof(\">>>>>>>>>>>>>>>>>>> creating snapshot Version \" + fmt.Sprint(version))\n+\tlogger.LoggerMgw.Infof(\">>>>>>>>>>>>>>>>>>> creating snapshot Version \" + fmt.Sprint(version))\n \tsnap := cachev2.NewSnapshot(fmt.Sprint(version), endpoints, clusters, routes, listeners, nil)\n \tsnap.Consistent()\n \n \terr := cache.SetSnapshot(nodeId, snap)\n \tif err != nil {\n-\t\tlogrus.Error(err)\n+\t\tlogger.LoggerMgw.Error(err)\n \t}\n }\n \n-// Run the management grpc server.\n+/**\n+ * Run the management grpc server.\n+ *\n+ * @param conf  Swagger files location\n+ */\n func Run(conf *mgwconfig.Config) {\n \tsig := make(chan os.Signal)\n \tsignal.Notify(sig, os.Interrupt)\n \twatcher, _ := fsnotify.NewWatcher()\n \terr := watcher.Add(conf.Apis.Location)\n \n \tif err != nil {\n-\t\tlogrus.Panic(\"Error reading the api definitions.\", err)\n+\t\tlogger.LoggerMgw.Fatal(\"Error reading the api definitions.\", err)\n \t}\n \n \tflag.Parse()\n-\tif debug {\n-\t\tlogrus.SetLevel(logrus.DebugLevel)\n-\t}\n+\n \tctx, cancel := context.WithCancel(context.Background())\n \tdefer cancel()\n \n-\tlogrus.Printf(\"Starting control plane\")\n+\t//log config watcher\n+\twatcherLogConf, _ := fsnotify.NewWatcher()\n+\terrC := watcherLogConf.Add(\"resources/conf/log_config.toml\")\n+\n+\tif errC != nil {\n+\t\tlogger.LoggerMgw.Fatal(\"Error reading the log configs. \", err)\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a8f7aceb7ca7147dbd794eb2317f3189279fef"}, "originalPosition": 205}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1115, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}