{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNDI2Mjgz", "number": 926, "title": "Add changes to solve throttling filter issue with throttle window ", "bodyText": "Purpose\nTo solve the throttling filter issue with throttle window", "createdAt": "2020-01-08T12:07:49Z", "url": "https://github.com/wso2/product-microgateway/pull/926", "merged": true, "mergeCommit": {"oid": "cab72cb6e16cf56ae36c04cedcf5ec27bf7f8f43"}, "closed": true, "closedAt": "2020-01-13T09:29:19Z", "author": {"login": "tharmini"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4TUICAH2gAyMzYwNDI2MjgzOmNhMWI0NGJlNTBkM2VkNzgwODc1NmIxMDdjMzczNGY3YWE5N2JjYjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb54o8WgH2gAyMzYwNDI2MjgzOjc0NzkyZGIyZTM2MzU1OGNkNGJlOTNiZjI3MDgyOGU3YzE4MjY2NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1", "author": {"user": {"login": "tharmini", "name": "Tharmini Thalayasingam"}}, "url": "https://github.com/wso2/product-microgateway/commit/ca1b44be50d3ed7808756b107c3734f7aa97bcb1", "committedDate": "2020-01-08T11:04:52Z", "message": "Add changes to solve throttling issue with throttle window"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjMxNTc1", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341631575", "createdAt": "2020-01-13T03:52:08Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1MjowOFrOFcs81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1MjowOFrOFcs81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0MDkxNw==", "bodyText": "Can't we use the request stream and gateway:RequestStreamDTO instead of defining new streams and dtos", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365640917", "createdAt": "2020-01-13T03:52:08Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/resources/templates/policy.mustache", "diffHunk": "@@ -1,54 +1,19 @@\n import wso2/gateway;\n \n-stream<gateway:IntermediateStream> s{{name}}intermediateStream = new;\n-stream<gateway:GlobalThrottleStreamDTO> s{{name}}resultStream = new;\n-stream<gateway:EligibilityStreamDTO> s{{name}}eligibilityStream = new;\n-stream<gateway:RequestStreamDTO> s{{name}}reqCopy= gateway:getRequestStream();\n-stream<gateway:GlobalThrottleStreamDTO> s{{name}}globalThrotCopy = gateway:getGlobalThrottleStream();\n+stream<gateway:InputRequest> s{{name}}inputStream =gateway:getinputStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjMxOTMy", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341631932", "createdAt": "2020-01-13T03:54:49Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1NDo0OVrOFcs92g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1NDo0OVrOFcs92g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0MTE3OA==", "bodyText": "Check the formatting of the function. Seems like too much indentation", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365641178", "createdAt": "2020-01-13T03:54:49Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/throttle_filter.bal", "diffHunk": "@@ -302,53 +302,57 @@ function isRequestBlocked(http:Caller caller, http:Request request, http:FilterC\n }\n \n function generateThrottleEvent(http:Request req, http:FilterContext context, AuthenticationContext keyValidationDto)\n-returns (RequestStreamDTO) {\n-    RequestStreamDTO requestStreamDto = {};\n-    string? apiVersion = getVersion(context);\n-    requestStreamDto.messageID = <string>context.attributes[MESSAGE_ID];\n-    requestStreamDto.apiKey = getContext(context);\n-    requestStreamDto.appKey = keyValidationDto.applicationId + \":\" + keyValidationDto.username;\n-    requestStreamDto.subscriptionKey = keyValidationDto.applicationId + \":\" + getContext(context);\n-    requestStreamDto.appTier = keyValidationDto.applicationTier;\n-    requestStreamDto.apiTier = keyValidationDto.apiTier;\n-    requestStreamDto.subscriptionTier = keyValidationDto.tier;\n-    string resourcekey = context.getResourceName();\n-    requestStreamDto.resourceKey = replaceAll(resourcekey, \"_\", \"\");\n-    TierConfiguration? tier = resourceTierAnnotationMap[resourcekey];\n-    string? policy = (tier is TierConfiguration) ? tier.policy : ();\n-    if (policy is string) {\n-        requestStreamDto.resourceTier = policy;\n-    }\n+returns (InputRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjMyMDYx", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341632061", "createdAt": "2020-01-13T03:55:55Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1NTo1NVrOFcs-OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1NTo1NVrOFcs-OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0MTI3Mw==", "bodyText": "Can't we use the global throttle stream instead of new outputstream", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365641273", "createdAt": "2020-01-13T03:55:55Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/throttle_util.bal", "diffHunk": "@@ -14,12 +14,12 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-import ballerina/time;\n import wso2/jms;\n \n map<string> blockConditions = {};\n map<any> throttleDataMap = {};\n-stream<RequestStreamDTO> requestStream = new;\n+stream<InputRequest> inputStream =new;\n+stream<ThrottledRequest> outputStream = new;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjMyMzg5", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341632389", "createdAt": "2020-01-13T03:58:43Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1ODo0M1rOFcs_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzo1ODo0M1rOFcs_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0MTUzOQ==", "bodyText": "Please correct the formatting issue", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365641539", "createdAt": "2020-01-13T03:58:43Z", "author": {"login": "hasuniea"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/constants.bal", "diffHunk": "@@ -50,6 +50,7 @@ public const string AUTHENTICATION_CONTEXT = \"AUTHENTICATION_CONTEXT\";\n public const string SUPER_TENANT_DOMAIN_NAME = \"carbon.super\";\n public const int SUPER_TENANT_ID = -1234;\n public const string THROTTLE_KEY = \"throttleKey\";\n+public const string POLICY_KEY=\"policyKey\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjM1NjAz", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341635603", "createdAt": "2020-01-13T04:25:58Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyNTo1OVrOFctJpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyNTo1OVrOFctJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDE5OQ==", "bodyText": "Suggested change", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365644199", "createdAt": "2020-01-13T04:25:59Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/throttle_event_listener.bal", "diffHunk": "@@ -59,6 +64,7 @@ service messageServ = service {\n     }\n };\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjM1NzI1", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341635725", "createdAt": "2020-01-13T04:27:03Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyNzowM1rOFctKBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDoyNzowM1rOFctKBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDI5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #x", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365644295", "createdAt": "2020-01-13T04:27:03Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/throttler/throttle_window.bal", "diffHunk": "@@ -0,0 +1,248 @@\n+// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/time;\n+import ballerina/task;\n+import ballerina/streams;\n+\n+# ThrottleWindow `throttle(quota, windowSize, partitionAttr)` is a fixed rate time window, which keeps track of\n+# number of events received (per partition) for a given time period, and notifies whether that number exceeds a given\n+# quota. And this window will gets updated and emit current events for every input event.\n+#\n+# E.g.\n+#       type Request record {\n+#           string ip;\n+#           int resetTimestamp = 0;      // Since ThrottleWindow injects resetTimestamp, remainingQuota\n+#           int remainingQuota = 0;      // & isThrottled within the window, we need fields\n+#           boolean isThrottled = false; // to refer to that in selector.\n+#       };\n+#\n+#       type ThrottledRequest record{\n+#           string ip;\n+#           int? resetTimestamp;    // Since ThrottleWindow injects resetTimestamp, remainingQuota\n+#           int? remainingQuota;    // & isThrottled within the window, we need fields\n+#           boolean? isThrottled;   // to refer to that in selector.\n+#       };\n+#\n+#       stream<Request> inputStream = new;\n+#       stream<ThrottledRequest > outputStream = new;\n+#       stream<ThrottledRequest > finaloutputStream = new;\n+#\n+#       forever {\n+#           from inputStream window throttle(5, 1000, inputStream.name)\n+#           select inputStream.ip, inputStream.resetTimestamp, inputStream.remainingQuota, inputStream.isThrottled\n+#           => (ThrottledRequest [] requests) {\n+#               foreach var r in requests {\n+#                   outputStream.publish(r);\n+#               }\n+#           }\n+#       }\n+#\n+#\n+#\n+# + quota - quota limit\n+# + windowSizeInMilliSeconds - size of the window in ms\n+# + initialDelayInMilliSeconds - time until the first scheduled event\n+# + partitionAttribute - partition attribute (i.e ip address, session, etc)\n+# + windowParameters - params for the window\n+# + nextProcessPointer - next processor pointer\n+# + scheduler - scheduler which emits timer events\n+# + counts - counts map to hold current event count per partition\n+#\n+#x", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjM2NTU5", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341636559", "createdAt": "2020-01-13T04:33:12Z", "commit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDozMzoxM1rOFctMgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNDozMzoxM1rOFctMgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NDkyOQ==", "bodyText": "Fix indentation and formatting issues. You can use 'Ballerina format \"file name\"' command.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    throttleDataMap[throttleEvent.policyKey] = throttleEvent;\n          \n          \n            \n                        throttleDataMap[throttleEvent.policyKey] = throttleEvent;", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365644929", "createdAt": "2020-01-13T04:33:13Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/throttle_util.bal", "diffHunk": "@@ -57,54 +57,52 @@ public function isRequestThrottled(string key) returns [boolean, boolean] {\n     printDebug(KEY_THROTTLE_UTIL, \"throttle data key : \" + key);\n     boolean isThrottled = throttleDataMap.hasKey(key);\n     if (isThrottled) {\n-        int currentTime = time:currentTime().time;\n-        GlobalThrottleStreamDTO dto = <GlobalThrottleStreamDTO>throttleDataMap[key];\n-        int timeStamp = dto.expiryTimeStamp;\n+        ThrottledRequest dto = <ThrottledRequest>throttleDataMap[key];\n         boolean stopOnQuota = dto.stopOnQuota;\n         if (enabledGlobalTMEventPublishing == true) {\n             stopOnQuota = true;\n-        }\n-        if (timeStamp >= currentTime) {\n             return [isThrottled, stopOnQuota];\n-        } else {\n-            var value = throttleDataMap.remove(key);\n-            return [false, stopOnQuota];\n         }\n+        return [isThrottled, stopOnQuota];\n     }\n     return [isThrottled, false];\n }\n \n-public function publishNonThrottleEvent(RequestStreamDTO throttleEvent) {\n+public function publishNonThrottleEvent(InputRequest throttleEvent) {\n     //Publish throttle event to traffic manager\n     if (enabledGlobalTMEventPublishing == true) {\n         publishThrottleEventToTrafficManager(throttleEvent);\n         printDebug(KEY_THROTTLE_UTIL, \"Throttle out event is sent to the traffic manager.\");\n     }\n     //Publish throttle event to internal policies\n     else {\n-        requestStream.publish(throttleEvent);\n-        printDebug(KEY_THROTTLE_UTIL, \"Request stream : \" + requestStream.toString());\n+        inputStream.publish(throttleEvent);\n+        printDebug(KEY_THROTTLE_UTIL, \"Request stream : \" + inputStream.toString());\n         printDebug(KEY_THROTTLE_UTIL, \"Throttle out event is sent to the queue.\");\n     }\n }\n \n public function initializeThrottleSubscription() {\n-    globalThrottleStream.subscribe(onReceiveThrottleEvent);\n+    outputStream.subscribe(onReceiveThrottleEvent);\n     isStreamsInitialized = true;\n     printDebug(KEY_THROTTLE_UTIL, \"Successfully subscribed global throttle stream.\");\n }\n \n-//public function getInitThrottleSubscriptionFuture() returns future<()>{\n-//return ftr;\n-//}\n-public function onReceiveThrottleEvent(GlobalThrottleStreamDTO throttleEvent) {\n-    printDebug(KEY_THROTTLE_UTIL, \"Event GlobalThrottleStream: throttleKey: \" + throttleEvent.throttleKey +\n-    \" ,isThrottled:\" + throttleEvent.isThrottled.toString() + \",expiryTimeStamp:\" + throttleEvent.expiryTimeStamp.toString());\n+\n+// insert throttleevent into the map if it is throttled other wise remove the throttle key it from the throttledata map\n+\n+public function onReceiveThrottleEvent(ThrottledRequest throttleEvent) {\n+    printDebug(KEY_THROTTLE_UTIL, \"Event OutputThrottleStream: throttleKey: \" + throttleEvent.policyKey +\n+    \" ,isThrottled:\" + throttleEvent.isThrottled.toString() );\n     if (throttleEvent.isThrottled) {\n-        throttleDataMap[throttleEvent.throttleKey] = throttleEvent;\n+        if(throttleEvent.policyKey.length() > 0  ){\n+        throttleDataMap[throttleEvent.policyKey] = throttleEvent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b44be50d3ed7808756b107c3734f7aa97bcb1"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d", "author": {"user": {"login": "tharmini", "name": "Tharmini Thalayasingam"}}, "url": "https://github.com/wso2/product-microgateway/commit/8c02cd8464492c0a9e1389477f28021e55bafe1d", "committedDate": "2020-01-13T06:20:29Z", "message": "Refactor code with suggested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjUyMzU1", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341652355", "createdAt": "2020-01-13T06:23:36Z", "commit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyMzozNlrOFct_IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyMzozNlrOFct_IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1Nzg4OA==", "bodyText": "default value should be true", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365657888", "createdAt": "2020-01-13T06:23:36Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/dtos/throttle_dtos.bal", "diffHunk": "@@ -72,3 +45,36 @@ public type IntermediateStream record {\n     boolean stopOnQuota = false;\n     int expiryTimeStamp = 0;\n };\n+\n+public type RequestStreamDTO record {\n+    int resetTimestamp = 0;\n+    int remainingQuota = 0;\n+    boolean isThrottled = false;\n+    string messageID = \"\";\n+    string apiKey = \"\";\n+    string appKey = \"\";\n+    boolean stopOnQuota = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjUyNDEz", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341652413", "createdAt": "2020-01-13T06:23:55Z", "commit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyMzo1NVrOFct_SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyMzo1NVrOFct_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1NzkyOQ==", "bodyText": "default value should be true", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365657929", "createdAt": "2020-01-13T06:23:55Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/dtos/throttle_dtos.bal", "diffHunk": "@@ -72,3 +45,36 @@ public type IntermediateStream record {\n     boolean stopOnQuota = false;\n     int expiryTimeStamp = 0;\n };\n+\n+public type RequestStreamDTO record {\n+    int resetTimestamp = 0;\n+    int remainingQuota = 0;\n+    boolean isThrottled = false;\n+    string messageID = \"\";\n+    string apiKey = \"\";\n+    string appKey = \"\";\n+    boolean stopOnQuota = false;\n+    string subscriptionKey = \"\";\n+    string policyKey = \"\";\n+    string appTier = \"\";\n+    string apiTier = \"\";\n+    string subscriptionTier = \"\";\n+    string resourceKey = \"\";\n+    string resourceTier = \"\";\n+    string userId = \"\";\n+    string apiContext = \"\";\n+    string apiVersion = \"\";\n+    string appTenant = \"\";\n+    string apiTenant = \"\";\n+    string appId = \"\";\n+    string apiName = \"\";\n+    string properties = \"\";\n+};\n+\n+public type GlobalThrottleStreamDTO record {\n+    string policyKey = \"\";\n+    boolean stopOnQuota = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjUyNzM3", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341652737", "createdAt": "2020-01-13T06:25:36Z", "commit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyNTozNlrOFcuANA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyNTozNlrOFcuANA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1ODE2NA==", "bodyText": "Use the proper method name conventions", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365658164", "createdAt": "2020-01-13T06:25:36Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/throttle_util.bal", "diffHunk": "@@ -145,15 +140,14 @@ public function isPolicyExist(map<boolean> deployedPolicies, string policyName)\n     return true;\n }\n \n-public function getRequestStream() returns stream<RequestStreamDTO> {\n+public function getrequestStream() returns stream<RequestStreamDTO> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjUyNzcx", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341652771", "createdAt": "2020-01-13T06:25:44Z", "commit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyNTo0NVrOFcuASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNjoyNTo0NVrOFcuASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1ODE4NA==", "bodyText": "Use the proper method name conventions", "url": "https://github.com/wso2/product-microgateway/pull/926#discussion_r365658184", "createdAt": "2020-01-13T06:25:45Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/throttle_util.bal", "diffHunk": "@@ -145,15 +140,14 @@ public function isPolicyExist(map<boolean> deployedPolicies, string policyName)\n     return true;\n }\n \n-public function getRequestStream() returns stream<RequestStreamDTO> {\n+public function getrequestStream() returns stream<RequestStreamDTO> {\n     return requestStream;\n }\n \n-public function getGlobalThrottleStream() returns stream<GlobalThrottleStreamDTO> {\n+public function getglobalThrottleStream() returns stream<GlobalThrottleStreamDTO> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c02cd8464492c0a9e1389477f28021e55bafe1d"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7337ba67df43be716e10d3cf838dc00bca36be89", "author": {"user": {"login": "tharmini", "name": "Tharmini Thalayasingam"}}, "url": "https://github.com/wso2/product-microgateway/commit/7337ba67df43be716e10d3cf838dc00bca36be89", "committedDate": "2020-01-13T07:59:36Z", "message": "Refactor code with suggested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjgyNzQ5", "url": "https://github.com/wso2/product-microgateway/pull/926#pullrequestreview-341682749", "createdAt": "2020-01-13T08:20:15Z", "commit": {"oid": "7337ba67df43be716e10d3cf838dc00bca36be89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74792db2e363558cd4be93bf270828e7c1826672", "author": {"user": {"login": "tharmini", "name": "Tharmini Thalayasingam"}}, "url": "https://github.com/wso2/product-microgateway/commit/74792db2e363558cd4be93bf270828e7c1826672", "committedDate": "2020-01-13T09:08:01Z", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into throttle_window"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1218, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}