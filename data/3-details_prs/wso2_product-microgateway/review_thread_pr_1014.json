{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTMxNDQz", "number": 1014, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTo0ODo0NFrODhYqAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTo0ODo0NFrODhYqAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MzMzNTcxOnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTo0ODo0NVrOFsF8vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwNTo1NzoxNVrOFsGN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3OTEzNA==", "bodyText": "Lets remove this line. Since pre auth filter is doing this", "url": "https://github.com/wso2/product-microgateway/pull/1014#discussion_r381779134", "createdAt": "2020-02-20T05:48:45Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/authz_filter.bal", "diffHunk": "@@ -34,33 +34,28 @@ public type OAuthzFilter object {\n             printDebug(KEY_AUTHZ_FILTER, \"Skip all filter annotation set in the service. Skip the filter\");\n             return true;\n         }\n-        string checkAuthentication = getConfigValue(MTSL_CONF_INSTANCE_ID, MTSL_CONF_SSLVERIFYCLIENT, DEFAULT_SSL_VERIFY_CLIENT);\n-        if (checkAuthentication != \"require\") {\n-            //Setting UUID\n-            int startingTime = getCurrentTime();\n-            checkOrSetMessageID(context);\n-            printDebug(KEY_AUTHZ_FILTER, \"Processing request via Authorization filter.\");\n-            runtime:AuthenticationContext? authContext = runtime:getInvocationContext()?.authenticationContext;\n-            boolean result = true;\n-            if (authContext is runtime:AuthenticationContext) {\n-                string? authScheme = authContext?.scheme;\n-                // scope validation is done in authn filter for oauth2, hence we only need to\n-                //validate scopes if auth scheme is jwt.\n-                if (authScheme is string && authScheme == AUTH_SCHEME_JWT) {\n-                    //Start a new child span for the span.\n-                    int | error | () balSpan = startSpan(BALLERINA_AUTHZ_FILTER);\n-                    result = self.authzFilter.filterRequest(caller, request, context);\n-                    //finishing span\n-                    finishSpan(BALLERINA_AUTHZ_FILTER, balSpan);\n-                }\n+        //Setting UUID\n+        int startingTime = getCurrentTime();\n+        checkOrSetMessageID(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928dc4f181cc14f1f9da078c95984927035ccd64"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc4MzUwOQ==", "bodyText": "Fixed. Thanks", "url": "https://github.com/wso2/product-microgateway/pull/1014#discussion_r381783509", "createdAt": "2020-02-20T05:57:15Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/filters/authz_filter.bal", "diffHunk": "@@ -34,33 +34,28 @@ public type OAuthzFilter object {\n             printDebug(KEY_AUTHZ_FILTER, \"Skip all filter annotation set in the service. Skip the filter\");\n             return true;\n         }\n-        string checkAuthentication = getConfigValue(MTSL_CONF_INSTANCE_ID, MTSL_CONF_SSLVERIFYCLIENT, DEFAULT_SSL_VERIFY_CLIENT);\n-        if (checkAuthentication != \"require\") {\n-            //Setting UUID\n-            int startingTime = getCurrentTime();\n-            checkOrSetMessageID(context);\n-            printDebug(KEY_AUTHZ_FILTER, \"Processing request via Authorization filter.\");\n-            runtime:AuthenticationContext? authContext = runtime:getInvocationContext()?.authenticationContext;\n-            boolean result = true;\n-            if (authContext is runtime:AuthenticationContext) {\n-                string? authScheme = authContext?.scheme;\n-                // scope validation is done in authn filter for oauth2, hence we only need to\n-                //validate scopes if auth scheme is jwt.\n-                if (authScheme is string && authScheme == AUTH_SCHEME_JWT) {\n-                    //Start a new child span for the span.\n-                    int | error | () balSpan = startSpan(BALLERINA_AUTHZ_FILTER);\n-                    result = self.authzFilter.filterRequest(caller, request, context);\n-                    //finishing span\n-                    finishSpan(BALLERINA_AUTHZ_FILTER, balSpan);\n-                }\n+        //Setting UUID\n+        int startingTime = getCurrentTime();\n+        checkOrSetMessageID(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTc3OTEzNA=="}, "originalCommit": {"oid": "928dc4f181cc14f1f9da078c95984927035ccd64"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1294, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}