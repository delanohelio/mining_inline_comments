{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODE0Njc5", "number": 948, "title": "Set default values for configs", "bodyText": "Purpose\n\nIssues\n\n#947\nAutomation tests\n\nUnit tests added: Yes/No\nIntegration tests added: Yes/No\n\nTested environments\n\nNot Tested\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-01-22T11:55:54Z", "url": "https://github.com/wso2/product-microgateway/pull/948", "merged": true, "mergeCommit": {"oid": "d0ee3fb1036f303111f0a9c1ede2e6f3b114b623"}, "closed": true, "closedAt": "2020-01-23T07:43:43Z", "author": {"login": "AmaliMatharaarachchi"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb80VcKAH2gAyMzY1ODE0Njc5OjA3ZDA3YmY1MTYyNzkyNDI0NDAwNjEwNjkyYTExOGI0MDlmM2ExMWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9El87gFqTM0NzA4NTUzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07d07bf5162792424400610692a118b409f3a11a", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/07d07bf5162792424400610692a118b409f3a11a", "committedDate": "2020-01-22T11:48:52Z", "message": "Set default values for configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTM5NDEy", "url": "https://github.com/wso2/product-microgateway/pull/948#pullrequestreview-346539412", "createdAt": "2020-01-22T12:08:05Z", "commit": {"oid": "07d07bf5162792424400610692a118b409f3a11a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjowODowNVrOFgZ6XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjowODowNVrOFgZ6XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMzI5Mw==", "bodyText": "indentation issue", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369523293", "createdAt": "2020-01-22T12:08:05Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/resources/templates/jwtRevocation.mustache", "diffHunk": "@@ -2,7 +2,7 @@ map<string> receivedRevokedTokenMap = gateway:getRevokedTokenMap();\n     boolean jmsListenerStarted = gateway:initiateTokenRevocationJmsListener();\n \n     boolean useDefault = gateway:getConfigBooleanValue(gateway:PERSISTENT_MESSAGE_INSTANCE_ID,\n-    gateway:PERSISTENT_USE_DEFAULT, false);\n+        gateway:PERSISTENT_USE_DEFAULT, gateway:DEFAULT_PERSISTENT_USE_DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07d07bf5162792424400610692a118b409f3a11a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/56f36a2b2b3f9fb39209669b57461faf392b833e", "committedDate": "2020-01-23T04:07:52Z", "message": "remove observability config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDUwMTUw", "url": "https://github.com/wso2/product-microgateway/pull/948#pullrequestreview-347050150", "createdAt": "2020-01-23T04:15:40Z", "commit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDoxNTo0MFrOFgyaxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTowMjoyOFrOFgy26Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyNDgwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Copyright (c)  WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n            // Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369924806", "createdAt": "2020-01-23T04:15:40Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/micro_gw_conf_defaults.bal", "diffHunk": "@@ -0,0 +1,93 @@\n+// Copyright (c)  WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyNjY3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public const string DEFAULT_TRUST_STORE_PASSWORD = \"ballerina\";\n          \n          \n            \n            public const string DEFAULT_TRUST_STORE_PASSWORD = DEFAULT_TRUST_STORE_PATH;", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369926679", "createdAt": "2020-01-23T04:27:25Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/micro_gw_conf_defaults.bal", "diffHunk": "@@ -0,0 +1,93 @@\n+// Copyright (c)  WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// default should bind to 0.0.0.0, not localhost. Else will not work in dockerized environments.\n+public const string DEFAULT_CONF_HOST = \"0.0.0.0\";\n+public const int DEFAULT_HTTP_PORT = 9090;\n+public const int DEFAULT_HTTPS_PORT = 9095;\n+public const string DEFAULT_KEY_STORE_PATH = \"${ballerina.home}/bre/security/ballerinaKeystore.p12\";\n+public const string DEFAULT_KEY_STORE_PASSWORD = \"ballerina\";\n+public const string DEFAULT_TRUST_STORE_PATH = \"${ballerina.home}/bre/security/ballerinaTruststore.p12\";\n+public const string DEFAULT_TRUST_STORE_PASSWORD = \"ballerina\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyODg4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    printDebug(KEY_TOKEN_REVOCATION_JMS, \"token revoked jms Message Received\");\n          \n          \n            \n                    printDebug(KEY_TOKEN_REVOCATION_JMS, \"Token revoked jms Message Received\");", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369928881", "createdAt": "2020-01-23T04:41:57Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/services/token_revocation_event_listener.bal", "diffHunk": "@@ -1,102 +1,100 @@\n- // Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- //\n- // WSO2 Inc. licenses this file to you under the Apache License,\n- // Version 2.0 (the \"License\"); you may not use this file except\n- // in compliance with the License.\n- // You may obtain a copy of the License at\n- //\n- // http://www.apache.org/licenses/LICENSE-2.0\n- //\n- // Unless required by applicable law or agreed to in writing,\n- // software distributed under the License is distributed on an\n- // \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- // KIND, either express or implied.  See the License for the\n- // specific language governing permissions and limitations\n- // under the License.\n+// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n \n- import wso2/jms;\n+import wso2/jms;\n \n- string jmsConnectioninitialContextFactoryTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID,\n-REALTIME_JMS_CONNECTION_INITIAL_CONTEXT_FACTORY,\n-\"bmbInitialContextFactory\");\n- string jmsConnectionProviderUrlTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID,\n- REALTIME_JMS_CONNECTION_PROVIDER_URL,\n-\"amqp://admin:admin@carbon/carbon?brokerlist='tcp://localhost:5672'\");\n- string jmsConnectionPasswordTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID,\n- REALTIME_JMS_CONNECTION_PASSWORD, \"\");\n- string jmsConnectionUsernameTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID,\n- REALTIME_JMS_CONNECTION_USERNAME, \"\");\n- string tokenRevocationJMSTopic = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID,\n- REALTIME_JMS_CONNECTION_TOPIC, \"jwtRevocation\");\n+string jmsConnectioninitialContextFactoryTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID, \n+    JMS_CONNECTION_INITIAL_CONTEXT_FACTORY, DEFAULT_JMS_CONNECTION_INITIAL_CONTEXT_FACTORY);\n+string jmsConnectionProviderUrlTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID, JMS_CONNECTION_PROVIDER_URL,\n+    DEFAULT_JMS_CONNECTION_PROVIDER_URL);\n+string jmsConnectionPasswordTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID, JMS_CONNECTION_PASSWORD, \n+    DEFAULT_JMS_CONNECTION_PASSWORD);\n+string jmsConnectionUsernameTokenRevocation = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID, JMS_CONNECTION_USERNAME, \n+    DEFAULT_JMS_CONNECTION_USERNAME);\n+string tokenRevocationJMSTopic = getConfigValue(REALTIME_MESSAGE_INSTANCE_ID, REALTIME_JMS_CONNECTION_TOPIC, \n+    DEFAULT_REALTIME_JMS_CONNECTION_TOPIC);\n \n-  service jmsTokenRevocation = service {\n-      resource function onMessage(jms:Message message) {\n-          printDebug(KEY_TOKEN_REVOCATION_JMS,\"token revoked jms Message Received\");\n-          if (message is jms:MapMessage) {\n-              string?|error ttl = message.getString(\"ttl\");\n-              string?|error revokedToken = message.getString(\"revokedToken\");\n-              map<string> inputMap = {};\n-              if (ttl is string && revokedToken is string) {\n-                  inputMap[revokedToken] = ttl;\n-                  var status = addToRevokedTokenMap(inputMap);\n-                  if (status is boolean) {\n-                      printDebug(KEY_TOKEN_REVOCATION_JMS, \"Successfully added to revoked token map\");\n-                  } else {\n-                      printDebug(KEY_TOKEN_REVOCATION_JMS, \"Error while ading revoked token to map\");\n-                  }\n-              } else {\n-                  printDebug(KEY_TOKEN_REVOCATION_JMS, \"No keys named revokedToken and ttl\");\n-              }\n-          } else {\n-              printError(KEY_TOKEN_REVOCATION_JMS, \"Error occurred while reading message\");\n-          }\n-      }\n-  };\n+service jmsTokenRevocation = service {\n+    resource function onMessage(jms:Message message) {\n+        printDebug(KEY_TOKEN_REVOCATION_JMS, \"token revoked jms Message Received\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzMTU1NA==", "bodyText": "We need to document all the configs in default config file using comments. So that users can get to know whats usage of each config without coming to the documentation. This we can do later in a different pull request after a proper discussion on what to document.", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369931554", "createdAt": "2020-01-23T04:59:46Z", "author": {"login": "praminda"}, "path": "distribution/resources/conf/micro-gw-default.conf", "diffHunk": "@@ -0,0 +1,141 @@\n+[listenerConfig]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzMjAwOQ==", "bodyText": "I hope these are unused or duplicate constants", "url": "https://github.com/wso2/product-microgateway/pull/948#discussion_r369932009", "createdAt": "2020-01-23T05:02:28Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/constants.bal", "diffHunk": "@@ -262,14 +261,9 @@ public const string JMS_CONNECTION_PASSWORD = \"jmsConnectionPassword\";\n public const string THROTTLE_ENDPOINT_URL = \"throttleEndpointUrl\";\n public const string THROTTLE_ENDPOINT_BASE64_HEADER = \"throttleEndpointbase64Header\";\n \n-public const string TOKEN_REVOCATION_CONF_INSTANCE_ID = \"tokenRevocationConfig\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f36a2b2b3f9fb39209669b57461faf392b833e"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c7321c1a470393cb8484ff7a273b2825bf1ed0b", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/5c7321c1a470393cb8484ff7a273b2825bf1ed0b", "committedDate": "2020-01-23T06:34:38Z", "message": "Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDg1NTMz", "url": "https://github.com/wso2/product-microgateway/pull/948#pullrequestreview-347085533", "createdAt": "2020-01-23T06:45:23Z", "commit": {"oid": "5c7321c1a470393cb8484ff7a273b2825bf1ed0b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1239, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}