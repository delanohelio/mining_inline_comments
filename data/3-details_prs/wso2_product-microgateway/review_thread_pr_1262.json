{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NTM1MzQ0", "number": 1262, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjowNzowMFrOEBtxDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjowNzowMFrOEBtxDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjMzODY5OnYy", "diffSide": "RIGHT", "path": "tests/src/main/java/org/wso2/micro/gateway/tests/interceptor/ConfigInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjowNzowMFrOGdumjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjowNzowMFrOGdumjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgyNTQyMw==", "bodyText": "should be queryParam", "url": "https://github.com/wso2/product-microgateway/pull/1262#discussion_r433825423", "createdAt": "2020-06-02T12:07:00Z", "author": {"login": "praminda"}, "path": "tests/src/main/java/org/wso2/micro/gateway/tests/interceptor/ConfigInterceptor.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.wso2.micro.gateway.tests.interceptor;\n+\n+import org.wso2.micro.gateway.interceptor.Caller;\n+import org.wso2.micro.gateway.interceptor.ConfigUtils;\n+import org.wso2.micro.gateway.interceptor.Interceptor;\n+import org.wso2.micro.gateway.interceptor.Request;\n+import org.wso2.micro.gateway.interceptor.Response;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Implements sample interceptor for the integration test cases used to read configurations.\n+ */\n+public class ConfigInterceptor implements Interceptor {\n+\n+    private  String responseString = \"\";\n+\n+    @Override\n+    public boolean interceptRequest(Caller caller, Request request) {\n+        String pathParam = request.getQueryParamValue(\"config\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1925a3e02db7da5746ee8b7cdf07c1dc87d6c3"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1242, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}