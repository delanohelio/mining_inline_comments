{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzYyODkz", "number": 1314, "title": "Add www-Authenticate header in the Error response", "bodyText": "Purpose\nThis PR will add the www-Authenticate header in the Error response when the authorization fails.\nIssues\n\nFixes #1306\nAutomation tests\n\nUnit tests added: Yes/No\nIntegration tests added: Yes/No\n\nTested environments\n\nNot Tested\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-07-06T13:06:56Z", "url": "https://github.com/wso2/product-microgateway/pull/1314", "merged": true, "mergeCommit": {"oid": "89387d639662bc8fac97171580025203acc124bd"}, "closed": true, "closedAt": "2020-07-16T16:18:41Z", "author": {"login": "ShalkiWenushika"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcySozIgFqTQ0MzE1OTUzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hg-OgFqTQ0OTk5ODE5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTU5NTM2", "url": "https://github.com/wso2/product-microgateway/pull/1314#pullrequestreview-443159536", "createdAt": "2020-07-06T15:03:16Z", "commit": {"oid": "f3b33a74fb8d685961ca529df4c7c2f275ce40db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTowMzoxNlrOGtbNPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTowMzoxNlrOGtbNPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI4NDg2Mg==", "bodyText": "Authentication failures can happen due to several reasons. If we set the description to the header, we have to mention the correct reason for the failure.\nIMO, we do not need the error and error_description in the header since the WWW-Authenticate header is meant to contain only the challenge.", "url": "https://github.com/wso2/product-microgateway/pull/1314#discussion_r450284862", "createdAt": "2020-07-06T15:03:16Z", "author": {"login": "menakaj"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/constants/constants.bal", "diffHunk": "@@ -50,6 +50,8 @@ public const string VALIDATE_KEY_SOAP_ACTION = \"urn:validateKey\";\n public const string KEY_VALIDATION_SERVICE_CONTEXT = \"/services/APIKeyValidationService\";\n public const string UTF_8 = \"UTF-8\";\n public const string INVALID_COOKIE = \"Cookie is Invalid\";\n+public const string WWW_AUTHENTICATE = \"WWW-Authenticate\";\n+public const string WWW_AUTHENTICATE_ERROR = \", error=\\\"invalid token\\\" , error_description=\\\"The access token expired\\\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3b33a74fb8d685961ca529df4c7c2f275ce40db"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NzIwMTAw", "url": "https://github.com/wso2/product-microgateway/pull/1314#pullrequestreview-449720100", "createdAt": "2020-07-16T10:28:07Z", "commit": {"oid": "f3b33a74fb8d685961ca529df4c7c2f275ce40db"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDoyODowOFrOGyk4xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDozMDozNlrOGyk-Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NjM0Mg==", "bodyText": "Let's use existing constants for these? AUTH_SCHEME_OAUTH2, AUTHN_SCHEME_BASIC", "url": "https://github.com/wso2/product-microgateway/pull/1314#discussion_r455686342", "createdAt": "2020-07-16T10:28:08Z", "author": {"login": "menakaj"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -363,6 +368,32 @@ public function sendErrorResponseFromInvocationContext(http:Response response) {\n     }\n }\n \n+public function getChallengeString(http:FilterContext context) returns string {\n+    runtime:InvocationContext invocationContext = runtime:getInvocationContext();\n+    string challengeString = invocationContext.attributes[CHALLENGE_STRING].toString();\n+    string[] authProviders = [];\n+    APIConfiguration? apiConfig = apiConfigAnnotationMap[context.getServiceName()];\n+    if (apiConfig is APIConfiguration) {\n+        authProviders = apiConfig.authProviders;\n+        foreach var v in authProviders {\n+            if (v == \"oauth2\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3b33a74fb8d685961ca529df4c7c2f275ce40db"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY4NzcyNg==", "bodyText": "Use existing constants. UNAUTHORIZED", "url": "https://github.com/wso2/product-microgateway/pull/1314#discussion_r455687726", "createdAt": "2020-07-16T10:30:36Z", "author": {"login": "menakaj"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -342,13 +342,18 @@ public function sendErrorResponse(http:Caller caller, http:Request request, http\n \n # Default error response sender with json error response.\n # + response - http response object.\n-public function sendErrorResponseFromInvocationContext(http:Response response) {\n-    runtime:InvocationContext context = runtime:getInvocationContext();\n-    string errorDescription = <string>context.attributes[ERROR_DESCRIPTION];\n-    string errorMessage = <string>context.attributes[ERROR_MESSAGE];\n-    int errorCode = <int>context.attributes[ERROR_CODE];\n-    response.statusCode = <int>context.attributes[HTTP_STATUS_CODE];\n+public function sendErrorResponseFromInvocationContext(http:FilterContext context, http:Response response) {\n+    runtime:InvocationContext invocationContext = runtime:getInvocationContext();\n+    string errorDescription = <string>invocationContext.attributes[ERROR_DESCRIPTION];\n+    string errorMessage = <string>invocationContext.attributes[ERROR_MESSAGE];\n+    int errorCode = <int>invocationContext.attributes[ERROR_CODE];\n+    response.statusCode = <int>invocationContext.attributes[HTTP_STATUS_CODE];\n     response.setContentType(APPLICATION_JSON);\n+    //set WWW_AUTHENTICATE header to error response\n+    if (response.statusCode == 401) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3b33a74fb8d685961ca529df4c7c2f275ce40db"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9472ac1709bea54e250b852774e843e8c7b0fdd9", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/9472ac1709bea54e250b852774e843e8c7b0fdd9", "committedDate": "2020-07-16T11:41:51Z", "message": "add constants to variable values"}, "afterCommit": {"oid": "caa80c750d1020273002c805f0180f7d053d6d2e", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/caa80c750d1020273002c805f0180f7d053d6d2e", "committedDate": "2020-07-16T12:12:57Z", "message": "Add www-Authenticate header in the Error response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "caa80c750d1020273002c805f0180f7d053d6d2e", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/caa80c750d1020273002c805f0180f7d053d6d2e", "committedDate": "2020-07-16T12:12:57Z", "message": "Add www-Authenticate header in the Error response"}, "afterCommit": {"oid": "03bf0b81821cc0b2c0da9fd48c3a1b944061f04b", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/03bf0b81821cc0b2c0da9fd48c3a1b944061f04b", "committedDate": "2020-07-16T12:10:04Z", "message": "add constants to the variable values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db1e3eb9c49fdba223ab4f2a3369bb6a1d573291", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/db1e3eb9c49fdba223ab4f2a3369bb6a1d573291", "committedDate": "2020-07-16T12:58:23Z", "message": "Add www-Authenticate header in the Error response"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03bf0b81821cc0b2c0da9fd48c3a1b944061f04b", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/03bf0b81821cc0b2c0da9fd48c3a1b944061f04b", "committedDate": "2020-07-16T12:10:04Z", "message": "add constants to the variable values"}, "afterCommit": {"oid": "db1e3eb9c49fdba223ab4f2a3369bb6a1d573291", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/db1e3eb9c49fdba223ab4f2a3369bb6a1d573291", "committedDate": "2020-07-16T12:58:23Z", "message": "Add www-Authenticate header in the Error response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c6912080a3d81ae2282ae5ecdb3fdf2bd428840", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/2c6912080a3d81ae2282ae5ecdb3fdf2bd428840", "committedDate": "2020-07-16T15:28:14Z", "message": "Change a constant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTc1MTI2", "url": "https://github.com/wso2/product-microgateway/pull/1314#pullrequestreview-449975126", "createdAt": "2020-07-16T15:41:43Z", "commit": {"oid": "2c6912080a3d81ae2282ae5ecdb3fdf2bd428840"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo0MTo0NFrOGyw8kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo0MTo0NFrOGyw8kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MzkyMA==", "bodyText": "Use proper variable name instead of 'v'", "url": "https://github.com/wso2/product-microgateway/pull/1314#discussion_r455883920", "createdAt": "2020-07-16T15:41:44Z", "author": {"login": "menakaj"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -364,6 +369,32 @@ public function sendErrorResponseFromInvocationContext(http:Response response) {\n     }\n }\n \n+public function getChallengeString(http:FilterContext context) returns string {\n+     runtime:InvocationContext invocationContext = runtime:getInvocationContext();\n+     string challengeString = invocationContext.attributes[CHALLENGE_STRING].toString();\n+     string[] authProviders = [];\n+     APIConfiguration? apiConfig = apiConfigAnnotationMap[context.getServiceName()];\n+     if (apiConfig is APIConfiguration) {\n+         authProviders = apiConfig.authProviders;\n+         foreach var v in authProviders {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c6912080a3d81ae2282ae5ecdb3fdf2bd428840"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6acc8f01c3a59b6b0846545644b5179a53fc12b3", "author": {"user": null}, "url": "https://github.com/wso2/product-microgateway/commit/6acc8f01c3a59b6b0846545644b5179a53fc12b3", "committedDate": "2020-07-16T16:04:16Z", "message": "Change a variable name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTk4MTkw", "url": "https://github.com/wso2/product-microgateway/pull/1314#pullrequestreview-449998190", "createdAt": "2020-07-16T16:06:57Z", "commit": {"oid": "6acc8f01c3a59b6b0846545644b5179a53fc12b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1117, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}