{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODA4NDE3", "number": 946, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNjoyMToxN1rODaEHww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODozNjoyN1rODaaj3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjU3MDkxOnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNjoyMToxN1rOFgz1oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNjoyMToxN1rOFgz1oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk0ODA2NA==", "bodyText": "With amali's PR #948 for default configs, we have constants for default values of username and password. Let's use those after merging that PR.", "url": "https://github.com/wso2/product-microgateway/pull/946#discussion_r369948064", "createdAt": "2020-01-23T06:21:17Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -123,11 +123,19 @@ public function getAuthHandlers() returns http:InboundAuthHandler[] {\n         },\n         verifyHostname: getConfigBooleanValue(HTTP_CLIENTS_INSTANCE_ID, ENABLE_HOSTNAME_VERIFICATION, true)\n     };\n+\n     http:OutboundAuthConfig? auth = ();\n+    // support backward compatibility in reading the basic auth credentials when connecting with KM.\n+    string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");\n+    string password = getConfigValue(KM_CONF_INSTANCE_ID, PASSWORD, \"\");\n+    if (username.length() == 0 && password.length() == 0) {\n+        username = getConfigValue(KM_CONF_SECURITY_BASIC_INSTANCE_ID, USERNAME, \"admin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6f5f4f5cacc3060af28fd5ab6b187163821f4a8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI0NTc0OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODozNTo1MFrOFhWvHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODozODowOFrOFhWyDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxOTgzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");\n          \n          \n            \n                string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, DEFAULT_USERNAME);", "url": "https://github.com/wso2/product-microgateway/pull/946#discussion_r370519837", "createdAt": "2020-01-24T08:35:50Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -120,11 +120,19 @@ public function getAuthHandlers() returns http:InboundAuthHandler[] {\n         },\n         verifyHostname: getConfigBooleanValue(HTTP_CLIENTS_INSTANCE_ID, ENABLE_HOSTNAME_VERIFICATION, true)\n     };\n+\n     http:OutboundAuthConfig? auth = ();\n-    if (getConfigBooleanValue(KM_CONF_SECURITY_BASIC_INSTANCE_ID, ENABLED, DEFAULT_KM_CONF_SECURITY_BASIC_ENABLED)) {\n+    // support backward compatibility in reading the basic auth credentials when connecting with KM.\n+    string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09c46dd8c7e0606a4a64b5468be0cfe02d1df512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyMDU4OQ==", "bodyText": "We can't have default values there. This is to support the old config. The empty string determines that old config is not used", "url": "https://github.com/wso2/product-microgateway/pull/946#discussion_r370520589", "createdAt": "2020-01-24T08:38:08Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -120,11 +120,19 @@ public function getAuthHandlers() returns http:InboundAuthHandler[] {\n         },\n         verifyHostname: getConfigBooleanValue(HTTP_CLIENTS_INSTANCE_ID, ENABLE_HOSTNAME_VERIFICATION, true)\n     };\n+\n     http:OutboundAuthConfig? auth = ();\n-    if (getConfigBooleanValue(KM_CONF_SECURITY_BASIC_INSTANCE_ID, ENABLED, DEFAULT_KM_CONF_SECURITY_BASIC_ENABLED)) {\n+    // support backward compatibility in reading the basic auth credentials when connecting with KM.\n+    string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxOTgzNw=="}, "originalCommit": {"oid": "09c46dd8c7e0606a4a64b5468be0cfe02d1df512"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDI0NzM1OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODozNjoyN1rOFhWwEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwODo1OTozOFrOFhXPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyMDA4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                string password = getConfigValue(KM_CONF_INSTANCE_ID, PASSWORD, \"\");\n          \n          \n            \n                string password = getConfigValue(KM_CONF_INSTANCE_ID, PASSWORD, DEFAULT_PASSWORD);", "url": "https://github.com/wso2/product-microgateway/pull/946#discussion_r370520083", "createdAt": "2020-01-24T08:36:27Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -120,11 +120,19 @@ public function getAuthHandlers() returns http:InboundAuthHandler[] {\n         },\n         verifyHostname: getConfigBooleanValue(HTTP_CLIENTS_INSTANCE_ID, ENABLE_HOSTNAME_VERIFICATION, true)\n     };\n+\n     http:OutboundAuthConfig? auth = ();\n-    if (getConfigBooleanValue(KM_CONF_SECURITY_BASIC_INSTANCE_ID, ENABLED, DEFAULT_KM_CONF_SECURITY_BASIC_ENABLED)) {\n+    // support backward compatibility in reading the basic auth credentials when connecting with KM.\n+    string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");\n+    string password = getConfigValue(KM_CONF_INSTANCE_ID, PASSWORD, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09c46dd8c7e0606a4a64b5468be0cfe02d1df512"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyODE2MQ==", "bodyText": "We can't have default values there. This is to support the old config. The empty string determines that old config is not used", "url": "https://github.com/wso2/product-microgateway/pull/946#discussion_r370528161", "createdAt": "2020-01-24T08:59:38Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/listeners/api_gateway_listener.bal", "diffHunk": "@@ -120,11 +120,19 @@ public function getAuthHandlers() returns http:InboundAuthHandler[] {\n         },\n         verifyHostname: getConfigBooleanValue(HTTP_CLIENTS_INSTANCE_ID, ENABLE_HOSTNAME_VERIFICATION, true)\n     };\n+\n     http:OutboundAuthConfig? auth = ();\n-    if (getConfigBooleanValue(KM_CONF_SECURITY_BASIC_INSTANCE_ID, ENABLED, DEFAULT_KM_CONF_SECURITY_BASIC_ENABLED)) {\n+    // support backward compatibility in reading the basic auth credentials when connecting with KM.\n+    string username = getConfigValue(KM_CONF_INSTANCE_ID, USERNAME, \"\");\n+    string password = getConfigValue(KM_CONF_INSTANCE_ID, PASSWORD, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUyMDA4Mw=="}, "originalCommit": {"oid": "09c46dd8c7e0606a4a64b5468be0cfe02d1df512"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1364, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}