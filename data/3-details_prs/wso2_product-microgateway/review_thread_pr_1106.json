{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDkwNDc2", "number": 1106, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNToxOTowOVrODlrsEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNToyMTozNVrODlrtew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODM5Njk3OnYy", "diffSide": "LEFT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNToxOTowOVrOFytb2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTo0MTowOFrOFyymVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxNzUzMA==", "bodyText": "So the fix for #1104 if removing audience validation for any apiKey (APIM or MGW Key)?\nAnyway I'd be extremely happy if you sent these two fixes in two different commits.", "url": "https://github.com/wso2/product-microgateway/pull/1106#discussion_r388717530", "createdAt": "2020-03-06T05:19:09Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -760,7 +760,6 @@ public function initAuthHandlers() {\n     //Initializes apikey handler\n     jwt:JwtValidatorConfig apiKeyValidatorConfig = {\n         issuer: getConfigValue(API_KEY_INSTANCE_ID, ISSUER, DEFAULT_API_KEY_ISSUER),\n-        audience: getConfigValue(API_KEY_INSTANCE_ID, AUDIENCE, DEFAULT_AUDIENCE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb6f936d17c1c054769a62d94942eb2ea8bf75b6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgwMjEzNA==", "bodyText": "Yes, since we removed aud from validation, no point in issuing an API Key with aud claim. Added as 2 commits as you requested.", "url": "https://github.com/wso2/product-microgateway/pull/1106#discussion_r388802134", "createdAt": "2020-03-06T09:41:08Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -760,7 +760,6 @@ public function initAuthHandlers() {\n     //Initializes apikey handler\n     jwt:JwtValidatorConfig apiKeyValidatorConfig = {\n         issuer: getConfigValue(API_KEY_INSTANCE_ID, ISSUER, DEFAULT_API_KEY_ISSUER),\n-        audience: getConfigValue(API_KEY_INSTANCE_ID, AUDIENCE, DEFAULT_AUDIENCE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxNzUzMA=="}, "originalCommit": {"oid": "bb6f936d17c1c054769a62d94942eb2ea8bf75b6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODQwMDU5OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/api_key_utils.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwNToyMTozNVrOFytd9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTo0MTo0OVrOFyynsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxODA3MQ==", "bodyText": "Shall we use simple equals here? No need of equalsIgnoreCase when comparing a special char?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!(apiVersions is string) || (stringutils:equalsIgnoreCase(\"*\", apiVersions))) {\n          \n          \n            \n                            if (!(apiVersions is string) || \"*\" == apiVersions) {", "url": "https://github.com/wso2/product-microgateway/pull/1106#discussion_r388718071", "createdAt": "2020-03-06T05:21:35Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/api_key_utils.bal", "diffHunk": "@@ -187,3 +167,27 @@ public function getAPIKeyAuth() returns [string, string] | error {\n         return error(\"API key is missing in invocation context\");\n     }\n }\n+\n+public function getAPIsforAPIKey() returns json[] {\n+    json[] apis = [];\n+    map<anydata>[] | error apiList = map<anydata>[].constructFrom(config:getAsArray(API_KEY_ISSUER_API));\n+    if (apiList is map<anydata>[] && apiList.length() > 0) {\n+        foreach map<anydata> apiData in apiList {\n+            anydata apiName = apiData[NAME];\n+            anydata apiVersions = apiData[VERSIONS];\n+            if (apiName is string) {\n+                if (!(apiVersions is string) || (stringutils:equalsIgnoreCase(\"*\", apiVersions))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb6f936d17c1c054769a62d94942eb2ea8bf75b6"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgwMjQ4Mw==", "bodyText": "done", "url": "https://github.com/wso2/product-microgateway/pull/1106#discussion_r388802483", "createdAt": "2020-03-06T09:41:49Z", "author": {"login": "AmaliMatharaarachchi"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/api_key_utils.bal", "diffHunk": "@@ -187,3 +167,27 @@ public function getAPIKeyAuth() returns [string, string] | error {\n         return error(\"API key is missing in invocation context\");\n     }\n }\n+\n+public function getAPIsforAPIKey() returns json[] {\n+    json[] apis = [];\n+    map<anydata>[] | error apiList = map<anydata>[].constructFrom(config:getAsArray(API_KEY_ISSUER_API));\n+    if (apiList is map<anydata>[] && apiList.length() > 0) {\n+        foreach map<anydata> apiData in apiList {\n+            anydata apiName = apiData[NAME];\n+            anydata apiVersions = apiData[VERSIONS];\n+            if (apiName is string) {\n+                if (!(apiVersions is string) || (stringutils:equalsIgnoreCase(\"*\", apiVersions))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxODA3MQ=="}, "originalCommit": {"oid": "bb6f936d17c1c054769a62d94942eb2ea8bf75b6"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1321, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}