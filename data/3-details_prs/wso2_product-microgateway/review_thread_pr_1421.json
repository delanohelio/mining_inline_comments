{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMDU1NjQw", "number": 1421, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mjo1MVrOEnghkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mzo1MVrOEngi-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODYyODAxOnYy", "diffSide": "RIGHT", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mjo1MVrOHYI7cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mjo1MVrOHYI7cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3NDE2MQ==", "bodyText": "Lets read this from environment variable, so we can run perf without code changes for cache enable and disable cases", "url": "https://github.com/wso2/product-microgateway/pull/1421#discussion_r495074161", "createdAt": "2020-09-25T15:42:51Z", "author": {"login": "Rajith90"}, "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "diffHunk": "@@ -33,14 +33,43 @@\n import java.util.Base64;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n import com.nimbusds.jose.JOSEException;\n import com.nimbusds.jose.JWSHeader;\n import com.nimbusds.jwt.JWTClaimsSet;\n import com.nimbusds.jwt.JWTParser;\n import com.nimbusds.jwt.SignedJWT;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n \n public class JWTValidator{\n     private static RSAPublicKey publicKey = readPublicKey();\n+    private static JWSVerifier jwsVerifier = new RSASSAVerifier(publicKey);\n+    private static boolean enableCache = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542c3c214b761e8cc2c3c4d0f2fc75ebc00db865"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODYzMTYwOnYy", "diffSide": "RIGHT", "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mzo1MVrOHYI9mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0Mzo1MVrOHYI9mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3NDcxNA==", "bodyText": "Lets remove the logs(sout), in order to run the perf tests. Check other places as well", "url": "https://github.com/wso2/product-microgateway/pull/1421#discussion_r495074714", "createdAt": "2020-09-25T15:43:51Z", "author": {"login": "Rajith90"}, "path": "java-filter-chain/src/main/java/org/wso2/mgw/filterchain/JWTValidator/JWTValidator.java", "diffHunk": "@@ -81,11 +110,38 @@ public static boolean validateSignature(String jwtToken, String signature){\n         JWTClaimsSet payload = null;\n         SignedJWT parsedJWTToken;\n         boolean isVerified = false;\n-        try{\n-            parsedJWTToken = (SignedJWT) JWTParser.parse(jwtToken);\n-            isVerified = verifyTokenSignature(parsedJWTToken);\n-        }catch (ParseException e) {\n-            System.out.println(\"Invalid JWT token. Failed to decode the token.\");\n+        try {\n+            if (enableCache) {\n+                if(GatewayApiKeyCache.get(signature) != JWTConstants.UNAVAILABLE){\n+                    System.out.println(\"Api Key retrieved from the Api Key cache.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542c3c214b761e8cc2c3c4d0f2fc75ebc00db865"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1131, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}