{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwOTYyMzAw", "number": 1268, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1ODo1MVrOEDYIsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDowNTowOFrOEDYQxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTc2NjI0OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handler_providers/oauth2_key_validation_provider.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1ODo1MVrOGgW-dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMzo1NzozOVrOGhj_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NDA1Mg==", "bodyText": "Always true?", "url": "https://github.com/wso2/product-microgateway/pull/1268#discussion_r436584052", "createdAt": "2020-06-08T09:58:51Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handler_providers/oauth2_key_validation_provider.bal", "diffHunk": "@@ -274,33 +275,40 @@ public type KeyValidationServerConfig record {|\n \n function convertXmlToKeyValidationObject(xml keyValidationInfoXML) returns APIKeyValidationDto {\n     APIKeyValidationDto apiKeyValidationDto = {};\n-    apiKeyValidationDto.apiName = keyValidationInfoXML[apim:apiName].getTextValue();\n-    apiKeyValidationDto.apiPublisher = keyValidationInfoXML[apim:apiPublisher].getTextValue();\n-    apiKeyValidationDto.apiTier = keyValidationInfoXML[apim:apiTier].getTextValue();\n-    apiKeyValidationDto.applicationId = keyValidationInfoXML[apim:applicationId].getTextValue();\n-    apiKeyValidationDto.applicationName = keyValidationInfoXML[apim:applicationName].getTextValue();\n-    apiKeyValidationDto.applicationTier = keyValidationInfoXML[apim:applicationTier].getTextValue();\n-    apiKeyValidationDto.authorized = stringutils:toBoolean(keyValidationInfoXML[apim:authorized].getTextValue());\n-    apiKeyValidationDto.authorizedDomains = keyValidationInfoXML[apim:authorizedDomains].getTextValue();\n-    apiKeyValidationDto.consumerKey = keyValidationInfoXML[apim:consumerKey].getTextValue();\n-    apiKeyValidationDto.contentAware = keyValidationInfoXML[apim:contentAware].getTextValue();\n-    apiKeyValidationDto.endUserName = keyValidationInfoXML[apim:endUserName].getTextValue();\n-    apiKeyValidationDto.endUserToken = keyValidationInfoXML[apim:endUserToken].getTextValue();\n-    apiKeyValidationDto.issuedTime = keyValidationInfoXML[apim:issuedTime].getTextValue();\n-    apiKeyValidationDto.spikeArrestLimit = keyValidationInfoXML[apim:spikeArrestLimit].getTextValue();\n-    apiKeyValidationDto.spikeArrestUnit = keyValidationInfoXML[apim:spikeArrestUnit].getTextValue();\n-    apiKeyValidationDto.stopOnQuotaReach = keyValidationInfoXML[apim:stopOnQuotaReach].getTextValue();\n-    apiKeyValidationDto.subscriber = keyValidationInfoXML[apim:subscriber].getTextValue();\n-    apiKeyValidationDto.subscriberTenantDomain = keyValidationInfoXML[apim:subscriberTenantDomain].getTextValue();\n-    apiKeyValidationDto.throttlingDataList = keyValidationInfoXML[apim:throttlingDataList].getTextValue();\n-    apiKeyValidationDto.tier = keyValidationInfoXML[apim:tier].getTextValue();\n-    apiKeyValidationDto.keyType = keyValidationInfoXML[apim:'type].getTextValue();\n-    apiKeyValidationDto.userType = keyValidationInfoXML[apim:userType].getTextValue();\n-    apiKeyValidationDto.validationStatus = keyValidationInfoXML[apim:validationStatus].getTextValue();\n-    apiKeyValidationDto.validityPeriod = keyValidationInfoXML[apim:validityPeriod].getTextValue();\n+    apiKeyValidationDto.apiName = getXMLValue(keyValidationInfoXML/<apim:apiName>/*);\n+    apiKeyValidationDto.apiPublisher = getXMLValue(keyValidationInfoXML/<apim:apiPublisher>/*);\n+    apiKeyValidationDto.apiTier = getXMLValue(keyValidationInfoXML/<apim:apiTier>/*);\n+    apiKeyValidationDto.applicationId = getXMLValue(keyValidationInfoXML/<apim:applicationId>/*);\n+    apiKeyValidationDto.applicationName = getXMLValue(keyValidationInfoXML/<apim:applicationName>/*);\n+    apiKeyValidationDto.applicationTier = getXMLValue(keyValidationInfoXML/<apim:applicationTier>/*);\n+    apiKeyValidationDto.authorized = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4c6ec31eba720b9501ca512d0f46e2bff50295"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0NTk4NQ==", "bodyText": "Yes, this method call happens only if authorised value is true", "url": "https://github.com/wso2/product-microgateway/pull/1268#discussion_r437845985", "createdAt": "2020-06-10T03:57:39Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handler_providers/oauth2_key_validation_provider.bal", "diffHunk": "@@ -274,33 +275,40 @@ public type KeyValidationServerConfig record {|\n \n function convertXmlToKeyValidationObject(xml keyValidationInfoXML) returns APIKeyValidationDto {\n     APIKeyValidationDto apiKeyValidationDto = {};\n-    apiKeyValidationDto.apiName = keyValidationInfoXML[apim:apiName].getTextValue();\n-    apiKeyValidationDto.apiPublisher = keyValidationInfoXML[apim:apiPublisher].getTextValue();\n-    apiKeyValidationDto.apiTier = keyValidationInfoXML[apim:apiTier].getTextValue();\n-    apiKeyValidationDto.applicationId = keyValidationInfoXML[apim:applicationId].getTextValue();\n-    apiKeyValidationDto.applicationName = keyValidationInfoXML[apim:applicationName].getTextValue();\n-    apiKeyValidationDto.applicationTier = keyValidationInfoXML[apim:applicationTier].getTextValue();\n-    apiKeyValidationDto.authorized = stringutils:toBoolean(keyValidationInfoXML[apim:authorized].getTextValue());\n-    apiKeyValidationDto.authorizedDomains = keyValidationInfoXML[apim:authorizedDomains].getTextValue();\n-    apiKeyValidationDto.consumerKey = keyValidationInfoXML[apim:consumerKey].getTextValue();\n-    apiKeyValidationDto.contentAware = keyValidationInfoXML[apim:contentAware].getTextValue();\n-    apiKeyValidationDto.endUserName = keyValidationInfoXML[apim:endUserName].getTextValue();\n-    apiKeyValidationDto.endUserToken = keyValidationInfoXML[apim:endUserToken].getTextValue();\n-    apiKeyValidationDto.issuedTime = keyValidationInfoXML[apim:issuedTime].getTextValue();\n-    apiKeyValidationDto.spikeArrestLimit = keyValidationInfoXML[apim:spikeArrestLimit].getTextValue();\n-    apiKeyValidationDto.spikeArrestUnit = keyValidationInfoXML[apim:spikeArrestUnit].getTextValue();\n-    apiKeyValidationDto.stopOnQuotaReach = keyValidationInfoXML[apim:stopOnQuotaReach].getTextValue();\n-    apiKeyValidationDto.subscriber = keyValidationInfoXML[apim:subscriber].getTextValue();\n-    apiKeyValidationDto.subscriberTenantDomain = keyValidationInfoXML[apim:subscriberTenantDomain].getTextValue();\n-    apiKeyValidationDto.throttlingDataList = keyValidationInfoXML[apim:throttlingDataList].getTextValue();\n-    apiKeyValidationDto.tier = keyValidationInfoXML[apim:tier].getTextValue();\n-    apiKeyValidationDto.keyType = keyValidationInfoXML[apim:'type].getTextValue();\n-    apiKeyValidationDto.userType = keyValidationInfoXML[apim:userType].getTextValue();\n-    apiKeyValidationDto.validationStatus = keyValidationInfoXML[apim:validationStatus].getTextValue();\n-    apiKeyValidationDto.validityPeriod = keyValidationInfoXML[apim:validityPeriod].getTextValue();\n+    apiKeyValidationDto.apiName = getXMLValue(keyValidationInfoXML/<apim:apiName>/*);\n+    apiKeyValidationDto.apiPublisher = getXMLValue(keyValidationInfoXML/<apim:apiPublisher>/*);\n+    apiKeyValidationDto.apiTier = getXMLValue(keyValidationInfoXML/<apim:apiTier>/*);\n+    apiKeyValidationDto.applicationId = getXMLValue(keyValidationInfoXML/<apim:applicationId>/*);\n+    apiKeyValidationDto.applicationName = getXMLValue(keyValidationInfoXML/<apim:applicationName>/*);\n+    apiKeyValidationDto.applicationTier = getXMLValue(keyValidationInfoXML/<apim:applicationTier>/*);\n+    apiKeyValidationDto.authorized = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NDA1Mg=="}, "originalCommit": {"oid": "ab4c6ec31eba720b9501ca512d0f46e2bff50295"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTc2NzEzOnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handler_providers/oauth2_key_validation_provider.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1OTowNFrOGgW--Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1OTowNFrOGgW--Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NDE4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(xmlValue is 'xml:Text){\n          \n          \n            \n                if (xmlValue is 'xml:Text) {", "url": "https://github.com/wso2/product-microgateway/pull/1268#discussion_r436584185", "createdAt": "2020-06-08T09:59:04Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handler_providers/oauth2_key_validation_provider.bal", "diffHunk": "@@ -274,33 +275,40 @@ public type KeyValidationServerConfig record {|\n \n function convertXmlToKeyValidationObject(xml keyValidationInfoXML) returns APIKeyValidationDto {\n     APIKeyValidationDto apiKeyValidationDto = {};\n-    apiKeyValidationDto.apiName = keyValidationInfoXML[apim:apiName].getTextValue();\n-    apiKeyValidationDto.apiPublisher = keyValidationInfoXML[apim:apiPublisher].getTextValue();\n-    apiKeyValidationDto.apiTier = keyValidationInfoXML[apim:apiTier].getTextValue();\n-    apiKeyValidationDto.applicationId = keyValidationInfoXML[apim:applicationId].getTextValue();\n-    apiKeyValidationDto.applicationName = keyValidationInfoXML[apim:applicationName].getTextValue();\n-    apiKeyValidationDto.applicationTier = keyValidationInfoXML[apim:applicationTier].getTextValue();\n-    apiKeyValidationDto.authorized = stringutils:toBoolean(keyValidationInfoXML[apim:authorized].getTextValue());\n-    apiKeyValidationDto.authorizedDomains = keyValidationInfoXML[apim:authorizedDomains].getTextValue();\n-    apiKeyValidationDto.consumerKey = keyValidationInfoXML[apim:consumerKey].getTextValue();\n-    apiKeyValidationDto.contentAware = keyValidationInfoXML[apim:contentAware].getTextValue();\n-    apiKeyValidationDto.endUserName = keyValidationInfoXML[apim:endUserName].getTextValue();\n-    apiKeyValidationDto.endUserToken = keyValidationInfoXML[apim:endUserToken].getTextValue();\n-    apiKeyValidationDto.issuedTime = keyValidationInfoXML[apim:issuedTime].getTextValue();\n-    apiKeyValidationDto.spikeArrestLimit = keyValidationInfoXML[apim:spikeArrestLimit].getTextValue();\n-    apiKeyValidationDto.spikeArrestUnit = keyValidationInfoXML[apim:spikeArrestUnit].getTextValue();\n-    apiKeyValidationDto.stopOnQuotaReach = keyValidationInfoXML[apim:stopOnQuotaReach].getTextValue();\n-    apiKeyValidationDto.subscriber = keyValidationInfoXML[apim:subscriber].getTextValue();\n-    apiKeyValidationDto.subscriberTenantDomain = keyValidationInfoXML[apim:subscriberTenantDomain].getTextValue();\n-    apiKeyValidationDto.throttlingDataList = keyValidationInfoXML[apim:throttlingDataList].getTextValue();\n-    apiKeyValidationDto.tier = keyValidationInfoXML[apim:tier].getTextValue();\n-    apiKeyValidationDto.keyType = keyValidationInfoXML[apim:'type].getTextValue();\n-    apiKeyValidationDto.userType = keyValidationInfoXML[apim:userType].getTextValue();\n-    apiKeyValidationDto.validationStatus = keyValidationInfoXML[apim:validationStatus].getTextValue();\n-    apiKeyValidationDto.validityPeriod = keyValidationInfoXML[apim:validityPeriod].getTextValue();\n+    apiKeyValidationDto.apiName = getXMLValue(keyValidationInfoXML/<apim:apiName>/*);\n+    apiKeyValidationDto.apiPublisher = getXMLValue(keyValidationInfoXML/<apim:apiPublisher>/*);\n+    apiKeyValidationDto.apiTier = getXMLValue(keyValidationInfoXML/<apim:apiTier>/*);\n+    apiKeyValidationDto.applicationId = getXMLValue(keyValidationInfoXML/<apim:applicationId>/*);\n+    apiKeyValidationDto.applicationName = getXMLValue(keyValidationInfoXML/<apim:applicationName>/*);\n+    apiKeyValidationDto.applicationTier = getXMLValue(keyValidationInfoXML/<apim:applicationTier>/*);\n+    apiKeyValidationDto.authorized = true;\n+    apiKeyValidationDto.authorizedDomains = getXMLValue(keyValidationInfoXML/<apim:authorizedDomains>/*);\n+    apiKeyValidationDto.consumerKey = getXMLValue(keyValidationInfoXML/<apim:consumerKey>/*);\n+    apiKeyValidationDto.contentAware = getXMLValue(keyValidationInfoXML/<apim:contentAware>/*);\n+    apiKeyValidationDto.endUserName = getXMLValue(keyValidationInfoXML/<apim:endUserName>/*);\n+    apiKeyValidationDto.endUserToken = getXMLValue(keyValidationInfoXML/<apim:endUserToken>/*);\n+    apiKeyValidationDto.issuedTime = getXMLValue(keyValidationInfoXML/<apim:issuedTime>/*);\n+    apiKeyValidationDto.spikeArrestLimit = getXMLValue(keyValidationInfoXML/<apim:spikeArrestLimit>/*);\n+    apiKeyValidationDto.spikeArrestUnit = getXMLValue(keyValidationInfoXML/<apim:spikeArrestUnit>/*);\n+    apiKeyValidationDto.stopOnQuotaReach = getXMLValue(keyValidationInfoXML/<apim:stopOnQuotaReach>/*);\n+    apiKeyValidationDto.subscriber = getXMLValue(keyValidationInfoXML/<apim:subscriber>/*);\n+    apiKeyValidationDto.subscriberTenantDomain = getXMLValue(keyValidationInfoXML/<apim:subscriberTenantDomain>/*);\n+    apiKeyValidationDto.throttlingDataList = getXMLValue(keyValidationInfoXML/<apim:throttlingDataList>/*);\n+    apiKeyValidationDto.tier = getXMLValue(keyValidationInfoXML/<apim:tier>/*);\n+    apiKeyValidationDto.keyType = getXMLValue(keyValidationInfoXML/<apim:'type>/*);\n+    apiKeyValidationDto.userType = getXMLValue(keyValidationInfoXML/<apim:userType>/*);\n+    apiKeyValidationDto.validationStatus = getXMLValue(keyValidationInfoXML/<apim:validationStatus>/*);\n+    apiKeyValidationDto.validityPeriod = getXMLValue(keyValidationInfoXML/<apim:validityPeriod>/*);\n     return apiKeyValidationDto;\n }\n \n+function getXMLValue(xml xmlValue) returns string {\n+    if(xmlValue is 'xml:Text){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4c6ec31eba720b9501ca512d0f46e2bff50295"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTc2Nzc3OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handlers/jwt_auth_handler.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1OToxOFrOGgW_ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo1OToxOFrOGgW_ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NDI5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(err is error) {\n          \n          \n            \n                        if (err is error) {", "url": "https://github.com/wso2/product-microgateway/pull/1268#discussion_r436584292", "createdAt": "2020-06-08T09:59:18Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/handlers/jwt_auth_handler.bal", "diffHunk": "@@ -336,7 +336,10 @@ public function setJWTHeader(jwt:JwtPayload payload,\n \n         // add to cache if cache enabled\n         if (enabledCaching) {\n-            jwtGeneratorCache.put(cacheKey, generatedToken.toString());\n+            error? err = jwtGeneratorCache.put(<@untainted>cacheKey, <@untainted>generatedToken.toString());\n+            if(err is error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4c6ec31eba720b9501ca512d0f46e2bff50295"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTc4Njk0OnYy", "diffSide": "RIGHT", "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDowNTowOFrOGgXLWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDowNTowOFrOGgXLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU4NzM1Mw==", "bodyText": "Can't we pass this from initAuthHandlers to here? without reading the same config twise in the same flow?", "url": "https://github.com/wso2/product-microgateway/pull/1268#discussion_r436587353", "createdAt": "2020-06-08T10:05:08Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-core/src/main/ballerina/src/gateway/utils/utils.bal", "diffHunk": "@@ -907,11 +911,15 @@ function readMultipleJWTIssuers() {\n         printDebug(KEY_UTILS, \"Found new multiple JWT issuer configs\");\n         string trustStorePath = getConfigValue(LISTENER_CONF_INSTANCE_ID, TRUST_STORE_PATH, DEFAULT_TRUST_STORE_PATH);\n         string trustStorePassword = getConfigValue(LISTENER_CONF_INSTANCE_ID, TRUST_STORE_PASSWORD, DEFAULT_TRUST_STORE_PASSWORD);\n+        int timestampSkew = getConfigIntValue(SERVER_CONF_ID, SERVER_TIMESTAMP_SKEW, DEFAULT_SERVER_TIMESTAMP_SKEW);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4c6ec31eba720b9501ca512d0f46e2bff50295"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1247, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}