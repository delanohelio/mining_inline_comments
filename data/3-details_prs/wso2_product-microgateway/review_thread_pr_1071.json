{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODA2OTEy", "number": 1071, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwODowNTowNFrODkETaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNjo1NVrODkLOOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTQ1ODMzOnYy", "diffSide": "RIGHT", "path": "docker/ubuntu/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwODowNTowNFrOFwM1WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwODowNTowNFrOFwM1WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4NjIzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            CMD ballerina run --config ${GWHOME}/conf/micro-gw.conf /home/exec/${project}.balx 2>&1  | tee -a ${GWHOME}/logs/microgateway.log\n          \n          \n            \n            CMD ballerina run --config ${GWHOME}/conf/micro-gw.conf /home/exec/${project}.balx 2>&1  | tee -a ${GWHOME}/logs/microgateway.log", "url": "https://github.com/wso2/product-microgateway/pull/1071#discussion_r386086232", "createdAt": "2020-03-01T08:05:04Z", "author": {"login": "praminda"}, "path": "docker/ubuntu/Dockerfile", "diffHunk": "@@ -0,0 +1,87 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# set base Docker image to AdoptOpenJDK Ubuntu Docker image\n+FROM adoptopenjdk:8u222-b10-jdk-hotspot\n+LABEL maintainer=\"dev@wso2.org\"\n+\n+ENV LANG=C.UTF-8\n+\n+# set Docker image build arguments\n+# build arguments for user/group configurations\n+ARG USER=ballerina\n+ARG USER_ID=802\n+ARG USER_GROUP=ballerina\n+ARG USER_GROUP_ID=802\n+ARG USER_HOME=/home/${USER}\n+\n+# build arguments for WSO2 product installation\n+ARG MGW_SERVER_NAME=wso2am-micro-gw\n+ARG MGW_SERVER_VERSION=3.0.2\n+ARG MGW_SERVER=${MGW_SERVER_NAME}-${MGW_SERVER_VERSION}\n+ARG MGW_SERVER_HOME=${USER_HOME}/${MGW_SERVER}\n+ARG MGW_RUNTIME_HOME=${USER_HOME}/wso2\n+ARG MGW_SERVER_DIST_URL=https://bintray.com/wso2/binaryGA/download_file?file_path=${MGW_SERVER}.zip\n+\n+# build argument for MOTD\n+ARG MOTD='printf \"\\n\\\n+ Welcome to WSO2 Docker Resources \\n\\\n+ --------------------------------- \\n\\\n+ This Docker container comprises of a WSO2 product, running with its latest GA release \\n\\\n+ which is under the Apache License, Version 2.0. \\n\\\n+ Read more about Apache License, Version 2.0 here @ http://www.apache.org/licenses/LICENSE-2.0.\\n\"'\n+\n+# create the non-root user and group and set MOTD login message\n+RUN \\\n+    groupadd --system -g ${USER_GROUP_ID} ${USER_GROUP} \\\n+    && useradd --system --create-home --home-dir ${USER_HOME} --no-log-init -g ${USER_GROUP_ID} -u ${USER_ID} ${USER} \\\n+    && echo '[ ! -z \"${TERM}\" -a -r /etc/motd ] && cat /etc/motd' >> /etc/bash.bashrc; echo \"${MOTD}\" > /etc/motd\n+\n+# install required packages\n+RUN \\\n+    apt-get update \\\n+    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n+        libxml2-utils \\\n+        netcat \\\n+        unzip \\\n+        wget \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+# add the WSO2 product distribution to user's home directory\n+RUN \\\n+    wget --no-check-certificate -O ${MGW_SERVER}.zip \"${MGW_SERVER_DIST_URL}\" \\\n+    && unzip -d ${USER_HOME} ${MGW_SERVER}.zip \\\n+    && mkdir -p /home/ballerina/${MGW_SERVER}/runtime \\\n+    && mkdir -p /home/ballerina/conf \\\n+    && unzip -d ${MGW_SERVER_HOME}/runtime ${MGW_SERVER_HOME}/runtime.zip  \\\n+    && rm -rf ${MGW_SERVER_HOME}/runtime.zip \\\n+    && cp ${MGW_SERVER_HOME}/lib/gateway/*.jar ${MGW_SERVER_HOME}/runtime/bre/lib/ \\\n+    && mv /home/ballerina/${MGW_SERVER} ${MGW_RUNTIME_HOME} \\\n+    && chown ${USER}:${USER_GROUP} -R ${MGW_RUNTIME_HOME}  \\\n+    && rm -rf ${MGW_SERVER}.zip\n+\n+ENV BALLERINA_HOME ${MGW_RUNTIME_HOME}/runtime\n+ENV PATH $BALLERINA_HOME/bin:$PATH\n+ENV GWHOME ${MGW_RUNTIME_HOME}\n+\n+WORKDIR /home/ballerina\n+\n+USER ballerina\n+\n+# expose ports\n+EXPOSE 9090 9095 9096\n+\n+CMD ballerina run --config ${GWHOME}/conf/micro-gw.conf /home/exec/${project}.balx 2>&1  | tee -a ${GWHOME}/logs/microgateway.log", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ca7d61b1c9a9da2ef1f257b465a9aad8637c837"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjI5NjUyOnYy", "diffSide": "RIGHT", "path": "docker/ubuntu/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyMTozOVrOFwT4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToyMTozOVrOFwT4kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMTc0Nw==", "bodyText": "3.0.x versions are maintained in 3.0.x branch. Can you send this PR to 3.0.x branch?", "url": "https://github.com/wso2/product-microgateway/pull/1071#discussion_r386201747", "createdAt": "2020-03-02T05:21:39Z", "author": {"login": "praminda"}, "path": "docker/ubuntu/Dockerfile", "diffHunk": "@@ -0,0 +1,87 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# set base Docker image to AdoptOpenJDK Ubuntu Docker image\n+FROM adoptopenjdk:8u222-b10-jdk-hotspot\n+LABEL maintainer=\"dev@wso2.org\"\n+\n+ENV LANG=C.UTF-8\n+\n+# set Docker image build arguments\n+# build arguments for user/group configurations\n+ARG USER=ballerina\n+ARG USER_ID=802\n+ARG USER_GROUP=ballerina\n+ARG USER_GROUP_ID=802\n+ARG USER_HOME=/home/${USER}\n+\n+# build arguments for WSO2 product installation\n+ARG MGW_SERVER_NAME=wso2am-micro-gw\n+ARG MGW_SERVER_VERSION=3.0.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4b4f72d1a5e611983103fdbf9c01eb6d1b488c5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjU5MTA1OnYy", "diffSide": "RIGHT", "path": "docker/ubuntu/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNjozNVrOFwWmEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNjozNVrOFwWmEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NjE2MQ==", "bodyText": "Can you compare the alpine dockerfile on master with this file? There are few things we do differently compared to our 3.0.x dockerfile.\nEx:\n\nwe don't do ballerina run, if we do features like observability will not work.\nWe don't expose 9096 port now. Same services are exposed via 9095 on master", "url": "https://github.com/wso2/product-microgateway/pull/1071#discussion_r386246161", "createdAt": "2020-03-02T08:16:35Z", "author": {"login": "praminda"}, "path": "docker/ubuntu/Dockerfile", "diffHunk": "@@ -0,0 +1,87 @@\n+# --------------------------------------------------------------------\n+# Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# -----------------------------------------------------------------------\n+\n+# set base Docker image to AdoptOpenJDK Ubuntu Docker image\n+FROM adoptopenjdk:8u222-b10-jdk-hotspot\n+LABEL maintainer=\"dev@wso2.org\"\n+\n+ENV LANG=C.UTF-8\n+\n+# set Docker image build arguments\n+# build arguments for user/group configurations\n+ARG USER=ballerina\n+ARG USER_ID=802\n+ARG USER_GROUP=ballerina\n+ARG USER_GROUP_ID=802\n+ARG USER_HOME=/home/${USER}\n+\n+# build arguments for WSO2 product installation\n+ARG MGW_SERVER_NAME=wso2am-micro-gw\n+ARG MGW_SERVER_VERSION=3.1.0-beta\n+ARG MGW_SERVER=${MGW_SERVER_NAME}-${MGW_SERVER_VERSION}\n+ARG MGW_SERVER_HOME=${USER_HOME}/${MGW_SERVER}\n+ARG MGW_RUNTIME_HOME=${USER_HOME}/wso2\n+ARG MGW_SERVER_DIST_URL=https://github.com/wso2/product-microgateway/releases/download/${MGW_SERVER_VERSION}/wso2am-micro-gw-linux-${MGW_SERVER_VERSION}.zip\n+\n+# build argument for MOTD\n+ARG MOTD='printf \"\\n\\\n+ Welcome to WSO2 Docker Resources \\n\\\n+ --------------------------------- \\n\\\n+ This Docker container comprises of a WSO2 product, running with its latest GA release \\n\\\n+ which is under the Apache License, Version 2.0. \\n\\\n+ Read more about Apache License, Version 2.0 here @ http://www.apache.org/licenses/LICENSE-2.0.\\n\"'\n+\n+# create the non-root user and group and set MOTD login message\n+RUN \\\n+    groupadd --system -g ${USER_GROUP_ID} ${USER_GROUP} \\\n+    && useradd --system --create-home --home-dir ${USER_HOME} --no-log-init -g ${USER_GROUP_ID} -u ${USER_ID} ${USER} \\\n+    && echo '[ ! -z \"${TERM}\" -a -r /etc/motd ] && cat /etc/motd' >> /etc/bash.bashrc; echo \"${MOTD}\" > /etc/motd\n+\n+# install required packages\n+RUN \\\n+    apt-get update \\\n+    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n+        libxml2-utils \\\n+        netcat \\\n+        unzip \\\n+        wget \\\n+    && rm -rf /var/lib/apt/lists/*\n+\n+# add the WSO2 product distribution to user's home directory\n+RUN \\\n+    wget --no-check-certificate -O ${MGW_SERVER}.zip \"${MGW_SERVER_DIST_URL}\" \\\n+    && unzip -d ${USER_HOME} ${MGW_SERVER}.zip \\\n+    && mkdir -p /home/ballerina/${MGW_SERVER}/runtime \\\n+    && mkdir -p /home/ballerina/conf \\\n+    && unzip -d ${MGW_SERVER_HOME}/runtime ${MGW_SERVER_HOME}/runtime.zip  \\\n+    && rm -rf ${MGW_SERVER_HOME}/runtime.zip \\\n+    && cp ${MGW_SERVER_HOME}/lib/gateway/*.jar ${MGW_SERVER_HOME}/runtime/bre/lib/ \\\n+    && mv /home/ballerina/${MGW_SERVER} ${MGW_RUNTIME_HOME} \\\n+    && chown ${USER}:${USER_GROUP} -R ${MGW_RUNTIME_HOME}  \\\n+    && rm -rf ${MGW_SERVER}.zip\n+\n+ENV BALLERINA_HOME ${MGW_RUNTIME_HOME}/runtime\n+ENV PATH $BALLERINA_HOME/bin:$PATH\n+ENV GWHOME ${MGW_RUNTIME_HOME}\n+\n+WORKDIR /home/ballerina\n+\n+USER ballerina\n+\n+# expose ports\n+EXPOSE 9090 9095 9096\n+\n+CMD ballerina run --config ${GWHOME}/conf/micro-gw.conf /home/exec/${project}.balx 2>&1  | tee -a ${GWHOME}/logs/microgateway.log", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f44d9309edeb5bd6635e70066bedf2d65575bc"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjU5MTkzOnYy", "diffSide": "RIGHT", "path": "docker/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNjo1NVrOFwWmkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNjo1NVrOFwWmkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NjI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ##### 1. Navigatew to ubuntu or alpine folder based on the preference.\n          \n          \n            \n            ##### 1. Navigate to ubuntu or alpine folder based on the preference.", "url": "https://github.com/wso2/product-microgateway/pull/1071#discussion_r386246291", "createdAt": "2020-03-02T08:16:55Z", "author": {"login": "praminda"}, "path": "docker/README.md", "diffHunk": "@@ -1,11 +1,24 @@\n-# Micro-GW Docker Base Image\n+# Dockerfile for Micro-GW Base Image #\n \n-## Building the image\n+This section defines the step-by-step instructions to build an [Ubuntu](https://hub.docker.com/_/ubuntu/) Linux based Docker image and an [Alpine](https://hub.docker.com/_/alpine/) Linux based Docker image for Micro-GW base image.\n \n-1. Build the distribution(product-microgateway/distribution) package using 'mvn clean install'.\n-1. Then copy the 'wso2am-micro-gw-linux-${MGW_VERSION}.zip' to the docker/runtime (product-microgateway/docker/runtime) directory.\n-1. Run the following command to build the base docker image. Command should be executed inside the docker directory\n+## Prerequisites\n+\n+* [Docker](https://www.docker.com/get-docker) v17.09.0 or above\n+\n+## How to build an image\n+\n+##### 1. Navigatew to ubuntu or alpine folder based on the preference.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32f44d9309edeb5bd6635e70066bedf2d65575bc"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1314, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}