{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzQwNDEw", "number": 970, "title": "Application and Transport security", "bodyText": "Purpose\n\nAdd x-wso2-transport extension support\nChange extension name x-wso2-api-security to x-wso2-application-security\nIssues\n\nFixes #969,\n#964\nRelated to wso2/carbon-apimgt#8153\nAutomation tests\n\nUnit tests added: No\nIntegration tests added: No\n\nTested environments\n\ncatalina\n\nMaintainers: Check before merge\n\n Assigned 'Type' label\n Assigned the project\n Validated respective github issues\n Assigned milestone to the github issue(s)", "createdAt": "2020-02-06T07:01:50Z", "url": "https://github.com/wso2/product-microgateway/pull/970", "merged": true, "mergeCommit": {"oid": "af0b4b13909c24d4cce0df5438f7cad4158970dd"}, "closed": true, "closedAt": "2020-02-11T04:33:00Z", "author": {"login": "AmaliMatharaarachchi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcB70XQABqjMwMTY5MjkzODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDKDMwAFqTM1NjQxMzEwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76b8239fee4257460684621d99f1a8784ca6133", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/b76b8239fee4257460684621d99f1a8784ca6133", "committedDate": "2020-02-07T08:52:36Z", "message": "Merge branch 'master' of https://github.com/wso2/product-microgateway into transport-security\n\n\u0001 Conflicts:\n\u0001\tcomponents/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/template/service/BallerinaOperation.java\n\u0001\tcomponents/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java"}, "afterCommit": {"oid": "61e764f259a4c827b4ab563e6d0b9c529a1e08e5", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/61e764f259a4c827b4ab563e6d0b9c529a1e08e5", "committedDate": "2020-02-07T09:20:46Z", "message": "Add http/https enable/disable with x-wso2-transport extension."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61e764f259a4c827b4ab563e6d0b9c529a1e08e5", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/61e764f259a4c827b4ab563e6d0b9c529a1e08e5", "committedDate": "2020-02-07T09:20:46Z", "message": "Add http/https enable/disable with x-wso2-transport extension."}, "afterCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/51254307142291402cd5da3bbd547f5f0bb5eb60", "committedDate": "2020-02-07T09:17:54Z", "message": "Improve"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzA4MTAx", "url": "https://github.com/wso2/product-microgateway/pull/970#pullrequestreview-355708101", "createdAt": "2020-02-10T06:15:36Z", "commit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoxNTozNlrOFnbFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjozMDozNlrOFnbRSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MjUwNA==", "bodyText": "Rename variable\nSuggestion: extensionSecurity", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r376882504", "createdAt": "2020-02-10T06:15:36Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/model/rest/ext/ExtendedAPI.java", "diffHunk": "@@ -30,6 +32,8 @@\n     private String mgwApiSecurity = null;\n     //Scopes\n     private String mgwApiScope = null;\n+    //support apim application level security\n+    private List<String> apiSecurityByExtension = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NDI4NQ==", "bodyText": "openAPI.getExtensions() Keep this in a variable and refer it.", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r376884285", "createdAt": "2020-02-10T06:24:33Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -702,11 +718,25 @@ private static void validateSingleResourceInterceptors(Operation operation, Stri\n      */\n     private static void setMgwAPISecurityAndScopes(ExtendedAPI api, OpenAPI openAPI) {\n         String[] securitySchemasAndScopes = generateMgwSecuritySchemasAndScopes(openAPI.getSecurity());\n+        if (openAPI.getExtensions() != null && !openAPI.getExtensions().isEmpty() &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NDMzOQ==", "bodyText": "Use two statements to casting and calling the method", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r376884339", "createdAt": "2020-02-10T06:24:46Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -702,11 +718,25 @@ private static void validateSingleResourceInterceptors(Operation operation, Stri\n      */\n     private static void setMgwAPISecurityAndScopes(ExtendedAPI api, OpenAPI openAPI) {\n         String[] securitySchemasAndScopes = generateMgwSecuritySchemasAndScopes(openAPI.getSecurity());\n+        if (openAPI.getExtensions() != null && !openAPI.getExtensions().isEmpty() &&\n+                openAPI.getExtensions().containsKey(OpenAPIConstants.APPLICATION_SECURITY)) {\n+            logger.debug(OpenAPIConstants.APPLICATION_SECURITY + \" extension found in the API Definition\");\n+            try {\n+                api.setAPISecurityByExtension((List<String>) ((Map<String, Object>) openAPI.getExtensions()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NTU3Nw==", "bodyText": "setAuthProviders()???", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r376885577", "createdAt": "2020-02-10T06:30:36Z", "author": {"login": "praminda"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -964,26 +997,38 @@ private static boolean isResourceEpUnavailable(Operation operation) {\n         return false;\n     }\n \n-    public static List<String> getAuthProviders(String schemas) {\n+    public static List<String> getAuthProviders(String schemas, List<String> apiSecurityByExtension) {\n         List<String> authProviders = new ArrayList<>();\n-        boolean basic = false;\n-        boolean oauth2 = false;\n-        if (schemas != null) {\n-            String[] schemasArray = schemas.trim().split(\"\\\\s*,\\\\s*\");\n-            for (String s : schemasArray) {\n-                if (s.equalsIgnoreCase(APISecurity.basic.name())) {\n-                    authProviders.add(APISecurity.basic.name());\n-                } else if (s.equalsIgnoreCase(APISecurity.apikey.name())) {\n-                    authProviders.add(APISecurity.apikey.name());\n-                } else if (s.equalsIgnoreCase(APISecurity.oauth2.name())) {\n-                    authProviders.add(APISecurity.oauth2.name());\n-                    authProviders.add(APISecurity.jwt.name());\n+        // Support api manager application level security\n+        if (apiSecurityByExtension != null && !apiSecurityByExtension.isEmpty()) {\n+            for (String securityType : apiSecurityByExtension) {\n+                if (OpenAPIConstants.APPLICATION_LEVEL_SECURITY.containsKey(securityType)) {\n+                    setDefaultSecurityScheme(\n+                            OpenAPIConstants.APPLICATION_LEVEL_SECURITY.get(securityType), authProviders);\n                 }\n             }\n+        } else if (schemas != null) {\n+            String[] schemasArray = schemas.trim().split(\"\\\\s*,\\\\s*\");\n+            for (String securityType : schemasArray) {\n+                setDefaultSecurityScheme(securityType, authProviders);\n+            }\n         }\n+\n         if (authProviders.isEmpty()) {\n-            authProviders.add(APISecurity.oauth2.name());\n-            authProviders.add(APISecurity.jwt.name());\n+            authProviders.add(OpenAPIConstants.APISecurity.oauth2.name());\n+            authProviders.add(OpenAPIConstants.APISecurity.jwt.name());\n+        }\n+        return authProviders;\n+    }\n+\n+    private static List<String> setDefaultSecurityScheme(String securityType, List<String> authProviders) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "910fbfbc3f6e1c6fb651efdd7ce1ec665b616406", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/910fbfbc3f6e1c6fb651efdd7ce1ec665b616406", "committedDate": "2020-02-10T07:52:17Z", "message": "Application and Transport security"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51254307142291402cd5da3bbd547f5f0bb5eb60", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/51254307142291402cd5da3bbd547f5f0bb5eb60", "committedDate": "2020-02-07T09:17:54Z", "message": "Improve"}, "afterCommit": {"oid": "910fbfbc3f6e1c6fb651efdd7ce1ec665b616406", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/910fbfbc3f6e1c6fb651efdd7ce1ec665b616406", "committedDate": "2020-02-10T07:52:17Z", "message": "Application and Transport security"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c023abac6801c1fdbfbeb4795dac35a90ea8b045", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/c023abac6801c1fdbfbeb4795dac35a90ea8b045", "committedDate": "2020-02-10T11:13:09Z", "message": "Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/d736d83d1bca86bab5650370015aa5026f62cc28", "committedDate": "2020-02-10T11:32:39Z", "message": "update readme"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "930b9f4a5894b500263d0e64f38e824596aeb326", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/930b9f4a5894b500263d0e64f38e824596aeb326", "committedDate": "2020-02-10T11:30:14Z", "message": "Update readme"}, "afterCommit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/d736d83d1bca86bab5650370015aa5026f62cc28", "committedDate": "2020-02-10T11:32:39Z", "message": "update readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTIzMzUx", "url": "https://github.com/wso2/product-microgateway/pull/970#pullrequestreview-355923351", "createdAt": "2020-02-10T13:12:28Z", "commit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjoyOFrOFnlfPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjoyOFrOFnlfPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1Mjk4OQ==", "bodyText": "Can't we directly use the extension here rather than assigning it to a object and then passing it to objectmapper", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r377052989", "createdAt": "2020-02-10T13:12:28Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -702,11 +722,26 @@ private static void validateSingleResourceInterceptors(Operation operation, Stri\n      */\n     private static void setMgwAPISecurityAndScopes(ExtendedAPI api, OpenAPI openAPI) {\n         String[] securitySchemasAndScopes = generateMgwSecuritySchemasAndScopes(openAPI.getSecurity());\n+        Map<String, Object> apiDefExtensions = openAPI.getExtensions();\n+        if (apiDefExtensions != null && apiDefExtensions.containsKey(OpenAPIConstants.APPLICATION_SECURITY)) {\n+            logger.debug(OpenAPIConstants.APPLICATION_SECURITY + \" extension found in the API\");\n+            try {\n+                Object appSecurityExtension = apiDefExtensions.get(OpenAPIConstants.APPLICATION_SECURITY);\n+                ApplicationSecurity appSecurity =\n+                        new ObjectMapper().convertValue(appSecurityExtension, ApplicationSecurity.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTIzNDMx", "url": "https://github.com/wso2/product-microgateway/pull/970#pullrequestreview-355923431", "createdAt": "2020-02-10T13:12:35Z", "commit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjozNVrOFnlffA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjozNVrOFnlffA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MzA1Mg==", "bodyText": "Can't we directly use the extension here rather than assigning it to a object and then passing it to objectmapper", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r377053052", "createdAt": "2020-02-10T13:12:35Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -255,12 +250,37 @@ public static ExtendedAPI generateAPIFromOpenAPIDef(OpenAPI openAPI, String open\n         api.setId(apiId);\n         api.setName(openAPI.getInfo().getTitle());\n         api.setVersion(openAPI.getInfo().getVersion());\n-        api.setTransport(Arrays.asList(\"http\", \"https\"));\n+        api.setTransport(getTransport(openAPI));\n         //open API content should be set in json in order to validation filter to work.\n         api.setApiDefinition(openAPIContent);\n         return api;\n     }\n \n+    private static List<String> getTransport(OpenAPI openAPI) {\n+        List<String> transports = new ArrayList<>();\n+        Map<String, Object> apiDefExtensions = openAPI.getExtensions();\n+        if (apiDefExtensions.containsKey(OpenAPIConstants.TRANSPORT_SECURITY)) {\n+            logger.debug(OpenAPIConstants.TRANSPORT_SECURITY + \" extension found in the API Definition\");\n+            try {\n+                Object transportSecurityExtension = apiDefExtensions.get(OpenAPIConstants.TRANSPORT_SECURITY);\n+                TransportSecurity transportSecurity =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTIzNTMw", "url": "https://github.com/wso2/product-microgateway/pull/970#pullrequestreview-355923530", "createdAt": "2020-02-10T13:12:44Z", "commit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjo0NFrOFnlfww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxMjo0NFrOFnlfww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1MzEyMw==", "bodyText": "Can't we directly use the extension here rather than assigning it to a object and then passing it to objectmapper", "url": "https://github.com/wso2/product-microgateway/pull/970#discussion_r377053123", "createdAt": "2020-02-10T13:12:44Z", "author": {"login": "Rajith90"}, "path": "components/micro-gateway-cli/src/main/java/org/wso2/apimgt/gateway/cli/utils/OpenAPICodegenUtils.java", "diffHunk": "@@ -776,9 +811,20 @@ private static void setMgwAPISecurityAndScopes(ExtendedAPI api, OpenAPI openAPI)\n         return new String[]{securitySchemas, scopes};\n     }\n \n-    public static List<String> getMgwResourceSecurity(Operation operation) {\n+    public static List<String> getMgwResourceSecurity(Operation operation, ApplicationSecurity appSecurity) {\n+        Map<String, Object> operationExtensions = operation.getExtensions();\n+        //override api level application security extension by operation level extension\n+        if (operationExtensions != null && operationExtensions.containsKey(OpenAPIConstants.APPLICATION_SECURITY)) {\n+            try {\n+                Object appSecurityExtension = operationExtensions.get(OpenAPIConstants.APPLICATION_SECURITY);\n+                appSecurity = new ObjectMapper().convertValue(appSecurityExtension, ApplicationSecurity.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d736d83d1bca86bab5650370015aa5026f62cc28"}, "originalPosition": 128}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d740d8edaad68118bf6c4b76e0fd4462253e8176", "author": {"user": {"login": "AmaliMatharaarachchi", "name": "Amali Matharaarachchi"}}, "url": "https://github.com/wso2/product-microgateway/commit/d740d8edaad68118bf6c4b76e0fd4462253e8176", "committedDate": "2020-02-11T03:38:10Z", "message": "Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDEzMTAx", "url": "https://github.com/wso2/product-microgateway/pull/970#pullrequestreview-356413101", "createdAt": "2020-02-11T04:30:24Z", "commit": {"oid": "d740d8edaad68118bf6c4b76e0fd4462253e8176"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1140, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}