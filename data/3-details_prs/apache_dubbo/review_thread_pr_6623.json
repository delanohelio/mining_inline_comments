{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NDk3MTA3", "number": 6623, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzoxODo1MFrOEdF-Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzoxOTo1NFrOEdF_xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTQyMDQzOnYy", "diffSide": "RIGHT", "path": "dubbo-plugin/dubbo-qos/src/main/resources/META-INF/dubbo/internal/org.apache.dubbo.qos.probe.ReadinessProbe", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzoxODo1MFrOHIDgqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzoxODo1MFrOHIDgqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIwODE2OQ==", "bodyText": "I didn't find the definition of this class.", "url": "https://github.com/apache/dubbo/pull/6623#discussion_r478208169", "createdAt": "2020-08-27T07:18:50Z", "author": {"login": "chickenlj"}, "path": "dubbo-plugin/dubbo-qos/src/main/resources/META-INF/dubbo/internal/org.apache.dubbo.qos.probe.ReadinessProbe", "diffHunk": "@@ -0,0 +1,2 @@\n+bootstrap = org.apache.dubbo.qos.probe.impl.BootstrapReadinessProbe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f28b6b08885e8a580aeaa192173a40e39d04382"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTQyNDA1OnYy", "diffSide": "RIGHT", "path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/probe/impl/ProviderReadinessProbe.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzoxOTo1NFrOHIDiyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNzozMDo0NlrOHID4rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIwODcxNQ==", "bodyText": "I think checking whether ServiceInstance has been registered would be enough.", "url": "https://github.com/apache/dubbo/pull/6623#discussion_r478208715", "createdAt": "2020-08-27T07:19:54Z", "author": {"login": "chickenlj"}, "path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/probe/impl/ProviderReadinessProbe.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.qos.probe.impl;\n+\n+import org.apache.dubbo.qos.probe.ReadinessProbe;\n+import org.apache.dubbo.rpc.model.ApplicationModel;\n+import org.apache.dubbo.rpc.model.ProviderModel;\n+import org.apache.dubbo.rpc.model.ServiceRepository;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class ProviderReadinessProbe implements ReadinessProbe {\n+    private static ServiceRepository serviceRepository = ApplicationModel.getServiceRepository();\n+\n+    @Override\n+    public boolean check() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f28b6b08885e8a580aeaa192173a40e39d04382"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIxNDMxOA==", "bodyText": "Readiness probe is used in total life cycle. If readiness probe failed, the endpoint will temporarily be removed from service. ServiceInstance is registered when startup.", "url": "https://github.com/apache/dubbo/pull/6623#discussion_r478214318", "createdAt": "2020-08-27T07:30:46Z", "author": {"login": "AlbumenJ"}, "path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/probe/impl/ProviderReadinessProbe.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.qos.probe.impl;\n+\n+import org.apache.dubbo.qos.probe.ReadinessProbe;\n+import org.apache.dubbo.rpc.model.ApplicationModel;\n+import org.apache.dubbo.rpc.model.ProviderModel;\n+import org.apache.dubbo.rpc.model.ServiceRepository;\n+\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class ProviderReadinessProbe implements ReadinessProbe {\n+    private static ServiceRepository serviceRepository = ApplicationModel.getServiceRepository();\n+\n+    @Override\n+    public boolean check() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODIwODcxNQ=="}, "originalCommit": {"oid": "8f28b6b08885e8a580aeaa192173a40e39d04382"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2047, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}