{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDExNDg0", "number": 5635, "title": "allow user to pass AsyncMethodInfo at runtime.", "bodyText": "What is the purpose of the change\nallow AsyncMethodInfo on Invocation to override the configured AsyncMethodInfo, to give user a chance to change AsyncMethodInfo on the fly.\nBrief changelog\nXXXXX\nVerifying this change\nXXXXX\nFollow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a GITHUB_issue field for the change (usually before you start working on it). Trivial changes like typos do not require a GITHUB issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.\n Format the pull request title like [Dubbo-XXX] Fix UnknownException when host config not exist #XXX. Each commit in the pull request should have a meaningful subject line and body.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add sample in dubbo samples project.\n Run mvn clean install -DskipTests=false & mvn clean test-compile failsafe:integration-test to make sure unit-test and integration-test pass.\n If this contribution is large, please follow the Software Donation Guide.", "createdAt": "2020-01-10T11:39:17Z", "url": "https://github.com/apache/dubbo/pull/5635", "merged": true, "mergeCommit": {"oid": "80646ba28fd5c06aeeabaa81e90c469b91e5745d"}, "closed": true, "closedAt": "2020-01-16T09:18:08Z", "author": {"login": "beiwei30"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb489QZAH2gAyMzYxNDExNDg0OmI3NDUwN2I1ODJiYTkwZjRmMmQ0ODA2YzI1ZjVjNzk1MmNhMTg0NmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb61ndGAH2gAyMzYxNDExNDg0OjgxMmVmZGY4Y2NlMzFjZWZiYWEwOTI5M2EwZDdjZTIyZTE1N2JmZTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b74507b582ba90f4f2d4806c25f5c7952ca1846b", "author": {"user": {"login": "beiwei30", "name": "Ian Luo"}}, "url": "https://github.com/apache/dubbo/commit/b74507b582ba90f4f2d4806c25f5c7952ca1846b", "committedDate": "2020-01-10T11:35:54Z", "message": "allow AsyncMethodInfo on Invocation to override the configured AsyncMethodInfo, to give user a chance to change AsyncMethodInfo on the fly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "587b870ad7e23eb616a6f1cf70b984bafb4a50da", "author": {"user": null}, "url": "https://github.com/apache/dubbo/commit/587b870ad7e23eb616a6f1cf70b984bafb4a50da", "committedDate": "2020-01-13T08:55:12Z", "message": "avoid NPE when return type is primitive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0", "author": {"user": {"login": "beiwei30", "name": "Ian Luo"}}, "url": "https://github.com/apache/dubbo/commit/8c05550d233def81a22784bac5d5af21369b77d0", "committedDate": "2020-01-13T13:51:58Z", "message": "allow find consumer-model from invocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjUyODY0", "url": "https://github.com/apache/dubbo/pull/5635#pullrequestreview-343652864", "createdAt": "2020-01-16T03:15:45Z", "commit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzoxNTo0NVrOFeM5yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzoxNTo0NVrOFeM5yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxMzAwMA==", "bodyText": "I think it would be better to put ConsumerModel in the constructor,because it wouldn't change and will get better performance", "url": "https://github.com/apache/dubbo/pull/5635#discussion_r367213000", "createdAt": "2020-01-16T03:15:45Z", "author": {"login": "qinliujie"}, "path": "dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/proxy/InvokerInvocationHandler.java", "diffHunk": "@@ -55,7 +57,12 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n             return invoker.equals(args[0]);\n         }\n         RpcInvocation rpcInvocation = new RpcInvocation(method, invoker.getInterface().getName(), args);\n-        rpcInvocation.setTargetServiceUniqueName(invoker.getUrl().getServiceKey());\n+        String serviceKey = invoker.getUrl().getServiceKey();\n+        if (serviceKey != null) {\n+            rpcInvocation.setTargetServiceUniqueName(serviceKey);\n+            ConsumerModel consumerModel = ApplicationModel.getConsumerModel(serviceKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjUzNTc0", "url": "https://github.com/apache/dubbo/pull/5635#pullrequestreview-343653574", "createdAt": "2020-01-16T03:19:00Z", "commit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzoxOTowMFrOFeM8Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzoxOTowMFrOFeM8Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxMzU4Nw==", "bodyText": "I think you could get  consumerModel directly from invocation attributes", "url": "https://github.com/apache/dubbo/pull/5635#discussion_r367213587", "createdAt": "2020-01-16T03:19:00Z", "author": {"login": "qinliujie"}, "path": "dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/AsyncRpcResult.java", "diffHunk": "@@ -144,7 +148,12 @@ public Result getAppResponse() {\n             // This should never happen;\n             logger.error(\"Got exception when trying to fetch the underlying result from AsyncRpcResult.\", e);\n         }\n-        return new AppResponse();\n+\n+        ConsumerModel consumerModel = ApplicationModel.getConsumerModel(invocation.getTargetServiceUniqueName());\n+        String methodName = invocation.getMethodName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjU2Njcz", "url": "https://github.com/apache/dubbo/pull/5635#pullrequestreview-343656673", "createdAt": "2020-01-16T03:33:18Z", "commit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzozMzoxOVrOFeNGrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMzozMzoxOVrOFeNGrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxNjMwMg==", "bodyText": "why do you need a default value? just null is it ok?", "url": "https://github.com/apache/dubbo/pull/5635#discussion_r367216302", "createdAt": "2020-01-16T03:33:19Z", "author": {"login": "qinliujie"}, "path": "dubbo-rpc/dubbo-rpc-api/src/main/java/org/apache/dubbo/rpc/AsyncRpcResult.java", "diffHunk": "@@ -144,7 +148,12 @@ public Result getAppResponse() {\n             // This should never happen;\n             logger.error(\"Got exception when trying to fetch the underlying result from AsyncRpcResult.\", e);\n         }\n-        return new AppResponse();\n+\n+        ConsumerModel consumerModel = ApplicationModel.getConsumerModel(invocation.getTargetServiceUniqueName());\n+        String methodName = invocation.getMethodName();\n+        String params = ReflectUtils.getDesc(invocation.getParameterTypes());\n+        MethodDescriptor method = consumerModel.getServiceModel().getMethod(methodName, params);\n+        return new AppResponse(ReflectUtils.defaultReturn(method.getReturnClass()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c05550d233def81a22784bac5d5af21369b77d0"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bc85f15b2d6bc7893238369a392d74c54e0866a", "author": {"user": {"login": "beiwei30", "name": "Ian Luo"}}, "url": "https://github.com/apache/dubbo/commit/5bc85f15b2d6bc7893238369a392d74c54e0866a", "committedDate": "2020-01-16T06:11:24Z", "message": "enhance consumer model logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2524a2254a7b08cc8d16b85451c5ce1bedc7a0a0", "author": {"user": {"login": "beiwei30", "name": "Ian Luo"}}, "url": "https://github.com/apache/dubbo/commit/2524a2254a7b08cc8d16b85451c5ce1bedc7a0a0", "committedDate": "2020-01-16T06:39:32Z", "message": "introduce method model in rpc invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "812efdf8cce31cefbaa09293a0d7ce22e157bfe8", "author": {"user": {"login": "beiwei30", "name": "Ian Luo"}}, "url": "https://github.com/apache/dubbo/commit/812efdf8cce31cefbaa09293a0d7ce22e157bfe8", "committedDate": "2020-01-16T08:10:36Z", "message": "fix unit test failure"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2145, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}