{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTIxMjEw", "number": 5581, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNjozMzowNFrODWKXJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozMzo0OFrODYbICA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTY1MDI5OnYy", "diffSide": "RIGHT", "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNjozMzowNFrOFaw3jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNjoyOTowNFrOFbNrSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYwNzk0OA==", "bodyText": "Please delete unused import, otherwise you can't pass ci check.", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r363607948", "createdAt": "2020-01-07T06:33:04Z", "author": {"login": "InstallingB"}, "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java", "diffHunk": "@@ -18,6 +18,7 @@\n \n import org.apache.dubbo.common.utils.Assert;\n import org.apache.dubbo.config.ReferenceConfigBase;\n+import org.apache.dubbo.config.annotation.Service;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bcd1d63f3c180ffb3653c379e6ae89e17211113"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA3OTk0NQ==", "bodyText": "thanks, will do.", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r364079945", "createdAt": "2020-01-08T06:29:04Z", "author": {"login": "beiwei30"}, "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ConsumerModel.java", "diffHunk": "@@ -18,6 +18,7 @@\n \n import org.apache.dubbo.common.utils.Assert;\n import org.apache.dubbo.config.ReferenceConfigBase;\n+import org.apache.dubbo.config.annotation.Service;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYwNzk0OA=="}, "originalCommit": {"oid": "6bcd1d63f3c180ffb3653c379e6ae89e17211113"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTM0NDcwOnYy", "diffSide": "RIGHT", "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ServiceRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoyNTozNVrOFeRQ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoyNTozNVrOFeRQ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4NDQ0Ng==", "bodyText": "if newServiceKey equals serviceKey,then ProviderModel would be remove", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r367284446", "createdAt": "2020-01-16T08:25:35Z", "author": {"login": "qinliujie"}, "path": "dubbo-common/src/main/java/org/apache/dubbo/rpc/model/ServiceRepository.java", "diffHunk": "@@ -84,33 +90,39 @@ public void registerConsumer(String serviceKey,\n                                  ReferenceConfigBase<?> rc,\n                                  Object proxy,\n                                  ServiceMetadata serviceMetadata) {\n-        consumers.computeIfAbsent(\n-                serviceKey,\n-                _k -> new ConsumerModel(\n-                        serviceMetadata.getServiceKey(),\n-                        proxy,\n-                        serviceDescriptor,\n-                        rc,\n-                        serviceMetadata\n-                )\n-        );\n+        ConsumerModel consumerModel = new ConsumerModel(serviceMetadata.getServiceKey(), proxy, serviceDescriptor, rc,\n+                serviceMetadata);\n+        consumers.putIfAbsent(serviceKey, consumerModel);\n+    }\n+\n+    public void reRegisterConsumer(String newServiceKey, String serviceKey) {\n+        ConsumerModel consumerModel = consumers.get(serviceKey);\n+        consumerModel.setServiceKey(newServiceKey);\n+        consumers.putIfAbsent(newServiceKey, consumerModel);\n+        consumers.remove(serviceKey);\n+\n     }\n \n     public void registerProvider(String serviceKey,\n                                  Object serviceInstance,\n                                  ServiceDescriptor serviceModel,\n                                  ServiceConfigBase<?> serviceConfig,\n                                  ServiceMetadata serviceMetadata) {\n-        providers.computeIfAbsent(\n-                serviceKey,\n-                _k -> new ProviderModel(\n-                        serviceKey,\n-                        serviceInstance,\n-                        serviceModel,\n-                        serviceConfig,\n-                        serviceMetadata\n-                )\n-        );\n+        ProviderModel providerModel = new ProviderModel(serviceKey, serviceInstance, serviceModel, serviceConfig,\n+                serviceMetadata);\n+        providers.putIfAbsent(serviceKey, providerModel);\n+        providersWithoutGroup.putIfAbsent(keyWithoutGroup(serviceKey), providerModel);\n+    }\n+\n+    private static String keyWithoutGroup(String serviceKey) {\n+        return interfaceFromServiceKey(serviceKey) + \":\" + versionFromServiceKey(serviceKey);\n+    }\n+\n+    public void reRegisterProvider(String newServiceKey, String serviceKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2948077065693764bff2c6293ef006905d560f"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTM2ODQwOnYy", "diffSide": "RIGHT", "path": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryDirectory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozMzo0OFrOFeReig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozMzo0OFrOFeReig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4Nzk0Ng==", "bodyText": "is it should be if (shouldSimplified)", "url": "https://github.com/apache/dubbo/pull/5581#discussion_r367287946", "createdAt": "2020-01-16T08:33:48Z", "author": {"login": "qinliujie"}, "path": "dubbo-registry/dubbo-registry-api/src/main/java/org/apache/dubbo/registry/integration/RegistryDirectory.java", "diffHunk": "@@ -616,8 +641,14 @@ public URL getRegisteredConsumerUrl() {\n         return registeredConsumerUrl;\r\n     }\r\n \r\n-    public void setRegisteredConsumerUrl(URL registeredConsumerUrl) {\r\n-        this.registeredConsumerUrl = registeredConsumerUrl;\r\n+    public void setRegisteredConsumerUrl(URL url) {\r\n+        if (!shouldSimplified) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2948077065693764bff2c6293ef006905d560f"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2049, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}