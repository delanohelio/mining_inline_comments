{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzMwOTkw", "number": 6773, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNTo0OFrOEnvQKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyNDo1MlrOE5Qc-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTA0MTA1OnYy", "diffSide": "RIGHT", "path": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationClusterComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNTo0OFrOHYfv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNTo0OFrOHYfv5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ0ODAzOA==", "bodyText": "i think you should delete this duplicate license", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r495448038", "createdAt": "2020-09-26T11:35:48Z", "author": {"login": "zouyx"}, "path": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationClusterComparator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.rpc.cluster.support.migration;\n+\n+import org.apache.dubbo.common.extension.SPI;\n+import org.apache.dubbo.rpc.Invoker;\n+\n+import java.util.List;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5930d71d7bd5a3904af810622f283c666ecf3eea"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTA0MTQ0OnYy", "diffSide": "RIGHT", "path": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationClusterInvoker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNjoyNFrOHYfwEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNjoyNFrOHYfwEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ0ODA4Mw==", "bodyText": "as above", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r495448083", "createdAt": "2020-09-26T11:36:24Z", "author": {"login": "zouyx"}, "path": "dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationClusterInvoker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.rpc.cluster.support.migration;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.rpc.cluster.ClusterInvoker;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5930d71d7bd5a3904af810622f283c666ecf3eea"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTA0MTcxOnYy", "diffSide": "RIGHT", "path": "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationRuleTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNjo1OFrOHYfwNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxMTozNjo1OFrOHYfwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ0ODExOA==", "bodyText": "as abovw", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r495448118", "createdAt": "2020-09-26T11:36:58Z", "author": {"login": "zouyx"}, "path": "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/support/migration/MigrationRuleTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.rpc.cluster.support.migration;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5930d71d7bd5a3904af810622f283c666ecf3eea"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDY4MDEzOnYy", "diffSide": "RIGHT", "path": "dubbo-common/src/main/java/org/apache/dubbo/config/AbstractInterfaceConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjo1MzozNVrOHzmnEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwMjo0ODowM1rOIXgK1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3MjAxNg==", "bodyText": "Why change this behaviour?", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r523872016", "createdAt": "2020-11-16T02:53:35Z", "author": {"login": "chickenlj"}, "path": "dubbo-common/src/main/java/org/apache/dubbo/config/AbstractInterfaceConfig.java", "diffHunk": "@@ -451,11 +451,18 @@ public void setLayer(String layer) {\n         this.layer = layer;\n     }\n \n+    /**\n+     * Always use the global ApplicationConfig\n+     */\n     public ApplicationConfig getApplication() {\n-        if (application != null) {\n+        ApplicationConfig globalApplication = ApplicationModel.getConfigManager().getApplicationOrElseThrow();\n+        if (globalApplication == null) {\n+            return application;\n+        }\n+        if (application != null && !application.getName().equals(globalApplication.getName())) {\n             return application;\n         }\n-        return ApplicationModel.getConfigManager().getApplicationOrElseThrow();\n+        return globalApplication;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTUxNTIyMw==", "bodyText": "merge from 3.0 ?", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r561515223", "createdAt": "2021-01-21T02:48:03Z", "author": {"login": "quhongwei"}, "path": "dubbo-common/src/main/java/org/apache/dubbo/config/AbstractInterfaceConfig.java", "diffHunk": "@@ -451,11 +451,18 @@ public void setLayer(String layer) {\n         this.layer = layer;\n     }\n \n+    /**\n+     * Always use the global ApplicationConfig\n+     */\n     public ApplicationConfig getApplication() {\n-        if (application != null) {\n+        ApplicationConfig globalApplication = ApplicationModel.getConfigManager().getApplicationOrElseThrow();\n+        if (globalApplication == null) {\n+            return application;\n+        }\n+        if (application != null && !application.getName().equals(globalApplication.getName())) {\n             return application;\n         }\n-        return ApplicationModel.getConfigManager().getApplicationOrElseThrow();\n+        return globalApplication;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3MjAxNg=="}, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDcyNjc3OnYy", "diffSide": "LEFT", "path": "dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulServiceDiscoveryFactory.java~HEAD", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoxNzo0OFrOHznCpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoxNzo0OFrOHznCpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3OTA3Nw==", "bodyText": "This file and the following should be removed.", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r523879077", "createdAt": "2020-11-16T03:17:48Z", "author": {"login": "chickenlj"}, "path": "dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulServiceDiscoveryFactory.java~HEAD", "diffHunk": "@@ -14,15 +14,17 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.dubbo.registry.multicast;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDczMTk3OnYy", "diffSide": "RIGHT", "path": "dubbo-registry/dubbo-registry-multiple/src/main/java/org/apache/dubbo/registry/multiple/MultipleRegistryServiceDiscoveryFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyMToxM1rOHznFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyMToxM1rOHznFag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3OTc4Ng==", "bodyText": "Missing Apache license header", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r523879786", "createdAt": "2020-11-16T03:21:13Z", "author": {"login": "chickenlj"}, "path": "dubbo-registry/dubbo-registry-multiple/src/main/java/org/apache/dubbo/registry/multiple/MultipleRegistryServiceDiscoveryFactory.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package org.apache.dubbo.registry.multiple;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDczMjM2OnYy", "diffSide": "RIGHT", "path": "dubbo-registry/dubbo-registry-multiple/src/main/java/org/apache/dubbo/registry/multiple/MultipleRegistryServiceDiscovery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyMToyNlrOHznFmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyMToyNlrOHznFmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg3OTgzNQ==", "bodyText": "duplicate license header", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r523879835", "createdAt": "2020-11-16T03:21:26Z", "author": {"login": "chickenlj"}, "path": "dubbo-registry/dubbo-registry-multiple/src/main/java/org/apache/dubbo/registry/multiple/MultipleRegistryServiceDiscovery.java", "diffHunk": "@@ -0,0 +1,193 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dubbo.registry.multiple;\n+\n+import org.apache.dubbo.common.URL;\n+import org.apache.dubbo.common.constants.CommonConstants;\n+import org.apache.dubbo.common.utils.DefaultPage;\n+import org.apache.dubbo.common.utils.Page;\n+import org.apache.dubbo.event.ConditionalEventListener;\n+import org.apache.dubbo.registry.client.ServiceDiscovery;\n+import org.apache.dubbo.registry.client.ServiceDiscoveryFactory;\n+import org.apache.dubbo.registry.client.ServiceInstance;\n+import org.apache.dubbo.registry.client.event.ServiceInstancesChangedEvent;\n+import org.apache.dubbo.registry.client.event.listener.ServiceInstancesChangedListener;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDczODUwOnYy", "diffSide": "RIGHT", "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosServiceDiscovery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMzoyNDo1MlrOHznIzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQwMjozNzo1OVrOIXfiSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4MDY1Mw==", "bodyText": "Is this outdated changes?", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r523880653", "createdAt": "2020-11-16T03:24:52Z", "author": {"login": "chickenlj"}, "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosServiceDiscovery.java", "diffHunk": "@@ -116,16 +112,10 @@ public void unregister(ServiceInstance serviceInstance) throws RuntimeException\n     public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)\n             throws NullPointerException, IllegalArgumentException {\n         execute(namingService, service -> {\n-            listener.getServiceNames().forEach(serviceName -> {\n-                try {\n-                    service.subscribe(serviceName, e -> { // Register Nacos EventListener\n-                        if (e instanceof NamingEvent) {\n-                            NamingEvent event = (NamingEvent) e;\n-                            handleEvent(event, listener);\n-                        }\n-                    });\n-                } catch (NacosException e) {\n-                    e.printStackTrace();\n+            service.subscribe(listener.getServiceNames(), e -> { // Register Nacos EventListener\n+                if (e instanceof NamingEvent) {\n+                    NamingEvent event = (NamingEvent) e;\n+                    handleEvent(event, listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTUwNDg0MQ==", "bodyText": "merge from dubbo 3.0", "url": "https://github.com/apache/dubbo/pull/6773#discussion_r561504841", "createdAt": "2021-01-21T02:37:59Z", "author": {"login": "quhongwei"}, "path": "dubbo-registry/dubbo-registry-nacos/src/main/java/org/apache/dubbo/registry/nacos/NacosServiceDiscovery.java", "diffHunk": "@@ -116,16 +112,10 @@ public void unregister(ServiceInstance serviceInstance) throws RuntimeException\n     public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)\n             throws NullPointerException, IllegalArgumentException {\n         execute(namingService, service -> {\n-            listener.getServiceNames().forEach(serviceName -> {\n-                try {\n-                    service.subscribe(serviceName, e -> { // Register Nacos EventListener\n-                        if (e instanceof NamingEvent) {\n-                            NamingEvent event = (NamingEvent) e;\n-                            handleEvent(event, listener);\n-                        }\n-                    });\n-                } catch (NacosException e) {\n-                    e.printStackTrace();\n+            service.subscribe(listener.getServiceNames(), e -> { // Register Nacos EventListener\n+                if (e instanceof NamingEvent) {\n+                    NamingEvent event = (NamingEvent) e;\n+                    handleEvent(event, listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg4MDY1Mw=="}, "originalCommit": {"oid": "962d089bd5bef9f58aa5bd139be556d336c62360"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2032, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}