{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4OTQxNzI0", "number": 6365, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0ODo1MFrOEINS7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0OToyNlrOEINTRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQxOTAxOnYy", "diffSide": "RIGHT", "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0ODo1MFrOGoB-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjoyMDozNlrOGqCvOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODcxNQ==", "bodyText": "Recommend to implement the interface org.apache.dubbo.common.lang.Prioritized", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r444628715", "createdAt": "2020-06-24T03:48:50Z", "author": {"login": "mercyblitz"}, "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java", "diffHunk": "@@ -28,6 +28,11 @@\n @SPI\n public interface TypeBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27b9e7248264cccc3193b7522b53f0a5efb1f64"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczODIzMg==", "bodyText": "\u5df2\u7ecf\u4fee\u6539\u3002", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r446738232", "createdAt": "2020-06-29T02:20:36Z", "author": {"login": "cvictory"}, "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/builder/TypeBuilder.java", "diffHunk": "@@ -28,6 +28,11 @@\n @SPI\n public interface TypeBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODcxNQ=="}, "originalCommit": {"oid": "d27b9e7248264cccc3193b7522b53f0a5efb1f64"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDQxOTg4OnYy", "diffSide": "RIGHT", "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMzo0OToyNlrOGoB_aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjoyMDozNFrOGqCvLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODg0Mw==", "bodyText": "Then invoke org.apache.dubbo.common.extension.ExtensionLoader#getSupportedExtensionInstances() using the internal sorting.", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r444628843", "createdAt": "2020-06-24T03:49:26Z", "author": {"login": "mercyblitz"}, "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java", "diffHunk": "@@ -36,14 +37,20 @@\n  */\n public class TypeDefinitionBuilder {\n     private static final Logger logger = LoggerFactory.getLogger(TypeDefinitionBuilder.class);\n-    private static final List<TypeBuilder> BUILDERS;\n+    static final List<TypeBuilder> BUILDERS;\n \n     static {\n         List<TypeBuilder> builders = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27b9e7248264cccc3193b7522b53f0a5efb1f64"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczODIyMw==", "bodyText": "done", "url": "https://github.com/apache/dubbo/pull/6365#discussion_r446738223", "createdAt": "2020-06-29T02:20:34Z", "author": {"login": "cvictory"}, "path": "dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/TypeDefinitionBuilder.java", "diffHunk": "@@ -36,14 +37,20 @@\n  */\n public class TypeDefinitionBuilder {\n     private static final Logger logger = LoggerFactory.getLogger(TypeDefinitionBuilder.class);\n-    private static final List<TypeBuilder> BUILDERS;\n+    static final List<TypeBuilder> BUILDERS;\n \n     static {\n         List<TypeBuilder> builders = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODg0Mw=="}, "originalCommit": {"oid": "d27b9e7248264cccc3193b7522b53f0a5efb1f64"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2052, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}