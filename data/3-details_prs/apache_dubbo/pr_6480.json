{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMjExNzA1", "number": 6480, "title": "fix expire cache time", "bodyText": "What is the purpose of the change\n\nfix expire cache bug\nOptimize code\n\npublic static void main(String[] args) {\n\tMap<String, String> map = new ConcurrentHashMap<>();\n\tmap.put(\"cache.seconds\", \"10\");\n\tmap.put(\"cache.interval\", \"10\");\n\tURL url = new URL(\"\", \"\", \"\", \"\", 8888, \"\", map);\n\tExpiringCache cache = new ExpiringCache(url);\n\n\tlong start = System.currentTimeMillis();\n\tboolean in = false;\n\tboolean out10 = false;\n\tboolean out20 = false;\n\twhile (true) {\n\t\tlong end = System.currentTimeMillis();\n\t\t// put k,v in 5s when the programmer start\n\t\tif (!in && (end - start) > 5 * 1000) {\n\t\t\tcache.put(\"aaa\", \"aaa\");\n\t\t\tcache.put(\"bbb\", \"bbb\");\n\t\t\tlog.info(\"put val\");\n\t\t\tin = true;\n\t\t}\n\t\t// get value after expire time(10s)\n\t\t// but I get can get the value where is no null. wrong\n\t\tif (!out10 && (end - start) > 16 * 1000) {\n\t\t\tlog.info(\"val = {}\", cache.get(\"aaa\"));\n\t\t\tout10 = true;\n\t\t}\n\n\t\t// second thread clean\u3002this is null, currect\n\t\tif (!out20 && (end - start) > 21 * 1000) {\n\t\t\tlog.info(\"val = {}\", cache.get(\"bbb\"));\n\t\t\tout20 = true;\n\t\t}\n\t}\n}\nLet's look at this piece of code. Set the expiration time to 10s and clear the cache every 10s. At the 5s, we put \"aaa\" and \"bbb\" into memory. In theory, after 15s, he should be cleared. When we took the aaa-key in 16s, he was still in memory. And when we took the bbb-key in 21s, he was null. At this time we The bug can be located.\nBrief changelog\nfix expire cache map\nVerifying this change\nXXXXX\nFollow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a GITHUB_issue field for the change (usually before you start working on it). Trivial changes like typos do not require a GITHUB issue. Your pull request should address just this issue, without pulling in other changes - one PR resolves one issue.\n Format the pull request title like [Dubbo-XXX] Fix UnknownException when host config not exist #XXX. Each commit in the pull request should have a meaningful subject line and body.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Write necessary unit-test to verify your logic correction, more mock a little better when cross module dependency exist. If the new feature or significant change is committed, please remember to add sample in dubbo samples project.\n Run mvn clean install -DskipTests=false & mvn clean test-compile failsafe:integration-test to make sure unit-test and integration-test pass.\n If this contribution is large, please follow the Software Donation Guide.", "createdAt": "2020-07-16T13:48:56Z", "url": "https://github.com/apache/dubbo/pull/6480", "merged": true, "mergeCommit": {"oid": "4d5158fcef4e446eb1c0de00f5a3aa4847d8de26"}, "closed": true, "closedAt": "2021-03-26T03:47:43Z", "author": {"login": "wenbochang888"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1fIjWAH2gAyNDUwMjExNzA1OjRkYmVkOWZjNTQwNzE4MTMyNjljZTdmZGQyNjAzNDE3NDE3ZDU5MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeGyjB9gFqTYyMTc2MzIwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4dbed9fc54071813269ce7fdd2603417417d5908", "author": {"user": null}, "url": "https://github.com/apache/dubbo/commit/4dbed9fc54071813269ce7fdd2603417417d5908", "committedDate": "2020-07-16T13:20:28Z", "message": "fix expire cache time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjExNjY2NTE0", "url": "https://github.com/apache/dubbo/pull/6480#pullrequestreview-611666514", "createdAt": "2021-03-14T07:22:14Z", "commit": {"oid": "4dbed9fc54071813269ce7fdd2603417417d5908"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzoyMjoxNFrOI2WEiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNFQwNzoyMjoxNFrOI2WEiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mzg1NTYyNA==", "bodyText": "shall we check if expireThread.getTimeToLive() is zero or even negative", "url": "https://github.com/apache/dubbo/pull/6480#discussion_r593855624", "createdAt": "2021-03-14T07:22:14Z", "author": {"login": "AlbumenJ"}, "path": "dubbo-filter/dubbo-filter-cache/src/main/java/org/apache/dubbo/cache/support/expiring/ExpiringMap.java", "diffHunk": "@@ -84,6 +84,11 @@ public V put(K key, V value) {\n     public V get(Object key) {\n         ExpiryObject object = delegateMap.get(key);\n         if (object != null) {\n+            long timeIdle = System.currentTimeMillis() - object.getLastAccessTime();\n+            if (timeIdle >= expireThread.getTimeToLive() * 1000) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dbed9fc54071813269ce7fdd2603417417d5908"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccf39b7f1dd21d5f95afe69152ce0598bfcd2d57", "author": {"user": null}, "url": "https://github.com/apache/dubbo/commit/ccf39b7f1dd21d5f95afe69152ce0598bfcd2d57", "committedDate": "2021-03-24T12:54:03Z", "message": "timeToLive > 0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNzYzMjA1", "url": "https://github.com/apache/dubbo/pull/6480#pullrequestreview-621763205", "createdAt": "2021-03-26T03:45:27Z", "commit": {"oid": "ccf39b7f1dd21d5f95afe69152ce0598bfcd2d57"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2063, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}