{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MjExMTY1", "number": 1529, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo0MzoyMFrOEwcWvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo0MzoyMFrOEwcWvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjMxNjc5OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/util/BitConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo0MzoyMFrOHmAvEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTo0MzoyMFrOHmAvEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYxOTk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (offset >sizeBuf.length) {\n          \n          \n            \n                    if (offset > sizeBuf.length) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1529#discussion_r509619987", "createdAt": "2020-10-21T19:43:20Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/util/BitConverter.java", "diffHunk": "@@ -100,12 +107,20 @@ public static String bytesToHex(byte[] bytes, int offset, int length) {\n \r\n     /**\r\n      * @param sizeBuf byte array that will be converted to int\r\n-     * @return int converted from byte array or -1 if byte array is null\r\n+     * @param offset The position indicating where to begin converting.\r\n+     * @return int converted from byte array,\r\n+     * -1 if byte array is null,\r\n+     * and 0 if the offset is greater than the length of the byte array\r\n      */\r\n     public static int intFromByteArray(byte[] sizeBuf, int offset) {\r\n         if (sizeBuf == null) {\r\n             return -1;\r\n         }\r\n+\r\n+        if (offset >sizeBuf.length) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df1234a869b2acb1c509c27272d4ef682fc8d45a"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4308, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}