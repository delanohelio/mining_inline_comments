{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDA1MjUw", "number": 1307, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowMDoyNFrODnm0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzo0MTowOVrODpnKBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODU3MDU5OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowMDoyNVrOF1tQDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowMDoyNVrOF1tQDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2MDIzOQ==", "bodyText": "No need to check primitives for null:\n@Override\npublic int hashCode() {\n    int result = 1;\n    result += ((getName() == null) ? 0 : Integer.rotateLeft(getName().hashCode(), 1));\n    result += ((getUri() == null) ? 0 : Integer.rotateLeft(getUri().hashCode(), 2));\n    result += ((getFileData() == null) ? 0 : Integer.rotateLeft(getFileData().hashCode(), 3));\n    result += ((getType() == null) ? 0 : Integer.rotateLeft(getType().hashCode(), 4));\n    result += Integer.rotateLeft(Boolean.valueOf(isStaticIcon()).hashCode(), 5);\n    result += Integer.rotateLeft(Boolean.valueOf(isPersistent()).hashCode(), 6);\n    result += Integer.rotateLeft(Integer.valueOf(getResourceId()).hashCode(), 7);\n    return result;\n}", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r391860239", "createdAt": "2020-03-12T20:00:25Z", "author": {"login": "bilal-alsharifi"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "diffHunk": "@@ -237,4 +237,37 @@ public boolean getOverwrite() {\n     public void setOverwrite(boolean overwrite) {\n         this.overwrite = overwrite;\n     }\n+\n+    /**\n+     * Used to compile hashcode for SdlFile for use to compare in overridden equals method\n+     * @return Custom hashcode of SdlFile variables\n+     */\n+    @Override\n+    public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e03c8f16f04f088ca3904db9fa9cb78d479b1ce"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODU4NTE2OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/managers/screen/SoftButtonManagerTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowMjo1MFrOF1tXjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowMjo1MFrOF1tXjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2MjE1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testSoftButtonEquals() {\n          \n          \n            \n                public void testSoftButtonObjectEquals() {\n          \n      \n    \n    \n  \n\nSoftButton and SoftButtonObjects are two different classes", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r391862158", "createdAt": "2020-03-12T20:02:50Z", "author": {"login": "bilal-alsharifi"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/managers/screen/SoftButtonManagerTests.java", "diffHunk": "@@ -305,4 +308,101 @@ public void testAssigningIdsToSoftButtonObjects() {\n         assertEquals(\"SoftButtonObject id doesn't match the expected value\", 100, sbo4.getButtonId());\n         assertEquals(\"SoftButtonObject id doesn't match the expected value\", 103, sbo5.getButtonId());\n     }\n+\n+    /**\n+     * Test custom overridden softButtonObject equals method\n+     */\n+    public void testSoftButtonEquals() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e03c8f16f04f088ca3904db9fa9cb78d479b1ce"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODYxMjY1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/managers/screen/SoftButtonObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowNzoyN1rOF1tmZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowNzoyN1rOF1tmZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NTk1OQ==", "bodyText": "buttonId should be compared too", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r391865959", "createdAt": "2020-03-12T20:07:27Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/SoftButtonObject.java", "diffHunk": "@@ -309,4 +309,35 @@ public void setOnEventListener(OnEventListener onEventListener) {\n          */\n         void onUpdate();\n     }\n+\n+    /**\n+     * Used to compile hashcode for SoftButtonsObjects for use to compare in equals method\n+     * @return Custom hashcode of SoftButtonObjects variables\n+     */\n+    @Override\n+    public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e03c8f16f04f088ca3904db9fa9cb78d479b1ce"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODYzNjczOnYy", "diffSide": "RIGHT", "path": "javaSE/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxMjo1MlrOF1t0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxMjo1MlrOF1t0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2OTQ2MQ==", "bodyText": "primitives don't need to be checked for null:\n@Override\npublic int hashCode() {\n    int result = 1;\n    result += ((getName() == null) ? 0 : Integer.rotateLeft(getName().hashCode(), 1));\n    result += ((getFilePath() == null) ? 0 : Integer.rotateLeft(getFilePath().hashCode(), 2));\n    result += ((getFileData() == null) ? 0 : Integer.rotateLeft(getFileData().hashCode(), 3));\n    result += ((getType() == null) ? 0 : Integer.rotateLeft(getType().hashCode(), 4));\n    result += Integer.rotateLeft(Boolean.valueOf(isStaticIcon()).hashCode(), 5);\n    result += Integer.rotateLeft(Boolean.valueOf(isPersistent()).hashCode(), 6);\n    return result;\n}", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r391869461", "createdAt": "2020-03-12T20:12:52Z", "author": {"login": "bilal-alsharifi"}, "path": "javaSE/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "diffHunk": "@@ -203,4 +203,36 @@ public boolean getOverwrite() {\n     public void setOverwrite(boolean overwrite) {\n         this.overwrite = overwrite;\n     }\n+\n+    /**\n+     * Used to compile hashcode for SdlFile for use to compare in equals method\n+     * @return Custom hashcode of SdlFile variables\n+     */\n+    @Override\n+    public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e03c8f16f04f088ca3904db9fa9cb78d479b1ce"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODY0MTUyOnYy", "diffSide": "RIGHT", "path": "javaSE/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxNDoyOFrOF1t3FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoxNDoyOFrOF1t3FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3MDIyOA==", "bodyText": "Since SdlFile has an equals() method now, we can use it in MenuCell & ChoiceCell's hashCode().", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r391870228", "createdAt": "2020-03-12T20:14:28Z", "author": {"login": "bilal-alsharifi"}, "path": "javaSE/src/main/java/com/smartdevicelink/managers/file/filetypes/SdlFile.java", "diffHunk": "@@ -203,4 +203,36 @@ public boolean getOverwrite() {\n     public void setOverwrite(boolean overwrite) {\n         this.overwrite = overwrite;\n     }\n+\n+    /**\n+     * Used to compile hashcode for SdlFile for use to compare in equals method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e03c8f16f04f088ca3904db9fa9cb78d479b1ce"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTU5NzUxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/managers/screen/choiceset/ChoiceCell.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzo0MTowOVrOF45guA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzo0MTowOVrOF45guA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwNjg0MA==", "bodyText": "The getSecondaryArtwork() line also needs to be updated", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1307#discussion_r395206840", "createdAt": "2020-03-19T17:41:09Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/choiceset/ChoiceCell.java", "diffHunk": "@@ -224,7 +224,7 @@ public int hashCode() {\n         result += ((getText() == null) ? 0 : Integer.rotateLeft(getText().hashCode(), 1));\n         result += ((getSecondaryText() == null) ? 0 : Integer.rotateLeft(getSecondaryText().hashCode(), 2));\n         result += ((getTertiaryText() == null) ? 0 : Integer.rotateLeft(getTertiaryText().hashCode(), 3));\n-        result += ((getArtwork() == null || getArtwork().getName() == null) ? 0 : Integer.rotateLeft(getArtwork().getName().hashCode(), 4));\n+        result += ((getArtwork() == null) ? 0 : Integer.rotateLeft(getArtwork().hashCode(), 4));\n         result += ((getSecondaryArtwork() == null || getSecondaryArtwork().getName() == null) ? 0 : Integer.rotateLeft(getSecondaryArtwork().getName().hashCode(), 5));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ab2b725be1556eee326b89a8788a9768971ab0"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4355, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}