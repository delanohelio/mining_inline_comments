{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjg5MTI3", "number": 1560, "reviewThreads": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDowOTo1N1rOFD6X2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMTo1NToyMlrOFNbVwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ2NDI2OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDowOTo1N1rOIDx72Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo1MjoyMVrOIEeTSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzNDc3Nw==", "bodyText": "@kostyaBoss you can remove this unused import on line 7.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540834777", "createdAt": "2020-12-11T10:09:57Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java", "diffHunk": "@@ -4,6 +4,7 @@\n import com.smartdevicelink.marshal.JsonRPCMarshaller;\n import com.smartdevicelink.protocol.enums.FunctionID;\n import com.smartdevicelink.proxy.RPCMessage;\n+import com.smartdevicelink.proxy.rpc.ClimateData;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MTY3NA==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541561674", "createdAt": "2020-12-12T11:52:21Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java", "diffHunk": "@@ -4,6 +4,7 @@\n import com.smartdevicelink.marshal.JsonRPCMarshaller;\n import com.smartdevicelink.protocol.enums.FunctionID;\n import com.smartdevicelink.proxy.RPCMessage;\n+import com.smartdevicelink.proxy.rpc.ClimateData;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzNDc3Nw=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ2OTQ2OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxMTowM1rOIDx-oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxMTowM1rOIDx-oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzNTQ4OA==", "bodyText": "@kostyaBoss you can remove this unused import on line 7.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540835488", "createdAt": "2020-12-11T10:11:03Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java", "diffHunk": "@@ -4,8 +4,10 @@\n import com.smartdevicelink.protocol.enums.FunctionID;\n import com.smartdevicelink.proxy.RPCMessage;\n import com.smartdevicelink.proxy.rpc.AirbagStatus;\n+import com.smartdevicelink.proxy.rpc.Alert;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ3MDMxOnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxMToxN1rOIDx_Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxMToxN1rOIDx_Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzNTYxNA==", "bodyText": "@kostyaBoss you can remove this unused import on line 23.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540835614", "createdAt": "2020-12-11T10:11:17Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java", "diffHunk": "@@ -18,6 +20,7 @@\n import com.smartdevicelink.proxy.rpc.MyKey;\n import com.smartdevicelink.proxy.rpc.SingleTireStatus;\n import com.smartdevicelink.proxy.rpc.StabilityControlsStatus;\n+import com.smartdevicelink.proxy.rpc.Temperature;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ4NzM1OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNDo1NVrOIDyIiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo1MDozM1rOIEeSOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzODAyNQ==", "bodyText": "@kostyaBoss On line 269 this should be UnsubscribeVehicleDataResponse.KEY_CLIMATE_DATA instead of UnsubscribeVehicleDataResponse.KEY_STABILITY_CONTROLS_STATUS.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540838025", "createdAt": "2020-12-11T10:14:55Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java", "diffHunk": "@@ -262,6 +266,7 @@ public void testJsonConstructor() {\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_WINDOW_STATUS), cmd.getWindowStatus());\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_GEAR_STATUS), cmd.getGearStatus());\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_STABILITY_CONTROLS_STATUS), cmd.getStabilityControlsStatus());\n+            assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_STABILITY_CONTROLS_STATUS), cmd.getClimateData());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MTQwMg==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541561402", "createdAt": "2020-12-12T11:50:33Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java", "diffHunk": "@@ -262,6 +266,7 @@ public void testJsonConstructor() {\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_WINDOW_STATUS), cmd.getWindowStatus());\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_GEAR_STATUS), cmd.getGearStatus());\n             assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_STABILITY_CONTROLS_STATUS), cmd.getStabilityControlsStatus());\n+            assertEquals(TestValues.MATCH, JsonUtils.readBooleanFromJsonObject(parameters, UnsubscribeVehicleData.KEY_STABILITY_CONTROLS_STATUS), cmd.getClimateData());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzODAyNQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjQ5NTI2OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxNjo1NFrOIDyNLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo0NTo0NVrOIEePkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzOTIxNA==", "bodyText": "@kostyaBoss On line 38 I would rename atmPressure to atmosphericPressure.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540839214", "createdAt": "2020-12-11T10:16:54Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MDcyMw==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541560723", "createdAt": "2020-12-12T11:45:45Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzOTIxNA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUwMDg4OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxODowOVrOIDyQUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo0ODozNlrOIEeRIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MDAxNg==", "bodyText": "@kostyaBoss On line 69 I would combine the two ifs into one if since they both have the same code.\nSo you can make it if (key.equals(ClimateData.KEY_CABIN_TEMPERATURE) || key.equals(ClimateData.KEY_EXTERNAL_TEMPERATURE))", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540840016", "createdAt": "2020-12-11T10:18:09Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();\n+\n+        // Valid Tests\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, cabinTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, externalTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_FLOAT, atmPressure);\n+\n+        // Invalid/Null Tests\n+        ClimateData msg = new ClimateData();\n+        assertNotNull(TestValues.NOT_NULL, msg);\n+\n+        assertNull(TestValues.NULL, msg.getAtmosphericPressure());\n+        assertNull(TestValues.NULL, msg.getCabinTemperature());\n+        assertNull(TestValues.NULL, msg.getExternalTemperature());\n+    }\n+\n+    public void testJson() {\n+        JSONObject reference = new JSONObject();\n+\n+        try {\n+            reference.put(ClimateData.KEY_EXTERNAL_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_CABIN_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_ATMOSPHERIC_PRESSURE, TestValues.GENERAL_FLOAT);\n+\n+            JSONObject underTest = msg.serializeJSON();\n+            assertEquals(TestValues.MATCH, reference.length(), underTest.length());\n+\n+            Iterator<?> iterator = reference.keys();\n+            while (iterator.hasNext()) {\n+                String key = (String) iterator.next();\n+\n+                if (key.equals(ClimateData.KEY_CABIN_TEMPERATURE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MTEyMQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541561121", "createdAt": "2020-12-12T11:48:36Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();\n+\n+        // Valid Tests\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, cabinTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, externalTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_FLOAT, atmPressure);\n+\n+        // Invalid/Null Tests\n+        ClimateData msg = new ClimateData();\n+        assertNotNull(TestValues.NOT_NULL, msg);\n+\n+        assertNull(TestValues.NULL, msg.getAtmosphericPressure());\n+        assertNull(TestValues.NULL, msg.getCabinTemperature());\n+        assertNull(TestValues.NULL, msg.getExternalTemperature());\n+    }\n+\n+    public void testJson() {\n+        JSONObject reference = new JSONObject();\n+\n+        try {\n+            reference.put(ClimateData.KEY_EXTERNAL_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_CABIN_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_ATMOSPHERIC_PRESSURE, TestValues.GENERAL_FLOAT);\n+\n+            JSONObject underTest = msg.serializeJSON();\n+            assertEquals(TestValues.MATCH, reference.length(), underTest.length());\n+\n+            Iterator<?> iterator = reference.keys();\n+            while (iterator.hasNext()) {\n+                String key = (String) iterator.next();\n+\n+                if (key.equals(ClimateData.KEY_CABIN_TEMPERATURE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MDAxNg=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUwNDg1OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoxOToxNlrOIDySvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo0OToyOVrOIEeRqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MDYzOA==", "bodyText": "@kostyaBoss If you do combine the two ifs above, then you can delete the code in the second if (roughly ~ lines 76-82).", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540840638", "createdAt": "2020-12-11T10:19:16Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();\n+\n+        // Valid Tests\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, cabinTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, externalTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_FLOAT, atmPressure);\n+\n+        // Invalid/Null Tests\n+        ClimateData msg = new ClimateData();\n+        assertNotNull(TestValues.NOT_NULL, msg);\n+\n+        assertNull(TestValues.NULL, msg.getAtmosphericPressure());\n+        assertNull(TestValues.NULL, msg.getCabinTemperature());\n+        assertNull(TestValues.NULL, msg.getExternalTemperature());\n+    }\n+\n+    public void testJson() {\n+        JSONObject reference = new JSONObject();\n+\n+        try {\n+            reference.put(ClimateData.KEY_EXTERNAL_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_CABIN_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_ATMOSPHERIC_PRESSURE, TestValues.GENERAL_FLOAT);\n+\n+            JSONObject underTest = msg.serializeJSON();\n+            assertEquals(TestValues.MATCH, reference.length(), underTest.length());\n+\n+            Iterator<?> iterator = reference.keys();\n+            while (iterator.hasNext()) {\n+                String key = (String) iterator.next();\n+\n+                if (key.equals(ClimateData.KEY_CABIN_TEMPERATURE)) {\n+                    JSONObject objectEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(reference, key);\n+                    JSONObject testEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(underTest, key);\n+                    Hashtable<String, Object> hashReference = JsonRPCMarshaller.deserializeJSONObject(objectEquals);\n+                    Hashtable<String, Object> hashTest = JsonRPCMarshaller.deserializeJSONObject(testEquals);\n+                    assertTrue(TestValues.TRUE, Validator.validateTemperature(new Temperature(hashReference), new Temperature(hashTest)));\n+                } else if (key.equals(ClimateData.KEY_EXTERNAL_TEMPERATURE)) {\n+                    JSONObject objectEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(reference, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MTI1OQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541561259", "createdAt": "2020-12-12T11:49:29Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/datatypes/ClimateDataTests.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.smartdevicelink.test.rpc.datatypes;\n+\n+import com.smartdevicelink.marshal.JsonRPCMarshaller;\n+import com.smartdevicelink.proxy.rpc.ClimateData;\n+import com.smartdevicelink.proxy.rpc.Temperature;\n+import com.smartdevicelink.test.JsonUtils;\n+import com.smartdevicelink.test.TestValues;\n+import com.smartdevicelink.test.Validator;\n+\n+import junit.framework.TestCase;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+\n+public class ClimateDataTests extends TestCase {\n+\n+    private ClimateData msg;\n+\n+    @Override\n+    public void setUp() {\n+        msg = new ClimateData();\n+\n+        msg.setExternalTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setCabinTemperature(TestValues.GENERAL_TEMPERATURE);\n+        msg.setAtmosphericPressure(TestValues.GENERAL_FLOAT);\n+    }\n+\n+    /**\n+     * Tests the expected values of the RPC message.\n+     */\n+    public void testRpcValues() {\n+        // Test Values\n+        Temperature cabinTemperature = msg.getCabinTemperature();\n+        Temperature externalTemperature = msg.getExternalTemperature();\n+        Float atmPressure = msg.getAtmosphericPressure();\n+\n+        // Valid Tests\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, cabinTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_TEMPERATURE, externalTemperature);\n+        assertEquals(TestValues.MATCH, TestValues.GENERAL_FLOAT, atmPressure);\n+\n+        // Invalid/Null Tests\n+        ClimateData msg = new ClimateData();\n+        assertNotNull(TestValues.NOT_NULL, msg);\n+\n+        assertNull(TestValues.NULL, msg.getAtmosphericPressure());\n+        assertNull(TestValues.NULL, msg.getCabinTemperature());\n+        assertNull(TestValues.NULL, msg.getExternalTemperature());\n+    }\n+\n+    public void testJson() {\n+        JSONObject reference = new JSONObject();\n+\n+        try {\n+            reference.put(ClimateData.KEY_EXTERNAL_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_CABIN_TEMPERATURE, JsonRPCMarshaller.serializeHashtable(TestValues.GENERAL_TEMPERATURE.getStore()));\n+            reference.put(ClimateData.KEY_ATMOSPHERIC_PRESSURE, TestValues.GENERAL_FLOAT);\n+\n+            JSONObject underTest = msg.serializeJSON();\n+            assertEquals(TestValues.MATCH, reference.length(), underTest.length());\n+\n+            Iterator<?> iterator = reference.keys();\n+            while (iterator.hasNext()) {\n+                String key = (String) iterator.next();\n+\n+                if (key.equals(ClimateData.KEY_CABIN_TEMPERATURE)) {\n+                    JSONObject objectEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(reference, key);\n+                    JSONObject testEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(underTest, key);\n+                    Hashtable<String, Object> hashReference = JsonRPCMarshaller.deserializeJSONObject(objectEquals);\n+                    Hashtable<String, Object> hashTest = JsonRPCMarshaller.deserializeJSONObject(testEquals);\n+                    assertTrue(TestValues.TRUE, Validator.validateTemperature(new Temperature(hashReference), new Temperature(hashTest)));\n+                } else if (key.equals(ClimateData.KEY_EXTERNAL_TEMPERATURE)) {\n+                    JSONObject objectEquals = (JSONObject) JsonUtils.readObjectFromJsonObject(reference, key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MDYzOA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUxNjg3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyMjoxMlrOIDyZgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyMjoxMlrOIDyZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MjM2OQ==", "bodyText": "@kostyaBoss On line 119, I got 7.1.0 instead of 7.1 using the RPC generator tool.  I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540842369", "createdAt": "2020-12-11T10:22:12Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -116,10 +116,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUyMDg2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyMzoxMlrOIDybww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyMzoxMlrOIDybww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0Mjk0Nw==", "bodyText": "@kostyaBoss On line 543, when I used the RPC Generator tool I got 7.1.0.  I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540842947", "createdAt": "2020-12-11T10:23:12Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -515,22 +537,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, subscribes externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUyNjA1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNDozM1rOIDye1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NDo0MFrOIEe3vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MzczNQ==", "bodyText": "@kostyaBoss On line 557, when I used the RPC Generator tool I got 7.1.0. I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540843735", "createdAt": "2020-12-11T10:24:33Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -515,22 +537,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, subscribes externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public SubscribeVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets a boolean value. If true, means the externalTemperature data has been\r\n-     * subscribed.\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\r\n-     * has been subscribed.\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTAwNw==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571007", "createdAt": "2020-12-12T12:54:40Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -515,22 +537,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, subscribes externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public SubscribeVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets a boolean value. If true, means the externalTemperature data has been\r\n-     * subscribed.\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\r\n-     * has been subscribed.\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0MzczNQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUzMjI3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNjowMFrOIDyibg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NDo1N1rOIEe32A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDY1NA==", "bodyText": "@kostyaBoss On line 114, I got 7.1.0 instead of 7.1 using the RPC generator tool. I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540844654", "createdAt": "2020-12-11T10:26:00Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -111,10 +111,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTAzMg==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571032", "createdAt": "2020-12-12T12:54:57Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -111,10 +111,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDY1NA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUzMzMxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNjoxN1rOIDyjDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NTowM1rOIEe38Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDgxNQ==", "bodyText": "@kostyaBoss On line 533, I got 7.1.0 instead of 7.1 using the RPC generator tool. I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540844815", "createdAt": "2020-12-11T10:26:17Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -505,22 +527,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, unsubscribes from externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTA1Nw==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571057", "createdAt": "2020-12-12T12:55:03Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -505,22 +527,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, unsubscribes from externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDgxNQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUzMzkxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNjoyOFrOIDyjbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NTowOFrOIEe4Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDkxMQ==", "bodyText": "@kostyaBoss On line 547, I got 7.1.0 instead of 7.1 using the RPC generator tool. I would replace the 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540844911", "createdAt": "2020-12-11T10:26:28Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -505,22 +527,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, unsubscribes from externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public UnsubscribeVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets a boolean value. If true, means the externalTemperature data has been\r\n-     * unsubscribed.\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\r\n-     * has been unsubscribed.\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTA3NA==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571074", "createdAt": "2020-12-12T12:55:08Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -505,22 +527,28 @@ public Boolean getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets a boolean value. If true, unsubscribes from externalTemperature data\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a boolean value\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public UnsubscribeVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets a boolean value. If true, means the externalTemperature data has been\r\n-     * unsubscribed.\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\r\n-     * has been unsubscribed.\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NDkxMQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjUzODMxOnYy", "diffSide": "LEFT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNzoyOFrOIDyl-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyNzoyOFrOIDyl-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NTU2Mg==", "bodyText": "@kostyaBoss It looks like you ran the generator tool and re-generated the entire file.  Can you just merge in the changes needed for this PR (external Temperature, climate Data)?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540845562", "createdAt": "2020-12-11T10:27:28Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -1,793 +1,854 @@\n-/*\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU0NTM2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyOTowN1rOIDyqBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyOTowN1rOIDyqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NjU5Nw==", "bodyText": "@kostyaBoss On line 111, when using the RPC generator tool, I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540846597", "createdAt": "2020-12-11T10:29:07Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -1,793 +1,854 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCRequest;\r\n-\r\n-import java.util.Hashtable;\r\n-\r\n-/**\r\n- * Non periodic vehicle data read request.\r\n- *\r\n- * <p><b>Parameter List</b></p>\r\n- * <table border=\"1\" rules=\"all\">\r\n- * \t\t<tr>\r\n- * \t\t\t<th>Name</th>\r\n- * \t\t\t<th>Type</th>\r\n- * \t\t\t<th>Description</th>\r\n- *                 <th>Reg.</th>\r\n- *               <th>Notes</th>\r\n- * \t\t\t<th>Version</th>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>gps</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>speed</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>rpm</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel_State</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelRange</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>instantFuelConsumption</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>externalTemperature</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>vin</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Vehicle identification number</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- *      <tr>\r\n- *          <td>gearStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See GearStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>prndl</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>tirePressure</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Tire pressure status</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>odometer</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Odometer in km</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Max Length: 500</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>beltStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the seat belts</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>bodyInformation</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>deviceStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The device status including signal and battery strength</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>driverBraking</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the brake pedal</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>wiperStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the wipers</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>headLampStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Status of the head lamps</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineTorque</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineOilLife</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>accPedalPosition</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>steeringWheelAngle</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>turnSignal</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>@see TurnSignal</td>\r\n- * \t\t\t<td>N</td>\r\n- * \t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t     <tr>\r\n- * \t\t\t<td>cloudAppVehicleID</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\r\n- * \t\t\t\t<td>N</td>\r\n- * \t\t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\r\n- *      <tr>\r\n- *          <td>stabilityControlsStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See StabilityControlsStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</tr>\r\n- *      <tr>\r\n- *          <td>handsOffSteering</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>windowStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See WindowStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</table>\r\n- *\r\n- *\r\n- *  <p><b>Response</b></p>\r\n- *\r\n- * <p> <b>Non-default Result Codes:</b></p>\r\n- * <p> SUCCESS</p>\r\n- * <p> INVALID_DATA</p>\r\n- *  <p>OUT_OF_MEMORY</p>\r\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\r\n- *  <p>APPLICATION_NOT_REGISTERED</p>\r\n- * <p> GENERIC_ERROR</p>\r\n- * <p> REJECTED</p>\r\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\r\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\r\n- * <p> USER_DISALLOWED</p>\r\n- *\r\n- * @see SubscribeVehicleData\r\n- * @see UnsubscribeVehicleData\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleData extends RPCRequest {\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleData object\r\n-     */\r\n-\r\n-    public GetVehicleData() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    /**\r\n-     * <p>\r\n-     * Constructs a new GetVehicleDta object indicated by the Hashtable\r\n-     * parameter\r\n-     * </p>\r\n-     *\r\n-     * @param hash The Hashtable to use\r\n-     */\r\n-\r\n-    public GetVehicleData(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    public GetVehicleData setGps(Boolean gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getGps() {\r\n-        return getBoolean(KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleData setSpeed(Boolean speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSpeed() {\r\n-        return getBoolean(KEY_SPEED);\r\n-    }\r\n-\r\n-    public GetVehicleData setRpm(Boolean rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getRpm() {\r\n-        return getBoolean(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getFuelLevel() {\r\n-        return getBoolean(KEY_FUEL_LEVEL);\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public Boolean getFuelLevelState() {\r\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getInstantFuelConsumption() {\r\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-    }\r\n-\r\n-    public GetVehicleData setFuelRange(Boolean fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getFuelRange() {\r\n-        return getBoolean(KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    public GetVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getExternalTemperature() {\r\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setVin(Boolean vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getVin() {\r\n-        return getBoolean(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setPrndl(Boolean prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return Boolean See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getPrndl() {\r\n-        return getBoolean(KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleData setTirePressure(Boolean tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getTirePressure() {\r\n-        return getBoolean(KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setOdometer(Boolean odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getOdometer() {\r\n-        return getBoolean(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleData setBeltStatus(Boolean beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBeltStatus() {\r\n-        return getBoolean(KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setBodyInformation(Boolean bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBodyInformation() {\r\n-        return getBoolean(KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleData setDeviceStatus(Boolean deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDeviceStatus() {\r\n-        return getBoolean(KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setDriverBraking(Boolean driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDriverBraking() {\r\n-        return getBoolean(KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleData setWiperStatus(Boolean wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getWiperStatus() {\r\n-        return getBoolean(KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setHeadLampStatus(Boolean headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getHeadLampStatus() {\r\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineTorque(Boolean engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineTorque() {\r\n-        return getBoolean(KEY_ENGINE_TORQUE);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineOilLife(Boolean engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineOilLife() {\r\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\r\n-    }\r\n-\r\n-    public GetVehicleData setAccPedalPosition(Boolean accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAccPedalPosition() {\r\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\r\n-    }\r\n-\r\n-    public GetVehicleData setSteeringWheelAngle(Boolean steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSteeringWheelAngle() {\r\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\r\n-    }\r\n-\r\n-    public GetVehicleData setECallInfo(Boolean eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getECallInfo() {\r\n-        return getBoolean(KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-\r\n-    public GetVehicleData setAirbagStatus(Boolean airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAirbagStatus() {\r\n-        return getBoolean(KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEmergencyEvent(Boolean emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEmergencyEvent() {\r\n-        return getBoolean(KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleData setClusterModeStatus(Boolean clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getClusterModeStatus() {\r\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setMyKey(Boolean myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getMyKey() {\r\n-        return getBoolean(KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes turnSignal data\r\n-     *\r\n-     * @param turnSignal a boolean value\r\n-     */\r\n-    public GetVehicleData setTurnSignal(Boolean turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getTurnSignal() {\r\n-        return getBoolean(KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\r\n-     *\r\n-     * @param electronicParkBrakeStatus a boolean value\r\n-     */\r\n-    public GetVehicleData setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getElectronicParkBrakeStatus() {\r\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\r\n-     *\r\n-     * @param cloudAppVehicleID a boolean value\r\n-     */\r\n-    public GetVehicleData setCloudAppVehicleID(boolean cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getCloudAppVehicleID() {\r\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a boolean value\r\n-     */\r\n-    public GetVehicleData setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getBoolean(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setWindowStatus(Boolean windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return Boolean See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getWindowStatus() {\r\n-        return getBoolean(KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setGearStatus(Boolean gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getGearStatus() {\r\n-        return getBoolean(KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setStabilityControlsStatus(Boolean stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return Boolean See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getStabilityControlsStatus() {\r\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 904}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU0ODQ3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyOTo0N1rOIDyrtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDoyOTo0N1rOIDyrtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NzAyOQ==", "bodyText": "@kostyaBoss On line 113, when using the RPC generator tool, I didnt get Subscribable.  I would remove it.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540847029", "createdAt": "2020-12-11T10:29:47Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -1,793 +1,854 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCRequest;\r\n-\r\n-import java.util.Hashtable;\r\n-\r\n-/**\r\n- * Non periodic vehicle data read request.\r\n- *\r\n- * <p><b>Parameter List</b></p>\r\n- * <table border=\"1\" rules=\"all\">\r\n- * \t\t<tr>\r\n- * \t\t\t<th>Name</th>\r\n- * \t\t\t<th>Type</th>\r\n- * \t\t\t<th>Description</th>\r\n- *                 <th>Reg.</th>\r\n- *               <th>Notes</th>\r\n- * \t\t\t<th>Version</th>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>gps</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>speed</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>rpm</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel_State</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelRange</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>instantFuelConsumption</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>externalTemperature</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>vin</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Vehicle identification number</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- *      <tr>\r\n- *          <td>gearStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See GearStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>prndl</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>tirePressure</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Tire pressure status</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>odometer</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Odometer in km</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Max Length: 500</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>beltStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the seat belts</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>bodyInformation</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>deviceStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The device status including signal and battery strength</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>driverBraking</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the brake pedal</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>wiperStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the wipers</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>headLampStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Status of the head lamps</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineTorque</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineOilLife</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>accPedalPosition</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>steeringWheelAngle</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>turnSignal</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>@see TurnSignal</td>\r\n- * \t\t\t<td>N</td>\r\n- * \t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t     <tr>\r\n- * \t\t\t<td>cloudAppVehicleID</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\r\n- * \t\t\t\t<td>N</td>\r\n- * \t\t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\r\n- *      <tr>\r\n- *          <td>stabilityControlsStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See StabilityControlsStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</tr>\r\n- *      <tr>\r\n- *          <td>handsOffSteering</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>windowStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See WindowStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</table>\r\n- *\r\n- *\r\n- *  <p><b>Response</b></p>\r\n- *\r\n- * <p> <b>Non-default Result Codes:</b></p>\r\n- * <p> SUCCESS</p>\r\n- * <p> INVALID_DATA</p>\r\n- *  <p>OUT_OF_MEMORY</p>\r\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\r\n- *  <p>APPLICATION_NOT_REGISTERED</p>\r\n- * <p> GENERIC_ERROR</p>\r\n- * <p> REJECTED</p>\r\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\r\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\r\n- * <p> USER_DISALLOWED</p>\r\n- *\r\n- * @see SubscribeVehicleData\r\n- * @see UnsubscribeVehicleData\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleData extends RPCRequest {\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleData object\r\n-     */\r\n-\r\n-    public GetVehicleData() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    /**\r\n-     * <p>\r\n-     * Constructs a new GetVehicleDta object indicated by the Hashtable\r\n-     * parameter\r\n-     * </p>\r\n-     *\r\n-     * @param hash The Hashtable to use\r\n-     */\r\n-\r\n-    public GetVehicleData(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    public GetVehicleData setGps(Boolean gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getGps() {\r\n-        return getBoolean(KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleData setSpeed(Boolean speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSpeed() {\r\n-        return getBoolean(KEY_SPEED);\r\n-    }\r\n-\r\n-    public GetVehicleData setRpm(Boolean rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getRpm() {\r\n-        return getBoolean(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getFuelLevel() {\r\n-        return getBoolean(KEY_FUEL_LEVEL);\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public Boolean getFuelLevelState() {\r\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getInstantFuelConsumption() {\r\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-    }\r\n-\r\n-    public GetVehicleData setFuelRange(Boolean fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getFuelRange() {\r\n-        return getBoolean(KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    public GetVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getExternalTemperature() {\r\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setVin(Boolean vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getVin() {\r\n-        return getBoolean(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setPrndl(Boolean prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return Boolean See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getPrndl() {\r\n-        return getBoolean(KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleData setTirePressure(Boolean tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getTirePressure() {\r\n-        return getBoolean(KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setOdometer(Boolean odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getOdometer() {\r\n-        return getBoolean(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleData setBeltStatus(Boolean beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBeltStatus() {\r\n-        return getBoolean(KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setBodyInformation(Boolean bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBodyInformation() {\r\n-        return getBoolean(KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleData setDeviceStatus(Boolean deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDeviceStatus() {\r\n-        return getBoolean(KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setDriverBraking(Boolean driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDriverBraking() {\r\n-        return getBoolean(KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleData setWiperStatus(Boolean wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getWiperStatus() {\r\n-        return getBoolean(KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setHeadLampStatus(Boolean headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getHeadLampStatus() {\r\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineTorque(Boolean engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineTorque() {\r\n-        return getBoolean(KEY_ENGINE_TORQUE);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineOilLife(Boolean engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineOilLife() {\r\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\r\n-    }\r\n-\r\n-    public GetVehicleData setAccPedalPosition(Boolean accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAccPedalPosition() {\r\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\r\n-    }\r\n-\r\n-    public GetVehicleData setSteeringWheelAngle(Boolean steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSteeringWheelAngle() {\r\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\r\n-    }\r\n-\r\n-    public GetVehicleData setECallInfo(Boolean eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getECallInfo() {\r\n-        return getBoolean(KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-\r\n-    public GetVehicleData setAirbagStatus(Boolean airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAirbagStatus() {\r\n-        return getBoolean(KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEmergencyEvent(Boolean emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEmergencyEvent() {\r\n-        return getBoolean(KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleData setClusterModeStatus(Boolean clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getClusterModeStatus() {\r\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setMyKey(Boolean myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getMyKey() {\r\n-        return getBoolean(KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes turnSignal data\r\n-     *\r\n-     * @param turnSignal a boolean value\r\n-     */\r\n-    public GetVehicleData setTurnSignal(Boolean turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getTurnSignal() {\r\n-        return getBoolean(KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\r\n-     *\r\n-     * @param electronicParkBrakeStatus a boolean value\r\n-     */\r\n-    public GetVehicleData setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getElectronicParkBrakeStatus() {\r\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\r\n-     *\r\n-     * @param cloudAppVehicleID a boolean value\r\n-     */\r\n-    public GetVehicleData setCloudAppVehicleID(boolean cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getCloudAppVehicleID() {\r\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a boolean value\r\n-     */\r\n-    public GetVehicleData setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getBoolean(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setWindowStatus(Boolean windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return Boolean See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getWindowStatus() {\r\n-        return getBoolean(KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setGearStatus(Boolean gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getGearStatus() {\r\n-        return getBoolean(KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setStabilityControlsStatus(Boolean stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return Boolean See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getStabilityControlsStatus() {\r\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 906}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU0OTcwOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozMDowOFrOIDysZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozMDowOFrOIDysZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NzIwNQ==", "bodyText": "@kostyaBoss On line 464, when using the RPC generator tool, I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540847205", "createdAt": "2020-12-11T10:30:08Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -1,793 +1,854 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCRequest;\r\n-\r\n-import java.util.Hashtable;\r\n-\r\n-/**\r\n- * Non periodic vehicle data read request.\r\n- *\r\n- * <p><b>Parameter List</b></p>\r\n- * <table border=\"1\" rules=\"all\">\r\n- * \t\t<tr>\r\n- * \t\t\t<th>Name</th>\r\n- * \t\t\t<th>Type</th>\r\n- * \t\t\t<th>Description</th>\r\n- *                 <th>Reg.</th>\r\n- *               <th>Notes</th>\r\n- * \t\t\t<th>Version</th>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>gps</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>speed</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>rpm</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel_State</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelRange</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>instantFuelConsumption</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>externalTemperature</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>vin</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Vehicle identification number</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- *      <tr>\r\n- *          <td>gearStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See GearStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>prndl</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>tirePressure</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Tire pressure status</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>odometer</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Odometer in km</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Max Length: 500</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>beltStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the seat belts</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>bodyInformation</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>deviceStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The device status including signal and battery strength</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>driverBraking</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the brake pedal</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>wiperStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the wipers</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>headLampStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Status of the head lamps</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineTorque</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineOilLife</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>accPedalPosition</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>steeringWheelAngle</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>turnSignal</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>@see TurnSignal</td>\r\n- * \t\t\t<td>N</td>\r\n- * \t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t     <tr>\r\n- * \t\t\t<td>cloudAppVehicleID</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\r\n- * \t\t\t\t<td>N</td>\r\n- * \t\t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\r\n- *      <tr>\r\n- *          <td>stabilityControlsStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See StabilityControlsStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</tr>\r\n- *      <tr>\r\n- *          <td>handsOffSteering</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>windowStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See WindowStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</table>\r\n- *\r\n- *\r\n- *  <p><b>Response</b></p>\r\n- *\r\n- * <p> <b>Non-default Result Codes:</b></p>\r\n- * <p> SUCCESS</p>\r\n- * <p> INVALID_DATA</p>\r\n- *  <p>OUT_OF_MEMORY</p>\r\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\r\n- *  <p>APPLICATION_NOT_REGISTERED</p>\r\n- * <p> GENERIC_ERROR</p>\r\n- * <p> REJECTED</p>\r\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\r\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\r\n- * <p> USER_DISALLOWED</p>\r\n- *\r\n- * @see SubscribeVehicleData\r\n- * @see UnsubscribeVehicleData\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleData extends RPCRequest {\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleData object\r\n-     */\r\n-\r\n-    public GetVehicleData() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    /**\r\n-     * <p>\r\n-     * Constructs a new GetVehicleDta object indicated by the Hashtable\r\n-     * parameter\r\n-     * </p>\r\n-     *\r\n-     * @param hash The Hashtable to use\r\n-     */\r\n-\r\n-    public GetVehicleData(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    public GetVehicleData setGps(Boolean gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getGps() {\r\n-        return getBoolean(KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleData setSpeed(Boolean speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSpeed() {\r\n-        return getBoolean(KEY_SPEED);\r\n-    }\r\n-\r\n-    public GetVehicleData setRpm(Boolean rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getRpm() {\r\n-        return getBoolean(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getFuelLevel() {\r\n-        return getBoolean(KEY_FUEL_LEVEL);\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public Boolean getFuelLevelState() {\r\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getInstantFuelConsumption() {\r\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-    }\r\n-\r\n-    public GetVehicleData setFuelRange(Boolean fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getFuelRange() {\r\n-        return getBoolean(KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    public GetVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getExternalTemperature() {\r\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setVin(Boolean vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getVin() {\r\n-        return getBoolean(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setPrndl(Boolean prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return Boolean See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getPrndl() {\r\n-        return getBoolean(KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleData setTirePressure(Boolean tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getTirePressure() {\r\n-        return getBoolean(KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setOdometer(Boolean odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getOdometer() {\r\n-        return getBoolean(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleData setBeltStatus(Boolean beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBeltStatus() {\r\n-        return getBoolean(KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setBodyInformation(Boolean bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBodyInformation() {\r\n-        return getBoolean(KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleData setDeviceStatus(Boolean deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDeviceStatus() {\r\n-        return getBoolean(KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setDriverBraking(Boolean driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDriverBraking() {\r\n-        return getBoolean(KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleData setWiperStatus(Boolean wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getWiperStatus() {\r\n-        return getBoolean(KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setHeadLampStatus(Boolean headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getHeadLampStatus() {\r\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineTorque(Boolean engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineTorque() {\r\n-        return getBoolean(KEY_ENGINE_TORQUE);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineOilLife(Boolean engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineOilLife() {\r\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\r\n-    }\r\n-\r\n-    public GetVehicleData setAccPedalPosition(Boolean accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAccPedalPosition() {\r\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\r\n-    }\r\n-\r\n-    public GetVehicleData setSteeringWheelAngle(Boolean steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSteeringWheelAngle() {\r\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\r\n-    }\r\n-\r\n-    public GetVehicleData setECallInfo(Boolean eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getECallInfo() {\r\n-        return getBoolean(KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-\r\n-    public GetVehicleData setAirbagStatus(Boolean airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAirbagStatus() {\r\n-        return getBoolean(KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEmergencyEvent(Boolean emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEmergencyEvent() {\r\n-        return getBoolean(KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleData setClusterModeStatus(Boolean clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getClusterModeStatus() {\r\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setMyKey(Boolean myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getMyKey() {\r\n-        return getBoolean(KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes turnSignal data\r\n-     *\r\n-     * @param turnSignal a boolean value\r\n-     */\r\n-    public GetVehicleData setTurnSignal(Boolean turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getTurnSignal() {\r\n-        return getBoolean(KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\r\n-     *\r\n-     * @param electronicParkBrakeStatus a boolean value\r\n-     */\r\n-    public GetVehicleData setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getElectronicParkBrakeStatus() {\r\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\r\n-     *\r\n-     * @param cloudAppVehicleID a boolean value\r\n-     */\r\n-    public GetVehicleData setCloudAppVehicleID(boolean cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getCloudAppVehicleID() {\r\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a boolean value\r\n-     */\r\n-    public GetVehicleData setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getBoolean(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setWindowStatus(Boolean windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return Boolean See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getWindowStatus() {\r\n-        return getBoolean(KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setGearStatus(Boolean gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getGearStatus() {\r\n-        return getBoolean(KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setStabilityControlsStatus(Boolean stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return Boolean See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getStabilityControlsStatus() {\r\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>\n+ * \t\t\t\t@since SmartDeviceLink 2.0.0\n+ * \t\t\t\t@deprecated in SmartDeviceLink 7.1.0\n+ *          </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>prndl</td>\n+ *          <td>Boolean</td>\n+ *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ * \t\t\t\t<td>N</td>\n+ * \t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>windowStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See WindowStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>climateData</td>\n+ *          <td>Boolean</td>\n+ *          <td>See ClimateData</td>\n+ *          <td>N</td>\n+ *          <td></td>\n+ *          <td>\n+ *              @since SmartDeviceLink 7.1.0\n+ *          </td>\n+ *      </tr>\n+ * \t\t</table>\n+ *\n+ *\n+ *  <p><b>Response</b></p>\n+ *\n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleData extends RPCRequest {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleData object\n+     */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>\n+     * Constructs a new GetVehicleDta object indicated by the Hashtable\n+     * parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public GetVehicleData setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public GetVehicleData setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public GetVehicleData setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public GetVehicleData setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+        return this;\n+    }\n+\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1257}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU1MDI3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozMDoxOFrOIDysyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozMDoxOFrOIDysyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NzMwNA==", "bodyText": "@kostyaBoss On line 478, when using the RPC generator tool, I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540847304", "createdAt": "2020-12-11T10:30:18Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -1,793 +1,854 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCRequest;\r\n-\r\n-import java.util.Hashtable;\r\n-\r\n-/**\r\n- * Non periodic vehicle data read request.\r\n- *\r\n- * <p><b>Parameter List</b></p>\r\n- * <table border=\"1\" rules=\"all\">\r\n- * \t\t<tr>\r\n- * \t\t\t<th>Name</th>\r\n- * \t\t\t<th>Type</th>\r\n- * \t\t\t<th>Description</th>\r\n- *                 <th>Reg.</th>\r\n- *               <th>Notes</th>\r\n- * \t\t\t<th>Version</th>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>gps</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>speed</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>rpm</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelLevel_State</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>fuelRange</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>instantFuelConsumption</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>externalTemperature</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>vin</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Vehicle identification number</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- *      <tr>\r\n- *          <td>gearStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See GearStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>prndl</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>tirePressure</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Tire pressure status</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>odometer</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Odometer in km</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Max Length: 500</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>beltStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the seat belts</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>bodyInformation</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>deviceStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The device status including signal and battery strength</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>driverBraking</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the brake pedal</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>wiperStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The status of the wipers</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>headLampStatus</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Status of the head lamps</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineTorque</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>engineOilLife</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>accPedalPosition</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>steeringWheelAngle</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\r\n- *                 <td>N</td>\r\n- *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n- * \t\t</tr>\r\n- * \t\t<tr>\r\n- * \t\t\t<td>turnSignal</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>@see TurnSignal</td>\r\n- * \t\t\t<td>N</td>\r\n- * \t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\r\n- * \t\t</tr>\r\n- * \t     <tr>\r\n- * \t\t\t<td>cloudAppVehicleID</td>\r\n- * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\r\n- * \t\t\t\t<td>N</td>\r\n- * \t\t\t\t<td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\r\n- *      <tr>\r\n- *          <td>stabilityControlsStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See StabilityControlsStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</tr>\r\n- *      <tr>\r\n- *          <td>handsOffSteering</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- *      <tr>\r\n- *          <td>windowStatus</td>\r\n- *          <td>Boolean</td>\r\n- *          <td>See WindowStatus</td>\r\n- *          <td>N</td>\r\n- *          <td>SmartDeviceLink 7.0.0</td>\r\n- *      </tr>\r\n- * \t\t</table>\r\n- *\r\n- *\r\n- *  <p><b>Response</b></p>\r\n- *\r\n- * <p> <b>Non-default Result Codes:</b></p>\r\n- * <p> SUCCESS</p>\r\n- * <p> INVALID_DATA</p>\r\n- *  <p>OUT_OF_MEMORY</p>\r\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\r\n- *  <p>APPLICATION_NOT_REGISTERED</p>\r\n- * <p> GENERIC_ERROR</p>\r\n- * <p> REJECTED</p>\r\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\r\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\r\n- * <p> USER_DISALLOWED</p>\r\n- *\r\n- * @see SubscribeVehicleData\r\n- * @see UnsubscribeVehicleData\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleData extends RPCRequest {\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleData object\r\n-     */\r\n-\r\n-    public GetVehicleData() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    /**\r\n-     * <p>\r\n-     * Constructs a new GetVehicleDta object indicated by the Hashtable\r\n-     * parameter\r\n-     * </p>\r\n-     *\r\n-     * @param hash The Hashtable to use\r\n-     */\r\n-\r\n-    public GetVehicleData(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    public GetVehicleData setGps(Boolean gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getGps() {\r\n-        return getBoolean(KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleData setSpeed(Boolean speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSpeed() {\r\n-        return getBoolean(KEY_SPEED);\r\n-    }\r\n-\r\n-    public GetVehicleData setRpm(Boolean rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getRpm() {\r\n-        return getBoolean(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getFuelLevel() {\r\n-        return getBoolean(KEY_FUEL_LEVEL);\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    @Deprecated\r\n-    public Boolean getFuelLevelState() {\r\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getInstantFuelConsumption() {\r\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-    }\r\n-\r\n-    public GetVehicleData setFuelRange(Boolean fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getFuelRange() {\r\n-        return getBoolean(KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    public GetVehicleData setExternalTemperature(Boolean externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getExternalTemperature() {\r\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setVin(Boolean vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getVin() {\r\n-        return getBoolean(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleData setPrndl(Boolean prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return Boolean See PRNDL.\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Boolean getPrndl() {\r\n-        return getBoolean(KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleData setTirePressure(Boolean tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getTirePressure() {\r\n-        return getBoolean(KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleData setOdometer(Boolean odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getOdometer() {\r\n-        return getBoolean(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleData setBeltStatus(Boolean beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBeltStatus() {\r\n-        return getBoolean(KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setBodyInformation(Boolean bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getBodyInformation() {\r\n-        return getBoolean(KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleData setDeviceStatus(Boolean deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDeviceStatus() {\r\n-        return getBoolean(KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setDriverBraking(Boolean driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getDriverBraking() {\r\n-        return getBoolean(KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleData setWiperStatus(Boolean wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getWiperStatus() {\r\n-        return getBoolean(KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setHeadLampStatus(Boolean headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getHeadLampStatus() {\r\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineTorque(Boolean engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineTorque() {\r\n-        return getBoolean(KEY_ENGINE_TORQUE);\r\n-    }\r\n-\r\n-    public GetVehicleData setEngineOilLife(Boolean engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEngineOilLife() {\r\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\r\n-    }\r\n-\r\n-    public GetVehicleData setAccPedalPosition(Boolean accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAccPedalPosition() {\r\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\r\n-    }\r\n-\r\n-    public GetVehicleData setSteeringWheelAngle(Boolean steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getSteeringWheelAngle() {\r\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\r\n-    }\r\n-\r\n-    public GetVehicleData setECallInfo(Boolean eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getECallInfo() {\r\n-        return getBoolean(KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-\r\n-    public GetVehicleData setAirbagStatus(Boolean airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getAirbagStatus() {\r\n-        return getBoolean(KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setEmergencyEvent(Boolean emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getEmergencyEvent() {\r\n-        return getBoolean(KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleData setClusterModeStatus(Boolean clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getClusterModeStatus() {\r\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleData setMyKey(Boolean myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Boolean getMyKey() {\r\n-        return getBoolean(KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes turnSignal data\r\n-     *\r\n-     * @param turnSignal a boolean value\r\n-     */\r\n-    public GetVehicleData setTurnSignal(Boolean turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getTurnSignal() {\r\n-        return getBoolean(KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\r\n-     *\r\n-     * @param electronicParkBrakeStatus a boolean value\r\n-     */\r\n-    public GetVehicleData setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getElectronicParkBrakeStatus() {\r\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\r\n-     *\r\n-     * @param cloudAppVehicleID a boolean value\r\n-     */\r\n-    public GetVehicleData setCloudAppVehicleID(boolean cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getCloudAppVehicleID() {\r\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a boolean value\r\n-     */\r\n-    public GetVehicleData setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a boolean value for OEM Custom VehicleData.\r\n-     *\r\n-     * @return a Boolean value.\r\n-     */\r\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getBoolean(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setWindowStatus(Boolean windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return Boolean See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getWindowStatus() {\r\n-        return getBoolean(KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setGearStatus(Boolean gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getGearStatus() {\r\n-        return getBoolean(KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleData setStabilityControlsStatus(Boolean stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return Boolean See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getStabilityControlsStatus() {\r\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1, please see climateData.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>\n+ * \t\t\t\t@since SmartDeviceLink 2.0.0\n+ * \t\t\t\t@deprecated in SmartDeviceLink 7.1.0\n+ *          </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>prndl</td>\n+ *          <td>Boolean</td>\n+ *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ * \t\t\t\t<td>N</td>\n+ * \t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>windowStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See WindowStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>climateData</td>\n+ *          <td>Boolean</td>\n+ *          <td>See ClimateData</td>\n+ *          <td>N</td>\n+ *          <td></td>\n+ *          <td>\n+ *              @since SmartDeviceLink 7.1.0\n+ *          </td>\n+ *      </tr>\n+ * \t\t</table>\n+ *\n+ *\n+ *  <p><b>Response</b></p>\n+ *\n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleData extends RPCRequest {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleData object\n+     */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>\n+     * Constructs a new GetVehicleDta object indicated by the Hashtable\n+     * parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public GetVehicleData setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public GetVehicleData setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public GetVehicleData setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public GetVehicleData setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Boolean The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public GetVehicleData setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public GetVehicleData setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public GetVehicleData setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+        return this;\n+    }\n+\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public GetVehicleData setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the externalTemperature.\n+     *\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1271}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU1OTk5OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozMjoyMlrOIDyyKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NDo0NlrOIEe3xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0ODY4Mg==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 254 I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540848682", "createdAt": "2020-12-11T10:32:22Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -239,20 +248,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTAxMw==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571013", "createdAt": "2020-12-12T12:54:46Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -239,20 +248,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0ODY4Mg=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU2NjU1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNDowM1rOIDy2AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NDo1MlrOIEe31Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0OTY2NA==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 268 I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540849664", "createdAt": "2020-12-11T10:34:03Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -239,20 +248,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public SubscribeVehicleDataResponse setExternalTemperature(VehicleDataResult externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets External Temperature\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return a VehicleDataResult related to external temperature\r\n+     * @return VehicleDataResult The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTAyOQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571029", "createdAt": "2020-12-12T12:54:52Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -239,20 +248,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public SubscribeVehicleDataResponse setExternalTemperature(VehicleDataResult externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets External Temperature\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return a VehicleDataResult related to external temperature\r\n+     * @return VehicleDataResult The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0OTY2NA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU3MDA3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNDo0N1rOIDy38w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NToxNFrOIEe4DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MDE2Mw==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 255 I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540850163", "createdAt": "2020-12-11T10:34:47Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -240,20 +249,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTA4NQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571085", "createdAt": "2020-12-12T12:55:14Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -240,20 +249,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MDE2Mw=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU3MTcxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNToxNlrOIDy42g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NToxOFrOIEe4KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MDM5NA==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 269 I got 7.1.0.  I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540850394", "createdAt": "2020-12-11T10:35:16Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -240,20 +249,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public UnsubscribeVehicleDataResponse setExternalTemperature(VehicleDataResult externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets External Temperature\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return a VehicleDataResult related to external temperature\r\n+     * @return VehicleDataResult The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTExMg==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571112", "createdAt": "2020-12-12T12:55:18Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -240,20 +249,28 @@ public VehicleDataResult getInstantFuelConsumption() {\n     }\r\n \r\n     /**\r\n-     * Sets External Temperature\r\n+     * Sets the externalTemperature.\r\n      *\r\n-     * @param externalTemperature a VehicleDataResult related to external temperature\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n      */\r\n+    @Deprecated\r\n     public UnsubscribeVehicleDataResponse setExternalTemperature(VehicleDataResult externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n     /**\r\n-     * Gets External Temperature\r\n+     * Gets the externalTemperature.\r\n      *\r\n-     * @return a VehicleDataResult related to external temperature\r\n+     * @return VehicleDataResult The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MDM5NA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU3Nzc3OnYy", "diffSide": "LEFT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNjo0NlrOIDy8UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNjo0NlrOIDy8UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MTI4MQ==", "bodyText": "@kostyaBoss It looks like you ran the generator tool and re-generated the entire file.  Can you just merge in the changes needed for this PR (external Temperature, climate Data)?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540851281", "createdAt": "2020-12-11T10:36:46Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU4MDI5OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNzoxOFrOIDy9sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNzoxOFrOIDy9sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MTYzMg==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 222 I got 7.1.0. I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540851632", "createdAt": "2020-12-11T10:37:18Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-\r\n-import androidx.annotation.NonNull;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCResponse;\r\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\r\n-import com.smartdevicelink.proxy.rpc.enums.Result;\r\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\r\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\r\n-import com.smartdevicelink.util.SdlDataTypeConverter;\r\n-\r\n-import java.util.Hashtable;\r\n-import java.util.List;\r\n-\r\n-/**\r\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\r\n- *\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleDataResponse extends RPCResponse {\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     */\r\n-\r\n-    public GetVehicleDataResponse() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     *\r\n-     * @param success    whether the request is successfully processed\r\n-     * @param resultCode whether the request is successfully processed\r\n-     */\r\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\r\n-        this();\r\n-        setSuccess(success);\r\n-        setResultCode(resultCode);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setGps(GPSData gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public GPSData getGps() {\r\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSpeed(Double speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSpeed() {\r\n-        Object object = getParameters(KEY_SPEED);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setRpm(Integer rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getRpm() {\r\n-        return getInteger(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Level State\r\n-     *\r\n-     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Level State\r\n-     *\r\n-     * @return a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public ComponentVolumeStatus getFuelLevelState() {\r\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Double getFuelLevel() {\r\n-        Object object = getParameters(KEY_FUEL_LEVEL);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getInstantFuelConsumption() {\r\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getExternalTemperature() {\r\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setVin(String vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public String getVin() {\r\n-        return getString(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setPrndl(PRNDL prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return PRNDL See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public PRNDL getPrndl() {\r\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setTirePressure(TireStatus tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public TireStatus getTirePressure() {\r\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setOdometer(Integer odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getOdometer() {\r\n-        return getInteger(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBeltStatus(BeltStatus beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BeltStatus getBeltStatus() {\r\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBodyInformation(BodyInformation bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BodyInformation getBodyInformation() {\r\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDeviceStatus(DeviceStatus deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public DeviceStatus getDeviceStatus() {\r\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDriverBraking(VehicleDataEventStatus driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public VehicleDataEventStatus getDriverBraking() {\r\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setWiperStatus(WiperStatus wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public WiperStatus getWiperStatus() {\r\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setHeadLampStatus(HeadLampStatus headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public HeadLampStatus getHeadLampStatus() {\r\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineTorque(Double engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getEngineTorque() {\r\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineOilLife(Float engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Float getEngineOilLife() {\r\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\r\n-        return SdlDataTypeConverter.objectToFloat(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAccPedalPosition(Double accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getAccPedalPosition() {\r\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSteeringWheelAngle(Double steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSteeringWheelAngle() {\r\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setECallInfo(ECallInfo eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ECallInfo getECallInfo() {\r\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAirbagStatus(AirbagStatus airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public AirbagStatus getAirbagStatus() {\r\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEmergencyEvent(EmergencyEvent emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public EmergencyEvent getEmergencyEvent() {\r\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ClusterModeStatus getClusterModeStatus() {\r\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setMyKey(MyKey myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public MyKey getMyKey() {\r\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     *\r\n-     * @param fuelRange the range in KM left as well as fuel type\r\n-     * @see FuelRange\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\r\n-     */\r\n-    public GetVehicleDataResponse setFuelRange(List<FuelRange> fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Range List\r\n-     *\r\n-     * @return List<FuelRange>\r\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<FuelRange> getFuelRange() {\r\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets turnSignal\r\n-     *\r\n-     * @param turnSignal status of the turn signals\r\n-     * @see TurnSignal\r\n-     */\r\n-    public GetVehicleDataResponse setTurnSignal(TurnSignal turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets turnSignal\r\n-     *\r\n-     * @return TurnSignal status of the turn signals\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\r\n-     */\r\n-    public TurnSignal getTurnSignal() {\r\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets electronicParkBrakeStatus\r\n-     *\r\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see ElectronicParkBrakeStatus\r\n-     */\r\n-    public GetVehicleDataResponse setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets electronicParkBrakeStatus\r\n-     *\r\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\r\n-     */\r\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\r\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a string value for the cloud app vehicle ID\r\n-     *\r\n-     * @param cloudAppVehicleID a string value\r\n-     */\r\n-    public GetVehicleDataResponse setCloudAppVehicleID(String cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a String value of the returned cloud app vehicle ID\r\n-     *\r\n-     * @return a String value.\r\n-     */\r\n-    public String getCloudAppVehicleID() {\r\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Sets a value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a VehicleDataResult value\r\n-     */\r\n-    public GetVehicleDataResponse setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a VehicleData value for the vehicle data item.\r\n-     *\r\n-     * @return a Object related to the vehicle data\r\n-     */\r\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getParameters(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setWindowStatus(List<WindowStatus> windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return List<WindowStatus> See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<WindowStatus> getWindowStatus() {\r\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setGearStatus(GearStatus gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GearStatus getGearStatus() {\r\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return StabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public StabilityControlsStatus getStabilityControlsStatus() {\r\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import androidx.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    public GetVehicleDataResponse setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public GetVehicleDataResponse setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 819}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU4MTMyOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNzozMFrOIDy-PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozNzozMFrOIDy-PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MTc3Mw==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 237 I got 7.1.0. I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540851773", "createdAt": "2020-12-11T10:37:30Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-\r\n-import androidx.annotation.NonNull;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCResponse;\r\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\r\n-import com.smartdevicelink.proxy.rpc.enums.Result;\r\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\r\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\r\n-import com.smartdevicelink.util.SdlDataTypeConverter;\r\n-\r\n-import java.util.Hashtable;\r\n-import java.util.List;\r\n-\r\n-/**\r\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\r\n- *\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleDataResponse extends RPCResponse {\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     */\r\n-\r\n-    public GetVehicleDataResponse() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     *\r\n-     * @param success    whether the request is successfully processed\r\n-     * @param resultCode whether the request is successfully processed\r\n-     */\r\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\r\n-        this();\r\n-        setSuccess(success);\r\n-        setResultCode(resultCode);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setGps(GPSData gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public GPSData getGps() {\r\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSpeed(Double speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSpeed() {\r\n-        Object object = getParameters(KEY_SPEED);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setRpm(Integer rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getRpm() {\r\n-        return getInteger(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Level State\r\n-     *\r\n-     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Level State\r\n-     *\r\n-     * @return a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public ComponentVolumeStatus getFuelLevelState() {\r\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Double getFuelLevel() {\r\n-        Object object = getParameters(KEY_FUEL_LEVEL);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getInstantFuelConsumption() {\r\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getExternalTemperature() {\r\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setVin(String vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public String getVin() {\r\n-        return getString(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setPrndl(PRNDL prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return PRNDL See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public PRNDL getPrndl() {\r\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setTirePressure(TireStatus tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public TireStatus getTirePressure() {\r\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setOdometer(Integer odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getOdometer() {\r\n-        return getInteger(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBeltStatus(BeltStatus beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BeltStatus getBeltStatus() {\r\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBodyInformation(BodyInformation bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BodyInformation getBodyInformation() {\r\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDeviceStatus(DeviceStatus deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public DeviceStatus getDeviceStatus() {\r\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDriverBraking(VehicleDataEventStatus driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public VehicleDataEventStatus getDriverBraking() {\r\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setWiperStatus(WiperStatus wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public WiperStatus getWiperStatus() {\r\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setHeadLampStatus(HeadLampStatus headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public HeadLampStatus getHeadLampStatus() {\r\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineTorque(Double engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getEngineTorque() {\r\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineOilLife(Float engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Float getEngineOilLife() {\r\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\r\n-        return SdlDataTypeConverter.objectToFloat(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAccPedalPosition(Double accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getAccPedalPosition() {\r\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSteeringWheelAngle(Double steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSteeringWheelAngle() {\r\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setECallInfo(ECallInfo eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ECallInfo getECallInfo() {\r\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAirbagStatus(AirbagStatus airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public AirbagStatus getAirbagStatus() {\r\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEmergencyEvent(EmergencyEvent emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public EmergencyEvent getEmergencyEvent() {\r\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ClusterModeStatus getClusterModeStatus() {\r\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setMyKey(MyKey myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public MyKey getMyKey() {\r\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     *\r\n-     * @param fuelRange the range in KM left as well as fuel type\r\n-     * @see FuelRange\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\r\n-     */\r\n-    public GetVehicleDataResponse setFuelRange(List<FuelRange> fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Range List\r\n-     *\r\n-     * @return List<FuelRange>\r\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<FuelRange> getFuelRange() {\r\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets turnSignal\r\n-     *\r\n-     * @param turnSignal status of the turn signals\r\n-     * @see TurnSignal\r\n-     */\r\n-    public GetVehicleDataResponse setTurnSignal(TurnSignal turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets turnSignal\r\n-     *\r\n-     * @return TurnSignal status of the turn signals\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\r\n-     */\r\n-    public TurnSignal getTurnSignal() {\r\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets electronicParkBrakeStatus\r\n-     *\r\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see ElectronicParkBrakeStatus\r\n-     */\r\n-    public GetVehicleDataResponse setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets electronicParkBrakeStatus\r\n-     *\r\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\r\n-     */\r\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\r\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a string value for the cloud app vehicle ID\r\n-     *\r\n-     * @param cloudAppVehicleID a string value\r\n-     */\r\n-    public GetVehicleDataResponse setCloudAppVehicleID(String cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a String value of the returned cloud app vehicle ID\r\n-     *\r\n-     * @return a String value.\r\n-     */\r\n-    public String getCloudAppVehicleID() {\r\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Sets a value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a VehicleDataResult value\r\n-     */\r\n-    public GetVehicleDataResponse setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a VehicleData value for the vehicle data item.\r\n-     *\r\n-     * @return a Object related to the vehicle data\r\n-     */\r\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getParameters(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setWindowStatus(List<WindowStatus> windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return List<WindowStatus> See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<WindowStatus> getWindowStatus() {\r\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setGearStatus(GearStatus gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GearStatus getGearStatus() {\r\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return StabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public StabilityControlsStatus getStabilityControlsStatus() {\r\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import androidx.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    public GetVehicleDataResponse setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public GetVehicleDataResponse setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the externalTemperature.\n+     *\n+     * @return Float The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 834}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU4NTcxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozODo0M1rOIDzA3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozODo0M1rOIDzA3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MjQ0Nw==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 228 I got Float instead of Double. I would replace Double with Float.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540852447", "createdAt": "2020-12-11T10:38:43Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-\r\n-import androidx.annotation.NonNull;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCResponse;\r\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\r\n-import com.smartdevicelink.proxy.rpc.enums.Result;\r\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\r\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\r\n-import com.smartdevicelink.util.SdlDataTypeConverter;\r\n-\r\n-import java.util.Hashtable;\r\n-import java.util.List;\r\n-\r\n-/**\r\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\r\n- *\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleDataResponse extends RPCResponse {\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     */\r\n-\r\n-    public GetVehicleDataResponse() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     *\r\n-     * @param success    whether the request is successfully processed\r\n-     * @param resultCode whether the request is successfully processed\r\n-     */\r\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\r\n-        this();\r\n-        setSuccess(success);\r\n-        setResultCode(resultCode);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setGps(GPSData gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public GPSData getGps() {\r\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSpeed(Double speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSpeed() {\r\n-        Object object = getParameters(KEY_SPEED);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setRpm(Integer rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getRpm() {\r\n-        return getInteger(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Level State\r\n-     *\r\n-     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Level State\r\n-     *\r\n-     * @return a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public ComponentVolumeStatus getFuelLevelState() {\r\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Double getFuelLevel() {\r\n-        Object object = getParameters(KEY_FUEL_LEVEL);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getInstantFuelConsumption() {\r\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getExternalTemperature() {\r\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setVin(String vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public String getVin() {\r\n-        return getString(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setPrndl(PRNDL prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return PRNDL See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public PRNDL getPrndl() {\r\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setTirePressure(TireStatus tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public TireStatus getTirePressure() {\r\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setOdometer(Integer odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getOdometer() {\r\n-        return getInteger(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBeltStatus(BeltStatus beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BeltStatus getBeltStatus() {\r\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBodyInformation(BodyInformation bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BodyInformation getBodyInformation() {\r\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDeviceStatus(DeviceStatus deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public DeviceStatus getDeviceStatus() {\r\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDriverBraking(VehicleDataEventStatus driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public VehicleDataEventStatus getDriverBraking() {\r\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setWiperStatus(WiperStatus wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public WiperStatus getWiperStatus() {\r\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setHeadLampStatus(HeadLampStatus headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public HeadLampStatus getHeadLampStatus() {\r\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineTorque(Double engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getEngineTorque() {\r\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineOilLife(Float engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Float getEngineOilLife() {\r\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\r\n-        return SdlDataTypeConverter.objectToFloat(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAccPedalPosition(Double accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getAccPedalPosition() {\r\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSteeringWheelAngle(Double steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSteeringWheelAngle() {\r\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setECallInfo(ECallInfo eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ECallInfo getECallInfo() {\r\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAirbagStatus(AirbagStatus airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public AirbagStatus getAirbagStatus() {\r\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEmergencyEvent(EmergencyEvent emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public EmergencyEvent getEmergencyEvent() {\r\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ClusterModeStatus getClusterModeStatus() {\r\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setMyKey(MyKey myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public MyKey getMyKey() {\r\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     *\r\n-     * @param fuelRange the range in KM left as well as fuel type\r\n-     * @see FuelRange\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\r\n-     */\r\n-    public GetVehicleDataResponse setFuelRange(List<FuelRange> fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Range List\r\n-     *\r\n-     * @return List<FuelRange>\r\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<FuelRange> getFuelRange() {\r\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets turnSignal\r\n-     *\r\n-     * @param turnSignal status of the turn signals\r\n-     * @see TurnSignal\r\n-     */\r\n-    public GetVehicleDataResponse setTurnSignal(TurnSignal turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets turnSignal\r\n-     *\r\n-     * @return TurnSignal status of the turn signals\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\r\n-     */\r\n-    public TurnSignal getTurnSignal() {\r\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets electronicParkBrakeStatus\r\n-     *\r\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see ElectronicParkBrakeStatus\r\n-     */\r\n-    public GetVehicleDataResponse setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets electronicParkBrakeStatus\r\n-     *\r\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\r\n-     */\r\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\r\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a string value for the cloud app vehicle ID\r\n-     *\r\n-     * @param cloudAppVehicleID a string value\r\n-     */\r\n-    public GetVehicleDataResponse setCloudAppVehicleID(String cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a String value of the returned cloud app vehicle ID\r\n-     *\r\n-     * @return a String value.\r\n-     */\r\n-    public String getCloudAppVehicleID() {\r\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Sets a value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a VehicleDataResult value\r\n-     */\r\n-    public GetVehicleDataResponse setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a VehicleData value for the vehicle data item.\r\n-     *\r\n-     * @return a Object related to the vehicle data\r\n-     */\r\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getParameters(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setWindowStatus(List<WindowStatus> windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return List<WindowStatus> See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<WindowStatus> getWindowStatus() {\r\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setGearStatus(GearStatus gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GearStatus getGearStatus() {\r\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return StabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public StabilityControlsStatus getStabilityControlsStatus() {\r\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import androidx.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    public GetVehicleDataResponse setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public GetVehicleDataResponse setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 825}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU4OTQ2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozOTozNFrOIDzC6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDozOTozNFrOIDzC6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1Mjk2OA==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 243 I got Float instead of Double. I would replace Double with Float.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540852968", "createdAt": "2020-12-11T10:39:34Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-\r\n-import androidx.annotation.NonNull;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCResponse;\r\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\r\n-import com.smartdevicelink.proxy.rpc.enums.Result;\r\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\r\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\r\n-import com.smartdevicelink.util.SdlDataTypeConverter;\r\n-\r\n-import java.util.Hashtable;\r\n-import java.util.List;\r\n-\r\n-/**\r\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\r\n- *\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleDataResponse extends RPCResponse {\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     */\r\n-\r\n-    public GetVehicleDataResponse() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     *\r\n-     * @param success    whether the request is successfully processed\r\n-     * @param resultCode whether the request is successfully processed\r\n-     */\r\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\r\n-        this();\r\n-        setSuccess(success);\r\n-        setResultCode(resultCode);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setGps(GPSData gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public GPSData getGps() {\r\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSpeed(Double speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSpeed() {\r\n-        Object object = getParameters(KEY_SPEED);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setRpm(Integer rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getRpm() {\r\n-        return getInteger(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Level State\r\n-     *\r\n-     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Level State\r\n-     *\r\n-     * @return a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public ComponentVolumeStatus getFuelLevelState() {\r\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Double getFuelLevel() {\r\n-        Object object = getParameters(KEY_FUEL_LEVEL);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getInstantFuelConsumption() {\r\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getExternalTemperature() {\r\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setVin(String vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public String getVin() {\r\n-        return getString(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setPrndl(PRNDL prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return PRNDL See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public PRNDL getPrndl() {\r\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setTirePressure(TireStatus tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public TireStatus getTirePressure() {\r\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setOdometer(Integer odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getOdometer() {\r\n-        return getInteger(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBeltStatus(BeltStatus beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BeltStatus getBeltStatus() {\r\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBodyInformation(BodyInformation bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BodyInformation getBodyInformation() {\r\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDeviceStatus(DeviceStatus deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public DeviceStatus getDeviceStatus() {\r\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDriverBraking(VehicleDataEventStatus driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public VehicleDataEventStatus getDriverBraking() {\r\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setWiperStatus(WiperStatus wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public WiperStatus getWiperStatus() {\r\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setHeadLampStatus(HeadLampStatus headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public HeadLampStatus getHeadLampStatus() {\r\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineTorque(Double engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getEngineTorque() {\r\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineOilLife(Float engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Float getEngineOilLife() {\r\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\r\n-        return SdlDataTypeConverter.objectToFloat(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAccPedalPosition(Double accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getAccPedalPosition() {\r\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSteeringWheelAngle(Double steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSteeringWheelAngle() {\r\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setECallInfo(ECallInfo eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ECallInfo getECallInfo() {\r\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAirbagStatus(AirbagStatus airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public AirbagStatus getAirbagStatus() {\r\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEmergencyEvent(EmergencyEvent emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public EmergencyEvent getEmergencyEvent() {\r\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ClusterModeStatus getClusterModeStatus() {\r\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setMyKey(MyKey myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public MyKey getMyKey() {\r\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     *\r\n-     * @param fuelRange the range in KM left as well as fuel type\r\n-     * @see FuelRange\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\r\n-     */\r\n-    public GetVehicleDataResponse setFuelRange(List<FuelRange> fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Range List\r\n-     *\r\n-     * @return List<FuelRange>\r\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<FuelRange> getFuelRange() {\r\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets turnSignal\r\n-     *\r\n-     * @param turnSignal status of the turn signals\r\n-     * @see TurnSignal\r\n-     */\r\n-    public GetVehicleDataResponse setTurnSignal(TurnSignal turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets turnSignal\r\n-     *\r\n-     * @return TurnSignal status of the turn signals\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\r\n-     */\r\n-    public TurnSignal getTurnSignal() {\r\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets electronicParkBrakeStatus\r\n-     *\r\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see ElectronicParkBrakeStatus\r\n-     */\r\n-    public GetVehicleDataResponse setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets electronicParkBrakeStatus\r\n-     *\r\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\r\n-     */\r\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\r\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a string value for the cloud app vehicle ID\r\n-     *\r\n-     * @param cloudAppVehicleID a string value\r\n-     */\r\n-    public GetVehicleDataResponse setCloudAppVehicleID(String cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a String value of the returned cloud app vehicle ID\r\n-     *\r\n-     * @return a String value.\r\n-     */\r\n-    public String getCloudAppVehicleID() {\r\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Sets a value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a VehicleDataResult value\r\n-     */\r\n-    public GetVehicleDataResponse setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a VehicleData value for the vehicle data item.\r\n-     *\r\n-     * @return a Object related to the vehicle data\r\n-     */\r\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getParameters(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setWindowStatus(List<WindowStatus> windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return List<WindowStatus> See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<WindowStatus> getWindowStatus() {\r\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setGearStatus(GearStatus gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GearStatus getGearStatus() {\r\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return StabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public StabilityControlsStatus getStabilityControlsStatus() {\r\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import androidx.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    public GetVehicleDataResponse setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public GetVehicleDataResponse setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the externalTemperature.\n+     *\n+     * @return Float The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public Double getExternalTemperature() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 840}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjU5NTgzOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MTowNVrOIDzGZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MTowNVrOIDzGZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1Mzg2Mg==", "bodyText": "@kostyaBoss On line 245 objectToDouble would become objectToFloat.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540853862", "createdAt": "2020-12-11T10:41:05Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -1,597 +1,649 @@\n-/*\r\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\r\n- * All rights reserved.\r\n- *\r\n- * Redistribution and use in source and binary forms, with or without\r\n- * modification, are permitted provided that the following conditions are met:\r\n- *\r\n- * Redistributions of source code must retain the above copyright notice, this\r\n- * list of conditions and the following disclaimer.\r\n- *\r\n- * Redistributions in binary form must reproduce the above copyright notice,\r\n- * this list of conditions and the following\r\n- * disclaimer in the documentation and/or other materials provided with the\r\n- * distribution.\r\n- *\r\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\r\n- * contributors may be used to endorse or promote products derived from this\r\n- * software without specific prior written permission.\r\n- *\r\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n- * POSSIBILITY OF SUCH DAMAGE.\r\n- */\r\n-package com.smartdevicelink.proxy.rpc;\r\n-\r\n-\r\n-import androidx.annotation.NonNull;\r\n-\r\n-import com.smartdevicelink.protocol.enums.FunctionID;\r\n-import com.smartdevicelink.proxy.RPCResponse;\r\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\r\n-import com.smartdevicelink.proxy.rpc.enums.Result;\r\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\r\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\r\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\r\n-import com.smartdevicelink.util.SdlDataTypeConverter;\r\n-\r\n-import java.util.Hashtable;\r\n-import java.util.List;\r\n-\r\n-/**\r\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\r\n- *\r\n- * @since SmartDeviceLink 2.0\r\n- */\r\n-public class GetVehicleDataResponse extends RPCResponse {\r\n-    public static final String KEY_GPS = \"gps\";\r\n-    public static final String KEY_SPEED = \"speed\";\r\n-    public static final String KEY_RPM = \"rpm\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\r\n-    /**\r\n-     * @deprecated\r\n-     */\r\n-    @Deprecated\r\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\r\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\r\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\r\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\r\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n-    public static final String KEY_VIN = \"vin\";\r\n-    public static final String KEY_PRNDL = \"prndl\";\r\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\r\n-    public static final String KEY_ODOMETER = \"odometer\";\r\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\r\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\r\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\r\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\r\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\r\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\r\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\r\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\r\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\r\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\r\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\r\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\r\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\r\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\r\n-    public static final String KEY_MY_KEY = \"myKey\";\r\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\r\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\r\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\r\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     */\r\n-\r\n-    public GetVehicleDataResponse() {\r\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\r\n-        super(hash);\r\n-    }\r\n-\r\n-    /**\r\n-     * Constructs a new GetVehicleDataResponse object\r\n-     *\r\n-     * @param success    whether the request is successfully processed\r\n-     * @param resultCode whether the request is successfully processed\r\n-     */\r\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\r\n-        this();\r\n-        setSuccess(success);\r\n-        setResultCode(resultCode);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setGps(GPSData gps) {\r\n-        setParameters(KEY_GPS, gps);\r\n-        return this;\r\n-    }\r\n-\r\n-    public GPSData getGps() {\r\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSpeed(Double speed) {\r\n-        setParameters(KEY_SPEED, speed);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSpeed() {\r\n-        Object object = getParameters(KEY_SPEED);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setRpm(Integer rpm) {\r\n-        setParameters(KEY_RPM, rpm);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getRpm() {\r\n-        return getInteger(KEY_RPM);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Level State\r\n-     *\r\n-     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\r\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Level State\r\n-     *\r\n-     * @return a ComponentVolumeStatus related to FuelLevel State\r\n-     */\r\n-    @Deprecated\r\n-    public ComponentVolumeStatus getFuelLevelState() {\r\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the fuelLevel.\r\n-     *\r\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     *                  7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\r\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the fuelLevel.\r\n-     *\r\n-     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\r\n-     * 7.0, please see fuelRange.\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public Double getFuelLevel() {\r\n-        Object object = getParameters(KEY_FUEL_LEVEL);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\r\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getInstantFuelConsumption() {\r\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getExternalTemperature() {\r\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setVin(String vin) {\r\n-        setParameters(KEY_VIN, vin);\r\n-        return this;\r\n-    }\r\n-\r\n-    public String getVin() {\r\n-        return getString(KEY_VIN);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the prndl.\r\n-     *\r\n-     * @param prndl See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public GetVehicleDataResponse setPrndl(PRNDL prndl) {\r\n-        setParameters(KEY_PRNDL, prndl);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the prndl.\r\n-     *\r\n-     * @return PRNDL See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`\r\n-     * @deprecated in SmartDeviceLink 7.0.0\r\n-     */\r\n-    @Deprecated\r\n-    public PRNDL getPrndl() {\r\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setTirePressure(TireStatus tirePressure) {\r\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\r\n-        return this;\r\n-    }\r\n-\r\n-    public TireStatus getTirePressure() {\r\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setOdometer(Integer odometer) {\r\n-        setParameters(KEY_ODOMETER, odometer);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Integer getOdometer() {\r\n-        return getInteger(KEY_ODOMETER);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBeltStatus(BeltStatus beltStatus) {\r\n-        setParameters(KEY_BELT_STATUS, beltStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BeltStatus getBeltStatus() {\r\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setBodyInformation(BodyInformation bodyInformation) {\r\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\r\n-        return this;\r\n-    }\r\n-\r\n-    public BodyInformation getBodyInformation() {\r\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDeviceStatus(DeviceStatus deviceStatus) {\r\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public DeviceStatus getDeviceStatus() {\r\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setDriverBraking(VehicleDataEventStatus driverBraking) {\r\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\r\n-        return this;\r\n-    }\r\n-\r\n-    public VehicleDataEventStatus getDriverBraking() {\r\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setWiperStatus(WiperStatus wiperStatus) {\r\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public WiperStatus getWiperStatus() {\r\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setHeadLampStatus(HeadLampStatus headLampStatus) {\r\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public HeadLampStatus getHeadLampStatus() {\r\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineTorque(Double engineTorque) {\r\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getEngineTorque() {\r\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEngineOilLife(Float engineOilLife) {\r\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Float getEngineOilLife() {\r\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\r\n-        return SdlDataTypeConverter.objectToFloat(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAccPedalPosition(Double accPedalPosition) {\r\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getAccPedalPosition() {\r\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setSteeringWheelAngle(Double steeringWheelAngle) {\r\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\r\n-        return this;\r\n-    }\r\n-\r\n-    public Double getSteeringWheelAngle() {\r\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\r\n-        return SdlDataTypeConverter.objectToDouble(object);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setECallInfo(ECallInfo eCallInfo) {\r\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ECallInfo getECallInfo() {\r\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setAirbagStatus(AirbagStatus airbagStatus) {\r\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public AirbagStatus getAirbagStatus() {\r\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setEmergencyEvent(EmergencyEvent emergencyEvent) {\r\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\r\n-        return this;\r\n-    }\r\n-\r\n-    public EmergencyEvent getEmergencyEvent() {\r\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\r\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    public ClusterModeStatus getClusterModeStatus() {\r\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\r\n-    }\r\n-\r\n-    public GetVehicleDataResponse setMyKey(MyKey myKey) {\r\n-        setParameters(KEY_MY_KEY, myKey);\r\n-        return this;\r\n-    }\r\n-\r\n-    public MyKey getMyKey() {\r\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     *\r\n-     * @param fuelRange the range in KM left as well as fuel type\r\n-     * @see FuelRange\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\r\n-     */\r\n-    public GetVehicleDataResponse setFuelRange(List<FuelRange> fuelRange) {\r\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets Fuel Range List\r\n-     *\r\n-     * @return List<FuelRange>\r\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<FuelRange> getFuelRange() {\r\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets turnSignal\r\n-     *\r\n-     * @param turnSignal status of the turn signals\r\n-     * @see TurnSignal\r\n-     */\r\n-    public GetVehicleDataResponse setTurnSignal(TurnSignal turnSignal) {\r\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets turnSignal\r\n-     *\r\n-     * @return TurnSignal status of the turn signals\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\r\n-     */\r\n-    public TurnSignal getTurnSignal() {\r\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets electronicParkBrakeStatus\r\n-     *\r\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see ElectronicParkBrakeStatus\r\n-     */\r\n-    public GetVehicleDataResponse setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\r\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets electronicParkBrakeStatus\r\n-     *\r\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\r\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\r\n-     */\r\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\r\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets a string value for the cloud app vehicle ID\r\n-     *\r\n-     * @param cloudAppVehicleID a string value\r\n-     */\r\n-    public GetVehicleDataResponse setCloudAppVehicleID(String cloudAppVehicleID) {\r\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a String value of the returned cloud app vehicle ID\r\n-     *\r\n-     * @return a String value.\r\n-     */\r\n-    public String getCloudAppVehicleID() {\r\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * Sets a value for OEM Custom VehicleData.\r\n-     *\r\n-     * @param vehicleDataName  a String value\r\n-     * @param vehicleDataState a VehicleDataResult value\r\n-     */\r\n-    public GetVehicleDataResponse setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\r\n-        setParameters(vehicleDataName, vehicleDataState);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets a VehicleData value for the vehicle data item.\r\n-     *\r\n-     * @return a Object related to the vehicle data\r\n-     */\r\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\r\n-        return getParameters(vehicleDataName);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the windowStatus.\r\n-     *\r\n-     * @param windowStatus See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setWindowStatus(List<WindowStatus> windowStatus) {\r\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the windowStatus.\r\n-     *\r\n-     * @return List<WindowStatus> See WindowStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    @SuppressWarnings(\"unchecked\")\r\n-    public List<WindowStatus> getWindowStatus() {\r\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the handsOffSteering.\r\n-     *\r\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setHandsOffSteering(Boolean handsOffSteering) {\r\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the handsOffSteering.\r\n-     *\r\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public Boolean getHandsOffSteering() {\r\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the gearStatus.\r\n-     *\r\n-     * @param gearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setGearStatus(GearStatus gearStatus) {\r\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\r\n-        return this;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the gearStatus.\r\n-     *\r\n-     * @return GearStatus See GearStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GearStatus getGearStatus() {\r\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the stabilityControlsStatus.\r\n-     *\r\n-     * @return StabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public StabilityControlsStatus getStabilityControlsStatus() {\r\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the stabilityControlsStatus.\r\n-     *\r\n-     * @param stabilityControlsStatus See StabilityControlsStatus\r\n-     * @since SmartDeviceLink 7.0.0\r\n-     */\r\n-    public GetVehicleDataResponse setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n-        return this;\r\n-    }\r\n-}\r\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import androidx.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    public GetVehicleDataResponse setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public GetVehicleDataResponse setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a ComponentVolumeStatus related to FuelLevel State\n+     */\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Double The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public GetVehicleDataResponse setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the externalTemperature.\n+     *\n+     * @return Float The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 842}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYwMTkzOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MjozMFrOIDzJvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MjozMFrOIDzJvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NDcxOQ==", "bodyText": "@kostyaBoss When using the RPC generator tool, on line 474 I got 7.1.0. I would replace 7.1 with 7.1.0.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540854719", "createdAt": "2020-12-11T10:42:30Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYwNTc5OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MzoyOFrOIDzL9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NzozMFrOIEe5sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTI4NA==", "bodyText": "@kostyaBoss below line 474 you need this: * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540855284", "createdAt": "2020-12-11T10:43:28Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTUwNg==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571506", "createdAt": "2020-12-12T12:57:30Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTI4NA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYwNzQ1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0Mzo1M1rOIDzM6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToxODowN1rOIGgYJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTUzMA==", "bodyText": "@kostyaBoss On line 479 this should be Float instead of Double.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540855530", "createdAt": "2020-12-11T10:43:53Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MjA5NA==", "bodyText": "@santhanamk we have an issue with this. When setting up to float - the tests are unable to convert this datatype from json file. That was the reason I've put Double there eventually. I don't think this makes some downshifts", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541562094", "createdAt": "2020-12-12T11:55:21Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTUzMA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5MjgzNg==", "bodyText": "@kostyaBoss Yes that makes sense.  This code has been there for a while, and the issue you mentioned is there.  You can just leave it alone.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r543692836", "createdAt": "2020-12-15T21:18:07Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTUzMA=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYwOTM1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NDoxOVrOIDzN7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToxNTozN1rOIGgSrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTc4OQ==", "bodyText": "@kostyaBoss On line 487 this should be Float instead of Boolean.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540855789", "createdAt": "2020-12-11T10:44:19Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MDY0NA==", "bodyText": "@santhanamk Seems to be so, but this code is generated by generator. Should I rollback the changes?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541570644", "createdAt": "2020-12-12T12:52:19Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTc4OQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5MTQzOQ==", "bodyText": "@kostyaBoss I checked again with the generator and it says Float.  Since you are having issues with the Float, you can just make it Double.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r543691439", "createdAt": "2020-12-15T21:15:37Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NTc4OQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYxMTAxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NDo0MlrOIDzO3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NDo0MlrOIDzO3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NjAzMQ==", "bodyText": "@kostyaBoss On line 488 this should be 7.1.0 instead of 7.1.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540856031", "createdAt": "2020-12-11T10:44:42Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYxMjcwOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NTowOVrOIDzP2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NTowOVrOIDzP2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NjI4MQ==", "bodyText": "@kostyaBoss  Below line 488 you need this * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\"", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540856281", "createdAt": "2020-12-11T10:45:09Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYxNDQxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0NTozMlrOIDzQyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToxNjo0MVrOIGgU9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NjUyMg==", "bodyText": "@kostyaBoss On line 493 this should be Float instead of Double.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540856522", "createdAt": "2020-12-11T10:45:32Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public Double getExternalTemperature() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MDc0NQ==", "bodyText": "@santhanamk Seems to be so, but this code is generated by generator. Should I rollback the changes?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541570745", "createdAt": "2020-12-12T12:53:05Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public Double getExternalTemperature() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NjUyMg=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5MjAyMg==", "bodyText": "@kostyaBoss No that is fine.  You can just leave this alone.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r543692022", "createdAt": "2020-12-15T21:16:41Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +467,29 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public Double getExternalTemperature() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NjUyMg=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYyNjk1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0ODozNlrOIDzXwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo1NzoyMlrOIEe5iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1ODMwNQ==", "bodyText": "@kostyaBoss in the HTML section above you are missing \n\n\n <td>climateData</td>\n\n\n\n <td>ClimateData</td>\n\n\n\n <td>See ClimateData</td>\n\n\n\n <td>N</td>\n\n\n\n <td></td>\n\n\n\n <td>\n\n\n\n    @since SmartDeviceLink 7.1.0\n\n\n\n </td>\n\n\n\n\n\n\nPlease add it.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540858305", "createdAt": "2020-12-11T10:48:36Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -335,6 +335,11 @@\n public class OnVehicleData extends RPCNotification {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MTQ2NQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541571465", "createdAt": "2020-12-12T12:57:22Z", "author": {"login": "kboskin"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -335,6 +335,11 @@\n public class OnVehicleData extends RPCNotification {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1ODMwNQ=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYzNTg5OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/Validator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo1MDo0MFrOIDzcoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTo0NDo1N1rOIEePGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1OTU1Mg==", "bodyText": "@kostyaBoss I would rewrite the validateClimateData function like this.\n`public static boolean validateClimateData(ClimateData climateData1, ClimateData climateData2) {\n    if (climateData1 == null) {\n        return (climateData2 == null);\n    }\n    if (climateData2 == null) {\n        return (climateData1 == null);\n    }\n\n    if (!validateTemperature(climateData1.getExternalTemperature(), climateData2.getExternalTemperature())) {\n        return false;\n    }\n\n    if (!validateTemperature(climateData1.getCabinTemperature(), climateData2.getCabinTemperature())) {\n        return false;\n    }\n\n    return climateData1.getAtmosphericPressure().floatValue() == climateData2.getAtmosphericPressure().floatValue();\n}`", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540859552", "createdAt": "2020-12-11T10:50:40Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/Validator.java", "diffHunk": "@@ -3929,4 +3929,14 @@ public static boolean validateStabilityControlStatus(VehicleDataResult status1,\n         }\n         return status1.getDataType().equals(status2.getDataType()) && status1.getResultCode().equals(status2.getResultCode());\n     }\n+\n+    public static boolean validateClimateData(ClimateData climateData1, ClimateData climateData2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2MDYwMQ==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541560601", "createdAt": "2020-12-12T11:44:57Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/Validator.java", "diffHunk": "@@ -3929,4 +3929,14 @@ public static boolean validateStabilityControlStatus(VehicleDataResult status1,\n         }\n         return status1.getDataType().equals(status2.getDataType()) && status1.getResultCode().equals(status2.getResultCode());\n     }\n+\n+    public static boolean validateClimateData(ClimateData climateData1, ClimateData climateData2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1OTU1Mg=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYzOTkyOnYy", "diffSide": "LEFT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/TestValues.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo1MTozN1rOIDze2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMTozOToxOFrOIEeL9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2MDEyMw==", "bodyText": "@kostyaBoss Can you bring back all of the rpc imports?  It has been there all along.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r540860123", "createdAt": "2020-12-11T10:51:37Z", "author": {"login": "santhanamk"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/TestValues.java", "diffHunk": "@@ -16,104 +16,7 @@\n import com.smartdevicelink.managers.screen.menu.VoiceCommandSelectionListener;\n import com.smartdevicelink.protocol.SdlProtocol;\n import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.rpc.AppInfo;\n-import com.smartdevicelink.proxy.rpc.AppServiceCapability;\n-import com.smartdevicelink.proxy.rpc.AppServiceData;\n-import com.smartdevicelink.proxy.rpc.AppServiceManifest;\n-import com.smartdevicelink.proxy.rpc.AppServiceRecord;\n-import com.smartdevicelink.proxy.rpc.AppServicesCapabilities;\n-import com.smartdevicelink.proxy.rpc.AudioControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.AudioControlData;\n-import com.smartdevicelink.proxy.rpc.AudioPassThruCapabilities;\n-import com.smartdevicelink.proxy.rpc.ButtonCapabilities;\n-import com.smartdevicelink.proxy.rpc.Choice;\n-import com.smartdevicelink.proxy.rpc.ClimateControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.ClimateControlData;\n-import com.smartdevicelink.proxy.rpc.CloudAppProperties;\n-import com.smartdevicelink.proxy.rpc.Coordinate;\n-import com.smartdevicelink.proxy.rpc.DIDResult;\n-import com.smartdevicelink.proxy.rpc.DateTime;\n-import com.smartdevicelink.proxy.rpc.DeviceInfo;\n-import com.smartdevicelink.proxy.rpc.DisplayCapabilities;\n-import com.smartdevicelink.proxy.rpc.DisplayCapability;\n-import com.smartdevicelink.proxy.rpc.DriverDistractionCapability;\n-import com.smartdevicelink.proxy.rpc.DynamicUpdateCapabilities;\n-import com.smartdevicelink.proxy.rpc.EqualizerSettings;\n-import com.smartdevicelink.proxy.rpc.GearStatus;\n-import com.smartdevicelink.proxy.rpc.Grid;\n-import com.smartdevicelink.proxy.rpc.HMICapabilities;\n-import com.smartdevicelink.proxy.rpc.HMIPermissions;\n-import com.smartdevicelink.proxy.rpc.HMISettingsControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.HMISettingsControlData;\n-import com.smartdevicelink.proxy.rpc.HapticRect;\n-import com.smartdevicelink.proxy.rpc.Image;\n-import com.smartdevicelink.proxy.rpc.ImageField;\n-import com.smartdevicelink.proxy.rpc.ImageResolution;\n-import com.smartdevicelink.proxy.rpc.KeyboardProperties;\n-import com.smartdevicelink.proxy.rpc.LightCapabilities;\n-import com.smartdevicelink.proxy.rpc.LightControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.LightControlData;\n-import com.smartdevicelink.proxy.rpc.LightState;\n-import com.smartdevicelink.proxy.rpc.LocationDetails;\n-import com.smartdevicelink.proxy.rpc.MassageCushionFirmness;\n-import com.smartdevicelink.proxy.rpc.MassageModeData;\n-import com.smartdevicelink.proxy.rpc.MediaServiceData;\n-import com.smartdevicelink.proxy.rpc.MediaServiceManifest;\n-import com.smartdevicelink.proxy.rpc.MenuParams;\n-import com.smartdevicelink.proxy.rpc.MetadataTags;\n-import com.smartdevicelink.proxy.rpc.ModuleData;\n-import com.smartdevicelink.proxy.rpc.ModuleInfo;\n-import com.smartdevicelink.proxy.rpc.NavigationCapability;\n-import com.smartdevicelink.proxy.rpc.NavigationInstruction;\n-import com.smartdevicelink.proxy.rpc.NavigationServiceData;\n-import com.smartdevicelink.proxy.rpc.NavigationServiceManifest;\n-import com.smartdevicelink.proxy.rpc.OasisAddress;\n-import com.smartdevicelink.proxy.rpc.ParameterPermissions;\n-import com.smartdevicelink.proxy.rpc.PermissionItem;\n-import com.smartdevicelink.proxy.rpc.PhoneCapability;\n-import com.smartdevicelink.proxy.rpc.PresetBankCapabilities;\n-import com.smartdevicelink.proxy.rpc.RGBColor;\n-import com.smartdevicelink.proxy.rpc.RadioControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.RadioControlData;\n-import com.smartdevicelink.proxy.rpc.RdsData;\n-import com.smartdevicelink.proxy.rpc.Rectangle;\n-import com.smartdevicelink.proxy.rpc.RemoteControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.ScreenParams;\n-import com.smartdevicelink.proxy.rpc.SdlMsgVersion;\n-import com.smartdevicelink.proxy.rpc.SeatControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.SeatControlData;\n-import com.smartdevicelink.proxy.rpc.SeatLocation;\n-import com.smartdevicelink.proxy.rpc.SeatMemoryAction;\n-import com.smartdevicelink.proxy.rpc.SingleTireStatus;\n-import com.smartdevicelink.proxy.rpc.SisData;\n-import com.smartdevicelink.proxy.rpc.SoftButton;\n-import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n-import com.smartdevicelink.proxy.rpc.StabilityControlsStatus;\n-import com.smartdevicelink.proxy.rpc.StartTime;\n-import com.smartdevicelink.proxy.rpc.StationIDNumber;\n-import com.smartdevicelink.proxy.rpc.SystemCapability;\n-import com.smartdevicelink.proxy.rpc.TTSChunk;\n-import com.smartdevicelink.proxy.rpc.Temperature;\n-import com.smartdevicelink.proxy.rpc.TemplateColorScheme;\n-import com.smartdevicelink.proxy.rpc.TemplateConfiguration;\n-import com.smartdevicelink.proxy.rpc.TextField;\n-import com.smartdevicelink.proxy.rpc.TouchCoord;\n-import com.smartdevicelink.proxy.rpc.TouchEvent;\n-import com.smartdevicelink.proxy.rpc.TouchEventCapabilities;\n-import com.smartdevicelink.proxy.rpc.Turn;\n-import com.smartdevicelink.proxy.rpc.VehicleDataResult;\n-import com.smartdevicelink.proxy.rpc.VehicleType;\n-import com.smartdevicelink.proxy.rpc.VideoStreamingCapability;\n-import com.smartdevicelink.proxy.rpc.VideoStreamingFormat;\n-import com.smartdevicelink.proxy.rpc.VrHelpItem;\n-import com.smartdevicelink.proxy.rpc.WeatherAlert;\n-import com.smartdevicelink.proxy.rpc.WeatherData;\n-import com.smartdevicelink.proxy.rpc.WeatherServiceData;\n-import com.smartdevicelink.proxy.rpc.WeatherServiceManifest;\n-import com.smartdevicelink.proxy.rpc.WindowCapability;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU1OTc5Nw==", "bodyText": "done", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r541559797", "createdAt": "2020-12-12T11:39:18Z", "author": {"login": "kboskin"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/TestValues.java", "diffHunk": "@@ -16,104 +16,7 @@\n import com.smartdevicelink.managers.screen.menu.VoiceCommandSelectionListener;\n import com.smartdevicelink.protocol.SdlProtocol;\n import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.rpc.AppInfo;\n-import com.smartdevicelink.proxy.rpc.AppServiceCapability;\n-import com.smartdevicelink.proxy.rpc.AppServiceData;\n-import com.smartdevicelink.proxy.rpc.AppServiceManifest;\n-import com.smartdevicelink.proxy.rpc.AppServiceRecord;\n-import com.smartdevicelink.proxy.rpc.AppServicesCapabilities;\n-import com.smartdevicelink.proxy.rpc.AudioControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.AudioControlData;\n-import com.smartdevicelink.proxy.rpc.AudioPassThruCapabilities;\n-import com.smartdevicelink.proxy.rpc.ButtonCapabilities;\n-import com.smartdevicelink.proxy.rpc.Choice;\n-import com.smartdevicelink.proxy.rpc.ClimateControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.ClimateControlData;\n-import com.smartdevicelink.proxy.rpc.CloudAppProperties;\n-import com.smartdevicelink.proxy.rpc.Coordinate;\n-import com.smartdevicelink.proxy.rpc.DIDResult;\n-import com.smartdevicelink.proxy.rpc.DateTime;\n-import com.smartdevicelink.proxy.rpc.DeviceInfo;\n-import com.smartdevicelink.proxy.rpc.DisplayCapabilities;\n-import com.smartdevicelink.proxy.rpc.DisplayCapability;\n-import com.smartdevicelink.proxy.rpc.DriverDistractionCapability;\n-import com.smartdevicelink.proxy.rpc.DynamicUpdateCapabilities;\n-import com.smartdevicelink.proxy.rpc.EqualizerSettings;\n-import com.smartdevicelink.proxy.rpc.GearStatus;\n-import com.smartdevicelink.proxy.rpc.Grid;\n-import com.smartdevicelink.proxy.rpc.HMICapabilities;\n-import com.smartdevicelink.proxy.rpc.HMIPermissions;\n-import com.smartdevicelink.proxy.rpc.HMISettingsControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.HMISettingsControlData;\n-import com.smartdevicelink.proxy.rpc.HapticRect;\n-import com.smartdevicelink.proxy.rpc.Image;\n-import com.smartdevicelink.proxy.rpc.ImageField;\n-import com.smartdevicelink.proxy.rpc.ImageResolution;\n-import com.smartdevicelink.proxy.rpc.KeyboardProperties;\n-import com.smartdevicelink.proxy.rpc.LightCapabilities;\n-import com.smartdevicelink.proxy.rpc.LightControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.LightControlData;\n-import com.smartdevicelink.proxy.rpc.LightState;\n-import com.smartdevicelink.proxy.rpc.LocationDetails;\n-import com.smartdevicelink.proxy.rpc.MassageCushionFirmness;\n-import com.smartdevicelink.proxy.rpc.MassageModeData;\n-import com.smartdevicelink.proxy.rpc.MediaServiceData;\n-import com.smartdevicelink.proxy.rpc.MediaServiceManifest;\n-import com.smartdevicelink.proxy.rpc.MenuParams;\n-import com.smartdevicelink.proxy.rpc.MetadataTags;\n-import com.smartdevicelink.proxy.rpc.ModuleData;\n-import com.smartdevicelink.proxy.rpc.ModuleInfo;\n-import com.smartdevicelink.proxy.rpc.NavigationCapability;\n-import com.smartdevicelink.proxy.rpc.NavigationInstruction;\n-import com.smartdevicelink.proxy.rpc.NavigationServiceData;\n-import com.smartdevicelink.proxy.rpc.NavigationServiceManifest;\n-import com.smartdevicelink.proxy.rpc.OasisAddress;\n-import com.smartdevicelink.proxy.rpc.ParameterPermissions;\n-import com.smartdevicelink.proxy.rpc.PermissionItem;\n-import com.smartdevicelink.proxy.rpc.PhoneCapability;\n-import com.smartdevicelink.proxy.rpc.PresetBankCapabilities;\n-import com.smartdevicelink.proxy.rpc.RGBColor;\n-import com.smartdevicelink.proxy.rpc.RadioControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.RadioControlData;\n-import com.smartdevicelink.proxy.rpc.RdsData;\n-import com.smartdevicelink.proxy.rpc.Rectangle;\n-import com.smartdevicelink.proxy.rpc.RemoteControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.ScreenParams;\n-import com.smartdevicelink.proxy.rpc.SdlMsgVersion;\n-import com.smartdevicelink.proxy.rpc.SeatControlCapabilities;\n-import com.smartdevicelink.proxy.rpc.SeatControlData;\n-import com.smartdevicelink.proxy.rpc.SeatLocation;\n-import com.smartdevicelink.proxy.rpc.SeatMemoryAction;\n-import com.smartdevicelink.proxy.rpc.SingleTireStatus;\n-import com.smartdevicelink.proxy.rpc.SisData;\n-import com.smartdevicelink.proxy.rpc.SoftButton;\n-import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n-import com.smartdevicelink.proxy.rpc.StabilityControlsStatus;\n-import com.smartdevicelink.proxy.rpc.StartTime;\n-import com.smartdevicelink.proxy.rpc.StationIDNumber;\n-import com.smartdevicelink.proxy.rpc.SystemCapability;\n-import com.smartdevicelink.proxy.rpc.TTSChunk;\n-import com.smartdevicelink.proxy.rpc.Temperature;\n-import com.smartdevicelink.proxy.rpc.TemplateColorScheme;\n-import com.smartdevicelink.proxy.rpc.TemplateConfiguration;\n-import com.smartdevicelink.proxy.rpc.TextField;\n-import com.smartdevicelink.proxy.rpc.TouchCoord;\n-import com.smartdevicelink.proxy.rpc.TouchEvent;\n-import com.smartdevicelink.proxy.rpc.TouchEventCapabilities;\n-import com.smartdevicelink.proxy.rpc.Turn;\n-import com.smartdevicelink.proxy.rpc.VehicleDataResult;\n-import com.smartdevicelink.proxy.rpc.VehicleType;\n-import com.smartdevicelink.proxy.rpc.VideoStreamingCapability;\n-import com.smartdevicelink.proxy.rpc.VideoStreamingFormat;\n-import com.smartdevicelink.proxy.rpc.VrHelpItem;\n-import com.smartdevicelink.proxy.rpc.WeatherAlert;\n-import com.smartdevicelink.proxy.rpc.WeatherData;\n-import com.smartdevicelink.proxy.rpc.WeatherServiceData;\n-import com.smartdevicelink.proxy.rpc.WeatherServiceManifest;\n-import com.smartdevicelink.proxy.rpc.WindowCapability;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg2MDEyMw=="}, "originalCommit": {"oid": "0fd82e67739d0110d5b641501993e8df63911145"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjQwMzU0OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyNjoxMVrOIGgqwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyNjoxMVrOIGgqwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5NzYwMg==", "bodyText": "@kostyaBoss On line 236 you can change Float to Double.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r543697602", "createdAt": "2020-12-15T21:26:11Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -206,11 +215,31 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1.0, please see climateData.\r\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public GetVehicleDataResponse setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Float The external temperature in degrees celsius. This parameter is deprecated starting RPC\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866d2116a9947d9f250084f9d37958ddf3fae4e0"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjQxNzA4OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyOToxOFrOIGgygw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMToyOToxOFrOIGgygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5OTU4Nw==", "bodyText": "@kostyaBoss  I tried with the generator again and it gave me Float for line 498.  Since the Float is an issue, you can use Double.\nOn line 498 you can change Boolean to Double.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r543699587", "createdAt": "2020-12-15T21:29:18Z", "author": {"login": "santhanamk"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -458,11 +477,31 @@ public Double getInstantFuelConsumption() {\n         return SdlDataTypeConverter.objectToDouble(object);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1.0, please see climateData.\r\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r\n     public OnVehicleData setExternalTemperature(Double externalTemperature) {\r\n         setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\r\n         return this;\r\n     }\r\n \r\n+    /**\r\n+     * Gets the externalTemperature.\r\n+     *\r\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866d2116a9947d9f250084f9d37958ddf3fae4e0"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTQ3NzI3OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoxNjoxNlrOIRhkbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoxNjoxNlrOIRhkbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI0NjcwMQ==", "bodyText": "The indentation doesn't look right here", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r555246701", "createdAt": "2021-01-11T18:16:16Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -116,10 +116,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1.0, please see climateData.</td>\r\n  *                 <td>N</td>\r\n  *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n+ * \t\t\t<td>\r\n+ * \t\t\t\t@since SmartDeviceLink 2.0.0\r\n+ * \t\t\t\t@deprecated in SmartDeviceLink 7.1.0\r\n+ *          </td>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a505d8b19160204ca888cacca13d0e914e9519ab"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTQ5OTg2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoyMjozMlrOIRhyKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoyMjozMlrOIRhyKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI1MDIxNw==", "bodyText": "The indentation needs some adjustments", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r555250217", "createdAt": "2021-01-11T18:22:32Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -111,10 +111,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1.0, please see climateData.</td>\r\n  *                 <td>N</td>\r\n  *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\r\n+ * \t\t\t<td>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a505d8b19160204ca888cacca13d0e914e9519ab"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTUwNDc5OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoyMzo1OFrOIRh1Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODoyMzo1OFrOIRh1Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI1MTAxOQ==", "bodyText": "Spacing is not consistent here as well", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r555251019", "createdAt": "2021-01-11T18:23:58Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -108,10 +108,13 @@\n  * \t\t<tr>\r\n  * \t\t\t<td>externalTemperature</td>\r\n  * \t\t\t<td>Boolean</td>\r\n- * \t\t\t<td>The external temperature in degrees celsius</td>\r\n+ * \t\t\t<td>The external temperature in degrees celsius. This parameter is deprecated starting RPCSpec 7.1.0, please see climateData.</td>\r\n  *                 <td>N</td>\r\n  *                 <td>Subscribable</td>\r\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\r\n+ * \t\t\t<td>\r\n+ * \t\t\t\t@since SmartDeviceLink 2.0.0\r\n+ * \t\t\t\t@deprecated in SmartDeviceLink 7.1.0\r\n+ *          </td>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a505d8b19160204ca888cacca13d0e914e9519ab"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NjIzNzQ2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMTo1NToyMlrOIRoyxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMTo1NToyMlrOIRoyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM2NTA2Mw==", "bodyText": "The unit tests on the PR currently fail because of an issue in develop branch. The issue got fixed on develop branch for Java Suite. Please merge develop into your branch and make sure that unit tests pass on the PR.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1560#discussion_r555365063", "createdAt": "2021-01-11T21:55:22Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -435,11 +457,29 @@ public Boolean getFuelRange() {\n         return getBoolean(KEY_FUEL_RANGE);\r\n     }\r\n \r\n+    /**\r\n+     * Sets the externalTemperature.\r\n+     *\r\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\r\n+     * Spec 7.1.0, please see climateData.\r\n+     * @since SmartDeviceLink 2.0.0\r\n+     * @deprecated in SmartDeviceLink 7.1.0\r\n+     */\r\n+    @Deprecated\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a505d8b19160204ca888cacca13d0e914e9519ab"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4200, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}