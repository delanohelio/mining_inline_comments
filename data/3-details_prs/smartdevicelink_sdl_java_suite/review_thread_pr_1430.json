{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDA3NDg2", "number": 1430, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MjowNFrOEViShg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1Njo0OFrOEV9APQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDE3MzUwOnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MjowNFrOG8WXgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MjowNFrOG8WXgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNDIxMA==", "bodyText": "Let's keep this as 2017-2020", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465934210", "createdAt": "2020-08-05T18:52:04Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017-2020 Livio, Inc.\n+ * Copyright (c) 2018 Livio, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDE4NTUyOnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1NTozM1rOG8WfCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1NTozM1rOG8WfCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNjEzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @SuppressWarnings({\"WeakerAccess\", \"deprecation\"})\n          \n      \n    \n    \n  \n\nI don't see the need to suppress theses warnings anymore", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465936136", "createdAt": "2020-08-05T18:55:33Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -59,19 +59,18 @@\n \n import java.io.IOException;\n import java.lang.ref.WeakReference;\n-import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n+@SuppressWarnings({\"WeakerAccess\", \"deprecation\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDMxMjc3OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTozNDo1MVrOG8XvcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxOTozNDo1MVrOG8XvcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1NjcyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else{\n          \n          \n            \n                    } else {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465956720", "createdAt": "2020-08-05T19:34:51Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java", "diffHunk": "@@ -93,10 +93,10 @@ void initialize() {\n         }\n \n         if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.MULTIPLEX)) {\n-            this.session = new SdlSession(sdlConnectionListener, (MultiplexTransportConfig) _transportConfig);\n+            this.session = new SdlSession(sdlSessionListener, (MultiplexTransportConfig) _transportConfig);\n         } else if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.TCP)) {\n-            this.session = new SdlSession(sdlConnectionListener, (TCPTransportConfig) _transportConfig);\n-        } else {\n+            this.session = new SdlSession(sdlSessionListener, (TCPTransportConfig) _transportConfig);\n+        }else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA1MjA2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjozODoxMVrOG87bIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjozODoxMVrOG87bIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MTM0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else if(SessionType.RPC.equals(msg.getSessionType())\n          \n          \n            \n                    } else if (SessionType.RPC.equals(msg.getSessionType())", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466541344", "createdAt": "2020-08-06T16:38:11Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 221}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA1ODY2OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjozOTo1NlrOG87fHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjozOTo1NlrOG87fHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjM2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shutdown(String info){\n          \n          \n            \n                public void shutdown(String info) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542364", "createdAt": "2020-08-06T16:39:56Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 251}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA1OTYzOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDoxMFrOG87ftQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDoxMFrOG87ftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjUxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams(){\n          \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams() {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542517", "createdAt": "2020-08-06T16:40:10Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 272}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA2MDM4OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDoyMFrOG87gJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDoyMFrOG87gJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjYzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(desiredVideoParams == null){\n          \n          \n            \n                    if (desiredVideoParams == null ){", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542630", "createdAt": "2020-08-06T16:40:20Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 273}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA2MjQxOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDo1MlrOG87hbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MDo1MlrOG87hbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0Mjk1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params){\n          \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542958", "createdAt": "2020-08-06T16:40:52Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){\n+            desiredVideoParams = new VideoStreamingParameters();\n+        }\n+        return desiredVideoParams;\n+    }\n+\n+    @Override\n+    public void setAcceptedVideoParams(VideoStreamingParameters params){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 280}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA3MDg4OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MzowNFrOG87mrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0MzowNFrOG87mrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NDMwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        session.startService(SessionType.RPC,true);\n          \n          \n            \n                        session.startService(SessionType.RPC, true);", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466544301", "createdAt": "2020-08-06T16:43:04Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -158,7 +158,7 @@ public void start() {\n      */\n     public void startRPCEncryption() {\n         if (session != null) {\n-            session.startService(SessionType.RPC, session.getSessionId(), true);\n+            session.startService(SessionType.RPC,true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDA3NzUwOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0NDo0NlrOG87qsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo0NDo0NlrOG87qsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NTMzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *************************************** ISdlConnectionListener START ************************************\n          \n          \n            \n                 *************************************** ISdlSessionListener START ************************************\n          \n      \n    \n    \n  \n\nShould this be changed to ISdlSessionListener?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466545330", "createdAt": "2020-08-06T16:44:46Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -858,103 +858,95 @@ private void sendRPCMessagePrivate(RPCMessage message, boolean isInternalMessage\n      *************************************** ISdlConnectionListener START ************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDExOTI1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo1NjoxM1rOG88EwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjo1NjoxM1rOG88EwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU1MjAwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;\n          \n      \n    \n    \n  \n\nThis appears to be unused", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466552000", "createdAt": "2020-08-06T16:56:13Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java", "diffHunk": "@@ -33,26 +33,112 @@\n package com.smartdevicelink.protocol;\n \n \n+import android.support.annotation.RestrictTo;\n+\n import com.smartdevicelink.protocol.enums.SessionType;\n import com.smartdevicelink.security.SdlSecurityBase;\n import com.smartdevicelink.streaming.video.VideoStreamingParameters;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n+\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDMwNDMwOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo0NDozN1rOG894hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo0NDozN1rOG894hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4MTYzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466581638", "createdAt": "2020-08-06T17:44:37Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -854,6 +848,7 @@ protected void handlePacketToSend(SdlPacket packet) {\n      * sent to the protocol listener.\n      **/\n     protected void handleServiceEndedNAK(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service ended NAK received for service type \" + serviceType.getName();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDMxMjc4OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo0NzowNlrOG899tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo0NzowNlrOG899tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4Mjk2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466582967", "createdAt": "2020-08-06T17:47:06Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -1070,10 +1067,11 @@ protected void handleProtocolSessionStarted(SdlPacket packet, SessionType servic\n                 iSdlProtocol.setAcceptedVideoParams(iSdlProtocol.getDesiredVideoParams());\n             }\n         }\n-        iSdlProtocol.onProtocolSessionStarted(serviceType, (byte) packet.getSessionId(), (byte)protocolVersion.getMajor(), \"\", hashID, packet.isEncrypted());\n+        iSdlProtocol.onServiceStarted(packet, serviceType, (byte) packet.getSessionId(), protocolVersion, packet.isEncrypted());\n     }\n \n     protected void handleProtocolSessionNAKed(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service start NAK received for service type \" + serviceType.getName();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDUzNzc4OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1MzoxNlrOG9AKpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1MzoxNlrOG9AKpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxOTA0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466619046", "createdAt": "2020-08-06T18:53:16Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java", "diffHunk": "@@ -1,70 +1,41 @@\n package com.smartdevicelink.test.streaming;\n \n-import com.smartdevicelink.SdlConnection.ISdlConnectionListener;\n-import com.smartdevicelink.protocol.ProtocolMessage;\n-import com.smartdevicelink.protocol.enums.SessionType;\n+import com.smartdevicelink.SdlConnection.ISdlSessionListener;\n+import com.smartdevicelink.proxy.RPCMessage;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n \n import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDU1MDM3OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1Njo0OFrOG9ASbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1ODo0NVrOG9AWig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.smartdevicelink.transport.RouterServiceValidator;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466621038", "createdAt": "2020-08-06T18:56:48Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n import com.smartdevicelink.transport.RouterServiceValidator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMjA5MA==", "bodyText": "Also, remove below\nimport java.util.List;\n\nimport static junit.framework.TestCase.assertTrue;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466622090", "createdAt": "2020-08-06T18:58:45Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n import com.smartdevicelink.transport.RouterServiceValidator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA=="}, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4248, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}