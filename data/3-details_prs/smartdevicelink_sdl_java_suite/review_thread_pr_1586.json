{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjQyNjQ3", "number": 1586, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQyMDo1MjowMFrOFH7eaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NTozNVrOFLSTmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODU4Nzk1OnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/RPCStruct.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQyMDo1MjowMFrOIJlkqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MzoyNVrOIOXsXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyMzY4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        clone.setBulkData(_bulkData);\n          \n          \n            \n                        clone.setBulkData(_bulkData);\n          \n          \n            \n                        clone.store = (Hashtable<String, Object>) store.clone();", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1586#discussion_r546923689", "createdAt": "2020-12-21T20:52:00Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/proxy/RPCStruct.java", "diffHunk": "@@ -375,4 +378,43 @@ public Long getLong(String key) {\n         }\r\n         return null;\r\n     }\r\n+\r\n+    @Override\r\n+    public RPCStruct clone() {\r\n+        try {\r\n+            RPCStruct clone = (RPCStruct) super.clone();\r\n+            clone.setPayloadProtected(protectedPayload);\r\n+            clone.setBulkData(_bulkData);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a104251842e6efe37cacd0e82af7c8c268d0753d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzOTE2NQ==", "bodyText": "Should we also copy the store?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1586#discussion_r551939165", "createdAt": "2021-01-05T13:43:25Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/proxy/RPCStruct.java", "diffHunk": "@@ -375,4 +378,43 @@ public Long getLong(String key) {\n         }\r\n         return null;\r\n     }\r\n+\r\n+    @Override\r\n+    public RPCStruct clone() {\r\n+        try {\r\n+            RPCStruct clone = (RPCStruct) super.clone();\r\n+            clone.setPayloadProtected(protectedPayload);\r\n+            clone.setBulkData(_bulkData);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyMzY4OQ=="}, "originalCommit": {"oid": "a104251842e6efe37cacd0e82af7c8c268d0753d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc3MzIyOnYy", "diffSide": "RIGHT", "path": "base/src/main/java/com/smartdevicelink/proxy/RPCStruct.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoxNlrOIOXppQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0MjoxNlrOIOXppQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkzODQ2OQ==", "bodyText": "Can you add some JavaDocs method headers to added mehtods", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1586#discussion_r551938469", "createdAt": "2021-01-05T13:42:16Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/proxy/RPCStruct.java", "diffHunk": "@@ -375,4 +378,43 @@ public Long getLong(String key) {\n         }\r\n         return null;\r\n     }\r\n+\r\n+    @Override\r\n+    public RPCStruct clone() {\r\n+        try {\r\n+            RPCStruct clone = (RPCStruct) super.clone();\r\n+            clone.setPayloadProtected(protectedPayload);\r\n+            clone.setBulkData(_bulkData);\r\n+            return clone;\r\n+        } catch (CloneNotSupportedException e) {\r\n+            DebugTool.logError(\"RPCStruct\", \"Failed to clone: \" + e);\r\n+            return null;\r\n+        }\r\n+    }\r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a104251842e6efe37cacd0e82af7c8c268d0753d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzc4NTg1OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/proxy/RPCStructTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NTozNVrOIOXxGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo0NTozNVrOIOXxGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0MDM3Ng==", "bodyText": "It might be better if you created another object here and used that to compare instead of hard coding a number.", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1586#discussion_r551940376", "createdAt": "2021-01-05T13:45:35Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/proxy/RPCStructTests.java", "diffHunk": "@@ -183,4 +184,61 @@ public void testGetDouble() {\n             fail(e.getMessage());\n         }\n     }\n+\n+    public void testClone() {\n+        Hashtable<String, Object> map = new Hashtable<>();\n+        String key = \"test\";\n+        Integer value = 42;\n+        map.put(key, value);\n+\n+        RPCStruct rpcStruct = new RPCStruct(map);\n+        rpcStruct.setPayloadProtected(true);\n+        RPCStruct rpcClone = rpcStruct.clone();\n+\n+        assertEquals(rpcStruct.getStore().get(\"test\"), rpcClone.getStore().get(\"test\"));\n+        assertTrue(rpcClone.isPayloadProtected());\n+    }\n+\n+    public void testHashCode() {\n+        Hashtable<String, Object> map = new Hashtable<>();\n+        String key = \"test\";\n+        Integer value = 42;\n+        map.put(key, value);\n+\n+        RPCStruct rpcStruct = new RPCStruct(map);\n+\n+        Hashtable<String, Object> map2 = new Hashtable<>();\n+        String key2 = \"test2\";\n+        Integer value2 = 24;\n+        map2.put(key2, value2);\n+\n+        RPCStruct rpcStruct2 = new RPCStruct(map2);\n+\n+        assertEquals(rpcStruct.hashCode(), 3556536);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a104251842e6efe37cacd0e82af7c8c268d0753d"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4225, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}