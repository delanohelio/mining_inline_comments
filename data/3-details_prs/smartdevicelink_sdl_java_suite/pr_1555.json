{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MDM5Mjk5", "number": 1555, "title": "Screen manager alert manager", "bodyText": "Fixes #1304\nThis PR is Ready for review.\nRisk\nThis PR makes minor API changes.\nTesting Plan\n\n I have verified that I have not introduced new warnings in this PR (or explain why below)\n I have run the unit tests with this PR\n I have tested this PR against Core and verified behavior (if applicable, if not applicable, explain why below).\n I have tested Android, Java SE, and Java EE\n\nUnit Tests\nUnit tests were added for the new alert manager classes.\nCore Tests\n\n  Send a text-field-1 only alert\n Send a text-field-2 only alert\n Send an audio file only alert\n Send a speech synthesizer string only alert\n Cancel a UI only alert\n  Cancel a UI and speech alert\n Send an alert, modify the same alert view, and send the same view 1 second later.\n Send an alert with soft buttons. Select one of the soft buttons and make sure the handler is called. Send the same alert view again and make sure the soft button handlers are called when selected.\n Create an AlertView with a softButton with more than one state - it should throw an IllegalArgumentException\n Send an alert with neither text, secondaryText or audio set in the AlertView - an Error will print to the logs, dev listener will return false.\n Send an alert with only an audio file set in the SDLAlertView and connect to a module supporting RPC Spec version less than 5.0 - a custom error should be logged, dev listener will return false.\n\nCore version / branch / commit hash / module tested against: Core 7.0 and Sync 3.0\nHMI name / version / branch / commit hash / module tested against: Generic HMI 0.9.0\nSummary\nImplements proposal SDL 0282 which adds alert management (based on the Alert RPC) to the screen manager API.\nAlertAudio examples:\n        AlertAudioData alertAudioData = new AlertAudioData(String);\n\n        AlertAudioData alertAudioData = new AlertAudioData(String, SpeechCapabilities.TEXT);\n\n        AlertAudioData alertAudioData = new AlertAudioData(audioFile);\n\n        alertAudioData.setPlayTone(true);\n        alertAudioData.addSpeechSynthesizerStrings(List<String>);\n        alertAudioData.addPhoneticSpeechSynthesizerStrings(List<String>, SpeechCapabilities.TEXT);\n        alertAudioData.addAudioFiles(List<SdlFile>);\n\nAlertView build and present examples:\n        AlertView.Builder builder = new AlertView.Builder();\n        builder.setText(String);\n        builder.setSecondaryText(String);\n        builder.setTertiaryText(String);\n        builder.setSoftButtons(List<SoftButtonObject>);\n        builder.setAudio(AlertAudioData);\n        builder.setTimeout(10);\n        builder.setIcon(SdlArtwork);\n        AlertView alertView = builder.build();\n\n        sdlManager.getScreenManager().presentAlert(alertView, new AlertCompletionListener() {\n            @Override\n            public void onComplete(boolean success, Integer tryAgainTime) {\n                Log.i(TAG, \"onComplete: \" + success  );\n            }\n        });\n\nChangelog\nEnhancements\n\nAn alert manager was added to the base Screen Manager that handles uploading data needed by the alert and sending the alert.\n\nCLA\n\n I have signed the CLA", "createdAt": "2020-11-09T21:06:10Z", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555", "merged": true, "mergeCommit": {"oid": "af9d766dcee36cca42a3563a149b4623f04ae688"}, "closed": true, "closedAt": "2021-03-05T16:47:00Z", "author": {"login": "JulianKast"}, "timelineItems": {"totalCount": 125, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABd475zoAH2gAyNTE4MDM5Mjk5OmFhMmQyZWQxMTEzZjRhOWE3MWEwODVjMmYxZWEzMzM5NTU1ODdkZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd9s1T0AFqTU5OTA3NjY2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aa2d2ed1113f4a9a71a085c2f1ea333955587dda", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/aa2d2ed1113f4a9a71a085c2f1ea333955587dda", "committedDate": "2021-02-11T02:44:32Z", "message": "Align uploading Audio for Alert in PresentAlertOperation with iOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3899f2c62eaa4b64c217177f8d6efc5067ba63ac", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3899f2c62eaa4b64c217177f8d6efc5067ba63ac", "committedDate": "2021-02-11T16:18:50Z", "message": "Add SoftButton limit and align Image uploads with IOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff4372f9d9f83bfe6bfdfa097b73115e072bd5e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/cff4372f9d9f83bfe6bfdfa097b73115e072bd5e", "committedDate": "2021-02-11T18:33:18Z", "message": "Limit number of softButtons set in alertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebb39f990d94a53526aa2fe9ece81fbf319f5850", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ebb39f990d94a53526aa2fe9ece81fbf319f5850", "committedDate": "2021-02-11T18:54:52Z", "message": "Align Alert cancel logic with IOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b236eb9325d2985d4ba12d2e625d946994ad53ac", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/b236eb9325d2985d4ba12d2e625d946994ad53ac", "committedDate": "2021-02-11T20:28:15Z", "message": "remove unnecessary setter for WindowCapability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d014aa6061006b05fdb65d9e990610e6676be940", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d014aa6061006b05fdb65d9e990610e6676be940", "committedDate": "2021-02-11T20:58:11Z", "message": "Change nextCancelID to package private for unit test. Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b7aadebd8e89575b3973926828219df1854ab1", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/20b7aadebd8e89575b3973926828219df1854ab1", "committedDate": "2021-02-12T18:45:54Z", "message": "Add Comments to AlertView and AudioData Class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71907edbb950ad84d783a3827459d7e6ad5fcad3", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/71907edbb950ad84d783a3827459d7e6ad5fcad3", "committedDate": "2021-02-12T18:46:22Z", "message": "Fix audio check in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269ac34120a9e0973241d13c53cf49a15719722f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/269ac34120a9e0973241d13c53cf49a15719722f", "committedDate": "2021-02-12T18:47:13Z", "message": "Add Comments and rearrange method order to match IOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5677b22e6ae922a9ca51586150115f2a41949f6e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5677b22e6ae922a9ca51586150115f2a41949f6e", "committedDate": "2021-02-12T18:48:56Z", "message": "Remove space in test class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8988ee5a3ff5045757013b0b0924d713252a7998", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8988ee5a3ff5045757013b0b0924d713252a7998", "committedDate": "2021-02-12T19:34:47Z", "message": "Clean up testing imports and formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/91e39944e566ae5448386c4fcc9164d71884d520", "committedDate": "2021-02-12T19:37:01Z", "message": "Remove cancel op test as logic was changed to match iOS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNjM0NjIz", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-591634623", "createdAt": "2021-02-16T21:21:34Z", "commit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNlQyMToyMTozNFrOImaNoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xN1QxOToyNjowOFrOInHPgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE0NjI3Mg==", "bodyText": "Do we need a setter for show wait indicator?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r577146272", "createdAt": "2021-02-16T21:21:34Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/AlertView.java", "diffHunk": "@@ -0,0 +1,287 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import com.smartdevicelink.managers.file.filetypes.SdlArtwork;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class AlertView implements Cloneable {\n+    \n+    private static Integer defaultTimeout = 5;\n+    private static final int TIMEOUT_MIN = 3;\n+    private static final int TIMEOUT_MAX = 10;\n+    private String text, secondaryText, tertiaryText;\n+    private Integer timeout;\n+    private AlertAudioData audio;\n+    private boolean showWaitIndicator;\n+    private List<SoftButtonObject> softButtons;\n+    private SdlArtwork icon;\n+    AlertCanceledListener canceledListener;\n+\n+\n+    private AlertView() {\n+        this.timeout = defaultTimeout;\n+    }\n+\n+    public static class Builder {\n+\n+        AlertView alertView;\n+\n+        public Builder() {\n+            alertView = new AlertView();\n+        }\n+\n+        /**\n+         * The primary line of text for display on the alert. If fewer than three alert lines are available\n+         * on the head unit, the screen manager will automatically concatenate some of the lines together.\n+         */\n+        public Builder setText(String text) {\n+            this.alertView.text = text;\n+            return this;\n+        }\n+\n+        /**\n+         * The secondary line of text for display on the alert. If fewer than three alert lines are available\n+         * on the head unit, the screen manager will automatically concatenate some of the lines together.\n+         */\n+        public Builder setSecondaryText(String secondaryText) {\n+            alertView.secondaryText = secondaryText;\n+            return this;\n+        }\n+\n+        /**\n+         * The tertiary line of text for display on the alert. If fewer than three alert lines are available\n+         * on the head unit, the screen manager will automatically concatenate some of the lines together.\n+         */\n+        public Builder setTertiaryText(String tertiaryText) {\n+            alertView.tertiaryText = tertiaryText;\n+            return this;\n+        }\n+\n+        /**\n+         * Timeout in seconds. Defaults to 0, which will use `defaultTimeout`. If this is set below the\n+         * minimum, it will be capped at 3 seconds. Minimum 3 seconds, maximum 10 seconds. If this is\n+         * set above the maximum, it will be capped at 10 seconds. Defaults to 0.\n+         *\n+         * Please note that if a button is added to the alert, the defaultTimeout and timeout values will be ignored.\n+         */\n+        public Builder setTimeout(Integer timeout) {\n+            alertView.timeout = timeout;\n+            return this;\n+        }\n+\n+        /**\n+         * If supported, the alert GUI will display some sort of indefinite waiting / refresh / loading\n+         * indicator animation. Defaults to NO.\n+         */\n+        public Builder setShowWaitIndicator(boolean showWaitIndicator) {\n+            alertView.showWaitIndicator = showWaitIndicator;\n+            return this;\n+        }\n+\n+        /**\n+         * Soft buttons the user may select to perform actions. Only one `SoftButtonState` per object\n+         * is supported; if any soft button object contains multiple states, an exception will be thrown.\n+         */\n+        public Builder setSoftButtons(List<SoftButtonObject> softButtons) {\n+            alertView.setSoftButtons(softButtons);\n+            return this;\n+        }\n+\n+        /**\n+         * Text spoken, file(s) played, and/or tone played when the alert appears\n+         */\n+        public Builder setAudio(AlertAudioData audio) {\n+            alertView.audio = audio;\n+            return this;\n+        }\n+\n+        /**\n+         * An artwork that will be displayed when the icon appears. This will be uploaded prior to the\n+         * appearance of the alert if necessary. This will not be uploaded if the head unit does not\n+         * declare support for alertIcon.\n+         */\n+        public Builder setIcon(SdlArtwork icon) {\n+            alertView.icon = icon;\n+            return this;\n+        }\n+\n+        /**\n+         * Set this to change the default timeout for all alerts. If a timeout is not set on an individual\n+         * alert object (or if it is set to 0.0), then it will use this timeout instead. See `timeout`\n+         * for more details. If this is not set by you, it will default to 5 seconds. The minimum is\n+         * 3 seconds, the maximum is 10 seconds. If this is set below the minimum, it will be capped\n+         * at 3 seconds. If this is set above the maximum, it will be capped at 10 seconds.\n+         */\n+        public Builder setDefaultTimeOut(int defaultTimeOut) {\n+            alertView.setDefaultTimeout(defaultTimeOut);\n+            return this;\n+        }\n+\n+        public AlertView build() {\n+            return alertView;\n+        }\n+    }\n+\n+    // Notifies the subscriber that the alert should be cancelled.\n+    public void cancel() {\n+        if (canceledListener == null) {\n+            return;\n+        }\n+        canceledListener.onAlertCanceled();\n+    }\n+\n+    public Integer getTimeout() {\n+        if (timeout == null) {\n+            timeout = defaultTimeout;\n+        } else if (timeout < TIMEOUT_MIN) {\n+            return TIMEOUT_MIN;\n+        } else if (timeout > TIMEOUT_MAX) {\n+            return TIMEOUT_MAX;\n+        }\n+        return timeout;\n+    }\n+\n+    public AlertAudioData getAudio() {\n+        return audio;\n+    }\n+\n+    public void setAudio(AlertAudioData audio) {\n+        this.audio = audio;\n+    }\n+\n+    public String getText() {\n+        return text;\n+    }\n+\n+    public void setText(String text) {\n+        this.text = text;\n+    }\n+\n+    public boolean isShowWaitIndicator() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzE0ODMyNA==", "bodyText": "Is it possible for a single SpeechCapabilities to be returned and do we need to account for that similar to how we do in RegisterAppInterfaceResponse?\npublic List<SpeechCapabilities> getSpeechCapabilities() {\n        Object speechCapabilities = getObject(SpeechCapabilities.class, KEY_SPEECH_CAPABILITIES);\n        if (speechCapabilities instanceof List<?>) {\n            return (List<SpeechCapabilities>) speechCapabilities;\n        } else if (speechCapabilities instanceof SpeechCapabilities) {\n            // this is a known issue observed with some core implementations\n            List<SpeechCapabilities> newSpeechCapList = new ArrayList<>();\n            newSpeechCapList.add((SpeechCapabilities) speechCapabilities);\n            return newSpeechCapList;\n        }\n        return null;\n    }", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r577148324", "createdAt": "2021-02-16T21:25:37Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/BaseAlertManager.java", "diffHunk": "@@ -0,0 +1,343 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.livio.taskmaster.Queue;\n+import com.livio.taskmaster.Task;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.BaseSubManager;\n+import com.smartdevicelink.managers.CompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.lifecycle.OnSystemCapabilityListener;\n+import com.smartdevicelink.managers.lifecycle.SystemCapabilityManager;\n+import com.smartdevicelink.managers.permission.OnPermissionChangeListener;\n+import com.smartdevicelink.managers.permission.PermissionElement;\n+import com.smartdevicelink.managers.permission.PermissionStatus;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.DisplayCapability;\n+import com.smartdevicelink.proxy.rpc.OnButtonEvent;\n+import com.smartdevicelink.proxy.rpc.OnButtonPress;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ButtonName;\n+import com.smartdevicelink.proxy.rpc.enums.PredefinedWindows;\n+import com.smartdevicelink.proxy.rpc.enums.SpeechCapabilities;\n+import com.smartdevicelink.proxy.rpc.enums.SystemCapabilityType;\n+import com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+\n+abstract class BaseAlertManager extends BaseSubManager {\n+\n+    private static final String TAG = \"BaseAlertManager\";\n+    Queue transactionQueue;\n+    WindowCapability currentWindowCapability;\n+    private OnSystemCapabilityListener onSpeechCapabilityListener, onDisplaysCapabilityListener;\n+    List<SpeechCapabilities> speechCapabilities;\n+    private UUID permissionListener;\n+    boolean isAlertRPCAllowed = false;\n+    private final WeakReference<FileManager> fileManager;\n+    int nextCancelId;\n+    private final int alertCancelIdMin = 1;\n+    private final int alertCancelIdMax = 100;\n+    private CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+    OnRPCNotificationListener onButtonPressListener, onButtonEventListener;\n+\n+\n+    public BaseAlertManager(@NonNull ISdl internalInterface, @NonNull FileManager fileManager) {\n+        super(internalInterface);\n+        this.transactionQueue = newTransactionQueue();\n+        this.fileManager = new WeakReference<>(fileManager);\n+        nextCancelId = 0;\n+        this.softButtonObjects = new CopyOnWriteArrayList<>();\n+        addListeners();\n+    }\n+\n+    /**\n+     * Starts the manager\n+     * @param listener CompletionListener that is called once the BaseSubManager's state is READY, LIMITED, or ERROR\n+     */\n+    @Override\n+    public void start(CompletionListener listener) {\n+        transitionToState(READY);\n+        super.start(listener);\n+    }\n+\n+    /**\n+     * Clean up everything after the manager is no longer needed\n+     */\n+    @Override\n+    public void dispose() {\n+        currentWindowCapability = null;\n+        speechCapabilities = null;\n+        isAlertRPCAllowed = false;\n+        softButtonObjects = null;\n+\n+        if (transactionQueue != null) {\n+            transactionQueue.close();\n+            transactionQueue = null;\n+        }\n+\n+        // remove listeners\n+        if (internalInterface.getSystemCapabilityManager() != null) {\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.DISPLAYS, onDisplaysCapabilityListener);\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.SPEECH, onSpeechCapabilityListener);\n+        }\n+        if (internalInterface.getPermissionManager() != null) {\n+            internalInterface.getPermissionManager().removeListener(permissionListener);\n+        }\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_PRESS, onButtonPressListener);\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_EVENT, onButtonEventListener);\n+        super.dispose();\n+    }\n+\n+    /**\n+     * Creates a PresentAlertOperation and adds it to the transactionQueue\n+     *\n+     * @param alert    - AlertView object that contains alert information\n+     * @param listener - AlertCompletionListener that will notify the sender when Alert has completed\n+     */\n+    public void presentAlert(AlertView alert, AlertCompletionListener listener) {\n+        if (getState() == ERROR) {\n+            DebugTool.logWarning(TAG, \"Alert Manager In Error State\");\n+            return;\n+        }\n+\n+        // Check for softButtons and assign them ID's, Behavior mimic SoftButtonManager,\n+        // as in if invalid ID's are set, Alert will not show up.\n+        // It's best if ID's are not set custom and allow the screenManager to set them.\n+        if (alert.getSoftButtons() != null) {\n+            if (!BaseScreenManager.checkAndAssignButtonIds(alert.getSoftButtons(), BaseScreenManager.ManagerLocation.ALERT_MANAGER)) {\n+                DebugTool.logError(TAG, \"Attempted to set soft button objects for Alert, but multiple buttons had the same id.\");\n+                return;\n+            }\n+\n+            // Keep Track of SoftButtonObjects, to be able to Call their OnEventListeners\n+            CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+            if (alert.getSoftButtons() instanceof CopyOnWriteArrayList) {\n+                softButtonObjects = (CopyOnWriteArrayList<SoftButtonObject>) alert.getSoftButtons();\n+            } else {\n+                softButtonObjects = new CopyOnWriteArrayList<>(alert.getSoftButtons());\n+            }\n+            if (this.softButtonObjects.size() > 0) {\n+                for (SoftButtonObject object : softButtonObjects) {\n+                    if (softButtonObjects.contains(object)) {\n+                        continue;\n+                    }\n+                    this.softButtonObjects.add(object);\n+                }\n+            } else {\n+                this.softButtonObjects = softButtonObjects;\n+            }\n+        }\n+\n+        if (nextCancelId >= alertCancelIdMax) {\n+            nextCancelId = alertCancelIdMin;\n+        } else {\n+            nextCancelId++;\n+        }\n+\n+        PresentAlertOperation operation = new PresentAlertOperation(internalInterface, alert, currentWindowCapability, speechCapabilities, fileManager.get(), nextCancelId, listener);\n+        transactionQueue.add(operation, false);\n+\n+    }\n+\n+    private Queue newTransactionQueue() {\n+        Queue queue = internalInterface.getTaskmaster().createQueue(\"AlertManager\", 4, false);\n+        queue.pause();\n+        return queue;\n+    }\n+\n+    /**\n+     * Get the soft button objects list\n+     *\n+     * @return a List<SoftButtonObject>\n+     */\n+    protected List<SoftButtonObject> getSoftButtonObjects() {\n+        return softButtonObjects;\n+    }\n+\n+    /**\n+     * Get the SoftButtonObject that has the provided buttonId\n+     *\n+     * @param buttonId a int value that represents the id of the button\n+     * @return a SoftButtonObject\n+     */\n+    protected SoftButtonObject getSoftButtonObjectById(int buttonId) {\n+        for (SoftButtonObject softButtonObject : softButtonObjects) {\n+            if (softButtonObject.getButtonId() == buttonId) {\n+                return softButtonObject;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    // Suspend the queue if the WindowCapabilities are null\n+    // OR if isAlertRPCAllowed is false\n+    private void updateTransactionQueueSuspended() {\n+        if (!isAlertRPCAllowed || currentWindowCapability == null) {\n+            DebugTool.logInfo(TAG, String.format(\"Suspending the transaction queue. Current permission status is false: %b, window capabilities are null: %b\", isAlertRPCAllowed, currentWindowCapability == null));\n+            transactionQueue.pause();\n+        } else {\n+            DebugTool.logInfo(TAG, \"Starting the transaction queue\");\n+            transactionQueue.resume();\n+        }\n+    }\n+\n+\n+    private void addListeners() {\n+        // Retrieves SpeechCapabilities of the system.\n+        onSpeechCapabilityListener = new OnSystemCapabilityListener() {\n+            @Override\n+            public void onCapabilityRetrieved(Object capability) {\n+                speechCapabilities = (List<SpeechCapabilities>) capability;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NzgwNjY5MQ==", "bodyText": "id 4 is already being used by VoiceCommandManager and 5 is being used by FileManager should we update this one to 6?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Queue queue = internalInterface.getTaskmaster().createQueue(\"AlertManager\", 4, false);\n          \n          \n            \n                    Queue queue = internalInterface.getTaskmaster().createQueue(\"AlertManager\", 6, false);", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r577806691", "createdAt": "2021-02-17T17:32:32Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/BaseAlertManager.java", "diffHunk": "@@ -0,0 +1,343 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.livio.taskmaster.Queue;\n+import com.livio.taskmaster.Task;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.BaseSubManager;\n+import com.smartdevicelink.managers.CompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.lifecycle.OnSystemCapabilityListener;\n+import com.smartdevicelink.managers.lifecycle.SystemCapabilityManager;\n+import com.smartdevicelink.managers.permission.OnPermissionChangeListener;\n+import com.smartdevicelink.managers.permission.PermissionElement;\n+import com.smartdevicelink.managers.permission.PermissionStatus;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.DisplayCapability;\n+import com.smartdevicelink.proxy.rpc.OnButtonEvent;\n+import com.smartdevicelink.proxy.rpc.OnButtonPress;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ButtonName;\n+import com.smartdevicelink.proxy.rpc.enums.PredefinedWindows;\n+import com.smartdevicelink.proxy.rpc.enums.SpeechCapabilities;\n+import com.smartdevicelink.proxy.rpc.enums.SystemCapabilityType;\n+import com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+\n+abstract class BaseAlertManager extends BaseSubManager {\n+\n+    private static final String TAG = \"BaseAlertManager\";\n+    Queue transactionQueue;\n+    WindowCapability currentWindowCapability;\n+    private OnSystemCapabilityListener onSpeechCapabilityListener, onDisplaysCapabilityListener;\n+    List<SpeechCapabilities> speechCapabilities;\n+    private UUID permissionListener;\n+    boolean isAlertRPCAllowed = false;\n+    private final WeakReference<FileManager> fileManager;\n+    int nextCancelId;\n+    private final int alertCancelIdMin = 1;\n+    private final int alertCancelIdMax = 100;\n+    private CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+    OnRPCNotificationListener onButtonPressListener, onButtonEventListener;\n+\n+\n+    public BaseAlertManager(@NonNull ISdl internalInterface, @NonNull FileManager fileManager) {\n+        super(internalInterface);\n+        this.transactionQueue = newTransactionQueue();\n+        this.fileManager = new WeakReference<>(fileManager);\n+        nextCancelId = 0;\n+        this.softButtonObjects = new CopyOnWriteArrayList<>();\n+        addListeners();\n+    }\n+\n+    /**\n+     * Starts the manager\n+     * @param listener CompletionListener that is called once the BaseSubManager's state is READY, LIMITED, or ERROR\n+     */\n+    @Override\n+    public void start(CompletionListener listener) {\n+        transitionToState(READY);\n+        super.start(listener);\n+    }\n+\n+    /**\n+     * Clean up everything after the manager is no longer needed\n+     */\n+    @Override\n+    public void dispose() {\n+        currentWindowCapability = null;\n+        speechCapabilities = null;\n+        isAlertRPCAllowed = false;\n+        softButtonObjects = null;\n+\n+        if (transactionQueue != null) {\n+            transactionQueue.close();\n+            transactionQueue = null;\n+        }\n+\n+        // remove listeners\n+        if (internalInterface.getSystemCapabilityManager() != null) {\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.DISPLAYS, onDisplaysCapabilityListener);\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.SPEECH, onSpeechCapabilityListener);\n+        }\n+        if (internalInterface.getPermissionManager() != null) {\n+            internalInterface.getPermissionManager().removeListener(permissionListener);\n+        }\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_PRESS, onButtonPressListener);\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_EVENT, onButtonEventListener);\n+        super.dispose();\n+    }\n+\n+    /**\n+     * Creates a PresentAlertOperation and adds it to the transactionQueue\n+     *\n+     * @param alert    - AlertView object that contains alert information\n+     * @param listener - AlertCompletionListener that will notify the sender when Alert has completed\n+     */\n+    public void presentAlert(AlertView alert, AlertCompletionListener listener) {\n+        if (getState() == ERROR) {\n+            DebugTool.logWarning(TAG, \"Alert Manager In Error State\");\n+            return;\n+        }\n+\n+        // Check for softButtons and assign them ID's, Behavior mimic SoftButtonManager,\n+        // as in if invalid ID's are set, Alert will not show up.\n+        // It's best if ID's are not set custom and allow the screenManager to set them.\n+        if (alert.getSoftButtons() != null) {\n+            if (!BaseScreenManager.checkAndAssignButtonIds(alert.getSoftButtons(), BaseScreenManager.ManagerLocation.ALERT_MANAGER)) {\n+                DebugTool.logError(TAG, \"Attempted to set soft button objects for Alert, but multiple buttons had the same id.\");\n+                return;\n+            }\n+\n+            // Keep Track of SoftButtonObjects, to be able to Call their OnEventListeners\n+            CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+            if (alert.getSoftButtons() instanceof CopyOnWriteArrayList) {\n+                softButtonObjects = (CopyOnWriteArrayList<SoftButtonObject>) alert.getSoftButtons();\n+            } else {\n+                softButtonObjects = new CopyOnWriteArrayList<>(alert.getSoftButtons());\n+            }\n+            if (this.softButtonObjects.size() > 0) {\n+                for (SoftButtonObject object : softButtonObjects) {\n+                    if (softButtonObjects.contains(object)) {\n+                        continue;\n+                    }\n+                    this.softButtonObjects.add(object);\n+                }\n+            } else {\n+                this.softButtonObjects = softButtonObjects;\n+            }\n+        }\n+\n+        if (nextCancelId >= alertCancelIdMax) {\n+            nextCancelId = alertCancelIdMin;\n+        } else {\n+            nextCancelId++;\n+        }\n+\n+        PresentAlertOperation operation = new PresentAlertOperation(internalInterface, alert, currentWindowCapability, speechCapabilities, fileManager.get(), nextCancelId, listener);\n+        transactionQueue.add(operation, false);\n+\n+    }\n+\n+    private Queue newTransactionQueue() {\n+        Queue queue = internalInterface.getTaskmaster().createQueue(\"AlertManager\", 4, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Nzg3NTQ2OQ==", "bodyText": "Since this is still to be used by the BaseScreenManager should we make a note to make sure we change this to RestrictTo Library,  otherwise it might get removed when we clean up at the end of a future release", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r577875469", "createdAt": "2021-02-17T19:12:14Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/SoftButtonObject.java", "diffHunk": "@@ -295,12 +295,14 @@ public int getButtonId() {\n     }\n \n     /**\n+     * DO NOT USE! let the managers assign ID's\n      * Sets the id of the SoftButtonObject <br>\n      * <strong>Note: If the developer did not set buttonId, the manager will automatically assign an id before the SoftButtons are sent to the head unit.\n      * Please note that the manager may reuse ids from previous batch of SoftButtons that were already sent to the head unit</strong>\n      *\n      * @param buttonId an int value that represents the id of the SoftButtonObject\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Nzg4NDAzNQ==", "bodyText": "Do we need to add this check? I dont think it is actually being made", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r577884035", "createdAt": "2021-02-17T19:26:08Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/PresentAlertOperation.java", "diffHunk": "@@ -0,0 +1,518 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import com.livio.taskmaster.Task;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.CompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.ManagerUtility;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.file.MultipleFileCompletionListener;\n+import com.smartdevicelink.managers.file.filetypes.SdlArtwork;\n+import com.smartdevicelink.managers.file.filetypes.SdlFile;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.Alert;\n+import com.smartdevicelink.proxy.rpc.AlertResponse;\n+import com.smartdevicelink.proxy.rpc.CancelInteraction;\n+import com.smartdevicelink.proxy.rpc.SoftButton;\n+import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n+import com.smartdevicelink.proxy.rpc.TTSChunk;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ImageFieldName;\n+import com.smartdevicelink.proxy.rpc.enums.SpeechCapabilities;\n+import com.smartdevicelink.proxy.rpc.listeners.OnRPCResponseListener;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Operation that handles uploading images and audio data needed by the alert and, once the data uploads are complete, sending the alert.\n+ * \n+ * Created by Julian Kast on 12/10/20.\n+ */\n+public class PresentAlertOperation extends Task {\n+    private static final String TAG = \"PresentAlertOperation\";\n+    private AlertView alertView;\n+    private AlertCompletionListener listener;\n+    private final WeakReference<ISdl> internalInterface;\n+    private final WeakReference<FileManager> fileManager;\n+    WindowCapability currentWindowCapability;\n+    private int cancelId;\n+    private List<SpeechCapabilities> speechCapabilities;\n+    boolean isAlertPresented;\n+    static int SOFTBUTTON_COUNT = 4;\n+\n+    public PresentAlertOperation(ISdl internalInterface, AlertView alertView, WindowCapability currentCapabilities, List<SpeechCapabilities> speechCapabilities, FileManager fileManager, Integer cancelId, AlertCompletionListener listener) {\n+        super(\"PresentAlertOperation\");\n+        this.internalInterface = new WeakReference<>(internalInterface);\n+        this.fileManager = new WeakReference<>(fileManager);\n+        this.currentWindowCapability = currentCapabilities;\n+        this.speechCapabilities = speechCapabilities;\n+        this.alertView = alertView.clone();\n+        this.listener = listener;\n+        this.cancelId = cancelId;\n+        this.isAlertPresented = false;\n+\n+        this.alertView.canceledListener = new AlertCanceledListener() {\n+            @Override\n+            public void onAlertCanceled() {\n+                cancelAlert();\n+            }\n+        };\n+        alertView.canceledListener = this.alertView.canceledListener;\n+    }\n+\n+    @Override\n+    public void onExecute() {\n+        DebugTool.logInfo(TAG, \"Alert Operation: Executing present Alert operation\");\n+        start();\n+    }\n+\n+    private void start() {\n+        if (getState() == Task.CANCELED) {\n+            finishOperation(false, null);\n+            return;\n+        }\n+        if (!isValidAlertViewData(alertView)) {\n+            if (alertView.getAudio() != null && alertView.getAudio().getAudioData().size() > 0) {\n+                DebugTool.logError(TAG, \"The module does not support the use of only audio file data in an alert. \" +\n+                        \"The alert has no data and can not be sent to the module. \" +\n+                        \"The use of audio file data in an alert is only supported on modules supporting RPC Spec v5.0 or newer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e39944e566ae5448386c4fcc9164d71884d520"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5c829ff52bd280f4c1d6c529b112a113a6291e5", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e5c829ff52bd280f4c1d6c529b112a113a6291e5", "committedDate": "2021-02-17T20:33:57Z", "message": "add setter for showWaitIndicator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5a193ef43db49e2b2cbb47d39dd8eecd357265", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/7c5a193ef43db49e2b2cbb47d39dd8eecd357265", "committedDate": "2021-02-17T20:36:11Z", "message": "Update queue number to 6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f64a46d278e7e8fd0d0902584908d7529baa8d6", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5f64a46d278e7e8fd0d0902584908d7529baa8d6", "committedDate": "2021-02-17T21:00:43Z", "message": "Fix speechCapabilities conversion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66883096d9f25d60e79902ca456e146a1fd0252c", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/66883096d9f25d60e79902ca456e146a1fd0252c", "committedDate": "2021-02-17T21:22:08Z", "message": "Fix audioFile check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306485e320863b0d6c7fddf1b8c26e2a5574042a", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/306485e320863b0d6c7fddf1b8c26e2a5574042a", "committedDate": "2021-02-17T21:46:10Z", "message": "Add comment to deprecation of setting ID to SoftButtonObject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a21cf2f701b0dca425310676da4cf9d51b91700", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9a21cf2f701b0dca425310676da4cf9d51b91700", "committedDate": "2021-02-24T16:12:48Z", "message": "Fix cancelID for choiceSetManager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NzgxNDc0", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-598781474", "createdAt": "2021-02-25T16:49:31Z", "commit": {"oid": "9a21cf2f701b0dca425310676da4cf9d51b91700"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNjo0OTozMVrOIr_PRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNjo0OTozMVrOIr_PRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mjk5NTc4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (softButtonObjects.contains(object)) {\n          \n          \n            \n                                if (this.softButtonObjects.contains(object)) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r582995783", "createdAt": "2021-02-25T16:49:31Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/BaseAlertManager.java", "diffHunk": "@@ -0,0 +1,343 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.livio.taskmaster.Queue;\n+import com.livio.taskmaster.Task;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.BaseSubManager;\n+import com.smartdevicelink.managers.CompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.lifecycle.OnSystemCapabilityListener;\n+import com.smartdevicelink.managers.lifecycle.SystemCapabilityManager;\n+import com.smartdevicelink.managers.permission.OnPermissionChangeListener;\n+import com.smartdevicelink.managers.permission.PermissionElement;\n+import com.smartdevicelink.managers.permission.PermissionStatus;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.DisplayCapability;\n+import com.smartdevicelink.proxy.rpc.OnButtonEvent;\n+import com.smartdevicelink.proxy.rpc.OnButtonPress;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ButtonName;\n+import com.smartdevicelink.proxy.rpc.enums.PredefinedWindows;\n+import com.smartdevicelink.proxy.rpc.enums.SpeechCapabilities;\n+import com.smartdevicelink.proxy.rpc.enums.SystemCapabilityType;\n+import com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+\n+abstract class BaseAlertManager extends BaseSubManager {\n+\n+    private static final String TAG = \"BaseAlertManager\";\n+    Queue transactionQueue;\n+    WindowCapability currentWindowCapability;\n+    private OnSystemCapabilityListener onSpeechCapabilityListener, onDisplaysCapabilityListener;\n+    List<SpeechCapabilities> speechCapabilities;\n+    private UUID permissionListener;\n+    boolean isAlertRPCAllowed = false;\n+    private final WeakReference<FileManager> fileManager;\n+    int nextCancelId;\n+    private final int alertCancelIdMin = 1;\n+    private final int alertCancelIdMax = 100;\n+    private CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+    OnRPCNotificationListener onButtonPressListener, onButtonEventListener;\n+\n+\n+    public BaseAlertManager(@NonNull ISdl internalInterface, @NonNull FileManager fileManager) {\n+        super(internalInterface);\n+        this.transactionQueue = newTransactionQueue();\n+        this.fileManager = new WeakReference<>(fileManager);\n+        nextCancelId = 0;\n+        this.softButtonObjects = new CopyOnWriteArrayList<>();\n+        addListeners();\n+    }\n+\n+    /**\n+     * Starts the manager\n+     * @param listener CompletionListener that is called once the BaseSubManager's state is READY, LIMITED, or ERROR\n+     */\n+    @Override\n+    public void start(CompletionListener listener) {\n+        transitionToState(READY);\n+        super.start(listener);\n+    }\n+\n+    /**\n+     * Clean up everything after the manager is no longer needed\n+     */\n+    @Override\n+    public void dispose() {\n+        currentWindowCapability = null;\n+        speechCapabilities = null;\n+        isAlertRPCAllowed = false;\n+        softButtonObjects = null;\n+\n+        if (transactionQueue != null) {\n+            transactionQueue.close();\n+            transactionQueue = null;\n+        }\n+\n+        // remove listeners\n+        if (internalInterface.getSystemCapabilityManager() != null) {\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.DISPLAYS, onDisplaysCapabilityListener);\n+            internalInterface.getSystemCapabilityManager().removeOnSystemCapabilityListener(SystemCapabilityType.SPEECH, onSpeechCapabilityListener);\n+        }\n+        if (internalInterface.getPermissionManager() != null) {\n+            internalInterface.getPermissionManager().removeListener(permissionListener);\n+        }\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_PRESS, onButtonPressListener);\n+        internalInterface.removeOnRPCNotificationListener(FunctionID.ON_BUTTON_EVENT, onButtonEventListener);\n+        super.dispose();\n+    }\n+\n+    /**\n+     * Creates a PresentAlertOperation and adds it to the transactionQueue\n+     *\n+     * @param alert    - AlertView object that contains alert information\n+     * @param listener - AlertCompletionListener that will notify the sender when Alert has completed\n+     */\n+    public void presentAlert(AlertView alert, AlertCompletionListener listener) {\n+        if (getState() == ERROR) {\n+            DebugTool.logWarning(TAG, \"Alert Manager In Error State\");\n+            return;\n+        }\n+\n+        // Check for softButtons and assign them ID's, Behavior mimic SoftButtonManager,\n+        // as in if invalid ID's are set, Alert will not show up.\n+        // It's best if ID's are not set custom and allow the screenManager to set them.\n+        if (alert.getSoftButtons() != null) {\n+            if (!BaseScreenManager.checkAndAssignButtonIds(alert.getSoftButtons(), BaseScreenManager.ManagerLocation.ALERT_MANAGER)) {\n+                DebugTool.logError(TAG, \"Attempted to set soft button objects for Alert, but multiple buttons had the same id.\");\n+                return;\n+            }\n+\n+            // Keep Track of SoftButtonObjects, to be able to Call their OnEventListeners\n+            CopyOnWriteArrayList<SoftButtonObject> softButtonObjects;\n+            if (alert.getSoftButtons() instanceof CopyOnWriteArrayList) {\n+                softButtonObjects = (CopyOnWriteArrayList<SoftButtonObject>) alert.getSoftButtons();\n+            } else {\n+                softButtonObjects = new CopyOnWriteArrayList<>(alert.getSoftButtons());\n+            }\n+            if (this.softButtonObjects.size() > 0) {\n+                for (SoftButtonObject object : softButtonObjects) {\n+                    if (softButtonObjects.contains(object)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a21cf2f701b0dca425310676da4cf9d51b91700"}, "originalPosition": 164}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb8fa9abf55fbb206496d8696e6a79a38c54ba85", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/eb8fa9abf55fbb206496d8696e6a79a38c54ba85", "committedDate": "2021-02-25T20:38:30Z", "message": "Add interface for clearing out references to SoftButtonObjects in BaseAlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d863de6798951eb4486ca3ceead72a430d6bbe9e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d863de6798951eb4486ca3ceead72a430d6bbe9e", "committedDate": "2021-02-25T20:45:02Z", "message": "Fix unit test for PresentAlertOperation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MDI3MDYz", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-599027063", "createdAt": "2021-02-25T21:00:55Z", "commit": {"oid": "eb8fa9abf55fbb206496d8696e6a79a38c54ba85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQyMTowMDo1NVrOIsKv9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQyMTowMDo1NVrOIsKv9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzE4NDM3Mw==", "bodyText": "the if check here is not needed,\nif remove() does not find the object the list is unchaged", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r583184373", "createdAt": "2021-02-25T21:00:55Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/BaseAlertManager.java", "diffHunk": "@@ -177,11 +160,30 @@ public void presentAlert(AlertView alert, AlertCompletionListener listener) {\n             nextCancelId++;\n         }\n \n-        PresentAlertOperation operation = new PresentAlertOperation(internalInterface, alert, currentWindowCapability, speechCapabilities, fileManager.get(), nextCancelId, listener);\n+        PresentAlertOperation operation = new PresentAlertOperation(internalInterface, alert, currentWindowCapability, speechCapabilities, fileManager.get(), nextCancelId, listener, new AlertSoftButtonClearListener() {\n+            @Override\n+            public void onButtonClear(List<SoftButtonObject> softButtonObjectList) {\n+                // Stop keeping track of SoftButtonObject listeners as operation has finished\n+                for (SoftButtonObject object : softButtonObjectList) {\n+                    if (softButtonObjects.contains(object)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb8fa9abf55fbb206496d8696e6a79a38c54ba85"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1869abf8755e1a0039d6ec53cf197212a643d5da", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1869abf8755e1a0039d6ec53cf197212a643d5da", "committedDate": "2021-02-25T21:22:53Z", "message": "Remove unnecessary if statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MDc2NjYx", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-599076661", "createdAt": "2021-02-25T22:00:40Z", "commit": {"oid": "1869abf8755e1a0039d6ec53cf197212a643d5da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1000838c3551df14849add97b820f89f0cb8b612", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1000838c3551df14849add97b820f89f0cb8b612", "committedDate": "2020-11-09T20:59:42Z", "message": "Added AlertAudioData and AudioData classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d2521a233f9c8c3c89fa0755264f551dc90c702", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9d2521a233f9c8c3c89fa0755264f551dc90c702", "committedDate": "2020-11-09T21:00:30Z", "message": "Added AlertManager and BaseAlertManager Classes, Some logic to get proof of concept working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a620197f30d10791c3a65136582d21638636fc", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a6a620197f30d10791c3a65136582d21638636fc", "committedDate": "2020-11-09T21:01:25Z", "message": "Added PresentAlertOperation Class and some bare bones logic for proof of concept"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9c7be03ca3b13cccc7c1f736bca697c854ba743", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f9c7be03ca3b13cccc7c1f736bca697c854ba743", "committedDate": "2020-11-09T21:02:27Z", "message": "Added AlertView class and AlertCanceledListener interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd30eccc43f5cd8847b5a74e33988dcab4ebb4aa", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/cd30eccc43f5cd8847b5a74e33988dcab4ebb4aa", "committedDate": "2020-11-09T21:03:17Z", "message": "Added AlertManager to BaseScreenManager, more refining is needed  here"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d37612c621ec77881ce18a9e28b2f7114596cb0", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3d37612c621ec77881ce18a9e28b2f7114596cb0", "committedDate": "2020-11-09T21:28:34Z", "message": "Added FileManager to AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf3bc8d1b920ec721bfd1a7db6075f27a0d05c39", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/cf3bc8d1b920ec721bfd1a7db6075f27a0d05c39", "committedDate": "2020-11-12T19:21:54Z", "message": "Cleaned up AudioData and AlertAudioData, implemented creating TTSChunk in AudioData"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff95b55b6bab56f7818bb69e8f59b25e9a4d7341", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ff95b55b6bab56f7818bb69e8f59b25e9a4d7341", "committedDate": "2020-11-16T21:58:27Z", "message": "Modified BaseAlertManager to have queues and to create an operation for Alerts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada78f1f364067d3825a4491e41d5bdd0e9b7861", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ada78f1f364067d3825a4491e41d5bdd0e9b7861", "committedDate": "2020-11-16T21:59:41Z", "message": "Added logic to create the Alert RPC, Upload Images and audio files. Added capability checking and aligned with IOS."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cfac93e523f1fba77a4b6c25a2e368446b11231", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/6cfac93e523f1fba77a4b6c25a2e368446b11231", "committedDate": "2020-11-16T22:02:01Z", "message": "Fixed formatting and Fixed Timeout logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4504cdac2f155b393f7cc37bc6ec2f0c85652b8e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4504cdac2f155b393f7cc37bc6ec2f0c85652b8e", "committedDate": "2020-11-17T17:00:22Z", "message": "Move All AlertManager related classes to Screen Manager package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffab8a21380158e7ef3336ada7364f4365338e00", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ffab8a21380158e7ef3336ada7364f4365338e00", "committedDate": "2020-11-17T17:01:58Z", "message": "Add logic for Cancel ID to BaseAlertManager and PresentAlertOperation, as well as fix adding audio to an alert in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8a4f59bc5140f5fd89a905eab5bda216314573", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ba8a4f59bc5140f5fd89a905eab5bda216314573", "committedDate": "2020-11-18T14:47:08Z", "message": "Fix package naming and null checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8050f62471b82b0745de27b6d402163f18e915c4", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8050f62471b82b0745de27b6d402163f18e915c4", "committedDate": "2020-11-18T19:44:06Z", "message": "Added check to check and assign SoftButtons Id's in BaseScreenManager, BaseAlertManager and BaseSoftButtonManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e270dbeceaaddb6f491435b52a88a8a847e6d566", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e270dbeceaaddb6f491435b52a88a8a847e6d566", "committedDate": "2020-11-19T17:32:50Z", "message": "Alert Text field concatenation logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b97fa4ca7e908ee65e24b84ffffe48fbcf52c7b2", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/b97fa4ca7e908ee65e24b84ffffe48fbcf52c7b2", "committedDate": "2020-11-19T17:36:10Z", "message": "Added method to managerUtility to check for alert textField capability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfbc381262579546dfc8986519c82a54410265e7", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bfbc381262579546dfc8986519c82a54410265e7", "committedDate": "2020-11-19T17:39:45Z", "message": "Added PermissionManager logic to ScreenManager and AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "254399c35a74c906cad1bf30f79678b5869b804a", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/254399c35a74c906cad1bf30f79678b5869b804a", "committedDate": "2020-11-19T17:40:06Z", "message": "Added a setter to AlertView"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b586cd7ea1ab4719a9e1dd76d9a285843c557e1", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8b586cd7ea1ab4719a9e1dd76d9a285843c557e1", "committedDate": "2020-11-19T20:39:34Z", "message": "Rearrange logic in constructor to prevent errors when creating listeners"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99eeac1d9b441005b4e21134325b8031f3b3d5b4", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/99eeac1d9b441005b4e21134325b8031f3b3d5b4", "committedDate": "2020-11-19T20:40:26Z", "message": "Fix softbutton id logic and add permission manager to alertManager in BaseScreenManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a68affa46cce47f5f2bd761a3d6ffe8724a3b70b", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a68affa46cce47f5f2bd761a3d6ffe8724a3b70b", "committedDate": "2020-11-19T20:41:03Z", "message": "Add Permission Manager to Alert Manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bb57ea9e877f62d6273daf0f28c63c2f677dd82", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5bb57ea9e877f62d6273daf0f28c63c2f677dd82", "committedDate": "2020-11-19T20:41:35Z", "message": "Add Permission Manager import to AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42d39a2a0c89131c8f17479204676834ae0757a", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e42d39a2a0c89131c8f17479204676834ae0757a", "committedDate": "2020-11-20T18:08:51Z", "message": "Add AlertCompletionListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98bda1bcda511c913c532999f0d8e1fdcddac25c", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/98bda1bcda511c913c532999f0d8e1fdcddac25c", "committedDate": "2020-11-20T18:09:30Z", "message": "Add AlertCompletionListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e7b38d97f5464e8ec98835b0a09f97021550b3", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/52e7b38d97f5464e8ec98835b0a09f97021550b3", "committedDate": "2020-11-20T19:00:21Z", "message": "Renamed SoftButtonLocation to ManagerLocation to be more generic, incase it needs to be used in the future"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f1bf22db7c3cb686d13c289ac02e5f4bc2470f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/82f1bf22db7c3cb686d13c289ac02e5f4bc2470f", "committedDate": "2020-11-23T16:27:56Z", "message": "Modify AudioData Classes, Proposal needs revised to reflect changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5328b5248953149ac07d374f23b03c7aa0d0015", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f5328b5248953149ac07d374f23b03c7aa0d0015", "committedDate": "2020-11-23T17:47:06Z", "message": "Add ranges for cancelId's for chioiceSetManager and alertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "842abe022b533db7b0e95604b2158ea6c2206a9b", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/842abe022b533db7b0e95604b2158ea6c2206a9b", "committedDate": "2020-11-23T19:11:00Z", "message": "Fix setting audio data for alert RPC in AlertManager and fix names in AudioData class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d48d70bb973831775e1a725464b00531cf262bbd", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d48d70bb973831775e1a725464b00531cf262bbd", "committedDate": "2020-11-23T20:29:33Z", "message": "Added SpeechCapability check for audio files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "233dd35930e0b4607e9c4f8a5b6ab2ce8649156b", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/233dd35930e0b4607e9c4f8a5b6ab2ce8649156b", "committedDate": "2020-11-23T20:31:19Z", "message": "Added check for supporting alert icon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72757476802bb892a16e66f260f731c1b00339a9", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/72757476802bb892a16e66f260f731c1b00339a9", "committedDate": "2020-11-24T19:02:37Z", "message": "Added CancelInteraction to presentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a538f12a45f4269e0e8e554127ed8d092d2620f0", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a538f12a45f4269e0e8e554127ed8d092d2620f0", "committedDate": "2020-11-30T17:58:09Z", "message": "Add permission manager to ISDL, revert code adding it to the screenManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9df7ea6b947a11eef63593ed807240c56c550e26", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9df7ea6b947a11eef63593ed807240c56c550e26", "committedDate": "2020-11-30T21:35:08Z", "message": "Proposed Adding PermissionManager to ISDL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e76cb2299d5716299d0ab54ceca669650eef7a62", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e76cb2299d5716299d0ab54ceca669650eef7a62", "committedDate": "2020-11-30T23:12:26Z", "message": "Add null audio check in PresentAlertOperation as well as crated clone methods for AlertAudioData and AlertView, fixed issue in AudioData where speech capability was not being added to prompts with spoken strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "349f3a731618916dabe87872f9f769bdb6725dab", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/349f3a731618916dabe87872f9f769bdb6725dab", "committedDate": "2020-12-01T15:03:58Z", "message": "revert changes adding permissionManager to baseLifecycleManagrer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b9b03324a650ad09e7f939c2b01973ff993238c", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2b9b03324a650ad09e7f939c2b01973ff993238c", "committedDate": "2020-12-01T15:45:18Z", "message": "Add ISdl implementation to SdlManager in android and javaSE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a9223cf7887b1bddc17de716b2cbba818919936", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3a9223cf7887b1bddc17de716b2cbba818919936", "committedDate": "2020-12-01T16:56:59Z", "message": "Formatting fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba85760b4cca53cd6d5bd1ac4f8dae57a4183540", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ba85760b4cca53cd6d5bd1ac4f8dae57a4183540", "committedDate": "2020-12-01T17:13:04Z", "message": "Adding unit test classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaa9c51ad5758a185ae65d018f037536fe23148c", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/eaa9c51ad5758a185ae65d018f037536fe23148c", "committedDate": "2020-12-01T18:56:53Z", "message": "Fix npe in PresentAlertOperation and make ISdl in SdlManager package private for unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e729baa64fdad0ecc25cf4539d886bb0a0fb1e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/22e729baa64fdad0ecc25cf4539d886bb0a0fb1e", "committedDate": "2020-12-01T18:57:46Z", "message": "Added testPresentAlert to PresentAlertOperation, fix SystemCapabilityManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a51cdf058f4cd724f57b6528e668c0b6eaa0c47", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3a51cdf058f4cd724f57b6528e668c0b6eaa0c47", "committedDate": "2020-12-01T19:14:48Z", "message": "Add audio file to testing for alerts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382a7e9526a83274469d0865745fdad7a53326f5", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/382a7e9526a83274469d0865745fdad7a53326f5", "committedDate": "2020-12-02T16:51:04Z", "message": "Add null check for softbuttons in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a67641f2c3ae0be916e5ffeadbcfd55fe1489d0", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9a67641f2c3ae0be916e5ffeadbcfd55fe1489d0", "committedDate": "2020-12-02T17:45:42Z", "message": "Fixe unit test involving sdlManager ISdl, AlertManagers Permission Manager and setting SoftButtons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f43c39d5ba660690d40305be729aeed9d3cd2c9", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3f43c39d5ba660690d40305be729aeed9d3cd2c9", "committedDate": "2020-12-02T17:54:13Z", "message": "Merge branch 'develop' into screen-manager-alert-manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b613b7099655858b1ff9acf5f710ed822c3c536", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/7b613b7099655858b1ff9acf5f710ed822c3c536", "committedDate": "2020-12-02T18:10:31Z", "message": "Add AlertManager class to javaSE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "439046538d4ae01e83236cb5bfce7ce9c75e5207", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/439046538d4ae01e83236cb5bfce7ce9c75e5207", "committedDate": "2020-12-02T19:39:22Z", "message": "Added AlertAudioDataTest and fixed UnsupportedOperationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd5fab3c48387e70c7a7c66106d06f318c21cfa2", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/fd5fab3c48387e70c7a7c66106d06f318c21cfa2", "committedDate": "2020-12-02T20:22:36Z", "message": "Remove checkAndAssignButtonIds from BaseSoftButtonManager as we use the screenManager now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "476f67b0b103e807b72c0ca4fc8af204d434a9ed", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/476f67b0b103e807b72c0ca4fc8af204d434a9ed", "committedDate": "2020-12-02T20:24:27Z", "message": "Add Unit Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af05c79fdf37c9c84dc1f513d89833347bcd0bae", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/af05c79fdf37c9c84dc1f513d89833347bcd0bae", "committedDate": "2020-12-02T21:10:26Z", "message": "Add SoftButtonCheck and unit test to AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76e42f0bc4a504cbff75a96feec6e83f1c117005", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/76e42f0bc4a504cbff75a96feec6e83f1c117005", "committedDate": "2020-12-02T21:35:54Z", "message": "Add unit test to AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a995c8bd3852a90c904da80d352aec6b300efd", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/87a995c8bd3852a90c904da80d352aec6b300efd", "committedDate": "2020-12-02T22:16:28Z", "message": "Add setters in AlertView as well as add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b01238693d83d32b6899c649c28c7eadfdb1738", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/7b01238693d83d32b6899c649c28c7eadfdb1738", "committedDate": "2020-12-03T19:32:21Z", "message": "Add comments and Align with IOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27394f3d27fc9b1ae039393dd24ae7e3e93272b8", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/27394f3d27fc9b1ae039393dd24ae7e3e93272b8", "committedDate": "2020-12-03T19:50:43Z", "message": "Align AudioData and AlertAudioData classes with IOS and add comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70697d31d6163009dffa236362cf645cd045a3ff", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/70697d31d6163009dffa236362cf645cd045a3ff", "committedDate": "2020-12-03T21:01:14Z", "message": "Align and cleanup AlertView with iOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3af9e79fea2574cf2e2375a9c8b9bfcd4d62b753", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3af9e79fea2574cf2e2375a9c8b9bfcd4d62b753", "committedDate": "2020-12-03T21:12:28Z", "message": "Deprecated setting SoftButtonID's and added comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8179533e73ffff21991c794d7381707bafac59e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d8179533e73ffff21991c794d7381707bafac59e", "committedDate": "2020-12-03T21:17:03Z", "message": "Remove unnecessary check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc9bb9acb6f74521710384b9634ddd3b2d3dc128", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bc9bb9acb6f74521710384b9634ddd3b2d3dc128", "committedDate": "2020-12-03T21:54:03Z", "message": "Blocking a unit test to check code cov"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad60eddb6dfa1118d5c93097048a41746720de11", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ad60eddb6dfa1118d5c93097048a41746720de11", "committedDate": "2020-12-04T19:50:39Z", "message": "Reformat AlertAudioData, Add SoftButtonObject clone method, Add OnRPCNotificationListener in AlertManager of softButtons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5261e48d1b9bbd72c419617b74e22d70e52a331", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/b5261e48d1b9bbd72c419617b74e22d70e52a331", "committedDate": "2020-12-04T21:06:24Z", "message": "Add Unit Test to PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30756147578d31810b27681061443d7f35307586", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/30756147578d31810b27681061443d7f35307586", "committedDate": "2020-12-04T21:43:06Z", "message": "Rearrange cancel logic and add unit test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eff7a815764f4664dbb4eb9d9c9dc626f95be9b", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4eff7a815764f4664dbb4eb9d9c9dc626f95be9b", "committedDate": "2020-12-07T21:07:23Z", "message": "Add OnFinished to operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89911096ab23009ae5887016ad275b3836b8af9d", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/89911096ab23009ae5887016ad275b3836b8af9d", "committedDate": "2020-12-08T18:24:26Z", "message": "Added custom errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d8d1beba76b06d4f9fe0f3d499e927727bec2c", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/58d8d1beba76b06d4f9fe0f3d499e927727bec2c", "committedDate": "2020-12-08T19:32:24Z", "message": "Change logInfo to logError in PresentAlertOperation for checking if it supports audio files, fix unit test and formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25bd02edc1c931c1fc562ad632d57f69746fb041", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/25bd02edc1c931c1fc562ad632d57f69746fb041", "committedDate": "2020-12-08T20:53:03Z", "message": "Formatting fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4b487e122af6520d54231d1006ad4b2c2fdf1d2", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f4b487e122af6520d54231d1006ad4b2c2fdf1d2", "committedDate": "2020-12-10T18:20:22Z", "message": "Add DispatchGroup.java and implement it in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5383653f95ea015d1aad924145737d27a1f62339", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5383653f95ea015d1aad924145737d27a1f62339", "committedDate": "2020-12-14T14:58:21Z", "message": "Merge branch 'develop' into screen-manager-alert-manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f69e8c9b646af424ca32031c14ec722e021829", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/c7f69e8c9b646af424ca32031c14ec722e021829", "committedDate": "2020-12-14T17:13:34Z", "message": "Use new FileManager method filesNeedsUpload in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bfe2c34f095913f8d125448376362716a767b28", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3bfe2c34f095913f8d125448376362716a767b28", "committedDate": "2020-12-14T17:58:16Z", "message": "Rename methods for alignment and fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4418abb4975ab5181f520cc9a94f2c19f3fd9dd2", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4418abb4975ab5181f520cc9a94f2c19f3fd9dd2", "committedDate": "2020-12-14T18:03:36Z", "message": "iOS alignment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f30e3f1c0ac5fb271e64f3fa27cc3e37c3a875ea", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f30e3f1c0ac5fb271e64f3fa27cc3e37c3a875ea", "committedDate": "2020-12-14T19:18:33Z", "message": "iOS Alignment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8277e89e9b1cc5778ea6bc73bcbe8811e954208e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8277e89e9b1cc5778ea6bc73bcbe8811e954208e", "committedDate": "2020-12-14T19:33:57Z", "message": "Align with IOS for setting SoftButtons in AlertView"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0138843647d393effcdb2bbcfc104fa8068f3387", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/0138843647d393effcdb2bbcfc104fa8068f3387", "committedDate": "2020-12-14T21:07:47Z", "message": "Update JavaDocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d532697fa0a57f58477f3d49adbf9548401a61d3", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d532697fa0a57f58477f3d49adbf9548401a61d3", "committedDate": "2020-12-14T21:12:03Z", "message": "Update WindowCapability for pending task in AlertManager if Capability changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "836b6de67f344c86d91c9260cdefb24b489677aa", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/836b6de67f344c86d91c9260cdefb24b489677aa", "committedDate": "2020-12-15T17:45:16Z", "message": "Add max value to cancelID and align naming with iOS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9faa31b332a5b573d02d27131b69e86c5a45a947", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9faa31b332a5b573d02d27131b69e86c5a45a947", "committedDate": "2020-12-15T18:31:37Z", "message": "Update hello_sdl_android and hello_sdl_java to use alertManager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDA0ODAz", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-554004803", "createdAt": "2020-12-16T19:15:50Z", "commit": {"oid": "9faa31b332a5b573d02d27131b69e86c5a45a947"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToxNTo1MFrOIHVHNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToxNzoxN1rOIHVKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1Njg1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertFalse(alertManager.currentAlertPermissionStatus);\n          \n          \n            \n                    assertFalse(alertManager.isAlertRPCAllowed);\n          \n      \n    \n    \n  \n\nMissed during a refactor", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r544556853", "createdAt": "2020-12-16T19:15:50Z", "author": {"login": "RHenigan"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/managers/screen/AlertManagerTest.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package com.smartdevicelink.managers.screen;\n+\n+import android.content.Context;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.livio.taskmaster.Taskmaster;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.lifecycle.OnSystemCapabilityListener;\n+import com.smartdevicelink.managers.lifecycle.SystemCapabilityManager;\n+import com.smartdevicelink.managers.permission.OnPermissionChangeListener;\n+import com.smartdevicelink.managers.permission.PermissionManager;\n+import com.smartdevicelink.managers.permission.PermissionStatus;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.rpc.DisplayCapability;\n+import com.smartdevicelink.proxy.rpc.ImageField;\n+import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n+import com.smartdevicelink.proxy.rpc.TextField;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ImageFieldName;\n+import com.smartdevicelink.proxy.rpc.enums.SystemCapabilityType;\n+import com.smartdevicelink.proxy.rpc.enums.TextFieldName;\n+import com.smartdevicelink.test.TestValues;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyInt;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AlertManagerTest {\n+    AlertManager alertManager;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        Context mTestContext = getInstrumentation().getContext();\n+\n+        // mock things\n+        ISdl internalInterface = mock(ISdl.class);\n+        FileManager fileManager = mock(FileManager.class);\n+        PermissionManager permissionManager = mock(PermissionManager.class);\n+\n+        when(internalInterface.getPermissionManager()).thenReturn(permissionManager);\n+\n+        Taskmaster taskmaster = new Taskmaster.Builder().build();\n+        taskmaster.start();\n+        when(internalInterface.getTaskmaster()).thenReturn(taskmaster);\n+\n+        Answer<Void> permissionAnswer = new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) {\n+                Object[] args = invocation.getArguments();\n+                OnPermissionChangeListener onPermissionChangeListener = (OnPermissionChangeListener) args[2];\n+                Map<FunctionID, PermissionStatus > allowedPermissions = new HashMap<>();\n+                int permissionGroupStatus = PermissionManager.PERMISSION_GROUP_STATUS_DISALLOWED;\n+                onPermissionChangeListener.onPermissionsChange(allowedPermissions,permissionGroupStatus);\n+                return null;\n+            }\n+        };\n+        doAnswer(permissionAnswer).when(permissionManager).addListener(any(List.class), anyInt(), any(OnPermissionChangeListener.class));\n+\n+        Answer<Void> onSystemCapabilityAnswer = new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) {\n+                Object[] args = invocation.getArguments();\n+                OnSystemCapabilityListener onSystemCapabilityListener = (OnSystemCapabilityListener) args[1];\n+                WindowCapability windowCapability = getWindowCapability(3);\n+                DisplayCapability displayCapability = new DisplayCapability();\n+                displayCapability.setWindowCapabilities(Collections.singletonList(windowCapability));\n+                List<DisplayCapability> capabilities = Collections.singletonList(displayCapability);\n+                onSystemCapabilityListener.onCapabilityRetrieved(capabilities);\n+                return null;\n+            }\n+        };\n+\n+        SystemCapabilityManager systemCapabilityManager = mock(SystemCapabilityManager.class);\n+        doAnswer(onSystemCapabilityAnswer).when(systemCapabilityManager).addOnSystemCapabilityListener(eq(SystemCapabilityType.DISPLAYS), any(OnSystemCapabilityListener.class));\n+        doReturn(systemCapabilityManager).when(internalInterface).getSystemCapabilityManager();\n+\n+        alertManager = new AlertManager(internalInterface, fileManager);\n+    }\n+\n+    @Test\n+    public void testInstantiation() {\n+        assertNotNull(alertManager.defaultMainWindowCapability);\n+        assertNotNull(alertManager.nextCancelId);\n+        assertFalse(alertManager.currentAlertPermissionStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faa31b332a5b573d02d27131b69e86c5a45a947"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1NzcwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertNotNull(alertManager.defaultMainWindowCapability);\n          \n          \n            \n                    assertNotNull(alertManager.currentWindowCapability);\n          \n      \n    \n    \n  \n\nMissed during a refactor", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r544557706", "createdAt": "2020-12-16T19:17:17Z", "author": {"login": "RHenigan"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/managers/screen/AlertManagerTest.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package com.smartdevicelink.managers.screen;\n+\n+import android.content.Context;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.livio.taskmaster.Taskmaster;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.lifecycle.OnSystemCapabilityListener;\n+import com.smartdevicelink.managers.lifecycle.SystemCapabilityManager;\n+import com.smartdevicelink.managers.permission.OnPermissionChangeListener;\n+import com.smartdevicelink.managers.permission.PermissionManager;\n+import com.smartdevicelink.managers.permission.PermissionStatus;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.rpc.DisplayCapability;\n+import com.smartdevicelink.proxy.rpc.ImageField;\n+import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n+import com.smartdevicelink.proxy.rpc.TextField;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ImageFieldName;\n+import com.smartdevicelink.proxy.rpc.enums.SystemCapabilityType;\n+import com.smartdevicelink.proxy.rpc.enums.TextFieldName;\n+import com.smartdevicelink.test.TestValues;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyInt;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AlertManagerTest {\n+    AlertManager alertManager;\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        Context mTestContext = getInstrumentation().getContext();\n+\n+        // mock things\n+        ISdl internalInterface = mock(ISdl.class);\n+        FileManager fileManager = mock(FileManager.class);\n+        PermissionManager permissionManager = mock(PermissionManager.class);\n+\n+        when(internalInterface.getPermissionManager()).thenReturn(permissionManager);\n+\n+        Taskmaster taskmaster = new Taskmaster.Builder().build();\n+        taskmaster.start();\n+        when(internalInterface.getTaskmaster()).thenReturn(taskmaster);\n+\n+        Answer<Void> permissionAnswer = new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) {\n+                Object[] args = invocation.getArguments();\n+                OnPermissionChangeListener onPermissionChangeListener = (OnPermissionChangeListener) args[2];\n+                Map<FunctionID, PermissionStatus > allowedPermissions = new HashMap<>();\n+                int permissionGroupStatus = PermissionManager.PERMISSION_GROUP_STATUS_DISALLOWED;\n+                onPermissionChangeListener.onPermissionsChange(allowedPermissions,permissionGroupStatus);\n+                return null;\n+            }\n+        };\n+        doAnswer(permissionAnswer).when(permissionManager).addListener(any(List.class), anyInt(), any(OnPermissionChangeListener.class));\n+\n+        Answer<Void> onSystemCapabilityAnswer = new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) {\n+                Object[] args = invocation.getArguments();\n+                OnSystemCapabilityListener onSystemCapabilityListener = (OnSystemCapabilityListener) args[1];\n+                WindowCapability windowCapability = getWindowCapability(3);\n+                DisplayCapability displayCapability = new DisplayCapability();\n+                displayCapability.setWindowCapabilities(Collections.singletonList(windowCapability));\n+                List<DisplayCapability> capabilities = Collections.singletonList(displayCapability);\n+                onSystemCapabilityListener.onCapabilityRetrieved(capabilities);\n+                return null;\n+            }\n+        };\n+\n+        SystemCapabilityManager systemCapabilityManager = mock(SystemCapabilityManager.class);\n+        doAnswer(onSystemCapabilityAnswer).when(systemCapabilityManager).addOnSystemCapabilityListener(eq(SystemCapabilityType.DISPLAYS), any(OnSystemCapabilityListener.class));\n+        doReturn(systemCapabilityManager).when(internalInterface).getSystemCapabilityManager();\n+\n+        alertManager = new AlertManager(internalInterface, fileManager);\n+    }\n+\n+    @Test\n+    public void testInstantiation() {\n+        assertNotNull(alertManager.defaultMainWindowCapability);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faa31b332a5b573d02d27131b69e86c5a45a947"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e356c683ddcfe8730b6cc2d627d688b3362bd915", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e356c683ddcfe8730b6cc2d627d688b3362bd915", "committedDate": "2020-12-17T14:55:56Z", "message": "Fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODU1ODk4", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#pullrequestreview-554855898", "createdAt": "2020-12-17T18:03:01Z", "commit": {"oid": "e356c683ddcfe8730b6cc2d627d688b3362bd915"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDo1OToxMVrOIIIj7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMDo1OToxMVrOIIIj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM5OTc5MA==", "bodyText": "Duplicate line", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1555#discussion_r545399790", "createdAt": "2020-12-17T20:59:11Z", "author": {"login": "RHenigan"}, "path": "base/src/main/java/com/smartdevicelink/managers/screen/PresentAlertOperation.java", "diffHunk": "@@ -0,0 +1,512 @@\n+/*\n+ * Copyright (c) 2020 Livio, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the Livio Inc. nor the names of its contributors\n+ * may be used to endorse or promote products derived from this software\n+ * without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+\n+package com.smartdevicelink.managers.screen;\n+\n+import com.livio.taskmaster.Task;\n+import com.smartdevicelink.managers.AlertCompletionListener;\n+import com.smartdevicelink.managers.CompletionListener;\n+import com.smartdevicelink.managers.ISdl;\n+import com.smartdevicelink.managers.ManagerUtility;\n+import com.smartdevicelink.managers.file.FileManager;\n+import com.smartdevicelink.managers.file.MultipleFileCompletionListener;\n+import com.smartdevicelink.managers.file.filetypes.SdlArtwork;\n+import com.smartdevicelink.managers.file.filetypes.SdlFile;\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.Alert;\n+import com.smartdevicelink.proxy.rpc.AlertResponse;\n+import com.smartdevicelink.proxy.rpc.CancelInteraction;\n+import com.smartdevicelink.proxy.rpc.SoftButton;\n+import com.smartdevicelink.proxy.rpc.SoftButtonCapabilities;\n+import com.smartdevicelink.proxy.rpc.TTSChunk;\n+import com.smartdevicelink.proxy.rpc.WindowCapability;\n+import com.smartdevicelink.proxy.rpc.enums.ImageFieldName;\n+import com.smartdevicelink.proxy.rpc.enums.SpeechCapabilities;\n+import com.smartdevicelink.proxy.rpc.listeners.OnRPCResponseListener;\n+import com.smartdevicelink.util.DebugTool;\n+\n+import java.lang.ref.WeakReference;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Created by Julian Kast on 12/10/20.\n+ */\n+public class PresentAlertOperation extends Task {\n+    private static final String TAG = \"PresentAlertOperation\";\n+    private AlertView alertView;\n+    private AlertCompletionListener listener;\n+    private final WeakReference<ISdl> internalInterface;\n+    private final WeakReference<FileManager> fileManager;\n+    WindowCapability currentWindowCapability;\n+    private int cancelId;\n+    private List<SpeechCapabilities> speechCapabilities;\n+\n+    public PresentAlertOperation(ISdl internalInterface, AlertView alertView, WindowCapability currentCapabilities, List<SpeechCapabilities> speechCapabilities, FileManager fileManager, Integer cancelId, AlertCompletionListener listener) {\n+        super(\"PresentAlertOperation\");\n+        this.internalInterface = new WeakReference<>(internalInterface);\n+        this.fileManager = new WeakReference<>(fileManager);\n+        this.currentWindowCapability = currentCapabilities;\n+        this.speechCapabilities = speechCapabilities;\n+        this.alertView = alertView.clone();\n+        this.listener = listener;\n+        this.cancelId = cancelId;\n+\n+        this.alertView.canceledListener = new AlertCanceledListener() {\n+            @Override\n+            public void onAlertCanceled() {\n+                cancelAlert();\n+            }\n+        };\n+        alertView.canceledListener = this.alertView.canceledListener;\n+    }\n+\n+    @Override\n+    public void onExecute() {\n+        DebugTool.logInfo(TAG, \"Alert Operation: Executing present Alert operation\");\n+        start();\n+    }\n+\n+    private void start() {\n+        if (getState() == Task.CANCELED) {\n+            finishOperation(false, null);\n+            return;\n+        }\n+        if (!isValidAlertViewData(alertView)) {\n+            if (alertView.getAudio() != null && alertView.getAudio().getAudioFiles() != null && alertView.getAudio().getAudioFiles().size() > 0) {\n+                DebugTool.logError(TAG, \"The module does not support the use of only audio file data in an alert. \" +\n+                        \"The alert has no data and can not be sent to the module. \" +\n+                        \"The use of audio file data in an alert is only supported on modules supporting RPC Spec v5.0 or newer\");\n+            } else {\n+                DebugTool.logError(TAG, \"The alert data is invalid.\" +\n+                        \" At least either text, secondaryText or audio needs to be provided. \" +\n+                        \"Make sure to set at least the text, secondaryText or audio properties on the AlertView\");\n+            }\n+            finishOperation(false, null);\n+            return;\n+        }\n+        final DispatchGroup uploadFilesTask = new DispatchGroup();\n+\n+        uploadFilesTask.enter();\n+        uploadFilesTask.enter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e356c683ddcfe8730b6cc2d627d688b3362bd915"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "285fbdf755feb1d483461af792e7f95947ba8e32", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/285fbdf755feb1d483461af792e7f95947ba8e32", "committedDate": "2020-12-18T17:54:24Z", "message": "fixed bug in PresentAlertOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22c622e56bb1fdaa319dffd4d01bc2ca0f46a131", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/22c622e56bb1fdaa319dffd4d01bc2ca0f46a131", "committedDate": "2021-01-08T15:07:29Z", "message": "Set range for SoftButtonId's\n\nCurrently we don\u2019t have managers for Subtle Alerts, Alert Maneuver, Scrollable Message, Show Constant TBT and Perform Audio Pass Thrus. These RPCs can all have soft buttons (that the developer must assign a custom id to). Limiting the range for managers will allow us to guarantee to developers that what they set in thoes RPC's won\u2019t clash with the screen manager generated soft button ids."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36945466cfd97d651bb709e69103b6578eeb883e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/36945466cfd97d651bb709e69103b6578eeb883e", "committedDate": "2021-01-08T15:08:11Z", "message": "Merge branch 'develop' into screen-manager-alert-manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db0f7937495b0618f0d57bac22797924951cc795", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/db0f7937495b0618f0d57bac22797924951cc795", "committedDate": "2021-01-11T14:26:35Z", "message": "Add getMTU to new ISDL Implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff0934568cbacbd1f19b7a6386c79f9eacf44c0f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ff0934568cbacbd1f19b7a6386c79f9eacf44c0f", "committedDate": "2021-01-11T19:48:25Z", "message": "Fixed log errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aef602b414726b793f6f2a4f1270bb0f3ea8fb7e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/aef602b414726b793f6f2a4f1270bb0f3ea8fb7e", "committedDate": "2021-01-11T19:51:15Z", "message": "Add Class description to AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9140b625969c7fccaa0447eae0d56cff5c2e5683", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9140b625969c7fccaa0447eae0d56cff5c2e5683", "committedDate": "2021-01-11T19:53:25Z", "message": "Update documentation on AlertManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14d0c7fb509ae302425246ae6e45bf97ffaf754e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/14d0c7fb509ae302425246ae6e45bf97ffaf754e", "committedDate": "2021-01-11T19:59:47Z", "message": "Update cancel ID Range"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a0a4f5597114b393fcd4d4127730ddc24eea44", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/73a0a4f5597114b393fcd4d4127730ddc24eea44", "committedDate": "2021-01-11T20:05:24Z", "message": "Add Class description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c036beb8e4673c1ea1251f882c2790bced89a364", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/c036beb8e4673c1ea1251f882c2790bced89a364", "committedDate": "2021-01-12T16:40:37Z", "message": "Add a throw exception if trying to set a softButton with more then one state for an Alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e907cb31579fa0aac1154c7170207e76c22901df", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e907cb31579fa0aac1154c7170207e76c22901df", "committedDate": "2021-01-12T19:46:31Z", "message": "Change creatAlert() to alertRPC() in PresentAlertOperation, add log message when Alert is finished presenting and remove cancel check as op is over after Alert has presented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be8970dd6904a0495b64cfd97025a1b7c944a76", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3be8970dd6904a0495b64cfd97025a1b7c944a76", "committedDate": "2021-01-12T19:47:27Z", "message": "Remove cancel op in PresentAlert OnRPCResponseListener as it is not needed at this point"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6d0827947e3f9a4a15338a860a5174c5c34983a", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a6d0827947e3f9a4a15338a860a5174c5c34983a", "committedDate": "2021-01-13T20:04:05Z", "message": "Removed prompts list and created an audioData HashMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261d45ca2cd5d3a3ef66c8d6c41001f1aba4c822", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/261d45ca2cd5d3a3ef66c8d6c41001f1aba4c822", "committedDate": "2021-01-13T20:04:43Z", "message": "Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99dfa111121c2e25fbfe77eea8f3034cc5cce2dd", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/99dfa111121c2e25fbfe77eea8f3034cc5cce2dd", "committedDate": "2021-01-13T20:58:19Z", "message": "Fix CancelAlert logic, remove unnecessary check for getting timeout in AlertView"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79b2b97a839583562c5374872db6c42b1750ac7f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/79b2b97a839583562c5374872db6c42b1750ac7f", "committedDate": "2021-01-13T21:15:47Z", "message": "Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5387d9f1663c627508264bd304c977f50e35a84e", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5387d9f1663c627508264bd304c977f50e35a84e", "committedDate": "2021-01-14T17:59:25Z", "message": "fixed comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a58bc85371dac502ebe0ed6aeb46127d9dfbf47", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8a58bc85371dac502ebe0ed6aeb46127d9dfbf47", "committedDate": "2021-01-20T14:38:19Z", "message": "Remove default constructors and unnecessary tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f83acff040c9dc80b030391ba4e597896932c47a", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f83acff040c9dc80b030391ba4e597896932c47a", "committedDate": "2021-01-26T19:31:13Z", "message": "Set alert manager cancel id range is 1-100 and the choice set manager cancel id range is 101-200."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61c50faef1faf427fb270f4b858adeae59110271", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/61c50faef1faf427fb270f4b858adeae59110271", "committedDate": "2021-01-26T19:31:58Z", "message": "Added a check to see if a file has been uploaded before adding it to the Alert RPC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e81c12fe22132fded55a6d7f60f792bad87c29f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/0e81c12fe22132fded55a6d7f60f792bad87c29f", "committedDate": "2021-02-11T02:12:52Z", "message": "Align with iOS for textFields truncate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cca58f3383929f29dd22e9ae79f3234c33b68b0f", "author": {"user": null}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/cca58f3383929f29dd22e9ae79f3234c33b68b0f", "committedDate": "2021-02-11T02:13:49Z", "message": "Add JavaDocs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2107, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}