{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Nzc5Nzky", "number": 1517, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1NDozN1rOEqZzAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1NDozN1rOEqZzAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODk4MzA0OnYy", "diffSide": "RIGHT", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lockscreen/LockScreenManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1NDozN1rOHcltXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1NDozN1rOHcltXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczOTk5OA==", "bodyText": "@joeygrover The comment and the logic are mismatched here.\nshould this be:\nif(ddState.getLockscreenDismissibility() == null ) {\n    isLockscreenDismissible = previousDismissibleState;\n} else {\n    isLockscreenDismissible = ddState.getLockscreenDismissibility();\n}", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1517#discussion_r499739998", "createdAt": "2020-10-05T16:54:37Z", "author": {"login": "RHenigan"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lockscreen/LockScreenManager.java", "diffHunk": "@@ -195,34 +198,54 @@ public void onNotified(RPCNotification notification) {\n             public void onNotified(RPCNotification notification) {\n                 // do something with the status\n                 if (notification != null) {\n-                    OnDriverDistraction ddState = (OnDriverDistraction) notification;\n-                    Boolean isDismissible = ddState.getLockscreenDismissibility();\n-                    DebugTool.logInfo(TAG, \"Lock screen dismissible: \" + isDismissible);\n-                    if (isDismissible != null) {\n-                        // both of these conditions must be met to be able to dismiss lockscreen\n-                        if (isDismissible && enableDismissGesture) {\n-                            mIsLockscreenDismissible = true;\n-\n-                            // if DisplayMode is set to ALWAYS, it will be shown before the first DD notification.\n-                            // If this is our first DD notification and we are in ALWAYS mode, send another intent to\n-                            // enable the dismissal\n-                            if (!receivedFirstDDNotification && displayMode == LockScreenConfig.DISPLAY_MODE_ALWAYS) {\n-                                launchLockScreenActivity();\n+                    synchronized (this) {\n+                        OnDriverDistraction ddState = (OnDriverDistraction) notification;\n+                        driverDistStatus = DriverDistractionState.DD_ON.equals(ddState.getState());\n+                        mLockscreenWarningMsg = ddState.getLockscreenWarningMessage();\n+                        boolean previousDismissibleState = isLockscreenDismissible;\n+                        if(ddState.getLockscreenDismissibility() == null ) {\n+                            isLockscreenDismissible = ddState.getLockscreenDismissibility();\n+                        } //If the param is null, we assume it stays as the previous value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9cca6219636e272cce1bfb2b1f33864cbef3f4c"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4303, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}