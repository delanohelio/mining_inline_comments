{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTIzMTUx", "number": 1552, "title": "Add code to handle legacy PTU (v4.12)", "bodyText": "Fixes part of #1541\nThis PR is ready for review.\nRisk\nThis PR makes no API changes.\nTesting Plan\n\n I have verified that I have not introduced new warnings in this PR (or explain why below)\n I have run the unit tests with this PR\n I have tested this PR against Core and verified behavior (if applicable, if not applicable, explain why below).\n I have tested Android\n\nSummary\n\nAdded code to the RPC converter to handle legacy RPCs that no longer have classes associated with them\nAdded logic to process the legacy PTU RPCs as newer, still supported RPC classes\n\nChangelog\nBug Fixes\n\nFixes issue where policy table updates wouldn't occur on older systems\n\nCLA\n\n I have signed the CLA", "createdAt": "2020-11-06T18:57:09Z", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1552", "merged": true, "mergeCommit": {"oid": "bcc94f9567d469c987e479a8bbc6b92bab8a0e4d"}, "closed": true, "closedAt": "2020-11-17T18:47:39Z", "author": {"login": "joeygrover"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ7pYAAH2gAyNTE2OTIzMTUxOjFmYjU3ZmE3Mjc4MDljYjU5YTAxMWM5ZWYyYjMwODZmOTg2OWNmYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddc5YBgFqTUzMjYwOTUwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1fb57fa727809cb59a011c9ef2b3086f9869cfa8", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1fb57fa727809cb59a011c9ef2b3086f9869cfa8", "committedDate": "2020-11-06T18:54:56Z", "message": "Add code to handle legacy PTU"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4cb434ab4e36718e352edd4580bcee991b75f29", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a4cb434ab4e36718e352edd4580bcee991b75f29", "committedDate": "2020-11-10T16:49:16Z", "message": "Handle SyncPData rpcs as legacy in RpcConverter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNzgzMTk4", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1552#pullrequestreview-531783198", "createdAt": "2020-11-16T21:11:48Z", "commit": {"oid": "a4cb434ab4e36718e352edd4580bcee991b75f29"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToxMTo0OVrOH0SL8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToxMTo0OVrOH0SL8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4NTk3MQ==", "bodyText": "This logs a warning when we get a system request with type LOCK_SCREEN_ICON_URL", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1552#discussion_r524585971", "createdAt": "2020-11-16T21:11:49Z", "author": {"login": "bilal-alsharifi"}, "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -418,42 +423,62 @@ public void onReceived(RPCMessage message) {\n                     case ON_HASH_CHANGE:\n                         break;\n                     case ON_SYSTEM_REQUEST:\n+                    case ON_ENCODED_SYNC_P_DATA:\n+                    case ON_SYNC_P_DATA:\n+                        if (functionID.equals(FunctionID.ON_ENCODED_SYNC_P_DATA) || functionID.equals(FunctionID.ON_SYNC_P_DATA)) {\n+                            DebugTool.logInfo(TAG, \"Received legacy SYNC_P_DATA, handling it as OnSystemRequest\");\n+                        } else {\n+                            DebugTool.logInfo(TAG, \"Received OnSystemRequest\");\n+                        }\n+\n                         final OnSystemRequest onSystemRequest = (OnSystemRequest) message;\n-                        if ((onSystemRequest.getUrl() != null) &&\n-                                (((onSystemRequest.getRequestType() == RequestType.PROPRIETARY) && (onSystemRequest.getFileType() == FileType.JSON))\n-                                        || ((onSystemRequest.getRequestType() == RequestType.HTTP) && (onSystemRequest.getFileType() == FileType.BINARY)))) {\n-                            Thread handleOffboardTransmissionThread = new Thread() {\n-                                @Override\n-                                public void run() {\n-                                    RPCRequest request = PoliciesFetcher.fetchPolicies(onSystemRequest);\n-                                    if (request != null && isConnected()) {\n-                                        sendRPCMessagePrivate(request, true);\n+                        RequestType requestType = onSystemRequest.getRequestType();\n+                        FileType fileType = onSystemRequest.getFileType();\n+\n+                        if (onSystemRequest.getUrl() != null) {\n+                            if ((requestType == RequestType.PROPRIETARY && fileType == FileType.JSON)\n+                                    || (requestType == RequestType.HTTP && fileType == FileType.BINARY)\n+                                    || functionID.equals(FunctionID.ON_ENCODED_SYNC_P_DATA)\n+                                    || functionID.equals(FunctionID.ON_SYNC_P_DATA)) {\n+                                DebugTool.logInfo(TAG, \"List of conditionals has passed\");\n+                                Thread handleOffboardTransmissionThread = new Thread() {\n+                                    @Override\n+                                    public void run() {\n+                                        DebugTool.logInfo(TAG, \"Attempting to fetch policies\");\n+                                        RPCRequest request = PoliciesFetcher.fetchPolicies(onSystemRequest);\n+                                        if (request != null && isConnected()) {\n+                                            sendRPCMessagePrivate(request, true);\n+                                        }\n                                     }\n-                                }\n-                            };\n-                            handleOffboardTransmissionThread.start();\n-                        } else if (onSystemRequest.getRequestType() == RequestType.ICON_URL && onSystemRequest.getUrl() != null) {\n-                            //Download the icon file and send SystemRequest RPC\n-                            Thread handleOffBoardTransmissionThread = new Thread() {\n-                                @Override\n-                                public void run() {\n-                                    final String urlHttps = onSystemRequest.getUrl().replaceFirst(\"http://\", \"https://\");\n-                                    byte[] file = FileUtls.downloadFile(urlHttps);\n-                                    if (file != null) {\n-                                        SystemRequest systemRequest = new SystemRequest();\n-                                        systemRequest.setFileName(onSystemRequest.getUrl());\n-                                        systemRequest.setBulkData(file);\n-                                        systemRequest.setRequestType(RequestType.ICON_URL);\n-                                        if (isConnected()) {\n-                                            sendRPCMessagePrivate(systemRequest, true);\n+                                };\n+                                handleOffboardTransmissionThread.start();\n+                                return;\n+                            } else if (requestType == RequestType.ICON_URL) {\n+                                //Download the icon file and send SystemRequest RPC\n+                                Thread handleOffBoardTransmissionThread = new Thread() {\n+                                    @Override\n+                                    public void run() {\n+                                        final String urlHttps = onSystemRequest.getUrl().replaceFirst(\"http://\", \"https://\");\n+                                        byte[] file = FileUtls.downloadFile(urlHttps);\n+                                        if (file != null) {\n+                                            SystemRequest systemRequest = new SystemRequest();\n+                                            systemRequest.setFileName(onSystemRequest.getUrl());\n+                                            systemRequest.setBulkData(file);\n+                                            systemRequest.setRequestType(RequestType.ICON_URL);\n+                                            if (isConnected()) {\n+                                                sendRPCMessagePrivate(systemRequest, true);\n+                                            }\n+                                        } else {\n+                                            DebugTool.logError(TAG, \"File was null at: \" + urlHttps);\n                                         }\n-                                    } else {\n-                                        DebugTool.logError(TAG, \"File was null at: \" + urlHttps);\n                                     }\n-                                }\n-                            };\n-                            handleOffBoardTransmissionThread.start();\n+                                };\n+                                handleOffBoardTransmissionThread.start();\n+                                return;\n+                            }\n                         }\n+\n+                        DebugTool.logWarning(TAG, \"Unable to handle OnSystemRequest\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4cb434ab4e36718e352edd4580bcee991b75f29"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba641c9e19a1428a6867b4b0751825d5d4973103", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ba641c9e19a1428a6867b4b0751825d5d4973103", "committedDate": "2020-11-16T21:49:15Z", "message": "Remove misleading log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjA5NTAz", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1552#pullrequestreview-532609503", "createdAt": "2020-11-17T17:21:03Z", "commit": {"oid": "ba641c9e19a1428a6867b4b0751825d5d4973103"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2102, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}