{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDA3NDg2", "number": 1430, "title": "Refactor session and protocol interfaces", "bodyText": "This PR is ready for review.\nRisk\nThis PR makes major API changes.\nTesting Plan\n\n I have verified that I have not introduced new warnings in this PR (or explain why below)\n I have run the unit tests with this PR\n I have tested this PR against Core and verified behavior (if applicable, if not applicable, explain why below).\n I have tested Android, Java SE, and Java EE\n\nUnit Tests\n\nUpdated unit tests to reflect updated interface methods\n\nSummary\nRefactored the interfaces between the session and protocol layers. They had extremely redundant and confusing callbacks. The updated interfaces are much easier to understand and maintain.\nChangelog\nBreaking Changes\n\nISdlProtocol and ISdlSessionListener have been updated to minimal callbacks.\nThe interfaces updated had most if not all methods updated\nInterface names have also been updated\n\nCLA\n\n I have signed the CLA", "createdAt": "2020-08-04T21:02:00Z", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430", "merged": true, "mergeCommit": {"oid": "9af716055b16c1de3a4e274a8590166d9d642555"}, "closed": true, "closedAt": "2020-08-11T14:30:55Z", "author": {"login": "joeygrover"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5vebEAH2gAyNDYzMDA3NDg2OjI2Y2ZlOWQwYjM1YzYzY2RiNDE5OGExODM1ODYxOGNhNGY2YzQ4MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc93r5HgFqTQ2NTEyMzczNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "26cfe9d0b35c63cdb4198a18358618ca4f6c4826", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/26cfe9d0b35c63cdb4198a18358618ca4f6c4826", "committedDate": "2020-07-29T18:38:32Z", "message": "Refactor interfaces for protocol and session"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db8cf696800437c4e3be4fa6db1e3cd262eb7427", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/db8cf696800437c4e3be4fa6db1e3cd262eb7427", "committedDate": "2020-07-29T18:39:03Z", "message": "Update android used classes for refactored intrfcs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0da95db7ea8729979e2368ac77b50ee6728e280", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f0da95db7ea8729979e2368ac77b50ee6728e280", "committedDate": "2020-07-30T14:04:00Z", "message": "Merge branch 'feature/sdlsession_refactor' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb3cea2a410cfa1baa313a8c94e0aa57a181135", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4bb3cea2a410cfa1baa313a8c94e0aa57a181135", "committedDate": "2020-07-30T14:34:25Z", "message": "Merge branch 'feature/sdlsession_refactor' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26fed3b495a889209dc476b16c3a35b7f9c9224d", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/26fed3b495a889209dc476b16c3a35b7f9c9224d", "committedDate": "2020-07-30T19:23:16Z", "message": "Rename actual interface file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdd40eee004ff6d8a116c6b4afd8fb57367a0149", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bdd40eee004ff6d8a116c6b4afd8fb57367a0149", "committedDate": "2020-07-30T19:23:30Z", "message": "update symlink to new file name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af40dd62cd1bc74678fc36b223ce3d98913fd37b", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/af40dd62cd1bc74678fc36b223ce3d98913fd37b", "committedDate": "2020-07-30T19:24:09Z", "message": "Remove redundant caching of transport config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283b0d3f3cc771b46c8dfb5eab488d5c874dd890", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/283b0d3f3cc771b46c8dfb5eab488d5c874dd890", "committedDate": "2020-07-30T19:24:22Z", "message": "Implement interface refactor into JavaSE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2686511abee24e174cfc8664e726b75b4df0d13", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a2686511abee24e174cfc8664e726b75b4df0d13", "committedDate": "2020-08-04T18:52:40Z", "message": "Fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1344199bb7aba3d3eb0ed6d3d79d0158bac80c86", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1344199bb7aba3d3eb0ed6d3d79d0158bac80c86", "committedDate": "2020-08-04T20:57:52Z", "message": "Merge branch 'develop' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces\n\n# Conflicts:\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/streaming/StreamPacketizer.java\n#\tjavaSE/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "committedDate": "2020-08-04T20:58:52Z", "message": "Run code formatter on session classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTM1Mzgz", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#pullrequestreview-461935383", "createdAt": "2020-08-05T18:52:04Z", "commit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "state": "COMMENTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1MjowNFrOG8WXgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1ODo0NVrOG9AWig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNDIxMA==", "bodyText": "Let's keep this as 2017-2020", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465934210", "createdAt": "2020-08-05T18:52:04Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017-2020 Livio, Inc.\n+ * Copyright (c) 2018 Livio, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNjEzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @SuppressWarnings({\"WeakerAccess\", \"deprecation\"})\n          \n      \n    \n    \n  \n\nI don't see the need to suppress theses warnings anymore", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465936136", "createdAt": "2020-08-05T18:55:33Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -59,19 +59,18 @@\n \n import java.io.IOException;\n import java.lang.ref.WeakReference;\n-import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n+@SuppressWarnings({\"WeakerAccess\", \"deprecation\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1NjcyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else{\n          \n          \n            \n                    } else {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465956720", "createdAt": "2020-08-05T19:34:51Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java", "diffHunk": "@@ -93,10 +93,10 @@ void initialize() {\n         }\n \n         if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.MULTIPLEX)) {\n-            this.session = new SdlSession(sdlConnectionListener, (MultiplexTransportConfig) _transportConfig);\n+            this.session = new SdlSession(sdlSessionListener, (MultiplexTransportConfig) _transportConfig);\n         } else if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.TCP)) {\n-            this.session = new SdlSession(sdlConnectionListener, (TCPTransportConfig) _transportConfig);\n-        } else {\n+            this.session = new SdlSession(sdlSessionListener, (TCPTransportConfig) _transportConfig);\n+        }else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MTM0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else if(SessionType.RPC.equals(msg.getSessionType())\n          \n          \n            \n                    } else if (SessionType.RPC.equals(msg.getSessionType())", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466541344", "createdAt": "2020-08-06T16:38:11Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjM2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shutdown(String info){\n          \n          \n            \n                public void shutdown(String info) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542364", "createdAt": "2020-08-06T16:39:56Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 251}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjUxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams(){\n          \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams() {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542517", "createdAt": "2020-08-06T16:40:10Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjYzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(desiredVideoParams == null){\n          \n          \n            \n                    if (desiredVideoParams == null ){", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542630", "createdAt": "2020-08-06T16:40:20Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0Mjk1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params){\n          \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params) {", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542958", "createdAt": "2020-08-06T16:40:52Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){\n+            desiredVideoParams = new VideoStreamingParameters();\n+        }\n+        return desiredVideoParams;\n+    }\n+\n+    @Override\n+    public void setAcceptedVideoParams(VideoStreamingParameters params){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 280}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NDMwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        session.startService(SessionType.RPC,true);\n          \n          \n            \n                        session.startService(SessionType.RPC, true);", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466544301", "createdAt": "2020-08-06T16:43:04Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -158,7 +158,7 @@ public void start() {\n      */\n     public void startRPCEncryption() {\n         if (session != null) {\n-            session.startService(SessionType.RPC, session.getSessionId(), true);\n+            session.startService(SessionType.RPC,true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NTMzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *************************************** ISdlConnectionListener START ************************************\n          \n          \n            \n                 *************************************** ISdlSessionListener START ************************************\n          \n      \n    \n    \n  \n\nShould this be changed to ISdlSessionListener?", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466545330", "createdAt": "2020-08-06T16:44:46Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -858,103 +858,95 @@ private void sendRPCMessagePrivate(RPCMessage message, boolean isInternalMessage\n      *************************************** ISdlConnectionListener START ************************************", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU1MjAwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;\n          \n      \n    \n    \n  \n\nThis appears to be unused", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466552000", "createdAt": "2020-08-06T16:56:13Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java", "diffHunk": "@@ -33,26 +33,112 @@\n package com.smartdevicelink.protocol;\n \n \n+import android.support.annotation.RestrictTo;\n+\n import com.smartdevicelink.protocol.enums.SessionType;\n import com.smartdevicelink.security.SdlSecurityBase;\n import com.smartdevicelink.streaming.video.VideoStreamingParameters;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n+\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4MTYzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466581638", "createdAt": "2020-08-06T17:44:37Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -854,6 +848,7 @@ protected void handlePacketToSend(SdlPacket packet) {\n      * sent to the protocol listener.\n      **/\n     protected void handleServiceEndedNAK(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service ended NAK received for service type \" + serviceType.getName();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4Mjk2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466582967", "createdAt": "2020-08-06T17:47:06Z", "author": {"login": "JulianKast"}, "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -1070,10 +1067,11 @@ protected void handleProtocolSessionStarted(SdlPacket packet, SessionType servic\n                 iSdlProtocol.setAcceptedVideoParams(iSdlProtocol.getDesiredVideoParams());\n             }\n         }\n-        iSdlProtocol.onProtocolSessionStarted(serviceType, (byte) packet.getSessionId(), (byte)protocolVersion.getMajor(), \"\", hashID, packet.isEncrypted());\n+        iSdlProtocol.onServiceStarted(packet, serviceType, (byte) packet.getSessionId(), protocolVersion, packet.isEncrypted());\n     }\n \n     protected void handleProtocolSessionNAKed(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service start NAK received for service type \" + serviceType.getName();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxOTA0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466619046", "createdAt": "2020-08-06T18:53:16Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java", "diffHunk": "@@ -1,70 +1,41 @@\n package com.smartdevicelink.test.streaming;\n \n-import com.smartdevicelink.SdlConnection.ISdlConnectionListener;\n-import com.smartdevicelink.protocol.ProtocolMessage;\n-import com.smartdevicelink.protocol.enums.SessionType;\n+import com.smartdevicelink.SdlConnection.ISdlSessionListener;\n+import com.smartdevicelink.proxy.RPCMessage;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n \n import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.smartdevicelink.transport.RouterServiceValidator;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466621038", "createdAt": "2020-08-06T18:56:48Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n import com.smartdevicelink.transport.RouterServiceValidator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMjA5MA==", "bodyText": "Also, remove below\nimport java.util.List;\n\nimport static junit.framework.TestCase.assertTrue;", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466622090", "createdAt": "2020-08-06T18:58:45Z", "author": {"login": "JulianKast"}, "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n import com.smartdevicelink.transport.RouterServiceValidator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA=="}, "originalCommit": {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "637a97a3114afaa829798e66096202517b2a63d9", "author": {"user": {"login": "joeygrover", "name": "Joey Grover"}}, "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/637a97a3114afaa829798e66096202517b2a63d9", "committedDate": "2020-08-10T19:32:34Z", "message": "Fix issues found during review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MTIzNzM2", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#pullrequestreview-465123736", "createdAt": "2020-08-11T14:28:11Z", "commit": {"oid": "637a97a3114afaa829798e66096202517b2a63d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2060, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}