{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzM1OTYy", "number": 4621, "title": "Improve observability of DisruptorAutobatcher.", "bodyText": "Goals (and why):\nIt can be useful to disambiguate different instances of the autobatcher especially when the resources they communicate with have varying latencies i.e. in memory access vs rpc.\nIt's also useful to have tracing to see when batches are being slow etc. Doesn't seem immediately clear how to marry the two with internal tools just yet, but individually they both can be useful.\nImplementation Description (bullets):\n\nAutobatcherBuilder takes in a safeTag option.\nAutobatcherBuilder takes in an observability option.\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nsimple test checking that the tags are actually present.\n\nConcerns (what feedback would you like?):\nNone, concern about cardinality lies in the specific usage of these classes.\nWhere should we start reviewing?:\nEverywhere.\nPriority (whenever / two weeks / yesterday):\nSoonish please.", "createdAt": "2020-03-02T11:39:54Z", "url": "https://github.com/palantir/atlasdb/pull/4621", "merged": true, "mergeCommit": {"oid": "8cda61b5d9b34762c7d7c15b179188a82aaa27b6"}, "closed": true, "closedAt": "2020-03-02T17:01:26Z", "author": {"login": "felixdesouza"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJsCLQAH2gAyMzgyMzM1OTYyOjcxZWViN2E1ZmY2OWE1NDZkMmJiODFlNWMzOWVhZDIyY2M4YWRmOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJwGWngH2gAyMzgyMzM1OTYyOmZiZDk4MTI4MWM4YTRmZTFmNzdkM2U5MGI3YzQwMWRlY2JkYzRhMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71eeb7a5ff69a546d2bb81e5c39ead22cc8adf94", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/71eeb7a5ff69a546d2bb81e5c39ead22cc8adf94", "committedDate": "2020-03-02T11:29:36Z", "message": "Autobatchers can now take safe tags."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b935a02b481894d0d36b75da73642a2e7f6b9bc", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/6b935a02b481894d0d36b75da73642a2e7f6b9bc", "committedDate": "2020-03-02T11:37:57Z", "message": "Add simple test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "383bbc93e9dafe4cf02307a0e1b124efea974f32", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/383bbc93e9dafe4cf02307a0e1b124efea974f32", "committedDate": "2020-03-02T11:47:29Z", "message": "Bump tracing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92cace570284da36bb5887e026d54d97f89533a1", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/92cace570284da36bb5887e026d54d97f89533a1", "committedDate": "2020-03-02T11:50:34Z", "message": "Add ability to trace autobatchers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjI2MjU5", "url": "https://github.com/palantir/atlasdb/pull/4621#pullrequestreview-367226259", "createdAt": "2020-03-02T14:11:38Z", "commit": {"oid": "92cace570284da36bb5887e026d54d97f89533a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDoxMTozOFrOFwg2aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDoxMTozOFrOFwg2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxNDE4NA==", "bodyText": "I think it would be interesting to test this to make sure that this handler does the right thing (i.e. same behaviour as before except it has the new trace).", "url": "https://github.com/palantir/atlasdb/pull/4621#discussion_r386414184", "createdAt": "2020-03-02T14:11:38Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/Autobatchers.java", "diffHunk": "@@ -98,12 +103,33 @@ private AutobatcherBuilder(Function<Integer, EventHandler<BatchElement<I, O>>> h\n             return this;\n         }\n \n+        public AutobatcherBuilder<I, O> safeTag(String key, String value) {\n+            this.safeTags.put(key, value);\n+            return this;\n+        }\n+\n+        public AutobatcherBuilder<I, O> observability(Observability observabilityParam) {\n+            this.observability = observabilityParam;\n+            return this;\n+        }\n+\n         public DisruptorAutobatcher<I, O> build() {\n             Preconditions.checkArgument(purpose != null, \"purpose must be provided\");\n             EventHandler<BatchElement<I, O>> handler = this.handlerFactory.apply(DEFAULT_BUFFER_SIZE);\n \n+            EventHandler<BatchElement<I, O>> tracingHandler = (event, sequence, endOfBatch) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92cace570284da36bb5887e026d54d97f89533a1"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "789db58a653fd9fb22f729e52590e9c465530d8c", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/789db58a653fd9fb22f729e52590e9c465530d8c", "committedDate": "2020-03-02T14:57:54Z", "message": "Separate out `TracingEventHandler` and add tests for it."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjY5NDk3", "url": "https://github.com/palantir/atlasdb/pull/4621#pullrequestreview-367269497", "createdAt": "2020-03-02T15:05:35Z", "commit": {"oid": "789db58a653fd9fb22f729e52590e9c465530d8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTowNTozNVrOFwi2FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTowNTozNVrOFwi2FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ0Njg2OQ==", "bodyText": "Could you also add a pass-through test to assert that tracingHandler.onEvent(x,y,z) calls the correct delegate handler?", "url": "https://github.com/palantir/atlasdb/pull/4621#discussion_r386446869", "createdAt": "2020-03-02T15:05:35Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-autobatch/src/test/java/com/palantir/atlasdb/autobatch/TracingEventHandlerTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.autobatch;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.List;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExternalResource;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.util.concurrent.SettableFuture;\n+import com.lmax.disruptor.EventHandler;\n+import com.palantir.tracing.Observability;\n+import com.palantir.tracing.Tracer;\n+import com.palantir.tracing.api.Span;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TracingEventHandlerTest {\n+\n+    @Rule\n+    public TraceCapturingRule traceRule = new TraceCapturingRule();\n+\n+    @Mock\n+    private EventHandler<BatchElement<Integer, Long>> delegate;\n+\n+    @Test\n+    public void nonFlushesDoNotHaveTraces() throws Exception {\n+        TracingEventHandler<Integer, Long> tracingHandler =\n+                new TracingEventHandler<>(delegate, \"test\", Observability.SAMPLE);\n+\n+        tracingHandler.onEvent(new TestBatchElement(), 45, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789db58a653fd9fb22f729e52590e9c465530d8c"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjcwMjQ3", "url": "https://github.com/palantir/atlasdb/pull/4621#pullrequestreview-367270247", "createdAt": "2020-03-02T15:06:30Z", "commit": {"oid": "789db58a653fd9fb22f729e52590e9c465530d8c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTowNjozMFrOFwi4NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTowNjozMFrOFwi4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ0NzQxMg==", "bodyText": "I'll leave the addition of this test at your discretion.", "url": "https://github.com/palantir/atlasdb/pull/4621#discussion_r386447412", "createdAt": "2020-03-02T15:06:30Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-autobatch/src/test/java/com/palantir/atlasdb/autobatch/TracingEventHandlerTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.autobatch;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.List;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExternalResource;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.util.concurrent.SettableFuture;\n+import com.lmax.disruptor.EventHandler;\n+import com.palantir.tracing.Observability;\n+import com.palantir.tracing.Tracer;\n+import com.palantir.tracing.api.Span;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class TracingEventHandlerTest {\n+\n+    @Rule\n+    public TraceCapturingRule traceRule = new TraceCapturingRule();\n+\n+    @Mock\n+    private EventHandler<BatchElement<Integer, Long>> delegate;\n+\n+    @Test\n+    public void nonFlushesDoNotHaveTraces() throws Exception {\n+        TracingEventHandler<Integer, Long> tracingHandler =\n+                new TracingEventHandler<>(delegate, \"test\", Observability.SAMPLE);\n+\n+        tracingHandler.onEvent(new TestBatchElement(), 45, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ0Njg2OQ=="}, "originalCommit": {"oid": "789db58a653fd9fb22f729e52590e9c465530d8c"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74cd57933d2d663139c0ea8e45de5f70e5a8427b", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/74cd57933d2d663139c0ea8e45de5f70e5a8427b", "committedDate": "2020-03-02T15:09:54Z", "message": "Amend current tests to verify that we call the delegate."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbd981281c8a4fe1f77d3e90b7c401decbdc4a13", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/fbd981281c8a4fe1f77d3e90b7c401decbdc4a13", "committedDate": "2020-03-02T16:13:47Z", "message": "Fix up checkstyle."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2325, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}