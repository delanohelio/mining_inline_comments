{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTcxNjIw", "number": 4833, "title": "Feedback 1", "bodyText": "Goals (and why):\nCollect client feedback for timeLock adjudication.\nImplementation Description (bullets):\nHave a background task that collects and reports feedback every 30secs.\nTesting (What was existing testing like?  What have you done to improve it?):\nConcerns (what feedback would you like?):\nWhere should we start reviewing?:\nTimeLockFeedbackBackgroundTask.java\nPriority (whenever / two weeks / yesterday):\nEOD", "createdAt": "2020-06-12T09:31:06Z", "url": "https://github.com/palantir/atlasdb/pull/4833", "merged": true, "mergeCommit": {"oid": "b91eeec5563f46e8a2556316a127a0ed0986f8c0"}, "closed": true, "closedAt": "2020-06-16T15:19:57Z", "author": {"login": "sudiksha27"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqgfRKgFqTQyOTY0MDQ0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr1B3fAH2gAyNDMzNTcxNjIwOmM3YjUzNzljN2I0NTU5NTI5ZDNkNzgxYWI2OTRhMDQ0Yjg3MDEwZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjQwNDQ2", "url": "https://github.com/palantir/atlasdb/pull/4833#pullrequestreview-429640446", "createdAt": "2020-06-12T10:42:00Z", "commit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo0MjowMVrOGi_apg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo0MjowMVrOGi_apg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0Mzc4Mg==", "bodyText": "Consider using a stream-of-optionals impl? It's probably going to be neater (provided it works)", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439343782", "createdAt": "2020-06-12T10:42:01Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -538,6 +545,19 @@ private TransactionManager serializableInternal(@Output List<AutoCloseable> clos\n         return transactionManager;\n     }\n \n+    private String getServiceName() {\n+        String serviceName = \"UNKNOWN\";\n+        if (config().namespace().isPresent()) {\n+            serviceName = config().namespace().get();\n+        } else if (config().timelock().isPresent()) {\n+            TimeLockClientConfig timeLockClientConfig = config().timelock().get();\n+            serviceName = timeLockClientConfig.getClientOrThrow();\n+        } else if (config().keyValueService().namespace().isPresent()) {\n+            serviceName = config().keyValueService().namespace().get();\n+        }\n+        return serviceName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171688b88548d15b2c0ce6fb8abde3ef8c60eac2", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/171688b88548d15b2c0ce6fb8abde3ef8c60eac2", "committedDate": "2020-06-12T13:16:43Z", "message": "timeLock metrics | poc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19b663688cdb52803e5fd97303eb56a4a322511b", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/19b663688cdb52803e5fd97303eb56a4a322511b", "committedDate": "2020-06-12T13:16:43Z", "message": "remove redundant code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dfaacf2a2e3709d5267b7552a2f75b71e5cf060", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/3dfaacf2a2e3709d5267b7552a2f75b71e5cf060", "committedDate": "2020-06-12T13:17:43Z", "message": "poc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89fa0c4d0a07bdff9a4227307be60ba5eb191285", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/89fa0c4d0a07bdff9a4227307be60ba5eb191285", "committedDate": "2020-06-12T13:17:44Z", "message": "clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80a1aef6722cbe7504c26297d4173058bcd5f398", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/80a1aef6722cbe7504c26297d4173058bcd5f398", "committedDate": "2020-06-12T13:17:44Z", "message": "refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2de8477aa9c2ecc15a9be101b7bd0dc78b73d00", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f2de8477aa9c2ecc15a9be101b7bd0dc78b73d00", "committedDate": "2020-06-12T13:17:44Z", "message": "Fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f743b78705cbbf2b680afb5de278709f4646922", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7f743b78705cbbf2b680afb5de278709f4646922", "committedDate": "2020-06-12T11:38:51Z", "message": "Fix"}, "afterCommit": {"oid": "f2de8477aa9c2ecc15a9be101b7bd0dc78b73d00", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f2de8477aa9c2ecc15a9be101b7bd0dc78b73d00", "committedDate": "2020-06-12T13:17:44Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c9e6e30e0e001ea3e7a8855a439eb793dcfb674", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/6c9e6e30e0e001ea3e7a8855a439eb793dcfb674", "committedDate": "2020-06-12T15:29:46Z", "message": "client feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcdf0e2359de9aad1ed982e0f9dc3ccca0270c83", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/bcdf0e2359de9aad1ed982e0f9dc3ccca0270c83", "committedDate": "2020-06-12T15:30:54Z", "message": "remove redundant import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86603ae1f3016e0aa38aa0a7fd4837c29db67ae", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/e86603ae1f3016e0aa38aa0a7fd4837c29db67ae", "committedDate": "2020-06-12T15:57:18Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba3ff8232f1169e41f239a233a1cb8155a8d8c7f", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/ba3ff8232f1169e41f239a233a1cb8155a8d8c7f", "committedDate": "2020-06-15T07:28:46Z", "message": "remove redundant dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjQwNjEx", "url": "https://github.com/palantir/atlasdb/pull/4833#pullrequestreview-429640611", "createdAt": "2020-06-12T10:42:17Z", "commit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDo0MjoxN1rOGi_bIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOToxODoyMFrOGjp9rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0MzkwNg==", "bodyText": "Background tasks need to be shut down when the TM shuts down", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439343906", "createdAt": "2020-06-12T10:42:17Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -359,6 +361,11 @@ public TransactionManager serializable() {\n     private TransactionManager serializableInternal(@Output List<AutoCloseable> closeables) {\n         MetricsManager metricsManager = MetricsManagers.of(globalMetricsRegistry(), globalTaggedMetricRegistry());\n \n+        TimeLockFeedbackBackgroundTask.create(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0NDg3Ng==", "bodyText": "This is broadly correct, but some notes:\n\nDo we really need 5 threads? I think a PtExecutors.singleThreadScheduledExecutor() should be enough - in fact given how we use it I don't think we'll ever have more than 1 thread\nBackground threads should have names indicating what they do\nAs noted these need to be shut down when the TM closes. The background task needs to be closeable.", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439344876", "createdAt": "2020-06-12T10:44:21Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.util.UUID;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public class TimeLockFeedbackBackgroundTask {\n+    private TimeLockFeedbackBackgroundTask() {\n+        // no op\n+    }\n+\n+    public static void create(TaggedMetricRegistry taggedMetricRegistry, Supplier<String> versionSupplier,\n+            String serviceName) {\n+        UUID nodeId = UUID.randomUUID();\n+\n+        ScheduledExecutorService scheduledExecutorService =\n+                Executors.newScheduledThreadPool(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0NTE2NQ==", "bodyText": "nit: p99 is standard for 99th percentile I think; the one minute rate should be 1m or rate", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439345165", "createdAt": "2020-06-12T10:45:06Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.util.UUID;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public class TimeLockFeedbackBackgroundTask {\n+    private TimeLockFeedbackBackgroundTask() {\n+        // no op\n+    }\n+\n+    public static void create(TaggedMetricRegistry taggedMetricRegistry, Supplier<String> versionSupplier,\n+            String serviceName) {\n+        UUID nodeId = UUID.randomUUID();\n+\n+        ScheduledExecutorService scheduledExecutorService =\n+                Executors.newScheduledThreadPool(5);\n+        scheduledExecutorService.scheduleWithFixedDelay((Runnable) () -> {\n+            ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics =\n+                    ConjureTimelockServiceBlockingMetrics.of(taggedMetricRegistry);\n+\n+            ImmutableMap.of(\n+            \"perc99\", conjureTimelockServiceBlockingMetrics.startTransactions().getSnapshot().get99thPercentile(),\n+            \"Rate\", conjureTimelockServiceBlockingMetrics.startTransactions().getOneMinuteRate(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0NTIwNg==", "bodyText": "Is casting needed?", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439345206", "createdAt": "2020-06-12T10:45:12Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.util.UUID;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public class TimeLockFeedbackBackgroundTask {\n+    private TimeLockFeedbackBackgroundTask() {\n+        // no op\n+    }\n+\n+    public static void create(TaggedMetricRegistry taggedMetricRegistry, Supplier<String> versionSupplier,\n+            String serviceName) {\n+        UUID nodeId = UUID.randomUUID();\n+\n+        ScheduledExecutorService scheduledExecutorService =\n+                Executors.newScheduledThreadPool(5);\n+        scheduledExecutorService.scheduleWithFixedDelay((Runnable) () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0NTI5Mg==", "bodyText": "Probably best to have a constant for the interval", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r439345292", "createdAt": "2020-06-12T10:45:22Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.util.UUID;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public class TimeLockFeedbackBackgroundTask {\n+    private TimeLockFeedbackBackgroundTask() {\n+        // no op\n+    }\n+\n+    public static void create(TaggedMetricRegistry taggedMetricRegistry, Supplier<String> versionSupplier,\n+            String serviceName) {\n+        UUID nodeId = UUID.randomUUID();\n+\n+        ScheduledExecutorService scheduledExecutorService =\n+                Executors.newScheduledThreadPool(5);\n+        scheduledExecutorService.scheduleWithFixedDelay((Runnable) () -> {\n+            ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics =\n+                    ConjureTimelockServiceBlockingMetrics.of(taggedMetricRegistry);\n+\n+            ImmutableMap.of(\n+            \"perc99\", conjureTimelockServiceBlockingMetrics.startTransactions().getSnapshot().get99thPercentile(),\n+            \"Rate\", conjureTimelockServiceBlockingMetrics.startTransactions().getOneMinuteRate(),\n+            \"atlasVersion\", versionSupplier.get(),\n+            \"nodeId\", nodeId,\n+                    \"serviceName\", serviceName);\n+\n+\n+        }, 30, 30, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA0MDM1Nw==", "bodyText": "Fine for now. Watch out for exceptions though!", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440040357", "createdAt": "2020-06-15T09:17:30Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.util.UUID;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public class TimeLockFeedbackBackgroundTask {\n+    private TimeLockFeedbackBackgroundTask() {\n+        // no op\n+    }\n+\n+    public static void create(TaggedMetricRegistry taggedMetricRegistry, Supplier<String> versionSupplier,\n+            String serviceName) {\n+        UUID nodeId = UUID.randomUUID();\n+\n+        ScheduledExecutorService scheduledExecutorService =\n+                Executors.newScheduledThreadPool(5);\n+        scheduledExecutorService.scheduleWithFixedDelay(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba3ff8232f1169e41f239a233a1cb8155a8d8c7f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA0MDg3Nw==", "bodyText": "This is OK, but I'd prefer we use the opportunity to define it as a Conjure object", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440040877", "createdAt": "2020-06-15T09:18:20Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/ClientFeedback.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+import java.util.UUID;\n+\n+import org.immutables.value.Value;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+\n+@Value.Immutable\n+@JsonSerialize(as = ImmutableClientFeedback.class)\n+@JsonDeserialize(as = ImmutableClientFeedback.class)\n+public interface ClientFeedback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba3ff8232f1169e41f239a233a1cb8155a8d8c7f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3451b8634357df410abf413fabb69aad0955fc2d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/3451b8634357df410abf413fabb69aad0955fc2d", "committedDate": "2020-06-15T11:07:54Z", "message": "Stream of optionals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b810fc2df4199ef2923d98658a7d7cb45011f56", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/9b810fc2df4199ef2923d98658a7d7cb45011f56", "committedDate": "2020-06-15T12:45:19Z", "message": "Address comments - I"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be7f9a1b61a35e3a016f032e1acb1b2de1a462c5", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/be7f9a1b61a35e3a016f032e1acb1b2de1a462c5", "committedDate": "2020-06-15T13:37:55Z", "message": "conjure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e23e0920d98884a07c314ecb91196126411fa8d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/0e23e0920d98884a07c314ecb91196126411fa8d", "committedDate": "2020-06-15T13:48:18Z", "message": "conjure-objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23b5e534f29eaa452ae4e8d11055d9b3179c10b1", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/23b5e534f29eaa452ae4e8d11055d9b3179c10b1", "committedDate": "2020-06-15T13:52:46Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11d2ce8a3f0672c8e84896b49bf414b719022a7a", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/11d2ce8a3f0672c8e84896b49bf414b719022a7a", "committedDate": "2020-06-15T14:01:54Z", "message": "remove clientFeedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1e0adec9802984b29c1b1222d56aa7c309292a", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/ae1e0adec9802984b29c1b1222d56aa7c309292a", "committedDate": "2020-06-15T14:11:12Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dca56388bb55ad92079212b17f9cf3ecaab48ce2", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/dca56388bb55ad92079212b17f9cf3ecaab48ce2", "committedDate": "2020-06-15T14:44:55Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af643923fc1c5a3aa441d6fee509be3ebedfe4f", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/9af643923fc1c5a3aa441d6fee509be3ebedfe4f", "committedDate": "2020-06-15T14:47:01Z", "message": "remove redundant code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a428ab0835ef948a195602235948eb7a29fb96d9", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/a428ab0835ef948a195602235948eb7a29fb96d9", "committedDate": "2020-06-15T14:54:00Z", "message": "Use namedThreadFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba03d437476626de78a31a11b9cc9e8d3fdba6e9", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/ba03d437476626de78a31a11b9cc9e8d3fdba6e9", "committedDate": "2020-06-15T16:08:36Z", "message": "Test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f905f38ba864c086d18c433f75780c28637cf323", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f905f38ba864c086d18c433f75780c28637cf323", "committedDate": "2020-06-15T16:08:36Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c6ef06b0ee3f61abd95312acd60b0f322341be4", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/0c6ef06b0ee3f61abd95312acd60b0f322341be4", "committedDate": "2020-06-15T16:57:02Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feed0d86033831b9a63a27a1544583f653a9499e", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/feed0d86033831b9a63a27a1544583f653a9499e", "committedDate": "2020-06-15T17:13:49Z", "message": "Merge branch 'feedback_!' of github.com:palantir/atlasdb into feedback_!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba1ff5097397c0abe6ad083e08d79c24e957b8ac", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/ba1ff5097397c0abe6ad083e08d79c24e957b8ac", "committedDate": "2020-06-15T17:40:57Z", "message": "Minor refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwODgzNzI5", "url": "https://github.com/palantir/atlasdb/pull/4833#pullrequestreview-430883729", "createdAt": "2020-06-15T18:17:30Z", "commit": {"oid": "ba1ff5097397c0abe6ad083e08d79c24e957b8ac"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxNzozMFrOGj9b6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyNToxN1rOGj9r7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1OTkxNQ==", "bodyText": "We might want a timelock one for completeness?", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440359915", "createdAt": "2020-06-15T18:17:30Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/TransactionManagersTest.java", "diffHunk": "@@ -440,6 +441,65 @@ public void keyValueServiceMetricsDoNotContainUserAgent() {\n                 .anyMatch(metricName -> metricName.contains(USER_AGENT_NAME)), is(false));\n     }\n \n+    @Test\n+    public void serviceNameIsFetchedFromAtlasConfig() {\n+        KeyValueServiceConfig kvs = new InMemoryAtlasDbConfig();\n+        AtlasDbConfig atlasDbConfig = ImmutableAtlasDbConfig.builder()\n+                .keyValueService(kvs)\n+                .namespace(Optional.of(\"namespace\"))\n+                .build();\n+        MetricRegistry metrics = new MetricRegistry();\n+        TransactionManagers transactionManagers = TransactionManagers.builder()\n+                .config(atlasDbConfig)\n+                .userAgent(USER_AGENT)\n+                .globalMetricsRegistry(metrics)\n+                .globalTaggedMetricRegistry(DefaultTaggedMetricRegistry.getDefault())\n+                .registrar(environment)\n+                .build();\n+\n+        assertThat(transactionManagers.getServiceName()).isEqualTo(\"namespace\");\n+    }\n+\n+    @Test\n+    public void serviceNameIsFetchedFromKvsConfigWhenItIsNotPresentInAtlasConfig() {\n+        KeyValueServiceConfig kvs = mock(KeyValueServiceConfig.class);\n+        when(kvs.type()).thenReturn(\"memory\");\n+        when(kvs.namespace()).thenReturn(Optional.of(\"namespace\"));\n+        when(kvs.concurrentGetRangesThreadPoolSize()).thenReturn(1);\n+\n+        AtlasDbConfig atlasDbConfig = ImmutableAtlasDbConfig.builder()\n+                .keyValueService(kvs)\n+                .build();\n+        MetricRegistry metrics = new MetricRegistry();\n+        TransactionManagers transactionManagers = TransactionManagers.builder()\n+                .config(atlasDbConfig)\n+                .userAgent(USER_AGENT)\n+                .globalMetricsRegistry(metrics)\n+                .globalTaggedMetricRegistry(DefaultTaggedMetricRegistry.getDefault())\n+                .registrar(environment)\n+                .build();\n+\n+        assertThat(transactionManagers.getServiceName()).isEqualTo(\"namespace\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1ff5097397c0abe6ad083e08d79c24e957b8ac"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MDMxNw==", "bodyText": "Did we need this? I think it would be a break if it turned out that we must specify a client", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440360317", "createdAt": "2020-06-15T18:18:15Z", "author": {"login": "jeremyk-91"}, "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/TimeLockTestUtils.java", "diffHunk": "@@ -76,6 +76,7 @@ static TransactionManagerContext createTransactionManager(\n                                 .servers(serverUris)\n                                 .sslConfiguration(SslConfiguration.of(Paths.get(\"var/security/trustStore.jks\")))\n                                 .build())\n+                        .client(Optional.of(agent))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1ff5097397c0abe6ad083e08d79c24e957b8ac"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NDAxNA==", "bodyText": "(I don't think we fixed this yet - we've made the task AutoCloseable but it is not actually closed when the TM shuts down!)", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440364014", "createdAt": "2020-06-15T18:25:17Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -359,6 +361,11 @@ public TransactionManager serializable() {\n     private TransactionManager serializableInternal(@Output List<AutoCloseable> closeables) {\n         MetricsManager metricsManager = MetricsManagers.of(globalMetricsRegistry(), globalTaggedMetricRegistry());\n \n+        TimeLockFeedbackBackgroundTask.create(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM0MzkwNg=="}, "originalCommit": {"oid": "caf006534f3e512c329a135f58ca1386e991c3c6"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd1e170206aaa5341e7907a77450f2c1cfb9b94", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/9dd1e170206aaa5341e7907a77450f2c1cfb9b94", "committedDate": "2020-06-15T18:50:29Z", "message": "Add TimeLock feedback task to list of closeables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b41771d60e804f411eadd9a1f7477c7ca5e99cbf", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/b41771d60e804f411eadd9a1f7477c7ca5e99cbf", "committedDate": "2020-06-15T19:27:44Z", "message": "Add test + register closeable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a51e93b1c894367cfae7c25c3a8f5c705788c7", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/94a51e93b1c894367cfae7c25c3a8f5c705788c7", "committedDate": "2020-06-16T10:04:50Z", "message": "Use client and not throw"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459c7c2ce30ed422f851922b4d19cdc7b27296fc", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/459c7c2ce30ed422f851922b4d19cdc7b27296fc", "committedDate": "2020-06-16T10:11:21Z", "message": "Fix tests | checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzU4NTkw", "url": "https://github.com/palantir/atlasdb/pull/4833#pullrequestreview-431358590", "createdAt": "2020-06-16T10:13:49Z", "commit": {"oid": "459c7c2ce30ed422f851922b4d19cdc7b27296fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoxMzo0OVrOGkUsfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDoxMzo0OVrOGkUsfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDk4OQ==", "bodyText": "move to bckTask", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440740989", "createdAt": "2020-06-16T10:13:49Z", "author": {"login": "sudiksha27"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/Constants.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+public class Constants {\n+    private Constants () {\n+        // no op\n+    }\n+\n+    public static final String TIMELOCK_FEEDBACK_THREAD_PREFIX = \"TimeLockFeedbackBackgroundTask\";\n+    public static final long TIMELOCK_CLIENT_FEEDBACK_INTERVAL_SECONDS = 30;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "459c7c2ce30ed422f851922b4d19cdc7b27296fc"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e53092df00a83e8cd303dce7488262a2e617c1", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f9e53092df00a83e8cd303dce7488262a2e617c1", "committedDate": "2020-06-16T10:15:04Z", "message": "resolve comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ed5126dd4457665a05cc64276833164aa63ccde", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/2ed5126dd4457665a05cc64276833164aa63ccde", "committedDate": "2020-06-16T10:17:10Z", "message": "Remove redundant code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a396a9949252001762f5fe73e3d917bad425e34", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/9a396a9949252001762f5fe73e3d917bad425e34", "committedDate": "2020-06-16T10:19:55Z", "message": "Make logger static"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMzczMDQ1", "url": "https://github.com/palantir/atlasdb/pull/4833#pullrequestreview-431373045", "createdAt": "2020-06-16T10:34:39Z", "commit": {"oid": "9a396a9949252001762f5fe73e3d917bad425e34"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozNDozOVrOGkVX5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozNDozOVrOGkVX5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc1MjEwMA==", "bodyText": "nit: This should be static, there's no reason each instance needs a different copy of this", "url": "https://github.com/palantir/atlasdb/pull/4833#discussion_r440752100", "createdAt": "2020-06-16T10:34:39Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/metrics/TimeLockFeedbackBackgroundTask.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.client.metrics;\n+\n+\n+import java.time.Duration;\n+import java.util.UUID;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.common.concurrent.NamedThreadFactory;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.lock.client.ConjureTimelockServiceBlockingMetrics;\n+import com.palantir.logsafe.SafeArg;\n+import com.palantir.timelock.feedback.ConjureTimeLockClientFeedback;\n+import com.palantir.timelock.feedback.EndpointStatistics;\n+import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n+\n+public final class TimeLockFeedbackBackgroundTask implements AutoCloseable {\n+    private static final Logger log = LoggerFactory.getLogger(\n+            TimeLockFeedbackBackgroundTask.class);\n+    private static final String TIMELOCK_FEEDBACK_THREAD_PREFIX = \"TimeLockFeedbackBackgroundTask\";\n+    private final ScheduledExecutorService executor = PTExecutors.newSingleThreadScheduledExecutor(\n+                    new NamedThreadFactory(TIMELOCK_FEEDBACK_THREAD_PREFIX, true));\n+\n+    private final UUID nodeId = UUID.randomUUID();\n+    private final Duration timeLockClientFeedbackReportInterval = Duration.ofSeconds(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a396a9949252001762f5fe73e3d917bad425e34"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b5379c7b4559529d3d781ab694a044b87010ed", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/c7b5379c7b4559529d3d781ab694a044b87010ed", "committedDate": "2020-06-16T13:11:50Z", "message": "Address comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2934, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}