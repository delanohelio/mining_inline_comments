{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MTMxMzM1", "number": 4981, "title": "Drop initial proposals", "bodyText": "Goals (and why):\nThe first mark on leader proposal metric causes spike in 5 min rate and the health check inaccurately becomes unhealthy. Goal is to deactivate the health check at start up until the initial mark has negligible weightage in last 5 min rate.\nImplementation Description (bullets):\n\n\nDeactivate the health check for 14 min on start up\n\n\nThe feedback report now also contains the leader election rate as seen by the health check\n\n\nTesting (What was existing testing like?  What have you done to improve it?):\nAdded and modified existing tests\nConcerns (what feedback would you like?):\nDisabling the health check for 14min could be dangerous\nWhere should we start reviewing?:\nLeaderElectionHealthCheck\nPriority (whenever / two weeks / yesterday):\nASAP \ud83d\udd25", "createdAt": "2020-09-10T17:28:23Z", "url": "https://github.com/palantir/atlasdb/pull/4981", "merged": true, "mergeCommit": {"oid": "ebfacbe127939981ea3bae07fe1fb4cdc3574cd3"}, "closed": true, "closedAt": "2020-09-14T15:29:03Z", "author": {"login": "sudiksha27"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHhrORgH2gAyNDg0MTMxMzM1OmYyZjU2ZmMzZTk3MGIyMjk1YmQxNjJkY2MxMTI2NjYyNDJkYmU1Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI0m9lgH2gAyNDg0MTMxMzM1OmQzMWUzNThiYzQzYjg5ZDE5YjYxZTM0ZDkxZGJlMzQ2NzRkYmQ3Mjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f2f56fc3e970b2295bd162dcc112666242dbe5cd", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f2f56fc3e970b2295bd162dcc112666242dbe5cd", "committedDate": "2020-09-10T14:28:47Z", "message": "Do not register leadership proposed metrics for 10 sec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9cb5ebcbc7eef4ce84e6200548b35cd154c7d09", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/a9cb5ebcbc7eef4ce84e6200548b35cd154c7d09", "committedDate": "2020-09-10T14:29:01Z", "message": "Don't need to create a meter | clock is common and maintained by registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e8b0d2b61a0e1b49cab519887237f403f921227", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/2e8b0d2b61a0e1b49cab519887237f403f921227", "committedDate": "2020-09-10T14:42:17Z", "message": "Revert \"Don't need to create a meter | clock is common and maintained by registry\"\n\nThis reverts commit a9cb5ebcbc7eef4ce84e6200548b35cd154c7d09."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f2f29ea86af7d2735338f52a2683b020e6c732", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/17f2f29ea86af7d2735338f52a2683b020e6c732", "committedDate": "2020-09-10T15:38:01Z", "message": "Report contians the leader election rate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1ce22069aeb0d7c533bceebd0e27dba39bca680", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/b1ce22069aeb0d7c533bceebd0e27dba39bca680", "committedDate": "2020-09-10T16:36:34Z", "message": "Deactivate health check for 14 min after start up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79dd55dbe84b8b5a4c75482fa87bf61555fe4d64", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/79dd55dbe84b8b5a4c75482fa87bf61555fe4d64", "committedDate": "2020-09-10T17:18:14Z", "message": "Modify tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07c2c8f3852aea5c10ff74ad3345a29069439b72", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/07c2c8f3852aea5c10ff74ad3345a29069439b72", "committedDate": "2020-09-10T17:18:14Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c8f3f2085430339d82f74fa2f5e577ee07e11fd", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/5c8f3f2085430339d82f74fa2f5e577ee07e11fd", "committedDate": "2020-09-10T18:56:58Z", "message": "Remove annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b233ba93af9441edd1d2fe162ed3533be405976", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/2b233ba93af9441edd1d2fe162ed3533be405976", "committedDate": "2020-09-10T18:57:11Z", "message": "Merge branch 'drop-initial-proposals' of github.com:palantir/atlasdb into drop-initial-proposals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjI2MTU5", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-486626159", "createdAt": "2020-09-11T08:54:10Z", "commit": {"oid": "2b233ba93af9441edd1d2fe162ed3533be405976"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo1NDoxMFrOHQUVgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo1NjozOFrOHQUf4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MjQ0OA==", "bodyText": "could maybe do\nhealthCheckDeactivated = healthCheckDeactivated || Duration.between(...).compareTo(...) < 0;", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r486872448", "createdAt": "2020-09-11T08:54:10Z", "author": {"login": "Jolyon-S"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -38,8 +44,29 @@ private double fiveMinuteRate(LeaderElectionServiceMetrics leaderElectionRateFor\n         return leaderElectionRateForClient.proposedLeadership().getFiveMinuteRate();\n     }\n \n-    public LeaderElectionHealthStatus leaderElectionRateHealthStatus() {\n-        return getLeaderElectionRateForAllClients() <= MAX_ALLOWED_LAST_5_MINUTE_RATE\n-                ? LeaderElectionHealthStatus.HEALTHY : LeaderElectionHealthStatus.UNHEALTHY;\n+    private boolean isHealthCheckDeactivated() {\n+        if (!healthCheckDeactivated) {\n+            healthCheckDeactivated\n+                    = Duration.between(timeCreated, Instant.now()).compareTo(HEALTH_CHECK_DEACTIVATION_PERIOD) < 0;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b233ba93af9441edd1d2fe162ed3533be405976"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3NTEwNQ==", "bodyText": "An interesting way of doing it. Since some of the builder is the same, I suggest you do either:\nLeaderElectionHealthStatus status = isHealthy(...) ? LeaderElectionHealthStatus.HEALTHY : LeaderElectionHealthStatus.UNHEALTHY;\nreturn LeaderElectionReport.builder().status(status).leaderElectionRate(...).build();\nor you could inline status to be inside the builder.", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r486875105", "createdAt": "2020-09-11T08:56:38Z", "author": {"login": "Jolyon-S"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -38,8 +44,29 @@ private double fiveMinuteRate(LeaderElectionServiceMetrics leaderElectionRateFor\n         return leaderElectionRateForClient.proposedLeadership().getFiveMinuteRate();\n     }\n \n-    public LeaderElectionHealthStatus leaderElectionRateHealthStatus() {\n-        return getLeaderElectionRateForAllClients() <= MAX_ALLOWED_LAST_5_MINUTE_RATE\n-                ? LeaderElectionHealthStatus.HEALTHY : LeaderElectionHealthStatus.UNHEALTHY;\n+    private boolean isHealthCheckDeactivated() {\n+        if (!healthCheckDeactivated) {\n+            healthCheckDeactivated\n+                    = Duration.between(timeCreated, Instant.now()).compareTo(HEALTH_CHECK_DEACTIVATION_PERIOD) < 0;\n+        }\n+        return healthCheckDeactivated;\n+    }\n+\n+    private boolean isHealthy(double leaderElectionRateForAllClients) {\n+        return isHealthCheckDeactivated() || (leaderElectionRateForAllClients <= MAX_ALLOWED_LAST_5_MINUTE_RATE);\n+    }\n+\n+    public LeaderElectionHealthReport leaderElectionRateHealthReport() {\n+        double leaderElectionRateForAllClients = getLeaderElectionRateForAllClients();\n+\n+        return isHealthy(leaderElectionRateForAllClients)\n+                ? LeaderElectionHealthReport.builder()\n+                .status(LeaderElectionHealthStatus.HEALTHY)\n+                .leaderElectionRate(leaderElectionRateForAllClients)\n+                .build()\n+                : LeaderElectionHealthReport.builder()\n+                        .status(LeaderElectionHealthStatus.UNHEALTHY)\n+                        .leaderElectionRate(leaderElectionRateForAllClients)\n+                        .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b233ba93af9441edd1d2fe162ed3533be405976"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a49a7860e6d410a2b605176a50bdfa2cfc3cef0", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7a49a7860e6d410a2b605176a50bdfa2cfc3cef0", "committedDate": "2020-09-11T09:37:32Z", "message": "Address comments + bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff1d37e2a878482c664a248a32a3e7656cd777c", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/8ff1d37e2a878482c664a248a32a3e7656cd777c", "committedDate": "2020-09-11T09:38:22Z", "message": "Fix deactivation period"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f31e963ef62fed7cada776a9fbd58c7e890242a6", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/f31e963ef62fed7cada776a9fbd58c7e890242a6", "committedDate": "2020-09-11T09:49:28Z", "message": "Minor refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41a205087f761fb840554c50ccad1dbf2623dcec", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/41a205087f761fb840554c50ccad1dbf2623dcec", "committedDate": "2020-09-11T09:51:27Z", "message": "Fix deactivation period again"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjcwNzQ4", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-486670748", "createdAt": "2020-09-11T09:57:24Z", "commit": {"oid": "41a205087f761fb840554c50ccad1dbf2623dcec"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwOTo1NzoyNFrOHQYNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMDowMTowM1rOHQYemQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkzNTg0OA==", "bodyText": "Probably worth a comment explaining why this is a thing.", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r486935848", "createdAt": "2020-09-11T09:57:24Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,15 +16,21 @@\n \n package com.palantir.leader.health;\n \n+import java.time.Duration;\n+import java.time.Instant;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n import com.palantir.leader.LeaderElectionServiceMetrics;\n import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    public static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    private static final Duration HEALTH_CHECK_DEACTIVATION_PERIOD = Duration.ofMinutes(14);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a205087f761fb840554c50ccad1dbf2623dcec"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkzODIyOA==", "bodyText": "Are we guaranteed that the health check executes from the same thread every time? Even if this is the case, it feels like it would make sense to be defensive against this as this isn't a hot path", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r486938228", "createdAt": "2020-09-11T09:59:25Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,15 +16,21 @@\n \n package com.palantir.leader.health;\n \n+import java.time.Duration;\n+import java.time.Instant;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n import com.palantir.leader.LeaderElectionServiceMetrics;\n import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    public static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    private static final Duration HEALTH_CHECK_DEACTIVATION_PERIOD = Duration.ofMinutes(14);\n+\n     private final ConcurrentMap<Client, LeaderElectionServiceMetrics> clientWiseMetrics = new ConcurrentHashMap<>();\n+    private final Instant timeCreated = Instant.now();\n+    private boolean healthCheckDeactivated = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a205087f761fb840554c50ccad1dbf2623dcec"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk0MDMxMw==", "bodyText": "This test makes sense for now. The aggregation and/or threshold probably needs revisiting if timelock partitioning is introduced.", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r486940313", "createdAt": "2020-09-11T10:01:03Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/test/java/com/palantir/leader/LeadershipElectionCheckTest.java", "diffHunk": "@@ -71,57 +71,69 @@ public void setup() {\n     }\n \n     @Test\n-    public void shouldBeHealthyForOneLeaderElectionPerMinute() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5, Duration.ofSeconds(60));\n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n+    public void alwaysHealthyUntilDeactivationPeriodPasses() {\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 100, Duration.ofSeconds(1), false);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().status())\n                 .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isGreaterThan(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n+    }\n+\n+    @Test\n+    public void shouldBeHealthyForOneLeaderElectionPerMinute() {\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 20, Duration.ofSeconds(60), true);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeUnhealthyForMoreThanOneLeaderElectionPerMinute() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(10));\n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.UNHEALTHY);\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(10), true);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isGreaterThan(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeHealthyForOneLeaderElectionPerMinuteAcrossClients() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(60));\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 5,  Duration.ofSeconds(60));\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(60), true);\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 5,  Duration.ofSeconds(60), false);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeUnhealthyOverallEvenIfIndividualClientsAreHealthy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41a205087f761fb840554c50ccad1dbf2623dcec"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70f806d55bf84c3b96611e05885fec6c5273da4e", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/70f806d55bf84c3b96611e05885fec6c5273da4e", "committedDate": "2020-09-11T10:33:16Z", "message": "Address comments - 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea6b26bb6a5c281983389c83d76ace6f58ccf94", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/eea6b26bb6a5c281983389c83d76ace6f58ccf94", "committedDate": "2020-09-11T11:09:59Z", "message": "Checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2ODEwNzk2", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-486810796", "createdAt": "2020-09-11T13:34:43Z", "commit": {"oid": "eea6b26bb6a5c281983389c83d76ace6f58ccf94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "848012c6c544eb720cd7d5e4f53ecf803c256b1e", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/848012c6c544eb720cd7d5e4f53ecf803c256b1e", "committedDate": "2020-09-11T13:34:45Z", "message": "Autorelease 0.245.3-rc1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f175be50961d878b054947c6a6ae33c76c70cfb", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/3f175be50961d878b054947c6a6ae33c76c70cfb", "committedDate": "2020-09-11T13:34:45Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "407fd7f4a2d9e79f2a608158e6d2fad4572173c9", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/407fd7f4a2d9e79f2a608158e6d2fad4572173c9", "committedDate": "2020-09-14T10:18:47Z", "message": "Fix the delay issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d99160c2d787811f73e678d132c0b33c52ce0d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/e9d99160c2d787811f73e678d132c0b33c52ce0d", "committedDate": "2020-09-14T10:20:54Z", "message": "Autorelease 0.245.3-rc2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8956054669d42d195ae1854f201ebb6898f52c1a", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/8956054669d42d195ae1854f201ebb6898f52c1a", "committedDate": "2020-09-14T11:58:58Z", "message": "Volatile instant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc9f2b4c3cce86a42f0d21b5434440a08581489e", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/bc9f2b4c3cce86a42f0d21b5434440a08581489e", "committedDate": "2020-09-14T12:27:42Z", "message": "Bug fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5333244f02de13ed54c5e79050102df256712a5b", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/5333244f02de13ed54c5e79050102df256712a5b", "committedDate": "2020-09-14T12:27:54Z", "message": "Merge branch 'drop-initial-proposals' of github.com:palantir/atlasdb into drop-initial-proposals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4056b9182d3dd417903eb9e4e917315fa9c6ad", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/5a4056b9182d3dd417903eb9e4e917315fa9c6ad", "committedDate": "2020-09-14T12:28:29Z", "message": "Autorelease 0.245.3-rc3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e907b140e3242f9419f22bb43fb89603ade869d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/5e907b140e3242f9419f22bb43fb89603ade869d", "committedDate": "2020-09-14T13:24:18Z", "message": "Cache deactivation period computation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "911e0d8385e028baa5c560910cf1612a548dc3ef", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/911e0d8385e028baa5c560910cf1612a548dc3ef", "committedDate": "2020-09-14T13:24:33Z", "message": "Merge branch 'drop-initial-proposals' of github.com:palantir/atlasdb into drop-initial-proposals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3Nzc1MDA5", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-487775009", "createdAt": "2020-09-14T13:35:54Z", "commit": {"oid": "911e0d8385e028baa5c560910cf1612a548dc3ef"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzozNTo1NFrOHRUPTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo0Mzo1MFrOHRUvqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkxOTQzOQ==", "bodyText": "nit: timeFirstClientRegistered", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r487919439", "createdAt": "2020-09-14T13:35:54Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,20 +16,35 @@\n \n package com.palantir.leader.health;\n \n+import java.time.Duration;\n+import java.time.Instant;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ConcurrentMap;\n \n import com.palantir.leader.LeaderElectionServiceMetrics;\n import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    public static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+\n+//    The first mark on leader proposal metric causes spike in 5 min rate and the health check inaccurately\n+//    becomes unhealthy. We deactivate the health check at start up until the initial mark has negligible\n+//    weight in the last 5 min rate.\n+    private static final Duration HEALTH_CHECK_DEACTIVATION_PERIOD = Duration.ofMinutes(14);\n+\n     private final ConcurrentMap<Client, LeaderElectionServiceMetrics> clientWiseMetrics = new ConcurrentHashMap<>();\n+    private volatile Instant timeCreated = Instant.now();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911e0d8385e028baa5c560910cf1612a548dc3ef"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkyMzc0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return healthCheckDeactivated = healthCheckDeactivated && isWithinDeactivationWindow();\n          \n          \n            \n                    if (healthCheckDeactivated) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    }\n          \n          \n            \n                    boolean shouldBeDeactivated = healthCheckDeactivated && isWithinDeactivationWindow();\n          \n          \n            \n                    healthCheckDeactivated = shouldBeDeactivated;\n          \n          \n            \n                    return shouldBeDeactivated;", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r487923748", "createdAt": "2020-09-14T13:40:01Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -38,8 +53,26 @@ private double fiveMinuteRate(LeaderElectionServiceMetrics leaderElectionRateFor\n         return leaderElectionRateForClient.proposedLeadership().getFiveMinuteRate();\n     }\n \n-    public LeaderElectionHealthStatus leaderElectionRateHealthStatus() {\n-        return getLeaderElectionRateForAllClients() <= MAX_ALLOWED_LAST_5_MINUTE_RATE\n+    private boolean isHealthCheckDeactivated() {\n+        return healthCheckDeactivated = healthCheckDeactivated && isWithinDeactivationWindow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911e0d8385e028baa5c560910cf1612a548dc3ef"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkyNzcyMg==", "bodyText": "Do you want a test for the new behaviour (the clock starts only after first client is registered)?", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r487927722", "createdAt": "2020-09-14T13:43:50Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/test/java/com/palantir/leader/LeadershipElectionCheckTest.java", "diffHunk": "@@ -71,57 +71,69 @@ public void setup() {\n     }\n \n     @Test\n-    public void shouldBeHealthyForOneLeaderElectionPerMinute() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5, Duration.ofSeconds(60));\n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n+    public void alwaysHealthyUntilDeactivationPeriodPasses() {\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 100, Duration.ofSeconds(1), false);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().status())\n                 .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isGreaterThan(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n+    }\n+\n+    @Test\n+    public void shouldBeHealthyForOneLeaderElectionPerMinute() {\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 20, Duration.ofSeconds(60), true);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeUnhealthyForMoreThanOneLeaderElectionPerMinute() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(10));\n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.UNHEALTHY);\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(10), true);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isGreaterThan(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeHealthyForOneLeaderElectionPerMinuteAcrossClients() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(60));\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 5,  Duration.ofSeconds(60));\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5,  Duration.ofSeconds(60), true);\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 5,  Duration.ofSeconds(60), false);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     @Test\n     public void shouldBeUnhealthyOverallEvenIfIndividualClientsAreHealthy() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 2,  Duration.ofSeconds(10));\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 3,  Duration.ofSeconds(10));\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 2,  Duration.ofSeconds(10), true);\n+        markLeaderElectionsAtSpecifiedInterval(CLIENT_2, 3,  Duration.ofSeconds(10), false);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient1.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.HEALTHY);\n+        assertThat(leaderElectionHealthCheckForOnlyClient2.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isLessThanOrEqualTo(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n \n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n-                .isEqualTo(LeaderElectionHealthStatus.UNHEALTHY);\n+        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthReport().leaderElectionRate())\n+                .isGreaterThan(LeaderElectionHealthCheck.MAX_ALLOWED_LAST_5_MINUTE_RATE);\n     }\n \n     private void markLeaderElectionsAtSpecifiedInterval(Client client,\n             int leaderElectionCount,\n-            Duration timeIntervalInSeconds) {\n+            Duration timeIntervalInSeconds,\n+            boolean afterDeactivationPeriod) {\n         // The rate is initialized after first tick (5 second interval) of meter with number of marks / interval.\n         // Marking before the first interval has passed sets the rate very high, which should not happen in practice.\n-        fakeTimeClock.advance(6, TimeUnit.SECONDS);\n-        LeaderElectionServiceMetrics metrics = clientLeaderElectionServiceMetricsMap.get(client);\n+        if (afterDeactivationPeriod) {\n+            fakeTimeClock.advance(14, TimeUnit.MINUTES);\n+        }\n \n+        LeaderElectionServiceMetrics metrics = clientLeaderElectionServiceMetricsMap.get(client);\n         IntStream.range(0, leaderElectionCount).forEach(idx -> {\n             metrics.proposedLeadership().mark();\n             fakeTimeClock.advance(timeIntervalInSeconds.getSeconds(), TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911e0d8385e028baa5c560910cf1612a548dc3ef"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0528d5315b777b8896d8fd264674ba203f8957d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/e0528d5315b777b8896d8fd264674ba203f8957d", "committedDate": "2020-09-14T13:51:45Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc413d4ff902d0921083a7cbb0afa26bc21c2cb5", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/cc413d4ff902d0921083a7cbb0afa26bc21c2cb5", "committedDate": "2020-09-14T14:33:30Z", "message": "Add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0a19e366588a451ed39c9cc63c133f60e001e5", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/aa0a19e366588a451ed39c9cc63c133f60e001e5", "committedDate": "2020-09-14T14:33:30Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODM4OTUy", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-487838952", "createdAt": "2020-09-14T14:38:39Z", "commit": {"oid": "aa0a19e366588a451ed39c9cc63c133f60e001e5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozODo0MFrOHRYMQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDozODo0MFrOHRYMQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4NDE5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(check.isWithinDeactivationWindow())\n          \n          \n            \n                            .isEqualTo(false);\n          \n          \n            \n                    assertThat(check.isWithinDeactivationWindow()).isEqualTo(false);", "url": "https://github.com/palantir/atlasdb/pull/4981#discussion_r487984193", "createdAt": "2020-09-14T14:38:40Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/test/java/com/palantir/leader/health/LeadershipElectionCheckTest.java", "diffHunk": "@@ -71,57 +71,88 @@ public void setup() {\n     }\n \n     @Test\n-    public void shouldBeHealthyForOneLeaderElectionPerMinute() {\n-        markLeaderElectionsAtSpecifiedInterval(CLIENT_1, 5, Duration.ofSeconds(60));\n-        assertThat(leaderElectionHealthCheck.leaderElectionRateHealthStatus())\n+    public void clockResetsWhenClientIsRegistered() {\n+        AtomicLong now = new AtomicLong();\n+        LeaderElectionHealthCheck check\n+                = new LeaderElectionHealthCheck(() -> Instant.ofEpochSecond(now.get()));\n+        long healthCheckDeactivationPeriod = LeaderElectionHealthCheck.HEALTH_CHECK_DEACTIVATION_PERIOD.getSeconds();\n+\n+        now.addAndGet(healthCheckDeactivationPeriod + 1);\n+        assertThat(check.isWithinDeactivationWindow()).isEqualTo(true);\n+\n+        check.registerClient(CLIENT_1, leaderElectionServiceMetrics);\n+        now.addAndGet(healthCheckDeactivationPeriod / 2);\n+        assertThat(check.isWithinDeactivationWindow()).isEqualTo(true);\n+\n+        now.addAndGet(healthCheckDeactivationPeriod / 2 + 1);\n+        assertThat(check.isWithinDeactivationWindow())\n+                .isEqualTo(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0a19e366588a451ed39c9cc63c133f60e001e5"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODM5MTI3", "url": "https://github.com/palantir/atlasdb/pull/4981#pullrequestreview-487839127", "createdAt": "2020-09-14T14:38:51Z", "commit": {"oid": "aa0a19e366588a451ed39c9cc63c133f60e001e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbf745628201013dc1594f3b0ac92d5191deb296", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/cbf745628201013dc1594f3b0ac92d5191deb296", "committedDate": "2020-09-14T14:39:18Z", "message": "Update leader-election-impl/src/test/java/com/palantir/leader/health/LeadershipElectionCheckTest.java\n\nCo-authored-by: Jeremy Kong <jeremykong@hotmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba426430129b696ea3397350a49ab72a97a92722", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/ba426430129b696ea3397350a49ab72a97a92722", "committedDate": "2020-09-14T14:45:32Z", "message": "Checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bfe033db330af17fa71eefa85ba466a2544a61", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/85bfe033db330af17fa71eefa85ba466a2544a61", "committedDate": "2020-09-14T15:03:25Z", "message": "CheckstyleTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af6eeaf4dad3fc79201a7c151f3e41066ad2afa4", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/af6eeaf4dad3fc79201a7c151f3e41066ad2afa4", "committedDate": "2020-09-14T15:05:31Z", "message": "Remove redundant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d31e358bc43b89d19b61e34d91dbe34674dbd729", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/d31e358bc43b89d19b61e34d91dbe34674dbd729", "committedDate": "2020-09-14T15:06:15Z", "message": "Revert \"Remove redundant\"\n\nThis reverts commit af6eeaf4dad3fc79201a7c151f3e41066ad2afa4."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2566, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}