{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5ODQ4NzA3", "number": 4974, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNzoxNVrOEhL00g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Nzo0NFrOEhMQNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjMyMjEwOnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-4974.v2.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNzoxNVrOHOXCWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNzoxNVrOHOXCWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxOTU0NQ==", "bodyText": "nit: fix", "url": "https://github.com/palantir/atlasdb/pull/4974#discussion_r484819545", "createdAt": "2020-09-08T10:37:15Z", "author": {"login": "gmaretic"}, "path": "changelog/@unreleased/pr-4974.v2.yml", "diffHunk": "@@ -0,0 +1,6 @@\n+type: improvement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c37c6a2642babfe743b81eb84560e0375730c864"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjMyMzYwOnYy", "diffSide": "RIGHT", "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNzo0MVrOHOXDMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozNzo0MVrOHOXDMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxOTc2Mw==", "bodyText": "fine tuning? :D", "url": "https://github.com/palantir/atlasdb/pull/4974#discussion_r484819763", "createdAt": "2020-09-08T10:37:41Z", "author": {"login": "gmaretic"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,19 +16,33 @@\n \n package com.palantir.leader.health;\n \n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n import com.palantir.leader.LeaderElectionServiceMetrics;\n+import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.016;\n+    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c37c6a2642babfe743b81eb84560e0375730c864"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjMyNTQ0OnYy", "diffSide": "RIGHT", "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozODoxNFrOHOXEUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozODoxNFrOHOXEUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMDA0OQ==", "bodyText": "nit: one line, and extra newline", "url": "https://github.com/palantir/atlasdb/pull/4974#discussion_r484820049", "createdAt": "2020-09-08T10:38:14Z", "author": {"login": "gmaretic"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,19 +16,33 @@\n \n package com.palantir.leader.health;\n \n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n import com.palantir.leader.LeaderElectionServiceMetrics;\n+import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.016;\n+    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    private final ConcurrentMap<Client, LeaderElectionServiceMetrics> clientWiseMetrics\n+            = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c37c6a2642babfe743b81eb84560e0375730c864"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjMyODA5OnYy", "diffSide": "RIGHT", "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozOTowM1rOHOXF8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDozOTowM1rOHOXF8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMDQ2Nw==", "bodyText": "nit: one line", "url": "https://github.com/palantir/atlasdb/pull/4974#discussion_r484820467", "createdAt": "2020-09-08T10:39:03Z", "author": {"login": "gmaretic"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/health/LeaderElectionHealthCheck.java", "diffHunk": "@@ -16,19 +16,33 @@\n \n package com.palantir.leader.health;\n \n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n import com.palantir.leader.LeaderElectionServiceMetrics;\n+import com.palantir.paxos.Client;\n \n public class LeaderElectionHealthCheck {\n-    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.016;\n+    private static final double MAX_ALLOWED_LAST_5_MINUTE_RATE = 0.015;\n+    private final ConcurrentMap<Client, LeaderElectionServiceMetrics> clientWiseMetrics\n+            = new ConcurrentHashMap<>();\n+\n \n-    private final LeaderElectionServiceMetrics leaderElectionServiceMetrics;\n+    public void registerClient(Client namespace,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c37c6a2642babfe743b81eb84560e0375730c864"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjM5MjIyOnYy", "diffSide": "RIGHT", "path": "leader-election-impl/src/test/java/com/palantir/leader/LeadershipElectionCheckTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Nzo0NFrOHOXruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDo1Nzo0NFrOHOXruA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMDEzNg==", "bodyText": "Add a test with multiple clients", "url": "https://github.com/palantir/atlasdb/pull/4974#discussion_r484830136", "createdAt": "2020-09-08T10:57:44Z", "author": {"login": "gmaretic"}, "path": "leader-election-impl/src/test/java/com/palantir/leader/LeadershipElectionCheckTest.java", "diffHunk": "@@ -33,40 +33,41 @@\n import com.codahale.metrics.Meter;\n import com.palantir.leader.health.LeaderElectionHealthCheck;\n import com.palantir.leader.health.LeaderElectionHealthStatus;\n+import com.palantir.paxos.Client;\n import com.palantir.tritium.metrics.registry.TaggedMetricRegistry;\n \n public class LeadershipElectionCheckTest {\n     private final FakeTimeClock fakeTimeClock = new FakeTimeClock();\n     private final TaggedMetricRegistry registry = mock(TaggedMetricRegistry.class);\n     private final LeaderElectionServiceMetrics leaderElectionServiceMetrics =\n             LeaderElectionServiceMetrics.of(registry);\n-    private final LeaderElectionHealthCheck leaderElectionHealthCheck =\n-            new LeaderElectionHealthCheck(leaderElectionServiceMetrics);\n+    private final LeaderElectionHealthCheck leaderElectionHealthCheck = new LeaderElectionHealthCheck();\n+    private static final Client CLIENT = Client.of(\"abc\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c37c6a2642babfe743b81eb84560e0375730c864"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2554, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}