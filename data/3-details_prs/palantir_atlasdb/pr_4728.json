{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MzQzNDU5", "number": 4728, "title": "Get all namespaces", "bodyText": "Goals (and why):\nTimeLock migration requires consensus to be achieved on all namespaces after a node is removed.\nThis PR is part I, adds an endpoint on TimeLock to get all namespaces (including non active clients).\nImplementation Description (bullets):\n\nnamespaces are retrieved by reading files in Paxos data directory for relevant use cases.\n\nTesting (What was existing testing like?  What have you done to improve it?):\nTested on IL stack.\nConcerns (what feedback would you like?):\nWhere should we start reviewing?:\nDiskNamespaceLoader.java\nPriority (whenever / two weeks / yesterday):\nEnd of this week", "createdAt": "2020-04-22T14:53:11Z", "url": "https://github.com/palantir/atlasdb/pull/4728", "merged": true, "mergeCommit": {"oid": "ad2b46c7dc2b043ebaab9378a9669ef4f15a3451"}, "closed": true, "closedAt": "2020-04-27T16:16:51Z", "author": {"login": "sudiksha27"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaJavaAH2gAyNDA3MzQzNDU5OjM0MTJlODg0OWQzNTIwNDYxZGZkNmQxNWJmMmMyOGJmMzYzYjRlODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbv8HJAH2gAyNDA3MzQzNDU5OjcyMjRmZDVhZTMyOTdmN2JlODZkZGNkNWY1YTA0MzM5NmEzYTM4OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3412e8849d3520461dfd6d15bf2c28bf363b4e86", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/3412e8849d3520461dfd6d15bf2c28bf363b4e86", "committedDate": "2020-04-22T14:46:28Z", "message": "Resource and loader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6247e844c9230c05a26e451cd8afe665c97b5bc9", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/6247e844c9230c05a26e451cd8afe665c97b5bc9", "committedDate": "2020-04-22T14:46:48Z", "message": "Wiring creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e932cc4d1d40e7db68e0989abbd1431fa9a5dcdb", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/e932cc4d1d40e7db68e0989abbd1431fa9a5dcdb", "committedDate": "2020-04-22T18:33:49Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf037884589aa918b1fd92aa182180d2a4945ef2", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/bf037884589aa918b1fd92aa182180d2a4945ef2", "committedDate": "2020-04-22T18:42:47Z", "message": "Null check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODg1ODk4", "url": "https://github.com/palantir/atlasdb/pull/4728#pullrequestreview-398885898", "createdAt": "2020-04-23T08:43:36Z", "commit": {"oid": "bf037884589aa918b1fd92aa182180d2a4945ef2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODo0MzozN1rOGKd4cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODo0NToyNFrOGKd9lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyODUyOA==", "bodyText": "Let's make this static, no reason to get the logger on every call", "url": "https://github.com/palantir/atlasdb/pull/4728#discussion_r413628528", "createdAt": "2020-04-23T08:43:37Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoader.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosUseCase;\n+import com.palantir.logsafe.SafeArg;\n+\n+final class DiskNamespaceLoader {\n+    private final Path rootDataDirectory;\n+\n+    DiskNamespaceLoader(Path rootDataDirectory) {\n+        this.rootDataDirectory = rootDataDirectory;\n+    }\n+\n+    Set<String> getNamespaces() {\n+        return Arrays.stream(PaxosUseCase.values())\n+                .filter(useCase -> useCase != PaxosUseCase.LEADER_FOR_ALL_CLIENTS)\n+                .map(useCase -> useCase.logDirectoryRelativeToDataDirectory(rootDataDirectory))\n+                .flatMap(DiskNamespaceLoader::getNamespacesFromUseCaseResolvedDirectory)\n+                .collect(Collectors.toSet());\n+    }\n+\n+    private static Stream<String> getNamespacesFromUseCaseResolvedDirectory(Path logDirectory) {\n+        File[] directories = logDirectory.toFile().listFiles(File::isDirectory);\n+        if (directories == null) {\n+            LoggerFactory.getLogger(DiskNamespaceLoader.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf037884589aa918b1fd92aa182180d2a4945ef2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyOTg0NQ==", "bodyText": "I'd suggest we write this as:\n\nif logDirectory does not exist, return Stream.of() without complaints, or maybe an INFO log\nif it does and we get null, log error and throw: this is a strange state", "url": "https://github.com/palantir/atlasdb/pull/4728#discussion_r413629845", "createdAt": "2020-04-23T08:45:24Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoader.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosUseCase;\n+import com.palantir.logsafe.SafeArg;\n+\n+final class DiskNamespaceLoader {\n+    private final Path rootDataDirectory;\n+\n+    DiskNamespaceLoader(Path rootDataDirectory) {\n+        this.rootDataDirectory = rootDataDirectory;\n+    }\n+\n+    Set<String> getNamespaces() {\n+        return Arrays.stream(PaxosUseCase.values())\n+                .filter(useCase -> useCase != PaxosUseCase.LEADER_FOR_ALL_CLIENTS)\n+                .map(useCase -> useCase.logDirectoryRelativeToDataDirectory(rootDataDirectory))\n+                .flatMap(DiskNamespaceLoader::getNamespacesFromUseCaseResolvedDirectory)\n+                .collect(Collectors.toSet());\n+    }\n+\n+    private static Stream<String> getNamespacesFromUseCaseResolvedDirectory(Path logDirectory) {\n+        File[] directories = logDirectory.toFile().listFiles(File::isDirectory);\n+        if (directories == null) {\n+            LoggerFactory.getLogger(DiskNamespaceLoader.class)\n+                    .error(\"Could not get file for the directory {}\", SafeArg.of(\"dirName\", logDirectory));\n+            return Stream.of();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf037884589aa918b1fd92aa182180d2a4945ef2"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e0f71f1a82cf5cf63c587b3bf91ebe1149eec1e", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/9e0f71f1a82cf5cf63c587b3bf91ebe1149eec1e", "committedDate": "2020-04-24T09:05:34Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbedca424e98e5ef8ee9bc1ade6a4f809dbf83f7", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/bbedca424e98e5ef8ee9bc1ade6a4f809dbf83f7", "committedDate": "2020-04-24T13:32:23Z", "message": "Address comments - I"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTg3NzA5", "url": "https://github.com/palantir/atlasdb/pull/4728#pullrequestreview-400987709", "createdAt": "2020-04-27T14:07:59Z", "commit": {"oid": "bbedca424e98e5ef8ee9bc1ade6a4f809dbf83f7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDowODowMFrOGMlFAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDowOTo0MlrOGMlKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0MzU4Nw==", "bodyText": "nit: We normally use log rather than logger", "url": "https://github.com/palantir/atlasdb/pull/4728#discussion_r415843587", "createdAt": "2020-04-27T14:08:00Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoader.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosUseCase;\n+import com.palantir.logsafe.SafeArg;\n+\n+final class DiskNamespaceLoader {\n+    private static final Logger logger = LoggerFactory.getLogger(DiskNamespaceLoader.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbedca424e98e5ef8ee9bc1ade6a4f809dbf83f7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0NTAyNA==", "bodyText": "Probably should add an INFO log (we skipped log directory {}).", "url": "https://github.com/palantir/atlasdb/pull/4728#discussion_r415845024", "createdAt": "2020-04-27T14:09:42Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoader.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosUseCase;\n+import com.palantir.logsafe.SafeArg;\n+\n+final class DiskNamespaceLoader {\n+    private static final Logger logger = LoggerFactory.getLogger(DiskNamespaceLoader.class);\n+    private final Path rootDataDirectory;\n+\n+    DiskNamespaceLoader(Path rootDataDirectory) {\n+        this.rootDataDirectory = rootDataDirectory;\n+    }\n+\n+    Set<String> getNamespaces() {\n+        return Arrays.stream(PaxosUseCase.values())\n+                .filter(useCase -> useCase != PaxosUseCase.LEADER_FOR_ALL_CLIENTS)\n+                .map(useCase -> useCase.logDirectoryRelativeToDataDirectory(rootDataDirectory))\n+                .flatMap(DiskNamespaceLoader::getNamespacesFromUseCaseResolvedDirectory)\n+                .collect(Collectors.toSet());\n+    }\n+\n+    private static Stream<String> getNamespacesFromUseCaseResolvedDirectory(Path logDirectory) {\n+        if (Files.notExists(logDirectory)) {\n+            return Stream.of();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbedca424e98e5ef8ee9bc1ade6a4f809dbf83f7"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7224fd5ae3297f7be86ddcd5f5a043396a3a3899", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7224fd5ae3297f7be86ddcd5f5a043396a3a3899", "committedDate": "2020-04-27T14:13:14Z", "message": "Address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3088, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}