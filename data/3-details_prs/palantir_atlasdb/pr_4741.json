{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzAzNzUx", "number": 4741, "title": "Standardize on NamedThreadFactory for observability", "bodyText": "Instead of using a mix of both ThreadFactoryBuilder and\nNamedThreadFactory, we standardize on the latter for the provided\ninstrumentation.", "createdAt": "2020-04-28T19:05:55Z", "url": "https://github.com/palantir/atlasdb/pull/4741", "merged": true, "mergeCommit": {"oid": "715cce0c2344fbbf4cfb50b933923113b17fb80f"}, "closed": true, "closedAt": "2020-04-29T18:54:50Z", "author": {"login": "carterkozak"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccIjy5AH2gAyNDEwMzAzNzUxOjQyNmM1NmQ1NWNiMTYwN2Y2MzhmYzY3NDYyMWJjOGNjYWI0ODZiODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccY1TJAFqTQwMjY4Njk1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "426c56d55cb1607f638fc674621bc8ccab486b84", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/426c56d55cb1607f638fc674621bc8ccab486b84", "committedDate": "2020-04-28T18:54:18Z", "message": "Standardize on NamedThreadFactory for observability\n\nInstead of using a mix between ThreadFactoryBuilder and\nNamedThreadFactory, we standardize on the latter for standard\ninstrumentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d74684d774f3fcd38c52f7bdd1dea21dcbb54de", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/1d74684d774f3fcd38c52f7bdd1dea21dcbb54de", "committedDate": "2020-04-28T18:54:18Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/8d456c67848cbebbfc48688c829d48a456017ef1", "committedDate": "2020-04-28T19:08:40Z", "message": "daemon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNjc1OTkx", "url": "https://github.com/palantir/atlasdb/pull/4741#pullrequestreview-402675991", "createdAt": "2020-04-29T13:40:26Z", "commit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0MDoyNlrOGN_VQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0MDoyNlrOGN_VQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMjMwNg==", "bodyText": "Flag that for internal ski product, this will basically report weird metrics? We start many TransactionManagers, so if you hoped this would give you a total count and whatnot, don't think this will work.", "url": "https://github.com/palantir/atlasdb/pull/4741#discussion_r417322306", "createdAt": "2020-04-29T13:40:26Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -61,11 +61,7 @@ private static ThreadFactory threadFactory(String safeLoggablePurpose) {\n     }\n \n     private static ThreadFactory createThreadFactory(String safeLoggablePurpose) {\n-        String namePrefix = String.format(\"autobatcher.%s-\", safeLoggablePurpose);\n-        return new ThreadFactoryBuilder()\n-                .setDaemon(true)\n-                .setNameFormat(namePrefix + \"%d\")\n-                .build();\n+        return new NamedThreadFactory(\"autobatcher.\" + safeLoggablePurpose, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNjg2OTU0", "url": "https://github.com/palantir/atlasdb/pull/4741#pullrequestreview-402686954", "createdAt": "2020-04-29T13:51:54Z", "commit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3111, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}