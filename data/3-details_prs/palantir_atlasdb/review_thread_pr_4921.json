{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MzE3ODQ1", "number": 4921, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTo1MTo0M1rOETN-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTo1MTo0M1rOETN-2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NTg3NDgyOnYy", "diffSide": "RIGHT", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMTo1MTo0M1rOG405-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzoyNzowNVrOG44W-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MDI0OA==", "bodyText": "nit: Prefer catching RuntimeException over Exception to allow the type system to help if we ever add a checked exception to shouldPublish.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (Exception e) {\n          \n          \n            \n                    } catch (RuntimeException e) {", "url": "https://github.com/palantir/atlasdb/pull/4921#discussion_r462240248", "createdAt": "2020-07-29T11:51:43Z", "author": {"login": "carterkozak"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "diffHunk": "@@ -48,7 +54,19 @@ public void registerMetricsFilter(MetricName metricName, MetricPublicationFilter\n                 -> ImmutableList.<MetricPublicationFilter>builder().addAll(oldFilters).addAll(newFilter).build());\n     }\n \n-    private static boolean allFiltersMatch(List<MetricPublicationFilter> relevantFilters) {\n-        return relevantFilters.stream().allMatch(MetricPublicationFilter::shouldPublish);\n+    private static boolean allFiltersMatch(MetricName metricName, List<MetricPublicationFilter> relevantFilters) {\n+        return relevantFilters.stream().allMatch(filter -> safeShouldPublish(metricName, filter));\n+    }\n+\n+    private static boolean safeShouldPublish(MetricName metricName, MetricPublicationFilter filter) {\n+        try {\n+            return filter.shouldPublish();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b1d2471cc22664c9608c7f923848acfad67dd5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5NjgyNw==", "bodyText": "you're right! good call", "url": "https://github.com/palantir/atlasdb/pull/4921#discussion_r462296827", "createdAt": "2020-07-29T13:27:05Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/MetricPublicationArbiter.java", "diffHunk": "@@ -48,7 +54,19 @@ public void registerMetricsFilter(MetricName metricName, MetricPublicationFilter\n                 -> ImmutableList.<MetricPublicationFilter>builder().addAll(oldFilters).addAll(newFilter).build());\n     }\n \n-    private static boolean allFiltersMatch(List<MetricPublicationFilter> relevantFilters) {\n-        return relevantFilters.stream().allMatch(MetricPublicationFilter::shouldPublish);\n+    private static boolean allFiltersMatch(MetricName metricName, List<MetricPublicationFilter> relevantFilters) {\n+        return relevantFilters.stream().allMatch(filter -> safeShouldPublish(metricName, filter));\n+    }\n+\n+    private static boolean safeShouldPublish(MetricName metricName, MetricPublicationFilter filter) {\n+        try {\n+            return filter.shouldPublish();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MDI0OA=="}, "originalCommit": {"oid": "d9b1d2471cc22664c9608c7f923848acfad67dd5"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2745, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}