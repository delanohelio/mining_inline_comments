{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1OTk1NjAx", "number": 4760, "title": "Filter out leaderPaxos from list of namespaces", "bodyText": "Goals (and why):\nleaderPaxos is not a namespace itself. It should be filtered out when loading namespaces from disk.\nImplementation Description (bullets):\nFilter out \"leaderPaxos\" while loading namespaces\nTesting (What was existing testing like?  What have you done to improve it?):\nNone\nConcerns (what feedback would you like?):\nNone\nWhere should we start reviewing?:\nDiskNamespaceLoader.java\nPriority (whenever / two weeks / yesterday):\nAnytime", "createdAt": "2020-05-11T09:56:48Z", "url": "https://github.com/palantir/atlasdb/pull/4760", "merged": true, "mergeCommit": {"oid": "dbf42358a579df17f6eebd8ea3a2e4a4465e3ceb"}, "closed": true, "closedAt": "2020-05-12T11:10:09Z", "author": {"login": "sudiksha27"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgMl9hgH2gAyNDE1OTk1NjAxOmI4NTg3MjE2MmIwZGE5NzAxODFlM2NiMDZiMDU2NDIzMjA5NzUwNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcghtEOgH2gAyNDE1OTk1NjAxOjcxNjNlNmJjYjA0NmZmNzQ5YWJhYWJiNzJjMzQ5NWRmZDM4ODg0MDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b85872162b0da970181e3cb06b0564232097506d", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/b85872162b0da970181e3cb06b0564232097506d", "committedDate": "2020-05-11T09:51:59Z", "message": "Filter out leaderPaxos from list of namespaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ed3014f266b148d141b223a83526f1ec540cbfc", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7ed3014f266b148d141b223a83526f1ec540cbfc", "committedDate": "2020-05-11T09:52:59Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ff0279ab2ed9de4289908a8efe00192138e9ca7", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/0ff0279ab2ed9de4289908a8efe00192138e9ca7", "committedDate": "2020-05-11T09:52:59Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6485433d5b648e8f449ac8c073db0b532b83c9dc", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/6485433d5b648e8f449ac8c073db0b532b83c9dc", "committedDate": "2020-05-11T09:52:59Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MDM2NzEx", "url": "https://github.com/palantir/atlasdb/pull/4760#pullrequestreview-409036711", "createdAt": "2020-05-11T10:08:41Z", "commit": {"oid": "6485433d5b648e8f449ac8c073db0b532b83c9dc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda8c53e67066cb8865fc1e56eda137ca0c634fc", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/fda8c53e67066cb8865fc1e56eda137ca0c634fc", "committedDate": "2020-05-11T13:14:28Z", "message": "Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6b7995d1635f6d64e304ec8112c7b5917fe6c8", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/8b6b7995d1635f6d64e304ec8112c7b5917fe6c8", "committedDate": "2020-05-11T13:14:42Z", "message": "Merge branch 'namespace_loader_bug_fix' of github.com:palantir/atlasdb into namespace_loader_bug_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27f69c92e554ffb0acfd7d2ee26c7c156efe2673", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/27f69c92e554ffb0acfd7d2ee26c7c156efe2673", "committedDate": "2020-05-11T13:15:40Z", "message": "Merge branch 'develop' into namespace_loader_bug_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c32c77f74c5445272780a03cc9dffe94c5a3d837", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/c32c77f74c5445272780a03cc9dffe94c5a3d837", "committedDate": "2020-05-11T13:20:30Z", "message": "Resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7ac199db33c58cf0848692c03f0547846b97e59b", "committedDate": "2020-05-11T13:31:43Z", "message": "Modify test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjgyMzM2", "url": "https://github.com/palantir/atlasdb/pull/4760#pullrequestreview-409282336", "createdAt": "2020-05-11T15:28:09Z", "commit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyODowOVrOGThcDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTozMTo0N1rOGThmIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMzk4Mw==", "bodyText": "Some improvements I'd suggest here:\n\nThe Path API has a cleaner way of doing this: Paths.get(tempFolder.getRoot().toPath(), namespace).toFile(). The main reason is that we can't guarantee / is always the path separator.\nFile::mkdirs fails silently if creating the directory fails. It's probably better to surface such failures earlier in the test, so debugging is easier.", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423123983", "createdAt": "2020-05-11T15:28:09Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    private DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryTimestampUseCase(NAMESPACE_2);\n+        createDirectoryTimestampUseCase(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE);\n+        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+    }\n+\n+    @Test\n+    public void doesNotLoadLeaderPaxosAsNamespace() {\n+        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(client -> client.value()).collect(\n+                Collectors.toSet());\n+        assertThat(namespaces).containsExactlyInAnyOrder(NAMESPACE_1, NAMESPACE_2);\n+    }\n+\n+    private void createDirectoryForLeaderForEachClientUseCase(String namespace) {\n+        new File(tempFolder.getRoot().toPath() + \"/\" +\n+                Paths.get(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE,\n+                        PaxosTimeLockConstants.MULTI_LEADER_PAXOS_NAMESPACE).toString() + \"/\" +\n+                namespace).mkdirs();\n+    }\n+\n+    private void createDirectoryTimestampUseCase(String namespace) {\n+        new File(tempFolder.getRoot().toPath() + \"/\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDE3Mw==", "bodyText": "(see comment on other mkdirs creation)", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423124173", "createdAt": "2020-05-11T15:28:25Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    private DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryTimestampUseCase(NAMESPACE_2);\n+        createDirectoryTimestampUseCase(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE);\n+        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+    }\n+\n+    @Test\n+    public void doesNotLoadLeaderPaxosAsNamespace() {\n+        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(client -> client.value()).collect(\n+                Collectors.toSet());\n+        assertThat(namespaces).containsExactlyInAnyOrder(NAMESPACE_1, NAMESPACE_2);\n+    }\n+\n+    private void createDirectoryForLeaderForEachClientUseCase(String namespace) {\n+        new File(tempFolder.getRoot().toPath() + \"/\" +\n+                Paths.get(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE,\n+                        PaxosTimeLockConstants.MULTI_LEADER_PAXOS_NAMESPACE).toString() + \"/\" +\n+                namespace).mkdirs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDYwMQ==", "bodyText": "Have a look at TemporaryFolder.after() \ud83d\ude04", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423124601", "createdAt": "2020-05-11T15:29:01Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    private DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryTimestampUseCase(NAMESPACE_2);\n+        createDirectoryTimestampUseCase(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE);\n+        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+    }\n+\n+    @Test\n+    public void doesNotLoadLeaderPaxosAsNamespace() {\n+        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(client -> client.value()).collect(\n+                Collectors.toSet());\n+        assertThat(namespaces).containsExactlyInAnyOrder(NAMESPACE_1, NAMESPACE_2);\n+    }\n+\n+    private void createDirectoryForLeaderForEachClientUseCase(String namespace) {\n+        new File(tempFolder.getRoot().toPath() + \"/\" +\n+                Paths.get(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE,\n+                        PaxosTimeLockConstants.MULTI_LEADER_PAXOS_NAMESPACE).toString() + \"/\" +\n+                namespace).mkdirs();\n+    }\n+\n+    private void createDirectoryTimestampUseCase(String namespace) {\n+        new File(tempFolder.getRoot().toPath() + \"/\" +\n+                namespace).mkdirs();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        tempFolder.delete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNTA0OQ==", "bodyText": "nit: maybe createDirectoryInRootDataDirectory to avoid confusion?", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423125049", "createdAt": "2020-05-11T15:29:38Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    private DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryTimestampUseCase(NAMESPACE_2);\n+        createDirectoryTimestampUseCase(PaxosTimeLockConstants.LEADER_PAXOS_NAMESPACE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNjU2MQ==", "bodyText": "nit: I believe the Rule can be made final, and with that you can make this final and set it here as opposed to inside setup() (the test as written works, this is just general cleanliness).", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423126561", "createdAt": "2020-05-11T15:31:47Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    private DiskNamespaceLoader diskNamespaceLoader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac199db33c58cf0848692c03f0547846b97e59b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/dbe680e5dae26cf6c3faf7c060cc15250aa616e3", "committedDate": "2020-05-11T17:05:39Z", "message": "Address comments -1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODg5MDQ2", "url": "https://github.com/palantir/atlasdb/pull/4760#pullrequestreview-409889046", "createdAt": "2020-05-12T10:02:07Z", "commit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDowMjowN1rOGT_Yrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDowNzoyMFrOGT_kIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxNDYzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public final @Rule TemporaryFolder tempFolder = new TemporaryFolder();\n          \n          \n            \n                @Rule\n          \n          \n            \n                public final TemporaryFolder tempFolder = new TemporaryFolder();\n          \n      \n    \n    \n  \n\nThis is fine also, just for consistency with the other tests.", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423614638", "createdAt": "2020-05-12T10:02:07Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    public final @Rule TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxNDkxOA==", "bodyText": "nit: 2 lines?", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423614918", "createdAt": "2020-05-12T10:02:40Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxNjExMQ==", "bodyText": "nit: Let's use a method reference here (Client::value as opposed to x -> x.value())", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423616111", "createdAt": "2020-05-12T10:04:45Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    public final @Rule TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    public DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryInRootDataDirectory(NAMESPACE_2);\n+    }\n+\n+    @Test\n+    public void doesNotLoadLeaderPaxosAsNamespace() {\n+        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(client -> client.value()).collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYxNzU3MA==", "bodyText": "nit: I think it's probably nicer to do tempFolder.getRoot().toPath().resolve(LEADER_PAXOS_NAMESPACE).resolve(...) which should behave in the same way", "url": "https://github.com/palantir/atlasdb/pull/4760#discussion_r423617570", "createdAt": "2020-05-12T10:07:20Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/test/java/com/palantir/atlasdb/timelock/management/DiskNamespaceLoaderTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.management;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import com.palantir.atlasdb.timelock.paxos.PaxosTimeLockConstants;\n+\n+public class DiskNamespaceLoaderTest {\n+    private static final String NAMESPACE_1 = \"namespace_1\";\n+    private static final String NAMESPACE_2 = \"namespace_2\";\n+\n+\n+    public final @Rule TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    public DiskNamespaceLoader diskNamespaceLoader;\n+\n+    @Before\n+    public void setup() {\n+        diskNamespaceLoader = new DiskNamespaceLoader(tempFolder.getRoot().toPath());\n+        createDirectoryForLeaderForEachClientUseCase(NAMESPACE_1);\n+        createDirectoryInRootDataDirectory(NAMESPACE_2);\n+    }\n+\n+    @Test\n+    public void doesNotLoadLeaderPaxosAsNamespace() {\n+        Set<String> namespaces = diskNamespaceLoader.getAllPersistedNamespaces().stream().map(client -> client.value()).collect(\n+                Collectors.toSet());\n+        assertThat(namespaces).containsExactlyInAnyOrder(NAMESPACE_1, NAMESPACE_2);\n+    }\n+\n+    private void createDirectoryForLeaderForEachClientUseCase(String namespace) {\n+        if (Paths.get(tempFolder.getRoot().toPath().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe680e5dae26cf6c3faf7c060cc15250aa616e3"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7163e6bcb046ff749abaabb72c3495dfd3888408", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/7163e6bcb046ff749abaabb72c3495dfd3888408", "committedDate": "2020-05-12T10:27:45Z", "message": "Address comments - 2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}