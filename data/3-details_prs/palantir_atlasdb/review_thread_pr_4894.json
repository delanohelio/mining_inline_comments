{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODY1NjI0", "number": 4894, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzozNzoxNVrOEM5f4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0MTo0MVrOEM7QKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTYwNDE2OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzozNzoxNVrOGvRgNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzozNzoxNVrOGvRgNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyMzAzMQ==", "bodyText": "Already enforced elsewhere (i.e. must have a snapshot before processing successes), but this is just because we have to handle optionals everywhere.", "url": "https://github.com/palantir/atlasdb/pull/4894#discussion_r452223031", "createdAt": "2020-07-09T13:37:15Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -120,6 +121,13 @@ private IdentifiedVersion getLatestVersionAndVerify(IdentifiedVersion endVersion\n \n     private void processSuccess(LockWatchStateUpdate.Success success) {\n         Preconditions.checkState(latestVersion.isPresent(), \"Must have a known version to process successful updates\");\n+        Optional<IdentifiedVersion> snapshotVersion = snapshot.getSnapshotVersion();\n+        Preconditions.checkState(snapshotVersion.isPresent(),\n+                \"Must have a snapshot before processing successful updates\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f7e2745177983a34a0d42476f53f4e662a1b51"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTYwNTA1OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzozNzoyNVrOGvRgwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzozNzoyNVrOGvRgwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyMzE3MA==", "bodyText": "Drive by fix.", "url": "https://github.com/palantir/atlasdb/pull/4894#discussion_r452223170", "createdAt": "2020-07-09T13:37:25Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -77,7 +78,7 @@\n             LockEvent.builder(ImmutableSet.of(DESCRIPTOR), LockToken.of(EVENT2_UUID)).build(7L);\n \n     private static final UUID LEADER = UUID.fromString(\"470c855e-f77b-44df-b56a-14d3df085dbc\");\n-    public static final LockWatchStateUpdate.Success SUCCESS_2 = LockWatchStateUpdate.success(LEADER, 7L,\n+    private static final LockWatchStateUpdate.Success SUCCESS_2 = LockWatchStateUpdate.success(LEADER, 7L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f7e2745177983a34a0d42476f53f4e662a1b51"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTg5MTYwOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0MTo0MVrOGvUUxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0MzowN1rOGvUY_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2OTI1NQ==", "bodyText": "Checked that this should get retried both by atlasdb-proxy and atlasdb internally.", "url": "https://github.com/palantir/atlasdb/pull/4894#discussion_r452269255", "createdAt": "2020-07-09T14:41:41Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -120,6 +121,13 @@ private IdentifiedVersion getLatestVersionAndVerify(IdentifiedVersion endVersion\n \n     private void processSuccess(LockWatchStateUpdate.Success success) {\n         Preconditions.checkState(latestVersion.isPresent(), \"Must have a known version to process successful updates\");\n+        Optional<IdentifiedVersion> snapshotVersion = snapshot.getSnapshotVersion();\n+        Preconditions.checkState(snapshotVersion.isPresent(),\n+                \"Must have a snapshot before processing successful updates\");\n+\n+        if (success.lastKnownVersion() < snapshotVersion.get().version()) {\n+            throw new TransactionLockWatchFailedException(\"Cannot process events before the oldest event\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f7e2745177983a34a0d42476f53f4e662a1b51"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI3MDMzNA==", "bodyText": "You might wanna add a bit more around the \"this will be retried and should happen very rarely\".", "url": "https://github.com/palantir/atlasdb/pull/4894#discussion_r452270334", "createdAt": "2020-07-09T14:43:07Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -120,6 +121,13 @@ private IdentifiedVersion getLatestVersionAndVerify(IdentifiedVersion endVersion\n \n     private void processSuccess(LockWatchStateUpdate.Success success) {\n         Preconditions.checkState(latestVersion.isPresent(), \"Must have a known version to process successful updates\");\n+        Optional<IdentifiedVersion> snapshotVersion = snapshot.getSnapshotVersion();\n+        Preconditions.checkState(snapshotVersion.isPresent(),\n+                \"Must have a snapshot before processing successful updates\");\n+\n+        if (success.lastKnownVersion() < snapshotVersion.get().version()) {\n+            throw new TransactionLockWatchFailedException(\"Cannot process events before the oldest event\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2OTI1NQ=="}, "originalCommit": {"oid": "65f7e2745177983a34a0d42476f53f4e662a1b51"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2721, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}