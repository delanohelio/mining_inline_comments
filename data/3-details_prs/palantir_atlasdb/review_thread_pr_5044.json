{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NTIyOTA2", "number": 5044, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxMjo0NFrOEvZMqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyOToxOFrOEvr1kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTMxMzY4OnYy", "diffSide": "LEFT", "path": ".baseline/checkstyle/checkstyle-suppressions.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxMjo0NFrOHkWdBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxMjo0NFrOHkWdBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3ODY2Mw==", "bodyText": "moved to custom-suppressions.xml per gradle-baseline standard", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507878663", "createdAt": "2020-10-19T16:12:44Z", "author": {"login": "schlosna"}, "path": ".baseline/checkstyle/checkstyle-suppressions.xml", "diffHunk": "@@ -21,17 +25,5 @@\n     <suppress files=\"\\.(bdr|eot|gif|gzip|jar|json|otf|png|svg|ttf|woff|zip)$\" checks=\"NewlineAtEndOfFile\" />\n \n     <!-- Generated code should not be subjected to checkstyle. -->\n-    <suppress files=\"[/\\\\].*[/\\\\]generated_src[/\\\\]\" checks=\".\" />\n-    <suppress files=\"[/\\\\].*[/\\\\]generated_testSrc[/\\\\]\" checks=\".\" />\n-    <suppress files=\"[/\\\\].*[/\\\\]generated[/\\\\]\" checks=\".\" />\n-\n-    <!-- Certain AtlasDB projects are ignored. -->\n-    <suppress files=\"atlasdb-client/*\" checks=\".\" />\n-    <suppress files=\"atlasdb-commons/*\" checks=\".\" />\n-    <suppress files=\"atlasdb-console/*\" checks=\".\" />\n-    <suppress files=\"atlasdb-jdbc/*\" checks=\".\" />\n-    <suppress files=\"atlasdb-jdbc-tests/*\" checks=\".\" />\n-    <suppress files=\"cassandra-partitioner/*\" checks=\".\" />\n-    <suppress files=\"commons-db/*\" checks=\".\" />\n-    <suppress files=\"lock-impl/*\" checks=\".\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTMyMDE4OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/impl/TableSplittingKeyValueService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxNDoxNlrOHkWhIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjo1NToyNFrOHkYJWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3OTcxMw==", "bodyText": "nice", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507879713", "createdAt": "2020-10-19T16:14:16Z", "author": {"login": "carterkozak"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/impl/TableSplittingKeyValueService.java", "diffHunk": "@@ -377,8 +378,7 @@ public void compactInternally(TableReference tableRef, boolean inMaintenanceMode\n     public ClusterAvailabilityStatus getClusterAvailabilityStatus() {\n         return delegates.stream()\n                 .map(kvs -> kvs.getClusterAvailabilityStatus())\n-                .sorted()\n-                .findFirst()\n+                .min(Comparator.naturalOrder())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccf4cba94bfc7825506a3e184f4401e898258184"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjM5Mw==", "bodyText": "This was an automated gradle-baseline refactor", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507906393", "createdAt": "2020-10-19T16:55:24Z", "author": {"login": "schlosna"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/impl/TableSplittingKeyValueService.java", "diffHunk": "@@ -377,8 +378,7 @@ public void compactInternally(TableReference tableRef, boolean inMaintenanceMode\n     public ClusterAvailabilityStatus getClusterAvailabilityStatus() {\n         return delegates.stream()\n                 .map(kvs -> kvs.getClusterAvailabilityStatus())\n-                .sorted()\n-                .findFirst()\n+                .min(Comparator.naturalOrder())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3OTcxMw=="}, "originalCommit": {"oid": "ccf4cba94bfc7825506a3e184f4401e898258184"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTMyMTcyOnYy", "diffSide": "RIGHT", "path": ".baseline/checkstyle/custom-suppressions.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxNDo0MlrOHkWiMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxNDo0MlrOHkWiMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3OTk4NA==", "bodyText": "I opted to skip these checks for now so that we have the vast majority of improved baseline checks, and we can burn these down in smaller, independent PRs that are easier to review", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507879984", "createdAt": "2020-10-19T16:14:42Z", "author": {"login": "schlosna"}, "path": ".baseline/checkstyle/custom-suppressions.xml", "diffHunk": "@@ -0,0 +1,40 @@\n+<?xml version=\"1.0\"?>\n+<!DOCTYPE suppressions PUBLIC\n+        \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"\n+        \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n+\n+<!-- IMPORTANT ECLIPSE NOTE: If you change this file, you must restart Eclipse\n+ for your changes to take effect in its Checkstyle integration. -->\n+\n+<!-- custom-suppressions.xml allows users to specify suppressions that will not be overridden by\n+     baselineUpdateConfig -->\n+<suppressions>\n+    <!-- Generated code should not be subjected to checkstyle. -->\n+    <suppress files=\"[/\\\\].*[/\\\\]generated_src[/\\\\]\" checks=\".\"/>\n+    <suppress files=\"[/\\\\].*[/\\\\]generated_testSrc[/\\\\]\" checks=\".\"/>\n+    <suppress files=\"[/\\\\].*[/\\\\]generated[/\\\\]\" checks=\".\"/>\n+\n+    <!-- ignore tests until they can be remediated -->\n+    <suppress files=\"[/\\\\]src[/\\\\].*[Tt]est[/\\\\](java|groovy)[/\\\\]\" checks=\".\" />\n+\n+    <!-- Skip some explicit checks until they can be remediated -->\n+    <suppress files=\".*\" checks=\"AnnotationUseStyle\"/>\n+    <suppress files=\".*\" checks=\"AvoidStaticImport\"/>\n+    <suppress files=\".*\" checks=\"CyclomaticComplexity\"/>\n+    <suppress files=\".*\" checks=\"DesignForExtension\"/>\n+    <suppress files=\".*\" checks=\"RegexpSinglelineJava\"/>\n+    <suppress files=\".*\" checks=\"RedundantModifier\"/>\n+    <suppress files=\".*\" checks=\"SummaryJavadocCheck\"/>\n+    <suppress files=\".*\" checks=\"VisibilityModifier\"/>\n+    <suppress files=\".*\" id=\"BanGuavaCaches\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTMyODY4OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxNjowNVrOHkWmMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxNjowNVrOHkWmMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MTAxMQ==", "bodyText": "sorted these to simplify future updates.", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507881011", "createdAt": "2020-10-19T16:16:05Z", "author": {"login": "schlosna"}, "path": "build.gradle", "diffHunk": "@@ -12,18 +12,19 @@ buildscript {\n     }\n \n     dependencies {\n-        classpath 'com.netflix.nebula:gradle-info-plugin:7.1.4'\n         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'\n-        classpath 'com.palantir.metricschema:gradle-metric-schema:0.5.5'\n-        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.9.8'\n-        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1'\n-        classpath 'com.palantir.baseline:gradle-baseline-java:1.8.2'\n+        classpath 'com.netflix.nebula:gradle-info-plugin:7.1.4'\n+        classpath 'com.netflix.nebula:nebula-publishing-plugin:17.2.1'\n+        classpath 'com.palantir.baseline:gradle-baseline-java:3.43.0'\n         classpath 'com.palantir.gradle.conjure:gradle-conjure:4.22.0'\n-        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.11.0'\n+        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.0.1'\n+        classpath 'com.palantir.metricschema:gradle-metric-schema:0.5.5'\n         classpath 'com.palantir.sls-packaging:gradle-sls-packaging:4.10.1'\n-        classpath 'com.netflix.nebula:nebula-publishing-plugin:17.2.1'\n         classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0'\n+        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1'\n+        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.11.0'\n         classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'\n+        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.9.8'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTMzNzIzOnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-5044.v2.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxODowN1rOHkWrYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoxODowN1rOHkWrYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4MjMzNg==", "bodyText": "I don't think we need a changelog for these unless there are specific fixes we want to call out.\nIf we keep the changelog we should remove the template components and write a a short description of the pieces consumers may be interested in.", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507882336", "createdAt": "2020-10-19T16:18:07Z", "author": {"login": "carterkozak"}, "path": "changelog/@unreleased/pr-5044.v2.yml", "diffHunk": "@@ -0,0 +1,34 @@\n+type: improvement\n+improvement:\n+  description: |-\n+    Upgrade gradle-baseline\n+\n+    **Goals (and why)**:\n+    AtlasDB's gradle-baseline version is significantly out of date and is not being kept up-to-date by excavators. Similar to #5043 , this upgrades the gradle-baseline version used so that atlasdb is enforcing (most of) the checks baseline provides\n+\n+    **Implementation Description (bullets)**:\n+\n+    Steps below can be seen in individual commits on this PR\n+\n+    - Apply gradle-palantir-java-format plugin\n+    - Bump gradle-baseline plugin version\n+    - Update baseline configs\n+    - Bump error-prone and immutables versions for compatibility with error-prone\n+    - Apply automated gradle-baseline refactorings (`./gradlew compileJava compileTestJava -PrefasterApply -PerrorProneApply`)\n+    - Reformat (`./gradlew format`)\n+    - Temporarily relax some error-prone checks from error to warning (to be fixed iteratively in follow up PRs after merge)\n+    - Workaround error-prone fatal error with lambda method reference check\n+\n+    **Testing (What was existing testing like?  What have you done to improve it?)**:\n+    Local compilation\n+\n+    **Concerns (what feedback would you like?)**:\n+    The reformat generated a ton of diffs, we may want to split that out separately, but I wanted to use the automated refactorings which also generate a bunch of diffs.\n+\n+    **Where should we start reviewing?**:\n+    `build.gradle` has most of the changes and temporary exclusions.\n+\n+    **Priority (whenever / two weeks / yesterday)**:\n+    Whenever\n+  links:\n+  - https://github.com/palantir/atlasdb/pull/5044", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e4d102be2104e628dff663b7922cbd4025aa15"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM1MDY0OnYy", "diffSide": "LEFT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMToxNFrOHkWzmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMToxNFrOHkWzmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NDQ0MA==", "bodyText": "applied by default now https://github.com/palantir/gradle-baseline/blob/32b092e918cb3f46380273fd7957a26b09ee0d6a/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/Baseline.java#L36", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507884440", "createdAt": "2020-10-19T16:21:14Z", "author": {"login": "schlosna"}, "path": "build.gradle", "diffHunk": "@@ -35,8 +36,7 @@ plugins {\n     id 'com.google.protobuf' version '0.8.10'\n }\n \n-apply plugin: 'com.palantir.baseline-config'\n-apply plugin: 'com.palantir.baseline-circleci'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM1MTkxOnYy", "diffSide": "LEFT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMTozNVrOHkW0Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMTozNVrOHkW0Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NDY0Nw==", "bodyText": "applied by default now https://github.com/palantir/gradle-baseline/blob/32b092e918cb3f46380273fd7957a26b09ee0d6a/gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/Baseline.java#L35", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507884647", "createdAt": "2020-10-19T16:21:35Z", "author": {"login": "schlosna"}, "path": "build.gradle", "diffHunk": "@@ -35,8 +36,7 @@ plugins {\n     id 'com.google.protobuf' version '0.8.10'\n }\n \n-apply plugin: 'com.palantir.baseline-config'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM1NDA4OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMjowM1rOHkW1wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMjowM1rOHkW1wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NDk5Mw==", "bodyText": "use standard formatting to streamline the baseline refactorings", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507884993", "createdAt": "2020-10-19T16:22:03Z", "author": {"login": "schlosna"}, "path": "build.gradle", "diffHunk": "@@ -65,6 +65,7 @@ allprojects {\n \n     apply plugin: 'java-library'\n     apply plugin: 'org.inferred.processors'  // installs the \"processor\" configuration needed for baseline-error-prone\n+    apply plugin: 'com.palantir.java-format'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM2MjI0OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMzo0OVrOHkW6kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyMzo0OVrOHkW6kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NjIyNw==", "bodyText": "relaxing from error to warning for now, will burn down in separate PRs", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507886227", "createdAt": "2020-10-19T16:23:49Z", "author": {"login": "schlosna"}, "path": "build.gradle", "diffHunk": "@@ -104,6 +105,44 @@ allprojects {\n             it.substitute it.module('org.glassfish.web:javax.el') with it.module('org.glassfish:jakarta.el:3.0.3')\n         }\n     }\n+\n+    plugins.withId('com.palantir.baseline-error-prone', {\n+        tasks.withType(JavaCompile).configureEach {\n+            options.errorprone.disableWarningsInGeneratedCode = true\n+            options.errorprone.errorproneArgs.addAll([\n+                '-XepDisableWarningsInGeneratedCode',\n+                '-XepExcludedPaths:.*(generated).*',\n+            ])\n+\n+            // temporarily relax constraints until we can fix all violations\n+            Set<String> errorsToRelax = [\n+                'CatchBlockLogException',\n+                'CheckReturnValue',\n+                'DangerousCompletableFutureUsage',\n+                'DoNotMock',\n+                'ExecutorSubmitRunnableFutureIgnored',\n+                'ExtendsErrorOrThrowable',\n+                'ImmutablesBuilderMissingInitialization',\n+                'InputStreamSlowMultibyteRead',\n+                'LogSafePreconditionsMessageFormat',\n+                'PreconditionsConstantMessage',\n+                'PreconditionsInvalidPlaceholder',\n+                'PreferSafeLoggingPreconditions',\n+                'ReadReturnValueIgnored',\n+                'ReferenceEquality',\n+                'ReturnValueIgnored',\n+                'SafeLoggingExceptionMessageFormat',\n+                'Slf4jLevelCheck',\n+                'StreamOfEmpty',\n+                'StrictUnusedVariable',\n+                'ValidateConstantMessage',\n+            ]\n+            for (String checkName : errorsToRelax) {\n+                options.errorprone.warn(checkName)\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM2NzgwOnYy", "diffSide": "LEFT", "path": "gradle/baseline.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNTowNFrOHkW-AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjoyNFrOHkyhGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NzEwNQ==", "bodyText": "moved all of this to build.gradle and this is no longer opt-in, its default on everywhere", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507887105", "createdAt": "2020-10-19T16:25:04Z", "author": {"login": "schlosna"}, "path": "gradle/baseline.gradle", "diffHunk": "@@ -1,42 +0,0 @@\n-apply plugin: 'com.palantir.baseline-checkstyle'\n-\n-// ./gradlew compileJava compileTestJava -PenableErrorProne=true\n-if (enableErrorProne.toBoolean()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODQ1OA==", "bodyText": "So reading through it looks like this was doing some per main/test package differences, but I think it's fine. We should quickly drive all the turned off warnings.", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r508338458", "createdAt": "2020-10-20T09:12:24Z", "author": {"login": "jkozlowski"}, "path": "gradle/baseline.gradle", "diffHunk": "@@ -1,42 +0,0 @@\n-apply plugin: 'com.palantir.baseline-checkstyle'\n-\n-// ./gradlew compileJava compileTestJava -PenableErrorProne=true\n-if (enableErrorProne.toBoolean()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NzEwNQ=="}, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM3NTU2OnYy", "diffSide": "LEFT", "path": "gradle/idea.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNjo1MFrOHkXCxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNjo1MFrOHkXCxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4ODMyNw==", "bodyText": "defaulting to gradle-baseline's IntelliJ Idea integration configs. Checkstyle now works properly and compiles fine for me in IDEA 2020.3 CE EAP.", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507888327", "createdAt": "2020-10-19T16:26:50Z", "author": {"login": "schlosna"}, "path": "gradle/idea.gradle", "diffHunk": "@@ -1,215 +0,0 @@\n-apply plugin: 'java-library'\n-apply plugin: 'idea'\n-\n-assert sourceCompatibility instanceof JavaVersion;\n-assert targetCompatibility instanceof JavaVersion;\n-assert sourceCompatibility == targetCompatibility;\n-\n-project.tasks.withType(JavaCompile) { JavaCompile task ->\n-  // This actually runs javax.tools.JavaCompiler in-process, but we can still pass arguments\n-  // as though it were running the javac executable.\n-  task.options.compilerArgs << \"-XDignore.symbol.file\";\n-  task.options.compilerArgs << \"-Xlint:none\";\n-  task.options.compilerArgs << '-encoding' << 'utf-8';\n-  task.options.encoding = 'UTF-8'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM3ODgwOnYy", "diffSide": "RIGHT", "path": "gradle/shared.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNzozOFrOHkXE4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNzozOFrOHkXE4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4ODg2Nw==", "bodyText": "We can probably clean up more of these in a follow up PR", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507888867", "createdAt": "2020-10-19T16:27:38Z", "author": {"login": "schlosna"}, "path": "gradle/shared.gradle", "diffHunk": "@@ -27,7 +26,6 @@ dependencies {\n     // Dont add Java8 compile/runtime dependencies here as commons-executors needs to be compatible with Java6 clients\n     compile group: 'com.google.code.findbugs', name: 'jsr305'\n     compile group: 'com.google.code.findbugs', name: 'findbugs-annotations'\n-    checkstyle group: 'com.puppycrawl.tools', name: 'checkstyle', version: libVersions.checkstyle\n     testCompile group: 'junit', name: 'junit'\n     testCompile group: 'org.assertj', name: 'assertj-core'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM4NDI2OnYy", "diffSide": "LEFT", "path": "gradle/versions.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyOTowOFrOHkXIjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyOTowOFrOHkXIjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4OTgwNQ==", "bodyText": "AtlasDB has had JDK8 as minimum dependency for a while, and this old version of checkstyle isn't compatible with gradle-baseline's checkstyle rules, and this old version would breaks Idea Checkstyle integration, but now this all works properly.", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507889805", "createdAt": "2020-10-19T16:29:08Z", "author": {"login": "schlosna"}, "path": "gradle/versions.gradle", "diffHunk": "@@ -28,7 +28,6 @@ ext.libVersions =\n     protoc: '3.5.1',\n     findbugs: '1.3.9',\n     hikariCP: '3.4.1',\n-    checkstyle: '6.18',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM4NzAwOnYy", "diffSide": "RIGHT", "path": "versions.props", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyOTo0NVrOHkXKVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyOTo0NVrOHkXKVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MDI2Mg==", "bodyText": "bumping this was necessary to fix gradle-baseline & error-prone compatibility", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r507890262", "createdAt": "2020-10-19T16:29:45Z", "author": {"login": "schlosna"}, "path": "versions.props", "diffHunk": "@@ -45,7 +45,7 @@ org.clojure:clojure = 1.8.0\n org.codehaus.groovy:* = 2.4.4\n org.derive4j:* = 1.1.1\n org.freemarker:freemarker = 2.3.29\n-org.immutables:* = 2.8.2\n+org.immutables:* = 2.8.8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fc524ef2d555cadf7ef92a7051bbe247a6db90"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDM0NzkxOnYy", "diffSide": "RIGHT", "path": ".baseline/idea/intellij-java-palantir-style.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyNDo1OVrOHkzCyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyNDo1OVrOHkzCyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NzA4MQ==", "bodyText": "\ud83d\udcaf", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r508347081", "createdAt": "2020-10-20T09:24:59Z", "author": {"login": "jeremyk-91"}, "path": ".baseline/idea/intellij-java-palantir-style.xml", "diffHunk": "@@ -100,30 +87,44 @@\n           <option name=\"ALIGN_MULTILINE_PARAMETERS\" value=\"false\" />\n           <option name=\"ALIGN_MULTILINE_RESOURCES\" value=\"false\" />\n           <option name=\"ARRAY_INITIALIZER_WRAP\" value=\"1\" />\n+          <option name=\"ASSIGNMENT_WRAP\" value=\"1\" />\n           <option name=\"BINARY_OPERATION_SIGN_ON_NEXT_LINE\" value=\"true\" />\n           <option name=\"BINARY_OPERATION_WRAP\" value=\"1\" />\n           <option name=\"BLANK_LINES_AROUND_METHOD_IN_INTERFACE\" value=\"0\" />\n-          <option name=\"CALL_PARAMETERS_WRAP\" value=\"1\" />\n+          <option name=\"CALL_PARAMETERS_LPAREN_ON_NEXT_LINE\" value=\"true\" />\n+          <option name=\"CALL_PARAMETERS_WRAP\" value=\"5\" />\n           <option name=\"DOWHILE_BRACE_FORCE\" value=\"3\" />\n+          <option name=\"ENUM_CONSTANTS_WRAP\" value=\"2\" />\n           <option name=\"EXTENDS_KEYWORD_WRAP\" value=\"1\" />\n           <option name=\"EXTENDS_LIST_WRAP\" value=\"1\" />\n+          <option name=\"FIELD_ANNOTATION_WRAP\" value=\"1\" />\n           <option name=\"FOR_BRACE_FORCE\" value=\"3\" />\n           <option name=\"FOR_STATEMENT_WRAP\" value=\"1\" />\n           <option name=\"IF_BRACE_FORCE\" value=\"3\" />\n-          <option name=\"KEEP_BLANK_LINES_BEFORE_RBRACE\" value=\"1\" />\n+          <option name=\"KEEP_BLANK_LINES_BEFORE_RBRACE\" value=\"0\" />\n+          <option name=\"KEEP_BLANK_LINES_IN_CODE\" value=\"1\" />\n+          <option name=\"KEEP_BLANK_LINES_IN_DECLARATIONS\" value=\"1\" />\n           <option name=\"KEEP_CONTROL_STATEMENT_IN_ONE_LINE\" value=\"false\" />\n           <option name=\"KEEP_FIRST_COLUMN_COMMENT\" value=\"false\" />\n           <option name=\"KEEP_SIMPLE_CLASSES_IN_ONE_LINE\" value=\"true\" />\n+          <option name=\"KEEP_SIMPLE_LAMBDAS_IN_ONE_LINE\" value=\"true\" />\n           <option name=\"KEEP_SIMPLE_METHODS_IN_ONE_LINE\" value=\"true\" />\n-          <option name=\"METHOD_PARAMETERS_WRAP\" value=\"1\" />\n+          <option name=\"LINE_COMMENT_AT_FIRST_COLUMN\" value=\"false\" />\n+          <option name=\"LINE_COMMENT_ADD_SPACE\" value=\"true\" />\n+          <option name=\"METHOD_CALL_CHAIN_WRAP\" value=\"5\" />\n+          <option name=\"METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE\" value=\"true\" />\n+          <option name=\"METHOD_PARAMETERS_WRAP\" value=\"5\" />\n+          <option name=\"OPTIMIZE_IMPORTS_ON_THE_FLY\" value=\"true\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab3a67e66edfc230b0edc8a512a34b052ab7c89c"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDM2NzU1OnYy", "diffSide": "RIGHT", "path": "atlasdb-console/src/main/groovy/com/palantir/atlasdb/console/AtlasConsoleBinder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyOToxOFrOHkzOqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0Mjo1M1rOHkzxvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1MDEyMQ==", "bodyText": "Is this OK? Lines 114-115 suggests that (authorized) should be indicated on both lines", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r508350121", "createdAt": "2020-10-20T09:29:18Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-console/src/main/groovy/com/palantir/atlasdb/console/AtlasConsoleBinder.java", "diffHunk": "@@ -99,7 +99,8 @@ public Object call() {\n             System.out.println(\"\\nTopics with help messages:\\n\"); // (authorized)\n             System.out.println(help.keySet().toString()); // (authorized)\n             System.out.println(\"\\nCall help(\\'topic\\') to view information on a specific topic.\\n\"); // (authorized)\n-            System.out.println(\"If you'd like to enable database mutations (not recommended), re-run console with the 'mutations_enabled' flag\\n\"); // (authorized)\n+            System.out.println(\"If you'd like to enable database mutations (not recommended), re-run console with the\"\n+                    + \" 'mutations_enabled' flag\\n\"); // (authorized)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab3a67e66edfc230b0edc8a512a34b052ab7c89c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1OTEwMQ==", "bodyText": "Had a look internally - this is probably OK (see e.g. the large internal product's class that inspects atlas's lock service)", "url": "https://github.com/palantir/atlasdb/pull/5044#discussion_r508359101", "createdAt": "2020-10-20T09:42:53Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-console/src/main/groovy/com/palantir/atlasdb/console/AtlasConsoleBinder.java", "diffHunk": "@@ -99,7 +99,8 @@ public Object call() {\n             System.out.println(\"\\nTopics with help messages:\\n\"); // (authorized)\n             System.out.println(help.keySet().toString()); // (authorized)\n             System.out.println(\"\\nCall help(\\'topic\\') to view information on a specific topic.\\n\"); // (authorized)\n-            System.out.println(\"If you'd like to enable database mutations (not recommended), re-run console with the 'mutations_enabled' flag\\n\"); // (authorized)\n+            System.out.println(\"If you'd like to enable database mutations (not recommended), re-run console with the\"\n+                    + \" 'mutations_enabled' flag\\n\"); // (authorized)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1MDEyMQ=="}, "originalCommit": {"oid": "ab3a67e66edfc230b0edc8a512a34b052ab7c89c"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2651, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}