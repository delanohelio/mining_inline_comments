{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNTYyNTgy", "number": 5146, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyNjoxMFrOFA0wpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyODowOFrOFA00cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDA4NzQwOnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-5146.v2.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyNjoxMFrOH_TKwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyNjoxMFrOH_TKwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzNjM4NA==", "bodyText": "I'd probably re-phrase this in terms of what the client sees (i.e. the impl details are not needed, I think the last part is the key here - The LockWatchManager now only re-registers the latest set of requested watches when TimeLock is bounced).", "url": "https://github.com/palantir/atlasdb/pull/5146#discussion_r536136384", "createdAt": "2020-12-04T14:26:10Z", "author": {"login": "jeremyk-91"}, "path": "changelog/@unreleased/pr-5146.v2.yml", "diffHunk": "@@ -0,0 +1,9 @@\n+type: fix\n+fix:\n+  description: Calling registerWatches now tells the lockWatchManager to _only_ watch\n+    those watches, instead of adding it to the set of all registered watches so far.\n+    Note that this does not affect Timelock (which will still contain all watches\n+    registered so far), but rolling Timelock will mean that the LockWatchManager now\n+    only re-registers the latest requested watches.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91703b21c45509476995f4023198fd8a48f99554"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDA5NzEyOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyODowOFrOH_TQTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyODowOFrOH_TQTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzNzgwNw==", "bodyText": "the way this works in combination with the javadoc is strange (it seems like register should definitely be commutative and distributive over union based on its javadoc; that it's not is a bit weird and so needs calling out I think, at least internally). I'd suggest we either\n\nkeep this endpoint the way it is, and have a new endpoint called registerPreciselyWatches or something like that that makes it apparent that the client will no longer request previously registered things to be watched.\nor just rename this to registerPreciselyWatches, if the previous behaviour is not used anywhere", "url": "https://github.com/palantir/atlasdb/pull/5146#discussion_r536137807", "createdAt": "2020-12-04T14:28:08Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchManagerImpl.java", "diffHunk": "@@ -70,6 +70,7 @@ public void close() {\n \n     @Override\n     public void registerWatches(Set<LockWatchReferences.LockWatchReference> newLockWatches) {\n+        lockWatchReferences.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91703b21c45509476995f4023198fd8a48f99554"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2534, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}