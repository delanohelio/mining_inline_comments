{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODY1ODAw", "number": 4686, "title": "[PDS-111849] Rolling in the Deep, Part 1: Failing Test & Rerouting Internode Calls Through Proxies", "bodyText": "Goals (and why):\n\nSee PDS-111849.\nWe have landed on a very plausible RCA, and it's usually good to validate this kind of thing by writing a test that demonstrates what we may have fixed. Here, this test (idea originally from @j-baker) effectively puts a timelock into a mode where it's still alive, but shutting down. Furthermore, I changed it so it takes two seconds before failing, to replicate conditions observed on some internal servers. This is unfortunately a bit more invasive than what I would have liked, but it'll do.\n\nImplementation Description (bullets):\n\nWrite a failing test (see stressTest: the number of threads explodes under these circumstances).\nRewire the MultiNodePaxosTimeLockIntegrationTest to go exclusively through WireMock proxies that proxy to the relevant server endpoints. This is basically a glorified, but importantly, dynamically changeable in test filter.\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nDoesn't really change production code. Existing tests passing would be validation that I haven't broken the world in my refactoring.\n\nConcerns (what feedback would you like?):\n\nWe now use hard-coded https ports for the wiremock servers. Is that really bad? I think we already depended on the hard-coded timelock ones, so this is just another set of numbers.\n\nWhere should we start reviewing?: MultiNodePaxosTimeLockServerIntegrationTest.java\nPriority (whenever / two weeks / yesterday): Ideally by Wednesday", "createdAt": "2020-03-30T19:57:45Z", "url": "https://github.com/palantir/atlasdb/pull/4686", "merged": true, "mergeCommit": {"oid": "2936f29213806e0c8ffb174dc7c9735ce0a6ee2d"}, "closed": true, "closedAt": "2020-03-31T13:12:46Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSy_C1AH2gAyMzk1ODY1ODAwOjZlMDU0YWZiZjlmZDYyZGRlYmFhNzEyN2NlODRmNDA5YTMxY2U5YmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTCwjOgH2gAyMzk1ODY1ODAwOjE4Y2YyYTA5NWNlOTllYjllN2EwZjY1YjkyZTAzOGY2ZDU5MDZmN2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e054afbf9fd62ddebaa7127ce84f409a31ce9bf", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/6e054afbf9fd62ddebaa7127ce84f409a31ce9bf", "committedDate": "2020-03-30T18:40:50Z", "message": "Proxying"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81947c5302ca16242b9cadfef3522727ebf27a8f", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/81947c5302ca16242b9cadfef3522727ebf27a8f", "committedDate": "2020-03-30T19:28:41Z", "message": "Fix race condition and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88e6c03742c046ad39a6a3379f7d552b71a6cd0a", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/88e6c03742c046ad39a6a3379f7d552b71a6cd0a", "committedDate": "2020-03-30T19:46:57Z", "message": "baseline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09dd62a53f61b42704c967ee94be117b3d9f77ec", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/09dd62a53f61b42704c967ee94be117b3d9f77ec", "committedDate": "2020-03-30T19:51:51Z", "message": "Gradle shenanigans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a404dbdbc4a59859af5c97b8f1a67e58fef01a2", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/4a404dbdbc4a59859af5c97b8f1a67e58fef01a2", "committedDate": "2020-03-31T09:19:49Z", "message": "Fix race condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09e6bcded6b01dfc022d1ee16c693a325d694b7a", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/09e6bcded6b01dfc022d1ee16c693a325d694b7a", "committedDate": "2020-03-31T09:20:08Z", "message": "unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Njc3NTI0", "url": "https://github.com/palantir/atlasdb/pull/4686#pullrequestreview-384677524", "createdAt": "2020-03-31T12:22:57Z", "commit": {"oid": "09e6bcded6b01dfc022d1ee16c693a325d694b7a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjoyMjo1N1rOF-TGhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjoyMzo0N1rOF-TIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg2ODk5OA==", "bodyText": "This test will fail even if the buildup occurs in the warmup period. Maybe at least indicate in the reason for failure if it occurred during warmup or after we simulated shutting down?", "url": "https://github.com/palantir/atlasdb/pull/4686#discussion_r400868998", "createdAt": "2020-03-31T12:22:57Z", "author": {"login": "gmaretic"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -282,6 +285,30 @@ public void multipleLockRequestsWithTheSameIdAreGranted() {\n         }\n     }\n \n+    @Test\n+    @Ignore // TODO (jkong): Fix this test by reworking the threading model.\n+    public void stressTest() {\n+        TestableTimelockServer nonLeader = Iterables.getFirst(cluster.nonLeaders(client.namespace()).values(), null);\n+        int startingNumThreads = ManagementFactory.getThreadMXBean().getThreadCount();\n+        try {\n+            for (int i = 0; i < 10_000; i++) { // Needed as it takes a while for the thread buildup to occur\n+                client.getFreshTimestamp();\n+                assertThat(ManagementFactory.getThreadMXBean().getThreadCount())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e6bcded6b01dfc022d1ee16c693a325d694b7a"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg2OTUxNg==", "bodyText": "Extract a method indicating that this simulates the node shutting down?", "url": "https://github.com/palantir/atlasdb/pull/4686#discussion_r400869516", "createdAt": "2020-03-31T12:23:47Z", "author": {"login": "gmaretic"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -282,6 +285,30 @@ public void multipleLockRequestsWithTheSameIdAreGranted() {\n         }\n     }\n \n+    @Test\n+    @Ignore // TODO (jkong): Fix this test by reworking the threading model.\n+    public void stressTest() {\n+        TestableTimelockServer nonLeader = Iterables.getFirst(cluster.nonLeaders(client.namespace()).values(), null);\n+        int startingNumThreads = ManagementFactory.getThreadMXBean().getThreadCount();\n+        try {\n+            for (int i = 0; i < 10_000; i++) { // Needed as it takes a while for the thread buildup to occur\n+                client.getFreshTimestamp();\n+                assertThat(ManagementFactory.getThreadMXBean().getThreadCount())\n+                        .as(\"should not additionally spin up too many threads\")\n+                        .isLessThanOrEqualTo(startingNumThreads + 200);\n+                if (i == 1_000) {\n+                    nonLeader.serverHolder().wireMock().register(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e6bcded6b01dfc022d1ee16c693a325d694b7a"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "865e566178b6018d169e9734427e59aa10c72eb7", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/865e566178b6018d169e9734427e59aa10c72eb7", "committedDate": "2020-03-31T13:01:08Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cf2a095ce99eb9e7a0f65b92e038f6d5906f7f", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/18cf2a095ce99eb9e7a0f65b92e038f6d5906f7f", "committedDate": "2020-03-31T13:03:29Z", "message": "I played myself"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3030, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}