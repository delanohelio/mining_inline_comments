{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDc2Mzk2", "number": 5128, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzoxNToxMlrOE9OUcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMToxMDoxNVrOE-mrxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjMzMjAxOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzoxNToxMlrOH5y7pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzoxNToxMlrOH5y7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM2NTM0OQ==", "bodyText": "wow, it really needs this type hint to work? Funky", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r530365349", "createdAt": "2020-11-25T13:15:12Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1200,6 +1223,24 @@ private static LockAndTimestampServices getLockAndTimestampServices(\n                 .build();\n     }\n \n+    private static LeaderTimeGetter getLeaderTimeGetter(\n+            String timelockNamespace,\n+            Optional<TimeLockRequestBatcherProviders> timelockRequestBatcherProviders,\n+            AtlasDbDialogueServiceProvider serviceProvider,\n+            LeaderElectionReportingTimelockService namespacedConjureTimelockService) {\n+        return timelockRequestBatcherProviders\n+                .map(TimeLockRequestBatcherProviders::leaderTimeBatcherProvider)\n+                .map(provider -> provider.getBatcher(getMultiClientTimelockServiceSupplier(serviceProvider)))\n+                .<LeaderTimeGetter>map(batcher -> new NamespacedCoalescingLeaderTimeGetter(timelockNamespace, batcher))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44794a9f0dcdaeefc490d8351ea6866effb7093"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjM0NDQyOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/config/BatcherProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzoxODoyN1rOH5zDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMzoxODoyN1rOH5zDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM2NzMwNg==", "bodyText": "Feels a bit weird - very specific arg but generic return type. I wonder what thoughts are on making this:\nT getBatcher(Supplier<K> service);\nI can see pros and cons both ways. However, if you want to keep this param as is, maybe I'd be a bit more specific on the name (MultiClientBatchProvider? TimelockBatchProvider? idk).", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r530367306", "createdAt": "2020-11-25T13:18:27Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/config/BatcherProvider.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.config;\n+\n+import com.palantir.lock.client.InternalMultiClientConjureTimelockService;\n+import java.util.function.Supplier;\n+\n+public interface BatcherProvider<T> {\n+    T getBatcher(Supplier<InternalMultiClientConjureTimelockService> multiClientConjureTimelockService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44794a9f0dcdaeefc490d8351ea6866effb7093"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDU3MDg3OnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxMTo0NFrOH70Eqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxMTo0NFrOH70Eqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ4MTE5NQ==", "bodyText": "This broadly makes sense. As a matter of style I'd probably write this imperatively as there is a fair bit to take in, but this is fine if you prefer.", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r532481195", "createdAt": "2020-11-30T10:11:44Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1200,6 +1223,24 @@ private static LockAndTimestampServices getLockAndTimestampServices(\n                 .build();\n     }\n \n+    private static LeaderTimeGetter getLeaderTimeGetter(\n+            String timelockNamespace,\n+            Optional<TimeLockRequestBatcherProviders> timelockRequestBatcherProviders,\n+            AtlasDbDialogueServiceProvider serviceProvider,\n+            LeaderElectionReportingTimelockService namespacedConjureTimelockService) {\n+        return timelockRequestBatcherProviders\n+                .map(TimeLockRequestBatcherProviders::leaderTimeBatcherProvider)\n+                .map(provider -> provider.getBatcher(getMultiClientTimelockServiceSupplier(serviceProvider)))\n+                .<LeaderTimeGetter>map(batcher -> new NamespacedCoalescingLeaderTimeGetter(timelockNamespace, batcher))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbb29133a5942a9395307918be66cdbb1aad0b1"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDU3NzcxOnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-5128.v2.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxMzozMlrOH70I9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxMzozMlrOH70I9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ4MjI5NQ==", "bodyText": "nit: probably want articles i.e. on line 3, configured by its clients to use a custom request batcher; line 5, in the absence of a custom batcher, we fall back to a legacy leaderTime request coalescing batcher.", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r532482295", "createdAt": "2020-11-30T10:13:32Z", "author": {"login": "jeremyk-91"}, "path": "changelog/@unreleased/pr-5128.v2.yml", "diffHunk": "@@ -0,0 +1,7 @@\n+type: feature\n+feature:\n+  description: AtlasDb can now be configured by its clients to use custom request\n+    batcher for batching requests to leaderTime api on Timelock. In the absence of\n+    custom batcher, we fall back to legacy leaderTime request coalescing batcher.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbb29133a5942a9395307918be66cdbb1aad0b1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDU5OTYyOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxOTowNlrOH70WfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDoxOTowNlrOH70WfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ4NTc1Ng==", "bodyText": "can we name this timelockRequestBatcherProviders for consistency?", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r532485756", "createdAt": "2020-11-30T10:19:06Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -244,6 +252,8 @@ boolean allSafeForLogging() {\n \n     abstract UserAgent userAgent();\n \n+    abstract Optional<TimeLockRequestBatcherProviders> batcherProviders();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbb29133a5942a9395307918be66cdbb1aad0b1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDgwOTY0OnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMToxMDoxNVrOH72Tsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMToxMDoxNVrOH72Tsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNzgxMQ==", "bodyText": "go to the next line :)", "url": "https://github.com/palantir/atlasdb/pull/5128#discussion_r532517811", "createdAt": "2020-11-30T11:10:15Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1200,6 +1224,28 @@ private static LockAndTimestampServices getLockAndTimestampServices(\n                 .build();\n     }\n \n+    private static LeaderTimeGetter getLeaderTimeGetter(\n+            String timelockNamespace,\n+            Optional<TimeLockRequestBatcherProviders> timelockRequestBatcherProviders,\n+            AtlasDbDialogueServiceProvider serviceProvider,\n+            LeaderElectionReportingTimelockService namespacedConjureTimelockService) {\n+\n+        if (!timelockRequestBatcherProviders.isPresent()) {\n+            return new LegacyLeaderTimeGetter(namespacedConjureTimelockService);\n+        }\n+\n+        LeaderTimeCoalescingBatcher batcher = timelockRequestBatcherProviders.get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7781b78ddcfa79ca18979d22d7faed325b908d0c"}, "originalPosition": 172}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2513, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}