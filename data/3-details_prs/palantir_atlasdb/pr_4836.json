{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjYzOTcz", "number": 4836, "title": "[PD$-110002] Part 1: Targeted Sweep Metrics, Configurable By Strategy", "bodyText": "Goals (and why):\n\nMetrics cost money.\nSome users of AtlasDB generally don't care about some of the metrics we produce, in particular CONSERVATIVE and THOROUGH metrics: some users only or primarily use one strategy or the other (consider atlasdb-proxy, and internal object service).\n\nImplementation Description (bullets):\n\nMake the registration of CONSERVATIVE and THOROUGH sweep metrics for both outcome metrics and quantitative sweep metrics (e.g. num tombstones written) configurable, defaulting to on.\n\nTesting (What was existing testing like?  What have you done to improve it?):\nConcerns (what feedback would you like?):\n\nThis isn't a super elegant solution as it requires config. But I think it makes sense: we can't rely just on, say, lazy registration, since some services do use an internal conservative table for say 1 write per hour while they make tons of thorough writes, others use an intermediate conservative table for tracking migration states, and so on. Furthermore, this may not even be decidable at compile time for some services at some deployments.\n\nWhere should we start reviewing?: TargetedSweepMetrics.MetricsConfiguration\nPriority (whenever / two weeks / yesterday): this week", "createdAt": "2020-06-15T17:03:27Z", "url": "https://github.com/palantir/atlasdb/pull/4836", "merged": true, "mergeCommit": {"oid": "7386fd25cf12e2d1bee604c62d27cda72d9481ab"}, "closed": true, "closedAt": "2020-06-16T17:35:14Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqlDCBAH2gAyNDM0NjYzOTczOjgxMmFhMjMwYWNiNjQ1MzNlMTJkNGYyOTAwZGNiM2ZkNzg5MzJlYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr2gxtAH2gAyNDM0NjYzOTczOmY0ZmM2MzcxOGIwMTY2YTk2NjNmZjE2MzI4ZjAwMmIxMmE0ZTg0NjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "812aa230acb64533e12d4f2900dcb3fd78932ea6", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/812aa230acb64533e12d4f2900dcb3fd78932ea6", "committedDate": "2020-06-12T16:00:42Z", "message": "transactionsReadFromDb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e67624128278d1dd4bdbb850a0114f6d23ce937b", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/e67624128278d1dd4bdbb850a0114f6d23ce937b", "committedDate": "2020-06-15T16:09:06Z", "message": "Pass in which metrics to use"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "915ccd7c7c7a40178ff08cbb037c7fee9a0b6b56", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/915ccd7c7c7a40178ff08cbb037c7fee9a0b6b56", "committedDate": "2020-06-15T16:27:44Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9db6f15ad0eb4a7f7610b204f5f73c2af0bd9963", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/9db6f15ad0eb4a7f7610b204f5f73c2af0bd9963", "committedDate": "2020-06-15T16:35:17Z", "message": "configurability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed2d5e35f4792ac4f7fffdf9a21aafd2f660cc8c", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/ed2d5e35f4792ac4f7fffdf9a21aafd2f660cc8c", "committedDate": "2020-06-15T16:51:35Z", "message": "Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baea9a5cbd1bc6ee46b13ddc05ef40f310c67f29", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/baea9a5cbd1bc6ee46b13ddc05ef40f310c67f29", "committedDate": "2020-06-15T17:05:08Z", "message": "bits and bobs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bef637fd3c57b1f3304333b1c52895dc488a9f5c", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/bef637fd3c57b1f3304333b1c52895dc488a9f5c", "committedDate": "2020-06-15T17:05:08Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTA3ODA4", "url": "https://github.com/palantir/atlasdb/pull/4836#pullrequestreview-431507808", "createdAt": "2020-06-16T13:35:00Z", "commit": {"oid": "bef637fd3c57b1f3304333b1c52895dc488a9f5c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzozNTowMFrOGkbllQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNDoxNlrOGkeXew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MzkwOQ==", "bodyText": "Why did we switch to counter?", "url": "https://github.com/palantir/atlasdb/pull/4836#discussion_r440853909", "createdAt": "2020-06-16T13:35:00Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransaction.java", "diffHunk": "@@ -2234,7 +2234,7 @@ private String getStartTimestampAsClientDescription(TransactionConfig currentTra\n             logLargeNumberOfTransactions(tableRef, gets);\n         }\n \n-        getHistogram(AtlasDbMetricNames.NUMBER_OF_TRANSACTIONS_READ_FROM_DB, tableRef).update(gets.size());\n+        getCounter(AtlasDbMetricNames.NUMBER_OF_TRANSACTIONS_READ_FROM_DB, tableRef).inc(gets.size());\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef637fd3c57b1f3304333b1c52895dc488a9f5c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5OTQ1MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/palantir/atlasdb/pull/4836#discussion_r440899451", "createdAt": "2020-06-16T14:34:16Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/TargetedSweepMetrics.java", "diffHunk": "@@ -76,49 +100,65 @@ private static long getMillisForTimestampBoundedAtOneWeek(KeyValueService kvs, l\n     }\n \n     public void updateEnqueuedWrites(ShardAndStrategy shardStrategy, long writes) {\n-        getMetrics(shardStrategy).updateEnqueuedWrites(writes);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateEnqueuedWrites(writes));\n     }\n \n-    public void updateEntriesRead(ShardAndStrategy shardStrategy, long writes) {\n-        getMetrics(shardStrategy).updateEntriesRead(writes);\n+    public void updateEntriesRead(ShardAndStrategy shardStrategy, long reads) {\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateEntriesRead(reads));\n     }\n \n     public void updateNumberOfTombstones(ShardAndStrategy shardStrategy, long tombstones) {\n-        getMetrics(shardStrategy).updateNumberOfTombstones(tombstones);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateNumberOfTombstones(tombstones));\n     }\n \n     public void updateAbortedWritesDeleted(ShardAndStrategy shardStrategy, long deletes) {\n-        getMetrics(shardStrategy).updateAbortedWritesDeleted(deletes);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateAbortedWritesDeleted(deletes));\n     }\n \n     public void updateSweepTimestamp(ShardAndStrategy shardStrategy, long value) {\n-        getMetrics(shardStrategy).updateSweepTimestamp(value);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateSweepTimestamp(value));\n     }\n \n     public void updateProgressForShard(ShardAndStrategy shardStrategy, long lastSweptTs) {\n-        getMetrics(shardStrategy).updateProgressForShard(shardStrategy.shard(), lastSweptTs);\n+        updateMetricsIfPresent(\n+                shardStrategy, metrics -> metrics.updateProgressForShard(shardStrategy.shard(), lastSweptTs));\n     }\n \n     public void registerOccurrenceOf(ShardAndStrategy shardStrategy, SweepOutcome outcome) {\n-        registerOccurrenceOf(shardStrategy.strategy(), outcome);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.registerOccurrenceOf(outcome));\n     }\n \n     public void registerOccurrenceOf(SweeperStrategy strategy, SweepOutcome outcome) {\n-        getMetrics(strategy).registerOccurrenceOf(outcome);\n+        updateMetricsIfPresent(strategy, metrics -> metrics.registerOccurrenceOf(outcome));\n     }\n \n     public void registerEntriesReadInBatch(ShardAndStrategy shardStrategy, long batchSize) {\n-        getMetrics(shardStrategy).registerEntriesReadInBatch(batchSize);\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.registerEntriesReadInBatch(batchSize));\n     }\n \n-    private MetricsForStrategy getMetrics(ShardAndStrategy shardStrategy) {\n-        return getMetrics(shardStrategy.strategy());\n+    private void updateMetricsIfPresent(ShardAndStrategy shardStrategy, Consumer<MetricsForStrategy> update) {\n+        updateMetricsIfPresent(shardStrategy.strategy(), update);\n+    }\n+\n+    private void updateMetricsIfPresent(SweeperStrategy strategy, Consumer<MetricsForStrategy> update) {\n+        Optional.ofNullable(getMetrics(strategy)).ifPresent(update);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef637fd3c57b1f3304333b1c52895dc488a9f5c"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec9e335f44faf0affb0d7544dbf28d33e0016b1", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/1ec9e335f44faf0affb0d7544dbf28d33e0016b1", "committedDate": "2020-06-16T14:50:57Z", "message": "bad separation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNTg5OTg4", "url": "https://github.com/palantir/atlasdb/pull/4836#pullrequestreview-431589988", "createdAt": "2020-06-16T14:53:18Z", "commit": {"oid": "1ec9e335f44faf0affb0d7544dbf28d33e0016b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4fc63718b0166a9663ff16328f002b12a4e8465", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/f4fc63718b0166a9663ff16328f002b12a4e8465", "committedDate": "2020-06-16T14:55:30Z", "message": "histos"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2939, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}