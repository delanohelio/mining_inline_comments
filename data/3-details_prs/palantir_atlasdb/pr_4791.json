{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwODI4NTgz", "number": 4791, "title": "Always send full last known version, including id.", "bodyText": "Goals (and why):\nThis is an obviously more correct way to specify this in the API. If the leader changes, the new leader should be forced to recompute a clean snapshot. Without pushing the client's view of the leader id, it is technically possible that timelock would not compute a snapshot if the log event sequences somehow overlap in weird ways.\nImplementation Description (bullets):\nPass Optional around, which is a bit more awkward, but I believe, correct.\nTesting (What was existing testing like?  What have you done to improve it?):\nConcerns (what feedback would you like?):\nThis changes the conjure API, so technically a break. But the client's would've only pushed Optional.empty() there, so should be fine.\nWhere should we start reviewing?:\nPriority (whenever / two weeks / yesterday):", "createdAt": "2020-05-20T15:30:49Z", "url": "https://github.com/palantir/atlasdb/pull/4791", "merged": true, "mergeCommit": {"oid": "0e1a2fd9711ec4116aa3b320ba51475694e841e1"}, "closed": true, "closedAt": "2020-05-21T12:44:48Z", "author": {"login": "jkozlowski"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjKzGlAH2gAyNDIwODI4NTgzOjA1ZTBhNzAxZDkxNzIxNTAxYjhkNmIwYzRiYWRmNzBlNDI3OGJiYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjcFXXAH2gAyNDIwODI4NTgzOmM4MTZkNWYyM2M2ZmY3YWU0ODk5Mzk2ZTIxNmY5OWI5OGI5NTU2ZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/05e0a701d91721501b8d6b0c4badf70e4278bbc7", "committedDate": "2020-05-20T15:28:18Z", "message": "Always send full last known version, including id."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDg5MzQ4", "url": "https://github.com/palantir/atlasdb/pull/4791#pullrequestreview-415489348", "createdAt": "2020-05-20T16:03:36Z", "commit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjowMzozNlrOGYTAeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjowMzozNlrOGYTAeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg==", "bodyText": "Thinking about this a bit more: I think this is a change in behavior, in that every startTransactions call now will cause timelock to compute a snapshot, until we have an impl.", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428130426", "createdAt": "2020-05-20T16:03:36Z", "author": {"login": "jkozlowski"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -25,18 +25,17 @@\n @SuppressWarnings(\"FinalClass\") // mocks\n public class NoOpLockWatchEventCache implements LockWatchEventCache {\n     public static final LockWatchEventCache INSTANCE = new NoOpLockWatchEventCache();\n-    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion\n-            .of(UUID.randomUUID(), Optional.empty());\n+    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion.of(UUID.randomUUID(), 0L);\n     private static final TransactionsLockWatchEvents NONE = TransactionsLockWatchEvents.failure(\n-            LockWatchStateUpdate.snapshot(UUID.randomUUID(), 0L, ImmutableSet.of(), ImmutableSet.of()));\n+            LockWatchStateUpdate.snapshot(UUID.randomUUID(), -1L, ImmutableSet.of(), ImmutableSet.of()));\n \n     private NoOpLockWatchEventCache() {\n         // singleton\n     }\n \n     @Override\n-    public IdentifiedVersion lastKnownVersion() {\n-        return FAKE;\n+    public Optional<IdentifiedVersion> lastKnownVersion() {\n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTEwMDYy", "url": "https://github.com/palantir/atlasdb/pull/4791#pullrequestreview-415510062", "createdAt": "2020-05-20T16:27:42Z", "commit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjoyNzo0M1rOGYT-JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjozNToyMlrOGYUTqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE0NjIxMg==", "bodyText": "since we'd already declared the external java Long I'd suggest using it? I get that this usage is probably safe, but probably best to be consistent especially with places where we really don't want this to be safelong (i.e. timestamps)", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428146212", "createdAt": "2020-05-20T16:27:43Z", "author": {"login": "jeremyk-91"}, "path": "timelock-api/src/main/conjure/timelock-api.yml", "diffHunk": "@@ -36,12 +36,18 @@ types:\n   definitions:\n     default-package: com.palantir.atlasdb.timelock.api\n     objects:\n+      ConjureIdentifiedVersion:\n+        fields:\n+          id: uuid\n+          version: safelong", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE0Njk2OA==", "bodyText": "nit: the Lock Watch stuff never really had a non-conjurized (?) form, so it's probably fine to just name this IdentifiedVersion", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428146968", "createdAt": "2020-05-20T16:28:53Z", "author": {"login": "jeremyk-91"}, "path": "timelock-api/src/main/conjure/timelock-api.yml", "diffHunk": "@@ -36,12 +36,18 @@ types:\n   definitions:\n     default-package: com.palantir.atlasdb.timelock.api\n     objects:\n+      ConjureIdentifiedVersion:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1MTcyMQ==", "bodyText": "I guess snapshotting right now is cheap since there aren't actually going to be events, but this could lead to unintended consequences later on. It seems safer to return Optional.of(FAKE)? - you still take a snapshot when there's a leader election, but that's relatively uncommon", "url": "https://github.com/palantir/atlasdb/pull/4791#discussion_r428151721", "createdAt": "2020-05-20T16:35:22Z", "author": {"login": "jeremyk-91"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -25,18 +25,17 @@\n @SuppressWarnings(\"FinalClass\") // mocks\n public class NoOpLockWatchEventCache implements LockWatchEventCache {\n     public static final LockWatchEventCache INSTANCE = new NoOpLockWatchEventCache();\n-    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion\n-            .of(UUID.randomUUID(), Optional.empty());\n+    private static final IdentifiedVersion FAKE = ImmutableIdentifiedVersion.of(UUID.randomUUID(), 0L);\n     private static final TransactionsLockWatchEvents NONE = TransactionsLockWatchEvents.failure(\n-            LockWatchStateUpdate.snapshot(UUID.randomUUID(), 0L, ImmutableSet.of(), ImmutableSet.of()));\n+            LockWatchStateUpdate.snapshot(UUID.randomUUID(), -1L, ImmutableSet.of(), ImmutableSet.of()));\n \n     private NoOpLockWatchEventCache() {\n         // singleton\n     }\n \n     @Override\n-    public IdentifiedVersion lastKnownVersion() {\n-        return FAKE;\n+    public Optional<IdentifiedVersion> lastKnownVersion() {\n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEzMDQyNg=="}, "originalCommit": {"oid": "05e0a701d91721501b8d6b0c4badf70e4278bbc7"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baee023586125737893b6e70f8d5e6fe57318745", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/baee023586125737893b6e70f8d5e6fe57318745", "committedDate": "2020-05-20T17:03:56Z", "message": "Use fake throughout."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b8140fffcdfbcf9cf3b2c11c9feaa1cba7b5ed6", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/3b8140fffcdfbcf9cf3b2c11c9feaa1cba7b5ed6", "committedDate": "2020-05-20T17:07:30Z", "message": "Use Long."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b37fd572cface42e51fefd3972ef4fd8c72c5bb6", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/b37fd572cface42e51fefd3972ef4fd8c72c5bb6", "committedDate": "2020-05-20T17:09:42Z", "message": "Use Long."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTQ4NDkx", "url": "https://github.com/palantir/atlasdb/pull/4791#pullrequestreview-415548491", "createdAt": "2020-05-20T17:13:23Z", "commit": {"oid": "b37fd572cface42e51fefd3972ef4fd8c72c5bb6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c816d5f23c6ff7ae4899396e216f99b98b9556fb", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/c816d5f23c6ff7ae4899396e216f99b98b9556fb", "committedDate": "2020-05-21T11:36:38Z", "message": "Fix test."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2863, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}