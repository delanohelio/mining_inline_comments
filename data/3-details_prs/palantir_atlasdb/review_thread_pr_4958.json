{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNTE2MDg2", "number": 4958, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTozMToxNFrOEa5LkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTozMToxNFrOEa5LkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjM1MjgxOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTozMToxNFrOHEl3uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTozMToxNFrOHEl3uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU3NjgyNw==", "bodyText": "This is a little funky, but the alternative I had in mind to avoid the optional nesting has its own messy implementation detail leaking around:\nStream.of(() -> maybeStartVersion, this::getFirstKey)\n        .map(Supplier::get)\n        .filter(version -> version <= endVersion)\n        .findFirst();", "url": "https://github.com/palantir/atlasdb/pull/4958#discussion_r474576827", "createdAt": "2020-08-21T09:31:14Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "diffHunk": "@@ -35,10 +35,14 @@\n     private final NavigableMap<Long, LockWatchEvent> eventMap = new TreeMap<>();\n \n     Collection<LockWatchEvent> getEventsBetweenVersionsInclusive(Optional<Long> maybeStartVersion, long endVersion) {\n-        return ImmutableSet.copyOf(maybeStartVersion.map(\n-                startVersion -> getValuesBetweenInclusive(endVersion, startVersion))\n-                .orElseGet(() -> getFirstKey().map(firstKey -> getValuesBetweenInclusive(endVersion, firstKey))\n-                        .orElseGet(ImmutableList::of)));\n+        Optional<Long> startVersion = maybeStartVersion\n+                .map(Optional::of)\n+                .orElseGet(this::getFirstKey)\n+                .filter(version -> version <= endVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afba760e72f4bb440a6eb0c139cb80c1d6c5a513"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2807, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}