{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDI5MTA2", "number": 4810, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNzozMFrOEAfDwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMzoxM1rOEAfLSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQ0MzIxOnYy", "diffSide": "RIGHT", "path": "leader-election-impl/src/main/java/com/palantir/paxos/SqliteConnections.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNzozMFrOGbyxeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyNzozMFrOGbyxeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NjYwMA==", "bodyText": "discussed offline: CloseableDataSource might be nicer in terms of least privilege, but this is already on the classpath everywhere and we don't really want to add another layer of delegation", "url": "https://github.com/palantir/atlasdb/pull/4810#discussion_r431796600", "createdAt": "2020-05-28T12:27:30Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/SqliteConnections.java", "diffHunk": "@@ -41,22 +39,22 @@ private SqliteConnections() {\n         // no\n     }\n \n-    public static DataSource getPooledDataSource(Path path) {\n+    public static HikariDataSource getPooledDataSource(Path path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f610a709c1a16938f94d4de47ff11a0ef886a08a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQ1NDU0OnYy", "diffSide": "RIGHT", "path": "timelock-agent/src/main/java/com/palantir/timelock/paxos/TimeLockAgent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMDo0N1rOGby4zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMDo0N1rOGby4zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODQ3Ng==", "bodyText": "Might be better if we create it here and inject it into both", "url": "https://github.com/palantir/atlasdb/pull/4810#discussion_r431798476", "createdAt": "2020-05-28T12:30:47Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/timelock/paxos/TimeLockAgent.java", "diffHunk": "@@ -113,7 +112,7 @@ public static TimeLockAgent create(\n                 registrar,\n                 paxosResources,\n                 userAgent);\n-        agent.createAndRegisterResources();\n+        agent.createAndRegisterResources(paxosResources.leadershipContextFactory().sqliteDataSource());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f610a709c1a16938f94d4de47ff11a0ef886a08a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQ2MjUxOnYy", "diffSide": "RIGHT", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMzoxM1rOGby9-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozMzoxM1rOGby9-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTgwMA==", "bodyText": "let's create this inside TimeLockAgent and inject it here", "url": "https://github.com/palantir/atlasdb/pull/4810#discussion_r431799800", "createdAt": "2020-05-28T12:33:13Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -60,13 +64,16 @@ public static PaxosResources create(\n             ExecutorService sharedExecutor) {\n         PaxosRemoteClients remoteClients = ImmutablePaxosRemoteClients.of(install, metrics);\n \n-        ImmutablePaxosResources.Builder resourcesBuilder =\n-                setupTimestampResources(install, metrics, paxosRuntime, sharedExecutor, remoteClients);\n+        HikariDataSource sqliteDataSource = SqliteConnections.getPooledDataSource(install.sqliteDataDirectory());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f610a709c1a16938f94d4de47ff11a0ef886a08a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2908, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}