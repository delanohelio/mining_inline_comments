{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjEzMDE0", "number": 4721, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjoyNDoyNVrOD1QbhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxMToyMFrOD4D6DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTcwMzA5OnYy", "diffSide": "RIGHT", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjoyNDoyNVrOGKmiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjoyNDoyNVrOGKmiHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc3MDI3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on the base table.\n          \n          \n            \n                 * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on the base \n          \n          \n            \n                 * table.\n          \n      \n    \n    \n  \n\nMinor checkstyle thing", "url": "https://github.com/palantir/atlasdb/pull/4721#discussion_r413770270", "createdAt": "2020-04-23T12:24:25Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "diffHunk": "@@ -82,10 +82,9 @@\n      * on index tables. Read/write conflicts should still need to be checked, since we do not need to read the index\n      * table with the main table.\n      * <p>\n-     * This conflict handler locks at cell level. As index tables use dynamic columns, locking at row level would\n-     * result in higher contention.\n+     * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on the base table.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc4a64a58aa0b55eaedc5e7cffa9d234bafb66c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjAzODgwOnYy", "diffSide": "RIGHT", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMzozMToyNlrOGNUJSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMzozMToyNlrOGNUJSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjYxNDczMA==", "bodyText": "nit: fix line length", "url": "https://github.com/palantir/atlasdb/pull/4721#discussion_r416614730", "createdAt": "2020-04-28T13:31:26Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "diffHunk": "@@ -82,10 +82,9 @@\n      * on index tables. Read/write conflicts should still need to be checked, since we do not need to read the index\n      * table with the main table.\n      * <p>\n-     * This conflict handler locks at cell level. As index tables use dynamic columns, locking at row level would\n-     * result in higher contention.\n+     * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on the base table.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bc4a64a58aa0b55eaedc5e7cffa9d234bafb66c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTEwODYwOnYy", "diffSide": "RIGHT", "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxMToyMVrOGOrJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxMToyMVrOGOrJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0MDA4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on \n          \n          \n            \n                 * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on", "url": "https://github.com/palantir/atlasdb/pull/4721#discussion_r418040089", "createdAt": "2020-04-30T14:11:21Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/transaction/api/ConflictHandler.java", "diffHunk": "@@ -82,10 +82,10 @@\n      * on index tables. Read/write conflicts should still need to be checked, since we do not need to read the index\n      * table with the main table.\n      * <p>\n-     * This conflict handler locks at cell level. As index tables use dynamic columns, locking at row level would\n-     * result in higher contention.\n+     * This conflict does not lock, because it's assumed that a semantically equivalent lock is taken out on ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "997b6aaef57aba3601973bbac67908f6cd97db93"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}