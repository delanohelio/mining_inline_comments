{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDMxMjg5", "number": 5093, "title": "add initializeAsync for Db implementations", "bodyText": "Goals (and why):\nThere is a cassandra impl of initializeAsync, but not one for DbKvs. If a service depends on this, then it will crash if the db is not up at initialization time.\nImplementation Description (bullets):\nCopied the cassandra pattern into DbKvs and InDbTimestampBoundStore.\nKept all old function signatures intact to prevent api breaks.\nTesting (What was existing testing like?  What have you done to improve it?):\nI updated an internal service to use this. I started it with the db off. I waited a few minutes, then turned the db on. The service became healthy.\nConcerns (what feedback would you like?):\nWhere should we start reviewing?:\nPriority (whenever / two weeks / yesterday):", "createdAt": "2020-11-03T01:47:21Z", "url": "https://github.com/palantir/atlasdb/pull/5093", "merged": true, "mergeCommit": {"oid": "75d9dd3163e03e2070bd304a5422447d3c877cea"}, "closed": true, "closedAt": "2020-11-25T17:37:05Z", "author": {"login": "rzpt"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYvE_AAH2gAyNTE0NDMxMjg5OmMyODJmOWQ0MzlhNGZmOGIwZmE0M2FhOTU4OWNjODc3NTJmOTQ3Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgBUaogFqTUzODY5MDk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727", "author": {"user": null}, "url": "https://github.com/palantir/atlasdb/commit/c282f9d439a4ff8b0fa43aa9589cc87752f94727", "committedDate": "2020-11-03T01:42:24Z", "message": "add initializeAsync for Db implementations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyODM0MTUx", "url": "https://github.com/palantir/atlasdb/pull/5093#pullrequestreview-532834151", "createdAt": "2020-11-17T21:38:41Z", "commit": {"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMTozODo0MlrOH1Mg5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMTo1NzoyNlrOH1NIJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0MTYwNg==", "bodyText": "Could we use AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC instead of false here (and other places in this PR where we used false)?", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525541606", "createdAt": "2020-11-17T21:38:42Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/timestamp/InDbTimestampBoundStore.java", "diffHunk": "@@ -53,25 +74,50 @@ public InDbTimestampBoundStore(ConnectionManager connManager, TableReference tim\n         this(connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, EMPTY_TABLE_PREFIX));\n     }\n \n-    public static InDbTimestampBoundStore create(ConnectionManager connManager, TableReference timestampTable) {\n+    public static TimestampBoundStore create(ConnectionManager connManager, TableReference timestampTable) {\n         return InDbTimestampBoundStore.create(connManager, timestampTable, EMPTY_TABLE_PREFIX);\n     }\n \n-    public static InDbTimestampBoundStore create(\n+    public static TimestampBoundStore create(\n+            ConnectionManager connManager, TableReference timestampTable, boolean initializeAsync) {\n+        return InDbTimestampBoundStore.create(connManager, timestampTable, EMPTY_TABLE_PREFIX, initializeAsync);\n+    }\n+\n+    public static TimestampBoundStore create(\n             ConnectionManager connManager, TableReference timestampTable, String tablePrefixString) {\n-        return createWithStrategy(connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString));\n+        return createWithStrategy(\n+                connManager, new LegacyPhysicalBoundStoreStrategy(timestampTable, tablePrefixString), false);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MTIwMw==", "bodyText": "Would it make sense to push other public members of DbKvs up? I am not sure if we should be limiting the DbKvs api but I may be missing something.", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525551203", "createdAt": "2020-11-17T21:56:38Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/DbKeyValueService.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.keyvalue.dbkvs.impl;\n+\n+import com.palantir.atlasdb.keyvalue.api.KeyValueService;\n+import com.palantir.processors.AutoDelegate;\n+\n+@AutoDelegate\n+public interface DbKeyValueService extends KeyValueService {\n+\n+    String getTablePrefix();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MTY1NA==", "bodyText": "Same as above: Can we use AtlasDbConstants.DEFAULT_INITIALIZE_ASYNC?", "url": "https://github.com/palantir/atlasdb/pull/5093#discussion_r525551654", "createdAt": "2020-11-17T21:57:26Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/impl/ConnectionManagerAwareDbKvs.java", "diffHunk": "@@ -33,15 +33,20 @@\n \n // This class should be removed and replaced by DbKvs when InDbTimestampStore depends directly on DbKvs\n public final class ConnectionManagerAwareDbKvs extends ForwardingKeyValueService {\n-    private final DbKvs kvs;\n+    private final DbKeyValueService kvs;\n     private final ConnectionManager connManager;\n     private final SqlConnectionSupplier sqlConnectionSupplier;\n \n     public static ConnectionManagerAwareDbKvs create(DbKeyValueServiceConfig config) {\n+        return create(config, false);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c282f9d439a4ff8b0fa43aa9589cc87752f94727"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d80d111b257fdafbb109b7d6836812e33fe2a2ff", "author": {"user": null}, "url": "https://github.com/palantir/atlasdb/commit/d80d111b257fdafbb109b7d6836812e33fe2a2ff", "committedDate": "2020-11-19T02:26:58Z", "message": "replace default value with DEFAULT_INITIALIZE_ASYNC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90a2215f719cc39c4f106acd6931a0d7335182f", "author": {"user": null}, "url": "https://github.com/palantir/atlasdb/commit/a90a2215f719cc39c4f106acd6931a0d7335182f", "committedDate": "2020-11-19T02:29:55Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4400a4cb00cef4d36f3ee77d2775f6b67dbf1cb", "author": {"user": null}, "url": "https://github.com/palantir/atlasdb/commit/c4400a4cb00cef4d36f3ee77d2775f6b67dbf1cb", "committedDate": "2020-11-23T18:22:19Z", "message": "Merge remote-tracking branch 'origin/develop' into initialize-async-db"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e1b7672cf84fd080ad4133867dc7f52d19a62d", "author": {"user": null}, "url": "https://github.com/palantir/atlasdb/commit/49e1b7672cf84fd080ad4133867dc7f52d19a62d", "committedDate": "2020-11-23T20:06:17Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e4fde26a7f2bb410d90bd30b36d60b36c9a41ce", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/6e4fde26a7f2bb410d90bd30b36d60b36c9a41ce", "committedDate": "2020-11-24T17:49:24Z", "message": "Remove extra line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a23dce1806b4b602081247bdc1dd249dde58fc4b", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/a23dce1806b4b602081247bdc1dd249dde58fc4b", "committedDate": "2020-11-24T17:49:24Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "196697ad7af9849a03809e5160551704b3b58aa7", "author": {"user": {"login": "sudiksha27", "name": "sudiksha nanda"}}, "url": "https://github.com/palantir/atlasdb/commit/196697ad7af9849a03809e5160551704b3b58aa7", "committedDate": "2020-11-24T17:49:24Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzY2MzY1", "url": "https://github.com/palantir/atlasdb/pull/5093#pullrequestreview-537766365", "createdAt": "2020-11-24T17:52:17Z", "commit": {"oid": "a23dce1806b4b602081247bdc1dd249dde58fc4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MzE2NjE3", "url": "https://github.com/palantir/atlasdb/pull/5093#pullrequestreview-538316617", "createdAt": "2020-11-25T09:43:56Z", "commit": {"oid": "a23dce1806b4b602081247bdc1dd249dde58fc4b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NjkwOTg4", "url": "https://github.com/palantir/atlasdb/pull/5093#pullrequestreview-538690988", "createdAt": "2020-11-25T16:55:01Z", "commit": {"oid": "196697ad7af9849a03809e5160551704b3b58aa7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2467, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}