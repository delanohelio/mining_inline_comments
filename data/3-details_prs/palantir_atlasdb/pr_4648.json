{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3Njc5NTE0", "number": 4648, "title": "Change conjure client replacement logic to replace ASAP ", "bodyText": "Rebase of #4584", "createdAt": "2020-03-13T09:36:38Z", "url": "https://github.com/palantir/atlasdb/pull/4648", "merged": true, "mergeCommit": {"oid": "589647f50006c6476e0a38c72fefe2fab6a5c916"}, "closed": true, "closedAt": "2020-03-13T16:22:46Z", "author": {"login": "j-baker"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNM1lMgH2gAyMzg3Njc5NTE0Ojg3M2FhZjM0Yjg0MmI2MWI1MjM1ZjY0MzIxZGM2NmEzNzJkYjJjMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNSjysgH2gAyMzg3Njc5NTE0OjkxOGMzNTI4OTBkYWZkZjVhNGZlZDg5M2NiMmY5Mjk4YjdiZWY1YjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "873aaf34b842b61b5235f64321dc66a372db2c1d", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/873aaf34b842b61b5235f64321dc66a372db2c1d", "committedDate": "2020-03-13T09:24:29Z", "message": "Replace if exception matching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf2a2f07c7a346823240e50f8e42d4ee1aa064fa", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/cf2a2f07c7a346823240e50f8e42d4ee1aa064fa", "committedDate": "2020-03-13T09:29:49Z", "message": "Change conjure client replacement logic to replace ASAP\n\nRebase of https://github.com/palantir/atlasdb/pull/4584"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4cf57a7f3d6e01c3e302ba734235d0dfed592b1", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/a4cf57a7f3d6e01c3e302ba734235d0dfed592b1", "committedDate": "2020-03-13T09:36:02Z", "message": "Fix up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ade843c87c4779653b3a3780caf832286e06b341", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/ade843c87c4779653b3a3780caf832286e06b341", "committedDate": "2020-03-13T09:36:56Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db8403c17f792b19bc83acc4402be935019b9eda", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/db8403c17f792b19bc83acc4402be935019b9eda", "committedDate": "2020-03-13T09:39:17Z", "message": "Delete selfrefreshingproxy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064137946831bd628d79a7d7d8afb16713a00819", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/064137946831bd628d79a7d7d8afb16713a00819", "committedDate": "2020-03-13T09:39:17Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d8a2b09382eda6a25e8ba036115b4106d6fa60", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/f5d8a2b09382eda6a25e8ba036115b4106d6fa60", "committedDate": "2020-03-13T09:49:49Z", "message": "Add log line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43aa4a52f747e9e182e22b73a7ec9e62ffb6317e", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/43aa4a52f747e9e182e22b73a7ec9e62ffb6317e", "committedDate": "2020-03-13T09:50:13Z", "message": "Merge branch 'jbaker/only_replace_client_if_criteria_true' of github.com:palantir/atlasdb into jbaker/only_replace_client_if_criteria_true"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTY5OTU4", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374169958", "createdAt": "2020-03-13T09:52:54Z", "commit": {"oid": "43aa4a52f747e9e182e22b73a7ec9e62ffb6317e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1Mjo1NVrOF19kQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1Mjo1NVrOF19kQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNzU1NQ==", "bodyText": "I think you want isPossiblyOkHttpTimeoutBug(cause) otherwise it will SO.", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392127555", "createdAt": "2020-03-13T09:52:55Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java", "diffHunk": "@@ -106,4 +108,24 @@ private AtlasDbHttpClients() {\n                 MetricRegistry.name(clazz),\n                 $ -> ImmutableMap.of());\n     }\n+\n+    /**\n+     * Returns a proxy which replaces the underlying proxy if:\n+     * 1. We see a SocketTimeoutException\n+     * 2. At most once every 20 minutes\n+     */\n+    private static <T> T wrapWithOkHttpBugHandling(Class<T> type, Supplier<T> supplier) {\n+        return ReplaceIfExceptionMatchingProxy.newProxyInstance(\n+                type,\n+                Suppliers.memoizeWithExpiration(supplier::get, 20, TimeUnit.MINUTES),\n+                AtlasDbHttpClients::isPossiblyOkHttpTimeoutBug);\n+    }\n+\n+    private static boolean isPossiblyOkHttpTimeoutBug(Throwable throwable) {\n+        if (throwable instanceof SocketTimeoutException) {\n+            return true;\n+        }\n+        Throwable cause = throwable.getCause();\n+        return cause != null && isPossiblyOkHttpTimeoutBug(throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa4a52f747e9e182e22b73a7ec9e62ffb6317e"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1", "committedDate": "2020-03-13T09:55:36Z", "message": "Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTc1MzM5", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374175339", "createdAt": "2020-03-13T10:00:42Z", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowMDo0MlrOF190dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowMDo0MlrOF190dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzMTcwMA==", "bodyText": "Putting the log line here will basically print it for every request that fails with this, since shouldReplace will be true for all of them. So we either need to put it in the supplier or remove it. Sorry for confusing things", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392131700", "createdAt": "2020-03-13T10:00:42Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);\n+        } catch (InvocationTargetException e) {\n+            Throwable cause = e.getCause();\n+            replaceIfNecessary(cause);\n+            throw cause;\n+        } catch (IllegalAccessException e) {\n+            throw new IllegalStateException(e);\n+        }\n+    }\n+\n+    private synchronized void replaceIfNecessary(Throwable thrown) {\n+        if (shouldReplace.test(thrown)) {\n+            log.info(\"Replacing underlying proxy due to thrown exception\", thrown);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTc2NTg5", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374176589", "createdAt": "2020-03-13T10:02:38Z", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowMjozOFrOF194Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowMjozOFrOF194Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzMjYzMQ==", "bodyText": "Checked that getCause is the same as getTargetException.", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392132631", "createdAt": "2020-03-13T10:02:38Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);\n+        } catch (InvocationTargetException e) {\n+            Throwable cause = e.getCause();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTc3NDY0", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374177464", "createdAt": "2020-03-13T10:04:02Z", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNDowMlrOF196qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNDowMlrOF196qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzMzI4OQ==", "bodyText": "Is handling this separately necessary?", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392133289", "createdAt": "2020-03-13T10:04:02Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);\n+        } catch (InvocationTargetException e) {\n+            Throwable cause = e.getCause();\n+            replaceIfNecessary(cause);\n+            throw cause;\n+        } catch (IllegalAccessException e) {\n+            throw new IllegalStateException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTc5MTgx", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374179181", "createdAt": "2020-03-13T10:06:53Z", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fa0fcb852d5421f5f3a113104036ad7655a414d", "author": {"user": {"login": "j-baker", "name": "James Baker"}}, "url": "https://github.com/palantir/atlasdb/commit/0fa0fcb852d5421f5f3a113104036ad7655a414d", "committedDate": "2020-03-13T10:09:43Z", "message": "Logging fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTc5NTYz", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374179563", "createdAt": "2020-03-13T10:07:25Z", "commit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNzoyNVrOF1-BBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDowNzoyNVrOF1-BBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzNDkxNg==", "bodyText": "We probably don't want to throw the cause in this case (seems like a bug in our reflection so we probably want to see it)", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392134916", "createdAt": "2020-03-13T10:07:25Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);\n+        } catch (InvocationTargetException e) {\n+            Throwable cause = e.getCause();\n+            replaceIfNecessary(cause);\n+            throw cause;\n+        } catch (IllegalAccessException e) {\n+            throw new IllegalStateException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEzMzI4OQ=="}, "originalCommit": {"oid": "3b09cd9a82f6822c6a2fc0ff8d702b4aa675ddb1"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MjIxNDkx", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374221491", "createdAt": "2020-03-13T11:16:37Z", "commit": {"oid": "0fa0fcb852d5421f5f3a113104036ad7655a414d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxNjozN1rOF2AB6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxNjozN1rOF2AB6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NzkxNQ==", "bodyText": "Should we defer synchronization until the predicate has evaluated true?", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392167915", "createdAt": "2020-03-13T11:16:37Z", "author": {"login": "carterkozak"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);\n+        } catch (InvocationTargetException e) {\n+            Throwable cause = e.getCause();\n+            replaceIfNecessary(cause);\n+            throw cause;\n+        }\n+    }\n+\n+    private synchronized void replaceIfNecessary(Throwable thrown) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fa0fcb852d5421f5f3a113104036ad7655a414d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MjIyNTk2", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374222596", "createdAt": "2020-03-13T11:18:40Z", "commit": {"oid": "0fa0fcb852d5421f5f3a113104036ad7655a414d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxODo0MVrOF2AFVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxODo0MVrOF2AFVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2ODc4OQ==", "bodyText": "I think we need to compare the delegate that we actually invoked the method on, not the value after an exception is caught. Concurrent failures could cause us to roll several times.", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392168789", "createdAt": "2020-03-13T11:18:41Z", "author": {"login": "carterkozak"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.common.proxy;\n+\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Proxy;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public final class ReplaceIfExceptionMatchingProxy<T> implements InvocationHandler {\n+    private static final Logger log = LoggerFactory.getLogger(ReplaceIfExceptionMatchingProxy.class);\n+\n+    private final Supplier<T> delegateFactory;\n+    private final Predicate<Throwable> shouldReplace;\n+    private volatile T delegate;\n+\n+    private ReplaceIfExceptionMatchingProxy(Supplier<T> delegateFactory, Predicate<Throwable> shouldReplace) {\n+        this.delegateFactory = delegateFactory;\n+        this.delegate = delegateFactory.get();\n+        this.shouldReplace = shouldReplace;\n+    }\n+\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+        try {\n+            return method.invoke(delegate, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fa0fcb852d5421f5f3a113104036ad7655a414d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9455e09a6178ba70cbba11ec7284d4c1dd506f8", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/a9455e09a6178ba70cbba11ec7284d4c1dd506f8", "committedDate": "2020-03-13T12:37:09Z", "message": "Remove unnecessary test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MjY1ODUw", "url": "https://github.com/palantir/atlasdb/pull/4648#pullrequestreview-374265850", "createdAt": "2020-03-13T12:38:08Z", "commit": {"oid": "a9455e09a6178ba70cbba11ec7284d4c1dd506f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjozODowOVrOF2CFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjozODowOVrOF2CFzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwMTY3Ng==", "bodyText": "This is basically testing some code in Feign, so I'll say not worth it.", "url": "https://github.com/palantir/atlasdb/pull/4648#discussion_r392201676", "createdAt": "2020-03-13T12:38:09Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/LeadersTest.java", "diffHunk": "@@ -116,19 +115,6 @@ public void createProxyAndLocalListCreatesSingletonListIfNoRemoteAddressesProvid\n         verifyNoMoreInteractions(localAcceptor);\n     }\n \n-    @Test(expected = IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9455e09a6178ba70cbba11ec7284d4c1dd506f8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2743a84468446fe55f86d75952950e034e369072", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/2743a84468446fe55f86d75952950e034e369072", "committedDate": "2020-03-13T15:38:53Z", "message": "Move synchronized block."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6135ed281b6f59ae0992931c1eda8fbf4fe9d34e", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/6135ed281b6f59ae0992931c1eda8fbf4fe9d34e", "committedDate": "2020-03-13T15:57:36Z", "message": "Use AbstractInvocationHandler."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "918c352890dafdf5a4fed893cb2f9298b7bef5b4", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/918c352890dafdf5a4fed893cb2f9298b7bef5b4", "committedDate": "2020-03-13T16:04:29Z", "message": "Fixup changelog."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2970, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}